begin_unit
comment|'#  Copyright 2012 Cloudbase Solutions Srl'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nTest suite for the Hyper-V driver and related APIs.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'contextlib'
newline|'\n'
name|'import'
name|'io'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'platform'
newline|'\n'
name|'import'
name|'shutil'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'import'
name|'mox'
newline|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'metadata'
name|'import'
name|'base'
name|'as'
name|'instance_metadata'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'power_state'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'image'
name|'import'
name|'glance'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'gettextutils'
name|'import'
name|'_'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'units'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fake_network'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
name|'import'
name|'fake'
name|'as'
name|'fake_image'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'matchers'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'db_fakes'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'fake'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'virt'
name|'import'
name|'test_driver'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'configdrive'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'basevolumeutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'constants'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'driver'
name|'as'
name|'driver_hyperv'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'hostutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'livemigrationutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'networkutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'networkutilsv2'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'pathutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'rdpconsoleutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'utilsfactory'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'vhdutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'vhdutilsv2'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'vmutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'vmutilsv2'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'volumeops'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'volumeutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'volumeutilsv2'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'images'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'vswitch_name'"
op|','
string|"'nova.virt.hyperv.vif'"
op|','
string|"'hyperv'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HyperVAPIBaseTestCase
name|'class'
name|'HyperVAPIBaseTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Base unit tests class for Hyper-V driver calls."""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'test_case_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_mox'
op|'='
name|'mox'
op|'.'
name|'Mox'
op|'('
op|')'
newline|'\n'
name|'super'
op|'('
name|'HyperVAPIBaseTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'test_case_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'HyperVAPIBaseTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'_project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'_instance_data'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_image_metadata'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_fetched_image'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_update_image_raise_exception'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'_volume_target_portal'
op|'='
string|"'testtargetportal:3260'"
newline|'\n'
name|'self'
op|'.'
name|'_volume_id'
op|'='
string|"'0ef5d708-45ab-4129-8c59-d774d2837eb7'"
newline|'\n'
name|'self'
op|'.'
name|'_context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'_user_id'
op|','
name|'self'
op|'.'
name|'_project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_instance_ide_disks'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_instance_ide_dvds'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_instance_volume_disks'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_test_vm_name'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_test_instance_dir'
op|'='
string|"'C:\\\\FakeInstancesPath\\\\instance-0000001'"
newline|'\n'
name|'self'
op|'.'
name|'_check_min_windows_version_satisfied'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_setup_stubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'instances_path'
op|'='
string|"r'C:\\Hyper-V\\test\\instances'"
op|','
nl|'\n'
name|'network_api_class'
op|'='
string|"'nova.network.neutronv2.api.API'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'force_volumeutils_v1'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'hyperv'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'force_hyperv_utils_v1'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'hyperv'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_conn'
op|'='
name|'driver_hyperv'
op|'.'
name|'HyperVDriver'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setup_stubs
dedent|''
name|'def'
name|'_setup_stubs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_fakes'
op|'.'
name|'stub_out_db_instance_api'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'fake_image'
op|'.'
name|'stub_out_image_service'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'fake_network'
op|'.'
name|'stub_out_nw_api_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_fetch
name|'def'
name|'fake_fetch'
op|'('
name|'context'
op|','
name|'image_id'
op|','
name|'target'
op|','
name|'user'
op|','
name|'project'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_fetched_image'
op|'='
name|'target'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'images'
op|','
string|"'fetch'"
op|','
name|'fake_fetch'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_remote_image_service
name|'def'
name|'fake_get_remote_image_service'
op|'('
name|'context'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
DECL|class|FakeGlanceImageService
indent|'            '
name|'class'
name|'FakeGlanceImageService'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|update
indent|'                '
name|'def'
name|'update'
op|'('
name|'self_fake'
op|','
name|'context'
op|','
name|'image_id'
op|','
name|'image_metadata'
op|','
name|'f'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'self'
op|'.'
name|'_update_image_raise_exception'
op|':'
newline|'\n'
indent|'                        '
name|'raise'
name|'vmutils'
op|'.'
name|'HyperVException'
op|'('
nl|'\n'
string|'"Simulated update failure"'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_image_metadata'
op|'='
name|'image_metadata'
newline|'\n'
dedent|''
dedent|''
name|'return'
op|'('
name|'FakeGlanceImageService'
op|'('
op|')'
op|','
number|'1'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'glance'
op|','
string|"'get_remote_image_service'"
op|','
nl|'\n'
name|'fake_get_remote_image_service'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_check_min_windows_version
name|'def'
name|'fake_check_min_windows_version'
op|'('
name|'fake_self'
op|','
name|'major'
op|','
name|'minor'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_check_min_windows_version_satisfied'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'hostutils'
op|'.'
name|'HostUtils'
op|','
string|"'check_min_windows_version'"
op|','
nl|'\n'
name|'fake_check_min_windows_version'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_sleep
name|'def'
name|'fake_sleep'
op|'('
name|'ms'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'time'
op|','
string|"'sleep'"
op|','
name|'fake_sleep'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_vmutils__init__
name|'def'
name|'fake_vmutils__init__'
op|'('
name|'self'
op|','
name|'host'
op|'='
string|"'.'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'__init__'
op|'='
name|'fake_vmutils__init__'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'pathutils'
op|','
string|"'PathUtils'"
op|','
name|'fake'
op|'.'
name|'PathUtils'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'fake'
op|'.'
name|'PathUtils'
op|','
string|"'open'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'fake'
op|'.'
name|'PathUtils'
op|','
string|"'copyfile'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'fake'
op|'.'
name|'PathUtils'
op|','
string|"'rmtree'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'fake'
op|'.'
name|'PathUtils'
op|','
string|"'copy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'fake'
op|'.'
name|'PathUtils'
op|','
string|"'remove'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'fake'
op|'.'
name|'PathUtils'
op|','
string|"'rename'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'fake'
op|'.'
name|'PathUtils'
op|','
string|"'makedirs'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'fake'
op|'.'
name|'PathUtils'
op|','
nl|'\n'
string|"'get_instance_migr_revert_dir'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'fake'
op|'.'
name|'PathUtils'
op|','
string|"'get_instance_dir'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
string|"'vm_exists'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
string|"'create_vm'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
string|"'destroy_vm'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
string|"'attach_ide_drive'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
string|"'create_scsi_controller'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
string|"'create_nic'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
string|"'set_vm_state'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
string|"'list_instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
string|"'get_vm_summary_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
string|"'take_vm_snapshot'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
string|"'remove_vm_snapshot'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
string|"'set_nic_connection'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
string|"'get_vm_scsi_controller'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
string|"'get_vm_ide_controller'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
string|"'get_attached_disks'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
nl|'\n'
string|"'attach_volume_to_controller'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
nl|'\n'
string|"'get_mounted_disk_by_drive_number'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
string|"'detach_vm_disk'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
string|"'get_vm_storage_paths'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
nl|'\n'
string|"'get_controller_volume_paths'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
nl|'\n'
string|"'enable_vm_metrics_collection'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
string|"'get_vm_id'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|','
string|"'create_differencing_vhd'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|','
string|"'reconnect_parent_vhd'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|','
string|"'merge_vhd'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|','
string|"'get_vhd_parent_path'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|','
string|"'get_vhd_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|','
string|"'resize_vhd'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|','
nl|'\n'
string|"'get_internal_vhd_size_by_file_size'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|','
string|"'validate_vhd'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|','
string|"'get_vhd_format'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|','
string|"'create_dynamic_vhd'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'hostutils'
op|'.'
name|'HostUtils'
op|','
string|"'get_cpus_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'hostutils'
op|'.'
name|'HostUtils'
op|','
nl|'\n'
string|"'is_cpu_feature_present'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'hostutils'
op|'.'
name|'HostUtils'
op|','
string|"'get_memory_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'hostutils'
op|'.'
name|'HostUtils'
op|','
string|"'get_volume_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'hostutils'
op|'.'
name|'HostUtils'
op|','
string|"'get_windows_version'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'hostutils'
op|'.'
name|'HostUtils'
op|','
string|"'get_local_ips'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'networkutils'
op|'.'
name|'NetworkUtils'
op|','
nl|'\n'
string|"'get_external_vswitch'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'networkutils'
op|'.'
name|'NetworkUtils'
op|','
nl|'\n'
string|"'create_vswitch_port'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'networkutils'
op|'.'
name|'NetworkUtils'
op|','
nl|'\n'
string|"'vswitch_port_needed'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'livemigrationutils'
op|'.'
name|'LiveMigrationUtils'
op|','
nl|'\n'
string|"'live_migrate_vm'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'livemigrationutils'
op|'.'
name|'LiveMigrationUtils'
op|','
nl|'\n'
string|"'check_live_migration_config'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'basevolumeutils'
op|'.'
name|'BaseVolumeUtils'
op|','
nl|'\n'
string|"'volume_in_mapping'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'basevolumeutils'
op|'.'
name|'BaseVolumeUtils'
op|','
nl|'\n'
string|"'get_session_id_from_mounted_disk'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'basevolumeutils'
op|'.'
name|'BaseVolumeUtils'
op|','
nl|'\n'
string|"'get_device_number_for_target'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'basevolumeutils'
op|'.'
name|'BaseVolumeUtils'
op|','
nl|'\n'
string|"'get_target_from_disk_path'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeutils'
op|'.'
name|'VolumeUtils'
op|','
nl|'\n'
string|"'login_storage_target'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeutils'
op|'.'
name|'VolumeUtils'
op|','
nl|'\n'
string|"'logout_storage_target'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeutils'
op|'.'
name|'VolumeUtils'
op|','
nl|'\n'
string|"'execute_log_out'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeutils'
op|'.'
name|'VolumeUtils'
op|','
nl|'\n'
string|"'get_iscsi_initiator'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeutilsv2'
op|'.'
name|'VolumeUtilsV2'
op|','
nl|'\n'
string|"'login_storage_target'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeutilsv2'
op|'.'
name|'VolumeUtilsV2'
op|','
nl|'\n'
string|"'logout_storage_target'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'volumeutilsv2'
op|'.'
name|'VolumeUtilsV2'
op|','
nl|'\n'
string|"'execute_log_out'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rdpconsoleutils'
op|'.'
name|'RDPConsoleUtils'
op|','
nl|'\n'
string|"'get_rdp_console_port'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutClassWithMocks'
op|'('
name|'instance_metadata'
op|','
string|"'InstanceMetadata'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance_metadata'
op|'.'
name|'InstanceMetadata'
op|','
nl|'\n'
string|"'metadata_for_config_drive'"
op|')'
newline|'\n'
nl|'\n'
comment|"# Can't use StubOutClassWithMocks due to __exit__ and __enter__"
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'configdrive'
op|','
string|"'ConfigDriveBuilder'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'configdrive'
op|'.'
name|'ConfigDriveBuilder'
op|','
string|"'make_drive'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|"'execute'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
name|'super'
op|'('
name|'HyperVAPIBaseTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'class'
name|'HyperVAPITestCase'
op|'('
name|'HyperVAPIBaseTestCase'
op|','
nl|'\n'
DECL|class|HyperVAPITestCase
name|'test_driver'
op|'.'
name|'DriverAPITestHelper'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for Hyper-V driver calls."""'
newline|'\n'
nl|'\n'
DECL|member|test_public_api_signatures
name|'def'
name|'test_public_api_signatures'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertPublicAPISignatures'
op|'('
name|'self'
op|'.'
name|'_conn'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_available_resource
dedent|''
name|'def'
name|'test_get_available_resource'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cpu_info'
op|'='
op|'{'
string|"'Architecture'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'Name'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'Manufacturer'"
op|':'
string|"'ACME, Inc.'"
op|','
nl|'\n'
string|"'NumberOfCores'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'NumberOfLogicalProcessors'"
op|':'
number|'4'
op|'}'
newline|'\n'
nl|'\n'
name|'tot_mem_kb'
op|'='
number|'2000000L'
newline|'\n'
name|'free_mem_kb'
op|'='
number|'1000000L'
newline|'\n'
nl|'\n'
name|'tot_hdd_b'
op|'='
number|'4L'
op|'*'
number|'1024'
op|'**'
number|'3'
newline|'\n'
name|'free_hdd_b'
op|'='
number|'3L'
op|'*'
number|'1024'
op|'**'
number|'3'
newline|'\n'
nl|'\n'
name|'windows_version'
op|'='
string|"'6.2.9200'"
newline|'\n'
nl|'\n'
name|'hostutils'
op|'.'
name|'HostUtils'
op|'.'
name|'get_memory_info'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
name|'tot_mem_kb'
op|','
nl|'\n'
name|'free_mem_kb'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'hostutils'
op|'.'
name|'HostUtils'
op|'.'
name|'get_volume_info'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
op|'('
name|'tot_hdd_b'
op|','
name|'free_hdd_b'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'hostutils'
op|'.'
name|'HostUtils'
op|'.'
name|'get_cpus_info'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'cpu_info'
op|']'
op|')'
newline|'\n'
name|'m'
op|'='
name|'hostutils'
op|'.'
name|'HostUtils'
op|'.'
name|'is_cpu_feature_present'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'int'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'MultipleTimes'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'hostutils'
op|'.'
name|'HostUtils'
op|'.'
name|'get_windows_version'
op|'('
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'windows_version'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'dic'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'get_available_resource'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dic'
op|'['
string|"'vcpus'"
op|']'
op|','
name|'cpu_info'
op|'['
string|"'NumberOfLogicalProcessors'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dic'
op|'['
string|"'hypervisor_hostname'"
op|']'
op|','
name|'platform'
op|'.'
name|'node'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dic'
op|'['
string|"'memory_mb'"
op|']'
op|','
name|'tot_mem_kb'
op|'/'
name|'units'
op|'.'
name|'Ki'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dic'
op|'['
string|"'memory_mb_used'"
op|']'
op|','
nl|'\n'
name|'tot_mem_kb'
op|'/'
name|'units'
op|'.'
name|'Ki'
op|'-'
name|'free_mem_kb'
op|'/'
name|'units'
op|'.'
name|'Ki'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dic'
op|'['
string|"'local_gb'"
op|']'
op|','
name|'tot_hdd_b'
op|'/'
name|'units'
op|'.'
name|'Gi'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dic'
op|'['
string|"'local_gb_used'"
op|']'
op|','
nl|'\n'
name|'tot_hdd_b'
op|'/'
name|'units'
op|'.'
name|'Gi'
op|'-'
name|'free_hdd_b'
op|'/'
name|'units'
op|'.'
name|'Gi'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dic'
op|'['
string|"'hypervisor_version'"
op|']'
op|','
nl|'\n'
name|'windows_version'
op|'.'
name|'replace'
op|'('
string|"'.'"
op|','
string|"''"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dic'
op|'['
string|"'supported_instances'"
op|']'
op|','
nl|'\n'
string|'\'[["i686", "hyperv", "hvm"], ["x86_64", "hyperv", "hvm"]]\''
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_host_stats
dedent|''
name|'def'
name|'test_get_host_stats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tot_mem_kb'
op|'='
number|'2000000L'
newline|'\n'
name|'free_mem_kb'
op|'='
number|'1000000L'
newline|'\n'
nl|'\n'
name|'tot_hdd_b'
op|'='
number|'4L'
op|'*'
number|'1024'
op|'**'
number|'3'
newline|'\n'
name|'free_hdd_b'
op|'='
number|'3L'
op|'*'
number|'1024'
op|'**'
number|'3'
newline|'\n'
nl|'\n'
name|'hostutils'
op|'.'
name|'HostUtils'
op|'.'
name|'get_memory_info'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
name|'tot_mem_kb'
op|','
nl|'\n'
name|'free_mem_kb'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'hostutils'
op|'.'
name|'HostUtils'
op|'.'
name|'get_volume_info'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
op|'('
name|'tot_hdd_b'
op|','
name|'free_hdd_b'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'dic'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'get_host_stats'
op|'('
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dic'
op|'['
string|"'disk_total'"
op|']'
op|','
name|'tot_hdd_b'
op|'/'
number|'1024'
op|'**'
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dic'
op|'['
string|"'disk_available'"
op|']'
op|','
name|'free_hdd_b'
op|'/'
number|'1024'
op|'**'
number|'3'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dic'
op|'['
string|"'host_memory_total'"
op|']'
op|','
name|'tot_mem_kb'
op|'/'
number|'1024'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dic'
op|'['
string|"'host_memory_free'"
op|']'
op|','
name|'free_mem_kb'
op|'/'
number|'1024'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dic'
op|'['
string|"'disk_total'"
op|']'
op|','
nl|'\n'
name|'dic'
op|'['
string|"'disk_used'"
op|']'
op|'+'
name|'dic'
op|'['
string|"'disk_available'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dic'
op|'['
string|"'host_memory_total'"
op|']'
op|','
nl|'\n'
name|'dic'
op|'['
string|"'host_memory_overhead'"
op|']'
op|'+'
nl|'\n'
name|'dic'
op|'['
string|"'host_memory_free'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_instances
dedent|''
name|'def'
name|'test_list_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_instances'
op|'='
op|'['
string|"'fake1'"
op|','
string|"'fake2'"
op|']'
newline|'\n'
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'list_instances'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_instances'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instances'
op|','
name|'fake_instances'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_info
dedent|''
name|'def'
name|'test_get_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_instance_data'
op|'='
name|'self'
op|'.'
name|'_get_instance_data'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'summary_info'
op|'='
op|'{'
string|"'NumberOfProcessors'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'EnabledState'"
op|':'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_ENABLED'
op|','
nl|'\n'
string|"'MemoryUsage'"
op|':'
number|'1000'
op|','
nl|'\n'
string|"'UpTime'"
op|':'
number|'1'
op|'}'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'vm_exists'
op|'('
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_instance_name'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'func'
op|'='
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_instance_name'
op|')'
newline|'\n'
name|'m'
op|'='
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'get_vm_summary_info'
op|'('
name|'func'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'summary_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'get_info'
op|'('
name|'self'
op|'.'
name|'_instance_data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|'"state"'
op|']'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_info_instance_not_found
dedent|''
name|'def'
name|'test_get_info_instance_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Tests that InstanceNotFound is raised if the instance isn't found"
nl|'\n'
comment|'# from the vmutils.vm_exists method.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_instance_data'
op|'='
name|'self'
op|'.'
name|'_get_instance_data'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'vm_exists'
op|'('
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_instance_name'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'get_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_instance_data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_cow_image
dedent|''
name|'def'
name|'test_spawn_cow_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_spawn_instance'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_cow_image_vhdx
dedent|''
name|'def'
name|'test_spawn_cow_image_vhdx'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_spawn_instance'
op|'('
name|'True'
op|','
name|'vhd_format'
op|'='
name|'constants'
op|'.'
name|'DISK_FORMAT_VHDX'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_no_cow_image
dedent|''
name|'def'
name|'test_spawn_no_cow_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_spawn_instance'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_dynamic_memory
dedent|''
name|'def'
name|'test_spawn_dynamic_memory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'CONF'
op|'.'
name|'set_override'
op|'('
string|"'dynamic_memory_ratio'"
op|','
number|'2.0'
op|','
string|"'hyperv'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_spawn_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_no_cow_image_vhdx
dedent|''
name|'def'
name|'test_spawn_no_cow_image_vhdx'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_spawn_instance'
op|'('
name|'False'
op|','
name|'vhd_format'
op|'='
name|'constants'
op|'.'
name|'DISK_FORMAT_VHDX'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setup_spawn_config_drive_mocks
dedent|''
name|'def'
name|'_setup_spawn_config_drive_mocks'
op|'('
name|'self'
op|','
name|'use_cdrom'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_metadata'
op|'.'
name|'InstanceMetadata'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'content'
op|'='
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'list'
op|')'
op|','
nl|'\n'
name|'extra_md'
op|'='
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'dict'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'get_instance_dir'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'_test_instance_dir'
op|')'
newline|'\n'
nl|'\n'
name|'cdb'
op|'='
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'CreateMockAnything'
op|'('
op|')'
newline|'\n'
name|'m'
op|'='
name|'configdrive'
op|'.'
name|'ConfigDriveBuilder'
op|'('
name|'instance_md'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'cdb'
op|')'
newline|'\n'
comment|'# __enter__ and __exit__ are required by "with"'
nl|'\n'
name|'cdb'
op|'.'
name|'__enter__'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'cdb'
op|')'
newline|'\n'
name|'cdb'
op|'.'
name|'make_drive'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'cdb'
op|'.'
name|'__exit__'
op|'('
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'use_cdrom'
op|':'
newline|'\n'
indent|'            '
name|'utils'
op|'.'
name|'execute'
op|'('
name|'CONF'
op|'.'
name|'hyperv'
op|'.'
name|'qemu_img_cmd'
op|','
nl|'\n'
string|"'convert'"
op|','
nl|'\n'
string|"'-f'"
op|','
nl|'\n'
string|"'raw'"
op|','
nl|'\n'
string|"'-O'"
op|','
nl|'\n'
string|"'vpc'"
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
nl|'\n'
name|'attempts'
op|'='
number|'1'
op|')'
newline|'\n'
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'remove'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'m'
op|'='
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'attach_ide_drive'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'int'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'int'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'WithSideEffects'
op|'('
name|'self'
op|'.'
name|'_add_ide_disk'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_spawn_config_drive
dedent|''
name|'def'
name|'_test_spawn_config_drive'
op|'('
name|'self'
op|','
name|'use_cdrom'
op|','
name|'format_error'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'force_config_drive'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'config_drive_cdrom'
op|'='
name|'use_cdrom'
op|','
name|'group'
op|'='
string|"'hyperv'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'mkisofs_cmd'
op|'='
string|"'mkisofs.exe'"
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'use_cdrom'
op|':'
newline|'\n'
indent|'            '
name|'expected_ide_disks'
op|'='
number|'1'
newline|'\n'
name|'expected_ide_dvds'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'expected_ide_disks'
op|'='
number|'2'
newline|'\n'
name|'expected_ide_dvds'
op|'='
number|'0'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'format_error'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'vmutils'
op|'.'
name|'UnsupportedConfigDriveFormatException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_spawn_instance'
op|','
nl|'\n'
name|'with_exception'
op|'='
name|'True'
op|','
nl|'\n'
name|'config_drive'
op|'='
name|'True'
op|','
nl|'\n'
name|'use_cdrom'
op|'='
name|'use_cdrom'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_test_spawn_instance'
op|'('
name|'expected_ide_disks'
op|'='
name|'expected_ide_disks'
op|','
nl|'\n'
name|'expected_ide_dvds'
op|'='
name|'expected_ide_dvds'
op|','
nl|'\n'
name|'config_drive'
op|'='
name|'True'
op|','
nl|'\n'
name|'use_cdrom'
op|'='
name|'use_cdrom'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_config_drive
dedent|''
dedent|''
name|'def'
name|'test_spawn_config_drive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_spawn_config_drive'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_config_drive_format_error
dedent|''
name|'def'
name|'test_spawn_config_drive_format_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'CONF'
op|'.'
name|'set_override'
op|'('
string|"'config_drive_format'"
op|','
string|"'wrong_format'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_spawn_config_drive'
op|'('
name|'True'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_config_drive_cdrom
dedent|''
name|'def'
name|'test_spawn_config_drive_cdrom'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_spawn_config_drive'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_no_config_drive
dedent|''
name|'def'
name|'test_spawn_no_config_drive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'force_config_drive'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'expected_ide_disks'
op|'='
number|'1'
newline|'\n'
name|'expected_ide_dvds'
op|'='
number|'0'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_spawn_instance'
op|'('
name|'expected_ide_disks'
op|'='
name|'expected_ide_disks'
op|','
nl|'\n'
name|'expected_ide_dvds'
op|'='
name|'expected_ide_dvds'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_spawn_nova_net_vif
dedent|''
name|'def'
name|'_test_spawn_nova_net_vif'
op|'('
name|'self'
op|','
name|'with_port'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
string|"'nova.network.api.API'"
op|')'
newline|'\n'
comment|'# Reinstantiate driver, as the VIF plugin is loaded during __init__'
nl|'\n'
name|'self'
op|'.'
name|'_conn'
op|'='
name|'driver_hyperv'
op|'.'
name|'HyperVDriver'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|function|setup_vif_mocks
name|'def'
name|'setup_vif_mocks'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fake_vswitch_path'
op|'='
string|"'fake vswitch path'"
newline|'\n'
name|'fake_vswitch_port'
op|'='
string|"'fake port'"
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'networkutils'
op|'.'
name|'NetworkUtils'
op|'.'
name|'get_external_vswitch'
op|'('
nl|'\n'
name|'CONF'
op|'.'
name|'hyperv'
op|'.'
name|'vswitch_name'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'fake_vswitch_path'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'networkutils'
op|'.'
name|'NetworkUtils'
op|'.'
name|'vswitch_port_needed'
op|'('
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'with_port'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'with_port'
op|':'
newline|'\n'
indent|'                '
name|'m'
op|'='
name|'networkutils'
op|'.'
name|'NetworkUtils'
op|'.'
name|'create_vswitch_port'
op|'('
nl|'\n'
name|'fake_vswitch_path'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'fake_vswitch_port'
op|')'
newline|'\n'
name|'vswitch_conn_data'
op|'='
name|'fake_vswitch_port'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'vswitch_conn_data'
op|'='
name|'fake_vswitch_path'
newline|'\n'
nl|'\n'
dedent|''
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'set_nic_connection'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
name|'vswitch_conn_data'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_test_spawn_instance'
op|'('
name|'setup_vif_mocks_func'
op|'='
name|'setup_vif_mocks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_nova_net_vif_with_port
dedent|''
name|'def'
name|'test_spawn_nova_net_vif_with_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_spawn_nova_net_vif'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_nova_net_vif_without_port
dedent|''
name|'def'
name|'test_spawn_nova_net_vif_without_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_spawn_nova_net_vif'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_nova_net_vif_no_vswitch_exception
dedent|''
name|'def'
name|'test_spawn_nova_net_vif_no_vswitch_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
string|"'nova.network.api.API'"
op|')'
newline|'\n'
comment|'# Reinstantiate driver, as the VIF plugin is loaded during __init__'
nl|'\n'
name|'self'
op|'.'
name|'_conn'
op|'='
name|'driver_hyperv'
op|'.'
name|'HyperVDriver'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|function|setup_vif_mocks
name|'def'
name|'setup_vif_mocks'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'='
name|'networkutils'
op|'.'
name|'NetworkUtils'
op|'.'
name|'get_external_vswitch'
op|'('
nl|'\n'
name|'CONF'
op|'.'
name|'hyperv'
op|'.'
name|'vswitch_name'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndRaise'
op|'('
name|'vmutils'
op|'.'
name|'HyperVException'
op|'('
name|'_'
op|'('
string|"'fake vswitch not found'"
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'vmutils'
op|'.'
name|'HyperVException'
op|','
name|'self'
op|'.'
name|'_test_spawn_instance'
op|','
nl|'\n'
name|'setup_vif_mocks_func'
op|'='
name|'setup_vif_mocks'
op|','
nl|'\n'
name|'with_exception'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_metrics_collection
dedent|''
name|'def'
name|'test_spawn_with_metrics_collection'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enable_instance_metrics_collection'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'hyperv'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_spawn_instance'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_with_ephemeral_storage
dedent|''
name|'def'
name|'test_spawn_with_ephemeral_storage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_spawn_instance'
op|'('
name|'True'
op|','
name|'expected_ide_disks'
op|'='
number|'2'
op|','
nl|'\n'
name|'ephemeral_storage'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_instance_name
dedent|''
name|'def'
name|'_check_instance_name'
op|'('
name|'self'
op|','
name|'vm_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'vm_name'
op|'=='
name|'self'
op|'.'
name|'_instance_data'
op|'['
string|"'name'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|_test_vm_state_change
dedent|''
name|'def'
name|'_test_vm_state_change'
op|'('
name|'self'
op|','
name|'action'
op|','
name|'from_state'
op|','
name|'to_state'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_instance_data'
op|'='
name|'self'
op|'.'
name|'_get_instance_data'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'set_vm_state'
op|'('
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_instance_name'
op|')'
op|','
nl|'\n'
name|'to_state'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'action'
op|'('
name|'self'
op|'.'
name|'_instance_data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pause
dedent|''
name|'def'
name|'test_pause'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_vm_state_change'
op|'('
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'pause'
op|','
name|'None'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_PAUSED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pause_already_paused
dedent|''
name|'def'
name|'test_pause_already_paused'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_vm_state_change'
op|'('
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'pause'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_PAUSED'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_PAUSED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unpause
dedent|''
name|'def'
name|'test_unpause'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_vm_state_change'
op|'('
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'unpause'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_PAUSED'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_ENABLED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unpause_already_running
dedent|''
name|'def'
name|'test_unpause_already_running'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_vm_state_change'
op|'('
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'unpause'
op|','
name|'None'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_ENABLED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_suspend
dedent|''
name|'def'
name|'test_suspend'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_vm_state_change'
op|'('
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'suspend'
op|','
name|'None'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_SUSPENDED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_suspend_already_suspended
dedent|''
name|'def'
name|'test_suspend_already_suspended'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_vm_state_change'
op|'('
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'suspend'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_SUSPENDED'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_SUSPENDED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume
dedent|''
name|'def'
name|'test_resume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_vm_state_change'
op|'('
name|'lambda'
name|'i'
op|':'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'resume'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
nl|'\n'
name|'i'
op|','
name|'None'
op|')'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_SUSPENDED'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_ENABLED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_already_running
dedent|''
name|'def'
name|'test_resume_already_running'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_vm_state_change'
op|'('
name|'lambda'
name|'i'
op|':'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'resume'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
nl|'\n'
name|'i'
op|','
name|'None'
op|')'
op|','
name|'None'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_ENABLED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_power_off
dedent|''
name|'def'
name|'test_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_vm_state_change'
op|'('
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'power_off'
op|','
name|'None'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_DISABLED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_power_off_already_powered_off
dedent|''
name|'def'
name|'test_power_off_already_powered_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_vm_state_change'
op|'('
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'power_off'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_DISABLED'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_DISABLED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_power_on
dedent|''
name|'def'
name|'test_power_on'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_instance_data'
op|'='
name|'self'
op|'.'
name|'_get_instance_data'
op|'('
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'set_vm_state'
op|'('
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_instance_name'
op|')'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_ENABLED'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'power_on'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'self'
op|'.'
name|'_instance_data'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_power_on_already_running
dedent|''
name|'def'
name|'test_power_on_already_running'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_instance_data'
op|'='
name|'self'
op|'.'
name|'_get_instance_data'
op|'('
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'set_vm_state'
op|'('
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_instance_name'
op|')'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_ENABLED'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'power_on'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'self'
op|'.'
name|'_instance_data'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot
dedent|''
name|'def'
name|'test_reboot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'network_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_instance_data'
op|'='
name|'self'
op|'.'
name|'_get_instance_data'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'set_vm_state'
op|'('
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_instance_name'
op|')'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_REBOOT'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'reboot'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'self'
op|'.'
name|'_instance_data'
op|','
name|'network_info'
op|','
nl|'\n'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setup_destroy_mocks
dedent|''
name|'def'
name|'_setup_destroy_mocks'
op|'('
name|'self'
op|','
name|'destroy_disks'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'m'
op|'='
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'vm_exists'
op|'('
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_instance_name'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'func'
op|'='
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_instance_name'
op|')'
newline|'\n'
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'set_vm_state'
op|'('
name|'func'
op|','
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_DISABLED'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'get_vm_storage_paths'
op|'('
name|'func'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
op|'('
op|'['
op|']'
op|','
op|'['
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'destroy_vm'
op|'('
name|'func'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'destroy_disks'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'='
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'get_instance_dir'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
nl|'\n'
name|'create_dir'
op|'='
name|'False'
op|','
nl|'\n'
name|'remove_dir'
op|'='
name|'True'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'_test_instance_dir'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_destroy
dedent|''
dedent|''
name|'def'
name|'test_destroy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_instance_data'
op|'='
name|'self'
op|'.'
name|'_get_instance_data'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_setup_destroy_mocks'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'destroy'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'self'
op|'.'
name|'_instance_data'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_unsupported_os
dedent|''
name|'def'
name|'test_live_migration_unsupported_os'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_check_min_windows_version_satisfied'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'='
name|'driver_hyperv'
op|'.'
name|'HyperVDriver'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_live_migration'
op|'('
name|'unsupported_os'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_without_volumes
dedent|''
name|'def'
name|'test_live_migration_without_volumes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_live_migration'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_with_volumes
dedent|''
name|'def'
name|'test_live_migration_with_volumes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_live_migration'
op|'('
name|'with_volumes'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_with_target_failure
dedent|''
name|'def'
name|'test_live_migration_with_target_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_live_migration'
op|'('
name|'test_failure'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_live_migration
dedent|''
name|'def'
name|'_test_live_migration'
op|'('
name|'self'
op|','
name|'test_failure'
op|'='
name|'False'
op|','
nl|'\n'
name|'with_volumes'
op|'='
name|'False'
op|','
nl|'\n'
name|'unsupported_os'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dest_server'
op|'='
string|"'fake_server'"
newline|'\n'
nl|'\n'
name|'instance_data'
op|'='
name|'self'
op|'.'
name|'_get_instance_data'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'fake_post_method'
op|'='
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'CreateMockAnything'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'test_failure'
name|'and'
name|'not'
name|'unsupported_os'
op|':'
newline|'\n'
indent|'            '
name|'fake_post_method'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'instance_data'
op|','
name|'dest_server'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fake_recover_method'
op|'='
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'CreateMockAnything'
op|'('
op|')'
newline|'\n'
name|'if'
name|'test_failure'
op|':'
newline|'\n'
indent|'            '
name|'fake_recover_method'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'instance_data'
op|','
name|'dest_server'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'with_volumes'
op|':'
newline|'\n'
indent|'            '
name|'fake_target_iqn'
op|'='
string|"'fake_target_iqn'"
newline|'\n'
name|'fake_target_lun'
op|'='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'unsupported_os'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'='
name|'livemigrationutils'
op|'.'
name|'LiveMigrationUtils'
op|'.'
name|'live_migrate_vm'
op|'('
nl|'\n'
name|'instance_data'
op|'['
string|"'name'"
op|']'
op|','
name|'dest_server'
op|')'
newline|'\n'
name|'if'
name|'test_failure'
op|':'
newline|'\n'
indent|'                '
name|'m'
op|'.'
name|'AndRaise'
op|'('
name|'vmutils'
op|'.'
name|'HyperVException'
op|'('
string|"'Simulated failure'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'with_volumes'
op|':'
newline|'\n'
indent|'                '
name|'m'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|'('
name|'fake_target_iqn'
op|','
name|'fake_target_lun'
op|')'
op|']'
op|')'
newline|'\n'
name|'volumeutils'
op|'.'
name|'VolumeUtils'
op|'.'
name|'logout_storage_target'
op|'('
name|'fake_target_iqn'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'m'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'hyperv_exception_raised'
op|'='
name|'False'
newline|'\n'
name|'unsupported_os_exception_raised'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'live_migration'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'instance_data'
op|','
nl|'\n'
name|'dest_server'
op|','
name|'fake_post_method'
op|','
nl|'\n'
name|'fake_recover_method'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'vmutils'
op|'.'
name|'HyperVException'
op|':'
newline|'\n'
indent|'            '
name|'hyperv_exception_raised'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'except'
name|'NotImplementedError'
op|':'
newline|'\n'
indent|'            '
name|'unsupported_os_exception_raised'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'not'
name|'test_failure'
op|'^'
name|'hyperv_exception_raised'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'not'
name|'unsupported_os'
op|'^'
name|'unsupported_os_exception_raised'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_live_migration_cow_image
dedent|''
name|'def'
name|'test_pre_live_migration_cow_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_pre_live_migration'
op|'('
name|'True'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_live_migration_no_cow_image
dedent|''
name|'def'
name|'test_pre_live_migration_no_cow_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_pre_live_migration'
op|'('
name|'False'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_live_migration_with_volumes
dedent|''
name|'def'
name|'test_pre_live_migration_with_volumes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_pre_live_migration'
op|'('
name|'False'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_pre_live_migration
dedent|''
name|'def'
name|'_test_pre_live_migration'
op|'('
name|'self'
op|','
name|'cow'
op|','
name|'with_volumes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_cow_images'
op|'='
name|'cow'
op|')'
newline|'\n'
nl|'\n'
name|'instance_data'
op|'='
name|'self'
op|'.'
name|'_get_instance_data'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'instance_data'
op|')'
newline|'\n'
name|'instance'
op|'['
string|"'system_metadata'"
op|']'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'network_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'livemigrationutils'
op|'.'
name|'LiveMigrationUtils'
op|'.'
name|'check_live_migration_config'
op|'('
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'cow'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'='
name|'basevolumeutils'
op|'.'
name|'BaseVolumeUtils'
op|'.'
name|'volume_in_mapping'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
nl|'\n'
name|'None'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_setup_get_cached_image_mocks'
op|'('
name|'cow'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'with_volumes'
op|':'
newline|'\n'
indent|'            '
name|'block_device_info'
op|'='
name|'db_fakes'
op|'.'
name|'get_fake_block_device_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_volume_target_portal'
op|','
name|'self'
op|'.'
name|'_volume_id'
op|')'
newline|'\n'
nl|'\n'
name|'mapping'
op|'='
name|'driver'
op|'.'
name|'block_device_info_get_mapping'
op|'('
name|'block_device_info'
op|')'
newline|'\n'
name|'data'
op|'='
name|'mapping'
op|'['
number|'0'
op|']'
op|'['
string|"'connection_info'"
op|']'
op|'['
string|"'data'"
op|']'
newline|'\n'
name|'target_lun'
op|'='
name|'data'
op|'['
string|"'target_lun'"
op|']'
newline|'\n'
name|'target_iqn'
op|'='
name|'data'
op|'['
string|"'target_iqn'"
op|']'
newline|'\n'
name|'target_portal'
op|'='
name|'data'
op|'['
string|"'target_portal'"
op|']'
newline|'\n'
nl|'\n'
name|'fake_mounted_disk'
op|'='
string|'"fake_mounted_disk"'
newline|'\n'
name|'fake_device_number'
op|'='
number|'0'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mock_login_storage_target'
op|'('
name|'target_iqn'
op|','
name|'target_lun'
op|','
nl|'\n'
name|'target_portal'
op|','
nl|'\n'
name|'fake_mounted_disk'
op|','
nl|'\n'
name|'fake_device_number'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'block_device_info'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'pre_live_migration'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'instance'
op|','
nl|'\n'
name|'block_device_info'
op|','
name|'None'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'cow'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'self'
op|'.'
name|'_fetched_image'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'self'
op|'.'
name|'_fetched_image'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_with_update_failure
dedent|''
dedent|''
name|'def'
name|'test_snapshot_with_update_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
op|'('
name|'snapshot_name'
op|','
name|'func_call_matcher'
op|')'
op|'='
name|'self'
op|'.'
name|'_setup_snapshot_mocks'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_update_image_raise_exception'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'vmutils'
op|'.'
name|'HyperVException'
op|','
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'snapshot'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_context'
op|','
name|'self'
op|'.'
name|'_instance_data'
op|','
name|'snapshot_name'
op|','
nl|'\n'
name|'func_call_matcher'
op|'.'
name|'call'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Assert states changed in correct order'
nl|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'func_call_matcher'
op|'.'
name|'match'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setup_snapshot_mocks
dedent|''
name|'def'
name|'_setup_snapshot_mocks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_calls'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'args'"
op|':'
op|'('
op|')'
op|','
nl|'\n'
string|"'kwargs'"
op|':'
op|'{'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_UPLOADING'
op|','
nl|'\n'
string|"'expected_state'"
op|':'
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
op|'}'
op|'}'
nl|'\n'
op|']'
newline|'\n'
name|'func_call_matcher'
op|'='
name|'matchers'
op|'.'
name|'FunctionCallMatcher'
op|'('
name|'expected_calls'
op|')'
newline|'\n'
nl|'\n'
name|'snapshot_name'
op|'='
string|"'test_snapshot_'"
op|'+'
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'fake_hv_snapshot_path'
op|'='
string|"'fake_snapshot_path'"
newline|'\n'
name|'fake_parent_vhd_path'
op|'='
string|"'C:\\\\fake_vhd_path\\\\parent.vhd'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_instance_data'
op|'='
name|'self'
op|'.'
name|'_get_instance_data'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'func'
op|'='
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_instance_name'
op|')'
newline|'\n'
name|'m'
op|'='
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'take_vm_snapshot'
op|'('
name|'func'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'fake_hv_snapshot_path'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'get_instance_dir'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'_test_instance_dir'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|'.'
name|'get_vhd_parent_path'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'fake_parent_vhd_path'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_fake_dest_disk_path'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|function|copy_dest_disk_path
name|'def'
name|'copy_dest_disk_path'
op|'('
name|'src'
op|','
name|'dest'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_fake_dest_disk_path'
op|'='
name|'dest'
newline|'\n'
nl|'\n'
dedent|''
name|'m'
op|'='
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'copyfile'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'WithSideEffects'
op|'('
name|'copy_dest_disk_path'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_fake_dest_base_disk_path'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|function|copy_dest_base_disk_path
name|'def'
name|'copy_dest_base_disk_path'
op|'('
name|'src'
op|','
name|'dest'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_fake_dest_base_disk_path'
op|'='
name|'dest'
newline|'\n'
nl|'\n'
dedent|''
name|'m'
op|'='
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'copyfile'
op|'('
name|'fake_parent_vhd_path'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'WithSideEffects'
op|'('
name|'copy_dest_base_disk_path'
op|')'
newline|'\n'
nl|'\n'
DECL|function|check_dest_disk_path
name|'def'
name|'check_dest_disk_path'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'path'
op|'=='
name|'self'
op|'.'
name|'_fake_dest_disk_path'
newline|'\n'
nl|'\n'
DECL|function|check_dest_base_disk_path
dedent|''
name|'def'
name|'check_dest_base_disk_path'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'path'
op|'=='
name|'self'
op|'.'
name|'_fake_dest_base_disk_path'
newline|'\n'
nl|'\n'
dedent|''
name|'func1'
op|'='
name|'mox'
op|'.'
name|'Func'
op|'('
name|'check_dest_disk_path'
op|')'
newline|'\n'
name|'func2'
op|'='
name|'mox'
op|'.'
name|'Func'
op|'('
name|'check_dest_base_disk_path'
op|')'
newline|'\n'
comment|'# Make sure that the hyper-v base and differential VHDs are merged'
nl|'\n'
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|'.'
name|'reconnect_parent_vhd'
op|'('
name|'func1'
op|','
name|'func2'
op|')'
newline|'\n'
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|'.'
name|'merge_vhd'
op|'('
name|'func1'
op|','
name|'func2'
op|')'
newline|'\n'
nl|'\n'
DECL|function|check_snapshot_path
name|'def'
name|'check_snapshot_path'
op|'('
name|'snapshot_path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'snapshot_path'
op|'=='
name|'fake_hv_snapshot_path'
newline|'\n'
nl|'\n'
comment|'# Make sure that the Hyper-V snapshot is removed'
nl|'\n'
dedent|''
name|'func'
op|'='
name|'mox'
op|'.'
name|'Func'
op|'('
name|'check_snapshot_path'
op|')'
newline|'\n'
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'remove_vm_snapshot'
op|'('
name|'func'
op|')'
newline|'\n'
nl|'\n'
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'rmtree'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'open'
op|'('
name|'func2'
op|','
string|"'rb'"
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'io'
op|'.'
name|'BytesIO'
op|'('
string|"b'fake content'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'return'
op|'('
name|'snapshot_name'
op|','
name|'func_call_matcher'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot
dedent|''
name|'def'
name|'test_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
op|'('
name|'snapshot_name'
op|','
name|'func_call_matcher'
op|')'
op|'='
name|'self'
op|'.'
name|'_setup_snapshot_mocks'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'snapshot'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'self'
op|'.'
name|'_instance_data'
op|','
name|'snapshot_name'
op|','
nl|'\n'
name|'func_call_matcher'
op|'.'
name|'call'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_image_metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|'"disk_format"'
op|','
name|'self'
op|'.'
name|'_image_metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"vhd"'
op|','
name|'self'
op|'.'
name|'_image_metadata'
op|'['
string|'"disk_format"'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Assert states changed in correct order'
nl|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'func_call_matcher'
op|'.'
name|'match'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_instance_data
dedent|''
name|'def'
name|'_get_instance_data'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_name'
op|'='
string|"'openstack_unit_test_vm_'"
op|'+'
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'return'
name|'db_fakes'
op|'.'
name|'get_fake_instance_data'
op|'('
name|'instance_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_project_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_user_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_spawn_instance
dedent|''
name|'def'
name|'_spawn_instance'
op|'('
name|'self'
op|','
name|'cow'
op|','
name|'block_device_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'ephemeral_storage'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_cow_images'
op|'='
name|'cow'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_instance_data'
op|'='
name|'self'
op|'.'
name|'_get_instance_data'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'self'
op|'.'
name|'_instance_data'
op|')'
newline|'\n'
name|'instance'
op|'['
string|"'system_metadata'"
op|']'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'if'
name|'ephemeral_storage'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'['
string|"'ephemeral_gb'"
op|']'
op|'='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'image'
op|'='
name|'db_fakes'
op|'.'
name|'get_fake_image_data'
op|'('
name|'self'
op|'.'
name|'_project_id'
op|','
name|'self'
op|'.'
name|'_user_id'
op|')'
newline|'\n'
nl|'\n'
name|'network_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'instance'
op|','
name|'image'
op|','
nl|'\n'
name|'injected_files'
op|'='
op|'['
op|']'
op|','
name|'admin_password'
op|'='
name|'None'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'block_device_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_add_ide_disk
dedent|''
name|'def'
name|'_add_ide_disk'
op|'('
name|'self'
op|','
name|'vm_name'
op|','
name|'path'
op|','
name|'ctrller_addr'
op|','
nl|'\n'
name|'drive_addr'
op|','
name|'drive_type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'drive_type'
op|'=='
name|'constants'
op|'.'
name|'IDE_DISK'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_instance_ide_disks'
op|'.'
name|'append'
op|'('
name|'path'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'drive_type'
op|'=='
name|'constants'
op|'.'
name|'IDE_DVD'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_instance_ide_dvds'
op|'.'
name|'append'
op|'('
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_add_volume_disk
dedent|''
dedent|''
name|'def'
name|'_add_volume_disk'
op|'('
name|'self'
op|','
name|'vm_name'
op|','
name|'controller_path'
op|','
name|'address'
op|','
nl|'\n'
name|'mounted_disk_path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_instance_volume_disks'
op|'.'
name|'append'
op|'('
name|'mounted_disk_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_img_path
dedent|''
name|'def'
name|'_check_img_path'
op|'('
name|'self'
op|','
name|'image_path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'image_path'
op|'=='
name|'self'
op|'.'
name|'_fetched_image'
newline|'\n'
nl|'\n'
DECL|member|_setup_create_instance_mocks
dedent|''
name|'def'
name|'_setup_create_instance_mocks'
op|'('
name|'self'
op|','
name|'setup_vif_mocks_func'
op|'='
name|'None'
op|','
nl|'\n'
name|'boot_from_volume'
op|'='
name|'False'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'admin_permissions'
op|'='
name|'True'
op|','
nl|'\n'
name|'ephemeral_storage'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'create_vm'
op|'('
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_vm_name'
op|')'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'int'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'int'
op|')'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'bool'
op|')'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'hyperv'
op|'.'
name|'dynamic_memory_ratio'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'boot_from_volume'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'='
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'attach_ide_drive'
op|'('
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_vm_name'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'int'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'int'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'WithSideEffects'
op|'('
name|'self'
op|'.'
name|'_add_ide_disk'
op|')'
op|'.'
name|'InAnyOrder'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'ephemeral_storage'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'='
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'attach_ide_drive'
op|'('
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_vm_name'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'int'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'int'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'WithSideEffects'
op|'('
name|'self'
op|'.'
name|'_add_ide_disk'
op|')'
op|'.'
name|'InAnyOrder'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'func'
op|'='
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_vm_name'
op|')'
newline|'\n'
name|'m'
op|'='
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'create_scsi_controller'
op|'('
name|'func'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'InAnyOrder'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'boot_from_volume'
op|':'
newline|'\n'
indent|'            '
name|'mapping'
op|'='
name|'driver'
op|'.'
name|'block_device_info_get_mapping'
op|'('
name|'block_device_info'
op|')'
newline|'\n'
name|'data'
op|'='
name|'mapping'
op|'['
number|'0'
op|']'
op|'['
string|"'connection_info'"
op|']'
op|'['
string|"'data'"
op|']'
newline|'\n'
name|'target_lun'
op|'='
name|'data'
op|'['
string|"'target_lun'"
op|']'
newline|'\n'
name|'target_iqn'
op|'='
name|'data'
op|'['
string|"'target_iqn'"
op|']'
newline|'\n'
name|'target_portal'
op|'='
name|'data'
op|'['
string|"'target_portal'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mock_attach_volume'
op|'('
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_vm_name'
op|')'
op|','
name|'target_iqn'
op|','
nl|'\n'
name|'target_lun'
op|','
name|'target_portal'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'create_nic'
op|'('
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_vm_name'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'unicode'
op|')'
op|')'
op|'.'
name|'InAnyOrder'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'setup_vif_mocks_func'
op|':'
newline|'\n'
indent|'            '
name|'setup_vif_mocks_func'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'CONF'
op|'.'
name|'hyperv'
op|'.'
name|'enable_instance_metrics_collection'
op|':'
newline|'\n'
indent|'            '
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'enable_vm_metrics_collection'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_vm_name'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_set_vm_name
dedent|''
dedent|''
name|'def'
name|'_set_vm_name'
op|'('
name|'self'
op|','
name|'vm_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_vm_name'
op|'='
name|'vm_name'
newline|'\n'
nl|'\n'
DECL|member|_check_vm_name
dedent|''
name|'def'
name|'_check_vm_name'
op|'('
name|'self'
op|','
name|'vm_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'vm_name'
op|'=='
name|'self'
op|'.'
name|'_test_vm_name'
newline|'\n'
nl|'\n'
DECL|member|_setup_check_admin_permissions_mocks
dedent|''
name|'def'
name|'_setup_check_admin_permissions_mocks'
op|'('
name|'self'
op|','
name|'admin_permissions'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
nl|'\n'
string|"'check_admin_permissions'"
op|')'
newline|'\n'
name|'m'
op|'='
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'check_admin_permissions'
op|'('
op|')'
newline|'\n'
name|'if'
name|'admin_permissions'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'None'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'.'
name|'AndRaise'
op|'('
name|'vmutils'
op|'.'
name|'HyperVAuthorizationException'
op|'('
name|'_'
op|'('
nl|'\n'
string|"'Simulated failure'"
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setup_get_cached_image_mocks
dedent|''
dedent|''
name|'def'
name|'_setup_get_cached_image_mocks'
op|'('
name|'self'
op|','
name|'cow'
op|'='
name|'True'
op|','
nl|'\n'
name|'vhd_format'
op|'='
name|'constants'
op|'.'
name|'DISK_FORMAT_VHD'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'m'
op|'='
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|'.'
name|'get_vhd_format'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_img_path'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'vhd_format'
op|')'
newline|'\n'
nl|'\n'
DECL|function|check_img_path_with_ext
name|'def'
name|'check_img_path_with_ext'
op|'('
name|'image_path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'image_path'
op|'=='
name|'self'
op|'.'
name|'_fetched_image'
op|'+'
string|"'.'"
op|'+'
name|'vhd_format'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'rename'
op|'('
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_img_path'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'Func'
op|'('
name|'check_img_path_with_ext'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'cow'
name|'and'
name|'vhd_format'
op|'=='
name|'constants'
op|'.'
name|'DISK_FORMAT_VHD'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'='
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|'.'
name|'get_vhd_info'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'Func'
op|'('
name|'check_img_path_with_ext'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'MaxInternalSize'"
op|':'
number|'1024'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'copyfile'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|'.'
name|'get_internal_vhd_size_by_file_size'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'object'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
number|'1025'
op|')'
newline|'\n'
nl|'\n'
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|'.'
name|'resize_vhd'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'object'
op|')'
op|','
nl|'\n'
name|'is_file_max_size'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setup_spawn_instance_mocks
dedent|''
dedent|''
name|'def'
name|'_setup_spawn_instance_mocks'
op|'('
name|'self'
op|','
name|'cow'
op|','
name|'setup_vif_mocks_func'
op|'='
name|'None'
op|','
nl|'\n'
name|'with_exception'
op|'='
name|'False'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'boot_from_volume'
op|'='
name|'False'
op|','
nl|'\n'
name|'config_drive'
op|'='
name|'False'
op|','
nl|'\n'
name|'use_cdrom'
op|'='
name|'False'
op|','
nl|'\n'
name|'admin_permissions'
op|'='
name|'True'
op|','
nl|'\n'
name|'vhd_format'
op|'='
name|'constants'
op|'.'
name|'DISK_FORMAT_VHD'
op|','
nl|'\n'
name|'ephemeral_storage'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'m'
op|'='
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'vm_exists'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'WithSideEffects'
op|'('
name|'self'
op|'.'
name|'_set_vm_name'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'get_instance_dir'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
nl|'\n'
name|'create_dir'
op|'='
name|'False'
op|','
nl|'\n'
name|'remove_dir'
op|'='
name|'True'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'_test_instance_dir'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'basevolumeutils'
op|'.'
name|'BaseVolumeUtils'
op|'.'
name|'volume_in_mapping'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
name|'block_device_info'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'boot_from_volume'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'boot_from_volume'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'='
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'get_instance_dir'
op|'('
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_vm_name'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'_test_instance_dir'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_setup_get_cached_image_mocks'
op|'('
name|'cow'
op|','
name|'vhd_format'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'cow'
op|':'
newline|'\n'
indent|'                '
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|'.'
name|'create_differencing_vhd'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'copyfile'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'m'
op|'='
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|'.'
name|'get_vhd_info'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'MaxInternalSize'"
op|':'
number|'1024'
op|','
string|"'FileSize'"
op|':'
number|'1024'
op|','
nl|'\n'
string|"'Type'"
op|':'
number|'2'
op|'}'
op|')'
newline|'\n'
name|'m'
op|'='
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|'.'
name|'get_internal_vhd_size_by_file_size'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'object'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
number|'1025'
op|')'
newline|'\n'
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|'.'
name|'resize_vhd'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'object'
op|')'
op|','
nl|'\n'
name|'is_file_max_size'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'_setup_check_admin_permissions_mocks'
op|'('
nl|'\n'
name|'admin_permissions'
op|'='
name|'admin_permissions'
op|')'
newline|'\n'
name|'if'
name|'ephemeral_storage'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'='
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'get_instance_dir'
op|'('
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_vm_name'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'_test_instance_dir'
op|')'
newline|'\n'
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|'.'
name|'create_dynamic_vhd'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'int'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_setup_create_instance_mocks'
op|'('
name|'setup_vif_mocks_func'
op|','
nl|'\n'
name|'boot_from_volume'
op|','
nl|'\n'
name|'block_device_info'
op|','
nl|'\n'
name|'ephemeral_storage'
op|'='
name|'ephemeral_storage'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'config_drive'
name|'and'
name|'not'
name|'with_exception'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_setup_spawn_config_drive_mocks'
op|'('
name|'use_cdrom'
op|')'
newline|'\n'
nl|'\n'
comment|'# TODO(alexpilotti) Based on where the exception is thrown'
nl|'\n'
comment|'# some of the above mock calls need to be skipped'
nl|'\n'
dedent|''
name|'if'
name|'with_exception'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_setup_destroy_mocks'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'set_vm_state'
op|'('
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_vm_name'
op|')'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_ENABLED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_spawn_instance
dedent|''
dedent|''
name|'def'
name|'_test_spawn_instance'
op|'('
name|'self'
op|','
name|'cow'
op|'='
name|'True'
op|','
nl|'\n'
name|'expected_ide_disks'
op|'='
number|'1'
op|','
nl|'\n'
name|'expected_ide_dvds'
op|'='
number|'0'
op|','
nl|'\n'
name|'setup_vif_mocks_func'
op|'='
name|'None'
op|','
nl|'\n'
name|'with_exception'
op|'='
name|'False'
op|','
nl|'\n'
name|'config_drive'
op|'='
name|'False'
op|','
nl|'\n'
name|'use_cdrom'
op|'='
name|'False'
op|','
nl|'\n'
name|'admin_permissions'
op|'='
name|'True'
op|','
nl|'\n'
name|'vhd_format'
op|'='
name|'constants'
op|'.'
name|'DISK_FORMAT_VHD'
op|','
nl|'\n'
name|'ephemeral_storage'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_spawn_instance_mocks'
op|'('
name|'cow'
op|','
nl|'\n'
name|'setup_vif_mocks_func'
op|','
nl|'\n'
name|'with_exception'
op|','
nl|'\n'
name|'config_drive'
op|'='
name|'config_drive'
op|','
nl|'\n'
name|'use_cdrom'
op|'='
name|'use_cdrom'
op|','
nl|'\n'
name|'admin_permissions'
op|'='
name|'admin_permissions'
op|','
nl|'\n'
name|'vhd_format'
op|'='
name|'vhd_format'
op|','
nl|'\n'
name|'ephemeral_storage'
op|'='
name|'ephemeral_storage'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_spawn_instance'
op|'('
name|'cow'
op|','
name|'ephemeral_storage'
op|'='
name|'ephemeral_storage'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'_instance_ide_disks'
op|')'
op|','
name|'expected_ide_disks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'_instance_ide_dvds'
op|')'
op|','
name|'expected_ide_dvds'
op|')'
newline|'\n'
nl|'\n'
name|'vhd_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'_test_instance_dir'
op|','
string|"'root.'"
op|'+'
nl|'\n'
name|'vhd_format'
op|'.'
name|'lower'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vhd_path'
op|','
name|'self'
op|'.'
name|'_instance_ide_disks'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_mock_get_mounted_disk_from_lun
dedent|''
name|'def'
name|'_mock_get_mounted_disk_from_lun'
op|'('
name|'self'
op|','
name|'target_iqn'
op|','
name|'target_lun'
op|','
nl|'\n'
name|'fake_mounted_disk'
op|','
nl|'\n'
name|'fake_device_number'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'m'
op|'='
name|'volumeutils'
op|'.'
name|'VolumeUtils'
op|'.'
name|'get_device_number_for_target'
op|'('
name|'target_iqn'
op|','
nl|'\n'
name|'target_lun'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'fake_device_number'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'get_mounted_disk_by_drive_number'
op|'('
nl|'\n'
name|'fake_device_number'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'fake_mounted_disk'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_mock_login_storage_target
dedent|''
name|'def'
name|'_mock_login_storage_target'
op|'('
name|'self'
op|','
name|'target_iqn'
op|','
name|'target_lun'
op|','
name|'target_portal'
op|','
nl|'\n'
name|'fake_mounted_disk'
op|','
name|'fake_device_number'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'m'
op|'='
name|'volumeutils'
op|'.'
name|'VolumeUtils'
op|'.'
name|'get_device_number_for_target'
op|'('
name|'target_iqn'
op|','
nl|'\n'
name|'target_lun'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'fake_device_number'
op|')'
newline|'\n'
nl|'\n'
name|'volumeutils'
op|'.'
name|'VolumeUtils'
op|'.'
name|'login_storage_target'
op|'('
name|'target_lun'
op|','
nl|'\n'
name|'target_iqn'
op|','
nl|'\n'
name|'target_portal'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mock_get_mounted_disk_from_lun'
op|'('
name|'target_iqn'
op|','
name|'target_lun'
op|','
nl|'\n'
name|'fake_mounted_disk'
op|','
nl|'\n'
name|'fake_device_number'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_mock_attach_volume
dedent|''
name|'def'
name|'_mock_attach_volume'
op|'('
name|'self'
op|','
name|'instance_name'
op|','
name|'target_iqn'
op|','
name|'target_lun'
op|','
nl|'\n'
name|'target_portal'
op|'='
name|'None'
op|','
name|'boot_from_volume'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_mounted_disk'
op|'='
string|'"fake_mounted_disk"'
newline|'\n'
name|'fake_device_number'
op|'='
number|'0'
newline|'\n'
name|'fake_controller_path'
op|'='
string|"'fake_scsi_controller_path'"
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'_volumeops'
op|','
nl|'\n'
string|"'_get_free_controller_slot'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mock_login_storage_target'
op|'('
name|'target_iqn'
op|','
name|'target_lun'
op|','
nl|'\n'
name|'target_portal'
op|','
nl|'\n'
name|'fake_mounted_disk'
op|','
nl|'\n'
name|'fake_device_number'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mock_get_mounted_disk_from_lun'
op|'('
name|'target_iqn'
op|','
name|'target_lun'
op|','
nl|'\n'
name|'fake_mounted_disk'
op|','
nl|'\n'
name|'fake_device_number'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'boot_from_volume'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'='
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'get_vm_ide_controller'
op|'('
name|'instance_name'
op|','
number|'0'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'fake_controller_path'
op|')'
newline|'\n'
name|'fake_free_slot'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'='
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'get_vm_scsi_controller'
op|'('
name|'instance_name'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'fake_controller_path'
op|')'
newline|'\n'
nl|'\n'
name|'fake_free_slot'
op|'='
number|'1'
newline|'\n'
name|'m'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'_volumeops'
op|'.'
name|'_get_free_controller_slot'
op|'('
nl|'\n'
name|'fake_controller_path'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'fake_free_slot'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'m'
op|'='
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'attach_volume_to_controller'
op|'('
name|'instance_name'
op|','
nl|'\n'
name|'fake_controller_path'
op|','
nl|'\n'
name|'fake_free_slot'
op|','
nl|'\n'
name|'fake_mounted_disk'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'WithSideEffects'
op|'('
name|'self'
op|'.'
name|'_add_volume_disk'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_util_class_version
dedent|''
name|'def'
name|'_test_util_class_version'
op|'('
name|'self'
op|','
name|'v1_class'
op|','
name|'v2_class'
op|','
nl|'\n'
name|'get_instance_action'
op|','
name|'is_hyperv_2012'
op|','
nl|'\n'
name|'force_v1_flag'
op|','
name|'force_utils_v1'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_check_min_windows_version_satisfied'
op|'='
name|'is_hyperv_2012'
newline|'\n'
name|'CONF'
op|'.'
name|'set_override'
op|'('
name|'force_v1_flag'
op|','
name|'force_v1_flag'
op|','
string|"'hyperv'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'='
name|'driver_hyperv'
op|'.'
name|'HyperVDriver'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'get_instance_action'
op|'('
op|')'
newline|'\n'
name|'is_v1'
op|'='
name|'isinstance'
op|'('
name|'instance'
op|','
name|'v1_class'
op|')'
newline|'\n'
comment|'# v2_class can inherit from v1_class'
nl|'\n'
name|'is_v2'
op|'='
name|'isinstance'
op|'('
name|'instance'
op|','
name|'v2_class'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
op|'('
name|'is_hyperv_2012'
name|'and'
name|'not'
name|'force_v1_flag'
op|')'
op|'^'
nl|'\n'
op|'('
name|'is_v1'
name|'and'
name|'not'
name|'is_v2'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volumeutils_version_hyperv_2012
dedent|''
name|'def'
name|'test_volumeutils_version_hyperv_2012'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_util_class_version'
op|'('
name|'volumeutils'
op|'.'
name|'VolumeUtils'
op|','
nl|'\n'
name|'volumeutilsv2'
op|'.'
name|'VolumeUtilsV2'
op|','
nl|'\n'
name|'lambda'
op|':'
name|'utilsfactory'
op|'.'
name|'get_volumeutils'
op|'('
op|')'
op|','
nl|'\n'
name|'True'
op|','
string|"'force_volumeutils_v1'"
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volumeutils_version_hyperv_2012_force_v1
dedent|''
name|'def'
name|'test_volumeutils_version_hyperv_2012_force_v1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_util_class_version'
op|'('
name|'volumeutils'
op|'.'
name|'VolumeUtils'
op|','
nl|'\n'
name|'volumeutilsv2'
op|'.'
name|'VolumeUtilsV2'
op|','
nl|'\n'
name|'lambda'
op|':'
name|'utilsfactory'
op|'.'
name|'get_volumeutils'
op|'('
op|')'
op|','
nl|'\n'
name|'True'
op|','
string|"'force_volumeutils_v1'"
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_volumeutils_version_hyperv_2008R2
dedent|''
name|'def'
name|'test_volumeutils_version_hyperv_2008R2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_util_class_version'
op|'('
name|'volumeutils'
op|'.'
name|'VolumeUtils'
op|','
nl|'\n'
name|'volumeutilsv2'
op|'.'
name|'VolumeUtilsV2'
op|','
nl|'\n'
name|'lambda'
op|':'
name|'utilsfactory'
op|'.'
name|'get_volumeutils'
op|'('
op|')'
op|','
nl|'\n'
name|'False'
op|','
string|"'force_volumeutils_v1'"
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vmutils_version_hyperv_2012
dedent|''
name|'def'
name|'test_vmutils_version_hyperv_2012'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_util_class_version'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
name|'vmutilsv2'
op|'.'
name|'VMUtilsV2'
op|','
nl|'\n'
name|'lambda'
op|':'
name|'utilsfactory'
op|'.'
name|'get_vmutils'
op|'('
op|')'
op|','
nl|'\n'
name|'True'
op|','
string|"'force_hyperv_utils_v1'"
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vmutils_version_hyperv_2012_force_v1
dedent|''
name|'def'
name|'test_vmutils_version_hyperv_2012_force_v1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_util_class_version'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
name|'vmutilsv2'
op|'.'
name|'VMUtilsV2'
op|','
nl|'\n'
name|'lambda'
op|':'
name|'utilsfactory'
op|'.'
name|'get_vmutils'
op|'('
op|')'
op|','
nl|'\n'
name|'True'
op|','
string|"'force_hyperv_utils_v1'"
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vmutils_version_hyperv_2008R2
dedent|''
name|'def'
name|'test_vmutils_version_hyperv_2008R2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_util_class_version'
op|'('
name|'vmutils'
op|'.'
name|'VMUtils'
op|','
name|'vmutilsv2'
op|'.'
name|'VMUtilsV2'
op|','
nl|'\n'
name|'lambda'
op|':'
name|'utilsfactory'
op|'.'
name|'get_vmutils'
op|'('
op|')'
op|','
nl|'\n'
name|'False'
op|','
string|"'force_hyperv_utils_v1'"
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vhdutils_version_hyperv_2012
dedent|''
name|'def'
name|'test_vhdutils_version_hyperv_2012'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_util_class_version'
op|'('
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|','
nl|'\n'
name|'vhdutilsv2'
op|'.'
name|'VHDUtilsV2'
op|','
nl|'\n'
name|'lambda'
op|':'
name|'utilsfactory'
op|'.'
name|'get_vhdutils'
op|'('
op|')'
op|','
nl|'\n'
name|'True'
op|','
string|"'force_hyperv_utils_v1'"
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vhdutils_version_hyperv_2012_force_v1
dedent|''
name|'def'
name|'test_vhdutils_version_hyperv_2012_force_v1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_util_class_version'
op|'('
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|','
nl|'\n'
name|'vhdutilsv2'
op|'.'
name|'VHDUtilsV2'
op|','
nl|'\n'
name|'lambda'
op|':'
name|'utilsfactory'
op|'.'
name|'get_vhdutils'
op|'('
op|')'
op|','
nl|'\n'
name|'True'
op|','
string|"'force_hyperv_utils_v1'"
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vhdutils_version_hyperv_2008R2
dedent|''
name|'def'
name|'test_vhdutils_version_hyperv_2008R2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_util_class_version'
op|'('
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|','
nl|'\n'
name|'vhdutilsv2'
op|'.'
name|'VHDUtilsV2'
op|','
nl|'\n'
name|'lambda'
op|':'
name|'utilsfactory'
op|'.'
name|'get_vhdutils'
op|'('
op|')'
op|','
nl|'\n'
name|'False'
op|','
string|"'force_hyperv_utils_v1'"
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_networkutils_version_hyperv_2012
dedent|''
name|'def'
name|'test_networkutils_version_hyperv_2012'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_util_class_version'
op|'('
name|'networkutils'
op|'.'
name|'NetworkUtils'
op|','
nl|'\n'
name|'networkutilsv2'
op|'.'
name|'NetworkUtilsV2'
op|','
nl|'\n'
name|'lambda'
op|':'
name|'utilsfactory'
op|'.'
name|'get_networkutils'
op|'('
op|')'
op|','
nl|'\n'
name|'True'
op|','
string|"'force_hyperv_utils_v1'"
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_networkutils_version_hyperv_2012_force_v1
dedent|''
name|'def'
name|'test_networkutils_version_hyperv_2012_force_v1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_util_class_version'
op|'('
name|'networkutils'
op|'.'
name|'NetworkUtils'
op|','
nl|'\n'
name|'networkutilsv2'
op|'.'
name|'NetworkUtilsV2'
op|','
nl|'\n'
name|'lambda'
op|':'
name|'utilsfactory'
op|'.'
name|'get_networkutils'
op|'('
op|')'
op|','
nl|'\n'
name|'True'
op|','
string|"'force_hyperv_utils_v1'"
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_networkutils_version_hyperv_2008R2
dedent|''
name|'def'
name|'test_networkutils_version_hyperv_2008R2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_util_class_version'
op|'('
name|'networkutils'
op|'.'
name|'NetworkUtils'
op|','
nl|'\n'
name|'networkutilsv2'
op|'.'
name|'NetworkUtilsV2'
op|','
nl|'\n'
name|'lambda'
op|':'
name|'utilsfactory'
op|'.'
name|'get_networkutils'
op|'('
op|')'
op|','
nl|'\n'
name|'False'
op|','
string|"'force_hyperv_utils_v1'"
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_volume
dedent|''
name|'def'
name|'test_attach_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'self'
op|'.'
name|'_get_instance_data'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'connection_info'
op|'='
name|'db_fakes'
op|'.'
name|'get_fake_volume_info_data'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_volume_target_portal'
op|','
name|'self'
op|'.'
name|'_volume_id'
op|')'
newline|'\n'
name|'data'
op|'='
name|'connection_info'
op|'['
string|"'data'"
op|']'
newline|'\n'
name|'target_lun'
op|'='
name|'data'
op|'['
string|"'target_lun'"
op|']'
newline|'\n'
name|'target_iqn'
op|'='
name|'data'
op|'['
string|"'target_iqn'"
op|']'
newline|'\n'
name|'target_portal'
op|'='
name|'data'
op|'['
string|"'target_portal'"
op|']'
newline|'\n'
name|'mount_point'
op|'='
string|"'/dev/sdc'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mock_attach_volume'
op|'('
name|'instance_data'
op|'['
string|"'name'"
op|']'
op|','
name|'target_iqn'
op|','
name|'target_lun'
op|','
nl|'\n'
name|'target_portal'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'attach_volume'
op|'('
name|'None'
op|','
name|'connection_info'
op|','
name|'instance_data'
op|','
nl|'\n'
name|'mount_point'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'_instance_volume_disks'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_mock_get_mounted_disk_from_lun_error
dedent|''
name|'def'
name|'_mock_get_mounted_disk_from_lun_error'
op|'('
name|'self'
op|','
name|'target_iqn'
op|','
name|'target_lun'
op|','
nl|'\n'
name|'fake_mounted_disk'
op|','
nl|'\n'
name|'fake_device_number'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'m'
op|'='
name|'volumeutils'
op|'.'
name|'VolumeUtils'
op|'.'
name|'get_device_number_for_target'
op|'('
name|'target_iqn'
op|','
nl|'\n'
name|'target_lun'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndRaise'
op|'('
name|'vmutils'
op|'.'
name|'HyperVException'
op|'('
string|"'Simulated failure'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_mock_attach_volume_target_logout
dedent|''
name|'def'
name|'_mock_attach_volume_target_logout'
op|'('
name|'self'
op|','
name|'instance_name'
op|','
name|'target_iqn'
op|','
nl|'\n'
name|'target_lun'
op|','
name|'target_portal'
op|'='
name|'None'
op|','
nl|'\n'
name|'boot_from_volume'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_mounted_disk'
op|'='
string|'"fake_mounted disk"'
newline|'\n'
name|'fake_device_number'
op|'='
number|'0'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mock_login_storage_target'
op|'('
name|'target_iqn'
op|','
name|'target_lun'
op|','
nl|'\n'
name|'target_portal'
op|','
nl|'\n'
name|'fake_mounted_disk'
op|','
nl|'\n'
name|'fake_device_number'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mock_get_mounted_disk_from_lun_error'
op|'('
name|'target_iqn'
op|','
name|'target_lun'
op|','
nl|'\n'
name|'fake_mounted_disk'
op|','
nl|'\n'
name|'fake_device_number'
op|')'
newline|'\n'
nl|'\n'
name|'volumeutils'
op|'.'
name|'VolumeUtils'
op|'.'
name|'logout_storage_target'
op|'('
name|'target_iqn'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_volume_logout
dedent|''
name|'def'
name|'test_attach_volume_logout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'self'
op|'.'
name|'_get_instance_data'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'connection_info'
op|'='
name|'db_fakes'
op|'.'
name|'get_fake_volume_info_data'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_volume_target_portal'
op|','
name|'self'
op|'.'
name|'_volume_id'
op|')'
newline|'\n'
name|'data'
op|'='
name|'connection_info'
op|'['
string|"'data'"
op|']'
newline|'\n'
name|'target_lun'
op|'='
name|'data'
op|'['
string|"'target_lun'"
op|']'
newline|'\n'
name|'target_iqn'
op|'='
name|'data'
op|'['
string|"'target_iqn'"
op|']'
newline|'\n'
name|'target_portal'
op|'='
name|'data'
op|'['
string|"'target_portal'"
op|']'
newline|'\n'
name|'mount_point'
op|'='
string|"'/dev/sdc'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mock_attach_volume_target_logout'
op|'('
name|'instance_data'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'target_iqn'
op|','
name|'target_lun'
op|','
nl|'\n'
name|'target_portal'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'vmutils'
op|'.'
name|'HyperVException'
op|','
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'attach_volume'
op|','
nl|'\n'
name|'None'
op|','
name|'connection_info'
op|','
name|'instance_data'
op|','
name|'mount_point'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_volume_connection_error
dedent|''
name|'def'
name|'test_attach_volume_connection_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'self'
op|'.'
name|'_get_instance_data'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'connection_info'
op|'='
name|'db_fakes'
op|'.'
name|'get_fake_volume_info_data'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_volume_target_portal'
op|','
name|'self'
op|'.'
name|'_volume_id'
op|')'
newline|'\n'
name|'mount_point'
op|'='
string|"'/dev/sdc'"
newline|'\n'
nl|'\n'
DECL|function|fake_login_storage_target
name|'def'
name|'fake_login_storage_target'
op|'('
name|'connection_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'vmutils'
op|'.'
name|'HyperVException'
op|'('
string|"'Fake connection exception'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'_volumeops'
op|','
string|"'_login_storage_target'"
op|','
nl|'\n'
name|'fake_login_storage_target'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'vmutils'
op|'.'
name|'HyperVException'
op|','
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'attach_volume'
op|','
nl|'\n'
name|'None'
op|','
name|'connection_info'
op|','
name|'instance_data'
op|','
name|'mount_point'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_mock_detach_volume
dedent|''
name|'def'
name|'_mock_detach_volume'
op|'('
name|'self'
op|','
name|'target_iqn'
op|','
name|'target_lun'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_mounted_disk'
op|'='
string|'"fake_mounted_disk"'
newline|'\n'
name|'fake_device_number'
op|'='
number|'0'
newline|'\n'
name|'m'
op|'='
name|'volumeutils'
op|'.'
name|'VolumeUtils'
op|'.'
name|'get_device_number_for_target'
op|'('
name|'target_iqn'
op|','
nl|'\n'
name|'target_lun'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'fake_device_number'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'get_mounted_disk_by_drive_number'
op|'('
nl|'\n'
name|'fake_device_number'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'fake_mounted_disk'
op|')'
newline|'\n'
nl|'\n'
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'detach_vm_disk'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
name|'fake_mounted_disk'
op|')'
newline|'\n'
nl|'\n'
name|'volumeutils'
op|'.'
name|'VolumeUtils'
op|'.'
name|'logout_storage_target'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_volume
dedent|''
name|'def'
name|'test_detach_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_data'
op|'='
name|'self'
op|'.'
name|'_get_instance_data'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'name'"
op|','
name|'instance_data'
op|')'
newline|'\n'
nl|'\n'
name|'connection_info'
op|'='
name|'db_fakes'
op|'.'
name|'get_fake_volume_info_data'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_volume_target_portal'
op|','
name|'self'
op|'.'
name|'_volume_id'
op|')'
newline|'\n'
name|'data'
op|'='
name|'connection_info'
op|'['
string|"'data'"
op|']'
newline|'\n'
name|'target_lun'
op|'='
name|'data'
op|'['
string|"'target_lun'"
op|']'
newline|'\n'
name|'target_iqn'
op|'='
name|'data'
op|'['
string|"'target_iqn'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'target_portal'"
op|','
name|'data'
op|')'
newline|'\n'
nl|'\n'
name|'mount_point'
op|'='
string|"'/dev/sdc'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mock_detach_volume'
op|'('
name|'target_iqn'
op|','
name|'target_lun'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'detach_volume'
op|'('
name|'connection_info'
op|','
name|'instance_data'
op|','
name|'mount_point'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_boot_from_volume
dedent|''
name|'def'
name|'test_boot_from_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'block_device_info'
op|'='
name|'db_fakes'
op|'.'
name|'get_fake_block_device_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_volume_target_portal'
op|','
name|'self'
op|'.'
name|'_volume_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_setup_spawn_instance_mocks'
op|'('
name|'cow'
op|'='
name|'False'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'block_device_info'
op|','
nl|'\n'
name|'boot_from_volume'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_spawn_instance'
op|'('
name|'False'
op|','
name|'block_device_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'_instance_volume_disks'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_volume_connector
dedent|''
name|'def'
name|'test_get_volume_connector'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_instance_data'
op|'='
name|'self'
op|'.'
name|'_get_instance_data'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'self'
op|'.'
name|'_instance_data'
op|')'
newline|'\n'
nl|'\n'
name|'fake_my_ip'
op|'='
string|'"fake_ip"'
newline|'\n'
name|'fake_host'
op|'='
string|'"fake_host"'
newline|'\n'
name|'fake_initiator'
op|'='
string|'"fake_initiator"'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'my_ip'
op|'='
name|'fake_my_ip'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'host'
op|'='
name|'fake_host'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'volumeutils'
op|'.'
name|'VolumeUtils'
op|'.'
name|'get_iscsi_initiator'
op|'('
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'fake_initiator'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'data'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'get_volume_connector'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_my_ip'
op|','
name|'data'
op|'.'
name|'get'
op|'('
string|"'ip'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_host'
op|','
name|'data'
op|'.'
name|'get'
op|'('
string|"'host'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_initiator'
op|','
name|'data'
op|'.'
name|'get'
op|'('
string|"'initiator'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setup_test_migrate_disk_and_power_off_mocks
dedent|''
name|'def'
name|'_setup_test_migrate_disk_and_power_off_mocks'
op|'('
name|'self'
op|','
name|'same_host'
op|'='
name|'False'
op|','
nl|'\n'
name|'copy_exception'
op|'='
name|'False'
op|','
nl|'\n'
name|'size_exception'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_instance_data'
op|'='
name|'self'
op|'.'
name|'_get_instance_data'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'self'
op|'.'
name|'_instance_data'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'['
string|"'root_gb'"
op|']'
op|'='
number|'10'
newline|'\n'
nl|'\n'
name|'fake_local_ip'
op|'='
string|"'10.0.0.1'"
newline|'\n'
name|'if'
name|'same_host'
op|':'
newline|'\n'
indent|'            '
name|'fake_dest_ip'
op|'='
name|'fake_local_ip'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'fake_dest_ip'
op|'='
string|"'10.0.0.2'"
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'size_exception'
op|':'
newline|'\n'
indent|'            '
name|'flavor'
op|'='
string|"'m1.tiny'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'flavor'
op|'='
string|"'m1.small'"
newline|'\n'
nl|'\n'
dedent|''
name|'flavor'
op|'='
name|'db'
op|'.'
name|'flavor_get_by_name'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'flavor'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'size_exception'
op|':'
newline|'\n'
indent|'            '
name|'fake_root_vhd_path'
op|'='
string|"'C:\\\\FakePath\\\\root.vhd'"
newline|'\n'
name|'fake_revert_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'_test_instance_dir'
op|','
string|"'_revert'"
op|')'
newline|'\n'
nl|'\n'
name|'func'
op|'='
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_instance_name'
op|')'
newline|'\n'
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'set_vm_state'
op|'('
name|'func'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_DISABLED'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'get_vm_storage_paths'
op|'('
name|'func'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
op|'('
op|'['
name|'fake_root_vhd_path'
op|']'
op|','
op|'['
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'hostutils'
op|'.'
name|'HostUtils'
op|'.'
name|'get_local_ips'
op|'('
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'fake_local_ip'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'get_instance_dir'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'_test_instance_dir'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'pathutils'
op|'.'
name|'PathUtils'
op|'.'
name|'get_instance_migr_revert_dir'
op|'('
nl|'\n'
name|'instance'
op|'['
string|"'name'"
op|']'
op|','
name|'remove_dir'
op|'='
name|'True'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'fake_revert_path'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'same_host'
op|':'
newline|'\n'
indent|'                '
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'makedirs'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'m'
op|'='
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'copy'
op|'('
name|'fake_root_vhd_path'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'if'
name|'copy_exception'
op|':'
newline|'\n'
indent|'                '
name|'m'
op|'.'
name|'AndRaise'
op|'('
name|'shutil'
op|'.'
name|'Error'
op|'('
string|"'Simulated copy error'"
op|')'
op|')'
newline|'\n'
name|'m'
op|'='
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'get_instance_dir'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
nl|'\n'
name|'remove_dir'
op|'='
name|'True'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'_test_instance_dir'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'rename'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'destroy_disks'
op|'='
name|'True'
newline|'\n'
name|'if'
name|'same_host'
op|':'
newline|'\n'
indent|'                    '
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'rename'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'destroy_disks'
op|'='
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_setup_destroy_mocks'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'destroy_disks'
op|':'
newline|'\n'
indent|'                    '
name|'m'
op|'='
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'get_instance_dir'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
nl|'\n'
name|'remove_dir'
op|'='
name|'True'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'_test_instance_dir'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
op|'('
name|'instance'
op|','
name|'fake_dest_ip'
op|','
name|'network_info'
op|','
name|'flavor'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_disk_and_power_off
dedent|''
name|'def'
name|'test_migrate_disk_and_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
op|'('
name|'instance'
op|','
nl|'\n'
name|'fake_dest_ip'
op|','
nl|'\n'
name|'network_info'
op|','
nl|'\n'
name|'flavor'
op|')'
op|'='
name|'self'
op|'.'
name|'_setup_test_migrate_disk_and_power_off_mocks'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'migrate_disk_and_power_off'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'instance'
op|','
nl|'\n'
name|'fake_dest_ip'
op|','
name|'flavor'
op|','
nl|'\n'
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_disk_and_power_off_same_host
dedent|''
name|'def'
name|'test_migrate_disk_and_power_off_same_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'args'
op|'='
name|'self'
op|'.'
name|'_setup_test_migrate_disk_and_power_off_mocks'
op|'('
nl|'\n'
name|'same_host'
op|'='
name|'True'
op|')'
newline|'\n'
op|'('
name|'instance'
op|','
name|'fake_dest_ip'
op|','
name|'network_info'
op|','
name|'flavor'
op|')'
op|'='
name|'args'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'migrate_disk_and_power_off'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'instance'
op|','
nl|'\n'
name|'fake_dest_ip'
op|','
name|'flavor'
op|','
nl|'\n'
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_disk_and_power_off_copy_exception
dedent|''
name|'def'
name|'test_migrate_disk_and_power_off_copy_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'args'
op|'='
name|'self'
op|'.'
name|'_setup_test_migrate_disk_and_power_off_mocks'
op|'('
nl|'\n'
name|'copy_exception'
op|'='
name|'True'
op|')'
newline|'\n'
op|'('
name|'instance'
op|','
name|'fake_dest_ip'
op|','
name|'network_info'
op|','
name|'flavor'
op|')'
op|'='
name|'args'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'shutil'
op|'.'
name|'Error'
op|','
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'migrate_disk_and_power_off'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_context'
op|','
name|'instance'
op|','
name|'fake_dest_ip'
op|','
nl|'\n'
name|'flavor'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_disk_and_power_off_smaller_root_vhd_size_exception
dedent|''
name|'def'
name|'test_migrate_disk_and_power_off_smaller_root_vhd_size_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'args'
op|'='
name|'self'
op|'.'
name|'_setup_test_migrate_disk_and_power_off_mocks'
op|'('
nl|'\n'
name|'size_exception'
op|'='
name|'True'
op|')'
newline|'\n'
op|'('
name|'instance'
op|','
name|'fake_dest_ip'
op|','
name|'network_info'
op|','
name|'flavor'
op|')'
op|'='
name|'args'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'vmutils'
op|'.'
name|'VHDResizeException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'migrate_disk_and_power_off'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_context'
op|','
name|'instance'
op|','
name|'fake_dest_ip'
op|','
nl|'\n'
name|'flavor'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_finish_migration
dedent|''
name|'def'
name|'_test_finish_migration'
op|'('
name|'self'
op|','
name|'power_on'
op|','
name|'ephemeral_storage'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_instance_data'
op|'='
name|'self'
op|'.'
name|'_get_instance_data'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'self'
op|'.'
name|'_instance_data'
op|')'
newline|'\n'
name|'instance'
op|'['
string|"'system_metadata'"
op|']'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'network_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'basevolumeutils'
op|'.'
name|'BaseVolumeUtils'
op|'.'
name|'volume_in_mapping'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
nl|'\n'
name|'None'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'get_instance_dir'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'_test_instance_dir'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'fake'
op|'.'
name|'PathUtils'
op|','
string|"'exists'"
op|')'
newline|'\n'
name|'m'
op|'='
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'exists'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'fake_parent_vhd_path'
op|'='
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
string|"'FakeParentPath'"
op|','
string|"'%s.vhd'"
op|'%'
nl|'\n'
name|'instance'
op|'['
string|'"image_ref"'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|'.'
name|'get_vhd_info'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'ParentPath'"
op|':'
name|'fake_parent_vhd_path'
op|','
nl|'\n'
string|"'MaxInternalSize'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'m'
op|'='
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|'.'
name|'get_internal_vhd_size_by_file_size'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'object'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
number|'1025'
op|')'
newline|'\n'
nl|'\n'
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|'.'
name|'reconnect_parent_vhd'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'vhdutils'
op|'.'
name|'VHDUtils'
op|'.'
name|'get_vhd_info'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'MaxInternalSize'"
op|':'
number|'1024'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'exists'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'get_instance_dir'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'if'
name|'ephemeral_storage'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'_test_instance_dir'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_set_vm_name'
op|'('
name|'instance'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_setup_create_instance_mocks'
op|'('
name|'None'
op|','
name|'False'
op|','
nl|'\n'
name|'ephemeral_storage'
op|'='
name|'ephemeral_storage'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'power_on'
op|':'
newline|'\n'
indent|'            '
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'set_vm_state'
op|'('
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_instance_name'
op|')'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_ENABLED'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'finish_migration'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'None'
op|','
name|'instance'
op|','
string|'""'
op|','
nl|'\n'
name|'network_info'
op|','
name|'None'
op|','
name|'False'
op|','
name|'None'
op|','
name|'power_on'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_migration_power_on
dedent|''
name|'def'
name|'test_finish_migration_power_on'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_migration'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_migration_power_off
dedent|''
name|'def'
name|'test_finish_migration_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_migration'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_migration_with_ephemeral_storage
dedent|''
name|'def'
name|'test_finish_migration_with_ephemeral_storage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_migration'
op|'('
name|'False'
op|','
name|'ephemeral_storage'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_confirm_migration
dedent|''
name|'def'
name|'test_confirm_migration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_instance_data'
op|'='
name|'self'
op|'.'
name|'_get_instance_data'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'self'
op|'.'
name|'_instance_data'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
name|'pathutils'
op|'.'
name|'PathUtils'
op|'.'
name|'get_instance_migr_revert_dir'
op|'('
name|'instance'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'remove_dir'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'confirm_migration'
op|'('
name|'None'
op|','
name|'instance'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_finish_revert_migration
dedent|''
name|'def'
name|'_test_finish_revert_migration'
op|'('
name|'self'
op|','
name|'power_on'
op|','
name|'ephemeral_storage'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_instance_data'
op|'='
name|'self'
op|'.'
name|'_get_instance_data'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'self'
op|'.'
name|'_instance_data'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
name|'fake_revert_path'
op|'='
op|'('
string|"'C:\\\\FakeInstancesPath\\\\%s\\\\_revert'"
op|'%'
nl|'\n'
name|'instance'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'basevolumeutils'
op|'.'
name|'BaseVolumeUtils'
op|'.'
name|'volume_in_mapping'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
nl|'\n'
name|'None'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'get_instance_dir'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|','
nl|'\n'
name|'create_dir'
op|'='
name|'False'
op|','
nl|'\n'
name|'remove_dir'
op|'='
name|'True'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'_test_instance_dir'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'pathutils'
op|'.'
name|'PathUtils'
op|'.'
name|'get_instance_migr_revert_dir'
op|'('
name|'instance'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'fake_revert_path'
op|')'
newline|'\n'
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'rename'
op|'('
name|'fake_revert_path'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'get_instance_dir'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'_test_instance_dir'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'fake'
op|'.'
name|'PathUtils'
op|'.'
name|'get_instance_dir'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'if'
name|'ephemeral_storage'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'_test_instance_dir'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_set_vm_name'
op|'('
name|'instance'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_setup_create_instance_mocks'
op|'('
name|'None'
op|','
name|'False'
op|','
nl|'\n'
name|'ephemeral_storage'
op|'='
name|'ephemeral_storage'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'power_on'
op|':'
newline|'\n'
indent|'            '
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'set_vm_state'
op|'('
name|'mox'
op|'.'
name|'Func'
op|'('
name|'self'
op|'.'
name|'_check_instance_name'
op|')'
op|','
nl|'\n'
name|'constants'
op|'.'
name|'HYPERV_VM_STATE_ENABLED'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'finish_revert_migration'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'instance'
op|','
nl|'\n'
name|'network_info'
op|','
name|'None'
op|','
nl|'\n'
name|'power_on'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_migration_power_on
dedent|''
name|'def'
name|'test_finish_revert_migration_power_on'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_revert_migration'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_migration_power_off
dedent|''
name|'def'
name|'test_finish_revert_migration_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_revert_migration'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_no_admin_permissions
dedent|''
name|'def'
name|'test_spawn_no_admin_permissions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'vmutils'
op|'.'
name|'HyperVAuthorizationException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_spawn_instance'
op|','
nl|'\n'
name|'with_exception'
op|'='
name|'True'
op|','
nl|'\n'
name|'admin_permissions'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_migration_with_ephemeral_storage
dedent|''
name|'def'
name|'test_finish_revert_migration_with_ephemeral_storage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_finish_revert_migration'
op|'('
name|'False'
op|','
name|'ephemeral_storage'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_plug_vifs
dedent|''
name|'def'
name|'test_plug_vifs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Check to make sure the method raises NotImplementedError.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'plug_vifs'
op|','
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_test_spawn_instance'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unplug_vifs
dedent|''
name|'def'
name|'test_unplug_vifs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Check to make sure the method raises NotImplementedError.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'unplug_vifs'
op|','
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_test_spawn_instance'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rollback_live_migration_at_destination
dedent|''
name|'def'
name|'test_rollback_live_migration_at_destination'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'_conn'
op|','
string|'"destroy"'
op|')'
name|'as'
name|'mock_destroy'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'rollback_live_migration_at_destination'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_spawn_instance'
op|','
op|'['
op|']'
op|','
name|'None'
op|')'
newline|'\n'
name|'mock_destroy'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_spawn_instance'
op|','
op|'['
op|']'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_refresh_instance_security_rules
dedent|''
dedent|''
name|'def'
name|'test_refresh_instance_security_rules'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'refresh_instance_security_rules'
op|','
nl|'\n'
name|'instance'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_rdp_console
dedent|''
name|'def'
name|'test_get_rdp_console'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'my_ip'
op|'='
string|'"192.168.1.1"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_instance_data'
op|'='
name|'self'
op|'.'
name|'_get_instance_data'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'self'
op|'.'
name|'_instance_data'
op|')'
newline|'\n'
nl|'\n'
name|'fake_port'
op|'='
number|'9999'
newline|'\n'
name|'fake_vm_id'
op|'='
string|'"fake_vm_id"'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'rdpconsoleutils'
op|'.'
name|'RDPConsoleUtils'
op|'.'
name|'get_rdp_console_port'
op|'('
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'fake_port'
op|')'
newline|'\n'
nl|'\n'
name|'m'
op|'='
name|'vmutils'
op|'.'
name|'VMUtils'
op|'.'
name|'get_vm_id'
op|'('
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'str'
op|')'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'AndReturn'
op|'('
name|'fake_vm_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'connect_info'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'get_rdp_console'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'CONF'
op|'.'
name|'my_ip'
op|','
name|'connect_info'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_port'
op|','
name|'connect_info'
op|'['
string|"'port'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_vm_id'
op|','
name|'connect_info'
op|'['
string|"'internal_access_path'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VolumeOpsTestCase
dedent|''
dedent|''
name|'class'
name|'VolumeOpsTestCase'
op|'('
name|'HyperVAPIBaseTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for VolumeOps class."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VolumeOpsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volumeops'
op|'='
name|'volumeops'
op|'.'
name|'VolumeOps'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_mounted_disk_from_lun
dedent|''
name|'def'
name|'test_get_mounted_disk_from_lun'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'volumeops'
op|'.'
name|'_volutils'
op|','
nl|'\n'
string|"'get_device_number_for_target'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'volumeops'
op|'.'
name|'_vmutils'
op|','
nl|'\n'
string|"'get_mounted_disk_by_drive_number'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'mock_get_device_number_for_target'
op|','
nl|'\n'
name|'mock_get_mounted_disk_by_drive_number'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'mock_get_device_number_for_target'
op|'.'
name|'return_value'
op|'='
number|'0'
newline|'\n'
name|'mock_get_mounted_disk_by_drive_number'
op|'.'
name|'return_value'
op|'='
string|"'disk_path'"
newline|'\n'
nl|'\n'
name|'block_device_info'
op|'='
name|'db_fakes'
op|'.'
name|'get_fake_block_device_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_volume_target_portal'
op|','
name|'self'
op|'.'
name|'_volume_id'
op|')'
newline|'\n'
nl|'\n'
name|'mapping'
op|'='
name|'driver'
op|'.'
name|'block_device_info_get_mapping'
op|'('
name|'block_device_info'
op|')'
newline|'\n'
name|'data'
op|'='
name|'mapping'
op|'['
number|'0'
op|']'
op|'['
string|"'connection_info'"
op|']'
op|'['
string|"'data'"
op|']'
newline|'\n'
name|'target_lun'
op|'='
name|'data'
op|'['
string|"'target_lun'"
op|']'
newline|'\n'
name|'target_iqn'
op|'='
name|'data'
op|'['
string|"'target_iqn'"
op|']'
newline|'\n'
nl|'\n'
name|'disk'
op|'='
name|'self'
op|'.'
name|'volumeops'
op|'.'
name|'_get_mounted_disk_from_lun'
op|'('
name|'target_iqn'
op|','
nl|'\n'
name|'target_lun'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'disk'
op|','
string|"'disk_path'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_mounted_disk_from_lun_failure
dedent|''
dedent|''
name|'def'
name|'test_get_mounted_disk_from_lun_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'mounted_disk_query_retry_count'
op|'='
number|'1'
op|','
name|'group'
op|'='
string|"'hyperv'"
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'volumeops'
op|'.'
name|'_volutils'
op|','
nl|'\n'
string|"'get_device_number_for_target'"
op|')'
name|'as'
name|'m_device_num'
op|':'
newline|'\n'
indent|'            '
name|'m_device_num'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'None'
op|','
op|'-'
number|'1'
op|']'
newline|'\n'
nl|'\n'
name|'block_device_info'
op|'='
name|'db_fakes'
op|'.'
name|'get_fake_block_device_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_volume_target_portal'
op|','
name|'self'
op|'.'
name|'_volume_id'
op|')'
newline|'\n'
nl|'\n'
name|'mapping'
op|'='
name|'driver'
op|'.'
name|'block_device_info_get_mapping'
op|'('
name|'block_device_info'
op|')'
newline|'\n'
name|'data'
op|'='
name|'mapping'
op|'['
number|'0'
op|']'
op|'['
string|"'connection_info'"
op|']'
op|'['
string|"'data'"
op|']'
newline|'\n'
name|'target_lun'
op|'='
name|'data'
op|'['
string|"'target_lun'"
op|']'
newline|'\n'
name|'target_iqn'
op|'='
name|'data'
op|'['
string|"'target_iqn'"
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'attempt'
name|'in'
name|'xrange'
op|'('
number|'1'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volumeops'
op|'.'
name|'_get_mounted_disk_from_lun'
op|','
nl|'\n'
name|'target_iqn'
op|','
name|'target_lun'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_free_controller_slot_exception
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_get_free_controller_slot_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_drive'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'type'
op|'('
name|'fake_drive'
op|')'
op|'.'
name|'AddressOnParent'
op|'='
name|'mock'
op|'.'
name|'PropertyMock'
op|'('
nl|'\n'
name|'side_effect'
op|'='
name|'xrange'
op|'('
name|'constants'
op|'.'
name|'SCSI_CONTROLLER_SLOTS_NUMBER'
op|')'
op|')'
newline|'\n'
name|'fake_scsi_controller_path'
op|'='
string|"'fake_scsi_controller_path'"
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'volumeops'
op|'.'
name|'_vmutils'
op|','
nl|'\n'
string|"'get_attached_disks'"
op|')'
name|'as'
name|'fake_get_attached_disks'
op|':'
newline|'\n'
indent|'            '
name|'fake_get_attached_disks'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
op|'['
name|'fake_drive'
op|']'
op|'*'
name|'constants'
op|'.'
name|'SCSI_CONTROLLER_SLOTS_NUMBER'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'vmutils'
op|'.'
name|'HyperVException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volumeops'
op|'.'
name|'_get_free_controller_slot'
op|','
nl|'\n'
name|'fake_scsi_controller_path'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
