begin_unit
comment|'# Copyright 2014 Cloudbase Solutions Srl'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.import mock'
nl|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'ioutils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|IOThreadTestCase
name|'class'
name|'IOThreadTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|_FAKE_SRC
indent|'    '
name|'_FAKE_SRC'
op|'='
string|"r'fake_source_file'"
newline|'\n'
DECL|variable|_FAKE_DEST
name|'_FAKE_DEST'
op|'='
string|"r'fake_dest_file'"
newline|'\n'
DECL|variable|_FAKE_MAX_BYTES
name|'_FAKE_MAX_BYTES'
op|'='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_iothread'
op|'='
name|'ioutils'
op|'.'
name|'IOThread'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_FAKE_SRC'
op|','
name|'self'
op|'.'
name|'_FAKE_DEST'
op|','
name|'self'
op|'.'
name|'_FAKE_MAX_BYTES'
op|')'
newline|'\n'
name|'super'
op|'('
name|'IOThreadTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'__builtin__.open'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.rename'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.remove'"
op|')'
newline|'\n'
DECL|member|test_copy
name|'def'
name|'test_copy'
op|'('
name|'self'
op|','
name|'fake_remove'
op|','
name|'fake_exists'
op|','
name|'fake_rename'
op|','
name|'fake_open'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_data'
op|'='
string|"'a'"
newline|'\n'
name|'fake_src'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'fake_dest'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'fake_src'
op|'.'
name|'read'
op|'.'
name|'return_value'
op|'='
name|'fake_data'
newline|'\n'
name|'fake_dest'
op|'.'
name|'tell'
op|'.'
name|'return_value'
op|'='
number|'0'
newline|'\n'
name|'fake_exists'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'mock_context_manager'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'fake_open'
op|'.'
name|'return_value'
op|'='
name|'mock_context_manager'
newline|'\n'
name|'mock_context_manager'
op|'.'
name|'__enter__'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'fake_src'
op|','
name|'fake_dest'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_iothread'
op|'.'
name|'_stopped'
op|'.'
name|'isSet'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'side_effect'
op|'='
op|'['
name|'False'
op|','
name|'True'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_iothread'
op|'.'
name|'_copy'
op|'('
name|'self'
op|'.'
name|'_FAKE_SRC'
op|','
name|'self'
op|'.'
name|'_FAKE_DEST'
op|')'
newline|'\n'
nl|'\n'
name|'fake_dest'
op|'.'
name|'write'
op|'.'
name|'assert_called_once_with'
op|'('
name|'fake_data'
op|')'
newline|'\n'
name|'fake_dest'
op|'.'
name|'close'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'fake_rename'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_iothread'
op|'.'
name|'_dest'
op|','
name|'self'
op|'.'
name|'_iothread'
op|'.'
name|'_dest_archive'
op|')'
newline|'\n'
name|'fake_remove'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_iothread'
op|'.'
name|'_dest_archive'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'fake_open'
op|'.'
name|'call_count'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
