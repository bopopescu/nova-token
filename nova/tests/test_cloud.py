begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
name|'import'
name|'mox'
newline|'\n'
nl|'\n'
name|'from'
name|'base64'
name|'import'
name|'b64decode'
newline|'\n'
name|'from'
name|'M2Crypto'
name|'import'
name|'BIO'
newline|'\n'
name|'from'
name|'M2Crypto'
name|'import'
name|'RSA'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'greenthread'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'crypto'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'network'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'auth'
name|'import'
name|'manager'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'ec2'
name|'import'
name|'cloud'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'ec2'
name|'import'
name|'ec2utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'image'
name|'import'
name|'fake'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|"'nova.tests.cloud'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CloudTestCase
name|'class'
name|'CloudTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CloudTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'connection_type'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'stub_network'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'='
name|'rpc'
op|'.'
name|'Connection'
op|'.'
name|'instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# set up our cloud'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'='
name|'cloud'
op|'.'
name|'CloudController'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# set up services'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduter'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'scheduler'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'network'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'volume'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'image_service'
op|'='
name|'utils'
op|'.'
name|'import_object'
op|'('
name|'FLAGS'
op|'.'
name|'image_service'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'='
name|'manager'
op|'.'
name|'AuthManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user'
op|'='
name|'self'
op|'.'
name|'manager'
op|'.'
name|'create_user'
op|'('
string|"'admin'"
op|','
string|"'admin'"
op|','
string|"'admin'"
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'project'
op|'='
name|'self'
op|'.'
name|'manager'
op|'.'
name|'create_project'
op|'('
string|"'proj'"
op|','
string|"'admin'"
op|','
string|"'proj'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'user'
op|'='
name|'self'
op|'.'
name|'user'
op|','
nl|'\n'
name|'project'
op|'='
name|'self'
op|'.'
name|'project'
op|')'
newline|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'network'
op|'.'
name|'host'
newline|'\n'
nl|'\n'
DECL|function|fake_show
name|'def'
name|'fake_show'
op|'('
name|'meh'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'container_format'"
op|':'
string|"'ami'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
string|"'kernel_id'"
op|':'
number|'1'
op|','
string|"'ramdisk_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|','
string|"'image_state'"
op|':'
string|"'available'"
op|'}'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show_by_name'"
op|','
name|'fake_show'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(vish): set up a manual wait so rpc.cast has a chance to finish'
nl|'\n'
name|'rpc_cast'
op|'='
name|'rpc'
op|'.'
name|'cast'
newline|'\n'
nl|'\n'
DECL|function|finish_cast
name|'def'
name|'finish_cast'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'rpc_cast'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'greenthread'
op|'.'
name|'sleep'
op|'('
number|'0.2'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'rpc'
op|','
string|"'cast'"
op|','
name|'finish_cast'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'networks'
op|'='
name|'db'
op|'.'
name|'project_get_networks'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'project'
op|'.'
name|'id'
op|','
nl|'\n'
name|'associate'
op|'='
name|'False'
op|')'
newline|'\n'
name|'for'
name|'network'
name|'in'
name|'networks'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'network_disassociate'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'network'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'manager'
op|'.'
name|'delete_project'
op|'('
name|'self'
op|'.'
name|'project'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'delete_user'
op|'('
name|'self'
op|'.'
name|'user'
op|')'
newline|'\n'
name|'super'
op|'('
name|'CloudTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_key
dedent|''
name|'def'
name|'_create_key'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(vish): create depends on pool, so just call helper directly'
nl|'\n'
indent|'        '
name|'return'
name|'cloud'
op|'.'
name|'_gen_key'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'context'
op|'.'
name|'user'
op|'.'
name|'id'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_regions
dedent|''
name|'def'
name|'test_describe_regions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure describe regions runs without raising an exception"""'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_regions'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'regionInfo'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'regions'
op|'='
name|'FLAGS'
op|'.'
name|'region_list'
newline|'\n'
name|'FLAGS'
op|'.'
name|'region_list'
op|'='
op|'['
string|'"one=test_host1"'
op|','
string|'"two=test_host2"'
op|']'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_regions'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'regionInfo'"
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'FLAGS'
op|'.'
name|'region_list'
op|'='
name|'regions'
newline|'\n'
nl|'\n'
DECL|member|test_describe_addresses
dedent|''
name|'def'
name|'test_describe_addresses'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure describe addresses runs without raising an exception"""'
newline|'\n'
name|'address'
op|'='
string|'"10.10.10.10"'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
name|'address'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'self'
op|'.'
name|'network'
op|'.'
name|'host'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'allocate_address'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_addresses'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'release_address'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'public_ip'
op|'='
name|'address'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'address'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'test'
op|'.'
name|'skip_test'
op|'('
string|'"Skipping this pending future merge"'
op|')'
newline|'\n'
DECL|member|test_allocate_address
name|'def'
name|'test_allocate_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'address'
op|'='
string|'"10.10.10.10"'
newline|'\n'
name|'allocate'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'allocate_address'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
name|'address'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'self'
op|'.'
name|'network'
op|'.'
name|'host'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'allocate'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
op|'['
string|"'publicIp'"
op|']'
op|','
name|'address'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NoMoreFloatingIps'
op|','
nl|'\n'
name|'allocate'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_release_address
dedent|''
name|'def'
name|'test_release_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'address'
op|'='
string|'"10.10.10.10"'
newline|'\n'
name|'allocate'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'allocate_address'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
name|'address'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'self'
op|'.'
name|'network'
op|'.'
name|'host'
op|'}'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'release_address'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'releaseResponse'"
op|']'
op|','
op|'['
string|"'Address released.'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_release_address_still_associated
dedent|''
name|'def'
name|'test_release_address_still_associated'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'address'
op|'='
string|'"10.10.10.10"'
newline|'\n'
name|'fixed_ip'
op|'='
op|'{'
string|"'instance'"
op|':'
op|'{'
string|"'id'"
op|':'
number|'1'
op|'}'
op|'}'
newline|'\n'
name|'floating_ip'
op|'='
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'address'"
op|':'
name|'address'
op|','
nl|'\n'
string|"'fixed_ip_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'fixed_ip'"
op|':'
name|'fixed_ip'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'auto_assigned'"
op|':'
name|'False'
op|'}'
newline|'\n'
name|'network_api'
op|'='
name|'network'
op|'.'
name|'api'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'network_api'
op|'.'
name|'db'
op|','
string|"'floating_ip_get_by_address'"
op|')'
newline|'\n'
name|'network_api'
op|'.'
name|'db'
op|'.'
name|'floating_ip_get_by_address'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'floating_ip'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'release'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'release_address'
newline|'\n'
comment|'# ApiError: Floating ip is in use.  Disassociate it before releasing.'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ApiError'
op|','
name|'release'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'address'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'test'
op|'.'
name|'skip_test'
op|'('
string|'"Skipping this pending future merge"'
op|')'
newline|'\n'
DECL|member|test_associate_disassociate_address
name|'def'
name|'test_associate_disassociate_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Verifies associate runs cleanly without raising an exception"""'
newline|'\n'
name|'address'
op|'='
string|'"10.10.10.10"'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
name|'address'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'self'
op|'.'
name|'network'
op|'.'
name|'host'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'allocate_address'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
comment|'# TODO(jkoelker) Probably need to query for instance_type_id and'
nl|'\n'
comment|'#                make sure we get a valid one'
nl|'\n'
name|'inst'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'host'"
op|':'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'networks'
op|'='
name|'db'
op|'.'
name|'network_get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'for'
name|'network'
name|'in'
name|'networks'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'network'
op|'.'
name|'set_network_host'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'network'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'project_id'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
newline|'\n'
name|'type_id'
op|'='
name|'inst'
op|'['
string|"'instance_type_id'"
op|']'
newline|'\n'
name|'ips'
op|'='
name|'self'
op|'.'
name|'network'
op|'.'
name|'allocate_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
name|'inst'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'instance_type_id'
op|'='
name|'type_id'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
comment|'# TODO(jkoelker) Make this mas bueno'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'ips'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'ips'"
name|'in'
name|'ips'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'ips'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|'['
string|"'ips'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'ip'"
name|'in'
name|'ips'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|'['
string|"'ips'"
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'fixed'
op|'='
name|'ips'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|'['
string|"'ips'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'ip'"
op|']'
newline|'\n'
nl|'\n'
name|'ec2_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_id'
op|'('
name|'inst'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'associate_address'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
name|'ec2_id'
op|','
nl|'\n'
name|'public_ip'
op|'='
name|'address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'disassociate_address'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'public_ip'
op|'='
name|'address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'release_address'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'public_ip'
op|'='
name|'address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'deallocate_fixed_ip'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fixed'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'address'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_security_groups
dedent|''
name|'def'
name|'test_describe_security_groups'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure describe_security_groups works and filters results."""'
newline|'\n'
name|'sec'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'test'"
op|'}'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_security_groups'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
comment|'# NOTE(vish): should have the default group as well'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'securityGroupInfo'"
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_security_groups'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'group_name'
op|'='
op|'['
name|'sec'
op|'['
string|"'name'"
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'securityGroupInfo'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'result'
op|'['
string|"'securityGroupInfo'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'groupName'"
op|']'
op|','
nl|'\n'
name|'sec'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'security_group_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'sec'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_security_groups_by_id
dedent|''
name|'def'
name|'test_describe_security_groups_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sec'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'test'"
op|'}'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_security_groups'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'group_id'
op|'='
op|'['
name|'sec'
op|'['
string|"'id'"
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'securityGroupInfo'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'result'
op|'['
string|"'securityGroupInfo'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'groupName'"
op|']'
op|','
nl|'\n'
name|'sec'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'default'
op|'='
name|'db'
op|'.'
name|'security_group_get_by_name'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'default'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_security_groups'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'group_id'
op|'='
op|'['
name|'default'
op|'['
string|"'id'"
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'securityGroupInfo'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'result'
op|'['
string|"'securityGroupInfo'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'groupName'"
op|']'
op|','
nl|'\n'
string|"'default'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'security_group_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'sec'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_delete_security_group
dedent|''
name|'def'
name|'test_create_delete_security_group'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'descript'
op|'='
string|"'test description'"
newline|'\n'
name|'create'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_security_group'
newline|'\n'
name|'result'
op|'='
name|'create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'testgrp'"
op|','
name|'descript'
op|')'
newline|'\n'
name|'group_descript'
op|'='
name|'result'
op|'['
string|"'securityGroupSet'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'groupDescription'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'descript'
op|','
name|'group_descript'
op|')'
newline|'\n'
name|'delete'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_security_group'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'testgrp'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_security_group_by_id
dedent|''
name|'def'
name|'test_delete_security_group_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sec'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'test'"
op|'}'
op|')'
newline|'\n'
name|'delete'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_security_group'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group_id'
op|'='
name|'sec'
op|'['
string|"'id'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_security_group_with_bad_name
dedent|''
name|'def'
name|'test_delete_security_group_with_bad_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'delete'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_security_group'
newline|'\n'
name|'notfound'
op|'='
name|'exception'
op|'.'
name|'SecurityGroupNotFound'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'notfound'
op|','
name|'delete'
op|','
name|'self'
op|'.'
name|'context'
op|','
string|"'badname'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_security_group_with_bad_group_id
dedent|''
name|'def'
name|'test_delete_security_group_with_bad_group_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'delete'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_security_group'
newline|'\n'
name|'notfound'
op|'='
name|'exception'
op|'.'
name|'SecurityGroupNotFound'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'notfound'
op|','
name|'delete'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'group_id'
op|'='
number|'999'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_security_group_no_params
dedent|''
name|'def'
name|'test_delete_security_group_no_params'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'delete'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_security_group'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ApiError'
op|','
name|'delete'
op|','
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_authorize_revoke_security_group_ingress
dedent|''
name|'def'
name|'test_authorize_revoke_security_group_ingress'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
string|"'name'"
op|':'
string|"'test'"
op|'}'
newline|'\n'
name|'sec'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'kwargs'
op|')'
newline|'\n'
name|'authz'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'authorize_security_group_ingress'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'to_port'"
op|':'
string|"'999'"
op|','
string|"'from_port'"
op|':'
string|"'999'"
op|','
string|"'ip_protocol'"
op|':'
string|"'tcp'"
op|'}'
newline|'\n'
name|'authz'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group_name'
op|'='
name|'sec'
op|'['
string|"'name'"
op|']'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'revoke'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'revoke_security_group_ingress'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'revoke'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group_name'
op|'='
name|'sec'
op|'['
string|"'name'"
op|']'
op|','
op|'**'
name|'kwargs'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_authorize_revoke_security_group_ingress_by_id
dedent|''
name|'def'
name|'test_authorize_revoke_security_group_ingress_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sec'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'test'"
op|'}'
op|')'
newline|'\n'
name|'authz'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'authorize_security_group_ingress'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'to_port'"
op|':'
string|"'999'"
op|','
string|"'from_port'"
op|':'
string|"'999'"
op|','
string|"'ip_protocol'"
op|':'
string|"'tcp'"
op|'}'
newline|'\n'
name|'authz'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group_id'
op|'='
name|'sec'
op|'['
string|"'id'"
op|']'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'revoke'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'revoke_security_group_ingress'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'revoke'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group_id'
op|'='
name|'sec'
op|'['
string|"'id'"
op|']'
op|','
op|'**'
name|'kwargs'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_authorize_security_group_ingress_missing_protocol_params
dedent|''
name|'def'
name|'test_authorize_security_group_ingress_missing_protocol_params'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sec'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'test'"
op|'}'
op|')'
newline|'\n'
name|'authz'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'authorize_security_group_ingress'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ApiError'
op|','
name|'authz'
op|','
name|'self'
op|'.'
name|'context'
op|','
string|"'test'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_authorize_security_group_ingress_missing_group_name_or_id
dedent|''
name|'def'
name|'test_authorize_security_group_ingress_missing_group_name_or_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
string|"'name'"
op|':'
string|"'test'"
op|'}'
newline|'\n'
name|'authz'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'authorize_security_group_ingress'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ApiError'
op|','
name|'authz'
op|','
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_authorize_security_group_ingress_already_exists
dedent|''
name|'def'
name|'test_authorize_security_group_ingress_already_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
string|"'name'"
op|':'
string|"'test'"
op|'}'
newline|'\n'
name|'sec'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'kwargs'
op|')'
newline|'\n'
name|'authz'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'authorize_security_group_ingress'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'to_port'"
op|':'
string|"'999'"
op|','
string|"'from_port'"
op|':'
string|"'999'"
op|','
string|"'ip_protocol'"
op|':'
string|"'tcp'"
op|'}'
newline|'\n'
name|'authz'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group_name'
op|'='
name|'sec'
op|'['
string|"'name'"
op|']'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ApiError'
op|','
name|'authz'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'group_name'
op|'='
name|'sec'
op|'['
string|"'name'"
op|']'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_revoke_security_group_ingress_missing_group_name_or_id
dedent|''
name|'def'
name|'test_revoke_security_group_ingress_missing_group_name_or_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'to_port'"
op|':'
string|"'999'"
op|','
string|"'from_port'"
op|':'
string|"'999'"
op|','
string|"'ip_protocol'"
op|':'
string|"'tcp'"
op|'}'
newline|'\n'
name|'revoke'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'revoke_security_group_ingress'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ApiError'
op|','
name|'revoke'
op|','
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_volumes
dedent|''
name|'def'
name|'test_describe_volumes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure describe_volumes works and filters results."""'
newline|'\n'
name|'vol1'
op|'='
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'vol2'
op|'='
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_volumes'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'volumeSet'"
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'volume_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_vol_id'
op|'('
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_volumes'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|'='
op|'['
name|'volume_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'volumeSet'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'result'
op|'['
string|"'volumeSet'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'volumeId'"
op|']'
op|')'
op|','
nl|'\n'
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_volume_from_snapshot
dedent|''
name|'def'
name|'test_create_volume_from_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure create_volume works when we specify a snapshot."""'
newline|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'size'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'snap'
op|'='
name|'db'
op|'.'
name|'snapshot_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'volume_id'"
op|':'
name|'vol'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'volume_size'"
op|':'
name|'vol'
op|'['
string|"'size'"
op|']'
op|','
nl|'\n'
string|"'status'"
op|':'
string|'"available"'
op|'}'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_snap_id'
op|'('
name|'snap'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'snapshot_id'
op|'='
name|'snapshot_id'
op|')'
newline|'\n'
name|'volume_id'
op|'='
name|'result'
op|'['
string|"'volumeId'"
op|']'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_volumes'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'volumeSet'"
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'volumeSet'"
op|']'
op|'['
number|'1'
op|']'
op|'['
string|"'volumeId'"
op|']'
op|','
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'volume_id'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'snapshot_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snap'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_availability_zones
dedent|''
name|'def'
name|'test_describe_availability_zones'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure describe_availability_zones works and filters results."""'
newline|'\n'
name|'service1'
op|'='
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'host'"
op|':'
string|"'host1_zones'"
op|','
nl|'\n'
string|"'binary'"
op|':'
string|'"nova-compute"'
op|','
nl|'\n'
string|"'topic'"
op|':'
string|"'compute'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|'"zone1"'
op|'}'
op|')'
newline|'\n'
name|'service2'
op|'='
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'host'"
op|':'
string|"'host2_zones'"
op|','
nl|'\n'
string|"'binary'"
op|':'
string|'"nova-compute"'
op|','
nl|'\n'
string|"'topic'"
op|':'
string|"'compute'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|'"zone2"'
op|'}'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_availability_zones'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'availabilityZoneInfo'"
op|']'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'service1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'service2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(jkoelker): this test relies on fixed_ip being in instances'
nl|'\n'
dedent|''
op|'@'
name|'test'
op|'.'
name|'skip_test'
op|'('
string|'"EC2 stuff needs fixed_ip in instance_ref"'
op|')'
newline|'\n'
DECL|member|test_describe_snapshots
name|'def'
name|'test_describe_snapshots'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure describe_snapshots works and filters results."""'
newline|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'snap1'
op|'='
name|'db'
op|'.'
name|'snapshot_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'volume_id'"
op|':'
name|'vol'
op|'['
string|"'id'"
op|']'
op|'}'
op|')'
newline|'\n'
name|'snap2'
op|'='
name|'db'
op|'.'
name|'snapshot_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'volume_id'"
op|':'
name|'vol'
op|'['
string|"'id'"
op|']'
op|'}'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_snapshots'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'snapshotSet'"
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_snap_id'
op|'('
name|'snap2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_snapshots'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'snapshot_id'
op|'='
op|'['
name|'snapshot_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'snapshotSet'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'result'
op|'['
string|"'snapshotSet'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'snapshotId'"
op|']'
op|')'
op|','
nl|'\n'
name|'snap2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'snapshot_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snap1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'snapshot_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snap2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_snapshot
dedent|''
name|'def'
name|'test_create_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure create_snapshot works."""'
newline|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'status'"
op|':'
string|'"available"'
op|'}'
op|')'
newline|'\n'
name|'volume_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_vol_id'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|'='
name|'volume_id'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
name|'result'
op|'['
string|"'snapshotId'"
op|']'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_snapshots'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'snapshotSet'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'snapshotSet'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'snapshotId'"
op|']'
op|','
name|'snapshot_id'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'snapshot_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'snapshot_id'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_snapshot
dedent|''
name|'def'
name|'test_delete_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure delete_snapshot works."""'
newline|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'status'"
op|':'
string|'"available"'
op|'}'
op|')'
newline|'\n'
name|'snap'
op|'='
name|'db'
op|'.'
name|'snapshot_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'volume_id'"
op|':'
name|'vol'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'status'"
op|':'
string|'"available"'
op|'}'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_snap_id'
op|'('
name|'snap'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'snapshot_id'
op|'='
name|'snapshot_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_instances
dedent|''
name|'def'
name|'test_describe_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure describe_instances works and filters results."""'
newline|'\n'
name|'inst1'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'reservation_id'"
op|':'
string|"'a'"
op|','
nl|'\n'
string|"'image_ref'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'host1'"
op|'}'
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'reservation_id'"
op|':'
string|"'a'"
op|','
nl|'\n'
string|"'image_ref'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'host2'"
op|'}'
op|')'
newline|'\n'
name|'comp1'
op|'='
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'host'"
op|':'
string|"'host1'"
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|"'zone1'"
op|','
nl|'\n'
string|"'topic'"
op|':'
string|'"compute"'
op|'}'
op|')'
newline|'\n'
name|'comp2'
op|'='
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'host'"
op|':'
string|"'host2'"
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|"'zone2'"
op|','
nl|'\n'
string|"'topic'"
op|':'
string|'"compute"'
op|'}'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'result'
op|'='
name|'result'
op|'['
string|"'reservationSet'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'instancesSet'"
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'instance_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_id'
op|'('
name|'inst2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'result'
op|'['
string|"'reservationSet'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'instancesSet'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'instancesSet'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'instanceId'"
op|']'
op|','
nl|'\n'
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'instancesSet'"
op|']'
op|'['
number|'0'
op|']'
nl|'\n'
op|'['
string|"'placement'"
op|']'
op|'['
string|"'availabilityZone'"
op|']'
op|','
string|"'zone2'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'comp1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'comp2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_block_device_mapping_create
dedent|''
name|'def'
name|'_block_device_mapping_create'
op|'('
name|'self'
op|','
name|'instance_id'
op|','
name|'mappings'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'volumes'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'bdm'
name|'in'
name|'mappings'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'block_device_mapping_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'bdm'
op|')'
newline|'\n'
name|'if'
string|"'volume_id'"
name|'in'
name|'bdm'
op|':'
newline|'\n'
indent|'                '
name|'values'
op|'='
op|'{'
string|"'id'"
op|':'
name|'bdm'
op|'['
string|"'volume_id'"
op|']'
op|'}'
newline|'\n'
name|'for'
name|'bdm_key'
op|','
name|'vol_key'
name|'in'
op|'['
op|'('
string|"'snapshot_id'"
op|','
string|"'snapshot_id'"
op|')'
op|','
nl|'\n'
op|'('
string|"'snapshot_size'"
op|','
string|"'volume_size'"
op|')'
op|','
nl|'\n'
op|'('
string|"'delete_on_termination'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|')'
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'bdm_key'
name|'in'
name|'bdm'
op|':'
newline|'\n'
indent|'                        '
name|'values'
op|'['
name|'vol_key'
op|']'
op|'='
name|'bdm'
op|'['
name|'bdm_key'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_attached'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'instance_id'
op|','
name|'bdm'
op|'['
string|"'device_name'"
op|']'
op|')'
newline|'\n'
name|'volumes'
op|'.'
name|'append'
op|'('
name|'vol'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'volumes'
newline|'\n'
nl|'\n'
DECL|member|_setUpBlockDeviceMapping
dedent|''
name|'def'
name|'_setUpBlockDeviceMapping'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst1'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'image_ref'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'root_device_name'"
op|':'
string|"'/dev/sdb1'"
op|'}'
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'image_ref'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'root_device_name'"
op|':'
string|"'/dev/sdc1'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'instance_id'
op|'='
name|'inst1'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'mappings0'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'instance_id'"
op|':'
name|'instance_id'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb1'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'2'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_id'"
op|':'
name|'instance_id'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb2'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'3'"
op|','
nl|'\n'
string|"'volume_size'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_id'"
op|':'
name|'instance_id'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb3'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
string|"'4'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'5'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_id'"
op|':'
name|'instance_id'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb4'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
string|"'6'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'7'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_id'"
op|':'
name|'instance_id'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb5'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
string|"'8'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'9'"
op|','
nl|'\n'
string|"'volume_size'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_id'"
op|':'
name|'instance_id'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb6'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
string|"'10'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'11'"
op|','
nl|'\n'
string|"'volume_size'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_id'"
op|':'
name|'instance_id'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb7'"
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_id'"
op|':'
name|'instance_id'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb8'"
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
string|"'swap'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_id'"
op|':'
name|'instance_id'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb9'"
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
string|"'ephemeral3'"
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'volumes'
op|'='
name|'self'
op|'.'
name|'_block_device_mapping_create'
op|'('
name|'instance_id'
op|','
name|'mappings0'
op|')'
newline|'\n'
name|'return'
op|'('
name|'inst1'
op|','
name|'inst2'
op|','
name|'volumes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_tearDownBlockDeviceMapping
dedent|''
name|'def'
name|'_tearDownBlockDeviceMapping'
op|'('
name|'self'
op|','
name|'inst1'
op|','
name|'inst2'
op|','
name|'volumes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'vol'
name|'in'
name|'volumes'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'id'
name|'in'
op|'('
name|'inst1'
op|'['
string|"'id'"
op|']'
op|','
name|'inst2'
op|'['
string|"'id'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'bdm'
name|'in'
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'db'
op|'.'
name|'block_device_mapping_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'bdm'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|_expected_instance_bdm1
dedent|''
name|'_expected_instance_bdm1'
op|'='
op|'{'
nl|'\n'
string|"'instanceId'"
op|':'
string|"'i-00000001'"
op|','
nl|'\n'
string|"'rootDeviceName'"
op|':'
string|"'/dev/sdb1'"
op|','
nl|'\n'
string|"'rootDeviceType'"
op|':'
string|"'ebs'"
op|'}'
newline|'\n'
nl|'\n'
DECL|variable|_expected_block_device_mapping0
name|'_expected_block_device_mapping0'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb1'"
op|','
nl|'\n'
string|"'ebs'"
op|':'
op|'{'
string|"'status'"
op|':'
string|"'in-use'"
op|','
nl|'\n'
string|"'deleteOnTermination'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'volumeId'"
op|':'
number|'2'
op|','
nl|'\n'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb2'"
op|','
nl|'\n'
string|"'ebs'"
op|':'
op|'{'
string|"'status'"
op|':'
string|"'in-use'"
op|','
nl|'\n'
string|"'deleteOnTermination'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'volumeId'"
op|':'
number|'3'
op|','
nl|'\n'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb3'"
op|','
nl|'\n'
string|"'ebs'"
op|':'
op|'{'
string|"'status'"
op|':'
string|"'in-use'"
op|','
nl|'\n'
string|"'deleteOnTermination'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'volumeId'"
op|':'
number|'5'
op|','
nl|'\n'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb4'"
op|','
nl|'\n'
string|"'ebs'"
op|':'
op|'{'
string|"'status'"
op|':'
string|"'in-use'"
op|','
nl|'\n'
string|"'deleteOnTermination'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'volumeId'"
op|':'
number|'7'
op|','
nl|'\n'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb5'"
op|','
nl|'\n'
string|"'ebs'"
op|':'
op|'{'
string|"'status'"
op|':'
string|"'in-use'"
op|','
nl|'\n'
string|"'deleteOnTermination'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'volumeId'"
op|':'
number|'9'
op|','
nl|'\n'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb6'"
op|','
nl|'\n'
string|"'ebs'"
op|':'
op|'{'
string|"'status'"
op|':'
string|"'in-use'"
op|','
nl|'\n'
string|"'deleteOnTermination'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'volumeId'"
op|':'
number|'11'
op|','
op|'}'
op|'}'
op|']'
newline|'\n'
comment|"# NOTE(yamahata): swap/ephemeral device case isn't supported yet."
nl|'\n'
nl|'\n'
DECL|variable|_expected_instance_bdm2
name|'_expected_instance_bdm2'
op|'='
op|'{'
nl|'\n'
string|"'instanceId'"
op|':'
string|"'i-00000002'"
op|','
nl|'\n'
string|"'rootDeviceName'"
op|':'
string|"'/dev/sdc1'"
op|','
nl|'\n'
string|"'rootDeviceType'"
op|':'
string|"'instance-store'"
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_format_instance_bdm
name|'def'
name|'test_format_instance_bdm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
op|'('
name|'inst1'
op|','
name|'inst2'
op|','
name|'volumes'
op|')'
op|'='
name|'self'
op|'.'
name|'_setUpBlockDeviceMapping'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'_format_instance_bdm'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst1'
op|'['
string|"'id'"
op|']'
op|','
string|"'/dev/sdb1'"
op|','
nl|'\n'
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertSubDictMatch'
op|'('
nl|'\n'
op|'{'
string|"'rootDeviceType'"
op|':'
name|'self'
op|'.'
name|'_expected_instance_bdm1'
op|'['
string|"'rootDeviceType'"
op|']'
op|'}'
op|','
nl|'\n'
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualBlockDeviceMapping'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_expected_block_device_mapping0'
op|','
name|'result'
op|'['
string|"'blockDeviceMapping'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'_format_instance_bdm'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst2'
op|'['
string|"'id'"
op|']'
op|','
string|"'/dev/sdc1'"
op|','
nl|'\n'
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertSubDictMatch'
op|'('
nl|'\n'
op|'{'
string|"'rootDeviceType'"
op|':'
name|'self'
op|'.'
name|'_expected_instance_bdm2'
op|'['
string|"'rootDeviceType'"
op|']'
op|'}'
op|','
nl|'\n'
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_tearDownBlockDeviceMapping'
op|'('
name|'inst1'
op|','
name|'inst2'
op|','
name|'volumes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assertInstance
dedent|''
name|'def'
name|'_assertInstance'
op|'('
name|'self'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ec2_instance_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_id'
op|'('
name|'instance_id'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'result'
op|'['
string|"'reservationSet'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'instancesSet'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'result'
op|'='
name|'result'
op|'['
string|"'instancesSet'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'instanceId'"
op|']'
op|','
name|'ec2_instance_id'
op|')'
newline|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|member|_assertEqualBlockDeviceMapping
dedent|''
name|'def'
name|'_assertEqualBlockDeviceMapping'
op|'('
name|'self'
op|','
name|'expected'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'expected'
op|')'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'expected'
op|':'
newline|'\n'
indent|'            '
name|'found'
op|'='
name|'False'
newline|'\n'
name|'for'
name|'y'
name|'in'
name|'result'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'x'
op|'['
string|"'deviceName'"
op|']'
op|'=='
name|'y'
op|'['
string|"'deviceName'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertSubDictMatch'
op|'('
name|'x'
op|','
name|'y'
op|')'
newline|'\n'
name|'found'
op|'='
name|'True'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'found'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_instances_bdm
dedent|''
dedent|''
name|'def'
name|'test_describe_instances_bdm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure describe_instances works with root_device_name and\n        block device mappings\n        """'
newline|'\n'
op|'('
name|'inst1'
op|','
name|'inst2'
op|','
name|'volumes'
op|')'
op|'='
name|'self'
op|'.'
name|'_setUpBlockDeviceMapping'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_assertInstance'
op|'('
name|'inst1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertSubDictMatch'
op|'('
name|'self'
op|'.'
name|'_expected_instance_bdm1'
op|','
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualBlockDeviceMapping'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_expected_block_device_mapping0'
op|','
name|'result'
op|'['
string|"'blockDeviceMapping'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_assertInstance'
op|'('
name|'inst2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertSubDictMatch'
op|'('
name|'self'
op|'.'
name|'_expected_instance_bdm2'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_tearDownBlockDeviceMapping'
op|'('
name|'inst1'
op|','
name|'inst2'
op|','
name|'volumes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_images
dedent|''
name|'def'
name|'test_describe_images'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'describe_images'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_images'
newline|'\n'
nl|'\n'
DECL|function|fake_detail
name|'def'
name|'fake_detail'
op|'('
name|'meh'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'container_format'"
op|':'
string|"'ami'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
string|"'kernel_id'"
op|':'
number|'1'
op|','
string|"'ramdisk_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|'}'
op|'}'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_show_none
dedent|''
name|'def'
name|'fake_show_none'
op|'('
name|'meh'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
name|'image_id'
op|'='
string|"'bad_image_id'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'detail'"
op|','
name|'fake_detail'
op|')'
newline|'\n'
comment|'# list all'
nl|'\n'
name|'result1'
op|'='
name|'describe_images'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'result1'
op|'='
name|'result1'
op|'['
string|"'imagesSet'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result1'
op|'['
string|"'imageId'"
op|']'
op|','
string|"'ami-00000001'"
op|')'
newline|'\n'
comment|'# provided a valid image_id'
nl|'\n'
name|'result2'
op|'='
name|'describe_images'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
string|"'ami-00000001'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'result2'
op|'['
string|"'imagesSet'"
op|']'
op|')'
op|')'
newline|'\n'
comment|'# provide more than 1 valid image_id'
nl|'\n'
name|'result3'
op|'='
name|'describe_images'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
string|"'ami-00000001'"
op|','
nl|'\n'
string|"'ami-00000002'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'result3'
op|'['
string|"'imagesSet'"
op|']'
op|')'
op|')'
newline|'\n'
comment|'# provide an non-existing image_id'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'UnsetAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show_by_name'"
op|','
name|'fake_show_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ImageNotFound'
op|','
name|'describe_images'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'['
string|"'ami-fake'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|assertDictListUnorderedMatch
dedent|''
name|'def'
name|'assertDictListUnorderedMatch'
op|'('
name|'self'
op|','
name|'L1'
op|','
name|'L2'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'L1'
op|')'
op|','
name|'len'
op|'('
name|'L2'
op|')'
op|')'
newline|'\n'
name|'for'
name|'d1'
name|'in'
name|'L1'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'key'
name|'in'
name|'d1'
op|')'
newline|'\n'
name|'for'
name|'d2'
name|'in'
name|'L2'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'key'
name|'in'
name|'d2'
op|')'
newline|'\n'
name|'if'
name|'d1'
op|'['
name|'key'
op|']'
op|'=='
name|'d2'
op|'['
name|'key'
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'d1'
op|','
name|'d2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setUpImageSet
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'_setUpImageSet'
op|'('
name|'self'
op|','
name|'create_volumes_and_snapshots'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mappings1'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'/dev/sda1'"
op|','
string|"'virtual'"
op|':'
string|"'root'"
op|'}'
op|','
nl|'\n'
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdb0'"
op|','
string|"'virtual'"
op|':'
string|"'ephemeral0'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdb1'"
op|','
string|"'virtual'"
op|':'
string|"'ephemeral1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdb2'"
op|','
string|"'virtual'"
op|':'
string|"'ephemeral2'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdb3'"
op|','
string|"'virtual'"
op|':'
string|"'ephemeral3'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdb4'"
op|','
string|"'virtual'"
op|':'
string|"'ephemeral4'"
op|'}'
op|','
nl|'\n'
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdc0'"
op|','
string|"'virtual'"
op|':'
string|"'swap'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdc1'"
op|','
string|"'virtual'"
op|':'
string|"'swap'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdc2'"
op|','
string|"'virtual'"
op|':'
string|"'swap'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdc3'"
op|','
string|"'virtual'"
op|':'
string|"'swap'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdc4'"
op|','
string|"'virtual'"
op|':'
string|"'swap'"
op|'}'
op|']'
newline|'\n'
name|'block_device_mapping1'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdb1'"
op|','
string|"'snapshot_id'"
op|':'
number|'01234567'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdb2'"
op|','
string|"'volume_id'"
op|':'
number|'01234567'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdb3'"
op|','
string|"'virtual_name'"
op|':'
string|"'ephemeral5'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdb4'"
op|','
string|"'no_device'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdc1'"
op|','
string|"'snapshot_id'"
op|':'
number|'12345678'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdc2'"
op|','
string|"'volume_id'"
op|':'
number|'12345678'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdc3'"
op|','
string|"'virtual_name'"
op|':'
string|"'ephemeral6'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdc4'"
op|','
string|"'no_device'"
op|':'
name|'True'
op|'}'
op|']'
newline|'\n'
name|'image1'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'kernel_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|','
nl|'\n'
string|"'image_state'"
op|':'
string|"'available'"
op|','
nl|'\n'
string|"'mappings'"
op|':'
name|'mappings1'
op|','
nl|'\n'
string|"'block_device_mapping'"
op|':'
name|'block_device_mapping1'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'mappings2'
op|'='
op|'['
op|'{'
string|"'device'"
op|':'
string|"'/dev/sda1'"
op|','
string|"'virtual'"
op|':'
string|"'root'"
op|'}'
op|']'
newline|'\n'
name|'block_device_mapping2'
op|'='
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdb1'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
number|'01234567'
op|'}'
op|']'
newline|'\n'
name|'image2'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'kernel_id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|','
nl|'\n'
string|"'root_device_name'"
op|':'
string|"'/dev/sdb1'"
op|','
nl|'\n'
string|"'mappings'"
op|':'
name|'mappings2'
op|','
nl|'\n'
string|"'block_device_mapping'"
op|':'
name|'block_device_mapping2'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_show
name|'def'
name|'fake_show'
op|'('
name|'meh'
op|','
name|'context'
op|','
name|'image_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'i'
name|'in'
op|'['
name|'image1'
op|','
name|'image2'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'i'
op|'['
string|"'id'"
op|']'
op|'=='
name|'image_id'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'i'
newline|'\n'
dedent|''
dedent|''
name|'raise'
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
name|'image_id'
op|'='
name|'image_id'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_detail
dedent|''
name|'def'
name|'fake_detail'
op|'('
name|'meh'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
name|'image1'
op|','
name|'image2'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'detail'"
op|','
name|'fake_detail'
op|')'
newline|'\n'
nl|'\n'
name|'volumes'
op|'='
op|'['
op|']'
newline|'\n'
name|'snapshots'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'create_volumes_and_snapshots'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'bdm'
name|'in'
name|'block_device_mapping1'
op|':'
newline|'\n'
indent|'                '
name|'if'
string|"'volume_id'"
name|'in'
name|'bdm'
op|':'
newline|'\n'
indent|'                    '
name|'vol'
op|'='
name|'self'
op|'.'
name|'_volume_create'
op|'('
name|'bdm'
op|'['
string|"'volume_id'"
op|']'
op|')'
newline|'\n'
name|'volumes'
op|'.'
name|'append'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'if'
string|"'snapshot_id'"
name|'in'
name|'bdm'
op|':'
newline|'\n'
indent|'                    '
name|'snap'
op|'='
name|'db'
op|'.'
name|'snapshot_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
name|'bdm'
op|'['
string|"'snapshot_id'"
op|']'
op|','
nl|'\n'
string|"'volume_id'"
op|':'
number|'76543210'
op|','
nl|'\n'
string|"'status'"
op|':'
string|'"available"'
op|','
nl|'\n'
string|"'volume_size'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'snapshots'
op|'.'
name|'append'
op|'('
name|'snap'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
op|'('
name|'volumes'
op|','
name|'snapshots'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assertImageSet
dedent|''
name|'def'
name|'_assertImageSet'
op|'('
name|'self'
op|','
name|'result'
op|','
name|'root_device_type'
op|','
name|'root_device_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'result'
op|'['
string|"'imagesSet'"
op|']'
op|')'
op|')'
newline|'\n'
name|'result'
op|'='
name|'result'
op|'['
string|"'imagesSet'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'rootDeviceType'"
name|'in'
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'rootDeviceType'"
op|']'
op|','
name|'root_device_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'rootDeviceName'"
name|'in'
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'rootDeviceName'"
op|']'
op|','
name|'root_device_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'blockDeviceMapping'"
name|'in'
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|variable|_expected_root_device_name1
dedent|''
name|'_expected_root_device_name1'
op|'='
string|"'/dev/sda1'"
newline|'\n'
comment|"# NOTE(yamahata): noDevice doesn't make sense when returning mapping"
nl|'\n'
comment|'#                 It makes sense only when user overriding existing'
nl|'\n'
comment|'#                 mapping.'
nl|'\n'
DECL|variable|_expected_bdms1
name|'_expected_bdms1'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb0'"
op|','
string|"'virtualName'"
op|':'
string|"'ephemeral0'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb1'"
op|','
string|"'ebs'"
op|':'
op|'{'
string|"'snapshotId'"
op|':'
nl|'\n'
string|"'snap-00053977'"
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb2'"
op|','
string|"'ebs'"
op|':'
op|'{'
string|"'snapshotId'"
op|':'
nl|'\n'
string|"'vol-00053977'"
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb3'"
op|','
string|"'virtualName'"
op|':'
string|"'ephemeral5'"
op|'}'
op|','
nl|'\n'
comment|"# {'deviceName': '/dev/sdb4', 'noDevice': True},"
nl|'\n'
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdc0'"
op|','
string|"'virtualName'"
op|':'
string|"'swap'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdc1'"
op|','
string|"'ebs'"
op|':'
op|'{'
string|"'snapshotId'"
op|':'
nl|'\n'
string|"'snap-00bc614e'"
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdc2'"
op|','
string|"'ebs'"
op|':'
op|'{'
string|"'snapshotId'"
op|':'
nl|'\n'
string|"'vol-00bc614e'"
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdc3'"
op|','
string|"'virtualName'"
op|':'
string|"'ephemeral6'"
op|'}'
op|','
nl|'\n'
comment|"# {'deviceName': '/dev/sdc4', 'noDevice': True}"
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|_expected_root_device_name2
name|'_expected_root_device_name2'
op|'='
string|"'/dev/sdb1'"
newline|'\n'
DECL|variable|_expected_bdms2
name|'_expected_bdms2'
op|'='
op|'['
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb1'"
op|','
nl|'\n'
string|"'ebs'"
op|':'
op|'{'
string|"'snapshotId'"
op|':'
string|"'snap-00053977'"
op|'}'
op|'}'
op|']'
newline|'\n'
nl|'\n'
comment|'# NOTE(yamahata):'
nl|'\n'
comment|'# InstanceBlockDeviceMappingItemType'
nl|'\n'
comment|'# rootDeviceType'
nl|'\n'
comment|'# rootDeviceName'
nl|'\n'
comment|'# blockDeviceMapping'
nl|'\n'
comment|'#  deviceName'
nl|'\n'
comment|'#  virtualName'
nl|'\n'
comment|'#  ebs'
nl|'\n'
comment|'#    snapshotId'
nl|'\n'
comment|'#    volumeSize'
nl|'\n'
comment|'#    deleteOnTermination'
nl|'\n'
comment|'#  noDevice'
nl|'\n'
DECL|member|test_describe_image_mapping
name|'def'
name|'test_describe_image_mapping'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""test for rootDeviceName and blockDeiceMapping"""'
newline|'\n'
name|'describe_images'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_images'
newline|'\n'
name|'self'
op|'.'
name|'_setUpImageSet'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'describe_images'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
string|"'ami-00000001'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_assertImageSet'
op|'('
name|'result'
op|','
string|"'instance-store'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_expected_root_device_name1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertDictListUnorderedMatch'
op|'('
name|'result'
op|'['
string|"'blockDeviceMapping'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_expected_bdms1'
op|','
string|"'deviceName'"
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'describe_images'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
string|"'ami-00000002'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_assertImageSet'
op|'('
name|'result'
op|','
string|"'ebs'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_expected_root_device_name2'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertDictListUnorderedMatch'
op|'('
name|'result'
op|'['
string|"'blockDeviceMapping'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_expected_bdms2'
op|','
string|"'deviceName'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'UnsetAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_image_attribute
dedent|''
name|'def'
name|'test_describe_image_attribute'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'describe_image_attribute'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_image_attribute'
newline|'\n'
nl|'\n'
DECL|function|fake_show
name|'def'
name|'fake_show'
op|'('
name|'meh'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'properties'"
op|':'
op|'{'
string|"'kernel_id'"
op|':'
number|'1'
op|','
string|"'ramdisk_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|'}'
op|','
string|"'container_format'"
op|':'
string|"'ami'"
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'True'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show_by_name'"
op|','
name|'fake_show'
op|')'
newline|'\n'
name|'result'
op|'='
name|'describe_image_attribute'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'ami-00000001'"
op|','
nl|'\n'
string|"'launchPermission'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|'{'
string|"'group'"
op|':'
string|"'all'"
op|'}'
op|']'
op|','
name|'result'
op|'['
string|"'launchPermission'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_image_attribute_root_device_name
dedent|''
name|'def'
name|'test_describe_image_attribute_root_device_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'describe_image_attribute'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_image_attribute'
newline|'\n'
name|'self'
op|'.'
name|'_setUpImageSet'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'describe_image_attribute'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'ami-00000001'"
op|','
nl|'\n'
string|"'rootDeviceName'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'rootDeviceName'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_expected_root_device_name1'
op|')'
newline|'\n'
name|'result'
op|'='
name|'describe_image_attribute'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'ami-00000002'"
op|','
nl|'\n'
string|"'rootDeviceName'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'rootDeviceName'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_expected_root_device_name2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_image_attribute_block_device_mapping
dedent|''
name|'def'
name|'test_describe_image_attribute_block_device_mapping'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'describe_image_attribute'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_image_attribute'
newline|'\n'
name|'self'
op|'.'
name|'_setUpImageSet'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'describe_image_attribute'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'ami-00000001'"
op|','
nl|'\n'
string|"'blockDeviceMapping'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictListUnorderedMatch'
op|'('
name|'result'
op|'['
string|"'blockDeviceMapping'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_expected_bdms1'
op|','
string|"'deviceName'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'describe_image_attribute'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'ami-00000002'"
op|','
nl|'\n'
string|"'blockDeviceMapping'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictListUnorderedMatch'
op|'('
name|'result'
op|'['
string|"'blockDeviceMapping'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_expected_bdms2'
op|','
string|"'deviceName'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_modify_image_attribute
dedent|''
name|'def'
name|'test_modify_image_attribute'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'modify_image_attribute'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'modify_image_attribute'
newline|'\n'
nl|'\n'
name|'fake_metadata'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'container_format'"
op|':'
string|"'ami'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
string|"'kernel_id'"
op|':'
number|'1'
op|','
string|"'ramdisk_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|'}'
op|','
string|"'is_public'"
op|':'
name|'False'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_show
name|'def'
name|'fake_show'
op|'('
name|'meh'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'fake_metadata'
newline|'\n'
nl|'\n'
DECL|function|fake_update
dedent|''
name|'def'
name|'fake_update'
op|'('
name|'meh'
op|','
name|'context'
op|','
name|'image_id'
op|','
name|'metadata'
op|','
name|'data'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fake_metadata'
op|'.'
name|'update'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'return'
name|'fake_metadata'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show_by_name'"
op|','
name|'fake_show'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'update'"
op|','
name|'fake_update'
op|')'
newline|'\n'
name|'result'
op|'='
name|'modify_image_attribute'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'ami-00000001'"
op|','
nl|'\n'
string|"'launchPermission'"
op|','
string|"'add'"
op|','
nl|'\n'
name|'user_group'
op|'='
op|'['
string|"'all'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'True'
op|','
name|'result'
op|'['
string|"'is_public'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_deregister_image
dedent|''
name|'def'
name|'test_deregister_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'deregister_image'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'deregister_image'
newline|'\n'
nl|'\n'
DECL|function|fake_delete
name|'def'
name|'fake_delete'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'delete'"
op|','
name|'fake_delete'
op|')'
newline|'\n'
comment|'# valid image'
nl|'\n'
name|'result'
op|'='
name|'deregister_image'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'ami-00000001'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'imageId'"
op|']'
op|','
string|"'ami-00000001'"
op|')'
newline|'\n'
comment|'# invalid image'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'UnsetAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_detail_empty
name|'def'
name|'fake_detail_empty'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'detail'"
op|','
name|'fake_detail_empty'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ImageNotFound'
op|','
name|'deregister_image'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'ami-bad001'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_deregister_image_wrong_container_type
dedent|''
name|'def'
name|'test_deregister_image_wrong_container_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'deregister_image'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'deregister_image'
newline|'\n'
nl|'\n'
DECL|function|fake_delete
name|'def'
name|'fake_delete'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'delete'"
op|','
name|'fake_delete'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
name|'deregister_image'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'aki-00000001'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_run_instance
dedent|''
name|'def'
name|'_run_instance'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rv'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'run_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'instance_id'
op|'='
name|'rv'
op|'['
string|"'instancesSet'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'instanceId'"
op|']'
newline|'\n'
name|'return'
name|'instance_id'
newline|'\n'
nl|'\n'
DECL|member|_run_instance_wait
dedent|''
name|'def'
name|'_run_instance_wait'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ec2_instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_wait_for_running'
op|'('
name|'ec2_instance_id'
op|')'
newline|'\n'
name|'return'
name|'ec2_instance_id'
newline|'\n'
nl|'\n'
DECL|member|test_console_output
dedent|''
name|'def'
name|'test_console_output'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance'
op|'('
nl|'\n'
name|'image_id'
op|'='
string|"'ami-1'"
op|','
nl|'\n'
name|'instance_type'
op|'='
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
name|'max_count'
op|'='
number|'1'
op|')'
newline|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'get_console_output'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'b64decode'
op|'('
name|'output'
op|'['
string|"'output'"
op|']'
op|')'
op|','
string|"'FAKE CONSOLE?OUTPUT'"
op|')'
newline|'\n'
comment|'# TODO(soren): We need this until we can stop polling in the rpc code'
nl|'\n'
comment|'#              for unit tests.'
nl|'\n'
name|'rv'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ajax_console
dedent|''
name|'def'
name|'test_ajax_console'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance'
op|'('
name|'image_id'
op|'='
string|"'ami-1'"
op|')'
newline|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'get_ajax_console'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'output'
op|'['
string|"'url'"
op|']'
op|','
nl|'\n'
string|"'%s/?token=FAKETOKEN'"
op|'%'
name|'FLAGS'
op|'.'
name|'ajax_console_proxy_url'
op|')'
newline|'\n'
comment|'# TODO(soren): We need this until we can stop polling in the rpc code'
nl|'\n'
comment|'#              for unit tests.'
nl|'\n'
name|'rv'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_key_generation
dedent|''
name|'def'
name|'test_key_generation'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'self'
op|'.'
name|'_create_key'
op|'('
string|"'test'"
op|')'
newline|'\n'
name|'private_key'
op|'='
name|'result'
op|'['
string|"'private_key'"
op|']'
newline|'\n'
name|'key'
op|'='
name|'RSA'
op|'.'
name|'load_key_string'
op|'('
name|'private_key'
op|','
name|'callback'
op|'='
name|'lambda'
op|':'
name|'None'
op|')'
newline|'\n'
name|'bio'
op|'='
name|'BIO'
op|'.'
name|'MemoryBuffer'
op|'('
op|')'
newline|'\n'
name|'public_key'
op|'='
name|'db'
op|'.'
name|'key_pair_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'user'
op|'.'
name|'id'
op|','
nl|'\n'
string|"'test'"
op|')'
op|'['
string|"'public_key'"
op|']'
newline|'\n'
name|'key'
op|'.'
name|'save_pub_key_bio'
op|'('
name|'bio'
op|')'
newline|'\n'
name|'converted'
op|'='
name|'crypto'
op|'.'
name|'ssl_pub_to_ssh_pub'
op|'('
name|'bio'
op|'.'
name|'read'
op|'('
op|')'
op|')'
newline|'\n'
comment|'# assert key fields are equal'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'public_key'
op|'.'
name|'split'
op|'('
string|'" "'
op|')'
op|'['
number|'1'
op|']'
op|'.'
name|'strip'
op|'('
op|')'
op|','
nl|'\n'
name|'converted'
op|'.'
name|'split'
op|'('
string|'" "'
op|')'
op|'['
number|'1'
op|']'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_key_pairs
dedent|''
name|'def'
name|'test_describe_key_pairs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_key'
op|'('
string|"'test1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_key'
op|'('
string|"'test2'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_key_pairs'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'keys'
op|'='
name|'result'
op|'['
string|'"keySet"'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filter'
op|'('
name|'lambda'
name|'k'
op|':'
name|'k'
op|'['
string|"'keyName'"
op|']'
op|'=='
string|"'test1'"
op|','
name|'keys'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filter'
op|'('
name|'lambda'
name|'k'
op|':'
name|'k'
op|'['
string|"'keyName'"
op|']'
op|'=='
string|"'test2'"
op|','
name|'keys'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_import_public_key
dedent|''
name|'def'
name|'test_import_public_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# test when user provides all values'
nl|'\n'
indent|'        '
name|'result1'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'import_public_key'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'testimportkey1'"
op|','
nl|'\n'
string|"'mytestpubkey'"
op|','
nl|'\n'
string|"'mytestfprint'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result1'
op|')'
newline|'\n'
name|'keydata'
op|'='
name|'db'
op|'.'
name|'key_pair_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'user'
op|'.'
name|'id'
op|','
nl|'\n'
string|"'testimportkey1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'mytestpubkey'"
op|','
name|'keydata'
op|'['
string|"'public_key'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'mytestfprint'"
op|','
name|'keydata'
op|'['
string|"'fingerprint'"
op|']'
op|')'
newline|'\n'
comment|'# test when user omits fingerprint'
nl|'\n'
name|'pubkey_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'__file__'
op|')'
op|','
string|"'public_key'"
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'pubkey_path'
op|'+'
string|"'/dummy.pub'"
op|','
string|"'r'"
op|')'
newline|'\n'
name|'dummypub'
op|'='
name|'f'
op|'.'
name|'readline'
op|'('
op|')'
op|'.'
name|'rstrip'
op|'('
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'pubkey_path'
op|'+'
string|"'/dummy.fingerprint'"
op|','
string|"'r'"
op|')'
newline|'\n'
name|'dummyfprint'
op|'='
name|'f'
op|'.'
name|'readline'
op|'('
op|')'
op|'.'
name|'rstrip'
op|'('
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
newline|'\n'
name|'result2'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'import_public_key'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'testimportkey2'"
op|','
nl|'\n'
name|'dummypub'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result2'
op|')'
newline|'\n'
name|'keydata'
op|'='
name|'db'
op|'.'
name|'key_pair_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'user'
op|'.'
name|'id'
op|','
nl|'\n'
string|"'testimportkey2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dummypub'
op|','
name|'keydata'
op|'['
string|"'public_key'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dummyfprint'
op|','
name|'keydata'
op|'['
string|"'fingerprint'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_key_pair
dedent|''
name|'def'
name|'test_delete_key_pair'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_key'
op|'('
string|"'test'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_key_pair'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'test'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_instances
dedent|''
name|'def'
name|'test_run_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# stub out the rpc call'
nl|'\n'
DECL|function|stub_cast
indent|'        '
name|'def'
name|'stub_cast'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'rpc'
op|','
string|"'cast'"
op|','
name|'stub_cast'
op|')'
newline|'\n'
nl|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
name|'FLAGS'
op|'.'
name|'default_image'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'run_instances'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'run_instances'
newline|'\n'
name|'result'
op|'='
name|'run_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'result'
op|'['
string|"'instancesSet'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'imageId'"
op|']'
op|','
string|"'ami-00000001'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'displayName'"
op|']'
op|','
string|"'Server 1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'instanceId'"
op|']'
op|','
string|"'i-00000001'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'instanceState'"
op|']'
op|'['
string|"'name'"
op|']'
op|','
string|"'scheduling'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'instanceType'"
op|']'
op|','
string|"'m1.small'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_instances_image_state_none
dedent|''
name|'def'
name|'test_run_instances_image_state_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
name|'FLAGS'
op|'.'
name|'default_image'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'run_instances'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'run_instances'
newline|'\n'
nl|'\n'
DECL|function|fake_show_no_state
name|'def'
name|'fake_show_no_state'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'properties'"
op|':'
op|'{'
string|"'kernel_id'"
op|':'
number|'1'
op|','
string|"'ramdisk_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|'}'
op|','
string|"'container_format'"
op|':'
string|"'ami'"
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'UnsetAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show_no_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ApiError'
op|','
name|'run_instances'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_instances_image_state_invalid
dedent|''
name|'def'
name|'test_run_instances_image_state_invalid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
name|'FLAGS'
op|'.'
name|'default_image'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'run_instances'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'run_instances'
newline|'\n'
nl|'\n'
DECL|function|fake_show_decrypt
name|'def'
name|'fake_show_decrypt'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'container_format'"
op|':'
string|"'ami'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
string|"'kernel_id'"
op|':'
number|'1'
op|','
string|"'ramdisk_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|','
string|"'image_state'"
op|':'
string|"'decrypting'"
op|'}'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'UnsetAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show_decrypt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ApiError'
op|','
name|'run_instances'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_instances_image_status_active
dedent|''
name|'def'
name|'test_run_instances_image_status_active'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
name|'FLAGS'
op|'.'
name|'default_image'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'run_instances'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'run_instances'
newline|'\n'
nl|'\n'
DECL|function|fake_show_stat_active
name|'def'
name|'fake_show_stat_active'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'container_format'"
op|':'
string|"'ami'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
string|"'kernel_id'"
op|':'
number|'1'
op|','
string|"'ramdisk_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|'}'
op|','
string|"'status'"
op|':'
string|"'active'"
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show_stat_active'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'run_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'instancesSet'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_terminate_instances
dedent|''
name|'def'
name|'test_terminate_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst1'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'reservation_id'"
op|':'
string|"'a'"
op|','
nl|'\n'
string|"'image_ref'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'host1'"
op|'}'
op|')'
newline|'\n'
name|'terminate_instances'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
newline|'\n'
comment|'# valid instance_id'
nl|'\n'
name|'result'
op|'='
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
string|"'i-00000001'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
comment|'# non-existing instance_id'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
name|'terminate_instances'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'['
string|"'i-2'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_of_instance_display_fields
dedent|''
name|'def'
name|'test_update_of_instance_display_fields'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'ec2_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_id'
op|'('
name|'inst'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'update_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'ec2_id'
op|','
nl|'\n'
name|'display_name'
op|'='
string|"'c00l 1m4g3'"
op|')'
newline|'\n'
name|'inst'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'c00l 1m4g3'"
op|','
name|'inst'
op|'['
string|"'display_name'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(jkoelker): This test relies on mac_address in instance'
nl|'\n'
dedent|''
op|'@'
name|'test'
op|'.'
name|'skip_test'
op|'('
string|'"EC2 stuff needs mac_address in instance_ref"'
op|')'
newline|'\n'
DECL|member|test_update_of_instance_wont_update_private_fields
name|'def'
name|'test_update_of_instance_wont_update_private_fields'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'ec2_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_id'
op|'('
name|'inst'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'update_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'ec2_id'
op|','
nl|'\n'
name|'display_name'
op|'='
string|"'c00l 1m4g3'"
op|','
nl|'\n'
name|'mac_address'
op|'='
string|"'DE:AD:BE:EF'"
op|')'
newline|'\n'
name|'inst'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'None'
op|','
name|'inst'
op|'['
string|"'mac_address'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_of_volume_display_fields
dedent|''
name|'def'
name|'test_update_of_volume_display_fields'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'update_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'ec2utils'
op|'.'
name|'id_to_ec2_vol_id'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
op|','
nl|'\n'
name|'display_name'
op|'='
string|"'c00l v0lum3'"
op|')'
newline|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'c00l v0lum3'"
op|','
name|'vol'
op|'['
string|"'display_name'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_of_volume_wont_update_private_fields
dedent|''
name|'def'
name|'test_update_of_volume_wont_update_private_fields'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'update_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'ec2utils'
op|'.'
name|'id_to_ec2_vol_id'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
op|','
nl|'\n'
name|'mountpoint'
op|'='
string|"'/not/here'"
op|')'
newline|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'None'
op|','
name|'vol'
op|'['
string|"'mountpoint'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_restart_compute_service
dedent|''
name|'def'
name|'_restart_compute_service'
op|'('
name|'self'
op|','
name|'periodic_interval'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""restart compute service. NOTE: fake driver forgets all instances."""'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'if'
name|'periodic_interval'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
nl|'\n'
string|"'compute'"
op|','
name|'periodic_interval'
op|'='
name|'periodic_interval'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_wait_for_state
dedent|''
dedent|''
name|'def'
name|'_wait_for_state'
op|'('
name|'self'
op|','
name|'ctxt'
op|','
name|'instance_id'
op|','
name|'predicate'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Wait for an stopping instance to be a given state"""'
newline|'\n'
name|'id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'instance_id'
op|')'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'info'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'compute_api'
op|'.'
name|'get'
op|'('
name|'context'
op|'='
name|'ctxt'
op|','
name|'instance_id'
op|'='
name|'id'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'info'
op|')'
newline|'\n'
name|'if'
name|'predicate'
op|'('
name|'info'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'greenthread'
op|'.'
name|'sleep'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_wait_for_running
dedent|''
dedent|''
name|'def'
name|'_wait_for_running'
op|'('
name|'self'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
DECL|function|is_running
indent|'        '
name|'def'
name|'is_running'
op|'('
name|'info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'info'
op|'['
string|"'state_description'"
op|']'
op|'=='
string|"'running'"
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_wait_for_state'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|','
name|'is_running'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_wait_for_stopped
dedent|''
name|'def'
name|'_wait_for_stopped'
op|'('
name|'self'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
DECL|function|is_stopped
indent|'        '
name|'def'
name|'is_stopped'
op|'('
name|'info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'info'
op|'['
string|"'state_description'"
op|']'
op|'=='
string|"'stopped'"
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_wait_for_state'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|','
name|'is_stopped'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_wait_for_terminate
dedent|''
name|'def'
name|'_wait_for_terminate'
op|'('
name|'self'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
DECL|function|is_deleted
indent|'        '
name|'def'
name|'is_deleted'
op|'('
name|'info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'info'
op|'['
string|"'deleted'"
op|']'
newline|'\n'
dedent|''
name|'elevated'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
name|'read_deleted'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_wait_for_state'
op|'('
name|'elevated'
op|','
name|'instance_id'
op|','
name|'is_deleted'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'test'
op|'.'
name|'skip_test'
op|'('
string|'"skipping, test is hanging with multinic for rpc reasons"'
op|')'
newline|'\n'
DECL|member|test_stop_start_instance
name|'def'
name|'test_stop_start_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure stop/start instance works"""'
newline|'\n'
comment|'# enforce periodic tasks run in short time to avoid wait for 60s.'
nl|'\n'
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
name|'periodic_interval'
op|'='
number|'0.3'
op|')'
newline|'\n'
nl|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-1'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|','
op|'}'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance_wait'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
comment|"# a running instance can't be started. It is just ignored."
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'start_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'greenthread'
op|'.'
name|'sleep'
op|'('
number|'0.3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'stop_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'greenthread'
op|'.'
name|'sleep'
op|'('
number|'0.3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_wait_for_stopped'
op|'('
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'start_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'greenthread'
op|'.'
name|'sleep'
op|'('
number|'0.3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_wait_for_running'
op|'('
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'stop_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'greenthread'
op|'.'
name|'sleep'
op|'('
number|'0.3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_wait_for_stopped'
op|'('
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'greenthread'
op|'.'
name|'sleep'
op|'('
number|'0.3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_volume_create
dedent|''
name|'def'
name|'_volume_create'
op|'('
name|'self'
op|','
name|'volume_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'status'"
op|':'
string|"'available'"
op|','
nl|'\n'
string|"'host'"
op|':'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'host'
op|','
nl|'\n'
string|"'size'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'attach_status'"
op|':'
string|"'detached'"
op|','
op|'}'
newline|'\n'
name|'if'
name|'volume_id'
op|':'
newline|'\n'
indent|'            '
name|'kwargs'
op|'['
string|"'id'"
op|']'
op|'='
name|'volume_id'
newline|'\n'
dedent|''
name|'return'
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assert_volume_attached
dedent|''
name|'def'
name|'_assert_volume_attached'
op|'('
name|'self'
op|','
name|'vol'
op|','
name|'instance_id'
op|','
name|'mountpoint'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'instance_id'"
op|']'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'mountpoint'"
op|']'
op|','
name|'mountpoint'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'status'"
op|']'
op|','
string|'"in-use"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'attach_status'"
op|']'
op|','
string|'"attached"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assert_volume_detached
dedent|''
name|'def'
name|'_assert_volume_detached'
op|'('
name|'self'
op|','
name|'vol'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'instance_id'"
op|']'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'mountpoint'"
op|']'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'status'"
op|']'
op|','
string|'"available"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'attach_status'"
op|']'
op|','
string|'"detached"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'test'
op|'.'
name|'skip_test'
op|'('
string|'"skipping, test is hanging with multinic for rpc reasons"'
op|')'
newline|'\n'
DECL|member|test_stop_start_with_volume
name|'def'
name|'test_stop_start_with_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure run instance with block device mapping works"""'
newline|'\n'
nl|'\n'
comment|'# enforce periodic tasks run in short time to avoid wait for 60s.'
nl|'\n'
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
name|'periodic_interval'
op|'='
number|'0.3'
op|')'
newline|'\n'
nl|'\n'
name|'vol1'
op|'='
name|'self'
op|'.'
name|'_volume_create'
op|'('
op|')'
newline|'\n'
name|'vol2'
op|'='
name|'self'
op|'.'
name|'_volume_create'
op|'('
op|')'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-1'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'block_device_mapping'"
op|':'
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/vdb'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
name|'vol1'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/vdc'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
name|'vol2'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
op|']'
op|'}'
newline|'\n'
name|'ec2_instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance_wait'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'instance_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'ec2_instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'vols'
op|'='
name|'db'
op|'.'
name|'volume_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'vols'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'vol'
name|'in'
name|'vols'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|'=='
name|'vol1'
op|'['
string|"'id'"
op|']'
name|'or'
name|'vol'
op|'['
string|"'id'"
op|']'
op|'=='
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol'
op|','
name|'instance_id'
op|','
string|"'/dev/vdb'"
op|')'
newline|'\n'
nl|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol'
op|','
name|'instance_id'
op|','
string|"'/dev/vdc'"
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'stop_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_wait_for_stopped'
op|'('
name|'ec2_instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_detached'
op|'('
name|'vol'
op|')'
newline|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_detached'
op|'('
name|'vol'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'start_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_wait_for_running'
op|'('
name|'ec2_instance_id'
op|')'
newline|'\n'
name|'vols'
op|'='
name|'db'
op|'.'
name|'volume_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'vols'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'vol'
name|'in'
name|'vols'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|'=='
name|'vol1'
op|'['
string|"'id'"
op|']'
name|'or'
name|'vol'
op|'['
string|"'id'"
op|']'
op|'=='
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vol'
op|'['
string|"'mountpoint'"
op|']'
op|'=='
string|"'/dev/vdb'"
name|'or'
nl|'\n'
name|'vol'
op|'['
string|"'mountpoint'"
op|']'
op|'=='
string|"'/dev/vdc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'instance_id'"
op|']'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'status'"
op|']'
op|','
string|'"in-use"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'attach_status'"
op|']'
op|','
string|'"attached"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
name|'greenthread'
op|'.'
name|'sleep'
op|'('
number|'0.3'
op|')'
newline|'\n'
nl|'\n'
name|'admin_ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
name|'read_deleted'
op|'='
name|'False'
op|')'
newline|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'admin_ctxt'
op|','
name|'vol1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'vol'
op|'['
string|"'deleted'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'greenthread'
op|'.'
name|'sleep'
op|'('
number|'0.3'
op|')'
newline|'\n'
name|'admin_ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
name|'read_deleted'
op|'='
name|'True'
op|')'
newline|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'admin_ctxt'
op|','
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vol'
op|'['
string|"'deleted'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'test'
op|'.'
name|'skip_test'
op|'('
string|'"skipping, test is hanging with multinic for rpc reasons"'
op|')'
newline|'\n'
DECL|member|test_stop_with_attached_volume
name|'def'
name|'test_stop_with_attached_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure attach info is reflected to block device mapping"""'
newline|'\n'
comment|'# enforce periodic tasks run in short time to avoid wait for 60s.'
nl|'\n'
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
name|'periodic_interval'
op|'='
number|'0.3'
op|')'
newline|'\n'
nl|'\n'
name|'vol1'
op|'='
name|'self'
op|'.'
name|'_volume_create'
op|'('
op|')'
newline|'\n'
name|'vol2'
op|'='
name|'self'
op|'.'
name|'_volume_create'
op|'('
op|')'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-1'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'block_device_mapping'"
op|':'
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/vdb'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
name|'vol1'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'ec2_instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance_wait'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'instance_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'ec2_instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'vols'
op|'='
name|'db'
op|'.'
name|'volume_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'vols'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'for'
name|'vol'
name|'in'
name|'vols'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|','
name|'vol1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol'
op|','
name|'instance_id'
op|','
string|"'/dev/vdb'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_detached'
op|'('
name|'vol'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'compute_api'
op|'.'
name|'attach_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
name|'instance_id'
op|','
nl|'\n'
name|'volume_id'
op|'='
name|'vol2'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'device'
op|'='
string|"'/dev/vdc'"
op|')'
newline|'\n'
name|'greenthread'
op|'.'
name|'sleep'
op|'('
number|'0.3'
op|')'
newline|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol'
op|','
name|'instance_id'
op|','
string|"'/dev/vdc'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'compute_api'
op|'.'
name|'detach_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|'='
name|'vol1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'greenthread'
op|'.'
name|'sleep'
op|'('
number|'0.3'
op|')'
newline|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_detached'
op|'('
name|'vol'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'stop_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_wait_for_stopped'
op|'('
name|'ec2_instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'vol_id'
name|'in'
op|'('
name|'vol1'
op|'['
string|"'id'"
op|']'
op|','
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_detached'
op|'('
name|'vol'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'start_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_wait_for_running'
op|'('
name|'ec2_instance_id'
op|')'
newline|'\n'
name|'vols'
op|'='
name|'db'
op|'.'
name|'volume_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'vols'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'for'
name|'vol'
name|'in'
name|'vols'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|','
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol'
op|','
name|'instance_id'
op|','
string|"'/dev/vdc'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_detached'
op|'('
name|'vol'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
name|'greenthread'
op|'.'
name|'sleep'
op|'('
number|'0.3'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'vol_id'
name|'in'
op|'('
name|'vol1'
op|'['
string|"'id'"
op|']'
op|','
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|','
name|'vol_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_detached'
op|'('
name|'vol'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_snapshot
dedent|''
name|'def'
name|'_create_snapshot'
op|'('
name|'self'
op|','
name|'ec2_volume_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|'='
name|'ec2_volume_id'
op|')'
newline|'\n'
name|'greenthread'
op|'.'
name|'sleep'
op|'('
number|'0.3'
op|')'
newline|'\n'
name|'return'
name|'result'
op|'['
string|"'snapshotId'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'test'
op|'.'
name|'skip_test'
op|'('
string|'"skipping, test is hanging with multinic for rpc reasons"'
op|')'
newline|'\n'
DECL|member|test_run_with_snapshot
name|'def'
name|'test_run_with_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure run/stop/start instance with snapshot works."""'
newline|'\n'
name|'vol'
op|'='
name|'self'
op|'.'
name|'_volume_create'
op|'('
op|')'
newline|'\n'
name|'ec2_volume_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_vol_id'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'ec2_snapshot1_id'
op|'='
name|'self'
op|'.'
name|'_create_snapshot'
op|'('
name|'ec2_volume_id'
op|')'
newline|'\n'
name|'snapshot1_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'ec2_snapshot1_id'
op|')'
newline|'\n'
name|'ec2_snapshot2_id'
op|'='
name|'self'
op|'.'
name|'_create_snapshot'
op|'('
name|'ec2_volume_id'
op|')'
newline|'\n'
name|'snapshot2_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'ec2_snapshot2_id'
op|')'
newline|'\n'
nl|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-1'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'block_device_mapping'"
op|':'
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/vdb'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
name|'snapshot1_id'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|','
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/vdc'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
name|'snapshot2_id'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'ec2_instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance_wait'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'instance_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'ec2_instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'vols'
op|'='
name|'db'
op|'.'
name|'volume_get_all_by_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'vols'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'vol1_id'
op|'='
name|'None'
newline|'\n'
name|'vol2_id'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'vol'
name|'in'
name|'vols'
op|':'
newline|'\n'
indent|'            '
name|'snapshot_id'
op|'='
name|'vol'
op|'['
string|"'snapshot_id'"
op|']'
newline|'\n'
name|'if'
name|'snapshot_id'
op|'=='
name|'snapshot1_id'
op|':'
newline|'\n'
indent|'                '
name|'vol1_id'
op|'='
name|'vol'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'mountpoint'
op|'='
string|"'/dev/vdb'"
newline|'\n'
dedent|''
name|'elif'
name|'snapshot_id'
op|'=='
name|'snapshot2_id'
op|':'
newline|'\n'
indent|'                '
name|'vol2_id'
op|'='
name|'vol'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'mountpoint'
op|'='
string|"'/dev/vdc'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol'
op|','
name|'instance_id'
op|','
name|'mountpoint'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vol1_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vol2_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
name|'greenthread'
op|'.'
name|'sleep'
op|'('
number|'0.3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_wait_for_terminate'
op|'('
name|'ec2_instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'greenthread'
op|'.'
name|'sleep'
op|'('
number|'0.3'
op|')'
newline|'\n'
name|'admin_ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
name|'read_deleted'
op|'='
name|'False'
op|')'
newline|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'admin_ctxt'
op|','
name|'vol1_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_detached'
op|'('
name|'vol'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'vol'
op|'['
string|"'deleted'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1_id'
op|')'
newline|'\n'
nl|'\n'
name|'greenthread'
op|'.'
name|'sleep'
op|'('
number|'0.3'
op|')'
newline|'\n'
name|'admin_ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
name|'read_deleted'
op|'='
name|'True'
op|')'
newline|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'admin_ctxt'
op|','
name|'vol2_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vol'
op|'['
string|"'deleted'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'snapshot_id'
name|'in'
op|'('
name|'ec2_snapshot1_id'
op|','
name|'ec2_snapshot2_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snapshot_id'
op|')'
newline|'\n'
name|'greenthread'
op|'.'
name|'sleep'
op|'('
number|'0.3'
op|')'
newline|'\n'
dedent|''
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image
dedent|''
name|'def'
name|'test_create_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure that CreateImage works"""'
newline|'\n'
comment|'# enforce periodic tasks run in short time to avoid wait for 60s.'
nl|'\n'
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
name|'periodic_interval'
op|'='
number|'0.3'
op|')'
newline|'\n'
nl|'\n'
op|'('
name|'volumes'
op|','
name|'snapshots'
op|')'
op|'='
name|'self'
op|'.'
name|'_setUpImageSet'
op|'('
nl|'\n'
name|'create_volumes_and_snapshots'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-1'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'ec2_instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance_wait'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
comment|"# TODO(yamahata): s3._s3_create() can't be tested easily by unit test"
nl|'\n'
comment|'#                 as there is no unit test for s3.create()'
nl|'\n'
comment|'## result = self.cloud.create_image(self.context, ec2_instance_id,'
nl|'\n'
comment|'##                                  no_reboot=True)'
nl|'\n'
comment|"## ec2_image_id = result['imageId']"
nl|'\n'
comment|'## created_image = self.cloud.describe_images(self.context,'
nl|'\n'
comment|'##                                            [ec2_image_id])'
nl|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
name|'for'
name|'vol'
name|'in'
name|'volumes'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'snap'
name|'in'
name|'snapshots'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'snapshot_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snap'
op|')'
newline|'\n'
comment|'# TODO(yamahata): clean up snapshot created by CreateImage.'
nl|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
