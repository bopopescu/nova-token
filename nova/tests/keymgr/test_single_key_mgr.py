begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
comment|'# Copyright (c) 2013 The Johns Hopkins University/Applied Physics Laboratory'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nTest cases for the single key manager.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'array'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'keymgr'
name|'import'
name|'key'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'keymgr'
name|'import'
name|'single_key_mgr'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'keymgr'
name|'import'
name|'test_mock_key_mgr'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SingleKeyManagerTestCase
name|'class'
name|'SingleKeyManagerTestCase'
op|'('
name|'test_mock_key_mgr'
op|'.'
name|'MockKeyManagerTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|_create_key_manager
indent|'    '
name|'def'
name|'_create_key_manager'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'single_key_mgr'
op|'.'
name|'SingleKeyManager'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'SingleKeyManagerTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'key_id'
op|'='
string|"'00000000-0000-0000-0000-000000000000'"
newline|'\n'
name|'encoded'
op|'='
name|'array'
op|'.'
name|'array'
op|'('
string|"'B'"
op|','
op|'('
string|"'0'"
op|'*'
number|'64'
op|')'
op|'.'
name|'decode'
op|'('
string|"'hex'"
op|')'
op|')'
op|'.'
name|'tolist'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'key'
op|'='
name|'key'
op|'.'
name|'SymmetricKey'
op|'('
string|"'AES'"
op|','
name|'encoded'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test___init__
dedent|''
name|'def'
name|'test___init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'key'
op|','
nl|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'get_key'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'key_id'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_key
dedent|''
name|'def'
name|'test_create_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'key_id_1'
op|'='
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'create_key'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'key_id_2'
op|'='
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'create_key'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
comment|'# ensure that the UUIDs are the same'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'key_id_1'
op|','
name|'key_id_2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_key_with_length
dedent|''
name|'def'
name|'test_create_key_with_length'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_store_null_context
dedent|''
name|'def'
name|'test_store_null_context'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'store_key'
op|','
name|'None'
op|','
name|'self'
op|'.'
name|'key'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_key
dedent|''
name|'def'
name|'test_copy_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'key_id'
op|'='
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'create_key'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'key'
op|'='
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'get_key'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'key_id'
op|')'
newline|'\n'
nl|'\n'
name|'copied_key_id'
op|'='
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'copy_key'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'key_id'
op|')'
newline|'\n'
name|'copied_key'
op|'='
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'get_key'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'copied_key_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'key_id'
op|','
name|'copied_key_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'key'
op|','
name|'copied_key'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_key
dedent|''
name|'def'
name|'test_delete_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_delete_unknown_key
dedent|''
name|'def'
name|'test_delete_unknown_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'KeyManagerError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'key_mgr'
op|'.'
name|'delete_key'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
