begin_unit
comment|'# Copyright (c) 2013 The Johns Hopkins University/Applied Physics Laboratory'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
nl|'\n'
name|'import'
name|'array'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'keymgr'
name|'import'
name|'key'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'volume'
op|'.'
name|'encryptors'
name|'import'
name|'test_base'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'volume'
op|'.'
name|'encryptors'
name|'import'
name|'cryptsetup'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake__get_key
name|'def'
name|'fake__get_key'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'raw'
op|'='
name|'array'
op|'.'
name|'array'
op|'('
string|"'B'"
op|','
op|'('
string|"'0'"
op|'*'
number|'64'
op|')'
op|'.'
name|'decode'
op|'('
string|"'hex'"
op|')'
op|')'
op|'.'
name|'tolist'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'symmetric_key'
op|'='
name|'key'
op|'.'
name|'SymmetricKey'
op|'('
string|"'AES'"
op|','
name|'raw'
op|')'
newline|'\n'
name|'return'
name|'symmetric_key'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CryptsetupEncryptorTestCase
dedent|''
name|'class'
name|'CryptsetupEncryptorTestCase'
op|'('
name|'test_base'
op|'.'
name|'VolumeEncryptorTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|_create
indent|'    '
name|'def'
name|'_create'
op|'('
name|'self'
op|','
name|'connection_info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'cryptsetup'
op|'.'
name|'CryptsetupEncryptor'
op|'('
name|'connection_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CryptsetupEncryptorTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'executes'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'cmd'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'executes'
op|'.'
name|'append'
op|'('
name|'cmd'
op|')'
newline|'\n'
name|'return'
name|'None'
op|','
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'os'
op|'.'
name|'path'
op|','
string|'"realpath"'
op|','
name|'lambda'
name|'x'
op|':'
name|'x'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'dev_path'
op|'='
name|'self'
op|'.'
name|'connection_info'
op|'['
string|"'data'"
op|']'
op|'['
string|"'device_path'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'dev_name'
op|'='
name|'self'
op|'.'
name|'dev_path'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'symlink_path'
op|'='
name|'self'
op|'.'
name|'dev_path'
newline|'\n'
nl|'\n'
DECL|member|test__open_volume
dedent|''
name|'def'
name|'test__open_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'encryptor'
op|'.'
name|'_open_volume'
op|'('
string|'"passphrase"'
op|')'
newline|'\n'
nl|'\n'
name|'expected_commands'
op|'='
op|'['
op|'('
string|"'cryptsetup'"
op|','
string|"'create'"
op|','
string|"'--key-file=-'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'dev_name'
op|','
name|'self'
op|'.'
name|'dev_path'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_commands'
op|','
name|'self'
op|'.'
name|'executes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_volume
dedent|''
name|'def'
name|'test_attach_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'encryptor'
op|','
string|"'_get_key'"
op|','
name|'fake__get_key'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'encryptor'
op|'.'
name|'attach_volume'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'expected_commands'
op|'='
op|'['
op|'('
string|"'cryptsetup'"
op|','
string|"'create'"
op|','
string|"'--key-file=-'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'dev_name'
op|','
name|'self'
op|'.'
name|'dev_path'
op|')'
op|','
nl|'\n'
op|'('
string|"'ln'"
op|','
string|"'--symbolic'"
op|','
string|"'--force'"
op|','
nl|'\n'
string|"'/dev/mapper/%s'"
op|'%'
name|'self'
op|'.'
name|'dev_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'symlink_path'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_commands'
op|','
name|'self'
op|'.'
name|'executes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test__close_volume
dedent|''
name|'def'
name|'test__close_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'encryptor'
op|'.'
name|'detach_volume'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'expected_commands'
op|'='
op|'['
op|'('
string|"'cryptsetup'"
op|','
string|"'remove'"
op|','
name|'self'
op|'.'
name|'dev_name'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_commands'
op|','
name|'self'
op|'.'
name|'executes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_volume
dedent|''
name|'def'
name|'test_detach_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'encryptor'
op|'.'
name|'detach_volume'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'expected_commands'
op|'='
op|'['
op|'('
string|"'cryptsetup'"
op|','
string|"'remove'"
op|','
name|'self'
op|'.'
name|'dev_name'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_commands'
op|','
name|'self'
op|'.'
name|'executes'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
