begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2012 Josh Durgin'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'timeutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
name|'import'
name|'fake'
name|'as'
name|'fake_image'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'test_volume'
name|'import'
name|'DriverTestCase'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'volume'
op|'.'
name|'driver'
name|'import'
name|'RBDDriver'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RBDTestCase
name|'class'
name|'RBDTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'RBDTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'driver'
op|'='
name|'RBDDriver'
op|'('
name|'execute'
op|'='
name|'fake_execute'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_good_locations
dedent|''
name|'def'
name|'test_good_locations'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'locations'
op|'='
op|'['
nl|'\n'
string|"'rbd://fsid/pool/image/snap'"
op|','
nl|'\n'
string|"'rbd://%2F/%2F/%2F/%2F'"
op|','
nl|'\n'
op|']'
newline|'\n'
name|'map'
op|'('
name|'self'
op|'.'
name|'driver'
op|'.'
name|'_parse_location'
op|','
name|'locations'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bad_locations
dedent|''
name|'def'
name|'test_bad_locations'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'locations'
op|'='
op|'['
nl|'\n'
string|"'rbd://image'"
op|','
nl|'\n'
string|"'http://path/to/somewhere/else'"
op|','
nl|'\n'
string|"'rbd://image/extra'"
op|','
nl|'\n'
string|"'rbd://image/'"
op|','
nl|'\n'
string|"'rbd://fsid/pool/image/'"
op|','
nl|'\n'
string|"'rbd://fsid/pool/image/snap/'"
op|','
nl|'\n'
string|"'rbd://///'"
op|','
nl|'\n'
op|']'
newline|'\n'
name|'for'
name|'loc'
name|'in'
name|'locations'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ImageUnacceptable'
op|','
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'_parse_location'
op|','
nl|'\n'
name|'loc'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'driver'
op|'.'
name|'_is_cloneable'
op|'('
name|'loc'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cloneable
dedent|''
dedent|''
name|'def'
name|'test_cloneable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'driver'
op|','
string|"'_get_fsid'"
op|','
name|'lambda'
op|':'
string|"'abc'"
op|')'
newline|'\n'
name|'location'
op|'='
string|"'rbd://abc/pool/image/snap'"
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'driver'
op|'.'
name|'_is_cloneable'
op|'('
name|'location'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_uncloneable_different_fsid
dedent|''
name|'def'
name|'test_uncloneable_different_fsid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'driver'
op|','
string|"'_get_fsid'"
op|','
name|'lambda'
op|':'
string|"'abc'"
op|')'
newline|'\n'
name|'location'
op|'='
string|"'rbd://def/pool/image/snap'"
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'driver'
op|'.'
name|'_is_cloneable'
op|'('
name|'location'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_uncloneable_unreadable
dedent|''
name|'def'
name|'test_uncloneable_unreadable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_exc
indent|'        '
name|'def'
name|'fake_exc'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ProcessExecutionError'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'driver'
op|','
string|"'_get_fsid'"
op|','
name|'lambda'
op|':'
string|"'abc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'driver'
op|','
string|"'_execute'"
op|','
name|'fake_exc'
op|')'
newline|'\n'
name|'location'
op|'='
string|"'rbd://abc/pool/image/snap'"
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'driver'
op|'.'
name|'_is_cloneable'
op|'('
name|'location'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeRBDDriver
dedent|''
dedent|''
name|'class'
name|'FakeRBDDriver'
op|'('
name|'RBDDriver'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|_clone
indent|'    '
name|'def'
name|'_clone'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|_resize
dedent|''
name|'def'
name|'_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ManagedRBDTestCase
dedent|''
dedent|''
name|'class'
name|'ManagedRBDTestCase'
op|'('
name|'DriverTestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|driver_name
indent|'    '
name|'driver_name'
op|'='
string|'"nova.tests.test_rbd.FakeRBDDriver"'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ManagedRBDTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'fake_image'
op|'.'
name|'stub_out_image_service'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_clone_volume_from_image
dedent|''
name|'def'
name|'_clone_volume_from_image'
op|'('
name|'self'
op|','
name|'expected_status'
op|','
nl|'\n'
name|'clone_works'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Try to clone a volume from an image, and check the status\n        afterwards"""'
newline|'\n'
DECL|function|fake_clone_image
name|'def'
name|'fake_clone_image'
op|'('
name|'volume'
op|','
name|'image_location'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_clone_error
dedent|''
name|'def'
name|'fake_clone_error'
op|'('
name|'volume'
op|','
name|'image_location'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'volume'
op|'.'
name|'driver'
op|','
string|"'_is_cloneable'"
op|','
name|'lambda'
name|'x'
op|':'
name|'True'
op|')'
newline|'\n'
name|'if'
name|'clone_works'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'volume'
op|'.'
name|'driver'
op|','
string|"'clone_image'"
op|','
name|'fake_clone_image'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'volume'
op|'.'
name|'driver'
op|','
string|"'clone_image'"
op|','
name|'fake_clone_error'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'image_id'
op|'='
string|"'c905cedb-7281-47e4-8a62-f26bc5fc4c77'"
newline|'\n'
name|'volume_id'
op|'='
number|'1'
newline|'\n'
comment|'# creating volume testdata'
nl|'\n'
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'id'"
op|':'
name|'volume_id'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|','
nl|'\n'
string|"'display_description'"
op|':'
string|"'Test Desc'"
op|','
nl|'\n'
string|"'size'"
op|':'
number|'20'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'creating'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'dummy'"
op|'}'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'clone_works'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'volume'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|','
nl|'\n'
name|'image_id'
op|'='
name|'image_id'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'create_volume'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|','
nl|'\n'
name|'image_id'
op|'='
name|'image_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'volume'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volume'
op|'['
string|"'status'"
op|']'
op|','
name|'expected_status'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
comment|'# cleanup'
nl|'\n'
indent|'            '
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_clone_image_status_available
dedent|''
dedent|''
name|'def'
name|'test_clone_image_status_available'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Verify that before cloning, an image is in the available state."""'
newline|'\n'
name|'self'
op|'.'
name|'_clone_volume_from_image'
op|'('
string|"'available'"
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_clone_image_status_error
dedent|''
name|'def'
name|'test_clone_image_status_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Verify that before cloning, an image is in the available state."""'
newline|'\n'
name|'self'
op|'.'
name|'_clone_volume_from_image'
op|'('
string|"'error'"
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_clone_success
dedent|''
name|'def'
name|'test_clone_success'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'volume'
op|'.'
name|'driver'
op|','
string|"'_is_cloneable'"
op|','
name|'lambda'
name|'x'
op|':'
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'volume'
op|'.'
name|'driver'
op|','
string|"'clone_image'"
op|','
name|'lambda'
name|'a'
op|','
name|'b'
op|':'
name|'True'
op|')'
newline|'\n'
name|'image_id'
op|'='
string|"'c905cedb-7281-47e4-8a62-f26bc5fc4c77'"
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'volume'
op|'.'
name|'driver'
op|'.'
name|'clone_image'
op|'('
op|'{'
op|'}'
op|','
name|'image_id'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_clone_bad_image_id
dedent|''
name|'def'
name|'test_clone_bad_image_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'volume'
op|'.'
name|'driver'
op|','
string|"'_is_cloneable'"
op|','
name|'lambda'
name|'x'
op|':'
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'volume'
op|'.'
name|'driver'
op|'.'
name|'clone_image'
op|'('
op|'{'
op|'}'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_clone_uncloneable
dedent|''
name|'def'
name|'test_clone_uncloneable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'volume'
op|'.'
name|'driver'
op|','
string|"'_is_cloneable'"
op|','
name|'lambda'
name|'x'
op|':'
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'volume'
op|'.'
name|'driver'
op|'.'
name|'clone_image'
op|'('
op|'{'
op|'}'
op|','
string|"'dne'"
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
