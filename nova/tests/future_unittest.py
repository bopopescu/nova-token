begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'logging'
newline|'\n'
name|'import'
name|'mox'
newline|'\n'
name|'import'
name|'StringIO'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'from'
name|'tornado'
name|'import'
name|'ioloop'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'defer'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'xml'
op|'.'
name|'etree'
name|'import'
name|'ElementTree'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'cloud'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'node'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AdminTestCase
name|'class'
name|'AdminTestCase'
op|'('
name|'test'
op|'.'
name|'BaseTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'AdminTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'connection_type'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'fake_rabbit'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'='
name|'rpc'
op|'.'
name|'Connection'
op|'.'
name|'instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'logging'
op|'.'
name|'getLogger'
op|'('
op|')'
op|'.'
name|'setLevel'
op|'('
name|'logging'
op|'.'
name|'INFO'
op|')'
newline|'\n'
nl|'\n'
comment|'# set up our cloud'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'='
name|'cloud'
op|'.'
name|'CloudController'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud_consumer'
op|'='
name|'rpc'
op|'.'
name|'AdapterConsumer'
op|'('
name|'connection'
op|'='
name|'self'
op|'.'
name|'conn'
op|','
nl|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'cloud_topic'
op|','
nl|'\n'
name|'proxy'
op|'='
name|'self'
op|'.'
name|'cloud'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'injected'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'cloud_consumer'
op|'.'
name|'attach_to_tornado'
op|'('
name|'self'
op|'.'
name|'ioloop'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# set up a node'
nl|'\n'
name|'self'
op|'.'
name|'node'
op|'='
name|'node'
op|'.'
name|'Node'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'node_consumer'
op|'='
name|'rpc'
op|'.'
name|'AdapterConsumer'
op|'('
name|'connection'
op|'='
name|'self'
op|'.'
name|'conn'
op|','
nl|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
nl|'\n'
name|'proxy'
op|'='
name|'self'
op|'.'
name|'node'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'injected'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'node_consumer'
op|'.'
name|'attach_to_tornado'
op|'('
name|'self'
op|'.'
name|'ioloop'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flush_terminated
dedent|''
name|'def'
name|'test_flush_terminated'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Launch an instance'
nl|'\n'
nl|'\n'
comment|"# Wait until it's running"
nl|'\n'
nl|'\n'
comment|'# Terminate it'
nl|'\n'
nl|'\n'
comment|"# Wait until it's terminated"
nl|'\n'
nl|'\n'
comment|'# Flush terminated nodes'
nl|'\n'
nl|'\n'
comment|"# ASSERT that it's gone"
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
