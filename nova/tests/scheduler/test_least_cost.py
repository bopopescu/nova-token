begin_unit
comment|'# Copyright 2011 OpenStack LLC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nTests For Least Cost functions.\n"""'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
name|'import'
name|'least_cost'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
name|'import'
name|'zone_manager'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'scheduler'
name|'import'
name|'fake_zone_manager'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|offset
name|'def'
name|'offset'
op|'('
name|'hostinfo'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'hostinfo'
op|'.'
name|'free_ram_mb'
op|'+'
number|'10000'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|scale
dedent|''
name|'def'
name|'scale'
op|'('
name|'hostinfo'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'hostinfo'
op|'.'
name|'free_ram_mb'
op|'*'
number|'2'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LeastCostTestCase
dedent|''
name|'class'
name|'LeastCostTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'LeastCostTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'reserved_host_disk_mb'
op|'='
number|'0'
op|','
name|'reserved_host_memory_mb'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'zone_manager'
op|'='
name|'fake_zone_manager'
op|'.'
name|'FakeZoneManager'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'LeastCostTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_normalize_grid
dedent|''
name|'def'
name|'test_normalize_grid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raw'
op|'='
op|'['
nl|'\n'
op|'['
number|'1'
op|','
number|'2'
op|','
number|'3'
op|','
number|'4'
op|','
number|'5'
op|']'
op|','
nl|'\n'
op|'['
number|'10'
op|','
number|'20'
op|','
number|'30'
op|','
number|'40'
op|','
number|'50'
op|']'
op|','
nl|'\n'
op|'['
number|'100'
op|','
number|'200'
op|','
number|'300'
op|','
number|'400'
op|','
number|'500'
op|']'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'expected'
op|'='
op|'['
nl|'\n'
op|'['
number|'.2'
op|','
number|'.4'
op|','
number|'.6'
op|','
number|'.8'
op|','
number|'1.0'
op|']'
op|','
nl|'\n'
op|'['
number|'.2'
op|','
number|'.4'
op|','
number|'.6'
op|','
number|'.8'
op|','
number|'1.0'
op|']'
op|','
nl|'\n'
op|'['
number|'.2'
op|','
number|'.4'
op|','
number|'.6'
op|','
number|'.8'
op|','
number|'1.0'
op|']'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'expected'
op|','
name|'least_cost'
op|'.'
name|'normalize_grid'
op|'('
name|'raw'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'['
op|'['
op|']'
op|']'
op|','
name|'least_cost'
op|'.'
name|'normalize_grid'
op|'('
op|'['
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'['
op|'['
op|']'
op|']'
op|','
name|'least_cost'
op|'.'
name|'normalize_grid'
op|'('
op|'['
op|'['
op|']'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_weighted_sum_happy_day
dedent|''
name|'def'
name|'test_weighted_sum_happy_day'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fn_tuples'
op|'='
op|'['
op|'('
number|'1.0'
op|','
name|'offset'
op|')'
op|','
op|'('
number|'1.0'
op|','
name|'scale'
op|')'
op|']'
newline|'\n'
name|'hostinfo_list'
op|'='
name|'self'
op|'.'
name|'zone_manager'
op|'.'
name|'get_all_host_data'
op|'('
name|'None'
op|')'
op|'.'
name|'items'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# host1: free_ram_mb=0'
nl|'\n'
comment|'# host2: free_ram_mb=1536'
nl|'\n'
comment|'# host3: free_ram_mb=3072'
nl|'\n'
comment|'# host4: free_ram_mb=8192'
nl|'\n'
nl|'\n'
comment|'# [offset, scale]='
nl|'\n'
comment|'# [10000, 11536, 13072, 18192]'
nl|'\n'
comment|'# [0,  768, 1536, 4096]'
nl|'\n'
nl|'\n'
comment|'# normalized ='
nl|'\n'
comment|'# [ 0.55, 0.63, 0.72, 1.0]'
nl|'\n'
comment|'# [ 0.0, 0.19, 0.38, 1.0]'
nl|'\n'
nl|'\n'
comment|'# adjusted [ 1.0 * x + 1.0 * y] ='
nl|'\n'
comment|'# [0.55, 0.82, 1.1, 2.0]'
nl|'\n'
nl|'\n'
comment|'# so, host1 should win:'
nl|'\n'
name|'weighted_host'
op|'='
name|'least_cost'
op|'.'
name|'weighted_sum'
op|'('
name|'hostinfo_list'
op|','
name|'fn_tuples'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'abs'
op|'('
name|'weighted_host'
op|'.'
name|'weight'
op|'-'
number|'0.55'
op|')'
op|'<'
number|'0.01'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'weighted_host'
op|'.'
name|'host'
op|','
string|"'host1'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_weighted_sum_single_function
dedent|''
name|'def'
name|'test_weighted_sum_single_function'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fn_tuples'
op|'='
op|'['
op|'('
number|'1.0'
op|','
name|'offset'
op|')'
op|','
op|']'
newline|'\n'
name|'hostinfo_list'
op|'='
name|'self'
op|'.'
name|'zone_manager'
op|'.'
name|'get_all_host_data'
op|'('
name|'None'
op|')'
op|'.'
name|'items'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# host1: free_ram_mb=0'
nl|'\n'
comment|'# host2: free_ram_mb=1536'
nl|'\n'
comment|'# host3: free_ram_mb=3072'
nl|'\n'
comment|'# host4: free_ram_mb=8192'
nl|'\n'
nl|'\n'
comment|'# [offset, ]='
nl|'\n'
comment|'# [10000, 11536, 13072, 18192]'
nl|'\n'
nl|'\n'
comment|'# normalized ='
nl|'\n'
comment|'# [ 0.55, 0.63, 0.72, 1.0]'
nl|'\n'
nl|'\n'
comment|'# so, host1 should win:'
nl|'\n'
name|'weighted_host'
op|'='
name|'least_cost'
op|'.'
name|'weighted_sum'
op|'('
name|'hostinfo_list'
op|','
name|'fn_tuples'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'abs'
op|'('
name|'weighted_host'
op|'.'
name|'weight'
op|'-'
number|'0.55'
op|')'
op|'<'
number|'0.01'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'weighted_host'
op|'.'
name|'host'
op|','
string|"'host1'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_cost_functions
dedent|''
name|'def'
name|'test_get_cost_functions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fns'
op|'='
name|'least_cost'
op|'.'
name|'get_cost_fns'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'fns'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'weight'
op|','
name|'fn'
op|'='
name|'fns'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'weight'
op|','
number|'1.0'
op|')'
newline|'\n'
name|'hostinfo'
op|'='
name|'zone_manager'
op|'.'
name|'HostInfo'
op|'('
string|"'host'"
op|','
name|'free_ram_mb'
op|'='
number|'1000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'1000'
op|','
name|'fn'
op|'('
name|'hostinfo'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
