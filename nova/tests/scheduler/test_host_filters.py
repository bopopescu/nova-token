begin_unit
comment|'# Copyright 2011 OpenStack Foundation  # All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nTests For Scheduler Host Filters.\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'oslo'
op|'.'
name|'serialization'
name|'import'
name|'jsonutils'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'base'
name|'as'
name|'obj_base'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'pci'
name|'import'
name|'pci_stats'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
name|'import'
name|'filters'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'servicegroup'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fake_instance'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'scheduler'
name|'import'
name|'fakes'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'hardware'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestFilter
name|'class'
name|'TestFilter'
op|'('
name|'filters'
op|'.'
name|'BaseHostFilter'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestBogusFilter
dedent|''
name|'class'
name|'TestBogusFilter'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Class that doesn\'t inherit from BaseHostFilter."""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HostFiltersTestCase
dedent|''
name|'class'
name|'HostFiltersTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for host filters."""'
newline|'\n'
comment|'# FIXME(sirp): These tests still require DB access until we can separate'
nl|'\n'
comment|'# the testing of the DB API code from the host-filter code.'
nl|'\n'
DECL|variable|USES_DB
name|'USES_DB'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'HostFiltersTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'filter_handler'
op|'='
name|'filters'
op|'.'
name|'HostFilterHandler'
op|'('
op|')'
newline|'\n'
name|'classes'
op|'='
name|'filter_handler'
op|'.'
name|'get_matching_classes'
op|'('
nl|'\n'
op|'['
string|"'nova.scheduler.filters.all_filters'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'class_map'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'cls'
name|'in'
name|'classes'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'class_map'
op|'['
name|'cls'
op|'.'
name|'__name__'
op|']'
op|'='
name|'cls'
newline|'\n'
nl|'\n'
DECL|member|test_all_filters
dedent|''
dedent|''
name|'def'
name|'test_all_filters'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Double check at least a couple of known filters exist'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'AllHostsFilter'"
op|','
name|'self'
op|'.'
name|'class_map'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'ComputeFilter'"
op|','
name|'self'
op|'.'
name|'class_map'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_all_host_filter
dedent|''
name|'def'
name|'test_all_host_filter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'AllHostsFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
op|'{'
op|'}'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_stub_service_is_up
dedent|''
name|'def'
name|'_stub_service_is_up'
op|'('
name|'self'
op|','
name|'ret_value'
op|')'
op|':'
newline|'\n'
DECL|function|fake_service_is_up
indent|'        '
name|'def'
name|'fake_service_is_up'
op|'('
name|'self'
op|','
name|'service'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'ret_value'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'servicegroup'
op|'.'
name|'API'
op|','
string|"'service_is_up'"
op|','
name|'fake_service_is_up'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_filter_passes
dedent|''
name|'def'
name|'test_compute_filter_passes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_stub_service_is_up'
op|'('
name|'True'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'ComputeFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'instance_type'"
op|':'
op|'{'
string|"'memory_mb'"
op|':'
number|'1024'
op|'}'
op|'}'
newline|'\n'
name|'service'
op|'='
op|'{'
string|"'disabled'"
op|':'
name|'False'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'free_ram_mb'"
op|':'
number|'1024'
op|','
string|"'service'"
op|':'
name|'service'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_type_filter
dedent|''
name|'def'
name|'test_type_filter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_stub_service_is_up'
op|'('
name|'True'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'TypeAffinityFilter'"
op|']'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
op|'{'
string|"'id'"
op|':'
number|'1'
op|'}'
op|'}'
newline|'\n'
name|'filter2_properties'
op|'='
op|'{'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
op|'{'
string|"'id'"
op|':'
number|'2'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'service'
op|'='
op|'{'
string|"'disabled'"
op|':'
name|'False'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'fake_host'"
op|','
string|"'fake_node'"
op|','
nl|'\n'
op|'{'
string|"'service'"
op|':'
name|'service'
op|'}'
op|')'
newline|'\n'
comment|'# True since empty'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'FakeInstance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'params'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'fake_host'"
op|','
string|"'instance_type_id'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
comment|'# True since same type'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
comment|'# False since different type'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter2_properties'
op|')'
op|')'
newline|'\n'
comment|'# False since node not homogeneous'
nl|'\n'
name|'fakes'
op|'.'
name|'FakeInstance'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'params'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'fake_host'"
op|','
string|"'instance_type_id'"
op|':'
number|'2'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_type_filter
dedent|''
name|'def'
name|'test_aggregate_type_filter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_stub_service_is_up'
op|'('
name|'True'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'AggregateTypeAffinityFilter'"
op|']'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
op|'{'
string|"'name'"
op|':'
string|"'fake1'"
op|'}'
op|'}'
newline|'\n'
name|'filter2_properties'
op|'='
op|'{'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
op|'{'
string|"'name'"
op|':'
string|"'fake2'"
op|'}'
op|'}'
newline|'\n'
name|'service'
op|'='
op|'{'
string|"'disabled'"
op|':'
name|'False'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'fake_host'"
op|','
string|"'fake_node'"
op|','
nl|'\n'
op|'{'
string|"'service'"
op|':'
name|'service'
op|'}'
op|')'
newline|'\n'
comment|'# True since no aggregates'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
comment|'# True since type matches aggregate, metadata'
nl|'\n'
name|'self'
op|'.'
name|'_create_aggregate_with_host'
op|'('
name|'name'
op|'='
string|"'fake_aggregate'"
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'fake_host'"
op|']'
op|','
name|'metadata'
op|'='
op|'{'
string|"'instance_type'"
op|':'
string|"'fake1'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
comment|'# False since type matches aggregate, metadata'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter2_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_compute_filter_fails_on_service_disabled
dedent|''
name|'def'
name|'_test_compute_filter_fails_on_service_disabled'
op|'('
name|'self'
op|','
nl|'\n'
name|'reason'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_stub_service_is_up'
op|'('
name|'True'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'ComputeFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'instance_type'"
op|':'
op|'{'
string|"'memory_mb'"
op|':'
number|'1024'
op|'}'
op|'}'
newline|'\n'
name|'service'
op|'='
op|'{'
string|"'disabled'"
op|':'
name|'True'
op|'}'
newline|'\n'
name|'if'
name|'reason'
op|':'
newline|'\n'
indent|'            '
name|'service'
op|'['
string|"'disabled_reason'"
op|']'
op|'='
name|'reason'
newline|'\n'
dedent|''
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'free_ram_mb'"
op|':'
number|'1024'
op|','
string|"'service'"
op|':'
name|'service'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_filter_fails_on_service_disabled_no_reason
dedent|''
name|'def'
name|'test_compute_filter_fails_on_service_disabled_no_reason'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_compute_filter_fails_on_service_disabled'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_filter_fails_on_service_disabled
dedent|''
name|'def'
name|'test_compute_filter_fails_on_service_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_compute_filter_fails_on_service_disabled'
op|'('
name|'reason'
op|'='
string|"'Test'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_filter_fails_on_service_down
dedent|''
name|'def'
name|'test_compute_filter_fails_on_service_down'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_stub_service_is_up'
op|'('
name|'False'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'ComputeFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'instance_type'"
op|':'
op|'{'
string|"'memory_mb'"
op|':'
number|'1024'
op|'}'
op|'}'
newline|'\n'
name|'service'
op|'='
op|'{'
string|"'disabled'"
op|':'
name|'False'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'free_ram_mb'"
op|':'
number|'1024'
op|','
string|"'service'"
op|':'
name|'service'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_aggregate_with_host
dedent|''
name|'def'
name|'_create_aggregate_with_host'
op|'('
name|'self'
op|','
name|'name'
op|'='
string|"'fake_aggregate'"
op|','
nl|'\n'
name|'metadata'
op|'='
name|'None'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host1'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
name|'name'
op|'}'
newline|'\n'
name|'if'
name|'metadata'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'['
string|"'availability_zone'"
op|']'
op|'='
string|"'fake_avail_zone'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'='
op|'{'
string|"'availability_zone'"
op|':'
string|"'fake_avail_zone'"
op|'}'
newline|'\n'
dedent|''
name|'result'
op|'='
name|'db'
op|'.'
name|'aggregate_create'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
name|'values'
op|','
name|'metadata'
op|')'
newline|'\n'
name|'for'
name|'host'
name|'in'
name|'hosts'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'aggregate_host_add'
op|'('
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
name|'result'
op|'['
string|"'id'"
op|']'
op|','
name|'host'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|member|_do_test_isolated_hosts
dedent|''
name|'def'
name|'_do_test_isolated_hosts'
op|'('
name|'self'
op|','
name|'host_in_list'
op|','
name|'image_in_list'
op|','
nl|'\n'
name|'set_flags'
op|'='
name|'True'
op|','
nl|'\n'
name|'restrict_isolated_hosts_to_isolated_images'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'set_flags'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flags'
op|'('
name|'isolated_images'
op|'='
op|'['
string|"'isolated_image'"
op|']'
op|','
nl|'\n'
name|'isolated_hosts'
op|'='
op|'['
string|"'isolated_host'"
op|']'
op|','
nl|'\n'
name|'restrict_isolated_hosts_to_isolated_images'
op|'='
nl|'\n'
name|'restrict_isolated_hosts_to_isolated_images'
op|')'
newline|'\n'
dedent|''
name|'host_name'
op|'='
string|"'isolated_host'"
name|'if'
name|'host_in_list'
name|'else'
string|"'free_host'"
newline|'\n'
name|'image_ref'
op|'='
string|"'isolated_image'"
name|'if'
name|'image_in_list'
name|'else'
string|"'free_image'"
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
nl|'\n'
string|"'request_spec'"
op|':'
op|'{'
nl|'\n'
string|"'instance_properties'"
op|':'
op|'{'
string|"'image_ref'"
op|':'
name|'image_ref'
op|'}'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'IsolatedHostsFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
name|'host_name'
op|','
string|"'node'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'return'
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_isolated_hosts_fails_isolated_on_non_isolated
dedent|''
name|'def'
name|'test_isolated_hosts_fails_isolated_on_non_isolated'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'_do_test_isolated_hosts'
op|'('
name|'False'
op|','
name|'True'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_isolated_hosts_fails_non_isolated_on_isolated
dedent|''
name|'def'
name|'test_isolated_hosts_fails_non_isolated_on_isolated'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'_do_test_isolated_hosts'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_isolated_hosts_passes_isolated_on_isolated
dedent|''
name|'def'
name|'test_isolated_hosts_passes_isolated_on_isolated'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_do_test_isolated_hosts'
op|'('
name|'True'
op|','
name|'True'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_isolated_hosts_passes_non_isolated_on_non_isolated
dedent|''
name|'def'
name|'test_isolated_hosts_passes_non_isolated_on_non_isolated'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_do_test_isolated_hosts'
op|'('
name|'False'
op|','
name|'False'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_isolated_hosts_no_config
dedent|''
name|'def'
name|'test_isolated_hosts_no_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# If there are no hosts nor isolated images in the config, it should'
nl|'\n'
comment|'# not filter at all. This is the default config.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_do_test_isolated_hosts'
op|'('
name|'False'
op|','
name|'True'
op|','
name|'False'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_do_test_isolated_hosts'
op|'('
name|'True'
op|','
name|'False'
op|','
name|'False'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_do_test_isolated_hosts'
op|'('
name|'True'
op|','
name|'True'
op|','
name|'False'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_do_test_isolated_hosts'
op|'('
name|'False'
op|','
name|'False'
op|','
name|'False'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_isolated_hosts_no_hosts_config
dedent|''
name|'def'
name|'test_isolated_hosts_no_hosts_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'isolated_images'
op|'='
op|'['
string|"'isolated_image'"
op|']'
op|')'
newline|'\n'
comment|'# If there are no hosts in the config, it should only filter out'
nl|'\n'
comment|'# images that are listed'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'_do_test_isolated_hosts'
op|'('
name|'False'
op|','
name|'True'
op|','
name|'False'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_do_test_isolated_hosts'
op|'('
name|'True'
op|','
name|'False'
op|','
name|'False'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'_do_test_isolated_hosts'
op|'('
name|'True'
op|','
name|'True'
op|','
name|'False'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_do_test_isolated_hosts'
op|'('
name|'False'
op|','
name|'False'
op|','
name|'False'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_isolated_hosts_no_images_config
dedent|''
name|'def'
name|'test_isolated_hosts_no_images_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'isolated_hosts'
op|'='
op|'['
string|"'isolated_host'"
op|']'
op|')'
newline|'\n'
comment|'# If there are no images in the config, it should only filter out'
nl|'\n'
comment|'# isolated_hosts'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_do_test_isolated_hosts'
op|'('
name|'False'
op|','
name|'True'
op|','
name|'False'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'_do_test_isolated_hosts'
op|'('
name|'True'
op|','
name|'False'
op|','
name|'False'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'_do_test_isolated_hosts'
op|'('
name|'True'
op|','
name|'True'
op|','
name|'False'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_do_test_isolated_hosts'
op|'('
name|'False'
op|','
name|'False'
op|','
name|'False'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_isolated_hosts_less_restrictive
dedent|''
name|'def'
name|'test_isolated_hosts_less_restrictive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# If there are isolated hosts and non isolated images'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_do_test_isolated_hosts'
op|'('
name|'True'
op|','
name|'False'
op|','
name|'True'
op|','
name|'False'
op|')'
op|')'
newline|'\n'
comment|'# If there are isolated hosts and isolated images'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_do_test_isolated_hosts'
op|'('
name|'True'
op|','
name|'True'
op|','
name|'True'
op|','
name|'False'
op|')'
op|')'
newline|'\n'
comment|'# If there are non isolated hosts and non isolated images'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_do_test_isolated_hosts'
op|'('
name|'False'
op|','
name|'False'
op|','
name|'True'
op|','
nl|'\n'
name|'False'
op|')'
op|')'
newline|'\n'
comment|'# If there are non isolated hosts and isolated images'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'_do_test_isolated_hosts'
op|'('
name|'False'
op|','
name|'True'
op|','
name|'True'
op|','
nl|'\n'
name|'False'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_core_filter_passes
dedent|''
name|'def'
name|'test_core_filter_passes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'CoreFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'instance_type'"
op|':'
op|'{'
string|"'vcpus'"
op|':'
number|'1'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'cpu_allocation_ratio'
op|'='
number|'2'
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'vcpus_total'"
op|':'
number|'4'
op|','
string|"'vcpus_used'"
op|':'
number|'7'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_core_filter_fails_safe
dedent|''
name|'def'
name|'test_core_filter_fails_safe'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'CoreFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'instance_type'"
op|':'
op|'{'
string|"'vcpus'"
op|':'
number|'1'
op|'}'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_core_filter_fails
dedent|''
name|'def'
name|'test_core_filter_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'CoreFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'instance_type'"
op|':'
op|'{'
string|"'vcpus'"
op|':'
number|'1'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'cpu_allocation_ratio'
op|'='
number|'2'
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'vcpus_total'"
op|':'
number|'4'
op|','
string|"'vcpus_used'"
op|':'
number|'8'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_core_filter_value_error
dedent|''
name|'def'
name|'test_aggregate_core_filter_value_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'AggregateCoreFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
op|'{'
string|"'vcpus'"
op|':'
number|'1'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'cpu_allocation_ratio'
op|'='
number|'2'
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'vcpus_total'"
op|':'
number|'4'
op|','
string|"'vcpus_used'"
op|':'
number|'7'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_aggregate_with_host'
op|'('
name|'name'
op|'='
string|"'fake_aggregate'"
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host1'"
op|']'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'cpu_allocation_ratio'"
op|':'
string|"'XXX'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4'
op|'*'
number|'2'
op|','
name|'host'
op|'.'
name|'limits'
op|'['
string|"'vcpu'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_core_filter_default_value
dedent|''
name|'def'
name|'test_aggregate_core_filter_default_value'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'AggregateCoreFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
op|'{'
string|"'vcpus'"
op|':'
number|'1'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'cpu_allocation_ratio'
op|'='
number|'2'
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'vcpus_total'"
op|':'
number|'4'
op|','
string|"'vcpus_used'"
op|':'
number|'8'
op|'}'
op|')'
newline|'\n'
comment|'# False: fallback to default flag w/o aggregates'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_aggregate_with_host'
op|'('
name|'name'
op|'='
string|"'fake_aggregate'"
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host1'"
op|']'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'cpu_allocation_ratio'"
op|':'
string|"'3'"
op|'}'
op|')'
newline|'\n'
comment|'# True: use ratio from aggregates'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4'
op|'*'
number|'3'
op|','
name|'host'
op|'.'
name|'limits'
op|'['
string|"'vcpu'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_core_filter_conflict_values
dedent|''
name|'def'
name|'test_aggregate_core_filter_conflict_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'AggregateCoreFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
op|'{'
string|"'vcpus'"
op|':'
number|'1'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'cpu_allocation_ratio'
op|'='
number|'1'
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'vcpus_total'"
op|':'
number|'4'
op|','
string|"'vcpus_used'"
op|':'
number|'8'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_aggregate_with_host'
op|'('
name|'name'
op|'='
string|"'fake_aggregate1'"
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host1'"
op|']'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'cpu_allocation_ratio'"
op|':'
string|"'2'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_aggregate_with_host'
op|'('
name|'name'
op|'='
string|"'fake_aggregate2'"
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host1'"
op|']'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'cpu_allocation_ratio'"
op|':'
string|"'3'"
op|'}'
op|')'
newline|'\n'
comment|'# use the minimum ratio from aggregates'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4'
op|'*'
number|'2'
op|','
name|'host'
op|'.'
name|'limits'
op|'['
string|"'vcpu'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_make_zone_request
name|'def'
name|'_make_zone_request'
op|'('
name|'zone'
op|','
name|'is_admin'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|','
name|'is_admin'
op|'='
name|'is_admin'
op|')'
newline|'\n'
name|'return'
op|'{'
nl|'\n'
string|"'context'"
op|':'
name|'ctxt'
op|','
nl|'\n'
string|"'request_spec'"
op|':'
op|'{'
nl|'\n'
string|"'instance_properties'"
op|':'
op|'{'
nl|'\n'
string|"'availability_zone'"
op|':'
name|'zone'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_availability_zone_filter_same
dedent|''
name|'def'
name|'test_availability_zone_filter_same'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'AvailabilityZoneFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'service'
op|'='
op|'{'
string|"'availability_zone'"
op|':'
string|"'nova'"
op|'}'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'_make_zone_request'
op|'('
string|"'nova'"
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'service'"
op|':'
name|'service'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'request'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_availability_zone_filter_different
dedent|''
name|'def'
name|'test_availability_zone_filter_different'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'AvailabilityZoneFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'service'
op|'='
op|'{'
string|"'availability_zone'"
op|':'
string|"'nova'"
op|'}'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'_make_zone_request'
op|'('
string|"'bad'"
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'service'"
op|':'
name|'service'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'request'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_retry_filter_disabled
dedent|''
name|'def'
name|'test_retry_filter_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test case where retry/re-scheduling is disabled.'
nl|'\n'
indent|'        '
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'RetryFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_retry_filter_pass
dedent|''
name|'def'
name|'test_retry_filter_pass'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Node not previously tried.'
nl|'\n'
indent|'        '
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'RetryFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'nodeX'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'retry'
op|'='
name|'dict'
op|'('
name|'num_attempts'
op|'='
number|'2'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
op|'['
string|"'host1'"
op|','
string|"'node1'"
op|']'
op|','
comment|'# same host, different node'
nl|'\n'
op|'['
string|"'host2'"
op|','
string|"'node2'"
op|']'
op|','
comment|'# different host and node'
nl|'\n'
op|']'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
name|'dict'
op|'('
name|'retry'
op|'='
name|'retry'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_retry_filter_fail
dedent|''
name|'def'
name|'test_retry_filter_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Node was already tried.'
nl|'\n'
indent|'        '
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'RetryFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'retry'
op|'='
name|'dict'
op|'('
name|'num_attempts'
op|'='
number|'1'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
op|'['
string|"'host1'"
op|','
string|"'node1'"
op|']'
op|']'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
name|'dict'
op|'('
name|'retry'
op|'='
name|'retry'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_filter_num_iops_passes
dedent|''
name|'def'
name|'test_filter_num_iops_passes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_io_ops_per_host'
op|'='
number|'8'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'IoOpsFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'num_io_ops'"
op|':'
number|'7'
op|'}'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_filter_num_iops_fails
dedent|''
name|'def'
name|'test_filter_num_iops_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_io_ops_per_host'
op|'='
number|'8'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'IoOpsFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'num_io_ops'"
op|':'
number|'8'
op|'}'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_filter_num_instances_passes
dedent|''
name|'def'
name|'test_filter_num_instances_passes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_instances_per_host'
op|'='
number|'5'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'NumInstancesFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'num_instances'"
op|':'
number|'4'
op|'}'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_filter_num_instances_fails
dedent|''
name|'def'
name|'test_filter_num_instances_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_instances_per_host'
op|'='
number|'5'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'NumInstancesFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'num_instances'"
op|':'
number|'5'
op|'}'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_group_anti_affinity_filter_passes
dedent|''
name|'def'
name|'_test_group_anti_affinity_filter_passes'
op|'('
name|'self'
op|','
name|'cls'
op|','
name|'policy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
name|'cls'
op|']'
op|'('
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'group_policies'"
op|':'
op|'['
string|"'affinity'"
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'group_policies'"
op|':'
op|'['
name|'policy'
op|']'
op|'}'
newline|'\n'
name|'filter_properties'
op|'['
string|"'group_hosts'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
name|'filter_properties'
op|'['
string|"'group_hosts'"
op|']'
op|'='
op|'['
string|"'host2'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_group_anti_affinity_filter_passes
dedent|''
name|'def'
name|'test_group_anti_affinity_filter_passes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_group_anti_affinity_filter_passes'
op|'('
nl|'\n'
string|"'ServerGroupAntiAffinityFilter'"
op|','
string|"'anti-affinity'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_group_anti_affinity_filter_passes_legacy
dedent|''
name|'def'
name|'test_group_anti_affinity_filter_passes_legacy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_group_anti_affinity_filter_passes'
op|'('
nl|'\n'
string|"'GroupAntiAffinityFilter'"
op|','
string|"'legacy'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_group_anti_affinity_filter_fails
dedent|''
name|'def'
name|'_test_group_anti_affinity_filter_fails'
op|'('
name|'self'
op|','
name|'cls'
op|','
name|'policy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
name|'cls'
op|']'
op|'('
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'group_policies'"
op|':'
op|'['
name|'policy'
op|']'
op|','
nl|'\n'
string|"'group_hosts'"
op|':'
op|'['
string|"'host1'"
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_group_anti_affinity_filter_fails
dedent|''
name|'def'
name|'test_group_anti_affinity_filter_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_group_anti_affinity_filter_fails'
op|'('
nl|'\n'
string|"'ServerGroupAntiAffinityFilter'"
op|','
string|"'anti-affinity'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_group_anti_affinity_filter_fails_legacy
dedent|''
name|'def'
name|'test_group_anti_affinity_filter_fails_legacy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_group_anti_affinity_filter_fails'
op|'('
nl|'\n'
string|"'GroupAntiAffinityFilter'"
op|','
string|"'legacy'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_group_affinity_filter_passes
dedent|''
name|'def'
name|'_test_group_affinity_filter_passes'
op|'('
name|'self'
op|','
name|'cls'
op|','
name|'policy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'ServerGroupAffinityFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'group_policies'"
op|':'
op|'['
string|"'anti-affinity'"
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'group_policies'"
op|':'
op|'['
string|"'affinity'"
op|']'
op|','
nl|'\n'
string|"'group_hosts'"
op|':'
op|'['
string|"'host1'"
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_group_affinity_filter_passes
dedent|''
name|'def'
name|'test_group_affinity_filter_passes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_group_affinity_filter_passes'
op|'('
nl|'\n'
string|"'ServerGroupAffinityFilter'"
op|','
string|"'affinity'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_group_affinity_filter_passes_legacy
dedent|''
name|'def'
name|'test_group_affinity_filter_passes_legacy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_group_affinity_filter_passes'
op|'('
nl|'\n'
string|"'GroupAffinityFilter'"
op|','
string|"'legacy'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_group_affinity_filter_fails
dedent|''
name|'def'
name|'_test_group_affinity_filter_fails'
op|'('
name|'self'
op|','
name|'cls'
op|','
name|'policy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
name|'cls'
op|']'
op|'('
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'group_policies'"
op|':'
op|'['
name|'policy'
op|']'
op|','
nl|'\n'
string|"'group_hosts'"
op|':'
op|'['
string|"'host2'"
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_group_affinity_filter_fails
dedent|''
name|'def'
name|'test_group_affinity_filter_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_group_affinity_filter_fails'
op|'('
nl|'\n'
string|"'ServerGroupAffinityFilter'"
op|','
string|"'affinity'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_group_affinity_filter_fails_legacy
dedent|''
name|'def'
name|'test_group_affinity_filter_fails_legacy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_group_affinity_filter_fails'
op|'('
nl|'\n'
string|"'GroupAffinityFilter'"
op|','
string|"'legacy'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_multi_tenancy_isolation_with_meta_passes
dedent|''
name|'def'
name|'test_aggregate_multi_tenancy_isolation_with_meta_passes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_stub_service_is_up'
op|'('
name|'True'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'AggregateMultiTenancyIsolation'"
op|']'
op|'('
op|')'
newline|'\n'
name|'aggr_meta'
op|'='
op|'{'
string|"'filter_tenant_id'"
op|':'
string|"'my_tenantid'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_create_aggregate_with_host'
op|'('
name|'name'
op|'='
string|"'fake1'"
op|','
name|'metadata'
op|'='
name|'aggr_meta'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host1'"
op|']'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'request_spec'"
op|':'
op|'{'
nl|'\n'
string|"'instance_properties'"
op|':'
op|'{'
nl|'\n'
string|"'project_id'"
op|':'
string|"'my_tenantid'"
op|'}'
op|'}'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'compute'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_multi_tenancy_isolation_fails
dedent|''
name|'def'
name|'test_aggregate_multi_tenancy_isolation_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_stub_service_is_up'
op|'('
name|'True'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'AggregateMultiTenancyIsolation'"
op|']'
op|'('
op|')'
newline|'\n'
name|'aggr_meta'
op|'='
op|'{'
string|"'filter_tenant_id'"
op|':'
string|"'other_tenantid'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_create_aggregate_with_host'
op|'('
name|'name'
op|'='
string|"'fake1'"
op|','
name|'metadata'
op|'='
name|'aggr_meta'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host1'"
op|']'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'request_spec'"
op|':'
op|'{'
nl|'\n'
string|"'instance_properties'"
op|':'
op|'{'
nl|'\n'
string|"'project_id'"
op|':'
string|"'my_tenantid'"
op|'}'
op|'}'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'compute'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_multi_tenancy_isolation_no_meta_passes
dedent|''
name|'def'
name|'test_aggregate_multi_tenancy_isolation_no_meta_passes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_stub_service_is_up'
op|'('
name|'True'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'AggregateMultiTenancyIsolation'"
op|']'
op|'('
op|')'
newline|'\n'
name|'aggr_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_create_aggregate_with_host'
op|'('
name|'name'
op|'='
string|"'fake1'"
op|','
name|'metadata'
op|'='
name|'aggr_meta'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host1'"
op|']'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'request_spec'"
op|':'
op|'{'
nl|'\n'
string|"'instance_properties'"
op|':'
op|'{'
nl|'\n'
string|"'project_id'"
op|':'
string|"'my_tenantid'"
op|'}'
op|'}'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'compute'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_fake_pci_support_requests
dedent|''
name|'def'
name|'_fake_pci_support_requests'
op|'('
name|'self'
op|','
name|'pci_requests'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'pci_requests'
op|'='
name|'pci_requests'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'pci_request_result'
newline|'\n'
nl|'\n'
DECL|member|test_pci_passthrough_pass
dedent|''
name|'def'
name|'test_pci_passthrough_pass'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'PciPassthroughFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'request'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequest'
op|'('
name|'count'
op|'='
number|'1'
op|','
nl|'\n'
name|'spec'
op|'='
op|'['
op|'{'
string|"'vendor_id'"
op|':'
string|"'8086'"
op|'}'
op|']'
op|')'
newline|'\n'
name|'requests'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'('
name|'requests'
op|'='
op|'['
name|'request'
op|']'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'pci_requests'"
op|':'
name|'requests'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'pci_stats'
op|'.'
name|'PciDeviceStats'
op|','
string|"'support_requests'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_pci_support_requests'
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
nl|'\n'
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
name|'attribute_dict'
op|'='
op|'{'
string|"'pci_stats'"
op|':'
name|'pci_stats'
op|'.'
name|'PciDeviceStats'
op|'('
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'pci_request_result'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'pci_requests'
op|','
name|'requests'
op|'.'
name|'requests'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pci_passthrough_fail
dedent|''
name|'def'
name|'test_pci_passthrough_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'PciPassthroughFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'request'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequest'
op|'('
name|'count'
op|'='
number|'1'
op|','
nl|'\n'
name|'spec'
op|'='
op|'['
op|'{'
string|"'vendor_id'"
op|':'
string|"'8086'"
op|'}'
op|']'
op|')'
newline|'\n'
name|'requests'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'('
name|'requests'
op|'='
op|'['
name|'request'
op|']'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'pci_requests'"
op|':'
name|'requests'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'pci_stats'
op|'.'
name|'PciDeviceStats'
op|','
string|"'support_requests'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_pci_support_requests'
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
nl|'\n'
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
name|'attribute_dict'
op|'='
op|'{'
string|"'pci_stats'"
op|':'
name|'pci_stats'
op|'.'
name|'PciDeviceStats'
op|'('
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'pci_request_result'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'pci_requests'
op|','
name|'requests'
op|'.'
name|'requests'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pci_passthrough_no_pci_request
dedent|''
name|'def'
name|'test_pci_passthrough_no_pci_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'PciPassthroughFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'h1'"
op|','
string|"'n1'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pci_passthrough_comopute_stats
dedent|''
name|'def'
name|'test_pci_passthrough_comopute_stats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'PciPassthroughFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'requests'
op|'='
op|'['
op|'{'
string|"'count'"
op|':'
number|'1'
op|','
string|"'spec'"
op|':'
op|'['
op|'{'
string|"'vendor_id'"
op|':'
string|"'8086'"
op|'}'
op|']'
op|'}'
op|']'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'pci_requests'"
op|':'
name|'requests'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'pci_stats'
op|'.'
name|'PciDeviceStats'
op|','
string|"'support_requests'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_pci_support_requests'
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
nl|'\n'
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
name|'attribute_dict'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'pci_request_result'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AttributeError'
op|','
name|'filt_cls'
op|'.'
name|'host_passes'
op|','
nl|'\n'
name|'host'
op|','
name|'filter_properties'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_image_properties_isolation_passes
dedent|''
name|'def'
name|'test_aggregate_image_properties_isolation_passes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_stub_service_is_up'
op|'('
name|'True'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'AggregateImagePropertiesIsolation'"
op|']'
op|'('
op|')'
newline|'\n'
name|'aggr_meta'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_create_aggregate_with_host'
op|'('
name|'name'
op|'='
string|"'fake1'"
op|','
nl|'\n'
name|'metadata'
op|'='
name|'aggr_meta'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host1'"
op|']'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'request_spec'"
op|':'
op|'{'
nl|'\n'
string|"'image'"
op|':'
op|'{'
nl|'\n'
string|"'properties'"
op|':'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|'}'
op|'}'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'compute'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_image_properties_isolation_multi_props_passes
dedent|''
name|'def'
name|'test_aggregate_image_properties_isolation_multi_props_passes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_stub_service_is_up'
op|'('
name|'True'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'AggregateImagePropertiesIsolation'"
op|']'
op|'('
op|')'
newline|'\n'
name|'aggr_meta'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|','
string|"'foo2'"
op|':'
string|"'bar2'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_create_aggregate_with_host'
op|'('
name|'name'
op|'='
string|"'fake1'"
op|','
nl|'\n'
name|'metadata'
op|'='
name|'aggr_meta'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host1'"
op|']'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'request_spec'"
op|':'
op|'{'
nl|'\n'
string|"'image'"
op|':'
op|'{'
nl|'\n'
string|"'properties'"
op|':'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|','
nl|'\n'
string|"'foo2'"
op|':'
string|"'bar2'"
op|'}'
op|'}'
op|'}'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'compute'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_image_properties_isolation_props_with_meta_passes
dedent|''
name|'def'
name|'test_aggregate_image_properties_isolation_props_with_meta_passes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_stub_service_is_up'
op|'('
name|'True'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'AggregateImagePropertiesIsolation'"
op|']'
op|'('
op|')'
newline|'\n'
name|'aggr_meta'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_create_aggregate_with_host'
op|'('
name|'name'
op|'='
string|"'fake1'"
op|','
nl|'\n'
name|'metadata'
op|'='
name|'aggr_meta'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host1'"
op|']'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'request_spec'"
op|':'
op|'{'
nl|'\n'
string|"'image'"
op|':'
op|'{'
nl|'\n'
string|"'properties'"
op|':'
op|'{'
op|'}'
op|'}'
op|'}'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'compute'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_image_properties_isolation_props_imgprops_passes
dedent|''
name|'def'
name|'test_aggregate_image_properties_isolation_props_imgprops_passes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_stub_service_is_up'
op|'('
name|'True'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'AggregateImagePropertiesIsolation'"
op|']'
op|'('
op|')'
newline|'\n'
name|'aggr_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_create_aggregate_with_host'
op|'('
name|'name'
op|'='
string|"'fake1'"
op|','
nl|'\n'
name|'metadata'
op|'='
name|'aggr_meta'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host1'"
op|']'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'request_spec'"
op|':'
op|'{'
nl|'\n'
string|"'image'"
op|':'
op|'{'
nl|'\n'
string|"'properties'"
op|':'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|'}'
op|'}'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'compute'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_image_properties_isolation_props_not_match_fails
dedent|''
name|'def'
name|'test_aggregate_image_properties_isolation_props_not_match_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_stub_service_is_up'
op|'('
name|'True'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'AggregateImagePropertiesIsolation'"
op|']'
op|'('
op|')'
newline|'\n'
name|'aggr_meta'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_create_aggregate_with_host'
op|'('
name|'name'
op|'='
string|"'fake1'"
op|','
nl|'\n'
name|'metadata'
op|'='
name|'aggr_meta'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host1'"
op|']'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'request_spec'"
op|':'
op|'{'
nl|'\n'
string|"'image'"
op|':'
op|'{'
nl|'\n'
string|"'properties'"
op|':'
op|'{'
string|"'foo'"
op|':'
string|"'no-bar'"
op|'}'
op|'}'
op|'}'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'compute'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_image_properties_isolation_props_not_match2_fails
dedent|''
name|'def'
name|'test_aggregate_image_properties_isolation_props_not_match2_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_stub_service_is_up'
op|'('
name|'True'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'AggregateImagePropertiesIsolation'"
op|']'
op|'('
op|')'
newline|'\n'
name|'aggr_meta'
op|'='
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|','
string|"'foo2'"
op|':'
string|"'bar2'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_create_aggregate_with_host'
op|'('
name|'name'
op|'='
string|"'fake1'"
op|','
nl|'\n'
name|'metadata'
op|'='
name|'aggr_meta'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host1'"
op|']'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'request_spec'"
op|':'
op|'{'
nl|'\n'
string|"'image'"
op|':'
op|'{'
nl|'\n'
string|"'properties'"
op|':'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|','
nl|'\n'
string|"'foo2'"
op|':'
string|"'bar3'"
op|'}'
op|'}'
op|'}'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'compute'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_image_properties_isolation_props_namespace
dedent|''
name|'def'
name|'test_aggregate_image_properties_isolation_props_namespace'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_stub_service_is_up'
op|'('
name|'True'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'AggregateImagePropertiesIsolation'"
op|']'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'aggregate_image_properties_isolation_namespace'
op|'='
string|'"np"'
op|')'
newline|'\n'
name|'aggr_meta'
op|'='
op|'{'
string|"'np.foo'"
op|':'
string|"'bar'"
op|','
string|"'foo2'"
op|':'
string|"'bar2'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_create_aggregate_with_host'
op|'('
name|'name'
op|'='
string|"'fake1'"
op|','
nl|'\n'
name|'metadata'
op|'='
name|'aggr_meta'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host1'"
op|']'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'request_spec'"
op|':'
op|'{'
nl|'\n'
string|"'image'"
op|':'
op|'{'
nl|'\n'
string|"'properties'"
op|':'
op|'{'
string|"'np.foo'"
op|':'
string|"'bar'"
op|','
nl|'\n'
string|"'foo2'"
op|':'
string|"'bar3'"
op|'}'
op|'}'
op|'}'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'compute'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_metrics_filter_pass
dedent|''
name|'def'
name|'test_metrics_filter_pass'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'weight_setting'
op|'='
op|'['
string|"'foo=1'"
op|','
string|"'bar=2'"
op|']'
op|','
name|'group'
op|'='
string|"'metrics'"
op|')'
newline|'\n'
name|'metrics'
op|'='
name|'dict'
op|'('
name|'foo'
op|'='
number|'1'
op|','
name|'bar'
op|'='
number|'2'
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
name|'attribute_dict'
op|'='
op|'{'
string|"'metrics'"
op|':'
name|'metrics'
op|'}'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'MetricsFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_metrics_filter_missing_metrics
dedent|''
name|'def'
name|'test_metrics_filter_missing_metrics'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'weight_setting'
op|'='
op|'['
string|"'foo=1'"
op|','
string|"'bar=2'"
op|']'
op|','
name|'group'
op|'='
string|"'metrics'"
op|')'
newline|'\n'
name|'metrics'
op|'='
name|'dict'
op|'('
name|'foo'
op|'='
number|'1'
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
name|'attribute_dict'
op|'='
op|'{'
string|"'metrics'"
op|':'
name|'metrics'
op|'}'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'MetricsFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_filter_num_iops_value
dedent|''
name|'def'
name|'test_aggregate_filter_num_iops_value'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_io_ops_per_host'
op|'='
number|'7'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'AggregateIoOpsFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'num_io_ops'"
op|':'
number|'7'
op|'}'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_aggregate_with_host'
op|'('
nl|'\n'
name|'name'
op|'='
string|"'fake_aggregate'"
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host1'"
op|']'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'max_io_ops_per_host'"
op|':'
number|'8'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_filter_num_iops_value_error
dedent|''
name|'def'
name|'test_aggregate_filter_num_iops_value_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_io_ops_per_host'
op|'='
number|'8'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'AggregateIoOpsFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'num_io_ops'"
op|':'
number|'7'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_aggregate_with_host'
op|'('
nl|'\n'
name|'name'
op|'='
string|"'fake_aggregate'"
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host1'"
op|']'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'max_io_ops_per_host'"
op|':'
string|"'XXX'"
op|'}'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_disk_filter_value_error
dedent|''
name|'def'
name|'test_aggregate_disk_filter_value_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_stub_service_is_up'
op|'('
name|'True'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'AggregateDiskFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'disk_allocation_ratio'
op|'='
number|'1.0'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
nl|'\n'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
op|'{'
string|"'root_gb'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'swap'"
op|':'
number|'1024'
op|'}'
op|'}'
newline|'\n'
name|'service'
op|'='
op|'{'
string|"'disabled'"
op|':'
name|'False'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'free_disk_mb'"
op|':'
number|'3'
op|'*'
number|'1024'
op|','
nl|'\n'
string|"'total_usable_disk_gb'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'service'"
op|':'
name|'service'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_aggregate_with_host'
op|'('
name|'name'
op|'='
string|"'fake_aggregate'"
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host1'"
op|']'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'disk_allocation_ratio'"
op|':'
string|"'XXX'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_disk_filter_default_value
dedent|''
name|'def'
name|'test_aggregate_disk_filter_default_value'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_stub_service_is_up'
op|'('
name|'True'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'AggregateDiskFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'disk_allocation_ratio'
op|'='
number|'1.0'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
nl|'\n'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
op|'{'
string|"'root_gb'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'swap'"
op|':'
number|'1024'
op|'}'
op|'}'
newline|'\n'
name|'service'
op|'='
op|'{'
string|"'disabled'"
op|':'
name|'False'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'free_disk_mb'"
op|':'
number|'3'
op|'*'
number|'1024'
op|','
nl|'\n'
string|"'total_usable_disk_gb'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'service'"
op|':'
name|'service'
op|'}'
op|')'
newline|'\n'
comment|'# Uses global conf.'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Uses an aggregate with ratio'
nl|'\n'
name|'self'
op|'.'
name|'_create_aggregate_with_host'
op|'('
nl|'\n'
name|'name'
op|'='
string|"'fake_aggregate'"
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host1'"
op|']'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'disk_allocation_ratio'"
op|':'
string|"'2'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_filter_aggregate_num_instances_value
dedent|''
name|'def'
name|'test_filter_aggregate_num_instances_value'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_instances_per_host'
op|'='
number|'4'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'AggregateNumInstancesFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'num_instances'"
op|':'
number|'5'
op|'}'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|'}'
newline|'\n'
comment|'# No aggregate defined for that host.'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_aggregate_with_host'
op|'('
nl|'\n'
name|'name'
op|'='
string|"'fake_aggregate'"
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host1'"
op|']'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'max_instances_per_host'"
op|':'
number|'6'
op|'}'
op|')'
newline|'\n'
comment|'# Aggregate defined for that host.'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_filter_aggregate_num_instances_value_error
dedent|''
name|'def'
name|'test_filter_aggregate_num_instances_value_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_instances_per_host'
op|'='
number|'6'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'AggregateNumInstancesFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'num_instances'"
op|':'
number|'5'
op|'}'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_create_aggregate_with_host'
op|'('
nl|'\n'
name|'name'
op|'='
string|"'fake_aggregate'"
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host1'"
op|']'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'max_instances_per_host'"
op|':'
string|"'XXX'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_numa_topology_filter_pass
dedent|''
name|'def'
name|'test_numa_topology_filter_pass'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_topology'
op|'='
name|'hardware'
op|'.'
name|'VirtNUMAInstanceTopology'
op|'('
nl|'\n'
name|'cells'
op|'='
op|'['
name|'hardware'
op|'.'
name|'VirtNUMATopologyCell'
op|'('
number|'0'
op|','
name|'set'
op|'('
op|'['
number|'1'
op|']'
op|')'
op|','
number|'512'
op|')'
op|','
nl|'\n'
name|'hardware'
op|'.'
name|'VirtNUMATopologyCell'
op|'('
number|'1'
op|','
name|'set'
op|'('
op|'['
number|'3'
op|']'
op|')'
op|','
number|'512'
op|')'
op|']'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'numa_topology'
op|'='
op|'('
nl|'\n'
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|'.'
name|'obj_from_topology'
op|'('
nl|'\n'
name|'instance_topology'
op|')'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
nl|'\n'
string|"'request_spec'"
op|':'
op|'{'
nl|'\n'
string|"'instance_properties'"
op|':'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
nl|'\n'
name|'obj_base'
op|'.'
name|'obj_to_primitive'
op|'('
name|'instance'
op|')'
op|')'
op|'}'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'numa_topology'"
op|':'
name|'fakes'
op|'.'
name|'NUMA_TOPOLOGY'
op|'}'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'NUMATopologyFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_numa_topology_filter_numa_instance_no_numa_host_fail
dedent|''
name|'def'
name|'test_numa_topology_filter_numa_instance_no_numa_host_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_topology'
op|'='
name|'hardware'
op|'.'
name|'VirtNUMAInstanceTopology'
op|'('
nl|'\n'
name|'cells'
op|'='
op|'['
name|'hardware'
op|'.'
name|'VirtNUMATopologyCell'
op|'('
number|'0'
op|','
name|'set'
op|'('
op|'['
number|'1'
op|']'
op|')'
op|','
number|'512'
op|')'
op|','
nl|'\n'
name|'hardware'
op|'.'
name|'VirtNUMATopologyCell'
op|'('
number|'1'
op|','
name|'set'
op|'('
op|'['
number|'3'
op|']'
op|')'
op|','
number|'512'
op|')'
op|']'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'numa_topology'
op|'='
op|'('
nl|'\n'
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|'.'
name|'obj_from_topology'
op|'('
nl|'\n'
name|'instance_topology'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'filter_properties'
op|'='
op|'{'
nl|'\n'
string|"'request_spec'"
op|':'
op|'{'
nl|'\n'
string|"'instance_properties'"
op|':'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
nl|'\n'
name|'obj_base'
op|'.'
name|'obj_to_primitive'
op|'('
name|'instance'
op|')'
op|')'
op|'}'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'NUMATopologyFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_numa_topology_filter_numa_host_no_numa_instance_pass
dedent|''
name|'def'
name|'test_numa_topology_filter_numa_host_no_numa_instance_pass'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'numa_topology'
op|'='
name|'None'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
nl|'\n'
string|"'request_spec'"
op|':'
op|'{'
nl|'\n'
string|"'instance_properties'"
op|':'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
nl|'\n'
name|'obj_base'
op|'.'
name|'obj_to_primitive'
op|'('
name|'instance'
op|')'
op|')'
op|'}'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'numa_topology'"
op|':'
name|'fakes'
op|'.'
name|'NUMA_TOPOLOGY'
op|'}'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'NUMATopologyFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_numa_topology_filter_fail_fit
dedent|''
name|'def'
name|'test_numa_topology_filter_fail_fit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_topology'
op|'='
name|'hardware'
op|'.'
name|'VirtNUMAInstanceTopology'
op|'('
nl|'\n'
name|'cells'
op|'='
op|'['
name|'hardware'
op|'.'
name|'VirtNUMATopologyCell'
op|'('
number|'0'
op|','
name|'set'
op|'('
op|'['
number|'1'
op|']'
op|')'
op|','
number|'512'
op|')'
op|','
nl|'\n'
name|'hardware'
op|'.'
name|'VirtNUMATopologyCell'
op|'('
number|'1'
op|','
name|'set'
op|'('
op|'['
number|'2'
op|']'
op|')'
op|','
number|'512'
op|')'
op|','
nl|'\n'
name|'hardware'
op|'.'
name|'VirtNUMATopologyCell'
op|'('
number|'2'
op|','
name|'set'
op|'('
op|'['
number|'3'
op|']'
op|')'
op|','
number|'512'
op|')'
op|']'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'numa_topology'
op|'='
op|'('
nl|'\n'
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|'.'
name|'obj_from_topology'
op|'('
nl|'\n'
name|'instance_topology'
op|')'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
nl|'\n'
string|"'request_spec'"
op|':'
op|'{'
nl|'\n'
string|"'instance_properties'"
op|':'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
nl|'\n'
name|'obj_base'
op|'.'
name|'obj_to_primitive'
op|'('
name|'instance'
op|')'
op|')'
op|'}'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'numa_topology'"
op|':'
name|'fakes'
op|'.'
name|'NUMA_TOPOLOGY'
op|'}'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'NUMATopologyFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_numa_topology_filter_fail_memory
dedent|''
name|'def'
name|'test_numa_topology_filter_fail_memory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'ram_allocation_ratio'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'instance_topology'
op|'='
name|'hardware'
op|'.'
name|'VirtNUMAInstanceTopology'
op|'('
nl|'\n'
name|'cells'
op|'='
op|'['
name|'hardware'
op|'.'
name|'VirtNUMATopologyCell'
op|'('
number|'0'
op|','
name|'set'
op|'('
op|'['
number|'1'
op|']'
op|')'
op|','
number|'1024'
op|')'
op|','
nl|'\n'
name|'hardware'
op|'.'
name|'VirtNUMATopologyCell'
op|'('
number|'1'
op|','
name|'set'
op|'('
op|'['
number|'3'
op|']'
op|')'
op|','
number|'512'
op|')'
op|']'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'numa_topology'
op|'='
op|'('
nl|'\n'
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|'.'
name|'obj_from_topology'
op|'('
nl|'\n'
name|'instance_topology'
op|')'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
nl|'\n'
string|"'request_spec'"
op|':'
op|'{'
nl|'\n'
string|"'instance_properties'"
op|':'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
nl|'\n'
name|'obj_base'
op|'.'
name|'obj_to_primitive'
op|'('
name|'instance'
op|')'
op|')'
op|'}'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'numa_topology'"
op|':'
name|'fakes'
op|'.'
name|'NUMA_TOPOLOGY'
op|'}'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'NUMATopologyFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_numa_topology_filter_fail_cpu
dedent|''
name|'def'
name|'test_numa_topology_filter_fail_cpu'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'cpu_allocation_ratio'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'instance_topology'
op|'='
name|'hardware'
op|'.'
name|'VirtNUMAInstanceTopology'
op|'('
nl|'\n'
name|'cells'
op|'='
op|'['
name|'hardware'
op|'.'
name|'VirtNUMATopologyCell'
op|'('
number|'0'
op|','
name|'set'
op|'('
op|'['
number|'1'
op|']'
op|')'
op|','
number|'512'
op|')'
op|','
nl|'\n'
name|'hardware'
op|'.'
name|'VirtNUMATopologyCell'
op|'('
number|'1'
op|','
name|'set'
op|'('
op|'['
number|'3'
op|','
number|'4'
op|','
number|'5'
op|']'
op|')'
op|','
number|'512'
op|')'
op|']'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'numa_topology'
op|'='
op|'('
nl|'\n'
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|'.'
name|'obj_from_topology'
op|'('
nl|'\n'
name|'instance_topology'
op|')'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
nl|'\n'
string|"'request_spec'"
op|':'
op|'{'
nl|'\n'
string|"'instance_properties'"
op|':'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
nl|'\n'
name|'obj_base'
op|'.'
name|'obj_to_primitive'
op|'('
name|'instance'
op|')'
op|')'
op|'}'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'numa_topology'"
op|':'
name|'fakes'
op|'.'
name|'NUMA_TOPOLOGY'
op|'}'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'NUMATopologyFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_numa_topology_filter_pass_set_limit
dedent|''
name|'def'
name|'test_numa_topology_filter_pass_set_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'cpu_allocation_ratio'
op|'='
number|'21'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'ram_allocation_ratio'
op|'='
number|'1.3'
op|')'
newline|'\n'
nl|'\n'
name|'instance_topology'
op|'='
name|'hardware'
op|'.'
name|'VirtNUMAInstanceTopology'
op|'('
nl|'\n'
name|'cells'
op|'='
op|'['
name|'hardware'
op|'.'
name|'VirtNUMATopologyCell'
op|'('
number|'0'
op|','
name|'set'
op|'('
op|'['
number|'1'
op|']'
op|')'
op|','
number|'512'
op|')'
op|','
nl|'\n'
name|'hardware'
op|'.'
name|'VirtNUMATopologyCell'
op|'('
number|'1'
op|','
name|'set'
op|'('
op|'['
number|'3'
op|']'
op|')'
op|','
number|'512'
op|')'
op|']'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'numa_topology'
op|'='
op|'('
nl|'\n'
name|'objects'
op|'.'
name|'InstanceNUMATopology'
op|'.'
name|'obj_from_topology'
op|'('
nl|'\n'
name|'instance_topology'
op|')'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
nl|'\n'
string|"'request_spec'"
op|':'
op|'{'
nl|'\n'
string|"'instance_properties'"
op|':'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
nl|'\n'
name|'obj_base'
op|'.'
name|'obj_to_primitive'
op|'('
name|'instance'
op|')'
op|')'
op|'}'
op|'}'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
nl|'\n'
op|'{'
string|"'numa_topology'"
op|':'
name|'fakes'
op|'.'
name|'NUMA_TOPOLOGY'
op|'}'
op|')'
newline|'\n'
name|'filt_cls'
op|'='
name|'self'
op|'.'
name|'class_map'
op|'['
string|"'NUMATopologyFilter'"
op|']'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
name|'limits_topology'
op|'='
name|'hardware'
op|'.'
name|'VirtNUMALimitTopology'
op|'.'
name|'from_json'
op|'('
nl|'\n'
name|'host'
op|'.'
name|'limits'
op|'['
string|"'numa_topology'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'limits_topology'
op|'.'
name|'cells'
op|'['
number|'0'
op|']'
op|'.'
name|'cpu_limit'
op|','
number|'42'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'limits_topology'
op|'.'
name|'cells'
op|'['
number|'1'
op|']'
op|'.'
name|'cpu_limit'
op|','
number|'42'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'limits_topology'
op|'.'
name|'cells'
op|'['
number|'0'
op|']'
op|'.'
name|'memory_limit'
op|','
number|'665'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'limits_topology'
op|'.'
name|'cells'
op|'['
number|'1'
op|']'
op|'.'
name|'memory_limit'
op|','
number|'665'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
