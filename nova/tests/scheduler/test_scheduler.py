begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nTests For Scheduler\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'mox'
newline|'\n'
nl|'\n'
name|'from'
name|'novaclient'
name|'import'
name|'v1_1'
name|'as'
name|'novaclient'
newline|'\n'
name|'from'
name|'novaclient'
name|'import'
name|'exceptions'
name|'as'
name|'novaclient_exceptions'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'service'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
name|'import'
name|'api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
name|'import'
name|'driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
name|'import'
name|'manager'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
op|'.'
name|'simple'
name|'import'
name|'SimpleScheduler'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'power_state'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
name|'flags'
op|'.'
name|'DECLARE'
op|'('
string|"'max_cores'"
op|','
string|"'nova.scheduler.simple'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DECLARE'
op|'('
string|"'stub_network'"
op|','
string|"'nova.compute.manager'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DECLARE'
op|'('
string|"'instances_path'"
op|','
string|"'nova.compute.manager'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FAKE_UUID_NOT_FOUND
name|'FAKE_UUID_NOT_FOUND'
op|'='
string|"'ffffffff-ffff-ffff-ffff-ffffffffffff'"
newline|'\n'
DECL|variable|FAKE_UUID
name|'FAKE_UUID'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_create_instance_dict
name|'def'
name|'_create_instance_dict'
op|'('
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a dictionary for a test instance"""'
newline|'\n'
name|'inst'
op|'='
op|'{'
op|'}'
newline|'\n'
comment|'# NOTE(jk0): If an integer is passed as the image_ref, the image'
nl|'\n'
comment|'# service will use the default image service (in this case, the fake).'
nl|'\n'
name|'inst'
op|'['
string|"'image_ref'"
op|']'
op|'='
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
newline|'\n'
name|'inst'
op|'['
string|"'reservation_id'"
op|']'
op|'='
string|"'r-fakeres'"
newline|'\n'
name|'inst'
op|'['
string|"'user_id'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'user_id'"
op|','
string|"'admin'"
op|')'
newline|'\n'
name|'inst'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'project_id'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'inst'
op|'['
string|"'instance_type_id'"
op|']'
op|'='
string|"'1'"
newline|'\n'
name|'if'
string|"'host'"
name|'in'
name|'kwargs'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'['
string|"'host'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'host'"
op|')'
newline|'\n'
dedent|''
name|'inst'
op|'['
string|"'vcpus'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'vcpus'"
op|','
number|'1'
op|')'
newline|'\n'
name|'inst'
op|'['
string|"'memory_mb'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'memory_mb'"
op|','
number|'20'
op|')'
newline|'\n'
name|'inst'
op|'['
string|"'local_gb'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'local_gb'"
op|','
number|'30'
op|')'
newline|'\n'
name|'inst'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'vm_state'"
op|','
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'inst'
op|'['
string|"'power_state'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'power_state'"
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
name|'inst'
op|'['
string|"'task_state'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'task_state'"
op|','
name|'None'
op|')'
newline|'\n'
name|'inst'
op|'['
string|"'availability_zone'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'availability_zone'"
op|','
name|'None'
op|')'
newline|'\n'
name|'inst'
op|'['
string|"'ami_launch_index'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'inst'
op|'['
string|"'launched_on'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'launched_on'"
op|','
string|"'dummy'"
op|')'
newline|'\n'
name|'return'
name|'inst'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_create_volume
dedent|''
name|'def'
name|'_create_volume'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a test volume"""'
newline|'\n'
name|'vol'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'vol'
op|'['
string|"'size'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'vol'
op|'['
string|"'availability_zone'"
op|']'
op|'='
string|"'nova'"
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'ctxt'
op|','
name|'vol'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_create_instance
dedent|''
name|'def'
name|'_create_instance'
op|'('
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a test instance"""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
name|'_create_instance_dict'
op|'('
op|'**'
name|'kwargs'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_create_instance_from_spec
dedent|''
name|'def'
name|'_create_instance_from_spec'
op|'('
name|'spec'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_create_instance'
op|'('
op|'**'
name|'spec'
op|'['
string|"'instance_properties'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_create_request_spec
dedent|''
name|'def'
name|'_create_request_spec'
op|'('
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'dict'
op|'('
name|'instance_properties'
op|'='
name|'_create_instance_dict'
op|'('
op|'**'
name|'kwargs'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_fake_cast_to_compute_host
dedent|''
name|'def'
name|'_fake_cast_to_compute_host'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'method'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'global'
name|'_picked_host'
newline|'\n'
name|'_picked_host'
op|'='
name|'host'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_fake_cast_to_volume_host
dedent|''
name|'def'
name|'_fake_cast_to_volume_host'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'method'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'global'
name|'_picked_host'
newline|'\n'
name|'_picked_host'
op|'='
name|'host'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_fake_create_instance_db_entry
dedent|''
name|'def'
name|'_fake_create_instance_db_entry'
op|'('
name|'simple_self'
op|','
name|'context'
op|','
name|'request_spec'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'instance'
op|'='
name|'_create_instance_from_spec'
op|'('
name|'request_spec'
op|')'
newline|'\n'
name|'global'
name|'instance_uuids'
newline|'\n'
name|'instance_uuids'
op|'.'
name|'append'
op|'('
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'instance'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeContext
dedent|''
name|'class'
name|'FakeContext'
op|'('
name|'context'
op|'.'
name|'RequestContext'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'FakeContext'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
string|"'user'"
op|','
string|"'project'"
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestDriver
dedent|''
dedent|''
name|'class'
name|'TestDriver'
op|'('
name|'driver'
op|'.'
name|'Scheduler'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Scheduler Driver for Tests"""'
newline|'\n'
DECL|member|schedule
name|'def'
name|'schedule'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'topic'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host'
op|'='
string|"'fallback_host'"
newline|'\n'
name|'driver'
op|'.'
name|'cast_to_host'
op|'('
name|'context'
op|','
name|'topic'
op|','
name|'host'
op|','
name|'method'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|schedule_named_method
dedent|''
name|'def'
name|'schedule_named_method'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'num'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'topic'
op|'='
string|"'topic'"
newline|'\n'
name|'host'
op|'='
string|"'named_host'"
newline|'\n'
name|'method'
op|'='
string|"'named_method'"
newline|'\n'
name|'driver'
op|'.'
name|'cast_to_host'
op|'('
name|'context'
op|','
name|'topic'
op|','
name|'host'
op|','
name|'method'
op|','
name|'num'
op|'='
name|'num'
op|')'
newline|'\n'
nl|'\n'
DECL|member|schedule_failing_method
dedent|''
name|'def'
name|'schedule_failing_method'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'NoValidHost'
op|'('
name|'reason'
op|'='
string|'""'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SchedulerTestCase
dedent|''
dedent|''
name|'class'
name|'SchedulerTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for scheduler"""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'SchedulerTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'driver'
op|'='
string|"'nova.tests.scheduler.test_scheduler.TestDriver'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'scheduler_driver'
op|'='
name|'driver'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_compute_service
dedent|''
name|'def'
name|'_create_compute_service'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create compute-manager(ComputeNode and Service record)."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'dic'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'dummy'"
op|','
string|"'binary'"
op|':'
string|"'nova-compute'"
op|','
string|"'topic'"
op|':'
string|"'compute'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'0'
op|','
string|"'availability_zone'"
op|':'
string|"'dummyzone'"
op|'}'
newline|'\n'
name|'s_ref'
op|'='
name|'db'
op|'.'
name|'service_create'
op|'('
name|'ctxt'
op|','
name|'dic'
op|')'
newline|'\n'
nl|'\n'
name|'dic'
op|'='
op|'{'
string|"'service_id'"
op|':'
name|'s_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'16'
op|','
string|"'memory_mb'"
op|':'
number|'32'
op|','
string|"'local_gb'"
op|':'
number|'100'
op|','
nl|'\n'
string|"'vcpus_used'"
op|':'
number|'16'
op|','
string|"'memory_mb_used'"
op|':'
number|'32'
op|','
string|"'local_gb_used'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'hypervisor_type'"
op|':'
string|"'qemu'"
op|','
string|"'hypervisor_version'"
op|':'
number|'12003'
op|','
nl|'\n'
string|"'cpu_info'"
op|':'
string|"''"
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'compute_node_create'
op|'('
name|'ctxt'
op|','
name|'dic'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'db'
op|'.'
name|'service_get'
op|'('
name|'ctxt'
op|','
name|'s_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fallback
dedent|''
name|'def'
name|'test_fallback'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'scheduler'
op|'='
name|'manager'
op|'.'
name|'SchedulerManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpc'
op|','
string|"'cast'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
name|'ctxt'
op|','
nl|'\n'
string|"'fake_topic.fallback_host'"
op|','
nl|'\n'
op|'{'
string|"'method'"
op|':'
string|"'noexist'"
op|','
nl|'\n'
string|"'args'"
op|':'
op|'{'
string|"'num'"
op|':'
number|'7'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'scheduler'
op|'.'
name|'noexist'
op|'('
name|'ctxt'
op|','
string|"'fake_topic'"
op|','
name|'num'
op|'='
number|'7'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_named_method
dedent|''
name|'def'
name|'test_named_method'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'scheduler'
op|'='
name|'manager'
op|'.'
name|'SchedulerManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpc'
op|','
string|"'cast'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
name|'ctxt'
op|','
nl|'\n'
string|"'topic.named_host'"
op|','
nl|'\n'
op|'{'
string|"'method'"
op|':'
string|"'named_method'"
op|','
nl|'\n'
string|"'args'"
op|':'
op|'{'
string|"'num'"
op|':'
number|'7'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'scheduler'
op|'.'
name|'named_method'
op|'('
name|'ctxt'
op|','
string|"'topic'"
op|','
name|'num'
op|'='
number|'7'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_show_host_resources_host_not_exit
dedent|''
name|'def'
name|'test_show_host_resources_host_not_exit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""A host given as an argument does not exists."""'
newline|'\n'
nl|'\n'
name|'scheduler'
op|'='
name|'manager'
op|'.'
name|'SchedulerManager'
op|'('
op|')'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
name|'scheduler'
op|'.'
name|'show_host_resources'
op|','
nl|'\n'
name|'ctxt'
op|','
name|'dest'
op|')'
newline|'\n'
comment|'#TODO(bcwaldon): reimplement this functionality'
nl|'\n'
comment|'#c1 = (e.message.find(_("does not exist or is not a "'
nl|'\n'
comment|'#                       "compute node.")) >= 0)'
nl|'\n'
nl|'\n'
DECL|member|_dic_is_equal
dedent|''
name|'def'
name|'_dic_is_equal'
op|'('
name|'self'
op|','
name|'dic1'
op|','
name|'dic2'
op|','
name|'keys'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Compares 2 dictionary contents(Helper method)"""'
newline|'\n'
name|'if'
name|'not'
name|'keys'
op|':'
newline|'\n'
indent|'            '
name|'keys'
op|'='
op|'['
string|"'vcpus'"
op|','
string|"'memory_mb'"
op|','
string|"'local_gb'"
op|','
nl|'\n'
string|"'vcpus_used'"
op|','
string|"'memory_mb_used'"
op|','
string|"'local_gb_used'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'key'
name|'in'
name|'keys'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
op|'('
name|'dic1'
op|'['
name|'key'
op|']'
op|'=='
name|'dic2'
op|'['
name|'key'
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'False'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|test_show_host_resources_no_project
dedent|''
name|'def'
name|'test_show_host_resources_no_project'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""No instance are running on the given host."""'
newline|'\n'
nl|'\n'
name|'scheduler'
op|'='
name|'manager'
op|'.'
name|'SchedulerManager'
op|'('
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'s_ref'
op|'='
name|'self'
op|'.'
name|'_create_compute_service'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'scheduler'
op|'.'
name|'show_host_resources'
op|'('
name|'ctxt'
op|','
name|'s_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# result checking'
nl|'\n'
name|'c1'
op|'='
op|'('
string|"'resource'"
name|'in'
name|'result'
name|'and'
string|"'usage'"
name|'in'
name|'result'
op|')'
newline|'\n'
name|'compute_node'
op|'='
name|'s_ref'
op|'['
string|"'compute_node'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'c2'
op|'='
name|'self'
op|'.'
name|'_dic_is_equal'
op|'('
name|'result'
op|'['
string|"'resource'"
op|']'
op|','
name|'compute_node'
op|')'
newline|'\n'
name|'c3'
op|'='
name|'result'
op|'['
string|"'usage'"
op|']'
op|'=='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'c1'
name|'and'
name|'c2'
name|'and'
name|'c3'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'ctxt'
op|','
name|'s_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_show_host_resources_works_correctly
dedent|''
name|'def'
name|'test_show_host_resources_works_correctly'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Show_host_resources() works correctly as expected."""'
newline|'\n'
nl|'\n'
name|'scheduler'
op|'='
name|'manager'
op|'.'
name|'SchedulerManager'
op|'('
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'s_ref'
op|'='
name|'self'
op|'.'
name|'_create_compute_service'
op|'('
op|')'
newline|'\n'
name|'i_ref1'
op|'='
name|'_create_instance'
op|'('
name|'project_id'
op|'='
string|"'p-01'"
op|','
name|'host'
op|'='
name|'s_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
name|'i_ref2'
op|'='
name|'_create_instance'
op|'('
name|'project_id'
op|'='
string|"'p-02'"
op|','
name|'vcpus'
op|'='
number|'3'
op|','
nl|'\n'
name|'host'
op|'='
name|'s_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'scheduler'
op|'.'
name|'show_host_resources'
op|'('
name|'ctxt'
op|','
name|'s_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'c1'
op|'='
op|'('
string|"'resource'"
name|'in'
name|'result'
name|'and'
string|"'usage'"
name|'in'
name|'result'
op|')'
newline|'\n'
name|'compute_node'
op|'='
name|'s_ref'
op|'['
string|"'compute_node'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'c2'
op|'='
name|'self'
op|'.'
name|'_dic_is_equal'
op|'('
name|'result'
op|'['
string|"'resource'"
op|']'
op|','
name|'compute_node'
op|')'
newline|'\n'
name|'c3'
op|'='
name|'result'
op|'['
string|"'usage'"
op|']'
op|'.'
name|'keys'
op|'('
op|')'
op|'=='
op|'['
string|"'p-01'"
op|','
string|"'p-02'"
op|']'
newline|'\n'
name|'keys'
op|'='
op|'['
string|"'vcpus'"
op|','
string|"'memory_mb'"
op|','
string|"'local_gb'"
op|']'
newline|'\n'
name|'c4'
op|'='
name|'self'
op|'.'
name|'_dic_is_equal'
op|'('
name|'result'
op|'['
string|"'usage'"
op|']'
op|'['
string|"'p-01'"
op|']'
op|','
name|'i_ref1'
op|','
name|'keys'
op|')'
newline|'\n'
name|'c5'
op|'='
name|'self'
op|'.'
name|'_dic_is_equal'
op|'('
name|'result'
op|'['
string|"'usage'"
op|']'
op|'['
string|"'p-02'"
op|']'
op|','
name|'i_ref2'
op|','
name|'keys'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'c1'
name|'and'
name|'c2'
name|'and'
name|'c3'
name|'and'
name|'c4'
name|'and'
name|'c5'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'ctxt'
op|','
name|'s_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'ctxt'
op|','
name|'i_ref1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'ctxt'
op|','
name|'i_ref2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_exception_puts_instance_in_error_state
dedent|''
name|'def'
name|'test_exception_puts_instance_in_error_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test that an exception from the scheduler puts an instance\n        in the ERROR state."""'
newline|'\n'
nl|'\n'
name|'scheduler'
op|'='
name|'manager'
op|'.'
name|'SchedulerManager'
op|'('
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'Exception'
op|','
name|'scheduler'
op|'.'
name|'_schedule'
op|','
nl|'\n'
string|"'failing_method'"
op|','
name|'ctxt'
op|','
string|"'scheduler'"
op|','
nl|'\n'
name|'instance_id'
op|'='
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Refresh the instance'
nl|'\n'
name|'inst'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'ctxt'
op|','
name|'inst'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'inst'
op|'['
string|"'vm_state'"
op|']'
op|','
name|'vm_states'
op|'.'
name|'ERROR'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SimpleDriverTestCase
dedent|''
dedent|''
name|'class'
name|'SimpleDriverTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for simple driver"""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'SimpleDriverTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'simple_scheduler'
op|'='
string|"'nova.scheduler.simple.SimpleScheduler'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'connection_type'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'stub_network'
op|'='
name|'True'
op|','
nl|'\n'
name|'max_cores'
op|'='
number|'4'
op|','
nl|'\n'
name|'max_gigabytes'
op|'='
number|'4'
op|','
nl|'\n'
name|'network_manager'
op|'='
string|"'nova.network.manager.FlatManager'"
op|','
nl|'\n'
name|'volume_driver'
op|'='
string|"'nova.volume.driver.FakeISCSIDriver'"
op|','
nl|'\n'
name|'scheduler_driver'
op|'='
string|"'nova.scheduler.multi.MultiScheduler'"
op|','
nl|'\n'
name|'compute_scheduler_driver'
op|'='
name|'simple_scheduler'
op|','
nl|'\n'
name|'volume_scheduler_driver'
op|'='
name|'simple_scheduler'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'='
name|'manager'
op|'.'
name|'SchedulerManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_compute_service
dedent|''
name|'def'
name|'_create_compute_service'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a compute service."""'
newline|'\n'
nl|'\n'
name|'dic'
op|'='
op|'{'
string|"'binary'"
op|':'
string|"'nova-compute'"
op|','
string|"'topic'"
op|':'
string|"'compute'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'0'
op|','
string|"'availability_zone'"
op|':'
string|"'dummyzone'"
op|'}'
newline|'\n'
name|'dic'
op|'['
string|"'host'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'host'"
op|','
string|"'dummy'"
op|')'
newline|'\n'
name|'s_ref'
op|'='
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'dic'
op|')'
newline|'\n'
name|'if'
string|"'created_at'"
name|'in'
name|'kwargs'
op|'.'
name|'keys'
op|'('
op|')'
name|'or'
string|"'updated_at'"
name|'in'
name|'kwargs'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'t'
op|'='
name|'utils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
number|'0'
op|')'
newline|'\n'
name|'dic'
op|'['
string|"'created_at'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'created_at'"
op|','
name|'t'
op|')'
newline|'\n'
name|'dic'
op|'['
string|"'updated_at'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'updated_at'"
op|','
name|'t'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s_ref'
op|'['
string|"'id'"
op|']'
op|','
name|'dic'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'dic'
op|'='
op|'{'
string|"'service_id'"
op|':'
name|'s_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'16'
op|','
string|"'memory_mb'"
op|':'
number|'32'
op|','
string|"'local_gb'"
op|':'
number|'100'
op|','
nl|'\n'
string|"'vcpus_used'"
op|':'
number|'16'
op|','
string|"'local_gb_used'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'hypervisor_type'"
op|':'
string|"'qemu'"
op|','
string|"'hypervisor_version'"
op|':'
number|'12003'
op|','
nl|'\n'
string|"'cpu_info'"
op|':'
string|"''"
op|'}'
newline|'\n'
name|'dic'
op|'['
string|"'memory_mb_used'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'memory_mb_used'"
op|','
number|'32'
op|')'
newline|'\n'
name|'dic'
op|'['
string|"'hypervisor_type'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'hypervisor_type'"
op|','
string|"'qemu'"
op|')'
newline|'\n'
name|'dic'
op|'['
string|"'hypervisor_version'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'hypervisor_version'"
op|','
number|'12003'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'compute_node_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'dic'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'service_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_regular_user_can_schedule
dedent|''
name|'def'
name|'test_regular_user_can_schedule'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensures a non-admin can run an instance"""'
newline|'\n'
name|'compute1'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host1'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|','
name|'is_admin'
op|'='
name|'False'
op|')'
newline|'\n'
name|'global'
name|'instance_uuids'
newline|'\n'
name|'instance_uuids'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'SimpleScheduler'
op|','
nl|'\n'
string|"'create_instance_db_entry'"
op|','
name|'_fake_create_instance_db_entry'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'driver'
op|','
nl|'\n'
string|"'cast_to_compute_host'"
op|','
name|'_fake_cast_to_compute_host'
op|')'
newline|'\n'
name|'request_spec'
op|'='
name|'_create_request_spec'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_run_instance'
op|'('
name|'ctxt'
op|','
name|'request_spec'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_doesnt_report_disabled_hosts_as_up_no_queue
dedent|''
name|'def'
name|'test_doesnt_report_disabled_hosts_as_up_no_queue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensures driver doesn\'t find hosts before they are enabled"""'
newline|'\n'
comment|'# NOTE(vish): constructing service without create method'
nl|'\n'
comment|'#             because we are going to use it without queue'
nl|'\n'
name|'compute1'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host1'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host2'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'s1'
op|'='
name|'db'
op|'.'
name|'service_get_by_args'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'host1'"
op|','
string|"'nova-compute'"
op|')'
newline|'\n'
name|'s2'
op|'='
name|'db'
op|'.'
name|'service_get_by_args'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'host2'"
op|','
string|"'nova-compute'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s1'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
string|"'disabled'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s2'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
string|"'disabled'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'hosts'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'hosts_up'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'compute'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'hosts'
op|')'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reports_enabled_hosts_as_up_no_queue
dedent|''
name|'def'
name|'test_reports_enabled_hosts_as_up_no_queue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensures driver can find the hosts that are up"""'
newline|'\n'
comment|'# NOTE(vish): constructing service without create method'
nl|'\n'
comment|'#             because we are going to use it without queue'
nl|'\n'
name|'compute1'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host1'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host2'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'hosts'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'hosts_up'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'compute'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'hosts'
op|')'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_least_busy_host_gets_instance_no_queue
dedent|''
name|'def'
name|'test_least_busy_host_gets_instance_no_queue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensures the host with less cores gets the next one"""'
newline|'\n'
name|'compute1'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host1'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host2'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'global'
name|'instance_uuids'
newline|'\n'
name|'instance_uuids'
op|'='
op|'['
op|']'
newline|'\n'
name|'instance'
op|'='
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'instance_uuids'
op|'.'
name|'append'
op|'('
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuids'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'SimpleScheduler'
op|','
nl|'\n'
string|"'create_instance_db_entry'"
op|','
name|'_fake_create_instance_db_entry'
op|')'
newline|'\n'
name|'global'
name|'_picked_host'
newline|'\n'
name|'_picked_host'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'driver'
op|','
nl|'\n'
string|"'cast_to_compute_host'"
op|','
name|'_fake_cast_to_compute_host'
op|')'
newline|'\n'
nl|'\n'
name|'request_spec'
op|'='
name|'_create_request_spec'
op|'('
op|')'
newline|'\n'
name|'instances'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_run_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'request_spec'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'_picked_host'
op|','
string|"'host2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instance_uuids'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instances'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instances'
op|'['
number|'0'
op|']'
op|'.'
name|'get'
op|'('
string|"'_is_precooked'"
op|','
name|'False'
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'compute1'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuids'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuids'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_specific_host_gets_instance_no_queue
dedent|''
name|'def'
name|'test_specific_host_gets_instance_no_queue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensures if you set zone:host it launches on that host"""'
newline|'\n'
name|'compute1'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host1'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host2'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'global'
name|'instance_uuids'
newline|'\n'
name|'instance_uuids'
op|'='
op|'['
op|']'
newline|'\n'
name|'instance'
op|'='
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'instance_uuids'
op|'.'
name|'append'
op|'('
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuids'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'SimpleScheduler'
op|','
nl|'\n'
string|"'create_instance_db_entry'"
op|','
name|'_fake_create_instance_db_entry'
op|')'
newline|'\n'
name|'global'
name|'_picked_host'
newline|'\n'
name|'_picked_host'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'driver'
op|','
nl|'\n'
string|"'cast_to_compute_host'"
op|','
name|'_fake_cast_to_compute_host'
op|')'
newline|'\n'
nl|'\n'
name|'request_spec'
op|'='
name|'_create_request_spec'
op|'('
name|'availability_zone'
op|'='
string|"'nova:host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'request_spec'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'_picked_host'
op|','
string|"'host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instance_uuids'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
name|'compute1'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuids'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuids'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_wont_schedule_if_specified_host_is_down_no_queue
dedent|''
name|'def'
name|'test_wont_schedule_if_specified_host_is_down_no_queue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'compute1'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host1'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'s1'
op|'='
name|'db'
op|'.'
name|'service_get_by_args'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'host1'"
op|','
string|"'nova-compute'"
op|')'
newline|'\n'
name|'now'
op|'='
name|'utils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'delta'
op|'='
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
name|'FLAGS'
op|'.'
name|'service_down_time'
op|'*'
number|'2'
op|')'
newline|'\n'
name|'past'
op|'='
name|'now'
op|'-'
name|'delta'
newline|'\n'
name|'db'
op|'.'
name|'service_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s1'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
string|"'updated_at'"
op|':'
name|'past'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'global'
name|'instance_uuids'
newline|'\n'
name|'instance_uuids'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'SimpleScheduler'
op|','
nl|'\n'
string|"'create_instance_db_entry'"
op|','
name|'_fake_create_instance_db_entry'
op|')'
newline|'\n'
name|'global'
name|'_picked_host'
newline|'\n'
name|'_picked_host'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'driver'
op|','
nl|'\n'
string|"'cast_to_compute_host'"
op|','
name|'_fake_cast_to_compute_host'
op|')'
newline|'\n'
nl|'\n'
name|'request_spec'
op|'='
name|'_create_request_spec'
op|'('
name|'availability_zone'
op|'='
string|"'nova:host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'WillNotSchedule'
op|','
nl|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_run_instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'request_spec'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_will_schedule_on_disabled_host_if_specified_no_queue
dedent|''
name|'def'
name|'test_will_schedule_on_disabled_host_if_specified_no_queue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'compute1'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host1'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'s1'
op|'='
name|'db'
op|'.'
name|'service_get_by_args'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'host1'"
op|','
string|"'nova-compute'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s1'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
string|"'disabled'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'global'
name|'instance_uuids'
newline|'\n'
name|'instance_uuids'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'SimpleScheduler'
op|','
nl|'\n'
string|"'create_instance_db_entry'"
op|','
name|'_fake_create_instance_db_entry'
op|')'
newline|'\n'
name|'global'
name|'_picked_host'
newline|'\n'
name|'_picked_host'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'driver'
op|','
nl|'\n'
string|"'cast_to_compute_host'"
op|','
name|'_fake_cast_to_compute_host'
op|')'
newline|'\n'
nl|'\n'
name|'request_spec'
op|'='
name|'_create_request_spec'
op|'('
name|'availability_zone'
op|'='
string|"'nova:host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'request_spec'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'_picked_host'
op|','
string|"'host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instance_uuids'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuids'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_specific_zone_gets_instance_no_queue
dedent|''
name|'def'
name|'test_specific_zone_gets_instance_no_queue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensures if you set availability_zone it launches on that zone"""'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'node_availability_zone'
op|'='
string|"'zone1'"
op|')'
newline|'\n'
name|'compute1'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host1'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'node_availability_zone'
op|'='
string|"'zone2'"
op|')'
newline|'\n'
name|'compute2'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host2'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'global'
name|'instance_uuids'
newline|'\n'
name|'instance_uuids'
op|'='
op|'['
op|']'
newline|'\n'
name|'instance'
op|'='
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'instance_uuids'
op|'.'
name|'append'
op|'('
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuids'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'SimpleScheduler'
op|','
nl|'\n'
string|"'create_instance_db_entry'"
op|','
name|'_fake_create_instance_db_entry'
op|')'
newline|'\n'
name|'global'
name|'_picked_host'
newline|'\n'
name|'_picked_host'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'driver'
op|','
nl|'\n'
string|"'cast_to_compute_host'"
op|','
name|'_fake_cast_to_compute_host'
op|')'
newline|'\n'
nl|'\n'
name|'request_spec'
op|'='
name|'_create_request_spec'
op|'('
name|'availability_zone'
op|'='
string|"'zone1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'request_spec'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'_picked_host'
op|','
string|"'host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instance_uuids'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
name|'compute1'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuids'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuids'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bad_instance_zone_fails
dedent|''
name|'def'
name|'test_bad_instance_zone_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'node_availability_zone'
op|'='
string|"'zone1'"
op|')'
newline|'\n'
name|'compute1'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host1'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'request_spec'
op|'='
name|'_create_request_spec'
op|'('
name|'availability_zone'
op|'='
string|"'zone2'"
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NoValidHost'
op|','
nl|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_run_instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'request_spec'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'compute1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bad_volume_zone_fails
dedent|''
dedent|''
name|'def'
name|'test_bad_volume_zone_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'node_availability_zone'
op|'='
string|"'zone1'"
op|')'
newline|'\n'
name|'volume1'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host1'"
op|','
nl|'\n'
string|"'nova-volume'"
op|','
nl|'\n'
string|"'volume'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'volume_manager'
op|')'
newline|'\n'
name|'volume1'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
comment|"# uses 'nova' for zone"
nl|'\n'
name|'volume_id'
op|'='
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NoValidHost'
op|','
nl|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_create_volume'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'volume1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_too_many_cores_no_queue
dedent|''
dedent|''
name|'def'
name|'test_too_many_cores_no_queue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensures we don\'t go over max cores"""'
newline|'\n'
name|'compute1'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host1'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host2'"
op|','
nl|'\n'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'compute'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'instance_uuids1'
op|'='
op|'['
op|']'
newline|'\n'
name|'instance_uuids2'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'index'
name|'in'
name|'xrange'
op|'('
name|'FLAGS'
op|'.'
name|'max_cores'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'instance_uuids1'
op|'.'
name|'append'
op|'('
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'instance_uuids2'
op|'.'
name|'append'
op|'('
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'request_spec'
op|'='
name|'_create_request_spec'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NoValidHost'
op|','
nl|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_run_instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'request_spec'
op|')'
newline|'\n'
name|'for'
name|'instance_uuid'
name|'in'
name|'instance_uuids1'
op|':'
newline|'\n'
indent|'            '
name|'compute1'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'instance_uuid'
name|'in'
name|'instance_uuids2'
op|':'
newline|'\n'
indent|'            '
name|'compute2'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
dedent|''
name|'compute1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_least_busy_host_gets_volume_no_queue
dedent|''
name|'def'
name|'test_least_busy_host_gets_volume_no_queue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensures the host with less gigabytes gets the next one"""'
newline|'\n'
name|'volume1'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host1'"
op|','
nl|'\n'
string|"'nova-volume'"
op|','
nl|'\n'
string|"'volume'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'volume_manager'
op|')'
newline|'\n'
name|'volume1'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'volume2'
op|'='
name|'service'
op|'.'
name|'Service'
op|'('
string|"'host2'"
op|','
nl|'\n'
string|"'nova-volume'"
op|','
nl|'\n'
string|"'volume'"
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'volume_manager'
op|')'
newline|'\n'
nl|'\n'
name|'global'
name|'_picked_host'
newline|'\n'
name|'_picked_host'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'driver'
op|','
nl|'\n'
string|"'cast_to_volume_host'"
op|','
name|'_fake_cast_to_volume_host'
op|')'
newline|'\n'
nl|'\n'
name|'volume2'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'volume_id1'
op|'='
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'volume1'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id1'
op|')'
newline|'\n'
name|'volume_id2'
op|'='
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'_picked_host'
op|','
string|"'host2'"
op|')'
newline|'\n'
name|'volume1'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_doesnt_report_disabled_hosts_as_up2
dedent|''
name|'def'
name|'test_doesnt_report_disabled_hosts_as_up2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensures driver doesn\'t find hosts before they are enabled"""'
newline|'\n'
name|'compute1'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|','
name|'host'
op|'='
string|"'host1'"
op|')'
newline|'\n'
name|'compute2'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|','
name|'host'
op|'='
string|"'host2'"
op|')'
newline|'\n'
name|'s1'
op|'='
name|'db'
op|'.'
name|'service_get_by_args'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'host1'"
op|','
string|"'nova-compute'"
op|')'
newline|'\n'
name|'s2'
op|'='
name|'db'
op|'.'
name|'service_get_by_args'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'host2'"
op|','
string|"'nova-compute'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s1'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
string|"'disabled'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s2'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
string|"'disabled'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'hosts'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'hosts_up'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'compute'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'hosts'
op|')'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reports_enabled_hosts_as_up
dedent|''
name|'def'
name|'test_reports_enabled_hosts_as_up'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensures driver can find the hosts that are up"""'
newline|'\n'
name|'compute1'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|','
name|'host'
op|'='
string|"'host1'"
op|')'
newline|'\n'
name|'compute2'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|','
name|'host'
op|'='
string|"'host2'"
op|')'
newline|'\n'
name|'hosts'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'hosts_up'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'compute'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'hosts'
op|')'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_least_busy_host_gets_instance
dedent|''
name|'def'
name|'test_least_busy_host_gets_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensures the host with less cores gets the next one w/ Simple"""'
newline|'\n'
name|'compute1'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|','
name|'host'
op|'='
string|"'host1'"
op|')'
newline|'\n'
name|'compute2'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|','
name|'host'
op|'='
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
name|'global'
name|'instance_uuids'
newline|'\n'
name|'instance_uuids'
op|'='
op|'['
op|']'
newline|'\n'
name|'instance'
op|'='
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'instance_uuids'
op|'.'
name|'append'
op|'('
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuids'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'SimpleScheduler'
op|','
nl|'\n'
string|"'create_instance_db_entry'"
op|','
name|'_fake_create_instance_db_entry'
op|')'
newline|'\n'
name|'global'
name|'_picked_host'
newline|'\n'
name|'_picked_host'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'driver'
op|','
nl|'\n'
string|"'cast_to_compute_host'"
op|','
name|'_fake_cast_to_compute_host'
op|')'
newline|'\n'
nl|'\n'
name|'request_spec'
op|'='
name|'_create_request_spec'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'request_spec'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'_picked_host'
op|','
string|"'host2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instance_uuids'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
name|'compute1'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuids'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuids'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_specific_host_gets_instance
dedent|''
name|'def'
name|'test_specific_host_gets_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensures if you set availability_zone it launches on that zone"""'
newline|'\n'
name|'compute1'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|','
name|'host'
op|'='
string|"'host1'"
op|')'
newline|'\n'
name|'compute2'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|','
name|'host'
op|'='
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
name|'global'
name|'instance_uuids'
newline|'\n'
name|'instance_uuids'
op|'='
op|'['
op|']'
newline|'\n'
name|'instance'
op|'='
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'instance_uuids'
op|'.'
name|'append'
op|'('
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuids'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'SimpleScheduler'
op|','
nl|'\n'
string|"'create_instance_db_entry'"
op|','
name|'_fake_create_instance_db_entry'
op|')'
newline|'\n'
name|'global'
name|'_picked_host'
newline|'\n'
name|'_picked_host'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'driver'
op|','
nl|'\n'
string|"'cast_to_compute_host'"
op|','
name|'_fake_cast_to_compute_host'
op|')'
newline|'\n'
nl|'\n'
name|'request_spec'
op|'='
name|'_create_request_spec'
op|'('
name|'availability_zone'
op|'='
string|"'nova:host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'request_spec'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'_picked_host'
op|','
string|"'host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instance_uuids'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
name|'compute1'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuids'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuids'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_wont_schedule_if_specified_host_is_down
dedent|''
name|'def'
name|'test_wont_schedule_if_specified_host_is_down'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'compute1'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|','
name|'host'
op|'='
string|"'host1'"
op|')'
newline|'\n'
name|'s1'
op|'='
name|'db'
op|'.'
name|'service_get_by_args'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'host1'"
op|','
string|"'nova-compute'"
op|')'
newline|'\n'
name|'now'
op|'='
name|'utils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'delta'
op|'='
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
name|'FLAGS'
op|'.'
name|'service_down_time'
op|'*'
number|'2'
op|')'
newline|'\n'
name|'past'
op|'='
name|'now'
op|'-'
name|'delta'
newline|'\n'
name|'db'
op|'.'
name|'service_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s1'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
string|"'updated_at'"
op|':'
name|'past'
op|'}'
op|')'
newline|'\n'
name|'request_spec'
op|'='
name|'_create_request_spec'
op|'('
name|'availability_zone'
op|'='
string|"'nova:host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'WillNotSchedule'
op|','
nl|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_run_instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'request_spec'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_will_schedule_on_disabled_host_if_specified
dedent|''
name|'def'
name|'test_will_schedule_on_disabled_host_if_specified'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'compute1'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|','
name|'host'
op|'='
string|"'host1'"
op|')'
newline|'\n'
name|'s1'
op|'='
name|'db'
op|'.'
name|'service_get_by_args'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'host1'"
op|','
string|"'nova-compute'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s1'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
string|"'disabled'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'global'
name|'instance_uuids'
newline|'\n'
name|'instance_uuids'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'SimpleScheduler'
op|','
nl|'\n'
string|"'create_instance_db_entry'"
op|','
name|'_fake_create_instance_db_entry'
op|')'
newline|'\n'
name|'global'
name|'_picked_host'
newline|'\n'
name|'_picked_host'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'driver'
op|','
nl|'\n'
string|"'cast_to_compute_host'"
op|','
name|'_fake_cast_to_compute_host'
op|')'
newline|'\n'
nl|'\n'
name|'request_spec'
op|'='
name|'_create_request_spec'
op|'('
name|'availability_zone'
op|'='
string|"'nova:host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'request_spec'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'_picked_host'
op|','
string|"'host1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instance_uuids'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuids'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_too_many_cores
dedent|''
name|'def'
name|'test_too_many_cores'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensures we don\'t go over max cores"""'
newline|'\n'
name|'compute1'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|','
name|'host'
op|'='
string|"'host1'"
op|')'
newline|'\n'
name|'compute2'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|','
name|'host'
op|'='
string|"'host2'"
op|')'
newline|'\n'
name|'instance_uuids1'
op|'='
op|'['
op|']'
newline|'\n'
name|'instance_uuids2'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'index'
name|'in'
name|'xrange'
op|'('
name|'FLAGS'
op|'.'
name|'max_cores'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'compute1'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'instance_uuids1'
op|'.'
name|'append'
op|'('
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'instance_uuids2'
op|'.'
name|'append'
op|'('
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_create_instance_db_entry
dedent|''
name|'def'
name|'_create_instance_db_entry'
op|'('
name|'simple_self'
op|','
name|'context'
op|','
name|'request_spec'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
name|'_'
op|'('
string|'"Shouldn\'t try to create DB entry when at "'
nl|'\n'
string|'"max cores"'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'SimpleScheduler'
op|','
nl|'\n'
string|"'create_instance_db_entry'"
op|','
name|'_create_instance_db_entry'
op|')'
newline|'\n'
nl|'\n'
name|'global'
name|'_picked_host'
newline|'\n'
name|'_picked_host'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'driver'
op|','
nl|'\n'
string|"'cast_to_compute_host'"
op|','
name|'_fake_cast_to_compute_host'
op|')'
newline|'\n'
nl|'\n'
name|'request_spec'
op|'='
name|'_create_request_spec'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NoValidHost'
op|','
nl|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_run_instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'request_spec'
op|')'
newline|'\n'
name|'for'
name|'instance_uuid'
name|'in'
name|'instance_uuids1'
op|':'
newline|'\n'
indent|'            '
name|'compute1'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'instance_uuid'
name|'in'
name|'instance_uuids2'
op|':'
newline|'\n'
indent|'            '
name|'compute2'
op|'.'
name|'terminate_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
dedent|''
name|'compute1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'compute2'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_least_busy_host_gets_volume
dedent|''
name|'def'
name|'test_least_busy_host_gets_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensures the host with less gigabytes gets the next one"""'
newline|'\n'
name|'volume1'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'volume'"
op|','
name|'host'
op|'='
string|"'host1'"
op|')'
newline|'\n'
name|'volume2'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'volume'"
op|','
name|'host'
op|'='
string|"'host2'"
op|')'
newline|'\n'
nl|'\n'
name|'global'
name|'_picked_host'
newline|'\n'
name|'_picked_host'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'driver'
op|','
nl|'\n'
string|"'cast_to_volume_host'"
op|','
name|'_fake_cast_to_volume_host'
op|')'
newline|'\n'
nl|'\n'
name|'volume_id1'
op|'='
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'volume1'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id1'
op|')'
newline|'\n'
name|'volume_id2'
op|'='
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'_picked_host'
op|','
string|"'host2'"
op|')'
newline|'\n'
name|'volume1'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id1'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id2'
op|')'
newline|'\n'
name|'volume1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'volume2'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_too_many_gigabytes
dedent|''
name|'def'
name|'test_too_many_gigabytes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensures we don\'t go over max gigabytes"""'
newline|'\n'
name|'volume1'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'volume'"
op|','
name|'host'
op|'='
string|"'host1'"
op|')'
newline|'\n'
name|'volume2'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'volume'"
op|','
name|'host'
op|'='
string|"'host2'"
op|')'
newline|'\n'
name|'volume_ids1'
op|'='
op|'['
op|']'
newline|'\n'
name|'volume_ids2'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'index'
name|'in'
name|'xrange'
op|'('
name|'FLAGS'
op|'.'
name|'max_gigabytes'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'volume_id'
op|'='
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'volume1'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'volume_ids1'
op|'.'
name|'append'
op|'('
name|'volume_id'
op|')'
newline|'\n'
name|'volume_id'
op|'='
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'volume2'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'volume_ids2'
op|'.'
name|'append'
op|'('
name|'volume_id'
op|')'
newline|'\n'
dedent|''
name|'volume_id'
op|'='
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NoValidHost'
op|','
nl|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_create_volume'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|')'
newline|'\n'
name|'for'
name|'volume_id'
name|'in'
name|'volume_ids1'
op|':'
newline|'\n'
indent|'            '
name|'volume1'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'volume_id'
name|'in'
name|'volume_ids2'
op|':'
newline|'\n'
indent|'            '
name|'volume2'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
dedent|''
name|'volume1'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'volume2'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_scheduler_live_migration_with_volume
dedent|''
name|'def'
name|'test_scheduler_live_migration_with_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""schedule_live_migration() works correctly as expected.\n\n        Also, checks instance state is changed from \'running\' -> \'migrating\'.\n\n        """'
newline|'\n'
nl|'\n'
name|'instance_id'
op|'='
name|'_create_instance'
op|'('
name|'host'
op|'='
string|"'dummy'"
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'i_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'dic'
op|'='
op|'{'
string|"'instance_id'"
op|':'
name|'instance_id'
op|','
string|"'size'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'v_ref'
op|'='
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'dic'
op|')'
newline|'\n'
nl|'\n'
comment|'# cannot check 2nd argument b/c the addresses of instance object'
nl|'\n'
comment|'# is different.'
nl|'\n'
name|'driver_i'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
newline|'\n'
name|'nocare'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver_i'
op|','
string|"'_live_migration_src_check'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver_i'
op|','
string|"'_live_migration_dest_check'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver_i'
op|','
string|"'_live_migration_common_check'"
op|')'
newline|'\n'
name|'driver_i'
op|'.'
name|'_live_migration_src_check'
op|'('
name|'nocare'
op|','
name|'nocare'
op|')'
newline|'\n'
name|'driver_i'
op|'.'
name|'_live_migration_dest_check'
op|'('
name|'nocare'
op|','
name|'nocare'
op|','
nl|'\n'
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|','
name|'False'
op|')'
newline|'\n'
name|'driver_i'
op|'.'
name|'_live_migration_common_check'
op|'('
name|'nocare'
op|','
name|'nocare'
op|','
nl|'\n'
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpc'
op|','
string|"'cast'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'instance_id'"
op|':'
name|'instance_id'
op|','
string|"'dest'"
op|':'
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|','
nl|'\n'
string|"'block_migration'"
op|':'
name|'False'
op|'}'
newline|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'nocare'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|"'live_migration'"
op|','
string|'"args"'
op|':'
name|'kwargs'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'live_migration'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
nl|'\n'
name|'instance_id'
op|'='
name|'instance_id'
op|','
nl|'\n'
name|'dest'
op|'='
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|','
nl|'\n'
name|'block_migration'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'i_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'i_ref'
op|'['
string|"'vm_state'"
op|']'
op|'=='
name|'vm_states'
op|'.'
name|'MIGRATING'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'v_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_src_check_instance_not_running
dedent|''
name|'def'
name|'test_live_migration_src_check_instance_not_running'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""The instance given by instance_id is not running."""'
newline|'\n'
nl|'\n'
name|'instance_id'
op|'='
name|'_create_instance'
op|'('
nl|'\n'
name|'power_state'
op|'='
name|'power_state'
op|'.'
name|'NOSTATE'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'i_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'_live_migration_src_check'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'i_ref'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'Invalid'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'c'
op|'='
op|'('
name|'e'
op|'.'
name|'message'
op|'.'
name|'find'
op|'('
string|"'is not running'"
op|')'
op|'>'
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'c'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_src_check_volume_node_not_alive
dedent|''
name|'def'
name|'test_live_migration_src_check_volume_node_not_alive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Raise exception when volume node is not alive."""'
newline|'\n'
nl|'\n'
name|'instance_id'
op|'='
name|'_create_instance'
op|'('
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'i_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'dic'
op|'='
op|'{'
string|"'instance_id'"
op|':'
name|'instance_id'
op|','
string|"'size'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'v_ref'
op|'='
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'instance_id'"
op|':'
name|'instance_id'
op|','
nl|'\n'
string|"'size'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'t1'
op|'='
name|'utils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
number|'1'
op|')'
newline|'\n'
name|'dic'
op|'='
op|'{'
string|"'created_at'"
op|':'
name|'t1'
op|','
string|"'updated_at'"
op|':'
name|'t1'
op|','
string|"'binary'"
op|':'
string|"'nova-volume'"
op|','
nl|'\n'
string|"'topic'"
op|':'
string|"'volume'"
op|','
string|"'report_count'"
op|':'
number|'0'
op|'}'
newline|'\n'
name|'s_ref'
op|'='
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'dic'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'VolumeServiceUnavailable'
op|','
nl|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'schedule_live_migration'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'v_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_src_check_compute_node_not_alive
dedent|''
name|'def'
name|'test_live_migration_src_check_compute_node_not_alive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Confirms src-compute node is alive."""'
newline|'\n'
name|'instance_id'
op|'='
name|'_create_instance'
op|'('
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'i_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'t'
op|'='
name|'utils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
number|'10'
op|')'
newline|'\n'
name|'s_ref'
op|'='
name|'self'
op|'.'
name|'_create_compute_service'
op|'('
name|'created_at'
op|'='
name|'t'
op|','
name|'updated_at'
op|'='
name|'t'
op|','
nl|'\n'
name|'host'
op|'='
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ComputeServiceUnavailable'
op|','
nl|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'_live_migration_src_check'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'i_ref'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_src_check_works_correctly
dedent|''
name|'def'
name|'test_live_migration_src_check_works_correctly'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Confirms this method finishes with no error."""'
newline|'\n'
name|'instance_id'
op|'='
name|'_create_instance'
op|'('
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'i_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'s_ref'
op|'='
name|'self'
op|'.'
name|'_create_compute_service'
op|'('
name|'host'
op|'='
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'ret'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'_live_migration_src_check'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'i_ref'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'ret'
name|'is'
name|'None'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_dest_check_not_alive
dedent|''
name|'def'
name|'test_live_migration_dest_check_not_alive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Confirms exception raises in case dest host does not exist."""'
newline|'\n'
name|'instance_id'
op|'='
name|'_create_instance'
op|'('
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'i_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'t'
op|'='
name|'utils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
number|'10'
op|')'
newline|'\n'
name|'s_ref'
op|'='
name|'self'
op|'.'
name|'_create_compute_service'
op|'('
name|'created_at'
op|'='
name|'t'
op|','
name|'updated_at'
op|'='
name|'t'
op|','
nl|'\n'
name|'host'
op|'='
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ComputeServiceUnavailable'
op|','
nl|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'_live_migration_dest_check'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'i_ref'
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_dest_check_service_same_host
dedent|''
name|'def'
name|'test_live_migration_dest_check_service_same_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Confirms exception raises in case dest and src is same host."""'
newline|'\n'
name|'instance_id'
op|'='
name|'_create_instance'
op|'('
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'i_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'s_ref'
op|'='
name|'self'
op|'.'
name|'_create_compute_service'
op|'('
name|'host'
op|'='
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'UnableToMigrateToSelf'
op|','
nl|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'_live_migration_dest_check'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'i_ref'
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_dest_check_service_lack_memory
dedent|''
name|'def'
name|'test_live_migration_dest_check_service_lack_memory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Confirms exception raises when dest doesn\'t have enough memory."""'
newline|'\n'
name|'instance_id'
op|'='
name|'_create_instance'
op|'('
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'instance_id2'
op|'='
name|'_create_instance'
op|'('
name|'host'
op|'='
string|"'somewhere'"
op|','
nl|'\n'
name|'memory_mb'
op|'='
number|'12'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'i_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'s_ref'
op|'='
name|'self'
op|'.'
name|'_create_compute_service'
op|'('
name|'host'
op|'='
string|"'somewhere'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'MigrationError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'_live_migration_dest_check'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'i_ref'
op|','
string|"'somewhere'"
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id2'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_block_migration_dest_check_service_lack_disk
dedent|''
name|'def'
name|'test_block_migration_dest_check_service_lack_disk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Confirms exception raises when dest doesn\'t have enough disk."""'
newline|'\n'
name|'instance_id'
op|'='
name|'_create_instance'
op|'('
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'instance_id2'
op|'='
name|'_create_instance'
op|'('
name|'host'
op|'='
string|"'somewhere'"
op|','
nl|'\n'
name|'local_gb'
op|'='
number|'70'
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'i_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'s_ref'
op|'='
name|'self'
op|'.'
name|'_create_compute_service'
op|'('
name|'host'
op|'='
string|"'somewhere'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'MigrationError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'_live_migration_dest_check'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'i_ref'
op|','
string|"'somewhere'"
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id2'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_dest_check_service_works_correctly
dedent|''
name|'def'
name|'test_live_migration_dest_check_service_works_correctly'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Confirms method finishes with no error."""'
newline|'\n'
name|'instance_id'
op|'='
name|'_create_instance'
op|'('
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'i_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'s_ref'
op|'='
name|'self'
op|'.'
name|'_create_compute_service'
op|'('
name|'host'
op|'='
string|"'somewhere'"
op|','
nl|'\n'
name|'memory_mb_used'
op|'='
number|'5'
op|')'
newline|'\n'
nl|'\n'
name|'ret'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'_live_migration_dest_check'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'i_ref'
op|','
nl|'\n'
string|"'somewhere'"
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'ret'
name|'is'
name|'None'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_common_check_service_orig_not_exists
dedent|''
name|'def'
name|'test_live_migration_common_check_service_orig_not_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Destination host does not exist."""'
newline|'\n'
nl|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
comment|'# mocks for live_migration_common_check()'
nl|'\n'
name|'instance_id'
op|'='
name|'_create_instance'
op|'('
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'i_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'t1'
op|'='
name|'utils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
number|'10'
op|')'
newline|'\n'
name|'s_ref'
op|'='
name|'self'
op|'.'
name|'_create_compute_service'
op|'('
name|'created_at'
op|'='
name|'t1'
op|','
name|'updated_at'
op|'='
name|'t1'
op|','
nl|'\n'
name|'host'
op|'='
name|'dest'
op|')'
newline|'\n'
nl|'\n'
comment|'# mocks for mounted_on_same_shared_storage()'
nl|'\n'
name|'fpath'
op|'='
string|"'/test/20110127120000'"
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'rpc'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'topic'
op|'='
name|'FLAGS'
op|'.'
name|'compute_topic'
newline|'\n'
name|'driver'
op|'.'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'topic'
op|','
name|'dest'
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|"'create_shared_storage_test_file'"
op|'}'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fpath'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'topic'
op|','
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|"'check_shared_storage_test_file'"
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|"'filename'"
op|':'
name|'fpath'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'topic'
op|','
name|'dest'
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|"'cleanup_shared_storage_test_file'"
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|"'filename'"
op|':'
name|'fpath'
op|'}'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
comment|'#self.assertRaises(exception.SourceHostUnavailable,'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FileNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'_live_migration_common_check'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'i_ref'
op|','
name|'dest'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_common_check_service_different_hypervisor
dedent|''
name|'def'
name|'test_live_migration_common_check_service_different_hypervisor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Original host and dest host has different hypervisor type."""'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'instance_id'
op|'='
name|'_create_instance'
op|'('
name|'host'
op|'='
string|"'dummy'"
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'i_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
comment|'# compute service for destination'
nl|'\n'
name|'s_ref'
op|'='
name|'self'
op|'.'
name|'_create_compute_service'
op|'('
name|'host'
op|'='
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
comment|'# compute service for original host'
nl|'\n'
name|'s_ref2'
op|'='
name|'self'
op|'.'
name|'_create_compute_service'
op|'('
name|'host'
op|'='
name|'dest'
op|','
name|'hypervisor_type'
op|'='
string|"'xen'"
op|')'
newline|'\n'
nl|'\n'
comment|'# mocks'
nl|'\n'
name|'driver'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'mounted_on_same_shared_storage'"
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'mounted_on_same_shared_storage'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'i_ref'
op|','
name|'dest'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidHypervisorType'
op|','
nl|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'_live_migration_common_check'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'i_ref'
op|','
name|'dest'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s_ref2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_common_check_service_different_version
dedent|''
name|'def'
name|'test_live_migration_common_check_service_different_version'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Original host and dest host has different hypervisor version."""'
newline|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'instance_id'
op|'='
name|'_create_instance'
op|'('
name|'host'
op|'='
string|"'dummy'"
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'i_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
comment|'# compute service for destination'
nl|'\n'
name|'s_ref'
op|'='
name|'self'
op|'.'
name|'_create_compute_service'
op|'('
name|'host'
op|'='
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
comment|'# compute service for original host'
nl|'\n'
name|'s_ref2'
op|'='
name|'self'
op|'.'
name|'_create_compute_service'
op|'('
name|'host'
op|'='
name|'dest'
op|','
nl|'\n'
name|'hypervisor_version'
op|'='
number|'12002'
op|')'
newline|'\n'
nl|'\n'
comment|'# mocks'
nl|'\n'
name|'driver'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'mounted_on_same_shared_storage'"
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'mounted_on_same_shared_storage'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'i_ref'
op|','
name|'dest'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'DestinationHypervisorTooOld'
op|','
nl|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
op|'.'
name|'_live_migration_common_check'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'i_ref'
op|','
name|'dest'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s_ref2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migration_common_check_checking_cpuinfo_fail
dedent|''
name|'def'
name|'test_live_migration_common_check_checking_cpuinfo_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Raise exception when original host doesn\'t have compatible cpu."""'
newline|'\n'
nl|'\n'
name|'dest'
op|'='
string|"'dummydest'"
newline|'\n'
name|'instance_id'
op|'='
name|'_create_instance'
op|'('
name|'host'
op|'='
string|"'dummy'"
op|')'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'i_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
comment|'# compute service for destination'
nl|'\n'
name|'s_ref'
op|'='
name|'self'
op|'.'
name|'_create_compute_service'
op|'('
name|'host'
op|'='
name|'i_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
comment|'# compute service for original host'
nl|'\n'
name|'s_ref2'
op|'='
name|'self'
op|'.'
name|'_create_compute_service'
op|'('
name|'host'
op|'='
name|'dest'
op|')'
newline|'\n'
nl|'\n'
comment|'# mocks'
nl|'\n'
name|'driver'
op|'='
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'driver'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'mounted_on_same_shared_storage'"
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'mounted_on_same_shared_storage'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'i_ref'
op|','
name|'dest'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpc'
op|','
string|"'call'"
op|','
name|'use_mock_anything'
op|'='
name|'True'
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|"'compare_cpu'"
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|"'cpu_info'"
op|':'
name|'s_ref2'
op|'['
string|"'compute_node'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'cpu_info'"
op|']'
op|'}'
op|'}'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'rpc'
op|'.'
name|'RemoteError'
op|'('
name|'exception'
op|'.'
name|'InvalidCPUInfo'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InvalidCPUInfo'
op|'('
name|'reason'
op|'='
string|"'fake'"
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'driver'
op|'.'
name|'_live_migration_common_check'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'i_ref'
op|','
nl|'\n'
name|'dest'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'rpc'
op|'.'
name|'RemoteError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'c'
op|'='
op|'('
name|'e'
op|'.'
name|'exc_type'
op|'=='
name|'exception'
op|'.'
name|'InvalidCPUInfo'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'c'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'s_ref2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MultiDriverTestCase
dedent|''
dedent|''
name|'class'
name|'MultiDriverTestCase'
op|'('
name|'SimpleDriverTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for multi driver."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'MultiDriverTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'connection_type'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'stub_network'
op|'='
name|'True'
op|','
nl|'\n'
name|'max_cores'
op|'='
number|'4'
op|','
nl|'\n'
name|'max_gigabytes'
op|'='
number|'4'
op|','
nl|'\n'
name|'network_manager'
op|'='
string|"'nova.network.manager.FlatManager'"
op|','
nl|'\n'
name|'volume_driver'
op|'='
string|"'nova.volume.driver.FakeISCSIDriver'"
op|','
nl|'\n'
name|'compute_scheduler_driver'
op|'='
op|'('
string|"'nova.scheduler.simple'"
nl|'\n'
string|"'.SimpleScheduler'"
op|')'
op|','
nl|'\n'
name|'volume_scheduler_driver'
op|'='
op|'('
string|"'nova.scheduler.simple'"
nl|'\n'
string|"'.SimpleScheduler'"
op|')'
op|','
nl|'\n'
name|'scheduler_driver'
op|'='
string|"'nova.scheduler.multi.MultiScheduler'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'='
name|'manager'
op|'.'
name|'SchedulerManager'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeZone
dedent|''
dedent|''
name|'class'
name|'FakeZone'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'id'
op|','
name|'api_url'
op|','
name|'username'
op|','
name|'password'
op|','
name|'name'
op|'='
string|"'child'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'id'
op|'='
name|'id'
newline|'\n'
name|'self'
op|'.'
name|'api_url'
op|'='
name|'api_url'
newline|'\n'
name|'self'
op|'.'
name|'username'
op|'='
name|'username'
newline|'\n'
name|'self'
op|'.'
name|'password'
op|'='
name|'password'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|ZONE_API_URL1
dedent|''
dedent|''
name|'ZONE_API_URL1'
op|'='
string|'"http://1.example.com"'
newline|'\n'
DECL|variable|ZONE_API_URL2
name|'ZONE_API_URL2'
op|'='
string|'"http://2.example.com"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|zone_get_all
name|'def'
name|'zone_get_all'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'['
nl|'\n'
name|'FakeZone'
op|'('
number|'1'
op|','
name|'ZONE_API_URL1'
op|','
string|"'bob'"
op|','
string|"'xxx'"
op|')'
op|','
nl|'\n'
name|'FakeZone'
op|'('
number|'2'
op|','
name|'ZONE_API_URL2'
op|','
string|"'bob'"
op|','
string|"'xxx'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_instance_get_by_uuid
dedent|''
name|'def'
name|'fake_instance_get_by_uuid'
op|'('
name|'context'
op|','
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'FAKE_UUID_NOT_FOUND'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'uuid'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'id'"
op|':'
number|'1'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeRerouteCompute
dedent|''
dedent|''
name|'class'
name|'FakeRerouteCompute'
op|'('
name|'api'
op|'.'
name|'reroute_compute'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'method_name'
op|','
name|'id_to_return'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'FakeRerouteCompute'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'method_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'id_to_return'
op|'='
name|'id_to_return'
newline|'\n'
nl|'\n'
DECL|member|_call_child_zones
dedent|''
name|'def'
name|'_call_child_zones'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'zones'
op|','
name|'function'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_collection_context_and_id
dedent|''
name|'def'
name|'get_collection_context_and_id'
op|'('
name|'self'
op|','
name|'args'
op|','
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'('
string|'"servers"'
op|','
name|'None'
op|','
name|'self'
op|'.'
name|'id_to_return'
op|')'
newline|'\n'
nl|'\n'
DECL|member|unmarshall_result
dedent|''
name|'def'
name|'unmarshall_result'
op|'('
name|'self'
op|','
name|'zone_responses'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'dict'
op|'('
name|'magic'
op|'='
string|'"found me"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|go_boom
dedent|''
dedent|''
name|'def'
name|'go_boom'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'instance'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|found_instance
dedent|''
name|'def'
name|'found_instance'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'dict'
op|'('
name|'name'
op|'='
string|"'myserver'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeResource
dedent|''
name|'class'
name|'FakeResource'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'attribute_dict'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'attribute_dict'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'setattr'
op|'('
name|'self'
op|','
name|'k'
op|','
name|'v'
op|')'
newline|'\n'
nl|'\n'
DECL|member|pause
dedent|''
dedent|''
name|'def'
name|'pause'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ZoneRedirectTest
dedent|''
dedent|''
name|'class'
name|'ZoneRedirectTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ZoneRedirectTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'zone_get_all'"
op|','
name|'zone_get_all'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
nl|'\n'
name|'fake_instance_get_by_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enable_zone_routing'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ZoneRedirectTest'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_trap_found_locally
dedent|''
name|'def'
name|'test_trap_found_locally'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'decorator'
op|'='
name|'FakeRerouteCompute'
op|'('
string|'"foo"'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'decorator'
op|'('
name|'found_instance'
op|')'
op|'('
name|'None'
op|','
name|'None'
op|','
number|'1'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'api'
op|'.'
name|'RedirectResult'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
name|'_'
op|'('
string|'"Successful database hit should succeed"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_trap_not_found_locally_id_passed
dedent|''
dedent|''
name|'def'
name|'test_trap_not_found_locally_id_passed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""When an integer ID is not found locally, we cannot reroute to\n        another zone, so just return InstanceNotFound exception\n        """'
newline|'\n'
name|'decorator'
op|'='
name|'FakeRerouteCompute'
op|'('
string|'"foo"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'decorator'
op|'('
name|'go_boom'
op|')'
op|','
name|'None'
op|','
name|'None'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_trap_not_found_locally_uuid_passed
dedent|''
name|'def'
name|'test_trap_not_found_locally_uuid_passed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""When a UUID is found, if the item isn\'t found locally, we should\n        try to reroute to a child zone to see if they have it\n        """'
newline|'\n'
name|'decorator'
op|'='
name|'FakeRerouteCompute'
op|'('
string|'"foo"'
op|','
name|'id_to_return'
op|'='
name|'FAKE_UUID_NOT_FOUND'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'decorator'
op|'('
name|'go_boom'
op|')'
op|'('
name|'None'
op|','
name|'None'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fail'
op|'('
name|'_'
op|'('
string|'"Should have rerouted."'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'api'
op|'.'
name|'RedirectResult'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'e'
op|'.'
name|'results'
op|'['
string|"'magic'"
op|']'
op|','
string|"'found me'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_routing_flags
dedent|''
dedent|''
name|'def'
name|'test_routing_flags'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enable_zone_routing'
op|'='
name|'False'
op|')'
newline|'\n'
name|'decorator'
op|'='
name|'FakeRerouteCompute'
op|'('
string|'"foo"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
name|'decorator'
op|'('
name|'go_boom'
op|')'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_collection_context_and_id
dedent|''
name|'def'
name|'test_get_collection_context_and_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'decorator'
op|'='
name|'api'
op|'.'
name|'reroute_compute'
op|'('
string|'"foo"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'decorator'
op|'.'
name|'get_collection_context_and_id'
op|'('
nl|'\n'
op|'('
name|'None'
op|','
number|'10'
op|','
number|'20'
op|')'
op|','
op|'{'
op|'}'
op|')'
op|','
op|'('
string|'"servers"'
op|','
number|'10'
op|','
number|'20'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'decorator'
op|'.'
name|'get_collection_context_and_id'
op|'('
nl|'\n'
op|'('
name|'None'
op|','
number|'11'
op|','
op|')'
op|','
name|'dict'
op|'('
name|'instance_id'
op|'='
number|'21'
op|')'
op|')'
op|','
op|'('
string|'"servers"'
op|','
number|'11'
op|','
number|'21'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'decorator'
op|'.'
name|'get_collection_context_and_id'
op|'('
nl|'\n'
op|'('
name|'None'
op|','
op|')'
op|','
name|'dict'
op|'('
name|'context'
op|'='
number|'12'
op|','
name|'instance_id'
op|'='
number|'22'
op|')'
op|')'
op|','
op|'('
string|'"servers"'
op|','
number|'12'
op|','
number|'22'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unmarshal_single_server
dedent|''
name|'def'
name|'test_unmarshal_single_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'decorator'
op|'='
name|'api'
op|'.'
name|'reroute_compute'
op|'('
string|'"foo"'
op|')'
newline|'\n'
name|'decorator'
op|'.'
name|'item_uuid'
op|'='
string|"'fake_uuid'"
newline|'\n'
name|'result'
op|'='
name|'decorator'
op|'.'
name|'unmarshall_result'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'decorator'
op|'.'
name|'unmarshall_result'
op|'('
op|'['
op|']'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'decorator'
op|'.'
name|'unmarshall_result'
op|'('
nl|'\n'
op|'['
name|'FakeResource'
op|'('
name|'dict'
op|'('
name|'a'
op|'='
number|'1'
op|','
name|'b'
op|'='
number|'2'
op|')'
op|')'
op|','
op|']'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'server'
op|'='
name|'dict'
op|'('
name|'a'
op|'='
number|'1'
op|','
name|'b'
op|'='
number|'2'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'decorator'
op|'.'
name|'unmarshall_result'
op|'('
nl|'\n'
op|'['
name|'FakeResource'
op|'('
name|'dict'
op|'('
name|'a'
op|'='
number|'1'
op|','
name|'_b'
op|'='
number|'2'
op|')'
op|')'
op|','
op|']'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'server'
op|'='
name|'dict'
op|'('
name|'a'
op|'='
number|'1'
op|','
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'decorator'
op|'.'
name|'unmarshall_result'
op|'('
nl|'\n'
op|'['
name|'FakeResource'
op|'('
name|'dict'
op|'('
name|'a'
op|'='
number|'1'
op|','
name|'manager'
op|'='
number|'2'
op|')'
op|')'
op|','
op|']'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'server'
op|'='
name|'dict'
op|'('
name|'a'
op|'='
number|'1'
op|','
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'decorator'
op|'.'
name|'unmarshall_result'
op|'('
nl|'\n'
op|'['
name|'FakeResource'
op|'('
name|'dict'
op|'('
name|'_a'
op|'='
number|'1'
op|','
name|'manager'
op|'='
number|'2'
op|')'
op|')'
op|','
op|']'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'server'
op|'='
op|'{'
op|'}'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_one_zone_down_no_instances
dedent|''
name|'def'
name|'test_one_zone_down_no_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|_fake_issue_novaclient_command
indent|'        '
name|'def'
name|'_fake_issue_novaclient_command'
op|'('
name|'nova'
op|','
name|'zone'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|class|FakeNovaClientWithFailure
dedent|''
name|'class'
name|'FakeNovaClientWithFailure'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'username'
op|','
name|'password'
op|','
name|'method'
op|','
name|'api_url'
op|','
nl|'\n'
name|'token'
op|'='
name|'None'
op|','
name|'region_name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'api_url'
op|'='
name|'api_url'
newline|'\n'
nl|'\n'
DECL|member|authenticate
dedent|''
name|'def'
name|'authenticate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'api_url'
op|'=='
name|'ZONE_API_URL2'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'novaclient_exceptions'
op|'.'
name|'BadRequest'
op|'('
string|"'foo'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'api'
op|','
string|"'_issue_novaclient_command'"
op|','
nl|'\n'
name|'_fake_issue_novaclient_command'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'api'
op|'.'
name|'novaclient'
op|','
string|"'Client'"
op|','
name|'FakeNovaClientWithFailure'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'api'
op|'.'
name|'reroute_compute'
op|'('
string|'"get"'
op|')'
newline|'\n'
DECL|function|do_get
name|'def'
name|'do_get'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'do_get'
op|'('
name|'None'
op|','
name|'FakeContext'
op|'('
op|')'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Should have got redirect exception."'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'api'
op|'.'
name|'RedirectResult'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'e'
op|'.'
name|'results'
op|','
name|'exception'
op|'.'
name|'ZoneRequestError'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_one_zone_down_got_instance
dedent|''
dedent|''
name|'def'
name|'test_one_zone_down_got_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|_fake_issue_novaclient_command
indent|'        '
name|'def'
name|'_fake_issue_novaclient_command'
op|'('
name|'nova'
op|','
name|'zone'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
DECL|class|FakeServer
indent|'            '
name|'class'
name|'FakeServer'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'                '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'id'
op|'='
name|'FAKE_UUID'
newline|'\n'
name|'self'
op|'.'
name|'test'
op|'='
string|"'1234'"
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'FakeServer'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeNovaClientWithFailure
dedent|''
name|'class'
name|'FakeNovaClientWithFailure'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'username'
op|','
name|'password'
op|','
name|'method'
op|','
name|'api_url'
op|','
nl|'\n'
name|'token'
op|'='
name|'None'
op|','
name|'region_name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'api_url'
op|'='
name|'api_url'
newline|'\n'
nl|'\n'
DECL|member|authenticate
dedent|''
name|'def'
name|'authenticate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'api_url'
op|'=='
name|'ZONE_API_URL2'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'novaclient_exceptions'
op|'.'
name|'BadRequest'
op|'('
string|"'foo'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'api'
op|','
string|"'_issue_novaclient_command'"
op|','
nl|'\n'
name|'_fake_issue_novaclient_command'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'api'
op|'.'
name|'novaclient'
op|','
string|"'Client'"
op|','
name|'FakeNovaClientWithFailure'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'api'
op|'.'
name|'reroute_compute'
op|'('
string|'"get"'
op|')'
newline|'\n'
DECL|function|do_get
name|'def'
name|'do_get'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'do_get'
op|'('
name|'None'
op|','
name|'FakeContext'
op|'('
op|')'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'api'
op|'.'
name|'RedirectResult'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'results'
op|'='
name|'e'
op|'.'
name|'results'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'server'"
op|','
name|'results'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'results'
op|'['
string|"'server'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'results'
op|'['
string|"'server'"
op|']'
op|'['
string|"'test'"
op|']'
op|','
string|"'1234'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
name|'_'
op|'('
string|'"RedirectResult should have been raised: %s"'
op|'%'
name|'e'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
name|'_'
op|'('
string|'"RedirectResult should have been raised"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_zones_up_no_instances
dedent|''
dedent|''
name|'def'
name|'test_zones_up_no_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|_fake_issue_novaclient_command
indent|'        '
name|'def'
name|'_fake_issue_novaclient_command'
op|'('
name|'nova'
op|','
name|'zone'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|class|FakeNovaClientNoFailure
dedent|''
name|'class'
name|'FakeNovaClientNoFailure'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'username'
op|','
name|'password'
op|','
name|'method'
op|','
name|'api_url'
op|','
nl|'\n'
name|'token'
op|'='
name|'None'
op|','
name|'region_name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|authenticate
dedent|''
name|'def'
name|'authenticate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'api'
op|','
string|"'_issue_novaclient_command'"
op|','
nl|'\n'
name|'_fake_issue_novaclient_command'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'api'
op|'.'
name|'novaclient'
op|','
string|"'Client'"
op|','
name|'FakeNovaClientNoFailure'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'api'
op|'.'
name|'reroute_compute'
op|'('
string|'"get"'
op|')'
newline|'\n'
DECL|function|do_get
name|'def'
name|'do_get'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'do_get'
op|'('
name|'None'
op|','
name|'FakeContext'
op|'('
op|')'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Expected redirect exception"'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'api'
op|'.'
name|'RedirectResult'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'e'
op|'.'
name|'results'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeServerCollection
dedent|''
dedent|''
dedent|''
name|'class'
name|'FakeServerCollection'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|get
indent|'    '
name|'def'
name|'get'
op|'('
name|'self'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'FakeResource'
op|'('
name|'dict'
op|'('
name|'a'
op|'='
number|'10'
op|','
name|'b'
op|'='
number|'20'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|find
dedent|''
name|'def'
name|'find'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'FakeResource'
op|'('
name|'dict'
op|'('
name|'a'
op|'='
number|'11'
op|','
name|'b'
op|'='
number|'22'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeEmptyServerCollection
dedent|''
dedent|''
name|'class'
name|'FakeEmptyServerCollection'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|get
indent|'    '
name|'def'
name|'get'
op|'('
name|'self'
op|','
name|'f'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'novaclient_exceptions'
op|'.'
name|'NotFound'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|find
dedent|''
name|'def'
name|'find'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'novaclient_exceptions'
op|'.'
name|'NotFound'
op|'('
number|'2'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeNovaClient
dedent|''
dedent|''
name|'class'
name|'FakeNovaClient'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'collection'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'servers'
op|'='
name|'collection'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DynamicNovaClientTest
dedent|''
dedent|''
name|'class'
name|'DynamicNovaClientTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_issue_novaclient_command_found
indent|'    '
name|'def'
name|'test_issue_novaclient_command_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'zone'
op|'='
name|'FakeZone'
op|'('
number|'1'
op|','
string|"'http://example.com'"
op|','
string|"'bob'"
op|','
string|"'xxx'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'api'
op|'.'
name|'_issue_novaclient_command'
op|'('
nl|'\n'
name|'FakeNovaClient'
op|'('
name|'FakeServerCollection'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'zone'
op|','
string|'"servers"'
op|','
string|'"get"'
op|','
number|'100'
op|')'
op|'.'
name|'a'
op|','
number|'10'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'api'
op|'.'
name|'_issue_novaclient_command'
op|'('
nl|'\n'
name|'FakeNovaClient'
op|'('
name|'FakeServerCollection'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'zone'
op|','
string|'"servers"'
op|','
string|'"find"'
op|','
name|'name'
op|'='
string|'"test"'
op|')'
op|'.'
name|'b'
op|','
number|'22'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'api'
op|'.'
name|'_issue_novaclient_command'
op|'('
nl|'\n'
name|'FakeNovaClient'
op|'('
name|'FakeServerCollection'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'zone'
op|','
string|'"servers"'
op|','
string|'"pause"'
op|','
number|'100'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_issue_novaclient_command_not_found
dedent|''
name|'def'
name|'test_issue_novaclient_command_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'zone'
op|'='
name|'FakeZone'
op|'('
number|'1'
op|','
string|"'http://example.com'"
op|','
string|"'bob'"
op|','
string|"'xxx'"
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'api'
op|'.'
name|'_issue_novaclient_command'
op|'('
name|'FakeNovaClient'
op|'('
nl|'\n'
name|'FakeEmptyServerCollection'
op|'('
op|')'
op|')'
op|','
name|'zone'
op|','
string|'"servers"'
op|','
string|'"get"'
op|','
number|'100'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Expected NotFound exception"'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'novaclient_exceptions'
op|'.'
name|'NotFound'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'api'
op|'.'
name|'_issue_novaclient_command'
op|'('
name|'FakeNovaClient'
op|'('
nl|'\n'
name|'FakeEmptyServerCollection'
op|'('
op|')'
op|')'
op|','
name|'zone'
op|','
string|'"servers"'
op|','
string|'"any"'
op|','
string|'"name"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Expected NotFound exception"'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'novaclient_exceptions'
op|'.'
name|'NotFound'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeZonesProxy
dedent|''
dedent|''
dedent|''
name|'class'
name|'FakeZonesProxy'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|do_something
indent|'    '
name|'def'
name|'do_something'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
number|'42'
newline|'\n'
nl|'\n'
DECL|member|raises_exception
dedent|''
name|'def'
name|'raises_exception'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'Exception'
op|'('
string|"'testing'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeNovaClientZones
dedent|''
dedent|''
name|'class'
name|'FakeNovaClientZones'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'zones'
op|'='
name|'FakeZonesProxy'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|authenticate
dedent|''
name|'def'
name|'authenticate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CallZoneMethodTest
dedent|''
dedent|''
name|'class'
name|'CallZoneMethodTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CallZoneMethodTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'zone_get_all'"
op|','
name|'zone_get_all'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'novaclient'
op|','
string|"'Client'"
op|','
name|'FakeNovaClientZones'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CallZoneMethodTest'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_call_zone_method
dedent|''
name|'def'
name|'test_call_zone_method'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context'
op|'='
name|'FakeContext'
op|'('
op|')'
newline|'\n'
name|'method'
op|'='
string|"'do_something'"
newline|'\n'
name|'results'
op|'='
name|'api'
op|'.'
name|'call_zone_method'
op|'('
name|'context'
op|','
name|'method'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'results'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
op|'('
number|'1'
op|','
number|'42'
op|')'
op|','
name|'results'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
op|'('
number|'2'
op|','
number|'42'
op|')'
op|','
name|'results'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_call_zone_method_not_present
dedent|''
name|'def'
name|'test_call_zone_method_not_present'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context'
op|'='
name|'FakeContext'
op|'('
op|')'
newline|'\n'
name|'method'
op|'='
string|"'not_present'"
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AttributeError'
op|','
name|'api'
op|'.'
name|'call_zone_method'
op|','
nl|'\n'
name|'context'
op|','
name|'method'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_call_zone_method_generates_exception
dedent|''
name|'def'
name|'test_call_zone_method_generates_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context'
op|'='
name|'FakeContext'
op|'('
op|')'
newline|'\n'
name|'method'
op|'='
string|"'raises_exception'"
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'Exception'
op|','
name|'api'
op|'.'
name|'call_zone_method'
op|','
name|'context'
op|','
name|'method'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
