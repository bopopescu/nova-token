begin_unit
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nTests For Scheduler\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'mox'
newline|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'api'
name|'as'
name|'compute_api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'utils'
name|'as'
name|'compute_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'image'
name|'import'
name|'glance'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
name|'import'
name|'driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
name|'import'
name|'manager'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'servicegroup'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fake_instance'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fake_server_actions'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
name|'import'
name|'fake'
name|'as'
name|'fake_image'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'objects'
name|'import'
name|'test_instance_fault'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'scheduler'
name|'import'
name|'fakes'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SchedulerManagerTestCase
name|'class'
name|'SchedulerManagerTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for scheduler manager."""'
newline|'\n'
nl|'\n'
DECL|variable|manager_cls
name|'manager_cls'
op|'='
name|'manager'
op|'.'
name|'SchedulerManager'
newline|'\n'
DECL|variable|driver_cls
name|'driver_cls'
op|'='
name|'driver'
op|'.'
name|'Scheduler'
newline|'\n'
DECL|variable|driver_cls_name
name|'driver_cls_name'
op|'='
string|"'nova.scheduler.driver.Scheduler'"
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'SchedulerManagerTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'scheduler_driver'
op|'='
name|'self'
op|'.'
name|'driver_cls_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|','
string|"'API'"
op|','
name|'fakes'
op|'.'
name|'FakeComputeAPI'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'='
name|'self'
op|'.'
name|'manager_cls'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake_user'"
op|','
string|"'fake_project'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'topic'
op|'='
string|"'fake_topic'"
newline|'\n'
name|'self'
op|'.'
name|'fake_args'
op|'='
op|'('
number|'1'
op|','
number|'2'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fake_kwargs'
op|'='
op|'{'
string|"'cat'"
op|':'
string|"'meow'"
op|','
string|"'dog'"
op|':'
string|"'woof'"
op|'}'
newline|'\n'
name|'fake_server_actions'
op|'.'
name|'stub_out_action_events'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_1_correct_init
dedent|''
name|'def'
name|'test_1_correct_init'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Correct scheduler driver'
nl|'\n'
indent|'        '
name|'manager'
op|'='
name|'self'
op|'.'
name|'manager'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'manager'
op|'.'
name|'driver'
op|','
name|'self'
op|'.'
name|'driver_cls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_mox_schedule_method_helper
dedent|''
name|'def'
name|'_mox_schedule_method_helper'
op|'('
name|'self'
op|','
name|'method_name'
op|')'
op|':'
newline|'\n'
comment|"# Make sure the method exists that we're going to test call"
nl|'\n'
DECL|function|stub_method
indent|'        '
name|'def'
name|'stub_method'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'setattr'
op|'('
name|'self'
op|'.'
name|'manager'
op|'.'
name|'driver'
op|','
name|'method_name'
op|','
name|'stub_method'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'manager'
op|'.'
name|'driver'
op|','
nl|'\n'
name|'method_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_instance_exception_puts_instance_in_error_state
dedent|''
name|'def'
name|'test_run_instance_exception_puts_instance_in_error_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_instance_uuid'
op|'='
string|"'fake-instance-id'"
newline|'\n'
name|'inst'
op|'='
op|'{'
string|'"vm_state"'
op|':'
string|'""'
op|','
string|'"task_state"'
op|':'
string|'""'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox_schedule_method_helper'
op|'('
string|"'schedule_run_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'add_instance_fault_from_exc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_update_and_get_original'"
op|')'
newline|'\n'
nl|'\n'
name|'request_spec'
op|'='
op|'{'
string|"'instance_properties'"
op|':'
name|'inst'
op|','
nl|'\n'
string|"'instance_uuids'"
op|':'
op|'['
name|'fake_instance_uuid'
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'driver'
op|'.'
name|'schedule_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'request_spec'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
op|'{'
op|'}'
op|','
name|'False'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'NoValidHost'
op|'('
name|'reason'
op|'='
string|'""'
op|')'
op|')'
newline|'\n'
name|'old'
op|','
name|'new_ref'
op|'='
name|'db'
op|'.'
name|'instance_update_and_get_original'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_instance_uuid'
op|','
nl|'\n'
op|'{'
string|'"vm_state"'
op|':'
name|'vm_states'
op|'.'
name|'ERROR'
op|','
nl|'\n'
string|'"task_state"'
op|':'
name|'None'
op|'}'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
name|'inst'
op|','
name|'inst'
op|')'
op|')'
newline|'\n'
name|'compute_utils'
op|'.'
name|'add_instance_fault_from_exc'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'new_ref'
op|','
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'exception'
op|'.'
name|'NoValidHost'
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'request_spec'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
op|'{'
op|'}'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_prep_resize_no_valid_host_back_in_active_state
dedent|''
name|'def'
name|'test_prep_resize_no_valid_host_back_in_active_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_instance_uuid'
op|'='
string|"'fake-instance-id'"
newline|'\n'
name|'fake_instance'
op|'='
op|'{'
string|"'uuid'"
op|':'
name|'fake_instance_uuid'
op|'}'
newline|'\n'
name|'inst'
op|'='
op|'{'
string|'"vm_state"'
op|':'
string|'""'
op|','
string|'"task_state"'
op|':'
string|'""'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox_schedule_method_helper'
op|'('
string|"'select_destinations'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'add_instance_fault_from_exc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_update_and_get_original'"
op|')'
newline|'\n'
nl|'\n'
name|'request_spec'
op|'='
op|'{'
string|"'instance_type'"
op|':'
string|"'fake_type'"
op|','
nl|'\n'
string|"'instance_uuids'"
op|':'
op|'['
name|'fake_instance_uuid'
op|']'
op|','
nl|'\n'
string|"'instance_properties'"
op|':'
op|'{'
string|"'uuid'"
op|':'
name|'fake_instance_uuid'
op|'}'
op|'}'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
nl|'\n'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'image'"
op|':'
string|"'fake_image'"
op|','
nl|'\n'
string|"'request_spec'"
op|':'
name|'request_spec'
op|','
nl|'\n'
string|"'filter_properties'"
op|':'
string|"'fake_props'"
op|','
nl|'\n'
string|"'instance'"
op|':'
name|'fake_instance'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
string|"'fake_type'"
op|','
nl|'\n'
string|"'reservations'"
op|':'
name|'list'
op|'('
string|"'fake_res'"
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'driver'
op|'.'
name|'select_destinations'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'request_spec'
op|','
string|"'fake_props'"
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'NoValidHost'
op|'('
name|'reason'
op|'='
string|'""'
op|')'
op|')'
newline|'\n'
name|'old_ref'
op|','
name|'new_ref'
op|'='
name|'db'
op|'.'
name|'instance_update_and_get_original'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_instance_uuid'
op|','
nl|'\n'
op|'{'
string|'"vm_state"'
op|':'
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
string|'"task_state"'
op|':'
name|'None'
op|'}'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'('
name|'inst'
op|','
name|'inst'
op|')'
op|')'
newline|'\n'
name|'compute_utils'
op|'.'
name|'add_instance_fault_from_exc'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'new_ref'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'exception'
op|'.'
name|'NoValidHost'
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'prep_resize'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_prep_resize_no_valid_host_back_in_shutoff_state
dedent|''
name|'def'
name|'test_prep_resize_no_valid_host_back_in_shutoff_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_instance_uuid'
op|'='
string|"'fake-instance-id'"
newline|'\n'
name|'fake_instance'
op|'='
op|'{'
string|"'uuid'"
op|':'
name|'fake_instance_uuid'
op|','
string|'"vm_state"'
op|':'
string|'"stopped"'
op|'}'
newline|'\n'
name|'inst'
op|'='
op|'{'
string|'"vm_state"'
op|':'
string|'"stopped"'
op|','
string|'"task_state"'
op|':'
string|'""'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox_schedule_method_helper'
op|'('
string|"'select_destinations'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'add_instance_fault_from_exc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_update_and_get_original'"
op|')'
newline|'\n'
nl|'\n'
name|'request_spec'
op|'='
op|'{'
string|"'instance_type'"
op|':'
string|"'fake_type'"
op|','
nl|'\n'
string|"'instance_uuids'"
op|':'
op|'['
name|'fake_instance_uuid'
op|']'
op|','
nl|'\n'
string|"'instance_properties'"
op|':'
op|'{'
string|"'uuid'"
op|':'
name|'fake_instance_uuid'
op|'}'
op|'}'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
nl|'\n'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'image'"
op|':'
string|"'fake_image'"
op|','
nl|'\n'
string|"'request_spec'"
op|':'
name|'request_spec'
op|','
nl|'\n'
string|"'filter_properties'"
op|':'
string|"'fake_props'"
op|','
nl|'\n'
string|"'instance'"
op|':'
name|'fake_instance'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
string|"'fake_type'"
op|','
nl|'\n'
string|"'reservations'"
op|':'
name|'list'
op|'('
string|"'fake_res'"
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'driver'
op|'.'
name|'select_destinations'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'request_spec'
op|','
string|"'fake_props'"
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'NoValidHost'
op|'('
name|'reason'
op|'='
string|'""'
op|')'
op|')'
newline|'\n'
name|'old_ref'
op|','
name|'new_ref'
op|'='
name|'db'
op|'.'
name|'instance_update_and_get_original'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_instance_uuid'
op|','
nl|'\n'
op|'{'
string|'"vm_state"'
op|':'
name|'vm_states'
op|'.'
name|'STOPPED'
op|','
string|'"task_state"'
op|':'
name|'None'
op|'}'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'('
name|'inst'
op|','
name|'inst'
op|')'
op|')'
newline|'\n'
name|'compute_utils'
op|'.'
name|'add_instance_fault_from_exc'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'new_ref'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'exception'
op|'.'
name|'NoValidHost'
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'prep_resize'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_prep_resize_exception_host_in_error_state_and_raise
dedent|''
name|'def'
name|'test_prep_resize_exception_host_in_error_state_and_raise'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_instance_uuid'
op|'='
string|"'fake-instance-id'"
newline|'\n'
name|'fake_instance'
op|'='
op|'{'
string|"'uuid'"
op|':'
name|'fake_instance_uuid'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox_schedule_method_helper'
op|'('
string|"'select_destinations'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'add_instance_fault_from_exc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_update_and_get_original'"
op|')'
newline|'\n'
nl|'\n'
name|'request_spec'
op|'='
op|'{'
nl|'\n'
string|"'instance_properties'"
op|':'
op|'{'
string|"'uuid'"
op|':'
name|'fake_instance_uuid'
op|'}'
op|','
nl|'\n'
string|"'instance_uuids'"
op|':'
op|'['
name|'fake_instance_uuid'
op|']'
nl|'\n'
op|'}'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
nl|'\n'
string|"'context'"
op|':'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'image'"
op|':'
string|"'fake_image'"
op|','
nl|'\n'
string|"'request_spec'"
op|':'
name|'request_spec'
op|','
nl|'\n'
string|"'filter_properties'"
op|':'
string|"'fake_props'"
op|','
nl|'\n'
string|"'instance'"
op|':'
name|'fake_instance'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
string|"'fake_type'"
op|','
nl|'\n'
string|"'reservations'"
op|':'
name|'list'
op|'('
string|"'fake_res'"
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'driver'
op|'.'
name|'select_destinations'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'request_spec'
op|','
string|"'fake_props'"
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'test'
op|'.'
name|'TestingException'
op|'('
string|"'something happened'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'inst'
op|'='
op|'{'
nl|'\n'
string|'"vm_state"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"task_state"'
op|':'
string|'""'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'old_ref'
op|','
name|'new_ref'
op|'='
name|'db'
op|'.'
name|'instance_update_and_get_original'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_instance_uuid'
op|','
nl|'\n'
op|'{'
string|'"vm_state"'
op|':'
name|'vm_states'
op|'.'
name|'ERROR'
op|','
nl|'\n'
string|'"task_state"'
op|':'
name|'None'
op|'}'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
name|'inst'
op|','
name|'inst'
op|')'
op|')'
newline|'\n'
name|'compute_utils'
op|'.'
name|'add_instance_fault_from_exc'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'new_ref'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
name|'self'
op|'.'
name|'manager'
op|'.'
name|'prep_resize'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_vm_state_and_notify_adds_instance_fault
dedent|''
name|'def'
name|'test_set_vm_state_and_notify_adds_instance_fault'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'request'
op|'='
op|'{'
string|"'instance_properties'"
op|':'
op|'{'
string|"'uuid'"
op|':'
string|"'fake-uuid'"
op|'}'
op|'}'
newline|'\n'
name|'updates'
op|'='
op|'{'
string|"'vm_state'"
op|':'
string|"'foo'"
op|'}'
newline|'\n'
name|'fake_inst'
op|'='
op|'{'
string|"'uuid'"
op|':'
string|"'fake-uuid'"
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_update_and_get_original'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_fault_create'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpc'
op|','
string|"'get_notifier'"
op|')'
newline|'\n'
name|'notifier'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMockAnything'
op|'('
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'get_notifier'
op|'('
string|"'scheduler'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'notifier'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_update_and_get_original'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'fake-uuid'"
op|','
nl|'\n'
name|'updates'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'('
name|'None'
op|','
nl|'\n'
name|'fake_inst'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_fault_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'test_instance_fault'
op|'.'
name|'fake_faults'
op|'['
string|"'fake-uuid'"
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'notifier'
op|'.'
name|'error'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'scheduler.foo'"
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'_set_vm_state_and_notify'
op|'('
string|"'foo'"
op|','
op|'{'
string|"'vm_state'"
op|':'
string|"'foo'"
op|'}'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'None'
op|','
name|'request'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_prep_resize_post_populates_retry
dedent|''
name|'def'
name|'test_prep_resize_post_populates_retry'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'manager'
op|'.'
name|'driver'
op|'='
name|'fakes'
op|'.'
name|'FakeFilterScheduler'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image'
op|'='
string|"'image'"
newline|'\n'
name|'instance_uuid'
op|'='
string|"'fake-instance-id'"
newline|'\n'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
name|'uuid'
op|'='
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
name|'instance_properties'
op|'='
op|'{'
string|"'project_id'"
op|':'
string|"'fake'"
op|','
string|"'os_type'"
op|':'
string|"'Linux'"
op|'}'
newline|'\n'
name|'instance_type'
op|'='
string|'"m1.tiny"'
newline|'\n'
name|'request_spec'
op|'='
op|'{'
string|"'instance_properties'"
op|':'
name|'instance_properties'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'instance_type'
op|','
nl|'\n'
string|"'instance_uuids'"
op|':'
op|'['
name|'instance_uuid'
op|']'
op|'}'
newline|'\n'
name|'retry'
op|'='
op|'{'
string|"'hosts'"
op|':'
op|'['
op|']'
op|','
string|"'num_attempts'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'retry'"
op|':'
name|'retry'
op|'}'
newline|'\n'
name|'reservations'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'hosts'
op|'='
op|'['
name|'dict'
op|'('
name|'host'
op|'='
string|"'host'"
op|','
name|'nodename'
op|'='
string|"'node'"
op|','
name|'limits'
op|'='
op|'{'
op|'}'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_mox_schedule_method_helper'
op|'('
string|"'select_destinations'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'driver'
op|'.'
name|'select_destinations'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'request_spec'
op|','
name|'filter_properties'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'hosts'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'manager'
op|'.'
name|'compute_rpcapi'
op|','
string|"'prep_resize'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'compute_rpcapi'
op|'.'
name|'prep_resize'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'image'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|')'
op|','
nl|'\n'
name|'instance_type'
op|','
string|"'host'"
op|','
name|'reservations'
op|','
name|'request_spec'
op|'='
name|'request_spec'
op|','
nl|'\n'
name|'filter_properties'
op|'='
name|'filter_properties'
op|','
name|'node'
op|'='
string|"'node'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'prep_resize'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'image'
op|','
name|'request_spec'
op|','
nl|'\n'
name|'filter_properties'
op|','
name|'instance'
op|','
name|'instance_type'
op|','
name|'reservations'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|'['
string|"'host'"
op|','
string|"'node'"
op|']'
op|']'
op|','
nl|'\n'
name|'filter_properties'
op|'['
string|"'retry'"
op|']'
op|'['
string|"'hosts'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SchedulerTestCase
dedent|''
dedent|''
name|'class'
name|'SchedulerTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for base scheduler driver class."""'
newline|'\n'
nl|'\n'
comment|'# So we can subclass this test and re-use tests if we need.'
nl|'\n'
DECL|variable|driver_cls
name|'driver_cls'
op|'='
name|'driver'
op|'.'
name|'Scheduler'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'SchedulerTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|','
string|"'API'"
op|','
name|'fakes'
op|'.'
name|'FakeComputeAPI'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_show
name|'def'
name|'fake_show'
op|'('
name|'meh'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'id'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'id'"
op|':'
name|'id'
op|','
string|"'min_disk'"
op|':'
name|'None'
op|','
string|"'min_ram'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'fake_name'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'active'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
string|"'kernel_id'"
op|':'
string|"'fake_kernel_id'"
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
string|"'fake_ramdisk_id'"
op|','
nl|'\n'
string|"'something_else'"
op|':'
string|"'meow'"
op|'}'
op|'}'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
name|'image_id'
op|'='
name|'id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'fake_image'
op|'.'
name|'stub_out_image_service'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake_image'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'image_service'
op|'='
name|'glance'
op|'.'
name|'get_default_image_service'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'='
name|'self'
op|'.'
name|'driver_cls'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake_user'"
op|','
string|"'fake_project'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'topic'
op|'='
string|"'fake_topic'"
newline|'\n'
name|'self'
op|'.'
name|'servicegroup_api'
op|'='
name|'servicegroup'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_hosts_up
dedent|''
name|'def'
name|'test_hosts_up'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service1'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'host1'"
op|'}'
newline|'\n'
name|'service2'
op|'='
op|'{'
string|"'host'"
op|':'
string|"'host2'"
op|'}'
newline|'\n'
name|'services'
op|'='
op|'['
name|'service1'
op|','
name|'service2'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'service_get_all_by_topic'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'servicegroup'
op|'.'
name|'API'
op|','
string|"'service_is_up'"
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'service_get_all_by_topic'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'topic'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'services'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'servicegroup_api'
op|'.'
name|'service_is_up'
op|'('
name|'service1'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'servicegroup_api'
op|'.'
name|'service_is_up'
op|'('
name|'service2'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'hosts_up'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'topic'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
op|'['
string|"'host2'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_handle_schedule_error_adds_instance_fault
dedent|''
name|'def'
name|'test_handle_schedule_error_adds_instance_fault'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
op|'{'
string|"'uuid'"
op|':'
string|"'fake-uuid'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_update_and_get_original'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_fault_create'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_update_and_get_original'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'('
name|'None'
op|','
name|'instance'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_fault_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'test_instance_fault'
op|'.'
name|'fake_faults'
op|'['
string|"'fake-uuid'"
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpc'
op|','
string|"'get_notifier'"
op|')'
newline|'\n'
name|'notifier'
op|'='
name|'self'
op|'.'
name|'mox'
op|'.'
name|'CreateMockAnything'
op|'('
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'get_notifier'
op|'('
string|"'scheduler'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'notifier'
op|')'
newline|'\n'
name|'notifier'
op|'.'
name|'error'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'scheduler.run_instance'"
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'driver'
op|'.'
name|'handle_schedule_error'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'NoValidHost'
op|'('
string|"'test'"
op|')'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SchedulerDriverBaseTestCase
dedent|''
dedent|''
name|'class'
name|'SchedulerDriverBaseTestCase'
op|'('
name|'SchedulerTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test cases for base scheduler driver class methods\n       that will fail if the driver is changed.\n    """'
newline|'\n'
nl|'\n'
DECL|member|test_unimplemented_schedule_run_instance
name|'def'
name|'test_unimplemented_schedule_run_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_request_spec'
op|'='
op|'{'
string|"'instance_properties'"
op|':'
nl|'\n'
op|'{'
string|"'uuid'"
op|':'
string|"'uuid'"
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'schedule_run_instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'fake_request_spec'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unimplemented_select_destinations
dedent|''
name|'def'
name|'test_unimplemented_select_destinations'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'select_destinations'
op|','
name|'self'
op|'.'
name|'context'
op|','
op|'{'
op|'}'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SchedulerInstanceGroupData
dedent|''
dedent|''
name|'class'
name|'SchedulerInstanceGroupData'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|driver_cls
indent|'    '
name|'driver_cls'
op|'='
name|'driver'
op|'.'
name|'Scheduler'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'SchedulerInstanceGroupData'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake_user'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake_project'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'='
name|'self'
op|'.'
name|'driver_cls'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_default_values
dedent|''
name|'def'
name|'_get_default_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'name'"
op|':'
string|"'fake_name'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'project_id'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_create_instance_group
dedent|''
name|'def'
name|'_create_instance_group'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'values'
op|','
name|'policies'
op|'='
name|'None'
op|','
nl|'\n'
name|'metadata'
op|'='
name|'None'
op|','
name|'members'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'db'
op|'.'
name|'instance_group_create'
op|'('
name|'context'
op|','
name|'values'
op|','
name|'policies'
op|'='
name|'policies'
op|','
nl|'\n'
name|'metadata'
op|'='
name|'metadata'
op|','
name|'members'
op|'='
name|'members'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
