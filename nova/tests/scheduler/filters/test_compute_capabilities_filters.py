begin_unit
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'six'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
op|'.'
name|'filters'
name|'import'
name|'compute_capabilities_filter'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'scheduler'
name|'import'
name|'fakes'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestComputeCapabilitiesFilter
name|'class'
name|'TestComputeCapabilitiesFilter'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestComputeCapabilitiesFilter'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'filt_cls'
op|'='
name|'compute_capabilities_filter'
op|'.'
name|'ComputeCapabilitiesFilter'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_do_test_compute_filter_extra_specs
dedent|''
name|'def'
name|'_do_test_compute_filter_extra_specs'
op|'('
name|'self'
op|','
name|'ecaps'
op|','
name|'especs'
op|','
name|'passes'
op|')'
op|':'
newline|'\n'
comment|'# In real OpenStack runtime environment,compute capabilities'
nl|'\n'
comment|'# value may be number, so we should use number to do unit test.'
nl|'\n'
indent|'        '
name|'capabilities'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'capabilities'
op|'.'
name|'update'
op|'('
name|'ecaps'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
op|'{'
string|"'instance_type'"
op|':'
op|'{'
string|"'memory_mb'"
op|':'
number|'1024'
op|','
nl|'\n'
string|"'extra_specs'"
op|':'
name|'especs'
op|'}'
op|'}'
newline|'\n'
name|'host_state'
op|'='
op|'{'
string|"'free_ram_mb'"
op|':'
number|'1024'
op|'}'
newline|'\n'
name|'host_state'
op|'.'
name|'update'
op|'('
name|'capabilities'
op|')'
newline|'\n'
name|'host'
op|'='
name|'fakes'
op|'.'
name|'FakeHostState'
op|'('
string|"'host1'"
op|','
string|"'node1'"
op|','
name|'host_state'
op|')'
newline|'\n'
name|'assertion'
op|'='
name|'self'
op|'.'
name|'assertTrue'
name|'if'
name|'passes'
name|'else'
name|'self'
op|'.'
name|'assertFalse'
newline|'\n'
name|'assertion'
op|'('
name|'self'
op|'.'
name|'filt_cls'
op|'.'
name|'host_passes'
op|'('
name|'host'
op|','
name|'filter_properties'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_filter_pass_cpu_info_as_text_type
dedent|''
name|'def'
name|'test_compute_filter_pass_cpu_info_as_text_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cpu_info'
op|'='
string|'""" { "vendor": "Intel", "model": "core2duo",\n        "arch": "i686","features": ["lahf_lm", "rdtscp"], "topology":\n        {"cores": 1, "threads":1, "sockets": 1}} """'
newline|'\n'
nl|'\n'
name|'cpu_info'
op|'='
name|'six'
op|'.'
name|'text_type'
op|'('
name|'cpu_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_do_test_compute_filter_extra_specs'
op|'('
nl|'\n'
name|'ecaps'
op|'='
op|'{'
string|"'cpu_info'"
op|':'
name|'cpu_info'
op|'}'
op|','
nl|'\n'
name|'especs'
op|'='
op|'{'
string|"'capabilities:cpu_info:vendor'"
op|':'
string|"'Intel'"
op|'}'
op|','
nl|'\n'
name|'passes'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_filter_fail_cpu_info_as_text_type_not_valid
dedent|''
name|'def'
name|'test_compute_filter_fail_cpu_info_as_text_type_not_valid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cpu_info'
op|'='
string|'"cpu_info"'
newline|'\n'
nl|'\n'
name|'cpu_info'
op|'='
name|'six'
op|'.'
name|'text_type'
op|'('
name|'cpu_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_do_test_compute_filter_extra_specs'
op|'('
nl|'\n'
name|'ecaps'
op|'='
op|'{'
string|"'cpu_info'"
op|':'
name|'cpu_info'
op|'}'
op|','
nl|'\n'
name|'especs'
op|'='
op|'{'
string|"'capabilities:cpu_info:vendor'"
op|':'
string|"'Intel'"
op|'}'
op|','
nl|'\n'
name|'passes'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_filter_passes_extra_specs_simple
dedent|''
name|'def'
name|'test_compute_filter_passes_extra_specs_simple'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_do_test_compute_filter_extra_specs'
op|'('
nl|'\n'
name|'ecaps'
op|'='
op|'{'
string|"'stats'"
op|':'
op|'{'
string|"'opt1'"
op|':'
number|'1'
op|','
string|"'opt2'"
op|':'
number|'2'
op|'}'
op|'}'
op|','
nl|'\n'
name|'especs'
op|'='
op|'{'
string|"'opt1'"
op|':'
string|"'1'"
op|','
string|"'opt2'"
op|':'
string|"'2'"
op|','
string|"'trust:trusted_host'"
op|':'
string|"'true'"
op|'}'
op|','
nl|'\n'
name|'passes'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_filter_fails_extra_specs_simple
dedent|''
name|'def'
name|'test_compute_filter_fails_extra_specs_simple'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_do_test_compute_filter_extra_specs'
op|'('
nl|'\n'
name|'ecaps'
op|'='
op|'{'
string|"'stats'"
op|':'
op|'{'
string|"'opt1'"
op|':'
number|'1'
op|','
string|"'opt2'"
op|':'
number|'2'
op|'}'
op|'}'
op|','
nl|'\n'
name|'especs'
op|'='
op|'{'
string|"'opt1'"
op|':'
string|"'1'"
op|','
string|"'opt2'"
op|':'
string|"'222'"
op|','
string|"'trust:trusted_host'"
op|':'
string|"'true'"
op|'}'
op|','
nl|'\n'
name|'passes'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_filter_pass_extra_specs_simple_with_scope
dedent|''
name|'def'
name|'test_compute_filter_pass_extra_specs_simple_with_scope'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_do_test_compute_filter_extra_specs'
op|'('
nl|'\n'
name|'ecaps'
op|'='
op|'{'
string|"'stats'"
op|':'
op|'{'
string|"'opt1'"
op|':'
number|'1'
op|','
string|"'opt2'"
op|':'
number|'2'
op|'}'
op|'}'
op|','
nl|'\n'
name|'especs'
op|'='
op|'{'
string|"'capabilities:opt1'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'trust:trusted_host'"
op|':'
string|"'true'"
op|'}'
op|','
nl|'\n'
name|'passes'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_filter_pass_extra_specs_same_as_scope
dedent|''
name|'def'
name|'test_compute_filter_pass_extra_specs_same_as_scope'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Make sure this still works even if the key is the same as the scope'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_do_test_compute_filter_extra_specs'
op|'('
nl|'\n'
name|'ecaps'
op|'='
op|'{'
string|"'capabilities'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
name|'especs'
op|'='
op|'{'
string|"'capabilities'"
op|':'
string|"'1'"
op|'}'
op|','
nl|'\n'
name|'passes'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_filter_extra_specs_simple_with_wrong_scope
dedent|''
name|'def'
name|'test_compute_filter_extra_specs_simple_with_wrong_scope'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_do_test_compute_filter_extra_specs'
op|'('
nl|'\n'
name|'ecaps'
op|'='
op|'{'
string|"'opt1'"
op|':'
number|'1'
op|','
string|"'opt2'"
op|':'
number|'2'
op|'}'
op|','
nl|'\n'
name|'especs'
op|'='
op|'{'
string|"'wrong_scope:opt1'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'trust:trusted_host'"
op|':'
string|"'true'"
op|'}'
op|','
nl|'\n'
name|'passes'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_filter_extra_specs_pass_multi_level_with_scope
dedent|''
name|'def'
name|'test_compute_filter_extra_specs_pass_multi_level_with_scope'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_do_test_compute_filter_extra_specs'
op|'('
nl|'\n'
name|'ecaps'
op|'='
op|'{'
string|"'stats'"
op|':'
op|'{'
string|"'opt1'"
op|':'
op|'{'
string|"'a'"
op|':'
number|'1'
op|','
string|"'b'"
op|':'
op|'{'
string|"'aa'"
op|':'
number|'2'
op|'}'
op|'}'
op|','
string|"'opt2'"
op|':'
number|'2'
op|'}'
op|'}'
op|','
nl|'\n'
name|'especs'
op|'='
op|'{'
string|"'opt1:a'"
op|':'
string|"'1'"
op|','
string|"'capabilities:opt1:b:aa'"
op|':'
string|"'2'"
op|','
nl|'\n'
string|"'trust:trusted_host'"
op|':'
string|"'true'"
op|'}'
op|','
nl|'\n'
name|'passes'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
