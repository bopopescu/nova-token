begin_unit
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'# Copyright 2011 OpenStack LLC'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nTests For ZoneManager\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'mox'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
name|'import'
name|'zone_manager'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_create_zone
name|'def'
name|'_create_zone'
op|'('
name|'zone_id'
op|'='
number|'1'
op|','
name|'name'
op|'='
name|'None'
op|','
name|'api_url'
op|'='
name|'None'
op|','
name|'username'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'api_url'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'api_url'
op|'='
string|'"http://foo.com"'
newline|'\n'
dedent|''
name|'if'
name|'username'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'username'
op|'='
string|'"user1"'
newline|'\n'
dedent|''
name|'if'
name|'name'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'name'
op|'='
string|'"child1"'
newline|'\n'
dedent|''
name|'return'
name|'dict'
op|'('
name|'id'
op|'='
name|'zone_id'
op|','
name|'name'
op|'='
name|'name'
op|','
name|'api_url'
op|'='
name|'api_url'
op|','
nl|'\n'
name|'username'
op|'='
name|'username'
op|','
name|'password'
op|'='
string|'"pass1"'
op|','
name|'weight_offset'
op|'='
number|'0.0'
op|','
nl|'\n'
name|'weight_scale'
op|'='
number|'1.0'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|exploding_novaclient
dedent|''
name|'def'
name|'exploding_novaclient'
op|'('
name|'zone'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Used when we want to simulate a novaclient call failing."""'
newline|'\n'
name|'raise'
name|'Exception'
op|'('
string|'"kaboom"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ZoneManagerTestCase
dedent|''
name|'class'
name|'ZoneManagerTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for zone manager"""'
newline|'\n'
nl|'\n'
DECL|variable|zone_manager_cls
name|'zone_manager_cls'
op|'='
name|'zone_manager'
op|'.'
name|'ZoneManager'
newline|'\n'
DECL|variable|zone_state_cls
name|'zone_state_cls'
op|'='
name|'zone_manager'
op|'.'
name|'ZoneState'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ZoneManagerTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'zone_manager'
op|'='
name|'self'
op|'.'
name|'zone_manager_cls'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_zone_state
dedent|''
name|'def'
name|'_create_zone_state'
op|'('
name|'self'
op|','
name|'zone_id'
op|'='
number|'1'
op|','
name|'name'
op|'='
name|'None'
op|','
name|'api_url'
op|'='
name|'None'
op|','
nl|'\n'
name|'username'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'zone'
op|'='
name|'self'
op|'.'
name|'zone_state_cls'
op|'('
op|')'
newline|'\n'
name|'zone'
op|'.'
name|'zone_info'
op|'='
name|'_create_zone'
op|'('
name|'zone_id'
op|','
name|'name'
op|','
name|'api_url'
op|','
name|'username'
op|')'
newline|'\n'
name|'return'
name|'zone'
newline|'\n'
nl|'\n'
DECL|member|test_update
dedent|''
name|'def'
name|'test_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'zm'
op|'='
name|'self'
op|'.'
name|'zone_manager'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'zm'
op|','
string|"'_refresh_from_db'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'zm'
op|','
string|"'_poll_zones'"
op|')'
newline|'\n'
name|'zm'
op|'.'
name|'_refresh_from_db'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'zm'
op|'.'
name|'_poll_zones'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'zm'
op|'.'
name|'update'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_refresh_from_db_new
dedent|''
name|'def'
name|'test_refresh_from_db_new'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'zone'
op|'='
name|'_create_zone'
op|'('
name|'zone_id'
op|'='
number|'1'
op|','
name|'username'
op|'='
string|"'user1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'zone_get_all'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'zone_get_all'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'zone'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'zm'
op|'='
name|'self'
op|'.'
name|'zone_manager'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'zm'
op|'.'
name|'zone_states'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'zm'
op|'.'
name|'_refresh_from_db'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'zm'
op|'.'
name|'zone_states'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
number|'1'
op|','
name|'zm'
op|'.'
name|'zone_states'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'zm'
op|'.'
name|'zone_states'
op|'['
number|'1'
op|']'
op|'.'
name|'zone_info'
op|'['
string|"'username'"
op|']'
op|','
string|"'user1'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_refresh_from_db_replace_existing
dedent|''
name|'def'
name|'test_refresh_from_db_replace_existing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'zone_state'
op|'='
name|'self'
op|'.'
name|'_create_zone_state'
op|'('
name|'zone_id'
op|'='
number|'1'
op|','
name|'username'
op|'='
string|"'user1'"
op|')'
newline|'\n'
name|'zm'
op|'='
name|'self'
op|'.'
name|'zone_manager'
newline|'\n'
name|'zm'
op|'.'
name|'zone_states'
op|'['
number|'1'
op|']'
op|'='
name|'zone_state'
newline|'\n'
nl|'\n'
name|'zone'
op|'='
name|'_create_zone'
op|'('
name|'zone_id'
op|'='
number|'1'
op|','
name|'username'
op|'='
string|"'user2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'zone_get_all'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'zone_get_all'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'zone'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'zm'
op|'.'
name|'zone_states'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'zm'
op|'.'
name|'_refresh_from_db'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'zm'
op|'.'
name|'zone_states'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'zm'
op|'.'
name|'zone_states'
op|'['
number|'1'
op|']'
op|'.'
name|'zone_info'
op|'['
string|"'username'"
op|']'
op|','
string|"'user2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_refresh_from_db_missing
dedent|''
name|'def'
name|'test_refresh_from_db_missing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'zone_state'
op|'='
name|'self'
op|'.'
name|'_create_zone_state'
op|'('
name|'zone_id'
op|'='
number|'1'
op|','
name|'username'
op|'='
string|"'user1'"
op|')'
newline|'\n'
name|'zm'
op|'='
name|'self'
op|'.'
name|'zone_manager'
newline|'\n'
name|'zm'
op|'.'
name|'zone_states'
op|'['
number|'1'
op|']'
op|'='
name|'zone_state'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'zone_get_all'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'zone_get_all'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'zm'
op|'.'
name|'zone_states'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'zm'
op|'.'
name|'_refresh_from_db'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'zm'
op|'.'
name|'zone_states'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_refresh_from_db_add
dedent|''
name|'def'
name|'test_refresh_from_db_add'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'zone_state'
op|'='
name|'self'
op|'.'
name|'_create_zone_state'
op|'('
name|'zone_id'
op|'='
number|'1'
op|','
name|'username'
op|'='
string|"'user1'"
op|')'
newline|'\n'
name|'zm'
op|'='
name|'self'
op|'.'
name|'zone_manager'
newline|'\n'
name|'zm'
op|'.'
name|'zone_states'
op|'['
number|'1'
op|']'
op|'='
name|'zone_state'
newline|'\n'
nl|'\n'
name|'zone1'
op|'='
name|'_create_zone'
op|'('
name|'zone_id'
op|'='
number|'1'
op|','
name|'username'
op|'='
string|"'user1'"
op|')'
newline|'\n'
name|'zone2'
op|'='
name|'_create_zone'
op|'('
name|'zone_id'
op|'='
number|'2'
op|','
name|'username'
op|'='
string|"'user2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'zone_get_all'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'zone_get_all'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'zone1'
op|','
name|'zone2'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'zm'
op|'.'
name|'_refresh_from_db'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'zm'
op|'.'
name|'zone_states'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
number|'1'
op|','
name|'zm'
op|'.'
name|'zone_states'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
number|'2'
op|','
name|'zm'
op|'.'
name|'zone_states'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'zm'
op|'.'
name|'zone_states'
op|'['
number|'1'
op|']'
op|'.'
name|'zone_info'
op|'['
string|"'username'"
op|']'
op|','
string|"'user1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'zm'
op|'.'
name|'zone_states'
op|'['
number|'2'
op|']'
op|'.'
name|'zone_info'
op|'['
string|"'username'"
op|']'
op|','
string|"'user2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_refresh_from_db_add_and_delete
dedent|''
name|'def'
name|'test_refresh_from_db_add_and_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'zone_state'
op|'='
name|'self'
op|'.'
name|'_create_zone_state'
op|'('
name|'zone_id'
op|'='
number|'1'
op|','
name|'username'
op|'='
string|"'user1'"
op|')'
newline|'\n'
name|'zm'
op|'='
name|'self'
op|'.'
name|'zone_manager'
newline|'\n'
name|'zm'
op|'.'
name|'zone_states'
op|'['
number|'1'
op|']'
op|'='
name|'zone_state'
newline|'\n'
nl|'\n'
name|'zone2'
op|'='
name|'_create_zone'
op|'('
name|'zone_id'
op|'='
number|'2'
op|','
name|'username'
op|'='
string|"'user2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'zone_get_all'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'zone_get_all'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'zone2'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'zm'
op|'.'
name|'_refresh_from_db'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'zm'
op|'.'
name|'zone_states'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
number|'2'
op|','
name|'zm'
op|'.'
name|'zone_states'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'zm'
op|'.'
name|'zone_states'
op|'['
number|'2'
op|']'
op|'.'
name|'zone_info'
op|'['
string|"'username'"
op|']'
op|','
string|"'user2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_poll_zone
dedent|''
name|'def'
name|'test_poll_zone'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'zone_state'
op|'='
name|'self'
op|'.'
name|'_create_zone_state'
op|'('
name|'zone_id'
op|'='
number|'1'
op|','
name|'name'
op|'='
string|"'child1'"
op|')'
newline|'\n'
name|'zone_state'
op|'.'
name|'attempt'
op|'='
number|'1'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'zone_state'
op|','
string|"'call_novaclient'"
op|')'
newline|'\n'
name|'zone_state'
op|'.'
name|'call_novaclient'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'name'
op|'='
name|'zone_state'
op|'.'
name|'zone_info'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'hairdresser'
op|'='
string|"'dietz'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'zone_state'
op|'.'
name|'capabilities'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'zone_state'
op|'.'
name|'poll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'zone_state'
op|'.'
name|'attempt'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'zone_state'
op|'.'
name|'capabilities'
op|','
nl|'\n'
name|'dict'
op|'('
name|'hairdresser'
op|'='
string|"'dietz'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'zone_state'
op|'.'
name|'is_active'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_poll_zones_with_failure
dedent|''
name|'def'
name|'test_poll_zones_with_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'zone_state'
op|'='
name|'self'
op|'.'
name|'_create_zone_state'
op|'('
name|'zone_id'
op|'='
number|'1'
op|')'
newline|'\n'
name|'zone_state'
op|'.'
name|'attempt'
op|'='
name|'FLAGS'
op|'.'
name|'zone_failures_to_offline'
op|'-'
number|'1'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'zone_state'
op|','
string|"'call_novaclient'"
op|')'
newline|'\n'
name|'zone_state'
op|'.'
name|'call_novaclient'
op|'('
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'Exception'
op|'('
string|"'foo'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'zone_state'
op|'.'
name|'poll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'zone_state'
op|'.'
name|'attempt'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'zone_state'
op|'.'
name|'is_active'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
