begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2012 OpenStack LLC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'eventlet'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'local'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Dict
name|'class'
name|'Dict'
op|'('
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Make weak referencable object."""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LocalStoreTestCase
dedent|''
name|'class'
name|'LocalStoreTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|v1
indent|'    '
name|'v1'
op|'='
name|'Dict'
op|'('
name|'a'
op|'='
string|"'1'"
op|')'
newline|'\n'
DECL|variable|v2
name|'v2'
op|'='
name|'Dict'
op|'('
name|'a'
op|'='
string|"'2'"
op|')'
newline|'\n'
DECL|variable|v3
name|'v3'
op|'='
name|'Dict'
op|'('
name|'a'
op|'='
string|"'3'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_thread_unique_storage
name|'def'
name|'test_thread_unique_storage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure local store holds thread specific values."""'
newline|'\n'
name|'expected_set'
op|'='
op|'['
op|']'
newline|'\n'
name|'local'
op|'.'
name|'store'
op|'.'
name|'a'
op|'='
name|'self'
op|'.'
name|'v1'
newline|'\n'
nl|'\n'
DECL|function|do_something
name|'def'
name|'do_something'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'local'
op|'.'
name|'store'
op|'.'
name|'a'
op|'='
name|'self'
op|'.'
name|'v2'
newline|'\n'
name|'expected_set'
op|'.'
name|'append'
op|'('
name|'getattr'
op|'('
name|'local'
op|'.'
name|'store'
op|','
string|"'a'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|do_something2
dedent|''
name|'def'
name|'do_something2'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'local'
op|'.'
name|'store'
op|'.'
name|'a'
op|'='
name|'self'
op|'.'
name|'v3'
newline|'\n'
name|'expected_set'
op|'.'
name|'append'
op|'('
name|'getattr'
op|'('
name|'local'
op|'.'
name|'store'
op|','
string|"'a'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'do_something'
op|')'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'do_something2'
op|')'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'expected_set'
op|'.'
name|'append'
op|'('
name|'getattr'
op|'('
name|'local'
op|'.'
name|'store'
op|','
string|"'a'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'v1'
name|'in'
name|'expected_set'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'v2'
name|'in'
name|'expected_set'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'v3'
name|'in'
name|'expected_set'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
