begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2010 Citrix Systems, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Copyright (c) 2010 Citrix Systems, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
nl|'\n'
name|'import'
name|'stubout'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'defer'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'threads'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'auth'
name|'import'
name|'manager'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'instance_types'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'power_state'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'xenapi_conn'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
name|'import'
name|'fake'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
name|'import'
name|'volume_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
name|'import'
name|'vm_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
name|'import'
name|'volumeops'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'ec2'
op|'.'
name|'volume'
name|'import'
name|'Volume'
newline|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|stubout_session
name|'def'
name|'stubout_session'
op|'('
name|'stubs'
op|','
name|'cls'
op|')'
op|':'
newline|'\n'
DECL|function|fake_import
indent|'    '
name|'def'
name|'fake_import'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_module'
op|'='
string|"'nova.virt.xenapi.fake'"
newline|'\n'
name|'from_list'
op|'='
op|'['
string|"'fake'"
op|']'
newline|'\n'
name|'return'
name|'__import__'
op|'('
name|'fake_module'
op|','
name|'globals'
op|'('
op|')'
op|','
name|'locals'
op|'('
op|')'
op|','
name|'from_list'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'xenapi_conn'
op|'.'
name|'XenAPISession'
op|','
string|"'_create_session'"
op|','
nl|'\n'
name|'lambda'
name|'s'
op|','
name|'url'
op|':'
name|'cls'
op|'('
name|'url'
op|')'
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'xenapi_conn'
op|'.'
name|'XenAPISession'
op|','
string|"'get_imported_xenapi'"
op|','
nl|'\n'
name|'fake_import'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|XenAPIVolumeTestCase
dedent|''
name|'class'
name|'XenAPIVolumeTestCase'
op|'('
name|'test'
op|'.'
name|'TrialTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Unit tests for VM operations\n    """'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'XenAPIVolumeTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'='
name|'stubout'
op|'.'
name|'StubOutForTesting'
op|'('
op|')'
newline|'\n'
name|'FLAGS'
op|'.'
name|'target_host'
op|'='
string|"'127.0.0.1'"
newline|'\n'
name|'FLAGS'
op|'.'
name|'xenapi_connection_url'
op|'='
string|"'test_url'"
newline|'\n'
name|'FLAGS'
op|'.'
name|'xenapi_connection_password'
op|'='
string|"'test_pass'"
newline|'\n'
name|'fake'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_volume
dedent|''
name|'def'
name|'_create_volume'
op|'('
name|'self'
op|','
name|'size'
op|'='
string|"'0'"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a volume object."""'
newline|'\n'
name|'vol'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'vol'
op|'['
string|"'size'"
op|']'
op|'='
name|'size'
newline|'\n'
name|'vol'
op|'['
string|"'user_id'"
op|']'
op|'='
string|"'fake'"
newline|'\n'
name|'vol'
op|'['
string|"'project_id'"
op|']'
op|'='
string|"'fake'"
newline|'\n'
name|'vol'
op|'['
string|"'host'"
op|']'
op|'='
string|"'localhost'"
newline|'\n'
name|'vol'
op|'['
string|"'availability_zone'"
op|']'
op|'='
name|'FLAGS'
op|'.'
name|'storage_availability_zone'
newline|'\n'
name|'vol'
op|'['
string|"'status'"
op|']'
op|'='
string|'"creating"'
newline|'\n'
name|'vol'
op|'['
string|"'attach_status'"
op|']'
op|'='
string|'"detached"'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'vol'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_iscsi_storage
dedent|''
name|'def'
name|'test_create_iscsi_storage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" This shows how to test helper classes\' methods """'
newline|'\n'
name|'stubout_session'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'FakeSessionForVolumeTests'
op|')'
newline|'\n'
name|'session'
op|'='
name|'xenapi_conn'
op|'.'
name|'XenAPISession'
op|'('
string|"'test_url'"
op|','
string|"'root'"
op|','
string|"'test_pass'"
op|')'
newline|'\n'
name|'helper'
op|'='
name|'volume_utils'
op|'.'
name|'VolumeHelper'
newline|'\n'
name|'helper'
op|'.'
name|'XenAPI'
op|'='
name|'session'
op|'.'
name|'get_imported_xenapi'
op|'('
op|')'
newline|'\n'
name|'vol'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'yield'
name|'helper'
op|'.'
name|'parse_volume_info'
op|'('
name|'vol'
op|'['
string|"'ec2_id'"
op|']'
op|','
string|"'/dev/sdc'"
op|')'
newline|'\n'
name|'label'
op|'='
string|"'SR-%s'"
op|'%'
name|'vol'
op|'['
string|"'ec2_id'"
op|']'
newline|'\n'
name|'description'
op|'='
string|"'Test-SR'"
newline|'\n'
name|'sr_ref'
op|'='
name|'helper'
op|'.'
name|'create_iscsi_storage_blocking'
op|'('
name|'session'
op|','
nl|'\n'
name|'info'
op|','
nl|'\n'
name|'label'
op|','
nl|'\n'
name|'description'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_parse_volume_info_raise_exception
dedent|''
name|'def'
name|'test_parse_volume_info_raise_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" This shows how to test helper classes\' methods """'
newline|'\n'
name|'stubout_session'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'FakeSessionForVolumeTests'
op|')'
newline|'\n'
name|'session'
op|'='
name|'xenapi_conn'
op|'.'
name|'XenAPISession'
op|'('
string|"'test_url'"
op|','
string|"'root'"
op|','
string|"'test_pass'"
op|')'
newline|'\n'
name|'helper'
op|'='
name|'volume_utils'
op|'.'
name|'VolumeHelper'
newline|'\n'
name|'helper'
op|'.'
name|'XenAPI'
op|'='
name|'session'
op|'.'
name|'get_imported_xenapi'
op|'('
op|')'
newline|'\n'
name|'vol'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
comment|'# oops, wrong mount point!'
nl|'\n'
name|'info'
op|'='
name|'helper'
op|'.'
name|'parse_volume_info'
op|'('
name|'vol'
op|'['
string|"'ec2_id'"
op|']'
op|','
string|"'/dev/sd'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|check
name|'def'
name|'check'
op|'('
name|'exc'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'exc'
op|'.'
name|'value'
op|','
name|'volume_utils'
op|'.'
name|'StorageError'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'info'
op|'.'
name|'addErrback'
op|'('
name|'check'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_volume
dedent|''
name|'def'
name|'test_attach_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" This shows how to test Ops classes\' methods """'
newline|'\n'
name|'stubout_session'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'FakeSessionForVolumeTests'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'xenapi_conn'
op|'.'
name|'get_connection'
op|'('
name|'False'
op|')'
newline|'\n'
name|'volume'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'FakeInstance'
op|'('
number|'1'
op|','
string|"'fake'"
op|','
string|"'fake'"
op|','
number|'1'
op|','
number|'2'
op|','
number|'3'
op|','
nl|'\n'
string|"'m1.large'"
op|','
string|"'aa:bb:cc:dd:ee:ff'"
op|')'
newline|'\n'
name|'fake'
op|'.'
name|'create_vm'
op|'('
name|'instance'
op|'.'
name|'name'
op|','
string|"'Running'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'conn'
op|'.'
name|'attach_volume'
op|'('
name|'instance'
op|'.'
name|'name'
op|','
name|'volume'
op|'['
string|"'ec2_id'"
op|']'
op|','
nl|'\n'
string|"'/dev/sdc'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|check
name|'def'
name|'check'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
comment|'# check that the VM has a VBD attached to it'
nl|'\n'
comment|'# Get XenAPI reference for the VM'
nl|'\n'
indent|'            '
name|'vms'
op|'='
name|'fake'
op|'.'
name|'get_all'
op|'('
string|"'VM'"
op|')'
newline|'\n'
comment|'# Get XenAPI record for VBD'
nl|'\n'
name|'vbds'
op|'='
name|'fake'
op|'.'
name|'get_all'
op|'('
string|"'VBD'"
op|')'
newline|'\n'
name|'vbd'
op|'='
name|'fake'
op|'.'
name|'get_record'
op|'('
string|"'VBD'"
op|','
name|'vbds'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'vm_ref'
op|'='
name|'vbd'
op|'['
string|"'VM'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_ref'
op|','
name|'vms'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'result'
op|'.'
name|'addCallback'
op|'('
name|'check'
op|')'
newline|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|member|test_attach_volume_raise_exception
dedent|''
name|'def'
name|'test_attach_volume_raise_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" This shows how to test when exceptions are raised """'
newline|'\n'
name|'stubout_session'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'FakeSessionForVolumeFailedTests'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'xenapi_conn'
op|'.'
name|'get_connection'
op|'('
name|'False'
op|')'
newline|'\n'
name|'volume'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'FakeInstance'
op|'('
number|'1'
op|','
string|"'fake'"
op|','
string|"'fake'"
op|','
number|'1'
op|','
number|'2'
op|','
number|'3'
op|','
nl|'\n'
string|"'m1.large'"
op|','
string|"'aa:bb:cc:dd:ee:ff'"
op|')'
newline|'\n'
name|'fake'
op|'.'
name|'create_vm'
op|'('
name|'instance'
op|'.'
name|'name'
op|','
string|"'Running'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'conn'
op|'.'
name|'attach_volume'
op|'('
name|'instance'
op|'.'
name|'name'
op|','
name|'volume'
op|'['
string|"'ec2_id'"
op|']'
op|','
nl|'\n'
string|"'/dev/sdc'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|check
name|'def'
name|'check'
op|'('
name|'exc'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'exc'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'Oops, no exception has been raised!'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'result'
op|'.'
name|'addErrback'
op|'('
name|'check'
op|')'
newline|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'XenAPIVolumeTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'UnsetAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|XenAPIVMTestCase
dedent|''
dedent|''
name|'class'
name|'XenAPIVMTestCase'
op|'('
name|'test'
op|'.'
name|'TrialTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Unit tests for VM operations\n    """'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'XenAPIVMTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'='
name|'manager'
op|'.'
name|'AuthManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user'
op|'='
name|'self'
op|'.'
name|'manager'
op|'.'
name|'create_user'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|','
string|"'fake'"
op|','
nl|'\n'
name|'admin'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'project'
op|'='
name|'self'
op|'.'
name|'manager'
op|'.'
name|'create_project'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'='
name|'utils'
op|'.'
name|'import_object'
op|'('
name|'FLAGS'
op|'.'
name|'network_manager'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'='
name|'stubout'
op|'.'
name|'StubOutForTesting'
op|'('
op|')'
newline|'\n'
name|'FLAGS'
op|'.'
name|'xenapi_connection_url'
op|'='
string|"'test_url'"
newline|'\n'
name|'FLAGS'
op|'.'
name|'xenapi_connection_password'
op|'='
string|"'test_pass'"
newline|'\n'
name|'fake'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'fake'
op|'.'
name|'create_network'
op|'('
string|"'fake'"
op|','
name|'FLAGS'
op|'.'
name|'flat_network_bridge'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_instances_0
dedent|''
name|'def'
name|'test_list_instances_0'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'stubout_session'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'FakeSessionForVMTests'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'xenapi_conn'
op|'.'
name|'get_connection'
op|'('
name|'False'
op|')'
newline|'\n'
name|'instances'
op|'='
name|'conn'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'instances'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn
dedent|''
name|'def'
name|'test_spawn'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'stubout_session'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'FakeSessionForVMTests'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'xenapi_conn'
op|'.'
name|'get_connection'
op|'('
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'FakeInstance'
op|'('
number|'1'
op|','
name|'self'
op|'.'
name|'project'
op|'.'
name|'id'
op|','
name|'self'
op|'.'
name|'user'
op|'.'
name|'id'
op|','
number|'1'
op|','
number|'2'
op|','
number|'3'
op|','
nl|'\n'
string|"'m1.large'"
op|','
string|"'aa:bb:cc:dd:ee:ff'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'conn'
op|'.'
name|'spawn'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|function|check
name|'def'
name|'check'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instances'
op|'='
name|'conn'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'instances'
op|','
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Get Nova record for VM'
nl|'\n'
name|'vm_info'
op|'='
name|'conn'
op|'.'
name|'get_info'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
comment|'# Get XenAPI record for VM'
nl|'\n'
name|'vms'
op|'='
name|'fake'
op|'.'
name|'get_all'
op|'('
string|"'VM'"
op|')'
newline|'\n'
name|'vm'
op|'='
name|'fake'
op|'.'
name|'get_record'
op|'('
string|"'VM'"
op|','
name|'vms'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Check that m1.large above turned into the right thing.'
nl|'\n'
name|'instance_type'
op|'='
name|'instance_types'
op|'.'
name|'INSTANCE_TYPES'
op|'['
string|"'m1.large'"
op|']'
newline|'\n'
name|'mem_kib'
op|'='
name|'long'
op|'('
name|'instance_type'
op|'['
string|"'memory_mb'"
op|']'
op|')'
op|'<<'
number|'10'
newline|'\n'
name|'mem_bytes'
op|'='
name|'str'
op|'('
name|'mem_kib'
op|'<<'
number|'10'
op|')'
newline|'\n'
name|'vcpus'
op|'='
name|'instance_type'
op|'['
string|"'vcpus'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'vm_info'
op|'['
string|"'max_mem'"
op|']'
op|','
name|'mem_kib'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'vm_info'
op|'['
string|"'mem'"
op|']'
op|','
name|'mem_kib'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'vm'
op|'['
string|"'memory_static_max'"
op|']'
op|','
name|'mem_bytes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'vm'
op|'['
string|"'memory_dynamic_max'"
op|']'
op|','
name|'mem_bytes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'vm'
op|'['
string|"'memory_dynamic_min'"
op|']'
op|','
name|'mem_bytes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'vm'
op|'['
string|"'VCPUs_max'"
op|']'
op|','
name|'str'
op|'('
name|'vcpus'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'vm'
op|'['
string|"'VCPUs_at_startup'"
op|']'
op|','
name|'str'
op|'('
name|'vcpus'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Check that the VM is running according to Nova'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'vm_info'
op|'['
string|"'state'"
op|']'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
comment|'# Check that the VM is running according to XenAPI.'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'vm'
op|'['
string|"'power_state'"
op|']'
op|','
string|"'Running'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'result'
op|'.'
name|'addCallback'
op|'('
name|'check'
op|')'
newline|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'XenAPIVMTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'delete_project'
op|'('
name|'self'
op|'.'
name|'project'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'delete_user'
op|'('
name|'self'
op|'.'
name|'user'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'UnsetAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeInstance
dedent|''
dedent|''
name|'class'
name|'FakeInstance'
op|'('
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'project_id'
op|','
name|'user_id'
op|','
name|'image_id'
op|','
name|'kernel_id'
op|','
nl|'\n'
name|'ramdisk_id'
op|','
name|'instance_type'
op|','
name|'mac_address'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
name|'project_id'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
name|'user_id'
newline|'\n'
name|'self'
op|'.'
name|'image_id'
op|'='
name|'image_id'
newline|'\n'
name|'self'
op|'.'
name|'kernel_id'
op|'='
name|'kernel_id'
newline|'\n'
name|'self'
op|'.'
name|'ramdisk_id'
op|'='
name|'ramdisk_id'
newline|'\n'
name|'self'
op|'.'
name|'instance_type'
op|'='
name|'instance_type'
newline|'\n'
name|'self'
op|'.'
name|'mac_address'
op|'='
name|'mac_address'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeSessionForVMTests
dedent|''
dedent|''
name|'class'
name|'FakeSessionForVMTests'
op|'('
name|'fake'
op|'.'
name|'SessionBase'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'uri'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'FakeSessionForVMTests'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'uri'
op|')'
newline|'\n'
nl|'\n'
DECL|member|network_get_all_records_where
dedent|''
name|'def'
name|'network_get_all_records_where'
op|'('
name|'self'
op|','
name|'_1'
op|','
name|'_2'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'xenapi'
op|'.'
name|'network'
op|'.'
name|'get_all_records'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|host_call_plugin
dedent|''
name|'def'
name|'host_call_plugin'
op|'('
name|'self'
op|','
name|'_1'
op|','
name|'_2'
op|','
name|'_3'
op|','
name|'_4'
op|','
name|'_5'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"''"
newline|'\n'
nl|'\n'
DECL|member|VM_start
dedent|''
name|'def'
name|'VM_start'
op|'('
name|'self'
op|','
name|'_1'
op|','
name|'ref'
op|','
name|'_2'
op|','
name|'_3'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vm'
op|'='
name|'fake'
op|'.'
name|'get_record'
op|'('
string|"'VM'"
op|','
name|'ref'
op|')'
newline|'\n'
name|'if'
name|'vm'
op|'['
string|"'power_state'"
op|']'
op|'!='
string|"'Halted'"
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'fake'
op|'.'
name|'Failure'
op|'('
op|'['
string|"'VM_BAD_POWER_STATE'"
op|','
name|'ref'
op|','
string|"'Halted'"
op|','
nl|'\n'
name|'vm'
op|'['
string|"'power_state'"
op|']'
op|']'
op|')'
newline|'\n'
dedent|''
name|'vm'
op|'['
string|"'power_state'"
op|']'
op|'='
string|"'Running'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeSessionForVolumeTests
dedent|''
dedent|''
name|'class'
name|'FakeSessionForVolumeTests'
op|'('
name|'fake'
op|'.'
name|'SessionBase'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'uri'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'FakeSessionForVolumeTests'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'uri'
op|')'
newline|'\n'
nl|'\n'
DECL|member|VBD_plug
dedent|''
name|'def'
name|'VBD_plug'
op|'('
name|'self'
op|','
name|'_1'
op|','
name|'_2'
op|')'
op|':'
newline|'\n'
comment|'#FIXME(armando):make proper plug'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|PBD_unplug
dedent|''
name|'def'
name|'PBD_unplug'
op|'('
name|'self'
op|','
name|'_1'
op|','
name|'_2'
op|')'
op|':'
newline|'\n'
comment|'#FIXME(armando):make proper unplug'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|SR_forget
dedent|''
name|'def'
name|'SR_forget'
op|'('
name|'self'
op|','
name|'_1'
op|','
name|'_2'
op|')'
op|':'
newline|'\n'
comment|'#FIXME(armando):make proper forget'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|VDI_introduce
dedent|''
name|'def'
name|'VDI_introduce'
op|'('
name|'self'
op|','
name|'_1'
op|','
name|'uuid'
op|','
name|'_2'
op|','
name|'_3'
op|','
name|'_4'
op|','
name|'_5'
op|','
nl|'\n'
name|'_6'
op|','
name|'_7'
op|','
name|'_8'
op|','
name|'_9'
op|','
name|'_10'
op|','
name|'_11'
op|')'
op|':'
newline|'\n'
comment|'#FIXME(armando):make proper introduce'
nl|'\n'
indent|'        '
name|'valid_vdi'
op|'='
name|'False'
newline|'\n'
name|'refs'
op|'='
name|'fake'
op|'.'
name|'get_all'
op|'('
string|"'VDI'"
op|')'
newline|'\n'
name|'for'
name|'ref'
name|'in'
name|'refs'
op|':'
newline|'\n'
indent|'            '
name|'rec'
op|'='
name|'fake'
op|'.'
name|'get_record'
op|'('
string|"'VDI'"
op|','
name|'ref'
op|')'
newline|'\n'
name|'if'
name|'rec'
op|'['
string|"'uuid'"
op|']'
op|'=='
name|'uuid'
op|':'
newline|'\n'
indent|'                '
name|'valid_vdi'
op|'='
name|'True'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'valid_vdi'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'fake'
op|'.'
name|'Failure'
op|'('
op|'['
op|'['
string|"'INVALID_VDI'"
op|','
string|"'session'"
op|','
name|'self'
op|'.'
name|'_session'
op|']'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeSessionForVolumeFailedTests
dedent|''
dedent|''
dedent|''
name|'class'
name|'FakeSessionForVolumeFailedTests'
op|'('
name|'FakeSessionForVolumeTests'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'uri'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'FakeSessionForVolumeFailedTests'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'uri'
op|')'
newline|'\n'
nl|'\n'
DECL|member|VDI_introduce
dedent|''
name|'def'
name|'VDI_introduce'
op|'('
name|'self'
op|','
name|'_1'
op|','
name|'uuid'
op|','
name|'_2'
op|','
name|'_3'
op|','
name|'_4'
op|','
name|'_5'
op|','
nl|'\n'
name|'_6'
op|','
name|'_7'
op|','
name|'_8'
op|','
name|'_9'
op|','
name|'_10'
op|','
name|'_11'
op|')'
op|':'
newline|'\n'
comment|'# test failure'
nl|'\n'
indent|'        '
name|'raise'
name|'fake'
op|'.'
name|'Failure'
op|'('
op|'['
op|'['
string|"'INVALID_VDI'"
op|','
string|"'session'"
op|','
name|'self'
op|'.'
name|'_session'
op|']'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|VBD_plug
dedent|''
name|'def'
name|'VBD_plug'
op|'('
name|'self'
op|','
name|'_1'
op|','
name|'_2'
op|')'
op|':'
newline|'\n'
comment|'# test failure'
nl|'\n'
indent|'        '
name|'raise'
name|'fake'
op|'.'
name|'Failure'
op|'('
op|'['
op|'['
string|"'INVALID_VBD'"
op|','
string|"'session'"
op|','
name|'self'
op|'.'
name|'_session'
op|']'
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
