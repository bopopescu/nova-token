begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2011 Rackspace'
nl|'\n'
comment|'# Copyright (c) 2011 X.commerce, a business unit of eBay Inc.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'# not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'# a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#      http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'# License for the specific language governing permissions and limitations'
nl|'\n'
comment|'# under the License.'
nl|'\n'
name|'import'
name|'mox'
newline|'\n'
name|'import'
name|'shutil'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'tempfile'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'policy'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'manager'
name|'as'
name|'network_manager'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fake_network'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|HOST
name|'HOST'
op|'='
string|'"testhost"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|networks
name|'networks'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|'"aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"'
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'test0'"
op|','
nl|'\n'
string|"'injected'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'multi_host'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'192.168.0.0/24'"
op|','
nl|'\n'
string|"'cidr_v6'"
op|':'
string|"'2001:db8::/64'"
op|','
nl|'\n'
string|"'gateway_v6'"
op|':'
string|"'2001:db8::1'"
op|','
nl|'\n'
string|"'netmask_v6'"
op|':'
string|"'64'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'255.255.255.0'"
op|','
nl|'\n'
string|"'bridge'"
op|':'
string|"'fa0'"
op|','
nl|'\n'
string|"'bridge_interface'"
op|':'
string|"'fake_fa0'"
op|','
nl|'\n'
string|"'gateway'"
op|':'
string|"'192.168.0.1'"
op|','
nl|'\n'
string|"'broadcast'"
op|':'
string|"'192.168.0.255'"
op|','
nl|'\n'
string|"'dns1'"
op|':'
string|"'192.168.0.1'"
op|','
nl|'\n'
string|"'dns2'"
op|':'
string|"'192.168.0.2'"
op|','
nl|'\n'
string|"'vlan'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'HOST'
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake_project'"
op|','
nl|'\n'
string|"'vpn_public_address'"
op|':'
string|"'192.168.0.2'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|'"bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"'
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'test1'"
op|','
nl|'\n'
string|"'injected'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'multi_host'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'192.168.1.0/24'"
op|','
nl|'\n'
string|"'cidr_v6'"
op|':'
string|"'2001:db9::/64'"
op|','
nl|'\n'
string|"'gateway_v6'"
op|':'
string|"'2001:db9::1'"
op|','
nl|'\n'
string|"'netmask_v6'"
op|':'
string|"'64'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'255.255.255.0'"
op|','
nl|'\n'
string|"'bridge'"
op|':'
string|"'fa1'"
op|','
nl|'\n'
string|"'bridge_interface'"
op|':'
string|"'fake_fa1'"
op|','
nl|'\n'
string|"'gateway'"
op|':'
string|"'192.168.1.1'"
op|','
nl|'\n'
string|"'broadcast'"
op|':'
string|"'192.168.1.255'"
op|','
nl|'\n'
string|"'dns1'"
op|':'
string|"'192.168.0.1'"
op|','
nl|'\n'
string|"'dns2'"
op|':'
string|"'192.168.0.2'"
op|','
nl|'\n'
string|"'vlan'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'HOST'
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake_project'"
op|','
nl|'\n'
string|"'vpn_public_address'"
op|':'
string|"'192.168.1.2'"
op|'}'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|fixed_ips
name|'fixed_ips'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.0.100'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'floating_ips'"
op|':'
op|'['
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.1.100'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'floating_ips'"
op|':'
op|'['
op|']'
op|'}'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|flavor
name|'flavor'
op|'='
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rxtx_cap'"
op|':'
number|'3'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|floating_ip_fields
name|'floating_ip_fields'
op|'='
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.10.100'"
op|','
nl|'\n'
string|"'pool'"
op|':'
string|"'nova'"
op|','
nl|'\n'
string|"'interface'"
op|':'
string|"'eth0'"
op|','
nl|'\n'
string|"'fixed_ip_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'auto_assigned'"
op|':'
name|'False'
op|'}'
newline|'\n'
nl|'\n'
DECL|variable|vifs
name|'vifs'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'DE:AD:BE:EF:00:00'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000000'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'instance_id'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'DE:AD:BE:EF:00:01'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000001'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'instance_id'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'DE:AD:BE:EF:00:02'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000002'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'instance_id'"
op|':'
number|'0'
op|'}'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FlatNetworkTestCase
name|'class'
name|'FlatNetworkTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'FlatNetworkTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tempdir'
op|'='
name|'tempfile'
op|'.'
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'logdir'
op|'='
name|'self'
op|'.'
name|'tempdir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'='
name|'network_manager'
op|'.'
name|'FlatManager'
op|'('
name|'host'
op|'='
name|'HOST'
op|')'
newline|'\n'
name|'temp'
op|'='
name|'utils'
op|'.'
name|'import_object'
op|'('
string|"'nova.network.minidns.MiniDNS'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'instance_dns_manager'
op|'='
name|'temp'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'instance_dns_domain'
op|'='
string|"''"
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|'='
name|'db'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'testuser'"
op|','
string|"'testproject'"
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'self'
op|'.'
name|'tempdir'
op|')'
newline|'\n'
name|'super'
op|'('
name|'FlatNetworkTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instance_nw_info
dedent|''
name|'def'
name|'test_get_instance_nw_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_get_instance_nw_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
newline|'\n'
nl|'\n'
name|'nw_info'
op|'='
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'0'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'nw_info'
op|')'
newline|'\n'
nl|'\n'
name|'nw_info'
op|'='
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
op|','
op|'('
name|'nw'
op|','
name|'info'
op|')'
name|'in'
name|'enumerate'
op|'('
name|'nw_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'nid'
op|'='
name|'i'
op|'+'
number|'1'
newline|'\n'
name|'check'
op|'='
op|'{'
string|"'bridge'"
op|':'
string|"'fake_br%d'"
op|'%'
name|'nid'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'192.168.%s.0/24'"
op|'%'
name|'nid'
op|','
nl|'\n'
string|"'cidr_v6'"
op|':'
string|"'2001:db8:0:%x::/64'"
op|'%'
name|'nid'
op|','
nl|'\n'
string|"'id'"
op|':'
string|"'00000000-0000-0000-0000-00000000000000%02d'"
op|'%'
name|'nid'
op|','
nl|'\n'
string|"'multi_host'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'injected'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'bridge_interface'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'vlan'"
op|':'
name|'None'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'nw'
op|','
name|'check'
op|')'
newline|'\n'
nl|'\n'
name|'check'
op|'='
op|'{'
string|"'broadcast'"
op|':'
string|"'192.168.%d.255'"
op|'%'
name|'nid'
op|','
nl|'\n'
string|"'dhcp_server'"
op|':'
string|"'192.168.%d.1'"
op|'%'
name|'nid'
op|','
nl|'\n'
string|"'dns'"
op|':'
op|'['
string|"'192.168.%d.3'"
op|'%'
name|'nid'
op|','
string|"'192.168.%d.4'"
op|'%'
name|'nid'
op|']'
op|','
nl|'\n'
string|"'gateway'"
op|':'
string|"'192.168.%d.1'"
op|'%'
name|'nid'
op|','
nl|'\n'
string|"'gateway_v6'"
op|':'
string|"'fe80::def'"
op|','
nl|'\n'
string|"'ip6s'"
op|':'
string|"'DONTCARE'"
op|','
nl|'\n'
string|"'ips'"
op|':'
string|"'DONTCARE'"
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'test%d'"
op|'%'
name|'nid'
op|','
nl|'\n'
string|"'mac'"
op|':'
string|"'DE:AD:BE:EF:00:%02x'"
op|'%'
name|'nid'
op|','
nl|'\n'
string|"'rxtx_cap'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'vif_uuid'"
op|':'
nl|'\n'
string|"'00000000-0000-0000-0000-00000000000000%02d'"
op|'%'
name|'nid'
op|','
nl|'\n'
string|"'should_create_vlan'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'should_create_bridge'"
op|':'
name|'False'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'info'
op|','
name|'check'
op|')'
newline|'\n'
nl|'\n'
name|'check'
op|'='
op|'['
op|'{'
string|"'enabled'"
op|':'
string|"'DONTCARE'"
op|','
nl|'\n'
string|"'ip'"
op|':'
string|"'2001:db8:0:1::%x'"
op|'%'
name|'nid'
op|','
nl|'\n'
string|"'netmask'"
op|':'
number|'64'
op|','
nl|'\n'
string|"'gateway'"
op|':'
string|"'fe80::def'"
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertDictListMatch'
op|'('
name|'info'
op|'['
string|"'ip6s'"
op|']'
op|','
name|'check'
op|')'
newline|'\n'
nl|'\n'
name|'num_fixed_ips'
op|'='
name|'len'
op|'('
name|'info'
op|'['
string|"'ips'"
op|']'
op|')'
newline|'\n'
name|'check'
op|'='
op|'['
op|'{'
string|"'enabled'"
op|':'
string|"'DONTCARE'"
op|','
nl|'\n'
string|"'ip'"
op|':'
string|"'192.168.%d.%03d'"
op|'%'
op|'('
name|'nid'
op|','
name|'ip_num'
op|'+'
number|'99'
op|')'
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'255.255.255.0'"
op|','
nl|'\n'
string|"'gateway'"
op|':'
string|"'192.168.%d.1'"
op|'%'
name|'nid'
op|'}'
nl|'\n'
name|'for'
name|'ip_num'
name|'in'
name|'xrange'
op|'('
number|'1'
op|','
name|'num_fixed_ips'
op|'+'
number|'1'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertDictListMatch'
op|'('
name|'info'
op|'['
string|"'ips'"
op|']'
op|','
name|'check'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_networks
dedent|''
dedent|''
name|'def'
name|'test_validate_networks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'network_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'network_get_all_by_uuids'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|'"fixed_ip_get_by_address"'
op|')'
newline|'\n'
nl|'\n'
name|'requested_networks'
op|'='
op|'['
op|'('
string|'"bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"'
op|','
nl|'\n'
string|'"192.168.1.100"'
op|')'
op|']'
newline|'\n'
name|'db'
op|'.'
name|'network_get_all_by_uuids'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'networks'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'network_get'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'networks'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'ip'
op|'='
name|'fixed_ips'
op|'['
number|'1'
op|']'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'ip'
op|'['
string|"'instance_id'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'ip'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'validate_networks'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'requested_networks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_reserved
dedent|''
name|'def'
name|'test_validate_reserved'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context_admin'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'testuser'"
op|','
string|"'testproject'"
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'True'
op|')'
newline|'\n'
name|'nets'
op|'='
name|'self'
op|'.'
name|'network'
op|'.'
name|'create_networks'
op|'('
name|'context_admin'
op|','
string|"'fake'"
op|','
nl|'\n'
string|"'192.168.0.0/24'"
op|','
name|'False'
op|','
number|'1'
op|','
nl|'\n'
number|'256'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'nets'
op|')'
op|')'
newline|'\n'
name|'network'
op|'='
name|'nets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'db'
op|'.'
name|'network_count_reserved_ips'
op|'('
name|'context_admin'
op|','
nl|'\n'
name|'network'
op|'['
string|"'id'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_networks_none_requested_networks
dedent|''
name|'def'
name|'test_validate_networks_none_requested_networks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'network'
op|'.'
name|'validate_networks'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_networks_empty_requested_networks
dedent|''
name|'def'
name|'test_validate_networks_empty_requested_networks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requested_networks'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'validate_networks'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'requested_networks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_networks_invalid_fixed_ip
dedent|''
name|'def'
name|'test_validate_networks_invalid_fixed_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'network_get_all_by_uuids'"
op|')'
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'('
number|'1'
op|','
string|'"192.168.0.100.1"'
op|')'
op|']'
newline|'\n'
name|'db'
op|'.'
name|'network_get_all_by_uuids'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FixedIpInvalid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'validate_networks'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'requested_networks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_networks_empty_fixed_ip
dedent|''
name|'def'
name|'test_validate_networks_empty_fixed_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'network_get_all_by_uuids'"
op|')'
newline|'\n'
nl|'\n'
name|'requested_networks'
op|'='
op|'['
op|'('
number|'1'
op|','
string|'""'
op|')'
op|']'
newline|'\n'
name|'db'
op|'.'
name|'network_get_all_by_uuids'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FixedIpInvalid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'validate_networks'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'requested_networks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_networks_none_fixed_ip
dedent|''
name|'def'
name|'test_validate_networks_none_fixed_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'network_get_all_by_uuids'"
op|')'
newline|'\n'
nl|'\n'
name|'requested_networks'
op|'='
op|'['
op|'('
number|'1'
op|','
name|'None'
op|')'
op|']'
newline|'\n'
name|'db'
op|'.'
name|'network_get_all_by_uuids'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'validate_networks'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'requested_networks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_fixed_ip_instance_without_vpn_requested_networks
dedent|''
name|'def'
name|'test_add_fixed_ip_instance_without_vpn_requested_networks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'network_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'network_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'fixed_ip_associate_pool'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
nl|'\n'
string|"'virtual_interface_get_by_instance_and_network'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'fixed_ip_update'"
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_update'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'virtual_interface_get_by_instance_and_network'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'id'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'security_groups'"
op|':'
nl|'\n'
op|'['
op|'{'
string|"'id'"
op|':'
number|'0'
op|'}'
op|']'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
number|'1'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'display_name'"
op|':'
name|'HOST'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'test-00001'"
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'availability_zone'"
op|':'
string|"''"
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_associate_pool'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'192.168.0.101'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'network_get'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'networks'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'network_update'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'add_fixed_ip_to_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
number|'1'
op|','
name|'HOST'
op|','
nl|'\n'
name|'networks'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_mini_dns_driver
dedent|''
name|'def'
name|'test_mini_dns_driver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'zone1'
op|'='
string|'"example.org"'
newline|'\n'
name|'zone2'
op|'='
string|'"example.com"'
newline|'\n'
name|'driver'
op|'='
name|'self'
op|'.'
name|'network'
op|'.'
name|'instance_dns_manager'
newline|'\n'
name|'driver'
op|'.'
name|'create_entry'
op|'('
string|'"hostone"'
op|','
string|'"10.0.0.1"'
op|','
string|'"A"'
op|','
name|'zone1'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'create_entry'
op|'('
string|'"hosttwo"'
op|','
string|'"10.0.0.2"'
op|','
string|'"A"'
op|','
name|'zone1'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'create_entry'
op|'('
string|'"hostthree"'
op|','
string|'"10.0.0.3"'
op|','
string|'"A"'
op|','
name|'zone1'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'create_entry'
op|'('
string|'"hostfour"'
op|','
string|'"10.0.0.4"'
op|','
string|'"A"'
op|','
name|'zone1'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'create_entry'
op|'('
string|'"hostfive"'
op|','
string|'"10.0.0.5"'
op|','
string|'"A"'
op|','
name|'zone2'
op|')'
newline|'\n'
nl|'\n'
name|'driver'
op|'.'
name|'delete_entry'
op|'('
string|'"hostone"'
op|','
name|'zone1'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'modify_address'
op|'('
string|'"hostfour"'
op|','
string|'"10.0.0.1"'
op|','
name|'zone1'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'modify_address'
op|'('
string|'"hostthree"'
op|','
string|'"10.0.0.1"'
op|','
name|'zone1'
op|')'
newline|'\n'
name|'names'
op|'='
name|'driver'
op|'.'
name|'get_entries_by_address'
op|'('
string|'"10.0.0.1"'
op|','
name|'zone1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'names'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'hostthree'"
op|','
name|'names'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'hostfour'"
op|','
name|'names'
op|')'
newline|'\n'
nl|'\n'
name|'names'
op|'='
name|'driver'
op|'.'
name|'get_entries_by_address'
op|'('
string|'"10.0.0.5"'
op|','
name|'zone2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'names'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'hostfive'"
op|','
name|'names'
op|')'
newline|'\n'
nl|'\n'
name|'addresses'
op|'='
name|'driver'
op|'.'
name|'get_entries_by_name'
op|'('
string|'"hosttwo"'
op|','
name|'zone1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'addresses'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'10.0.0.2'"
op|','
name|'addresses'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidInput'
op|','
nl|'\n'
name|'driver'
op|'.'
name|'create_entry'
op|','
nl|'\n'
string|'"hostname"'
op|','
nl|'\n'
string|'"10.10.10.10"'
op|','
nl|'\n'
string|'"invalidtype"'
op|','
nl|'\n'
name|'zone1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_dns
dedent|''
name|'def'
name|'test_instance_dns'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fixedip'
op|'='
string|"'192.168.0.101'"
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'network_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'network_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'fixed_ip_associate_pool'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
nl|'\n'
string|"'virtual_interface_get_by_instance_and_network'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'fixed_ip_update'"
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_update'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'virtual_interface_get_by_instance_and_network'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'id'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'security_groups'"
op|':'
nl|'\n'
op|'['
op|'{'
string|"'id'"
op|':'
number|'0'
op|'}'
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
number|'1'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'display_name'"
op|':'
name|'HOST'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'test-00001'"
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'availability_zone'"
op|':'
string|"''"
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_associate_pool'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fixedip'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'network_get'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'networks'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'network_update'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'add_fixed_ip_to_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
number|'1'
op|','
name|'HOST'
op|','
nl|'\n'
name|'networks'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'instance_manager'
op|'='
name|'self'
op|'.'
name|'network'
op|'.'
name|'instance_dns_manager'
newline|'\n'
name|'addresses'
op|'='
name|'instance_manager'
op|'.'
name|'get_entries_by_name'
op|'('
name|'HOST'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'instance_dns_domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'addresses'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'addresses'
op|'['
number|'0'
op|']'
op|','
name|'fixedip'
op|')'
newline|'\n'
name|'addresses'
op|'='
name|'instance_manager'
op|'.'
name|'get_entries_by_name'
op|'('
string|"'test-00001'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'instance_dns_domain'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'addresses'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'addresses'
op|'['
number|'0'
op|']'
op|','
name|'fixedip'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VlanNetworkTestCase
dedent|''
dedent|''
name|'class'
name|'VlanNetworkTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VlanNetworkTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'='
name|'network_manager'
op|'.'
name|'VlanManager'
op|'('
name|'host'
op|'='
name|'HOST'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|'='
name|'db'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'testuser'"
op|','
string|"'testproject'"
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vpn_allocate_fixed_ip
dedent|''
name|'def'
name|'test_vpn_allocate_fixed_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'fixed_ip_associate'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'fixed_ip_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
nl|'\n'
string|"'virtual_interface_get_by_instance_and_network'"
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_associate'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'reserved'
op|'='
name|'True'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'192.168.0.1'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_update'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'virtual_interface_get_by_instance_and_network'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'id'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'network'
op|'='
name|'dict'
op|'('
name|'networks'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'network'
op|'['
string|"'vpn_private_address'"
op|']'
op|'='
string|"'192.168.0.2'"
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'allocate_fixed_ip'
op|'('
name|'None'
op|','
number|'0'
op|','
name|'network'
op|','
name|'vpn'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vpn_allocate_fixed_ip_no_network_id
dedent|''
name|'def'
name|'test_vpn_allocate_fixed_ip_no_network_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'network'
op|'='
name|'dict'
op|'('
name|'networks'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'network'
op|'['
string|"'vpn_private_address'"
op|']'
op|'='
string|"'192.168.0.2'"
newline|'\n'
name|'network'
op|'['
string|"'id'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'context_admin'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'testuser'"
op|','
string|"'testproject'"
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FixedIpNotFoundForNetwork'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'allocate_fixed_ip'
op|','
nl|'\n'
name|'context_admin'
op|','
nl|'\n'
number|'0'
op|','
nl|'\n'
name|'network'
op|','
nl|'\n'
name|'vpn'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_allocate_fixed_ip
dedent|''
name|'def'
name|'test_allocate_fixed_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'fixed_ip_associate_pool'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'fixed_ip_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
nl|'\n'
string|"'virtual_interface_get_by_instance_and_network'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get'"
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'security_groups'"
op|':'
nl|'\n'
op|'['
op|'{'
string|"'id'"
op|':'
number|'0'
op|'}'
op|']'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_associate_pool'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'192.168.0.1'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_update'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'virtual_interface_get_by_instance_and_network'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'id'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'network'
op|'='
name|'dict'
op|'('
name|'networks'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'network'
op|'['
string|"'vpn_private_address'"
op|']'
op|'='
string|"'192.168.0.2'"
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'allocate_fixed_ip'
op|'('
name|'self'
op|'.'
name|'context'
op|','
number|'0'
op|','
name|'network'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_networks_too_big
dedent|''
name|'def'
name|'test_create_networks_too_big'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'self'
op|'.'
name|'network'
op|'.'
name|'create_networks'
op|','
name|'None'
op|','
nl|'\n'
name|'num_networks'
op|'='
number|'4094'
op|','
name|'vlan_start'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_networks_too_many
dedent|''
name|'def'
name|'test_create_networks_too_many'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'self'
op|'.'
name|'network'
op|'.'
name|'create_networks'
op|','
name|'None'
op|','
nl|'\n'
name|'num_networks'
op|'='
number|'100'
op|','
name|'vlan_start'
op|'='
number|'1'
op|','
nl|'\n'
name|'cidr'
op|'='
string|"'192.168.0.1/24'"
op|','
name|'network_size'
op|'='
number|'100'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_networks
dedent|''
name|'def'
name|'test_validate_networks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|network_get
indent|'        '
name|'def'
name|'network_get'
op|'('
name|'_context'
op|','
name|'network_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'networks'
op|'['
name|'network_id'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'network_get'"
op|','
name|'network_get'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'network_get_all_by_uuids'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|'"fixed_ip_get_by_address"'
op|')'
newline|'\n'
nl|'\n'
name|'requested_networks'
op|'='
op|'['
op|'('
string|'"bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"'
op|','
nl|'\n'
string|'"192.168.1.100"'
op|')'
op|']'
newline|'\n'
name|'db'
op|'.'
name|'network_get_all_by_uuids'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'networks'
op|')'
newline|'\n'
nl|'\n'
name|'fixed_ips'
op|'['
number|'1'
op|']'
op|'['
string|"'network_id'"
op|']'
op|'='
name|'networks'
op|'['
number|'1'
op|']'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'fixed_ips'
op|'['
number|'1'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fixed_ips'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'validate_networks'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'requested_networks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_networks_none_requested_networks
dedent|''
name|'def'
name|'test_validate_networks_none_requested_networks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'network'
op|'.'
name|'validate_networks'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_networks_empty_requested_networks
dedent|''
name|'def'
name|'test_validate_networks_empty_requested_networks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requested_networks'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'validate_networks'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'requested_networks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_networks_invalid_fixed_ip
dedent|''
name|'def'
name|'test_validate_networks_invalid_fixed_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'network_get_all_by_uuids'"
op|')'
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'('
number|'1'
op|','
string|'"192.168.0.100.1"'
op|')'
op|']'
newline|'\n'
name|'db'
op|'.'
name|'network_get_all_by_uuids'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FixedIpInvalid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'validate_networks'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'requested_networks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_networks_empty_fixed_ip
dedent|''
name|'def'
name|'test_validate_networks_empty_fixed_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'network_get_all_by_uuids'"
op|')'
newline|'\n'
nl|'\n'
name|'requested_networks'
op|'='
op|'['
op|'('
number|'1'
op|','
string|'""'
op|')'
op|']'
newline|'\n'
name|'db'
op|'.'
name|'network_get_all_by_uuids'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FixedIpInvalid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'validate_networks'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'requested_networks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_networks_none_fixed_ip
dedent|''
name|'def'
name|'test_validate_networks_none_fixed_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'network_get_all_by_uuids'"
op|')'
newline|'\n'
nl|'\n'
name|'requested_networks'
op|'='
op|'['
op|'('
number|'1'
op|','
name|'None'
op|')'
op|']'
newline|'\n'
name|'db'
op|'.'
name|'network_get_all_by_uuids'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'validate_networks'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'requested_networks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ip_owned_by_project
dedent|''
name|'def'
name|'test_floating_ip_owned_by_project'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'testuser'"
op|','
string|"'testproject'"
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
comment|'# raises because floating_ip project_id is None'
nl|'\n'
name|'floating_ip'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'10.0.0.1'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'None'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'_floating_ip_owned_by_project'
op|','
nl|'\n'
name|'ctxt'
op|','
nl|'\n'
name|'floating_ip'
op|')'
newline|'\n'
nl|'\n'
comment|'# raises because floating_ip project_id is not equal to ctxt project_id'
nl|'\n'
name|'floating_ip'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'10.0.0.1'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'ctxt'
op|'.'
name|'project_id'
op|'+'
string|"'1'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'_floating_ip_owned_by_project'
op|','
nl|'\n'
name|'ctxt'
op|','
nl|'\n'
name|'floating_ip'
op|')'
newline|'\n'
nl|'\n'
comment|'# does not raise (floating ip is owned by ctxt project)'
nl|'\n'
name|'floating_ip'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'10.0.0.1'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'ctxt'
op|'.'
name|'project_id'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'_floating_ip_owned_by_project'
op|'('
name|'ctxt'
op|','
name|'floating_ip'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_allocate_floating_ip
dedent|''
name|'def'
name|'test_allocate_floating_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'testuser'"
op|','
string|"'testproject'"
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake1
name|'def'
name|'fake1'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'address'"
op|':'
string|"'10.0.0.1'"
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake2
dedent|''
name|'def'
name|'fake2'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'25'
newline|'\n'
nl|'\n'
DECL|function|fake3
dedent|''
name|'def'
name|'fake3'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|','
string|"'floating_ip_allocate_address'"
op|','
name|'fake1'
op|')'
newline|'\n'
nl|'\n'
comment|'# this time should raise'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|','
string|"'floating_ip_count_by_project'"
op|','
name|'fake2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'QuotaError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'allocate_floating_ip'
op|','
nl|'\n'
name|'ctxt'
op|','
nl|'\n'
name|'ctxt'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
comment|'# this time should not'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|','
string|"'floating_ip_count_by_project'"
op|','
name|'fake3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'allocate_floating_ip'
op|'('
name|'ctxt'
op|','
name|'ctxt'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_deallocate_floating_ip
dedent|''
name|'def'
name|'test_deallocate_floating_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'testuser'"
op|','
string|"'testproject'"
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake1
name|'def'
name|'fake1'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake2
dedent|''
name|'def'
name|'fake2'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'address'"
op|':'
string|"'10.0.0.1'"
op|','
string|"'fixed_ip_id'"
op|':'
number|'1'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake3
dedent|''
name|'def'
name|'fake3'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'address'"
op|':'
string|"'10.0.0.1'"
op|','
string|"'fixed_ip_id'"
op|':'
name|'None'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|','
string|"'floating_ip_deallocate'"
op|','
name|'fake1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|','
string|"'_floating_ip_owned_by_project'"
op|','
name|'fake1'
op|')'
newline|'\n'
nl|'\n'
comment|'# this time should raise because floating ip is associated to fixed_ip'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|','
string|"'floating_ip_get_by_address'"
op|','
name|'fake2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FloatingIpAssociated'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'deallocate_floating_ip'
op|','
nl|'\n'
name|'ctxt'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# this time should not raise'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|','
string|"'floating_ip_get_by_address'"
op|','
name|'fake3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'deallocate_floating_ip'
op|'('
name|'ctxt'
op|','
name|'ctxt'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_associate_floating_ip
dedent|''
name|'def'
name|'test_associate_floating_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'testuser'"
op|','
string|"'testproject'"
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake1
name|'def'
name|'fake1'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
comment|"# floating ip that's already associated"
nl|'\n'
DECL|function|fake2
dedent|''
name|'def'
name|'fake2'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'address'"
op|':'
string|"'10.0.0.1'"
op|','
nl|'\n'
string|"'pool'"
op|':'
string|"'nova'"
op|','
nl|'\n'
string|"'interface'"
op|':'
string|"'eth0'"
op|','
nl|'\n'
string|"'fixed_ip_id'"
op|':'
number|'1'
op|'}'
newline|'\n'
nl|'\n'
comment|"# floating ip that isn't associated"
nl|'\n'
DECL|function|fake3
dedent|''
name|'def'
name|'fake3'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'address'"
op|':'
string|"'10.0.0.1'"
op|','
nl|'\n'
string|"'pool'"
op|':'
string|"'nova'"
op|','
nl|'\n'
string|"'interface'"
op|':'
string|"'eth0'"
op|','
nl|'\n'
string|"'fixed_ip_id'"
op|':'
name|'None'
op|'}'
newline|'\n'
nl|'\n'
comment|'# fixed ip with remote host'
nl|'\n'
DECL|function|fake4
dedent|''
name|'def'
name|'fake4'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'address'"
op|':'
string|"'10.0.0.1'"
op|','
nl|'\n'
string|"'pool'"
op|':'
string|"'nova'"
op|','
nl|'\n'
string|"'interface'"
op|':'
string|"'eth0'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
string|"'blah'"
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake4_network
dedent|''
name|'def'
name|'fake4_network'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'multi_host'"
op|':'
name|'False'
op|','
string|"'host'"
op|':'
string|"'jibberjabber'"
op|'}'
newline|'\n'
nl|'\n'
comment|'# fixed ip with local host'
nl|'\n'
DECL|function|fake5
dedent|''
name|'def'
name|'fake5'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'address'"
op|':'
string|"'10.0.0.1'"
op|','
nl|'\n'
string|"'pool'"
op|':'
string|"'nova'"
op|','
nl|'\n'
string|"'interface'"
op|':'
string|"'eth0'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
string|"'blahblah'"
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake5_network
dedent|''
name|'def'
name|'fake5_network'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'multi_host'"
op|':'
name|'False'
op|','
string|"'host'"
op|':'
string|"'testhost'"
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake6
dedent|''
name|'def'
name|'fake6'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'local'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake7
dedent|''
name|'def'
name|'fake7'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'local'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|function|fake8
dedent|''
name|'def'
name|'fake8'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ProcessExecutionError'
op|'('
string|"''"
op|','
nl|'\n'
string|'\'Cannot find device "em0"\\n\''
op|')'
newline|'\n'
nl|'\n'
comment|"# raises because interface doesn't exist"
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|','
nl|'\n'
string|"'floating_ip_fixed_ip_associate'"
op|','
nl|'\n'
name|'fake1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|','
string|"'floating_ip_disassociate'"
op|','
name|'fake1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|'.'
name|'driver'
op|','
string|"'bind_floating_ip'"
op|','
name|'fake8'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NoFloatingIpInterface'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'_associate_floating_ip'
op|','
nl|'\n'
name|'ctxt'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|','
string|"'_floating_ip_owned_by_project'"
op|','
name|'fake1'
op|')'
newline|'\n'
nl|'\n'
comment|'# raises because floating_ip is already associated to a fixed_ip'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|','
string|"'floating_ip_get_by_address'"
op|','
name|'fake2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FloatingIpAssociated'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'associate_floating_ip'
op|','
nl|'\n'
name|'ctxt'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|','
string|"'floating_ip_get_by_address'"
op|','
name|'fake3'
op|')'
newline|'\n'
nl|'\n'
comment|'# does not raise and makes call remotely'
nl|'\n'
name|'self'
op|'.'
name|'local'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|','
string|"'fixed_ip_get_by_address'"
op|','
name|'fake4'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|','
string|"'network_get'"
op|','
name|'fake4_network'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'rpc'
op|','
string|"'cast'"
op|','
name|'fake6'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'associate_floating_ip'
op|'('
name|'ctxt'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'local'
op|')'
newline|'\n'
nl|'\n'
comment|'# does not raise and makes call locally'
nl|'\n'
name|'self'
op|'.'
name|'local'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|','
string|"'fixed_ip_get_by_address'"
op|','
name|'fake5'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|','
string|"'network_get'"
op|','
name|'fake5_network'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|','
string|"'_associate_floating_ip'"
op|','
name|'fake7'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'associate_floating_ip'
op|'('
name|'ctxt'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'local'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disassociate_floating_ip
dedent|''
name|'def'
name|'test_disassociate_floating_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'testuser'"
op|','
string|"'testproject'"
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake1
name|'def'
name|'fake1'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
comment|"# floating ip that isn't associated"
nl|'\n'
DECL|function|fake2
dedent|''
name|'def'
name|'fake2'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'address'"
op|':'
string|"'10.0.0.1'"
op|','
nl|'\n'
string|"'pool'"
op|':'
string|"'nova'"
op|','
nl|'\n'
string|"'interface'"
op|':'
string|"'eth0'"
op|','
nl|'\n'
string|"'fixed_ip_id'"
op|':'
name|'None'
op|'}'
newline|'\n'
nl|'\n'
comment|'# floating ip that is associated'
nl|'\n'
DECL|function|fake3
dedent|''
name|'def'
name|'fake3'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'address'"
op|':'
string|"'10.0.0.1'"
op|','
nl|'\n'
string|"'pool'"
op|':'
string|"'nova'"
op|','
nl|'\n'
string|"'interface'"
op|':'
string|"'eth0'"
op|','
nl|'\n'
string|"'fixed_ip_id'"
op|':'
number|'1'
op|'}'
newline|'\n'
nl|'\n'
comment|'# fixed ip with remote host'
nl|'\n'
DECL|function|fake4
dedent|''
name|'def'
name|'fake4'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'address'"
op|':'
string|"'10.0.0.1'"
op|','
nl|'\n'
string|"'pool'"
op|':'
string|"'nova'"
op|','
nl|'\n'
string|"'interface'"
op|':'
string|"'eth0'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
string|"'blah'"
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake4_network
dedent|''
name|'def'
name|'fake4_network'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'multi_host'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'jibberjabber'"
op|'}'
newline|'\n'
nl|'\n'
comment|'# fixed ip with local host'
nl|'\n'
DECL|function|fake5
dedent|''
name|'def'
name|'fake5'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'address'"
op|':'
string|"'10.0.0.1'"
op|','
nl|'\n'
string|"'pool'"
op|':'
string|"'nova'"
op|','
nl|'\n'
string|"'interface'"
op|':'
string|"'eth0'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
string|"'blahblah'"
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake5_network
dedent|''
name|'def'
name|'fake5_network'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'multi_host'"
op|':'
name|'False'
op|','
string|"'host'"
op|':'
string|"'testhost'"
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake6
dedent|''
name|'def'
name|'fake6'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'local'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake7
dedent|''
name|'def'
name|'fake7'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'local'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|','
string|"'_floating_ip_owned_by_project'"
op|','
name|'fake1'
op|')'
newline|'\n'
nl|'\n'
comment|'# raises because floating_ip is not associated to a fixed_ip'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|','
string|"'floating_ip_get_by_address'"
op|','
name|'fake2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FloatingIpNotAssociated'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'disassociate_floating_ip'
op|','
nl|'\n'
name|'ctxt'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|','
string|"'floating_ip_get_by_address'"
op|','
name|'fake3'
op|')'
newline|'\n'
nl|'\n'
comment|'# does not raise and makes call remotely'
nl|'\n'
name|'self'
op|'.'
name|'local'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|','
string|"'fixed_ip_get'"
op|','
name|'fake4'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|','
string|"'network_get'"
op|','
name|'fake4_network'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'rpc'
op|','
string|"'cast'"
op|','
name|'fake6'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'disassociate_floating_ip'
op|'('
name|'ctxt'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'local'
op|')'
newline|'\n'
nl|'\n'
comment|'# does not raise and makes call locally'
nl|'\n'
name|'self'
op|'.'
name|'local'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|','
string|"'fixed_ip_get'"
op|','
name|'fake5'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|','
string|"'network_get'"
op|','
name|'fake5_network'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|','
string|"'_disassociate_floating_ip'"
op|','
name|'fake7'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'disassociate_floating_ip'
op|'('
name|'ctxt'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'local'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_fixed_ip_instance_without_vpn_requested_networks
dedent|''
name|'def'
name|'test_add_fixed_ip_instance_without_vpn_requested_networks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'network_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'fixed_ip_associate_pool'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
nl|'\n'
string|"'virtual_interface_get_by_instance_and_network'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'fixed_ip_update'"
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'fixed_ip_update'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'virtual_interface_get_by_instance_and_network'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'id'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'security_groups'"
op|':'
nl|'\n'
op|'['
op|'{'
string|"'id'"
op|':'
number|'0'
op|'}'
op|']'
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|"''"
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_associate_pool'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'192.168.0.101'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'network_get'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'networks'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'add_fixed_ip_to_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
number|'1'
op|','
name|'HOST'
op|','
nl|'\n'
name|'networks'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ip_association_and_allocation_of_other_project
dedent|''
name|'def'
name|'test_ip_association_and_allocation_of_other_project'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure that we cannot deallocaate or disassociate\n        a public ip of other project"""'
newline|'\n'
nl|'\n'
DECL|function|network_get
name|'def'
name|'network_get'
op|'('
name|'_context'
op|','
name|'network_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'networks'
op|'['
name|'network_id'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'network_get'"
op|','
name|'network_get'
op|')'
newline|'\n'
nl|'\n'
name|'context1'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'user'"
op|','
string|"'project1'"
op|')'
newline|'\n'
name|'context2'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'user'"
op|','
string|"'project2'"
op|')'
newline|'\n'
nl|'\n'
name|'address'
op|'='
string|"'1.2.3.4'"
newline|'\n'
name|'float_addr'
op|'='
name|'db'
op|'.'
name|'floating_ip_create'
op|'('
name|'context1'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
name|'address'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'context1'
op|'.'
name|'project_id'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'context1'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'fix_addr'
op|'='
name|'db'
op|'.'
name|'fixed_ip_associate_pool'
op|'('
name|'context1'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
nl|'\n'
number|'1'
op|','
name|'instance'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Associate the IP with non-admin user context'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'associate_floating_ip'
op|','
nl|'\n'
name|'context2'
op|','
nl|'\n'
name|'float_addr'
op|','
nl|'\n'
name|'fix_addr'
op|')'
newline|'\n'
nl|'\n'
comment|'# Deallocate address from other project'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'deallocate_floating_ip'
op|','
nl|'\n'
name|'context2'
op|','
nl|'\n'
name|'float_addr'
op|')'
newline|'\n'
nl|'\n'
comment|'# Now Associates the address to the actual project'
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'associate_floating_ip'
op|'('
name|'context1'
op|','
name|'float_addr'
op|','
name|'fix_addr'
op|')'
newline|'\n'
nl|'\n'
comment|'# Now try dis-associating from other project'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'disassociate_floating_ip'
op|','
nl|'\n'
name|'context2'
op|','
nl|'\n'
name|'float_addr'
op|')'
newline|'\n'
nl|'\n'
comment|'# Clean up the ip addresses'
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'disassociate_floating_ip'
op|'('
name|'context1'
op|','
name|'float_addr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'deallocate_floating_ip'
op|'('
name|'context1'
op|','
name|'float_addr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'deallocate_fixed_ip'
op|'('
name|'context1'
op|','
name|'fix_addr'
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_destroy'
op|'('
name|'context1'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
name|'float_addr'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'fixed_ip_disassociate'
op|'('
name|'context1'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
name|'fix_addr'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_deallocate_fixed_no_vif
dedent|''
name|'def'
name|'test_deallocate_fixed_no_vif'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Verify that deallocate doesn\'t raise when no vif is returned.\n\n        Ensures https://bugs.launchpad.net/nova/+bug/968457 doesn\'t return"""'
newline|'\n'
nl|'\n'
DECL|function|network_get
name|'def'
name|'network_get'
op|'('
name|'_context'
op|','
name|'network_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'networks'
op|'['
name|'network_id'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'network_get'"
op|','
name|'network_get'
op|')'
newline|'\n'
nl|'\n'
DECL|function|vif_get
name|'def'
name|'vif_get'
op|'('
name|'_context'
op|','
name|'_instance_id'
op|','
name|'_network_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'virtual_interface_get_by_instance_and_network'"
op|','
nl|'\n'
name|'vif_get'
op|')'
newline|'\n'
name|'context1'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'user'"
op|','
string|"'project1'"
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'context1'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'fix_addr'
op|'='
name|'db'
op|'.'
name|'fixed_ip_associate_pool'
op|'('
name|'context1'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
nl|'\n'
number|'1'
op|','
name|'instance'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'force_dhcp_release'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'deallocate_fixed_ip'
op|'('
name|'context1'
op|','
name|'fix_addr'
op|','
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CommonNetworkTestCase
dedent|''
dedent|''
name|'class'
name|'CommonNetworkTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CommonNetworkTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|fake_create_fixed_ips
dedent|''
name|'def'
name|'fake_create_fixed_ips'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'network_id'
op|','
name|'fixed_cidr'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|test_remove_fixed_ip_from_instance
dedent|''
name|'def'
name|'test_remove_fixed_ip_from_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'remove_fixed_ip_from_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
number|'99'
op|','
name|'HOST'
op|','
nl|'\n'
string|"'10.0.0.1'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'manager'
op|'.'
name|'deallocate_called'
op|','
string|"'10.0.0.1'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_remove_fixed_ip_from_instance_bad_input
dedent|''
name|'def'
name|'test_remove_fixed_ip_from_instance_bad_input'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FixedIpNotFoundForSpecificInstance'
op|','
nl|'\n'
name|'manager'
op|'.'
name|'remove_fixed_ip_from_instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
number|'99'
op|','
name|'HOST'
op|','
string|"'bad input'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_cidrs
dedent|''
name|'def'
name|'test_validate_cidrs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'nets'
op|'='
name|'manager'
op|'.'
name|'create_networks'
op|'('
name|'None'
op|','
string|"'fake'"
op|','
string|"'192.168.0.0/24'"
op|','
nl|'\n'
name|'False'
op|','
number|'1'
op|','
number|'256'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'nets'
op|')'
op|')'
newline|'\n'
name|'cidrs'
op|'='
op|'['
name|'str'
op|'('
name|'net'
op|'['
string|"'cidr'"
op|']'
op|')'
name|'for'
name|'net'
name|'in'
name|'nets'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'192.168.0.0/24'"
name|'in'
name|'cidrs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_cidrs_split_exact_in_half
dedent|''
name|'def'
name|'test_validate_cidrs_split_exact_in_half'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'nets'
op|'='
name|'manager'
op|'.'
name|'create_networks'
op|'('
name|'None'
op|','
string|"'fake'"
op|','
string|"'192.168.0.0/24'"
op|','
nl|'\n'
name|'False'
op|','
number|'2'
op|','
number|'128'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'nets'
op|')'
op|')'
newline|'\n'
name|'cidrs'
op|'='
op|'['
name|'str'
op|'('
name|'net'
op|'['
string|"'cidr'"
op|']'
op|')'
name|'for'
name|'net'
name|'in'
name|'nets'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'192.168.0.0/25'"
name|'in'
name|'cidrs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'192.168.0.128/25'"
name|'in'
name|'cidrs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_cidrs_split_cidr_in_use_middle_of_range
dedent|''
name|'def'
name|'test_validate_cidrs_split_cidr_in_use_middle_of_range'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'manager'
op|'.'
name|'db'
op|','
string|"'network_get_all'"
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'db'
op|'.'
name|'network_get_all'
op|'('
name|'ctxt'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'192.168.2.0/24'"
op|'}'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'nets'
op|'='
name|'manager'
op|'.'
name|'create_networks'
op|'('
name|'None'
op|','
string|"'fake'"
op|','
string|"'192.168.0.0/16'"
op|','
nl|'\n'
name|'False'
op|','
number|'4'
op|','
number|'256'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4'
op|','
name|'len'
op|'('
name|'nets'
op|')'
op|')'
newline|'\n'
name|'cidrs'
op|'='
op|'['
name|'str'
op|'('
name|'net'
op|'['
string|"'cidr'"
op|']'
op|')'
name|'for'
name|'net'
name|'in'
name|'nets'
op|']'
newline|'\n'
name|'exp_cidrs'
op|'='
op|'['
string|"'192.168.0.0/24'"
op|','
string|"'192.168.1.0/24'"
op|','
string|"'192.168.3.0/24'"
op|','
nl|'\n'
string|"'192.168.4.0/24'"
op|']'
newline|'\n'
name|'for'
name|'exp_cidr'
name|'in'
name|'exp_cidrs'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'exp_cidr'
name|'in'
name|'cidrs'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
string|"'192.168.2.0/24'"
name|'in'
name|'cidrs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_cidrs_smaller_subnet_in_use
dedent|''
name|'def'
name|'test_validate_cidrs_smaller_subnet_in_use'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'manager'
op|'.'
name|'db'
op|','
string|"'network_get_all'"
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'db'
op|'.'
name|'network_get_all'
op|'('
name|'ctxt'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'192.168.2.9/25'"
op|'}'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
comment|'# ValueError: requested cidr (192.168.2.0/24) conflicts with'
nl|'\n'
comment|'#             existing smaller cidr'
nl|'\n'
name|'args'
op|'='
op|'('
name|'None'
op|','
string|"'fake'"
op|','
string|"'192.168.2.0/24'"
op|','
name|'False'
op|','
number|'1'
op|','
number|'256'
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'manager'
op|'.'
name|'create_networks'
op|','
op|'*'
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_cidrs_split_smaller_cidr_in_use
dedent|''
name|'def'
name|'test_validate_cidrs_split_smaller_cidr_in_use'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'manager'
op|'.'
name|'db'
op|','
string|"'network_get_all'"
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'db'
op|'.'
name|'network_get_all'
op|'('
name|'ctxt'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'192.168.2.0/25'"
op|'}'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'nets'
op|'='
name|'manager'
op|'.'
name|'create_networks'
op|'('
name|'None'
op|','
string|"'fake'"
op|','
string|"'192.168.0.0/16'"
op|','
nl|'\n'
name|'False'
op|','
number|'4'
op|','
number|'256'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4'
op|','
name|'len'
op|'('
name|'nets'
op|')'
op|')'
newline|'\n'
name|'cidrs'
op|'='
op|'['
name|'str'
op|'('
name|'net'
op|'['
string|"'cidr'"
op|']'
op|')'
name|'for'
name|'net'
name|'in'
name|'nets'
op|']'
newline|'\n'
name|'exp_cidrs'
op|'='
op|'['
string|"'192.168.0.0/24'"
op|','
string|"'192.168.1.0/24'"
op|','
string|"'192.168.3.0/24'"
op|','
nl|'\n'
string|"'192.168.4.0/24'"
op|']'
newline|'\n'
name|'for'
name|'exp_cidr'
name|'in'
name|'exp_cidrs'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'exp_cidr'
name|'in'
name|'cidrs'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
string|"'192.168.2.0/24'"
name|'in'
name|'cidrs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_cidrs_split_smaller_cidr_in_use2
dedent|''
name|'def'
name|'test_validate_cidrs_split_smaller_cidr_in_use2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'manager'
op|'.'
name|'db'
op|','
string|"'network_get_all'"
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'db'
op|'.'
name|'network_get_all'
op|'('
name|'ctxt'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'192.168.2.9/29'"
op|'}'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'nets'
op|'='
name|'manager'
op|'.'
name|'create_networks'
op|'('
name|'None'
op|','
string|"'fake'"
op|','
string|"'192.168.2.0/24'"
op|','
nl|'\n'
name|'False'
op|','
number|'3'
op|','
number|'32'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'nets'
op|')'
op|')'
newline|'\n'
name|'cidrs'
op|'='
op|'['
name|'str'
op|'('
name|'net'
op|'['
string|"'cidr'"
op|']'
op|')'
name|'for'
name|'net'
name|'in'
name|'nets'
op|']'
newline|'\n'
name|'exp_cidrs'
op|'='
op|'['
string|"'192.168.2.32/27'"
op|','
string|"'192.168.2.64/27'"
op|','
string|"'192.168.2.96/27'"
op|']'
newline|'\n'
name|'for'
name|'exp_cidr'
name|'in'
name|'exp_cidrs'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'exp_cidr'
name|'in'
name|'cidrs'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
string|"'192.168.2.0/27'"
name|'in'
name|'cidrs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_cidrs_split_all_in_use
dedent|''
name|'def'
name|'test_validate_cidrs_split_all_in_use'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'manager'
op|'.'
name|'db'
op|','
string|"'network_get_all'"
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
newline|'\n'
name|'in_use'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'cidr'"
op|':'
string|"'192.168.2.9/29'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
string|"'cidr'"
op|':'
string|"'192.168.2.64/26'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'3'
op|','
string|"'cidr'"
op|':'
string|"'192.168.2.128/26'"
op|'}'
op|']'
newline|'\n'
name|'manager'
op|'.'
name|'db'
op|'.'
name|'network_get_all'
op|'('
name|'ctxt'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'in_use'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'args'
op|'='
op|'('
name|'None'
op|','
string|"'fake'"
op|','
string|"'192.168.2.0/24'"
op|','
name|'False'
op|','
number|'3'
op|','
number|'64'
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
comment|'# ValueError: Not enough subnets avail to satisfy requested num_'
nl|'\n'
comment|'#             networks - some subnets in requested range already'
nl|'\n'
comment|'#             in use'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'manager'
op|'.'
name|'create_networks'
op|','
op|'*'
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_cidrs_one_in_use
dedent|''
name|'def'
name|'test_validate_cidrs_one_in_use'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'args'
op|'='
op|'('
name|'None'
op|','
string|"'fake'"
op|','
string|"'192.168.0.0/24'"
op|','
name|'False'
op|','
number|'2'
op|','
number|'256'
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
comment|'# ValueError: network_size * num_networks exceeds cidr size'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'manager'
op|'.'
name|'create_networks'
op|','
op|'*'
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_cidrs_already_used
dedent|''
name|'def'
name|'test_validate_cidrs_already_used'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'manager'
op|'.'
name|'db'
op|','
string|"'network_get_all'"
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'db'
op|'.'
name|'network_get_all'
op|'('
name|'ctxt'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'192.168.0.0/24'"
op|'}'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
comment|'# ValueError: cidr already in use'
nl|'\n'
name|'args'
op|'='
op|'('
name|'None'
op|','
string|"'fake'"
op|','
string|"'192.168.0.0/24'"
op|','
name|'False'
op|','
number|'1'
op|','
number|'256'
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'manager'
op|'.'
name|'create_networks'
op|','
op|'*'
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_cidrs_too_many
dedent|''
name|'def'
name|'test_validate_cidrs_too_many'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'args'
op|'='
op|'('
name|'None'
op|','
string|"'fake'"
op|','
string|"'192.168.0.0/24'"
op|','
name|'False'
op|','
number|'200'
op|','
number|'256'
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
comment|'# ValueError: Not enough subnets avail to satisfy requested'
nl|'\n'
comment|'#             num_networks'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'manager'
op|'.'
name|'create_networks'
op|','
op|'*'
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_cidrs_split_partial
dedent|''
name|'def'
name|'test_validate_cidrs_split_partial'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'nets'
op|'='
name|'manager'
op|'.'
name|'create_networks'
op|'('
name|'None'
op|','
string|"'fake'"
op|','
string|"'192.168.0.0/16'"
op|','
nl|'\n'
name|'False'
op|','
number|'2'
op|','
number|'256'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|')'
newline|'\n'
name|'returned_cidrs'
op|'='
op|'['
name|'str'
op|'('
name|'net'
op|'['
string|"'cidr'"
op|']'
op|')'
name|'for'
name|'net'
name|'in'
name|'nets'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'192.168.0.0/24'"
name|'in'
name|'returned_cidrs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'192.168.1.0/24'"
name|'in'
name|'returned_cidrs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_cidrs_conflict_existing_supernet
dedent|''
name|'def'
name|'test_validate_cidrs_conflict_existing_supernet'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'manager'
op|'.'
name|'db'
op|','
string|"'network_get_all'"
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
newline|'\n'
name|'fakecidr'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'cidr'"
op|':'
string|"'192.168.0.0/8'"
op|'}'
op|']'
newline|'\n'
name|'manager'
op|'.'
name|'db'
op|'.'
name|'network_get_all'
op|'('
name|'ctxt'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fakecidr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'args'
op|'='
op|'('
name|'None'
op|','
string|"'fake'"
op|','
string|"'192.168.0.0/24'"
op|','
name|'False'
op|','
number|'1'
op|','
number|'256'
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
comment|'# ValueError: requested cidr (192.168.0.0/24) conflicts'
nl|'\n'
comment|'#             with existing supernet'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'manager'
op|'.'
name|'create_networks'
op|','
op|'*'
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_networks
dedent|''
name|'def'
name|'test_create_networks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cidr'
op|'='
string|"'192.168.0.0/24'"
newline|'\n'
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'manager'
op|','
string|"'_create_fixed_ips'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_create_fixed_ips'
op|')'
newline|'\n'
name|'args'
op|'='
op|'['
name|'None'
op|','
string|"'foo'"
op|','
name|'cidr'
op|','
name|'None'
op|','
number|'1'
op|','
number|'256'
op|','
string|"'fd00::/48'"
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|','
name|'None'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'manager'
op|'.'
name|'create_networks'
op|'('
op|'*'
name|'args'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_networks_cidr_already_used
dedent|''
name|'def'
name|'test_create_networks_cidr_already_used'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'manager'
op|'.'
name|'db'
op|','
string|"'network_get_all'"
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
newline|'\n'
name|'fakecidr'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'cidr'"
op|':'
string|"'192.168.0.0/24'"
op|'}'
op|']'
newline|'\n'
name|'manager'
op|'.'
name|'db'
op|'.'
name|'network_get_all'
op|'('
name|'ctxt'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fakecidr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'args'
op|'='
op|'['
name|'None'
op|','
string|"'foo'"
op|','
string|"'192.168.0.0/24'"
op|','
name|'None'
op|','
number|'1'
op|','
number|'256'
op|','
nl|'\n'
string|"'fd00::/48'"
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'manager'
op|'.'
name|'create_networks'
op|','
op|'*'
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_networks_many
dedent|''
name|'def'
name|'test_create_networks_many'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cidr'
op|'='
string|"'192.168.0.0/16'"
newline|'\n'
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'manager'
op|','
string|"'_create_fixed_ips'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_create_fixed_ips'
op|')'
newline|'\n'
name|'args'
op|'='
op|'['
name|'None'
op|','
string|"'foo'"
op|','
name|'cidr'
op|','
name|'None'
op|','
number|'10'
op|','
number|'256'
op|','
string|"'fd00::/48'"
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|','
name|'None'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'manager'
op|'.'
name|'create_networks'
op|'('
op|'*'
name|'args'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instance_uuids_by_ip_regex
dedent|''
name|'def'
name|'test_get_instance_uuids_by_ip_regex'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'_vifs'
op|'='
name|'manager'
op|'.'
name|'db'
op|'.'
name|'virtual_interface_get_all'
op|'('
name|'None'
op|')'
newline|'\n'
name|'fake_context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'user'"
op|','
string|"'project'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Greedy get eveything'
nl|'\n'
name|'res'
op|'='
name|'manager'
op|'.'
name|'get_instance_uuids_by_ip_filter'
op|'('
name|'fake_context'
op|','
nl|'\n'
op|'{'
string|"'ip'"
op|':'
string|"'.*'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'res'
op|')'
op|','
name|'len'
op|'('
name|'_vifs'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# Doesn't exist"
nl|'\n'
name|'res'
op|'='
name|'manager'
op|'.'
name|'get_instance_uuids_by_ip_filter'
op|'('
name|'fake_context'
op|','
nl|'\n'
op|'{'
string|"'ip'"
op|':'
string|"'10.0.0.1'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'res'
op|')'
newline|'\n'
nl|'\n'
comment|'# Get instance 1'
nl|'\n'
name|'res'
op|'='
name|'manager'
op|'.'
name|'get_instance_uuids_by_ip_filter'
op|'('
name|'fake_context'
op|','
nl|'\n'
op|'{'
string|"'ip'"
op|':'
string|"'172.16.0.2'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'res'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'['
number|'0'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|','
name|'_vifs'
op|'['
number|'1'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Get instance 2'
nl|'\n'
name|'res'
op|'='
name|'manager'
op|'.'
name|'get_instance_uuids_by_ip_filter'
op|'('
name|'fake_context'
op|','
nl|'\n'
op|'{'
string|"'ip'"
op|':'
string|"'173.16.0.2'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'res'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'['
number|'0'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|','
name|'_vifs'
op|'['
number|'2'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Get instance 0 and 1'
nl|'\n'
name|'res'
op|'='
name|'manager'
op|'.'
name|'get_instance_uuids_by_ip_filter'
op|'('
name|'fake_context'
op|','
nl|'\n'
op|'{'
string|"'ip'"
op|':'
string|"'172.16.0.*'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'res'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'['
number|'0'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|','
name|'_vifs'
op|'['
number|'0'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'['
number|'1'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|','
name|'_vifs'
op|'['
number|'1'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Get instance 1 and 2'
nl|'\n'
name|'res'
op|'='
name|'manager'
op|'.'
name|'get_instance_uuids_by_ip_filter'
op|'('
name|'fake_context'
op|','
nl|'\n'
op|'{'
string|"'ip'"
op|':'
string|"'17..16.0.2'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'res'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'['
number|'0'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|','
name|'_vifs'
op|'['
number|'1'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'['
number|'1'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|','
name|'_vifs'
op|'['
number|'2'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instance_uuids_by_ipv6_regex
dedent|''
name|'def'
name|'test_get_instance_uuids_by_ipv6_regex'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'_vifs'
op|'='
name|'manager'
op|'.'
name|'db'
op|'.'
name|'virtual_interface_get_all'
op|'('
name|'None'
op|')'
newline|'\n'
name|'fake_context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'user'"
op|','
string|"'project'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Greedy get eveything'
nl|'\n'
name|'res'
op|'='
name|'manager'
op|'.'
name|'get_instance_uuids_by_ip_filter'
op|'('
name|'fake_context'
op|','
nl|'\n'
op|'{'
string|"'ip6'"
op|':'
string|"'.*'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'res'
op|')'
op|','
name|'len'
op|'('
name|'_vifs'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# Doesn't exist"
nl|'\n'
name|'res'
op|'='
name|'manager'
op|'.'
name|'get_instance_uuids_by_ip_filter'
op|'('
name|'fake_context'
op|','
nl|'\n'
op|'{'
string|"'ip6'"
op|':'
string|"'.*1034.*'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'res'
op|')'
newline|'\n'
nl|'\n'
comment|'# Get instance 1'
nl|'\n'
name|'res'
op|'='
name|'manager'
op|'.'
name|'get_instance_uuids_by_ip_filter'
op|'('
name|'fake_context'
op|','
nl|'\n'
op|'{'
string|"'ip6'"
op|':'
string|"'2001:.*2'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'res'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'['
number|'0'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|','
name|'_vifs'
op|'['
number|'1'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Get instance 2'
nl|'\n'
name|'ip6'
op|'='
string|"'2001:db8:69:1f:dead:beff:feff:ef03'"
newline|'\n'
name|'res'
op|'='
name|'manager'
op|'.'
name|'get_instance_uuids_by_ip_filter'
op|'('
name|'fake_context'
op|','
nl|'\n'
op|'{'
string|"'ip6'"
op|':'
name|'ip6'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'res'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'['
number|'0'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|','
name|'_vifs'
op|'['
number|'2'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Get instance 0 and 1'
nl|'\n'
name|'res'
op|'='
name|'manager'
op|'.'
name|'get_instance_uuids_by_ip_filter'
op|'('
name|'fake_context'
op|','
nl|'\n'
op|'{'
string|"'ip6'"
op|':'
string|"'.*ef0[1,2]'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'res'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'['
number|'0'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|','
name|'_vifs'
op|'['
number|'0'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'['
number|'1'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|','
name|'_vifs'
op|'['
number|'1'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Get instance 1 and 2'
nl|'\n'
name|'ip6'
op|'='
string|"'2001:db8:69:1.:dead:beff:feff:ef0.'"
newline|'\n'
name|'res'
op|'='
name|'manager'
op|'.'
name|'get_instance_uuids_by_ip_filter'
op|'('
name|'fake_context'
op|','
nl|'\n'
op|'{'
string|"'ip6'"
op|':'
name|'ip6'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'res'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'['
number|'0'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|','
name|'_vifs'
op|'['
number|'1'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'['
number|'1'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|','
name|'_vifs'
op|'['
number|'2'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instance_uuids_by_ip
dedent|''
name|'def'
name|'test_get_instance_uuids_by_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'_vifs'
op|'='
name|'manager'
op|'.'
name|'db'
op|'.'
name|'virtual_interface_get_all'
op|'('
name|'None'
op|')'
newline|'\n'
name|'fake_context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'user'"
op|','
string|"'project'"
op|')'
newline|'\n'
nl|'\n'
comment|'# No regex for you!'
nl|'\n'
name|'res'
op|'='
name|'manager'
op|'.'
name|'get_instance_uuids_by_ip_filter'
op|'('
name|'fake_context'
op|','
nl|'\n'
op|'{'
string|"'fixed_ip'"
op|':'
string|"'.*'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'res'
op|')'
newline|'\n'
nl|'\n'
comment|"# Doesn't exist"
nl|'\n'
name|'ip'
op|'='
string|"'10.0.0.1'"
newline|'\n'
name|'res'
op|'='
name|'manager'
op|'.'
name|'get_instance_uuids_by_ip_filter'
op|'('
name|'fake_context'
op|','
nl|'\n'
op|'{'
string|"'fixed_ip'"
op|':'
name|'ip'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'res'
op|')'
newline|'\n'
nl|'\n'
comment|'# Get instance 1'
nl|'\n'
name|'ip'
op|'='
string|"'172.16.0.2'"
newline|'\n'
name|'res'
op|'='
name|'manager'
op|'.'
name|'get_instance_uuids_by_ip_filter'
op|'('
name|'fake_context'
op|','
nl|'\n'
op|'{'
string|"'fixed_ip'"
op|':'
name|'ip'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'res'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'['
number|'0'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|','
name|'_vifs'
op|'['
number|'1'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Get instance 2'
nl|'\n'
name|'ip'
op|'='
string|"'173.16.0.2'"
newline|'\n'
name|'res'
op|'='
name|'manager'
op|'.'
name|'get_instance_uuids_by_ip_filter'
op|'('
name|'fake_context'
op|','
nl|'\n'
op|'{'
string|"'fixed_ip'"
op|':'
name|'ip'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'res'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'['
number|'0'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|','
name|'_vifs'
op|'['
number|'2'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_network
dedent|''
name|'def'
name|'test_get_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'fake_context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'user'"
op|','
string|"'project'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'manager'
op|'.'
name|'db'
op|','
string|"'network_get_all_by_uuids'"
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'db'
op|'.'
name|'network_get_all_by_uuids'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'uuid'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'network'
op|'='
name|'manager'
op|'.'
name|'get_network'
op|'('
name|'fake_context'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'network'
op|'['
string|"'uuid'"
op|']'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_network_not_found
dedent|''
name|'def'
name|'test_get_network_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'fake_context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'user'"
op|','
string|"'project'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'manager'
op|'.'
name|'db'
op|','
string|"'network_get_all_by_uuids'"
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'db'
op|'.'
name|'network_get_all_by_uuids'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'uuid'
op|'='
string|"'eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee'"
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NetworkNotFound'
op|','
nl|'\n'
name|'manager'
op|'.'
name|'get_network'
op|','
name|'fake_context'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_networks
dedent|''
name|'def'
name|'test_get_all_networks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'fake_context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'user'"
op|','
string|"'project'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'manager'
op|'.'
name|'db'
op|','
string|"'network_get_all'"
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'db'
op|'.'
name|'network_get_all'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'output'
op|'='
name|'manager'
op|'.'
name|'get_all_networks'
op|'('
name|'fake_context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'networks'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'output'
op|'['
number|'0'
op|']'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'output'
op|'['
number|'1'
op|']'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
string|"'bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disassociate_network
dedent|''
name|'def'
name|'test_disassociate_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'fake_context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'user'"
op|','
string|"'project'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'manager'
op|'.'
name|'db'
op|','
string|"'network_get_all_by_uuids'"
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'db'
op|'.'
name|'network_get_all_by_uuids'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'uuid'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'manager'
op|'.'
name|'disassociate_network'
op|'('
name|'fake_context'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disassociate_network_not_found
dedent|''
name|'def'
name|'test_disassociate_network_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'fake_network'
op|'.'
name|'FakeNetworkManager'
op|'('
op|')'
newline|'\n'
name|'fake_context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'user'"
op|','
string|"'project'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'manager'
op|'.'
name|'db'
op|','
string|"'network_get_all_by_uuids'"
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'db'
op|'.'
name|'network_get_all_by_uuids'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'uuid'
op|'='
string|"'eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee'"
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NetworkNotFound'
op|','
nl|'\n'
name|'manager'
op|'.'
name|'disassociate_network'
op|','
name|'fake_context'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'class'
name|'TestRPCFixedManager'
op|'('
name|'network_manager'
op|'.'
name|'RPCAllocateFixedIP'
op|','
nl|'\n'
DECL|class|TestRPCFixedManager
name|'network_manager'
op|'.'
name|'NetworkManager'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Dummy manager that implements RPCAllocateFixedIP"""'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RPCAllocateTestCase
dedent|''
name|'class'
name|'RPCAllocateTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Tests nova.network.manager.RPCAllocateFixedIP"""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'RPCAllocateTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'rpc_fixed'
op|'='
name|'TestRPCFixedManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rpc_allocate
dedent|''
name|'def'
name|'test_rpc_allocate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test to verify bug 855030 doesn\'t resurface.\n\n        Mekes sure _rpc_allocate_fixed_ip returns a value so the call\n        returns properly and the greenpool completes."""'
newline|'\n'
name|'address'
op|'='
string|"'10.10.10.10'"
newline|'\n'
nl|'\n'
DECL|function|fake_allocate
name|'def'
name|'fake_allocate'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'address'
newline|'\n'
nl|'\n'
DECL|function|fake_network_get
dedent|''
name|'def'
name|'fake_network_get'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'rpc_fixed'
op|','
string|"'allocate_fixed_ip'"
op|','
name|'fake_allocate'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'rpc_fixed'
op|'.'
name|'db'
op|','
string|"'network_get'"
op|','
name|'fake_network_get'
op|')'
newline|'\n'
name|'rval'
op|'='
name|'self'
op|'.'
name|'rpc_fixed'
op|'.'
name|'_rpc_allocate_fixed_ip'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'fake_instance'"
op|','
nl|'\n'
string|"'fake_network'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'rval'
op|','
name|'address'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'class'
name|'TestFloatingIPManager'
op|'('
name|'network_manager'
op|'.'
name|'FloatingIP'
op|','
nl|'\n'
DECL|class|TestFloatingIPManager
name|'network_manager'
op|'.'
name|'NetworkManager'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Dummy manager that implements FloatingIP"""'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AllocateTestCase
dedent|''
name|'class'
name|'AllocateTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_allocate_for_instance
indent|'    '
name|'def'
name|'test_allocate_for_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'address'
op|'='
string|'"10.10.10.10"'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'auto_assign_floating_ip'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'network'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'project_id'
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'floating_ip_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
name|'address'
op|','
nl|'\n'
string|"'pool'"
op|':'
string|"'nova'"
op|'}'
op|')'
newline|'\n'
name|'inst'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'host'"
op|':'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'networks'
op|'='
name|'db'
op|'.'
name|'network_get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'for'
name|'network'
name|'in'
name|'networks'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'network_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'network'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
name|'self'
op|'.'
name|'network'
op|'.'
name|'host'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'project_id'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
newline|'\n'
name|'nw_info'
op|'='
name|'self'
op|'.'
name|'network'
op|'.'
name|'allocate_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
name|'inst'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|"''"
op|','
nl|'\n'
name|'host'
op|'='
name|'inst'
op|'['
string|"'host'"
op|']'
op|','
nl|'\n'
name|'vpn'
op|'='
name|'None'
op|','
nl|'\n'
name|'rxtx_factor'
op|'='
number|'3'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'nw_info'
op|')'
op|')'
newline|'\n'
name|'fixed_ip'
op|'='
name|'nw_info'
op|'.'
name|'fixed_ips'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|'['
string|"'address'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'utils'
op|'.'
name|'is_valid_ipv4'
op|'('
name|'fixed_ip'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'deallocate_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
name|'inst'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'fixed_ips'
op|'='
name|'fixed_ip'
op|','
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'network'
op|'.'
name|'host'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FloatingIPTestCase
dedent|''
dedent|''
name|'class'
name|'FloatingIPTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Tests nova.network.manager.FloatingIP"""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'FloatingIPTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tempdir'
op|'='
name|'tempfile'
op|'.'
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'logdir'
op|'='
name|'self'
op|'.'
name|'tempdir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'='
name|'TestFloatingIPManager'
op|'('
op|')'
newline|'\n'
name|'temp'
op|'='
name|'utils'
op|'.'
name|'import_object'
op|'('
string|"'nova.network.minidns.MiniDNS'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'floating_dns_manager'
op|'='
name|'temp'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|'='
name|'db'
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'testproject'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'testuser'"
op|','
name|'self'
op|'.'
name|'project_id'
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'self'
op|'.'
name|'tempdir'
op|')'
newline|'\n'
name|'super'
op|'('
name|'FloatingIPTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_double_deallocation
dedent|''
name|'def'
name|'test_double_deallocation'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'api'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|'"project_id"'
op|':'
name|'self'
op|'.'
name|'project_id'
op|'}'
op|')'
newline|'\n'
comment|'# Run it twice to make it fault if it does not handle'
nl|'\n'
comment|'# instances without fixed networks'
nl|'\n'
comment|'# If this fails in either, it does not handle having no addresses'
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'deallocate_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'deallocate_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_deallocation_deleted_instance
dedent|''
name|'def'
name|'test_deallocation_deleted_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'api'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|'"project_id"'
op|':'
name|'self'
op|'.'
name|'project_id'
op|','
string|'"deleted"'
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'deallocate_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_dns_create_conflict
dedent|''
name|'def'
name|'test_floating_dns_create_conflict'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'zone'
op|'='
string|'"example.org"'
newline|'\n'
name|'address1'
op|'='
string|'"10.10.10.11"'
newline|'\n'
name|'name1'
op|'='
string|'"foo"'
newline|'\n'
name|'name2'
op|'='
string|'"bar"'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'add_dns_entry'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'address1'
op|','
name|'name1'
op|','
string|'"A"'
op|','
name|'zone'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FloatingIpDNSExists'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'add_dns_entry'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'address1'
op|','
name|'name1'
op|','
string|'"A"'
op|','
name|'zone'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_create_and_get
dedent|''
name|'def'
name|'test_floating_create_and_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'zone'
op|'='
string|'"example.org"'
newline|'\n'
name|'address1'
op|'='
string|'"10.10.10.11"'
newline|'\n'
name|'name1'
op|'='
string|'"foo"'
newline|'\n'
name|'name2'
op|'='
string|'"bar"'
newline|'\n'
name|'entries'
op|'='
name|'self'
op|'.'
name|'network'
op|'.'
name|'get_dns_entries_by_address'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'address1'
op|','
name|'zone'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'entries'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'add_dns_entry'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'address1'
op|','
name|'name1'
op|','
string|'"A"'
op|','
name|'zone'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'add_dns_entry'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'address1'
op|','
name|'name2'
op|','
string|'"A"'
op|','
name|'zone'
op|')'
newline|'\n'
name|'entries'
op|'='
name|'self'
op|'.'
name|'network'
op|'.'
name|'get_dns_entries_by_address'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'address1'
op|','
name|'zone'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'entries'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'entries'
op|'['
number|'0'
op|']'
op|','
name|'name1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'entries'
op|'['
number|'1'
op|']'
op|','
name|'name2'
op|')'
newline|'\n'
nl|'\n'
name|'entries'
op|'='
name|'self'
op|'.'
name|'network'
op|'.'
name|'get_dns_entries_by_name'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'name1'
op|','
name|'zone'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'entries'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'entries'
op|'['
number|'0'
op|']'
op|','
name|'address1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_dns_delete
dedent|''
name|'def'
name|'test_floating_dns_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'zone'
op|'='
string|'"example.org"'
newline|'\n'
name|'address1'
op|'='
string|'"10.10.10.11"'
newline|'\n'
name|'name1'
op|'='
string|'"foo"'
newline|'\n'
name|'name2'
op|'='
string|'"bar"'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'add_dns_entry'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'address1'
op|','
name|'name1'
op|','
string|'"A"'
op|','
name|'zone'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'add_dns_entry'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'address1'
op|','
name|'name2'
op|','
string|'"A"'
op|','
name|'zone'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'delete_dns_entry'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'name1'
op|','
name|'zone'
op|')'
newline|'\n'
nl|'\n'
name|'entries'
op|'='
name|'self'
op|'.'
name|'network'
op|'.'
name|'get_dns_entries_by_address'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'address1'
op|','
name|'zone'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'entries'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'entries'
op|'['
number|'0'
op|']'
op|','
name|'name2'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'delete_dns_entry'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'name1'
op|','
name|'zone'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_dns_domains_public
dedent|''
name|'def'
name|'test_floating_dns_domains_public'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'zone1'
op|'='
string|'"testzone"'
newline|'\n'
name|'domain1'
op|'='
string|'"example.org"'
newline|'\n'
name|'domain2'
op|'='
string|'"example.com"'
newline|'\n'
name|'address1'
op|'='
string|"'10.10.10.10'"
newline|'\n'
name|'entryname'
op|'='
string|"'testentry'"
newline|'\n'
nl|'\n'
name|'context_admin'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'testuser'"
op|','
string|"'testproject'"
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AdminRequired'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'create_public_dns_domain'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'domain1'
op|','
name|'zone1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'create_public_dns_domain'
op|'('
name|'context_admin'
op|','
name|'domain1'
op|','
nl|'\n'
string|"'testproject'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'create_public_dns_domain'
op|'('
name|'context_admin'
op|','
name|'domain2'
op|','
nl|'\n'
string|"'fakeproject'"
op|')'
newline|'\n'
nl|'\n'
name|'domains'
op|'='
name|'self'
op|'.'
name|'network'
op|'.'
name|'get_dns_domains'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'domains'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'domains'
op|'['
number|'0'
op|']'
op|'['
string|"'domain'"
op|']'
op|','
name|'domain1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'domains'
op|'['
number|'1'
op|']'
op|'['
string|"'domain'"
op|']'
op|','
name|'domain2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'domains'
op|'['
number|'0'
op|']'
op|'['
string|"'project'"
op|']'
op|','
string|"'testproject'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'domains'
op|'['
number|'1'
op|']'
op|'['
string|"'project'"
op|']'
op|','
string|"'fakeproject'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'add_dns_entry'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'address1'
op|','
name|'entryname'
op|','
nl|'\n'
string|"'A'"
op|','
name|'domain1'
op|')'
newline|'\n'
name|'entries'
op|'='
name|'self'
op|'.'
name|'network'
op|'.'
name|'get_dns_entries_by_name'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'entryname'
op|','
name|'domain1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'entries'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'entries'
op|'['
number|'0'
op|']'
op|','
name|'address1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AdminRequired'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'delete_dns_domain'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'domain1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'delete_dns_domain'
op|'('
name|'context_admin'
op|','
name|'domain1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'delete_dns_domain'
op|'('
name|'context_admin'
op|','
name|'domain2'
op|')'
newline|'\n'
nl|'\n'
comment|'# Verify that deleting the domain deleted the associated entry'
nl|'\n'
name|'entries'
op|'='
name|'self'
op|'.'
name|'network'
op|'.'
name|'get_dns_entries_by_name'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'entryname'
op|','
name|'domain1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'entries'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_all_by_ip
dedent|''
name|'def'
name|'test_delete_all_by_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'domain1'
op|'='
string|'"example.org"'
newline|'\n'
name|'domain2'
op|'='
string|'"example.com"'
newline|'\n'
name|'address'
op|'='
string|'"10.10.10.10"'
newline|'\n'
name|'name1'
op|'='
string|'"foo"'
newline|'\n'
name|'name2'
op|'='
string|'"bar"'
newline|'\n'
nl|'\n'
DECL|function|fake_domains
name|'def'
name|'fake_domains'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|'{'
string|"'domain'"
op|':'
string|"'example.org'"
op|','
string|"'scope'"
op|':'
string|"'public'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'domain'"
op|':'
string|"'example.com'"
op|','
string|"'scope'"
op|':'
string|"'public'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'domain'"
op|':'
string|"'test.example.org'"
op|','
string|"'scope'"
op|':'
string|"'public'"
op|'}'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'network'
op|','
string|"'get_dns_domains'"
op|','
name|'fake_domains'
op|')'
newline|'\n'
nl|'\n'
name|'context_admin'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'testuser'"
op|','
string|"'testproject'"
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'create_public_dns_domain'
op|'('
name|'context_admin'
op|','
name|'domain1'
op|','
nl|'\n'
string|"'testproject'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'create_public_dns_domain'
op|'('
name|'context_admin'
op|','
name|'domain2'
op|','
nl|'\n'
string|"'fakeproject'"
op|')'
newline|'\n'
nl|'\n'
name|'domains'
op|'='
name|'self'
op|'.'
name|'network'
op|'.'
name|'get_dns_domains'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'for'
name|'domain'
name|'in'
name|'domains'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'network'
op|'.'
name|'add_dns_entry'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'address'
op|','
nl|'\n'
name|'name1'
op|','
string|'"A"'
op|','
name|'domain'
op|'['
string|"'domain'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'add_dns_entry'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'address'
op|','
nl|'\n'
name|'name2'
op|','
string|'"A"'
op|','
name|'domain'
op|'['
string|"'domain'"
op|']'
op|')'
newline|'\n'
name|'entries'
op|'='
name|'self'
op|'.'
name|'network'
op|'.'
name|'get_dns_entries_by_address'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'address'
op|','
nl|'\n'
name|'domain'
op|'['
string|"'domain'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'entries'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'network'
op|'.'
name|'_delete_all_entries_for_ip'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'address'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'domain'
name|'in'
name|'domains'
op|':'
newline|'\n'
indent|'            '
name|'entries'
op|'='
name|'self'
op|'.'
name|'network'
op|'.'
name|'get_dns_entries_by_address'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'address'
op|','
nl|'\n'
name|'domain'
op|'['
string|"'domain'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'entries'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'network'
op|'.'
name|'delete_dns_domain'
op|'('
name|'context_admin'
op|','
name|'domain1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'delete_dns_domain'
op|'('
name|'context_admin'
op|','
name|'domain2'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NetworkPolicyTestCase
dedent|''
dedent|''
name|'class'
name|'NetworkPolicyTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'NetworkPolicyTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'nova'
op|'.'
name|'policy'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'nova'
op|'.'
name|'policy'
op|'.'
name|'init'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'NetworkPolicyTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
name|'nova'
op|'.'
name|'policy'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_set_rules
dedent|''
name|'def'
name|'_set_rules'
op|'('
name|'self'
op|','
name|'rules'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'nova'
op|'.'
name|'common'
op|'.'
name|'policy'
op|'.'
name|'set_brain'
op|'('
name|'nova'
op|'.'
name|'common'
op|'.'
name|'policy'
op|'.'
name|'HttpBrain'
op|'('
name|'rules'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_policy
dedent|''
name|'def'
name|'test_check_policy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'nova'
op|'.'
name|'policy'
op|','
string|"'enforce'"
op|')'
newline|'\n'
name|'target'
op|'='
op|'{'
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'nova'
op|'.'
name|'policy'
op|'.'
name|'enforce'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'network:get_all'"
op|','
name|'target'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'network_manager'
op|'.'
name|'check_policy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'get_all'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceDNSTestCase
dedent|''
dedent|''
name|'class'
name|'InstanceDNSTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Tests nova.network.manager instance DNS"""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'InstanceDNSTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tempdir'
op|'='
name|'tempfile'
op|'.'
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'logdir'
op|'='
name|'self'
op|'.'
name|'tempdir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'='
name|'TestFloatingIPManager'
op|'('
op|')'
newline|'\n'
name|'temp'
op|'='
name|'utils'
op|'.'
name|'import_object'
op|'('
string|"'nova.network.minidns.MiniDNS'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'instance_dns_manager'
op|'='
name|'temp'
newline|'\n'
name|'temp'
op|'='
name|'utils'
op|'.'
name|'import_object'
op|'('
string|"'nova.network.dns_driver.DNSDriver'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'floating_dns_manager'
op|'='
name|'temp'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|'='
name|'db'
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'testproject'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'testuser'"
op|','
name|'self'
op|'.'
name|'project_id'
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'self'
op|'.'
name|'tempdir'
op|')'
newline|'\n'
name|'super'
op|'('
name|'InstanceDNSTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dns_domains_private
dedent|''
name|'def'
name|'test_dns_domains_private'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'zone1'
op|'='
string|"'testzone'"
newline|'\n'
name|'domain1'
op|'='
string|"'example.org'"
newline|'\n'
nl|'\n'
name|'context_admin'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'testuser'"
op|','
string|"'testproject'"
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AdminRequired'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'create_private_dns_domain'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'domain1'
op|','
name|'zone1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'create_private_dns_domain'
op|'('
name|'context_admin'
op|','
name|'domain1'
op|','
name|'zone1'
op|')'
newline|'\n'
name|'domains'
op|'='
name|'self'
op|'.'
name|'network'
op|'.'
name|'get_dns_domains'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'domains'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'domains'
op|'['
number|'0'
op|']'
op|'['
string|"'domain'"
op|']'
op|','
name|'domain1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'domains'
op|'['
number|'0'
op|']'
op|'['
string|"'availability_zone'"
op|']'
op|','
name|'zone1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AdminRequired'
op|','
nl|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'delete_dns_domain'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'domain1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'delete_dns_domain'
op|'('
name|'context_admin'
op|','
name|'domain1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|domain1
dedent|''
dedent|''
name|'domain1'
op|'='
string|'"example.org"'
newline|'\n'
DECL|variable|domain2
name|'domain2'
op|'='
string|'"example.com"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LdapDNSTestCase
name|'class'
name|'LdapDNSTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Tests nova.network.ldapdns.LdapDNS"""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'LdapDNSTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'saved_ldap'
op|'='
name|'sys'
op|'.'
name|'modules'
op|'.'
name|'get'
op|'('
string|"'ldap'"
op|')'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'auth'
op|'.'
name|'fakeldap'
newline|'\n'
name|'sys'
op|'.'
name|'modules'
op|'['
string|"'ldap'"
op|']'
op|'='
name|'nova'
op|'.'
name|'auth'
op|'.'
name|'fakeldap'
newline|'\n'
nl|'\n'
name|'temp'
op|'='
name|'utils'
op|'.'
name|'import_object'
op|'('
string|"'nova.network.ldapdns.FakeLdapDNS'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'='
name|'temp'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'create_domain'
op|'('
name|'domain1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'create_domain'
op|'('
name|'domain2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'driver'
op|'.'
name|'delete_domain'
op|'('
name|'domain1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'delete_domain'
op|'('
name|'domain2'
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'modules'
op|'['
string|"'ldap'"
op|']'
op|'='
name|'self'
op|'.'
name|'saved_ldap'
newline|'\n'
name|'super'
op|'('
name|'LdapDNSTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ldap_dns_domains
dedent|''
name|'def'
name|'test_ldap_dns_domains'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'domains'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_domains'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'domains'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'domain1'
op|','
name|'domains'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'domain2'
op|','
name|'domains'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ldap_dns_create_conflict
dedent|''
name|'def'
name|'test_ldap_dns_create_conflict'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'address1'
op|'='
string|'"10.10.10.11"'
newline|'\n'
name|'name1'
op|'='
string|'"foo"'
newline|'\n'
name|'name2'
op|'='
string|'"bar"'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'create_entry'
op|'('
name|'name1'
op|','
name|'address1'
op|','
string|'"A"'
op|','
name|'domain1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'FloatingIpDNSExists'
op|','
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'create_entry'
op|','
nl|'\n'
name|'name1'
op|','
name|'address1'
op|','
string|'"A"'
op|','
name|'domain1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ldap_dns_create_and_get
dedent|''
name|'def'
name|'test_ldap_dns_create_and_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'address1'
op|'='
string|'"10.10.10.11"'
newline|'\n'
name|'name1'
op|'='
string|'"foo"'
newline|'\n'
name|'name2'
op|'='
string|'"bar"'
newline|'\n'
name|'entries'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_entries_by_address'
op|'('
name|'address1'
op|','
name|'domain1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'entries'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'create_entry'
op|'('
name|'name1'
op|','
name|'address1'
op|','
string|'"A"'
op|','
name|'domain1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'create_entry'
op|'('
name|'name2'
op|','
name|'address1'
op|','
string|'"A"'
op|','
name|'domain1'
op|')'
newline|'\n'
name|'entries'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_entries_by_address'
op|'('
name|'address1'
op|','
name|'domain1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'entries'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'entries'
op|'['
number|'0'
op|']'
op|','
name|'name1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'entries'
op|'['
number|'1'
op|']'
op|','
name|'name2'
op|')'
newline|'\n'
nl|'\n'
name|'entries'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_entries_by_name'
op|'('
name|'name1'
op|','
name|'domain1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'entries'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'entries'
op|'['
number|'0'
op|']'
op|','
name|'address1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ldap_dns_delete
dedent|''
name|'def'
name|'test_ldap_dns_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'address1'
op|'='
string|'"10.10.10.11"'
newline|'\n'
name|'name1'
op|'='
string|'"foo"'
newline|'\n'
name|'name2'
op|'='
string|'"bar"'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'create_entry'
op|'('
name|'name1'
op|','
name|'address1'
op|','
string|'"A"'
op|','
name|'domain1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'create_entry'
op|'('
name|'name2'
op|','
name|'address1'
op|','
string|'"A"'
op|','
name|'domain1'
op|')'
newline|'\n'
name|'entries'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_entries_by_address'
op|'('
name|'address1'
op|','
name|'domain1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'entries'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'delete_entry'
op|'('
name|'name1'
op|','
name|'domain1'
op|')'
newline|'\n'
name|'entries'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_entries_by_address'
op|'('
name|'address1'
op|','
name|'domain1'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"entries: %s"'
op|'%'
name|'entries'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'entries'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'entries'
op|'['
number|'0'
op|']'
op|','
name|'name2'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'delete_entry'
op|','
nl|'\n'
name|'name1'
op|','
name|'domain1'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
