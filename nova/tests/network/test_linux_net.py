begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2011 NTT'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'# not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'# a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#      http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'# License for the specific language governing permissions and limitations'
nl|'\n'
comment|'# under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
nl|'\n'
name|'import'
name|'mox'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'linux_net'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'fileutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|HOST
name|'HOST'
op|'='
string|'"testhost"'
newline|'\n'
nl|'\n'
DECL|variable|instances
name|'instances'
op|'='
op|'{'
string|"'00000000-0000-0000-0000-0000000000000000'"
op|':'
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000000'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'fake_instance00'"
op|','
nl|'\n'
string|"'created_at'"
op|':'
string|"'fakedate'"
op|','
nl|'\n'
string|"'updated_at'"
op|':'
string|"'fakedate'"
op|','
nl|'\n'
string|"'hostname'"
op|':'
string|"'fake_instance00'"
op|'}'
op|','
nl|'\n'
string|"'00000000-0000-0000-0000-0000000000000001'"
op|':'
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000001'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'fake_instance01'"
op|','
nl|'\n'
string|"'created_at'"
op|':'
string|"'fakedate'"
op|','
nl|'\n'
string|"'updated_at'"
op|':'
string|"'fakedate'"
op|','
nl|'\n'
string|"'hostname'"
op|':'
string|"'fake_instance01'"
op|'}'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|addresses
name|'addresses'
op|'='
op|'['
op|'{'
string|'"address"'
op|':'
string|'"10.0.0.1"'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"address"'
op|':'
string|'"10.0.0.2"'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"address"'
op|':'
string|'"10.0.0.3"'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"address"'
op|':'
string|'"10.0.0.4"'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"address"'
op|':'
string|'"10.0.0.5"'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"address"'
op|':'
string|'"10.0.0.6"'
op|'}'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|networks
name|'networks'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|'"aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"'
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'test0'"
op|','
nl|'\n'
string|"'injected'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'multi_host'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'192.168.0.0/24'"
op|','
nl|'\n'
string|"'cidr_v6'"
op|':'
string|"'2001:db8::/64'"
op|','
nl|'\n'
string|"'gateway_v6'"
op|':'
string|"'2001:db8::1'"
op|','
nl|'\n'
string|"'netmask_v6'"
op|':'
string|"'64'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'255.255.255.0'"
op|','
nl|'\n'
string|"'bridge'"
op|':'
string|"'fa0'"
op|','
nl|'\n'
string|"'bridge_interface'"
op|':'
string|"'fake_fa0'"
op|','
nl|'\n'
string|"'gateway'"
op|':'
string|"'192.168.0.1'"
op|','
nl|'\n'
string|"'broadcast'"
op|':'
string|"'192.168.0.255'"
op|','
nl|'\n'
string|"'dns1'"
op|':'
string|"'192.168.0.1'"
op|','
nl|'\n'
string|"'dns2'"
op|':'
string|"'192.168.0.2'"
op|','
nl|'\n'
string|"'dhcp_server'"
op|':'
string|"'0.0.0.0'"
op|','
nl|'\n'
string|"'dhcp_start'"
op|':'
string|"'192.168.100.1'"
op|','
nl|'\n'
string|"'vlan'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake_project'"
op|','
nl|'\n'
string|"'vpn_public_address'"
op|':'
string|"'192.168.0.2'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|'"bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"'
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'test1'"
op|','
nl|'\n'
string|"'injected'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'multi_host'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'192.168.1.0/24'"
op|','
nl|'\n'
string|"'cidr_v6'"
op|':'
string|"'2001:db9::/64'"
op|','
nl|'\n'
string|"'gateway_v6'"
op|':'
string|"'2001:db9::1'"
op|','
nl|'\n'
string|"'netmask_v6'"
op|':'
string|"'64'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'255.255.255.0'"
op|','
nl|'\n'
string|"'bridge'"
op|':'
string|"'fa1'"
op|','
nl|'\n'
string|"'bridge_interface'"
op|':'
string|"'fake_fa1'"
op|','
nl|'\n'
string|"'gateway'"
op|':'
string|"'192.168.1.1'"
op|','
nl|'\n'
string|"'broadcast'"
op|':'
string|"'192.168.1.255'"
op|','
nl|'\n'
string|"'dns1'"
op|':'
string|"'192.168.0.1'"
op|','
nl|'\n'
string|"'dns2'"
op|':'
string|"'192.168.0.2'"
op|','
nl|'\n'
string|"'dhcp_server'"
op|':'
string|"'0.0.0.0'"
op|','
nl|'\n'
string|"'dhcp_start'"
op|':'
string|"'192.168.100.1'"
op|','
nl|'\n'
string|"'vlan'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake_project'"
op|','
nl|'\n'
string|"'vpn_public_address'"
op|':'
string|"'192.168.1.2'"
op|'}'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|fixed_ips
name|'fixed_ips'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.0.100'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000000'"
op|','
nl|'\n'
string|"'floating_ips'"
op|':'
op|'['
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.1.100'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000000'"
op|','
nl|'\n'
string|"'floating_ips'"
op|':'
op|'['
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.0.101'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000001'"
op|','
nl|'\n'
string|"'floating_ips'"
op|':'
op|'['
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.1.101'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000001'"
op|','
nl|'\n'
string|"'floating_ips'"
op|':'
op|'['
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'4'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.0.102'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
number|'4'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000000'"
op|','
nl|'\n'
string|"'floating_ips'"
op|':'
op|'['
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'5'
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.1.102'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
number|'5'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000001'"
op|','
nl|'\n'
string|"'floating_ips'"
op|':'
op|'['
op|']'
op|'}'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|vifs
name|'vifs'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'DE:AD:BE:EF:00:00'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000000'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000000'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'DE:AD:BE:EF:00:01'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000001'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000000'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'DE:AD:BE:EF:00:02'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000002'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000001'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'DE:AD:BE:EF:00:03'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000003'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000001'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'4'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'DE:AD:BE:EF:00:04'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000004'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000000'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'5'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'DE:AD:BE:EF:00:05'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000005'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-0000000000000001'"
op|'}'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_associated
name|'def'
name|'get_associated'
op|'('
name|'context'
op|','
name|'network_id'
op|','
name|'host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'result'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'datum'
name|'in'
name|'fixed_ips'
op|':'
newline|'\n'
indent|'        '
name|'if'
op|'('
name|'datum'
op|'['
string|"'network_id'"
op|']'
op|'=='
name|'network_id'
name|'and'
name|'datum'
op|'['
string|"'allocated'"
op|']'
nl|'\n'
name|'and'
name|'datum'
op|'['
string|"'instance_uuid'"
op|']'
name|'is'
name|'not'
name|'None'
nl|'\n'
name|'and'
name|'datum'
op|'['
string|"'virtual_interface_id'"
op|']'
name|'is'
name|'not'
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'instances'
op|'['
name|'datum'
op|'['
string|"'instance_uuid'"
op|']'
op|']'
newline|'\n'
name|'if'
name|'host'
name|'and'
name|'host'
op|'!='
name|'instance'
op|'['
string|"'host'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'cleaned'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'cleaned'
op|'['
string|"'address'"
op|']'
op|'='
name|'datum'
op|'['
string|"'address'"
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'instance_uuid'"
op|']'
op|'='
name|'datum'
op|'['
string|"'instance_uuid'"
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'network_id'"
op|']'
op|'='
name|'datum'
op|'['
string|"'network_id'"
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'vif_id'"
op|']'
op|'='
name|'datum'
op|'['
string|"'virtual_interface_id'"
op|']'
newline|'\n'
name|'vif'
op|'='
name|'vifs'
op|'['
name|'datum'
op|'['
string|"'virtual_interface_id'"
op|']'
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'vif_address'"
op|']'
op|'='
name|'vif'
op|'['
string|"'address'"
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'instance_hostname'"
op|']'
op|'='
name|'instance'
op|'['
string|"'hostname'"
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'instance_updated'"
op|']'
op|'='
name|'instance'
op|'['
string|"'updated_at'"
op|']'
newline|'\n'
name|'cleaned'
op|'['
string|"'instance_created'"
op|']'
op|'='
name|'instance'
op|'['
string|"'created_at'"
op|']'
newline|'\n'
name|'result'
op|'.'
name|'append'
op|'('
name|'cleaned'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LinuxNetworkTestCase
dedent|''
name|'class'
name|'LinuxNetworkTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'LinuxNetworkTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'='
name|'driver'
op|'.'
name|'load_network_driver'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'db'
op|'='
name|'db'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'testuser'"
op|','
string|"'testproject'"
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_vifs
name|'def'
name|'get_vifs'
op|'('
name|'_context'
op|','
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
name|'vif'
name|'for'
name|'vif'
name|'in'
name|'vifs'
name|'if'
name|'vif'
op|'['
string|"'instance_uuid'"
op|']'
op|'=='
nl|'\n'
name|'instance_uuid'
op|']'
newline|'\n'
nl|'\n'
DECL|function|get_instance
dedent|''
name|'def'
name|'get_instance'
op|'('
name|'_context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'instances'
op|'['
name|'instance_id'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'virtual_interface_get_by_instance'"
op|','
name|'get_vifs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get'"
op|','
name|'get_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'network_get_associated_fixed_ips'"
op|','
name|'get_associated'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_dhcp_for_nw00
dedent|''
name|'def'
name|'test_update_dhcp_for_nw00'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_single_default_gateway'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'driver'
op|','
string|"'write_to_file'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'fileutils'
op|','
string|"'ensure_tree'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|','
string|"'chmod'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'write_to_file'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'write_to_file'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'chmod'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'chmod'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'update_dhcp'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|'"eth0"'
op|','
name|'networks'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_dhcp_for_nw01
dedent|''
name|'def'
name|'test_update_dhcp_for_nw01'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_single_default_gateway'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'driver'
op|','
string|"'write_to_file'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'fileutils'
op|','
string|"'ensure_tree'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'os'
op|','
string|"'chmod'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'write_to_file'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'write_to_file'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'fileutils'
op|'.'
name|'ensure_tree'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'chmod'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'chmod'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'update_dhcp'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|'"eth0"'
op|','
name|'networks'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_dhcp_hosts_for_nw00
dedent|''
name|'def'
name|'test_get_dhcp_hosts_for_nw00'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_single_default_gateway'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'('
nl|'\n'
string|'"DE:AD:BE:EF:00:00,fake_instance00.novalocal,"'
nl|'\n'
string|'"192.168.0.100,net:NW-0\\n"'
nl|'\n'
string|'"DE:AD:BE:EF:00:03,fake_instance01.novalocal,"'
nl|'\n'
string|'"192.168.1.101,net:NW-3\\n"'
nl|'\n'
string|'"DE:AD:BE:EF:00:04,fake_instance00.novalocal,"'
nl|'\n'
string|'"192.168.0.102,net:NW-4"'
nl|'\n'
op|')'
newline|'\n'
name|'actual_hosts'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_dhcp_hosts'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'networks'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'actual_hosts'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_dhcp_hosts_for_nw01
dedent|''
name|'def'
name|'test_get_dhcp_hosts_for_nw01'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_single_default_gateway'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'host'
op|'='
string|"'fake_instance01'"
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'('
nl|'\n'
string|'"DE:AD:BE:EF:00:02,fake_instance01.novalocal,"'
nl|'\n'
string|'"192.168.0.101,net:NW-2\\n"'
nl|'\n'
string|'"DE:AD:BE:EF:00:05,fake_instance01.novalocal,"'
nl|'\n'
string|'"192.168.1.102,net:NW-5"'
nl|'\n'
op|')'
newline|'\n'
name|'actual_hosts'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_dhcp_hosts'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'networks'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'actual_hosts'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_dns_hosts_for_nw00
dedent|''
name|'def'
name|'test_get_dns_hosts_for_nw00'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
op|'('
nl|'\n'
string|'"192.168.0.100\\tfake_instance00.novalocal\\n"'
nl|'\n'
string|'"192.168.1.101\\tfake_instance01.novalocal\\n"'
nl|'\n'
string|'"192.168.0.102\\tfake_instance00.novalocal"'
nl|'\n'
op|')'
newline|'\n'
name|'actual_hosts'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_dns_hosts'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'networks'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'actual_hosts'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_dns_hosts_for_nw01
dedent|''
name|'def'
name|'test_get_dns_hosts_for_nw01'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
op|'('
nl|'\n'
string|'"192.168.1.100\\tfake_instance00.novalocal\\n"'
nl|'\n'
string|'"192.168.0.101\\tfake_instance01.novalocal\\n"'
nl|'\n'
string|'"192.168.1.102\\tfake_instance01.novalocal"'
nl|'\n'
op|')'
newline|'\n'
name|'actual_hosts'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_dns_hosts'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'networks'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'actual_hosts'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_dhcp_opts_for_nw00
dedent|''
name|'def'
name|'test_get_dhcp_opts_for_nw00'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_opts'
op|'='
string|"'NW-3,3\\nNW-4,3'"
newline|'\n'
name|'actual_opts'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_dhcp_opts'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'networks'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'actual_opts'
op|','
name|'expected_opts'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_dhcp_opts_for_nw01
dedent|''
name|'def'
name|'test_get_dhcp_opts_for_nw01'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'host'
op|'='
string|"'fake_instance01'"
op|')'
newline|'\n'
name|'expected_opts'
op|'='
string|'"NW-5,3"'
newline|'\n'
name|'actual_opts'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'get_dhcp_opts'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'networks'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'actual_opts'
op|','
name|'expected_opts'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dhcp_opts_not_default_gateway_network
dedent|''
name|'def'
name|'test_dhcp_opts_not_default_gateway_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
string|'"NW-0,3"'
newline|'\n'
name|'data'
op|'='
name|'get_associated'
op|'('
name|'self'
op|'.'
name|'context'
op|','
number|'0'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'actual'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'_host_dhcp_opts'
op|'('
name|'data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'actual'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_dhcp_without_default_gateway_network
dedent|''
name|'def'
name|'test_host_dhcp_without_default_gateway_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
string|"','"
op|'.'
name|'join'
op|'('
op|'['
string|"'DE:AD:BE:EF:00:00'"
op|','
nl|'\n'
string|"'fake_instance00.novalocal'"
op|','
nl|'\n'
string|"'192.168.0.100'"
op|']'
op|')'
newline|'\n'
name|'data'
op|'='
name|'get_associated'
op|'('
name|'self'
op|'.'
name|'context'
op|','
number|'0'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'actual'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'_host_dhcp'
op|'('
name|'data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'actual'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_dns_without_default_gateway_network
dedent|''
name|'def'
name|'test_host_dns_without_default_gateway_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
string|'"192.168.0.100\\tfake_instance00.novalocal"'
newline|'\n'
name|'data'
op|'='
name|'get_associated'
op|'('
name|'self'
op|'.'
name|'context'
op|','
number|'0'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'actual'
op|'='
name|'self'
op|'.'
name|'driver'
op|'.'
name|'_host_dns'
op|'('
name|'data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'actual'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_linux_bridge_driver_plug
dedent|''
name|'def'
name|'test_linux_bridge_driver_plug'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure plug doesn\'t drop FORWARD by default.\n\n        Ensures bug 890195 doesn\'t reappear."""'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|'""'
op|','
string|'""'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
nl|'\n'
DECL|function|verify_add_rule
name|'def'
name|'verify_add_rule'
op|'('
name|'chain'
op|','
name|'rule'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'chain'
op|','
string|"'FORWARD'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'ACCEPT'"
op|','
name|'rule'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'linux_net'
op|'.'
name|'iptables_manager'
op|'.'
name|'ipv4'
op|'['
string|"'filter'"
op|']'
op|','
nl|'\n'
string|"'add_rule'"
op|','
name|'verify_add_rule'
op|')'
newline|'\n'
name|'driver'
op|'='
name|'linux_net'
op|'.'
name|'LinuxBridgeInterfaceDriver'
op|'('
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'plug'
op|'('
op|'{'
string|'"bridge"'
op|':'
string|'"br100"'
op|','
string|'"bridge_interface"'
op|':'
string|'"eth0"'
op|'}'
op|','
nl|'\n'
string|'"fakemac"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vlan_override
dedent|''
name|'def'
name|'test_vlan_override'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure vlan_interface flag overrides network bridge_interface.\n\n        Allows heterogeneous networks a la bug 833426"""'
newline|'\n'
nl|'\n'
name|'driver'
op|'='
name|'linux_net'
op|'.'
name|'LinuxBridgeInterfaceDriver'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'info'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'classmethod'
newline|'\n'
DECL|function|test_ensure
name|'def'
name|'test_ensure'
op|'('
name|'_self'
op|','
name|'vlan'
op|','
name|'bridge'
op|','
name|'interface'
op|','
name|'network'
op|','
name|'mac_address'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'info'
op|'['
string|"'passed_interface'"
op|']'
op|'='
name|'interface'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'linux_net'
op|'.'
name|'LinuxBridgeInterfaceDriver'
op|','
nl|'\n'
string|"'ensure_vlan_bridge'"
op|','
name|'test_ensure'
op|')'
newline|'\n'
nl|'\n'
name|'network'
op|'='
op|'{'
nl|'\n'
string|'"bridge"'
op|':'
string|'"br100"'
op|','
nl|'\n'
string|'"bridge_interface"'
op|':'
string|'"base_interface"'
op|','
nl|'\n'
string|'"vlan"'
op|':'
string|'"fake"'
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vlan_interface'
op|'='
string|'""'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'plug'
op|'('
name|'network'
op|','
string|'"fakemac"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|"'passed_interface'"
op|']'
op|','
string|'"base_interface"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'vlan_interface'
op|'='
string|'"override_interface"'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'plug'
op|'('
name|'network'
op|','
string|'"fakemac"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|"'passed_interface'"
op|']'
op|','
string|'"override_interface"'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'plug'
op|'('
name|'network'
op|','
string|'"fakemac"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flat_override
dedent|''
name|'def'
name|'test_flat_override'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure flat_interface flag overrides network bridge_interface.\n\n        Allows heterogeneous networks a la bug 833426"""'
newline|'\n'
nl|'\n'
name|'driver'
op|'='
name|'linux_net'
op|'.'
name|'LinuxBridgeInterfaceDriver'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'info'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
op|'@'
name|'classmethod'
newline|'\n'
DECL|function|test_ensure
name|'def'
name|'test_ensure'
op|'('
name|'_self'
op|','
name|'bridge'
op|','
name|'interface'
op|','
name|'network'
op|','
name|'gateway'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'info'
op|'['
string|"'passed_interface'"
op|']'
op|'='
name|'interface'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'linux_net'
op|'.'
name|'LinuxBridgeInterfaceDriver'
op|','
nl|'\n'
string|"'ensure_bridge'"
op|','
name|'test_ensure'
op|')'
newline|'\n'
nl|'\n'
name|'network'
op|'='
op|'{'
nl|'\n'
string|'"bridge"'
op|':'
string|'"br100"'
op|','
nl|'\n'
string|'"bridge_interface"'
op|':'
string|'"base_interface"'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'driver'
op|'.'
name|'plug'
op|'('
name|'network'
op|','
string|'"fakemac"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|"'passed_interface'"
op|']'
op|','
string|'"base_interface"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'flat_interface'
op|'='
string|'"override_interface"'
op|')'
newline|'\n'
name|'driver'
op|'.'
name|'plug'
op|'('
name|'network'
op|','
string|'"fakemac"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|"'passed_interface'"
op|']'
op|','
string|'"override_interface"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_isolated_host
dedent|''
name|'def'
name|'test_isolated_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'fake_network'
op|'='
name|'False'
op|','
nl|'\n'
name|'share_dhcp_address'
op|'='
name|'True'
op|')'
newline|'\n'
comment|'# NOTE(vish): use a fresh copy of the manager for each test'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'linux_net'
op|','
string|"'iptables_manager'"
op|','
nl|'\n'
name|'linux_net'
op|'.'
name|'IptablesManager'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'linux_net'
op|','
string|"'binary_name'"
op|','
string|"'test'"
op|')'
newline|'\n'
name|'executes'
op|'='
op|'['
op|']'
newline|'\n'
name|'inputs'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'executes'
op|'.'
name|'append'
op|'('
name|'args'
op|')'
newline|'\n'
name|'process_input'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'process_input'"
op|')'
newline|'\n'
name|'if'
name|'process_input'
op|':'
newline|'\n'
indent|'                '
name|'inputs'
op|'.'
name|'append'
op|'('
name|'process_input'
op|')'
newline|'\n'
dedent|''
name|'return'
string|'""'
op|','
string|'""'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
nl|'\n'
name|'driver'
op|'='
name|'linux_net'
op|'.'
name|'LinuxBridgeInterfaceDriver'
op|'('
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'classmethod'
newline|'\n'
DECL|function|fake_ensure
name|'def'
name|'fake_ensure'
op|'('
name|'_self'
op|','
name|'bridge'
op|','
name|'interface'
op|','
name|'network'
op|','
name|'gateway'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'bridge'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'linux_net'
op|'.'
name|'LinuxBridgeInterfaceDriver'
op|','
nl|'\n'
string|"'ensure_bridge'"
op|','
name|'fake_ensure'
op|')'
newline|'\n'
nl|'\n'
name|'iface'
op|'='
string|"'eth0'"
newline|'\n'
name|'dhcp'
op|'='
string|"'192.168.1.1'"
newline|'\n'
name|'network'
op|'='
op|'{'
string|"'dhcp_server'"
op|':'
name|'dhcp'
op|','
nl|'\n'
string|"'bridge'"
op|':'
string|"'br100'"
op|','
nl|'\n'
string|"'bridge_interface'"
op|':'
name|'iface'
op|'}'
newline|'\n'
name|'driver'
op|'.'
name|'plug'
op|'('
name|'network'
op|','
string|"'fakemac'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
nl|'\n'
op|'('
string|"'ebtables'"
op|','
string|"'-D'"
op|','
string|"'INPUT'"
op|','
string|"'-p'"
op|','
string|"'ARP'"
op|','
string|"'-i'"
op|','
name|'iface'
op|','
nl|'\n'
string|"'--arp-ip-dst'"
op|','
name|'dhcp'
op|','
string|"'-j'"
op|','
string|"'DROP'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ebtables'"
op|','
string|"'-I'"
op|','
string|"'INPUT'"
op|','
string|"'-p'"
op|','
string|"'ARP'"
op|','
string|"'-i'"
op|','
name|'iface'
op|','
nl|'\n'
string|"'--arp-ip-dst'"
op|','
name|'dhcp'
op|','
string|"'-j'"
op|','
string|"'DROP'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ebtables'"
op|','
string|"'-D'"
op|','
string|"'OUTPUT'"
op|','
string|"'-p'"
op|','
string|"'ARP'"
op|','
string|"'-o'"
op|','
name|'iface'
op|','
nl|'\n'
string|"'--arp-ip-src'"
op|','
name|'dhcp'
op|','
string|"'-j'"
op|','
string|"'DROP'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ebtables'"
op|','
string|"'-I'"
op|','
string|"'OUTPUT'"
op|','
string|"'-p'"
op|','
string|"'ARP'"
op|','
string|"'-o'"
op|','
name|'iface'
op|','
nl|'\n'
string|"'--arp-ip-src'"
op|','
name|'dhcp'
op|','
string|"'-j'"
op|','
string|"'DROP'"
op|')'
op|','
nl|'\n'
op|'('
string|"'iptables-save'"
op|','
string|"'-c'"
op|')'
op|','
nl|'\n'
op|'('
string|"'iptables-restore'"
op|','
string|"'-c'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip6tables-save'"
op|','
string|"'-c'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip6tables-restore'"
op|','
string|"'-c'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'executes'
op|','
name|'expected'
op|')'
newline|'\n'
name|'expected_inputs'
op|'='
op|'['
nl|'\n'
string|"'-A test-FORWARD -m physdev --physdev-in %s '"
nl|'\n'
string|"'-d 255.255.255.255 -p udp --dport 67 -j DROP'"
op|'%'
name|'iface'
op|','
nl|'\n'
string|"'-A test-FORWARD -m physdev --physdev-out %s '"
nl|'\n'
string|"'-d 255.255.255.255 -p udp --dport 67 -j DROP'"
op|'%'
name|'iface'
op|','
nl|'\n'
string|"'-A test-FORWARD -m physdev --physdev-in %s '"
nl|'\n'
string|"'-d 192.168.1.1 -j DROP'"
op|'%'
name|'iface'
op|','
nl|'\n'
string|"'-A test-FORWARD -m physdev --physdev-out %s '"
nl|'\n'
string|"'-s 192.168.1.1 -j DROP'"
op|'%'
name|'iface'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'for'
name|'inp'
name|'in'
name|'expected_inputs'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'inp'
name|'in'
name|'inputs'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'executes'
op|'='
op|'['
op|']'
newline|'\n'
name|'inputs'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
op|'@'
name|'classmethod'
newline|'\n'
DECL|function|fake_remove
name|'def'
name|'fake_remove'
op|'('
name|'_self'
op|','
name|'bridge'
op|','
name|'gateway'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'linux_net'
op|'.'
name|'LinuxBridgeInterfaceDriver'
op|','
nl|'\n'
string|"'remove_bridge'"
op|','
name|'fake_remove'
op|')'
newline|'\n'
nl|'\n'
name|'driver'
op|'.'
name|'unplug'
op|'('
name|'network'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
nl|'\n'
op|'('
string|"'ebtables'"
op|','
string|"'-D'"
op|','
string|"'INPUT'"
op|','
string|"'-p'"
op|','
string|"'ARP'"
op|','
string|"'-i'"
op|','
name|'iface'
op|','
nl|'\n'
string|"'--arp-ip-dst'"
op|','
name|'dhcp'
op|','
string|"'-j'"
op|','
string|"'DROP'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ebtables'"
op|','
string|"'-D'"
op|','
string|"'OUTPUT'"
op|','
string|"'-p'"
op|','
string|"'ARP'"
op|','
string|"'-o'"
op|','
name|'iface'
op|','
nl|'\n'
string|"'--arp-ip-src'"
op|','
name|'dhcp'
op|','
string|"'-j'"
op|','
string|"'DROP'"
op|')'
op|','
nl|'\n'
op|'('
string|"'iptables-save'"
op|','
string|"'-c'"
op|')'
op|','
nl|'\n'
op|'('
string|"'iptables-restore'"
op|','
string|"'-c'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip6tables-save'"
op|','
string|"'-c'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip6tables-restore'"
op|','
string|"'-c'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'executes'
op|','
name|'expected'
op|')'
newline|'\n'
name|'for'
name|'inp'
name|'in'
name|'expected_inputs'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'inp'
name|'in'
name|'inputs'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_initialize_gateway
dedent|''
dedent|''
name|'def'
name|'_test_initialize_gateway'
op|'('
name|'self'
op|','
name|'existing'
op|','
name|'expected'
op|','
name|'routes'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'fake_network'
op|'='
name|'False'
op|')'
newline|'\n'
name|'executes'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_execute
name|'def'
name|'fake_execute'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'executes'
op|'.'
name|'append'
op|'('
name|'args'
op|')'
newline|'\n'
name|'if'
name|'args'
op|'['
number|'0'
op|']'
op|'=='
string|"'ip'"
name|'and'
name|'args'
op|'['
number|'1'
op|']'
op|'=='
string|"'addr'"
name|'and'
name|'args'
op|'['
number|'2'
op|']'
op|'=='
string|"'show'"
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'existing'
op|','
string|'""'
newline|'\n'
dedent|''
name|'if'
name|'args'
op|'['
number|'0'
op|']'
op|'=='
string|"'ip'"
name|'and'
name|'args'
op|'['
number|'1'
op|']'
op|'=='
string|"'route'"
name|'and'
name|'args'
op|'['
number|'2'
op|']'
op|'=='
string|"'show'"
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'routes'
op|','
string|'""'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'execute'"
op|','
name|'fake_execute'
op|')'
newline|'\n'
name|'network'
op|'='
op|'{'
string|"'dhcp_server'"
op|':'
string|"'192.168.1.1'"
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'192.168.1.0/24'"
op|','
nl|'\n'
string|"'broadcast'"
op|':'
string|"'192.168.1.255'"
op|','
nl|'\n'
string|"'cidr_v6'"
op|':'
string|"'2001:db8::/64'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'initialize_gateway_device'
op|'('
string|"'eth0'"
op|','
name|'network'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'executes'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_initialize_gateway_moves_wrong_ip
dedent|''
name|'def'
name|'test_initialize_gateway_moves_wrong_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'existing'
op|'='
op|'('
string|'"2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> "'
nl|'\n'
string|'"    mtu 1500 qdisc pfifo_fast state UNKNOWN qlen 1000\\n"'
nl|'\n'
string|'"    link/ether de:ad:be:ef:be:ef brd ff:ff:ff:ff:ff:ff\\n"'
nl|'\n'
string|'"    inet 192.168.0.1/24 brd 192.168.0.255 scope global eth0\\n"'
nl|'\n'
string|'"    inet6 dead::beef:dead:beef:dead/64 scope link\\n"'
nl|'\n'
string|'"    valid_lft forever preferred_lft forever\\n"'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
nl|'\n'
op|'('
string|"'sysctl'"
op|','
string|"'-w'"
op|','
string|"'net.ipv4.ip_forward=1'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'show'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|','
string|"'scope'"
op|','
string|"'global'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'route'"
op|','
string|"'show'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'del'"
op|','
string|"'192.168.0.1/24'"
op|','
nl|'\n'
string|"'brd'"
op|','
string|"'192.168.0.255'"
op|','
string|"'scope'"
op|','
string|"'global'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'add'"
op|','
string|"'192.168.1.1/24'"
op|','
nl|'\n'
string|"'brd'"
op|','
string|"'192.168.1.255'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'add'"
op|','
string|"'192.168.0.1/24'"
op|','
nl|'\n'
string|"'brd'"
op|','
string|"'192.168.0.255'"
op|','
string|"'scope'"
op|','
string|"'global'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'-f'"
op|','
string|"'inet6'"
op|','
string|"'addr'"
op|','
string|"'change'"
op|','
nl|'\n'
string|"'2001:db8::/64'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_test_initialize_gateway'
op|'('
name|'existing'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_initialize_gateway_resets_route
dedent|''
name|'def'
name|'test_initialize_gateway_resets_route'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'routes'
op|'='
op|'('
string|'"default via 192.168.0.1 dev eth0\\n"'
nl|'\n'
string|'"192.168.100.0/24 via 192.168.0.254 dev eth0 proto static\\n"'
op|')'
newline|'\n'
name|'existing'
op|'='
op|'('
string|'"2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> "'
nl|'\n'
string|'"    mtu 1500 qdisc pfifo_fast state UNKNOWN qlen 1000\\n"'
nl|'\n'
string|'"    link/ether de:ad:be:ef:be:ef brd ff:ff:ff:ff:ff:ff\\n"'
nl|'\n'
string|'"    inet 192.168.0.1/24 brd 192.168.0.255 scope global eth0\\n"'
nl|'\n'
string|'"    inet6 dead::beef:dead:beef:dead/64 scope link\\n"'
nl|'\n'
string|'"    valid_lft forever preferred_lft forever\\n"'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
nl|'\n'
op|'('
string|"'sysctl'"
op|','
string|"'-w'"
op|','
string|"'net.ipv4.ip_forward=1'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'show'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|','
string|"'scope'"
op|','
string|"'global'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'route'"
op|','
string|"'show'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'route'"
op|','
string|"'del'"
op|','
string|"'default'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'route'"
op|','
string|"'del'"
op|','
string|"'192.168.100.0/24'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'del'"
op|','
string|"'192.168.0.1/24'"
op|','
nl|'\n'
string|"'brd'"
op|','
string|"'192.168.0.255'"
op|','
string|"'scope'"
op|','
string|"'global'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'add'"
op|','
string|"'192.168.1.1/24'"
op|','
nl|'\n'
string|"'brd'"
op|','
string|"'192.168.1.255'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'add'"
op|','
string|"'192.168.0.1/24'"
op|','
nl|'\n'
string|"'brd'"
op|','
string|"'192.168.0.255'"
op|','
string|"'scope'"
op|','
string|"'global'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'route'"
op|','
string|"'add'"
op|','
string|"'default'"
op|','
string|"'via'"
op|','
string|"'192.168.0.1'"
op|','
nl|'\n'
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'route'"
op|','
string|"'add'"
op|','
string|"'192.168.100.0/24'"
op|','
string|"'via'"
op|','
string|"'192.168.0.254'"
op|','
nl|'\n'
string|"'dev'"
op|','
string|"'eth0'"
op|','
string|"'proto'"
op|','
string|"'static'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'-f'"
op|','
string|"'inet6'"
op|','
string|"'addr'"
op|','
string|"'change'"
op|','
nl|'\n'
string|"'2001:db8::/64'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_test_initialize_gateway'
op|'('
name|'existing'
op|','
name|'expected'
op|','
name|'routes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_initialize_gateway_no_move_right_ip
dedent|''
name|'def'
name|'test_initialize_gateway_no_move_right_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'existing'
op|'='
op|'('
string|'"2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> "'
nl|'\n'
string|'"    mtu 1500 qdisc pfifo_fast state UNKNOWN qlen 1000\\n"'
nl|'\n'
string|'"    link/ether de:ad:be:ef:be:ef brd ff:ff:ff:ff:ff:ff\\n"'
nl|'\n'
string|'"    inet 192.168.1.1/24 brd 192.168.1.255 scope global eth0\\n"'
nl|'\n'
string|'"    inet 192.168.0.1/24 brd 192.168.0.255 scope global eth0\\n"'
nl|'\n'
string|'"    inet6 dead::beef:dead:beef:dead/64 scope link\\n"'
nl|'\n'
string|'"    valid_lft forever preferred_lft forever\\n"'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
nl|'\n'
op|'('
string|"'sysctl'"
op|','
string|"'-w'"
op|','
string|"'net.ipv4.ip_forward=1'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'show'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|','
string|"'scope'"
op|','
string|"'global'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'-f'"
op|','
string|"'inet6'"
op|','
string|"'addr'"
op|','
string|"'change'"
op|','
nl|'\n'
string|"'2001:db8::/64'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_test_initialize_gateway'
op|'('
name|'existing'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_initialize_gateway_add_if_blank
dedent|''
name|'def'
name|'test_initialize_gateway_add_if_blank'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'existing'
op|'='
op|'('
string|'"2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> "'
nl|'\n'
string|'"    mtu 1500 qdisc pfifo_fast state UNKNOWN qlen 1000\\n"'
nl|'\n'
string|'"    link/ether de:ad:be:ef:be:ef brd ff:ff:ff:ff:ff:ff\\n"'
nl|'\n'
string|'"    inet6 dead::beef:dead:beef:dead/64 scope link\\n"'
nl|'\n'
string|'"    valid_lft forever preferred_lft forever\\n"'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
nl|'\n'
op|'('
string|"'sysctl'"
op|','
string|"'-w'"
op|','
string|"'net.ipv4.ip_forward=1'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'show'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|','
string|"'scope'"
op|','
string|"'global'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'route'"
op|','
string|"'show'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'addr'"
op|','
string|"'add'"
op|','
string|"'192.168.1.1/24'"
op|','
nl|'\n'
string|"'brd'"
op|','
string|"'192.168.1.255'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|'('
string|"'ip'"
op|','
string|"'-f'"
op|','
string|"'inet6'"
op|','
string|"'addr'"
op|','
string|"'change'"
op|','
nl|'\n'
string|"'2001:db8::/64'"
op|','
string|"'dev'"
op|','
string|"'eth0'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_test_initialize_gateway'
op|'('
name|'existing'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_apply_ran
dedent|''
name|'def'
name|'test_apply_ran'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'linux_net'
op|'.'
name|'IptablesManager'
op|'('
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'iptables_apply_deferred'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'manager'
op|','
string|"'_apply'"
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'_apply'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'empty_ret'
op|'='
name|'manager'
op|'.'
name|'apply'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'empty_ret'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_apply_not_run
dedent|''
name|'def'
name|'test_apply_not_run'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'linux_net'
op|'.'
name|'IptablesManager'
op|'('
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'iptables_apply_deferred'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'manager'
op|','
string|"'_apply'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'apply'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_deferred_unset_apply_ran
dedent|''
name|'def'
name|'test_deferred_unset_apply_ran'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'linux_net'
op|'.'
name|'IptablesManager'
op|'('
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'iptables_apply_deferred'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'manager'
op|','
string|"'_apply'"
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'_apply'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'defer_apply_off'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'manager'
op|'.'
name|'iptables_apply_deferred'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
