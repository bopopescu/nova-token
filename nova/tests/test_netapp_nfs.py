begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2012 NetApp, Inc.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""Unit tests for the NetApp-specific NFS driver module (netapp_nfs)"""'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'volume'
name|'import'
name|'netapp'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'volume'
name|'import'
name|'netapp_nfs'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'volume'
name|'import'
name|'nfs'
newline|'\n'
nl|'\n'
name|'from'
name|'mox'
name|'import'
name|'IgnoreArg'
newline|'\n'
name|'from'
name|'mox'
name|'import'
name|'IsA'
newline|'\n'
name|'from'
name|'mox'
name|'import'
name|'MockObject'
newline|'\n'
nl|'\n'
name|'import'
name|'mox'
newline|'\n'
name|'import'
name|'suds'
newline|'\n'
name|'import'
name|'types'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeVolume
name|'class'
name|'FakeVolume'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'size'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'size'
op|'='
name|'size'
newline|'\n'
name|'self'
op|'.'
name|'id'
op|'='
name|'hash'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__getitem__
dedent|''
name|'def'
name|'__getitem__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'__dict__'
op|'['
name|'key'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeSnapshot
dedent|''
dedent|''
name|'class'
name|'FakeSnapshot'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'volume_size'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'volume_name'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'volume_id'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'volume_size'
op|'='
name|'volume_size'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'status'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__getitem__
dedent|''
name|'def'
name|'__getitem__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'__dict__'
op|'['
name|'key'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeResponce
dedent|''
dedent|''
name|'class'
name|'FakeResponce'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'status'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        :param status: Either \'failed\' or \'passed\'\n        """'
newline|'\n'
name|'self'
op|'.'
name|'Status'
op|'='
name|'status'
newline|'\n'
nl|'\n'
name|'if'
name|'status'
op|'=='
string|"'failed'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'Reason'
op|'='
string|"'Sample error'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NetappNfsDriverTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'NetappNfsDriverTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for NetApp specific NFS clone driver"""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_driver'
op|'='
name|'netapp_nfs'
op|'.'
name|'NetAppNFSDriver'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mox'
op|'='
name|'mox'
op|'.'
name|'Mox'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_for_setup_error
dedent|''
name|'def'
name|'test_check_for_setup_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mox'
op|'='
name|'self'
op|'.'
name|'_mox'
newline|'\n'
name|'drv'
op|'='
name|'self'
op|'.'
name|'_driver'
newline|'\n'
name|'required_flags'
op|'='
op|'['
nl|'\n'
string|"'netapp_wsdl_url'"
op|','
nl|'\n'
string|"'netapp_login'"
op|','
nl|'\n'
string|"'netapp_password'"
op|','
nl|'\n'
string|"'netapp_server_hostname'"
op|','
nl|'\n'
string|"'netapp_server_port'"
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
comment|'# check exception raises when flags are not set'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'drv'
op|'.'
name|'check_for_setup_error'
op|')'
newline|'\n'
nl|'\n'
comment|'# set required flags'
nl|'\n'
name|'for'
name|'flag'
name|'in'
name|'required_flags'
op|':'
newline|'\n'
indent|'            '
name|'setattr'
op|'('
name|'netapp'
op|'.'
name|'FLAGS'
op|','
name|'flag'
op|','
string|"'val'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'nfs'
op|'.'
name|'NfsDriver'
op|','
string|"'check_for_setup_error'"
op|')'
newline|'\n'
name|'nfs'
op|'.'
name|'NfsDriver'
op|'.'
name|'check_for_setup_error'
op|'('
op|')'
newline|'\n'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'drv'
op|'.'
name|'check_for_setup_error'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# restore initial FLAGS'
nl|'\n'
name|'for'
name|'flag'
name|'in'
name|'required_flags'
op|':'
newline|'\n'
indent|'            '
name|'delattr'
op|'('
name|'netapp'
op|'.'
name|'FLAGS'
op|','
name|'flag'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_do_setup
dedent|''
dedent|''
name|'def'
name|'test_do_setup'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mox'
op|'='
name|'self'
op|'.'
name|'_mox'
newline|'\n'
name|'drv'
op|'='
name|'self'
op|'.'
name|'_driver'
newline|'\n'
nl|'\n'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'drv'
op|','
string|"'check_for_setup_error'"
op|')'
newline|'\n'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'netapp_nfs'
op|'.'
name|'NetAppNFSDriver'
op|','
string|"'_get_client'"
op|')'
newline|'\n'
nl|'\n'
name|'drv'
op|'.'
name|'check_for_setup_error'
op|'('
op|')'
newline|'\n'
name|'netapp_nfs'
op|'.'
name|'NetAppNFSDriver'
op|'.'
name|'_get_client'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'drv'
op|'.'
name|'do_setup'
op|'('
name|'IsA'
op|'('
name|'context'
op|'.'
name|'RequestContext'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_snapshot
dedent|''
name|'def'
name|'test_create_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test snapshot can be created and deleted"""'
newline|'\n'
name|'mox'
op|'='
name|'self'
op|'.'
name|'_mox'
newline|'\n'
name|'drv'
op|'='
name|'self'
op|'.'
name|'_driver'
newline|'\n'
nl|'\n'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'drv'
op|','
string|"'_clone_volume'"
op|')'
newline|'\n'
name|'drv'
op|'.'
name|'_clone_volume'
op|'('
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'drv'
op|'.'
name|'create_snapshot'
op|'('
name|'FakeSnapshot'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_volume_from_snapshot
dedent|''
name|'def'
name|'test_create_volume_from_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Tests volume creation from snapshot"""'
newline|'\n'
name|'drv'
op|'='
name|'self'
op|'.'
name|'_driver'
newline|'\n'
name|'mox'
op|'='
name|'self'
op|'.'
name|'_mox'
newline|'\n'
name|'volume'
op|'='
name|'FakeVolume'
op|'('
number|'1'
op|')'
newline|'\n'
name|'snapshot'
op|'='
name|'FakeSnapshot'
op|'('
number|'2'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'drv'
op|'.'
name|'create_volume_from_snapshot'
op|','
nl|'\n'
name|'volume'
op|','
nl|'\n'
name|'snapshot'
op|')'
newline|'\n'
nl|'\n'
name|'snapshot'
op|'='
name|'FakeSnapshot'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'location'
op|'='
string|"'127.0.0.1:/nfs'"
newline|'\n'
name|'expected_result'
op|'='
op|'{'
string|"'provider_location'"
op|':'
name|'location'
op|'}'
newline|'\n'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'drv'
op|','
string|"'_clone_volume'"
op|')'
newline|'\n'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'drv'
op|','
string|"'_get_volume_location'"
op|')'
newline|'\n'
name|'drv'
op|'.'
name|'_clone_volume'
op|'('
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'drv'
op|'.'
name|'_get_volume_location'
op|'('
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'location'
op|')'
newline|'\n'
nl|'\n'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'loc'
op|'='
name|'drv'
op|'.'
name|'create_volume_from_snapshot'
op|'('
name|'volume'
op|','
name|'snapshot'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'loc'
op|','
name|'expected_result'
op|')'
newline|'\n'
nl|'\n'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_prepare_delete_snapshot_mock
dedent|''
name|'def'
name|'_prepare_delete_snapshot_mock'
op|'('
name|'self'
op|','
name|'snapshot_exists'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drv'
op|'='
name|'self'
op|'.'
name|'_driver'
newline|'\n'
name|'mox'
op|'='
name|'self'
op|'.'
name|'_mox'
newline|'\n'
nl|'\n'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'drv'
op|','
string|"'_get_provider_location'"
op|')'
newline|'\n'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'drv'
op|','
string|"'_volume_not_present'"
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'snapshot_exists'
op|':'
newline|'\n'
indent|'            '
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'drv'
op|','
string|"'_execute'"
op|')'
newline|'\n'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'drv'
op|','
string|"'_get_volume_path'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'drv'
op|'.'
name|'_get_provider_location'
op|'('
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'drv'
op|'.'
name|'_volume_not_present'
op|'('
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'not'
name|'snapshot_exists'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'snapshot_exists'
op|':'
newline|'\n'
indent|'            '
name|'drv'
op|'.'
name|'_get_volume_path'
op|'('
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'drv'
op|'.'
name|'_execute'
op|'('
string|"'rm'"
op|','
name|'None'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'mox'
newline|'\n'
nl|'\n'
DECL|member|test_delete_existing_snapshot
dedent|''
name|'def'
name|'test_delete_existing_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drv'
op|'='
name|'self'
op|'.'
name|'_driver'
newline|'\n'
name|'mox'
op|'='
name|'self'
op|'.'
name|'_prepare_delete_snapshot_mock'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'drv'
op|'.'
name|'delete_snapshot'
op|'('
name|'FakeSnapshot'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_missing_snapshot
dedent|''
name|'def'
name|'test_delete_missing_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drv'
op|'='
name|'self'
op|'.'
name|'_driver'
newline|'\n'
name|'mox'
op|'='
name|'self'
op|'.'
name|'_prepare_delete_snapshot_mock'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'drv'
op|'.'
name|'delete_snapshot'
op|'('
name|'FakeSnapshot'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_prepare_clone_mock
dedent|''
name|'def'
name|'_prepare_clone_mock'
op|'('
name|'self'
op|','
name|'status'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drv'
op|'='
name|'self'
op|'.'
name|'_driver'
newline|'\n'
name|'mox'
op|'='
name|'self'
op|'.'
name|'_mox'
newline|'\n'
nl|'\n'
name|'volume'
op|'='
name|'FakeVolume'
op|'('
op|')'
newline|'\n'
name|'setattr'
op|'('
name|'volume'
op|','
string|"'provider_location'"
op|','
string|"'127.0.0.1:/nfs'"
op|')'
newline|'\n'
nl|'\n'
name|'drv'
op|'.'
name|'_client'
op|'='
name|'MockObject'
op|'('
name|'suds'
op|'.'
name|'client'
op|'.'
name|'Client'
op|')'
newline|'\n'
name|'drv'
op|'.'
name|'_client'
op|'.'
name|'factory'
op|'='
name|'MockObject'
op|'('
name|'suds'
op|'.'
name|'client'
op|'.'
name|'Factory'
op|')'
newline|'\n'
name|'drv'
op|'.'
name|'_client'
op|'.'
name|'service'
op|'='
name|'MockObject'
op|'('
name|'suds'
op|'.'
name|'client'
op|'.'
name|'ServiceSelector'
op|')'
newline|'\n'
nl|'\n'
comment|'# ApiProxy() method is generated by ServiceSelector at runtime from the'
nl|'\n'
comment|'# XML, so mocking is impossible.'
nl|'\n'
name|'setattr'
op|'('
name|'drv'
op|'.'
name|'_client'
op|'.'
name|'service'
op|','
nl|'\n'
string|"'ApiProxy'"
op|','
nl|'\n'
name|'types'
op|'.'
name|'MethodType'
op|'('
name|'lambda'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|':'
name|'FakeResponce'
op|'('
name|'status'
op|')'
op|','
nl|'\n'
name|'suds'
op|'.'
name|'client'
op|'.'
name|'ServiceSelector'
op|')'
op|')'
newline|'\n'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'drv'
op|','
string|"'_get_host_id'"
op|')'
newline|'\n'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'drv'
op|','
string|"'_get_full_export_path'"
op|')'
newline|'\n'
nl|'\n'
name|'drv'
op|'.'
name|'_get_host_id'
op|'('
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'10'"
op|')'
newline|'\n'
name|'drv'
op|'.'
name|'_get_full_export_path'
op|'('
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'/nfs'"
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'mox'
newline|'\n'
nl|'\n'
DECL|member|test_successfull_clone_volume
dedent|''
name|'def'
name|'test_successfull_clone_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drv'
op|'='
name|'self'
op|'.'
name|'_driver'
newline|'\n'
name|'mox'
op|'='
name|'self'
op|'.'
name|'_prepare_clone_mock'
op|'('
string|"'passed'"
op|')'
newline|'\n'
nl|'\n'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'volume_name'
op|'='
string|"'volume_name'"
newline|'\n'
name|'clone_name'
op|'='
string|"'clone_name'"
newline|'\n'
name|'volume_id'
op|'='
name|'volume_name'
op|'+'
name|'str'
op|'('
name|'hash'
op|'('
name|'volume_name'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'drv'
op|'.'
name|'_clone_volume'
op|'('
name|'volume_name'
op|','
name|'clone_name'
op|','
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_failed_clone_volume
dedent|''
name|'def'
name|'test_failed_clone_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drv'
op|'='
name|'self'
op|'.'
name|'_driver'
newline|'\n'
name|'mox'
op|'='
name|'self'
op|'.'
name|'_prepare_clone_mock'
op|'('
string|"'failed'"
op|')'
newline|'\n'
nl|'\n'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'volume_name'
op|'='
string|"'volume_name'"
newline|'\n'
name|'clone_name'
op|'='
string|"'clone_name'"
newline|'\n'
name|'volume_id'
op|'='
name|'volume_name'
op|'+'
name|'str'
op|'('
name|'hash'
op|'('
name|'volume_name'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'drv'
op|'.'
name|'_clone_volume'
op|','
nl|'\n'
name|'volume_name'
op|','
name|'clone_name'
op|','
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
