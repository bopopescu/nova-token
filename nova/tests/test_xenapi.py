begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'#    Copyright (c) 2010 Citrix Systems, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Test suite for XenAPI."""'
newline|'\n'
nl|'\n'
name|'import'
name|'ast'
newline|'\n'
name|'import'
name|'contextlib'
newline|'\n'
name|'import'
name|'functools'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
nl|'\n'
name|'import'
name|'mox'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'aggregate_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'instance_types'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'power_state'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'importutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'db'
name|'import'
name|'fakes'
name|'as'
name|'db_fakes'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fake_network'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fake_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'glance'
name|'import'
name|'stubs'
name|'as'
name|'glance_stubs'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'xenapi'
name|'import'
name|'stubs'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
name|'import'
name|'connection'
name|'as'
name|'xenapi_conn'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
name|'import'
name|'fake'
name|'as'
name|'xenapi_fake'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
name|'import'
name|'vm_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
name|'import'
name|'vmops'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
name|'import'
name|'volume_utils'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|stub_vm_utils_with_vdi_attached_here
name|'def'
name|'stub_vm_utils_with_vdi_attached_here'
op|'('
name|'function'
op|','
name|'should_return'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    vm_utils.with_vdi_attached_here needs to be stubbed out because it\n    calls down to the filesystem to attach a vdi. This provides a\n    decorator to handle that.\n    """'
newline|'\n'
op|'@'
name|'functools'
op|'.'
name|'wraps'
op|'('
name|'function'
op|')'
newline|'\n'
DECL|function|decorated_function
name|'def'
name|'decorated_function'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
op|'@'
name|'contextlib'
op|'.'
name|'contextmanager'
newline|'\n'
DECL|function|fake_vdi_attached_here
name|'def'
name|'fake_vdi_attached_here'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fake_dev'
op|'='
string|"'fakedev'"
newline|'\n'
name|'yield'
name|'fake_dev'
newline|'\n'
nl|'\n'
DECL|function|fake_stream_disk
dedent|''
name|'def'
name|'fake_stream_disk'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fake_is_vdi_pv
dedent|''
name|'def'
name|'fake_is_vdi_pv'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'should_return'
newline|'\n'
nl|'\n'
dedent|''
name|'orig_vdi_attached_here'
op|'='
name|'vm_utils'
op|'.'
name|'vdi_attached_here'
newline|'\n'
name|'orig_stream_disk'
op|'='
name|'vm_utils'
op|'.'
name|'_stream_disk'
newline|'\n'
name|'orig_is_vdi_pv'
op|'='
name|'vm_utils'
op|'.'
name|'_is_vdi_pv'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'vm_utils'
op|'.'
name|'vdi_attached_here'
op|'='
name|'fake_vdi_attached_here'
newline|'\n'
name|'vm_utils'
op|'.'
name|'_stream_disk'
op|'='
name|'fake_stream_disk'
newline|'\n'
name|'vm_utils'
op|'.'
name|'_is_vdi_pv'
op|'='
name|'fake_is_vdi_pv'
newline|'\n'
name|'return'
name|'function'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'vm_utils'
op|'.'
name|'_is_vdi_pv'
op|'='
name|'orig_is_vdi_pv'
newline|'\n'
name|'vm_utils'
op|'.'
name|'_stream_disk'
op|'='
name|'orig_stream_disk'
newline|'\n'
name|'vm_utils'
op|'.'
name|'vdi_attached_here'
op|'='
name|'orig_vdi_attached_here'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'decorated_function'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|XenAPIVolumeTestCase
dedent|''
name|'class'
name|'XenAPIVolumeTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for Volume operations."""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'XenAPIVolumeTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'target_host'
op|'='
string|"'127.0.0.1'"
op|','
nl|'\n'
name|'xenapi_connection_url'
op|'='
string|"'test_url'"
op|','
nl|'\n'
name|'xenapi_connection_password'
op|'='
string|"'test_pass'"
op|','
nl|'\n'
name|'firewall_driver'
op|'='
string|"'nova.virt.xenapi.firewall.'"
nl|'\n'
string|"'Dom0IptablesFirewallDriver'"
op|')'
newline|'\n'
name|'db_fakes'
op|'.'
name|'stub_out_db_instance_api'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'xenapi_fake'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance_values'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'image_ref'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'kernel_id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
number|'20'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
string|"'3'"
op|','
comment|'# m1.large'
nl|'\n'
string|"'os_type'"
op|':'
string|"'linux'"
op|','
nl|'\n'
string|"'architecture'"
op|':'
string|"'x86-64'"
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_create_volume
dedent|''
name|'def'
name|'_create_volume'
op|'('
name|'self'
op|','
name|'size'
op|'='
string|"'0'"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a volume object."""'
newline|'\n'
name|'vol'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'vol'
op|'['
string|"'size'"
op|']'
op|'='
name|'size'
newline|'\n'
name|'vol'
op|'['
string|"'user_id'"
op|']'
op|'='
string|"'fake'"
newline|'\n'
name|'vol'
op|'['
string|"'project_id'"
op|']'
op|'='
string|"'fake'"
newline|'\n'
name|'vol'
op|'['
string|"'host'"
op|']'
op|'='
string|"'localhost'"
newline|'\n'
name|'vol'
op|'['
string|"'availability_zone'"
op|']'
op|'='
name|'FLAGS'
op|'.'
name|'storage_availability_zone'
newline|'\n'
name|'vol'
op|'['
string|"'status'"
op|']'
op|'='
string|'"creating"'
newline|'\n'
name|'vol'
op|'['
string|"'attach_status'"
op|']'
op|'='
string|'"detached"'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_make_info
name|'def'
name|'_make_info'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|"'driver_volume_type'"
op|':'
string|"'iscsi'"
op|','
nl|'\n'
string|"'data'"
op|':'
op|'{'
nl|'\n'
string|"'volume_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'target_iqn'"
op|':'
string|"'iqn.2010-10.org.openstack:volume-00000001'"
op|','
nl|'\n'
string|"'target_portal'"
op|':'
string|"'127.0.0.1:3260,fake'"
op|','
nl|'\n'
string|"'target_lun'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'auth_method'"
op|':'
string|"'CHAP'"
op|','
nl|'\n'
string|"'auth_method'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'auth_method'"
op|':'
string|"'fake'"
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_mountpoint_to_number
dedent|''
name|'def'
name|'test_mountpoint_to_number'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cases'
op|'='
op|'{'
nl|'\n'
string|"'sda'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'sdp'"
op|':'
number|'15'
op|','
nl|'\n'
string|"'hda'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'hdp'"
op|':'
number|'15'
op|','
nl|'\n'
string|"'vda'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'xvda'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'0'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'10'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'vdq'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'sdq'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'hdq'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'xvdq'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'for'
op|'('
name|'input'
op|','
name|'expected'
op|')'
name|'in'
name|'cases'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'func'
op|'='
name|'volume_utils'
op|'.'
name|'VolumeHelper'
op|'.'
name|'mountpoint_to_number'
newline|'\n'
name|'actual'
op|'='
name|'func'
op|'('
name|'input'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'actual'
op|','
name|'expected'
op|','
nl|'\n'
string|"'%s yielded %s, not %s'"
op|'%'
op|'('
name|'input'
op|','
name|'actual'
op|','
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_parse_volume_info_raise_exception
dedent|''
dedent|''
name|'def'
name|'test_parse_volume_info_raise_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""This shows how to test helper classes\' methods."""'
newline|'\n'
name|'stubs'
op|'.'
name|'stubout_session'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'stubs'
op|'.'
name|'FakeSessionForVolumeTests'
op|')'
newline|'\n'
name|'session'
op|'='
name|'xenapi_conn'
op|'.'
name|'XenAPISession'
op|'('
string|"'test_url'"
op|','
string|"'root'"
op|','
string|"'test_pass'"
op|')'
newline|'\n'
name|'helper'
op|'='
name|'volume_utils'
op|'.'
name|'VolumeHelper'
newline|'\n'
name|'helper'
op|'.'
name|'XenAPI'
op|'='
name|'session'
op|'.'
name|'get_imported_xenapi'
op|'('
op|')'
newline|'\n'
name|'vol'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
comment|'# oops, wrong mount point!'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'volume_utils'
op|'.'
name|'StorageError'
op|','
nl|'\n'
name|'helper'
op|'.'
name|'parse_volume_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_make_info'
op|'('
op|')'
op|','
nl|'\n'
string|"'dev/sd'"
nl|'\n'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_volume
dedent|''
name|'def'
name|'test_attach_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""This shows how to test Ops classes\' methods."""'
newline|'\n'
name|'stubs'
op|'.'
name|'stubout_session'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'stubs'
op|'.'
name|'FakeSessionForVolumeTests'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'xenapi_conn'
op|'.'
name|'get_connection'
op|'('
name|'False'
op|')'
newline|'\n'
name|'volume'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance_values'
op|')'
newline|'\n'
name|'vm'
op|'='
name|'xenapi_fake'
op|'.'
name|'create_vm'
op|'('
name|'instance'
op|'.'
name|'name'
op|','
string|"'Running'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'conn'
op|'.'
name|'attach_volume'
op|'('
name|'self'
op|'.'
name|'_make_info'
op|'('
op|')'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'name'
op|','
string|"'/dev/sdc'"
op|')'
newline|'\n'
nl|'\n'
comment|'# check that the VM has a VBD attached to it'
nl|'\n'
comment|'# Get XenAPI record for VBD'
nl|'\n'
name|'vbds'
op|'='
name|'xenapi_fake'
op|'.'
name|'get_all'
op|'('
string|"'VBD'"
op|')'
newline|'\n'
name|'vbd'
op|'='
name|'xenapi_fake'
op|'.'
name|'get_record'
op|'('
string|"'VBD'"
op|','
name|'vbds'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'vm_ref'
op|'='
name|'vbd'
op|'['
string|"'VM'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_ref'
op|','
name|'vm'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_volume_raise_exception
dedent|''
name|'def'
name|'test_attach_volume_raise_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""This shows how to test when exceptions are raised."""'
newline|'\n'
name|'stubs'
op|'.'
name|'stubout_session'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
nl|'\n'
name|'stubs'
op|'.'
name|'FakeSessionForVolumeFailedTests'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'xenapi_conn'
op|'.'
name|'get_connection'
op|'('
name|'False'
op|')'
newline|'\n'
name|'volume'
op|'='
name|'self'
op|'.'
name|'_create_volume'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance_values'
op|')'
newline|'\n'
name|'xenapi_fake'
op|'.'
name|'create_vm'
op|'('
name|'instance'
op|'.'
name|'name'
op|','
string|"'Running'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'VolumeDriverNotFound'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'attach_volume'
op|','
nl|'\n'
op|'{'
string|"'driver_volume_type'"
op|':'
string|"'nonexist'"
op|'}'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'name'
op|','
nl|'\n'
string|"'/dev/sdc'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|XenAPIVMTestCase
dedent|''
dedent|''
name|'class'
name|'XenAPIVMTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for VM operations."""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'XenAPIVMTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'FLAGS'
op|'.'
name|'network_manager'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'xenapi_connection_url'
op|'='
string|"'test_url'"
op|','
nl|'\n'
name|'xenapi_connection_password'
op|'='
string|"'test_pass'"
op|','
nl|'\n'
name|'instance_name_template'
op|'='
string|"'%d'"
op|','
nl|'\n'
name|'firewall_driver'
op|'='
string|"'nova.virt.xenapi.firewall.'"
nl|'\n'
string|"'Dom0IptablesFirewallDriver'"
op|')'
newline|'\n'
name|'xenapi_fake'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'xenapi_fake'
op|'.'
name|'create_local_srs'
op|'('
op|')'
newline|'\n'
name|'xenapi_fake'
op|'.'
name|'create_local_pifs'
op|'('
op|')'
newline|'\n'
name|'db_fakes'
op|'.'
name|'stub_out_db_instance_api'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'xenapi_fake'
op|'.'
name|'create_network'
op|'('
string|"'fake'"
op|','
name|'FLAGS'
op|'.'
name|'flat_network_bridge'
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'stubout_session'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'stubs'
op|'.'
name|'FakeSessionForVMTests'
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'stubout_get_this_vm_uuid'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'stubout_stream_disk'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'stubout_is_vdi_pv'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'stub_out_vm_methods'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'glance_stubs'
op|'.'
name|'stubout_glance_client'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'fake_utils'
op|'.'
name|'stub_out_utils_execute'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'='
name|'xenapi_conn'
op|'.'
name|'get_connection'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_host
dedent|''
name|'def'
name|'test_init_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'session'
op|'='
name|'xenapi_conn'
op|'.'
name|'XenAPISession'
op|'('
string|"'test_url'"
op|','
string|"'root'"
op|','
string|"'test_pass'"
op|')'
newline|'\n'
name|'vm'
op|'='
name|'vm_utils'
op|'.'
name|'get_this_vm_ref'
op|'('
name|'session'
op|')'
newline|'\n'
comment|'# Local root disk'
nl|'\n'
name|'vdi0'
op|'='
name|'xenapi_fake'
op|'.'
name|'create_vdi'
op|'('
string|"'compute'"
op|','
name|'None'
op|')'
newline|'\n'
name|'vbd0'
op|'='
name|'xenapi_fake'
op|'.'
name|'create_vbd'
op|'('
name|'vm'
op|','
name|'vdi0'
op|')'
newline|'\n'
comment|'# Instance VDI'
nl|'\n'
name|'vdi1'
op|'='
name|'xenapi_fake'
op|'.'
name|'create_vdi'
op|'('
string|"'instance-aaaa'"
op|','
name|'None'
op|','
nl|'\n'
name|'other_config'
op|'='
op|'{'
string|"'nova_instance_uuid'"
op|':'
string|"'aaaa'"
op|'}'
op|')'
newline|'\n'
name|'vbd1'
op|'='
name|'xenapi_fake'
op|'.'
name|'create_vbd'
op|'('
name|'vm'
op|','
name|'vdi1'
op|')'
newline|'\n'
comment|'# Only looks like instance VDI'
nl|'\n'
name|'vdi2'
op|'='
name|'xenapi_fake'
op|'.'
name|'create_vdi'
op|'('
string|"'instance-bbbb'"
op|','
name|'None'
op|')'
newline|'\n'
name|'vbd2'
op|'='
name|'xenapi_fake'
op|'.'
name|'create_vbd'
op|'('
name|'vm'
op|','
name|'vdi2'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'init_host'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'set'
op|'('
name|'xenapi_fake'
op|'.'
name|'get_all'
op|'('
string|"'VBD'"
op|')'
op|')'
op|','
name|'set'
op|'('
op|'['
name|'vbd0'
op|','
name|'vbd2'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_instances_0
dedent|''
name|'def'
name|'test_list_instances_0'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instances'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'instances'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_rrd_server
dedent|''
name|'def'
name|'test_get_rrd_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'xenapi_connection_url'
op|'='
string|"'myscheme://myaddress/'"
op|')'
newline|'\n'
name|'server_info'
op|'='
name|'vm_utils'
op|'.'
name|'get_rrd_server'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'server_info'
op|'['
number|'0'
op|']'
op|','
string|"'myscheme'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'server_info'
op|'['
number|'1'
op|']'
op|','
string|"'myaddress'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_diagnostics
dedent|''
name|'def'
name|'test_get_diagnostics'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_rrd
indent|'        '
name|'def'
name|'fake_get_rrd'
op|'('
name|'host'
op|','
name|'vm_uuid'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'open'
op|'('
string|"'xenapi/vm_rrd.xml'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'re'
op|'.'
name|'sub'
op|'('
string|"r'\\s'"
op|','
string|"''"
op|','
name|'f'
op|'.'
name|'read'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'vm_utils'
op|','
string|"'get_rrd'"
op|','
name|'fake_get_rrd'
op|')'
newline|'\n'
nl|'\n'
name|'fake_diagnostics'
op|'='
op|'{'
nl|'\n'
string|"'vbd_xvdb_write'"
op|':'
string|"'0.0'"
op|','
nl|'\n'
string|"'memory_target'"
op|':'
string|"'4294967296.0000'"
op|','
nl|'\n'
string|"'memory_internal_free'"
op|':'
string|"'1415564.0000'"
op|','
nl|'\n'
string|"'memory'"
op|':'
string|"'4294967296.0000'"
op|','
nl|'\n'
string|"'vbd_xvda_write'"
op|':'
string|"'0.0'"
op|','
nl|'\n'
string|"'cpu0'"
op|':'
string|"'0.0042'"
op|','
nl|'\n'
string|"'vif_0_tx'"
op|':'
string|"'287.4134'"
op|','
nl|'\n'
string|"'vbd_xvda_read'"
op|':'
string|"'0.0'"
op|','
nl|'\n'
string|"'vif_0_rx'"
op|':'
string|"'1816.0144'"
op|','
nl|'\n'
string|"'vif_2_rx'"
op|':'
string|"'0.0'"
op|','
nl|'\n'
string|"'vif_2_tx'"
op|':'
string|"'0.0'"
op|','
nl|'\n'
string|"'vbd_xvdb_read'"
op|':'
string|"'0.0'"
op|','
nl|'\n'
string|"'last_update'"
op|':'
string|"'1328795567'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'expected'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_diagnostics'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'fake_diagnostics'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_snapshot_fails_with_no_primary_vdi
dedent|''
name|'def'
name|'test_instance_snapshot_fails_with_no_primary_vdi'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|create_bad_vbd
indent|'        '
name|'def'
name|'create_bad_vbd'
op|'('
name|'vm_ref'
op|','
name|'vdi_ref'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'vbd_rec'
op|'='
op|'{'
string|"'VM'"
op|':'
name|'vm_ref'
op|','
nl|'\n'
string|"'VDI'"
op|':'
name|'vdi_ref'
op|','
nl|'\n'
string|"'userdevice'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'currently_attached'"
op|':'
name|'False'
op|'}'
newline|'\n'
name|'vbd_ref'
op|'='
name|'xenapi_fake'
op|'.'
name|'_create_object'
op|'('
string|"'VBD'"
op|','
name|'vbd_rec'
op|')'
newline|'\n'
name|'xenapi_fake'
op|'.'
name|'after_VBD_create'
op|'('
name|'vbd_ref'
op|','
name|'vbd_rec'
op|')'
newline|'\n'
name|'return'
name|'vbd_ref'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'xenapi_fake'
op|','
string|"'create_vbd'"
op|','
name|'create_bad_vbd'
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'stubout_instance_snapshot'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
comment|'# Stubbing out firewall driver as previous stub sets alters'
nl|'\n'
comment|'# xml rpc result parsing'
nl|'\n'
name|'stubs'
op|'.'
name|'stubout_firewall_driver'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'self'
op|'.'
name|'conn'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'name'
op|'='
string|'"MySnapshot"'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
name|'self'
op|'.'
name|'conn'
op|'.'
name|'snapshot'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_snapshot
dedent|''
name|'def'
name|'test_instance_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'stubs'
op|'.'
name|'stubout_instance_snapshot'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'stubout_is_snapshot'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
comment|'# Stubbing out firewall driver as previous stub sets alters'
nl|'\n'
comment|'# xml rpc result parsing'
nl|'\n'
name|'stubs'
op|'.'
name|'stubout_firewall_driver'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'self'
op|'.'
name|'conn'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'name'
op|'='
string|'"MySnapshot"'
newline|'\n'
name|'template_vm_ref'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure VM was torn down'
nl|'\n'
name|'vm_labels'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'vm_ref'
name|'in'
name|'xenapi_fake'
op|'.'
name|'get_all'
op|'('
string|"'VM'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'vm_rec'
op|'='
name|'xenapi_fake'
op|'.'
name|'get_record'
op|'('
string|"'VM'"
op|','
name|'vm_ref'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'vm_rec'
op|'['
string|'"is_control_domain"'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'vm_labels'
op|'.'
name|'append'
op|'('
name|'vm_rec'
op|'['
string|'"name_label"'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'vm_labels'
op|','
op|'['
name|'instance'
op|'.'
name|'name'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure VBDs were torn down'
nl|'\n'
name|'vbd_labels'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'vbd_ref'
name|'in'
name|'xenapi_fake'
op|'.'
name|'get_all'
op|'('
string|"'VBD'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'vbd_rec'
op|'='
name|'xenapi_fake'
op|'.'
name|'get_record'
op|'('
string|"'VBD'"
op|','
name|'vbd_ref'
op|')'
newline|'\n'
name|'vbd_labels'
op|'.'
name|'append'
op|'('
name|'vbd_rec'
op|'['
string|'"vm_name_label"'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'vbd_labels'
op|','
op|'['
name|'instance'
op|'.'
name|'name'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure VDIs were torn down'
nl|'\n'
name|'for'
name|'vdi_ref'
name|'in'
name|'xenapi_fake'
op|'.'
name|'get_all'
op|'('
string|"'VDI'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'vdi_rec'
op|'='
name|'xenapi_fake'
op|'.'
name|'get_record'
op|'('
string|"'VDI'"
op|','
name|'vdi_ref'
op|')'
newline|'\n'
name|'name_label'
op|'='
name|'vdi_rec'
op|'['
string|'"name_label"'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'not'
name|'name_label'
op|'.'
name|'endswith'
op|'('
string|"'snapshot'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_vm_record
dedent|''
dedent|''
name|'def'
name|'create_vm_record'
op|'('
name|'self'
op|','
name|'conn'
op|','
name|'os_type'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instances'
op|'='
name|'conn'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'instances'
op|','
op|'['
name|'name'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Get Nova record for VM'
nl|'\n'
name|'vm_info'
op|'='
name|'conn'
op|'.'
name|'get_info'
op|'('
op|'{'
string|"'name'"
op|':'
name|'name'
op|'}'
op|')'
newline|'\n'
comment|'# Get XenAPI record for VM'
nl|'\n'
name|'vms'
op|'='
op|'['
name|'rec'
name|'for'
name|'ref'
op|','
name|'rec'
nl|'\n'
name|'in'
name|'xenapi_fake'
op|'.'
name|'get_all_records'
op|'('
string|"'VM'"
op|')'
op|'.'
name|'iteritems'
op|'('
op|')'
nl|'\n'
name|'if'
name|'not'
name|'rec'
op|'['
string|"'is_control_domain'"
op|']'
op|']'
newline|'\n'
name|'vm'
op|'='
name|'vms'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'vm_info'
op|'='
name|'vm_info'
newline|'\n'
name|'self'
op|'.'
name|'vm'
op|'='
name|'vm'
newline|'\n'
nl|'\n'
DECL|member|check_vm_record
dedent|''
name|'def'
name|'check_vm_record'
op|'('
name|'self'
op|','
name|'conn'
op|','
name|'check_injection'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
comment|'# Check that m1.large above turned into the right thing.'
nl|'\n'
indent|'        '
name|'instance_type'
op|'='
name|'db'
op|'.'
name|'instance_type_get_by_name'
op|'('
name|'conn'
op|','
string|"'m1.large'"
op|')'
newline|'\n'
name|'mem_kib'
op|'='
name|'long'
op|'('
name|'instance_type'
op|'['
string|"'memory_mb'"
op|']'
op|')'
op|'<<'
number|'10'
newline|'\n'
name|'mem_bytes'
op|'='
name|'str'
op|'('
name|'mem_kib'
op|'<<'
number|'10'
op|')'
newline|'\n'
name|'vcpus'
op|'='
name|'instance_type'
op|'['
string|"'vcpus'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm_info'
op|'['
string|"'max_mem'"
op|']'
op|','
name|'mem_kib'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm_info'
op|'['
string|"'mem'"
op|']'
op|','
name|'mem_kib'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'memory_static_max'"
op|']'
op|','
name|'mem_bytes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'memory_dynamic_max'"
op|']'
op|','
name|'mem_bytes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'memory_dynamic_min'"
op|']'
op|','
name|'mem_bytes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'VCPUs_max'"
op|']'
op|','
name|'str'
op|'('
name|'vcpus'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'VCPUs_at_startup'"
op|']'
op|','
name|'str'
op|'('
name|'vcpus'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Check that the VM is running according to Nova'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm_info'
op|'['
string|"'state'"
op|']'
op|','
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
comment|'# Check that the VM is running according to XenAPI.'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'power_state'"
op|']'
op|','
string|"'Running'"
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'check_injection'
op|':'
newline|'\n'
indent|'            '
name|'xenstore_data'
op|'='
name|'self'
op|'.'
name|'vm'
op|'['
string|"'xenstore_data'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'xenstore_data'
op|'['
string|"'vm-data/hostname'"
op|']'
op|','
string|"'test'"
op|')'
newline|'\n'
name|'key'
op|'='
string|"'vm-data/networking/DEADBEEF0001'"
newline|'\n'
name|'xenstore_value'
op|'='
name|'xenstore_data'
op|'['
name|'key'
op|']'
newline|'\n'
name|'tcpip_data'
op|'='
name|'ast'
op|'.'
name|'literal_eval'
op|'('
name|'xenstore_value'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'tcpip_data'
op|','
nl|'\n'
op|'{'
string|"'broadcast'"
op|':'
string|"'192.168.1.255'"
op|','
nl|'\n'
string|"'dns'"
op|':'
op|'['
string|"'192.168.1.3'"
op|','
string|"'192.168.1.4'"
op|']'
op|','
nl|'\n'
string|"'gateway'"
op|':'
string|"'192.168.1.1'"
op|','
nl|'\n'
string|"'gateway_v6'"
op|':'
string|"'fe80::def'"
op|','
nl|'\n'
string|"'ip6s'"
op|':'
op|'['
op|'{'
string|"'enabled'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'ip'"
op|':'
string|"'2001:db8:0:1::1'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
number|'64'
op|','
nl|'\n'
string|"'gateway'"
op|':'
string|"'fe80::def'"
op|'}'
op|']'
op|','
nl|'\n'
string|"'ips'"
op|':'
op|'['
op|'{'
string|"'enabled'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'ip'"
op|':'
string|"'192.168.1.100'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'255.255.255.0'"
op|','
nl|'\n'
string|"'gateway'"
op|':'
string|"'192.168.1.1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'enabled'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'ip'"
op|':'
string|"'192.168.1.101'"
op|','
nl|'\n'
string|"'netmask'"
op|':'
string|"'255.255.255.0'"
op|','
nl|'\n'
string|"'gateway'"
op|':'
string|"'192.168.1.1'"
op|'}'
op|']'
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'test1'"
op|','
nl|'\n'
string|"'mac'"
op|':'
string|"'DE:AD:BE:EF:00:01'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|check_vm_params_for_windows
dedent|''
dedent|''
name|'def'
name|'check_vm_params_for_windows'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'platform'"
op|']'
op|'['
string|"'nx'"
op|']'
op|','
string|"'true'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'HVM_boot_params'"
op|']'
op|','
op|'{'
string|"'order'"
op|':'
string|"'dc'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'HVM_boot_policy'"
op|']'
op|','
string|"'BIOS order'"
op|')'
newline|'\n'
nl|'\n'
comment|'# check that these are not set'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'PV_args'"
op|']'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'PV_bootloader'"
op|']'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'PV_kernel'"
op|']'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'PV_ramdisk'"
op|']'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|check_vm_params_for_linux
dedent|''
name|'def'
name|'check_vm_params_for_linux'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'platform'"
op|']'
op|'['
string|"'nx'"
op|']'
op|','
string|"'false'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'PV_args'"
op|']'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'PV_bootloader'"
op|']'
op|','
string|"'pygrub'"
op|')'
newline|'\n'
nl|'\n'
comment|'# check that these are not set'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'PV_kernel'"
op|']'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'PV_ramdisk'"
op|']'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'HVM_boot_params'"
op|']'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'HVM_boot_policy'"
op|']'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|check_vm_params_for_linux_with_external_kernel
dedent|''
name|'def'
name|'check_vm_params_for_linux_with_external_kernel'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'platform'"
op|']'
op|'['
string|"'nx'"
op|']'
op|','
string|"'false'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'PV_args'"
op|']'
op|','
string|"'root=/dev/xvda1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'PV_kernel'"
op|']'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'PV_ramdisk'"
op|']'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
comment|'# check that these are not set'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'HVM_boot_params'"
op|']'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'HVM_boot_policy'"
op|']'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_list_vdis
dedent|''
name|'def'
name|'_list_vdis'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'url'
op|'='
name|'FLAGS'
op|'.'
name|'xenapi_connection_url'
newline|'\n'
name|'username'
op|'='
name|'FLAGS'
op|'.'
name|'xenapi_connection_username'
newline|'\n'
name|'password'
op|'='
name|'FLAGS'
op|'.'
name|'xenapi_connection_password'
newline|'\n'
name|'session'
op|'='
name|'xenapi_conn'
op|'.'
name|'XenAPISession'
op|'('
name|'url'
op|','
name|'username'
op|','
name|'password'
op|')'
newline|'\n'
name|'return'
name|'session'
op|'.'
name|'call_xenapi'
op|'('
string|"'VDI.get_all'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_vdis
dedent|''
name|'def'
name|'_check_vdis'
op|'('
name|'self'
op|','
name|'start_list'
op|','
name|'end_list'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'vdi_ref'
name|'in'
name|'end_list'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'vdi_ref'
name|'in'
name|'start_list'
op|':'
newline|'\n'
indent|'                '
name|'vdi_rec'
op|'='
name|'xenapi_fake'
op|'.'
name|'get_record'
op|'('
string|"'VDI'"
op|','
name|'vdi_ref'
op|')'
newline|'\n'
comment|'# If the cache is turned on then the base disk will be'
nl|'\n'
comment|'# there even after the cleanup'
nl|'\n'
name|'if'
string|"'other_config'"
name|'in'
name|'vdi_rec'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'vdi_rec'
op|'['
string|"'other_config'"
op|']'
op|'['
string|"'image-id'"
op|']'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'Found unexpected VDI:%s'"
op|'%'
name|'vdi_ref'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'Found unexpected VDI:%s'"
op|'%'
name|'vdi_ref'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_spawn
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'_test_spawn'
op|'('
name|'self'
op|','
name|'image_ref'
op|','
name|'kernel_id'
op|','
name|'ramdisk_id'
op|','
nl|'\n'
name|'instance_type_id'
op|'='
string|'"3"'
op|','
name|'os_type'
op|'='
string|'"linux"'
op|','
nl|'\n'
name|'hostname'
op|'='
string|'"test"'
op|','
name|'architecture'
op|'='
string|'"x86-64"'
op|','
name|'instance_id'
op|'='
number|'1'
op|','
nl|'\n'
name|'check_injection'
op|'='
name|'False'
op|','
nl|'\n'
name|'create_record'
op|'='
name|'True'
op|','
name|'empty_dns'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'create_record'
op|':'
newline|'\n'
indent|'            '
name|'instance_values'
op|'='
op|'{'
string|"'id'"
op|':'
name|'instance_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'image_ref'"
op|':'
name|'image_ref'
op|','
nl|'\n'
string|"'kernel_id'"
op|':'
name|'kernel_id'
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
name|'ramdisk_id'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
number|'20'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
name|'instance_type_id'
op|','
nl|'\n'
string|"'os_type'"
op|':'
name|'os_type'
op|','
nl|'\n'
string|"'hostname'"
op|':'
name|'hostname'
op|','
nl|'\n'
string|"'architecture'"
op|':'
name|'architecture'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_values'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'network_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
nl|'\n'
name|'spectacular'
op|'='
name|'True'
op|')'
newline|'\n'
name|'if'
name|'empty_dns'
op|':'
newline|'\n'
comment|'# NOTE(tr3buchet): this is a terrible way to do this...'
nl|'\n'
indent|'            '
name|'network_info'
op|'['
number|'0'
op|']'
op|'['
string|"'network'"
op|']'
op|'['
string|"'subnets'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'dns'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
comment|"# admin_pass isn't part of the DB model, but it does get set as"
nl|'\n'
comment|'# an attribute for spawn to use'
nl|'\n'
dedent|''
name|'instance'
op|'.'
name|'admin_pass'
op|'='
string|"'herp'"
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
name|'glance_stubs'
op|'.'
name|'FakeGlance'
op|'.'
name|'IMAGE_VHD'
op|','
nl|'\n'
string|"'disk_format'"
op|':'
string|"'vhd'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'image_meta'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_vm_record'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
name|'os_type'
op|','
name|'instance'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_vm_record'
op|'('
name|'self'
op|'.'
name|'conn'
op|','
name|'check_injection'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance'
op|'.'
name|'os_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance'
op|'.'
name|'architecture'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_empty_dns
dedent|''
name|'def'
name|'test_spawn_empty_dns'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test spawning with an empty dns list"""'
newline|'\n'
name|'self'
op|'.'
name|'_test_spawn'
op|'('
name|'glance_stubs'
op|'.'
name|'FakeGlance'
op|'.'
name|'IMAGE_VHD'
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
name|'os_type'
op|'='
string|'"linux"'
op|','
name|'architecture'
op|'='
string|'"x86-64"'
op|','
nl|'\n'
name|'empty_dns'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_vm_params_for_linux'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_not_enough_memory
dedent|''
name|'def'
name|'test_spawn_not_enough_memory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InsufficientFreeMemory'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_spawn'
op|','
nl|'\n'
number|'1'
op|','
number|'2'
op|','
number|'3'
op|','
string|'"4"'
op|')'
comment|'# m1.xlarge'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_fail_cleanup_1
dedent|''
name|'def'
name|'test_spawn_fail_cleanup_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Simulates an error while downloading an image.\n\n        Verifies that VDIs created are properly cleaned up.\n\n        """'
newline|'\n'
name|'vdi_recs_start'
op|'='
name|'self'
op|'.'
name|'_list_vdis'
op|'('
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'stubout_fetch_image_glance_disk'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'raise_failure'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'xenapi_fake'
op|'.'
name|'Failure'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_spawn'
op|','
number|'1'
op|','
number|'2'
op|','
number|'3'
op|')'
newline|'\n'
comment|'# No additional VDI should be found.'
nl|'\n'
name|'vdi_recs_end'
op|'='
name|'self'
op|'.'
name|'_list_vdis'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vdis'
op|'('
name|'vdi_recs_start'
op|','
name|'vdi_recs_end'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_fail_cleanup_2
dedent|''
name|'def'
name|'test_spawn_fail_cleanup_2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Simulates an error while creating VM record.\n\n        It verifies that VDIs created are properly cleaned up.\n\n        """'
newline|'\n'
name|'vdi_recs_start'
op|'='
name|'self'
op|'.'
name|'_list_vdis'
op|'('
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'stubout_create_vm'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'xenapi_fake'
op|'.'
name|'Failure'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_spawn'
op|','
number|'1'
op|','
number|'2'
op|','
number|'3'
op|')'
newline|'\n'
comment|'# No additional VDI should be found.'
nl|'\n'
name|'vdi_recs_end'
op|'='
name|'self'
op|'.'
name|'_list_vdis'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_vdis'
op|'('
name|'vdi_recs_start'
op|','
name|'vdi_recs_end'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'stub_vm_utils_with_vdi_attached_here'
newline|'\n'
DECL|member|test_spawn_raw_glance
name|'def'
name|'test_spawn_raw_glance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_spawn'
op|'('
name|'glance_stubs'
op|'.'
name|'FakeGlance'
op|'.'
name|'IMAGE_RAW'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_vm_params_for_linux'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_vhd_glance_linux
dedent|''
name|'def'
name|'test_spawn_vhd_glance_linux'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_spawn'
op|'('
name|'glance_stubs'
op|'.'
name|'FakeGlance'
op|'.'
name|'IMAGE_VHD'
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
name|'os_type'
op|'='
string|'"linux"'
op|','
name|'architecture'
op|'='
string|'"x86-64"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_vm_params_for_linux'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_vhd_glance_swapdisk
dedent|''
name|'def'
name|'test_spawn_vhd_glance_swapdisk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Change the default host_call_plugin to one that'll return"
nl|'\n'
comment|'# a swap disk'
nl|'\n'
indent|'        '
name|'orig_func'
op|'='
name|'stubs'
op|'.'
name|'FakeSessionForVMTests'
op|'.'
name|'host_call_plugin'
newline|'\n'
name|'_host_call_plugin'
op|'='
name|'stubs'
op|'.'
name|'FakeSessionForVMTests'
op|'.'
name|'host_call_plugin_swap'
newline|'\n'
name|'stubs'
op|'.'
name|'FakeSessionForVMTests'
op|'.'
name|'host_call_plugin'
op|'='
name|'_host_call_plugin'
newline|'\n'
comment|'# Stubbing out firewall driver as previous stub sets a particular'
nl|'\n'
comment|'# stub for async plugin calls'
nl|'\n'
name|'stubs'
op|'.'
name|'stubout_firewall_driver'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'self'
op|'.'
name|'conn'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
comment|"# We'll steal the above glance linux test"
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'test_spawn_vhd_glance_linux'
op|'('
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
comment|'# Make sure to put this back'
nl|'\n'
indent|'            '
name|'stubs'
op|'.'
name|'FakeSessionForVMTests'
op|'.'
name|'host_call_plugin'
op|'='
name|'orig_func'
newline|'\n'
nl|'\n'
comment|'# We should have 2 VBDs.'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'VBDs'"
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
comment|'# Now test that we have 1.'
nl|'\n'
name|'self'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'test_spawn_vhd_glance_linux'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'vm'
op|'['
string|"'VBDs'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_vhd_glance_windows
dedent|''
name|'def'
name|'test_spawn_vhd_glance_windows'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_spawn'
op|'('
name|'glance_stubs'
op|'.'
name|'FakeGlance'
op|'.'
name|'IMAGE_VHD'
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
name|'os_type'
op|'='
string|'"windows"'
op|','
name|'architecture'
op|'='
string|'"i386"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_vm_params_for_windows'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_iso_glance
dedent|''
name|'def'
name|'test_spawn_iso_glance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_spawn'
op|'('
name|'glance_stubs'
op|'.'
name|'FakeGlance'
op|'.'
name|'IMAGE_ISO'
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
name|'os_type'
op|'='
string|'"windows"'
op|','
name|'architecture'
op|'='
string|'"i386"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_vm_params_for_windows'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_glance
dedent|''
name|'def'
name|'test_spawn_glance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'stubs'
op|'.'
name|'stubout_fetch_image_glance_disk'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_spawn'
op|'('
name|'glance_stubs'
op|'.'
name|'FakeGlance'
op|'.'
name|'IMAGE_MACHINE'
op|','
nl|'\n'
name|'glance_stubs'
op|'.'
name|'FakeGlance'
op|'.'
name|'IMAGE_KERNEL'
op|','
nl|'\n'
name|'glance_stubs'
op|'.'
name|'FakeGlance'
op|'.'
name|'IMAGE_RAMDISK'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_vm_params_for_linux_with_external_kernel'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_netinject_file
dedent|''
name|'def'
name|'test_spawn_netinject_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'flat_injected'
op|'='
name|'True'
op|')'
newline|'\n'
name|'db_fakes'
op|'.'
name|'stub_out_db_instance_api'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'injected'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_tee_executed'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|_tee_handler
name|'def'
name|'_tee_handler'
op|'('
name|'cmd'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'input'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'process_input'"
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'input'
op|','
name|'None'
op|')'
newline|'\n'
name|'config'
op|'='
op|'['
name|'line'
op|'.'
name|'strip'
op|'('
op|')'
name|'for'
name|'line'
name|'in'
name|'input'
op|'.'
name|'split'
op|'('
string|'"\\n"'
op|')'
op|']'
newline|'\n'
comment|'# Find the start of eth0 configuration and check it'
nl|'\n'
name|'index'
op|'='
name|'config'
op|'.'
name|'index'
op|'('
string|"'auto eth0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'config'
op|'['
name|'index'
op|'+'
number|'1'
op|':'
name|'index'
op|'+'
number|'8'
op|']'
op|','
op|'['
nl|'\n'
string|"'iface eth0 inet static'"
op|','
nl|'\n'
string|"'address 192.168.1.100'"
op|','
nl|'\n'
string|"'netmask 255.255.255.0'"
op|','
nl|'\n'
string|"'broadcast 192.168.1.255'"
op|','
nl|'\n'
string|"'gateway 192.168.1.1'"
op|','
nl|'\n'
string|"'dns-nameservers 192.168.1.3 192.168.1.4'"
op|','
nl|'\n'
string|"''"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_tee_executed'
op|'='
name|'True'
newline|'\n'
name|'return'
string|"''"
op|','
string|"''"
newline|'\n'
nl|'\n'
dedent|''
name|'fake_utils'
op|'.'
name|'fake_execute_set_repliers'
op|'('
op|'['
nl|'\n'
comment|'# Capture the tee .../etc/network/interfaces command'
nl|'\n'
op|'('
string|"r'tee.*interfaces'"
op|','
name|'_tee_handler'
op|')'
op|','
nl|'\n'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_spawn'
op|'('
name|'glance_stubs'
op|'.'
name|'FakeGlance'
op|'.'
name|'IMAGE_MACHINE'
op|','
nl|'\n'
name|'glance_stubs'
op|'.'
name|'FakeGlance'
op|'.'
name|'IMAGE_KERNEL'
op|','
nl|'\n'
name|'glance_stubs'
op|'.'
name|'FakeGlance'
op|'.'
name|'IMAGE_RAMDISK'
op|','
nl|'\n'
name|'check_injection'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'_tee_executed'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_netinject_xenstore
dedent|''
name|'def'
name|'test_spawn_netinject_xenstore'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_fakes'
op|'.'
name|'stub_out_db_instance_api'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'injected'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_tee_executed'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|_mount_handler
name|'def'
name|'_mount_handler'
op|'('
name|'cmd'
op|','
op|'*'
name|'ignore_args'
op|','
op|'**'
name|'ignore_kwargs'
op|')'
op|':'
newline|'\n'
comment|'# When mounting, create real files under the mountpoint to simulate'
nl|'\n'
comment|'# files in the mounted filesystem'
nl|'\n'
nl|'\n'
comment|'# mount point will be the last item of the command list'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'_tmpdir'
op|'='
name|'cmd'
op|'['
name|'len'
op|'('
name|'cmd'
op|')'
op|'-'
number|'1'
op|']'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'Creating files in %s to simulate guest agent'"
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_tmpdir'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'makedirs'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'_tmpdir'
op|','
string|"'usr'"
op|','
string|"'sbin'"
op|')'
op|')'
newline|'\n'
comment|'# Touch the file using open'
nl|'\n'
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'_tmpdir'
op|','
string|"'usr'"
op|','
string|"'sbin'"
op|','
nl|'\n'
string|"'xe-update-networking'"
op|')'
op|','
string|"'w'"
op|')'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'return'
string|"''"
op|','
string|"''"
newline|'\n'
nl|'\n'
DECL|function|_umount_handler
dedent|''
name|'def'
name|'_umount_handler'
op|'('
name|'cmd'
op|','
op|'*'
name|'ignore_args'
op|','
op|'**'
name|'ignore_kwargs'
op|')'
op|':'
newline|'\n'
comment|'# Umount would normall make files in the m,ounted filesystem'
nl|'\n'
comment|'# disappear, so do that here'
nl|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'Removing simulated guest agent files in %s'"
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_tmpdir'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'remove'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'_tmpdir'
op|','
string|"'usr'"
op|','
string|"'sbin'"
op|','
nl|'\n'
string|"'xe-update-networking'"
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'rmdir'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'_tmpdir'
op|','
string|"'usr'"
op|','
string|"'sbin'"
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'rmdir'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'_tmpdir'
op|','
string|"'usr'"
op|')'
op|')'
newline|'\n'
name|'return'
string|"''"
op|','
string|"''"
newline|'\n'
nl|'\n'
DECL|function|_tee_handler
dedent|''
name|'def'
name|'_tee_handler'
op|'('
name|'cmd'
op|','
op|'*'
name|'ignore_args'
op|','
op|'**'
name|'ignore_kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_tee_executed'
op|'='
name|'True'
newline|'\n'
name|'return'
string|"''"
op|','
string|"''"
newline|'\n'
nl|'\n'
dedent|''
name|'fake_utils'
op|'.'
name|'fake_execute_set_repliers'
op|'('
op|'['
nl|'\n'
op|'('
string|"r'mount'"
op|','
name|'_mount_handler'
op|')'
op|','
nl|'\n'
op|'('
string|"r'umount'"
op|','
name|'_umount_handler'
op|')'
op|','
nl|'\n'
op|'('
string|"r'tee.*interfaces'"
op|','
name|'_tee_handler'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_spawn'
op|'('
number|'1'
op|','
number|'2'
op|','
number|'3'
op|','
name|'check_injection'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
comment|'# tee must not run in this case, where an injection-capable'
nl|'\n'
comment|'# guest agent is detected'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'_tee_executed'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_vlanmanager
dedent|''
name|'def'
name|'test_spawn_vlanmanager'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'image_service'
op|'='
string|"'nova.image.glance.GlanceImageService'"
op|','
nl|'\n'
name|'network_manager'
op|'='
string|"'nova.network.manager.VlanManager'"
op|','
nl|'\n'
name|'vlan_interface'
op|'='
string|"'fake0'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|dummy
name|'def'
name|'dummy'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'vmops'
op|'.'
name|'VMOps'
op|','
string|"'_create_vifs'"
op|','
name|'dummy'
op|')'
newline|'\n'
comment|'# Reset network table'
nl|'\n'
name|'xenapi_fake'
op|'.'
name|'reset_table'
op|'('
string|"'network'"
op|')'
newline|'\n'
comment|'# Instance id = 2 will use vlan network (see db/fakes.py)'
nl|'\n'
name|'ctxt'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
number|'2'
op|','
name|'False'
op|')'
newline|'\n'
name|'networks'
op|'='
name|'self'
op|'.'
name|'network'
op|'.'
name|'db'
op|'.'
name|'network_get_all'
op|'('
name|'ctxt'
op|')'
newline|'\n'
name|'for'
name|'network'
name|'in'
name|'networks'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'network'
op|'.'
name|'set_network_host'
op|'('
name|'ctxt'
op|','
name|'network'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'network'
op|'.'
name|'allocate_for_instance'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'instance_id'
op|'='
number|'2'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|'"00000000-0000-0000-0000-000000000000"'
op|','
nl|'\n'
name|'host'
op|'='
name|'FLAGS'
op|'.'
name|'host'
op|','
nl|'\n'
name|'vpn'
op|'='
name|'None'
op|','
nl|'\n'
name|'rxtx_factor'
op|'='
number|'3'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_spawn'
op|'('
name|'glance_stubs'
op|'.'
name|'FakeGlance'
op|'.'
name|'IMAGE_MACHINE'
op|','
nl|'\n'
name|'glance_stubs'
op|'.'
name|'FakeGlance'
op|'.'
name|'IMAGE_KERNEL'
op|','
nl|'\n'
name|'glance_stubs'
op|'.'
name|'FakeGlance'
op|'.'
name|'IMAGE_RAMDISK'
op|','
nl|'\n'
name|'instance_id'
op|'='
number|'2'
op|','
nl|'\n'
name|'create_record'
op|'='
name|'False'
op|')'
newline|'\n'
comment|'# TODO(salvatore-orlando): a complete test here would require'
nl|'\n'
comment|"# a check for making sure the bridge for the VM's VIF is"
nl|'\n'
comment|'# consistent with bridge specified in nova db'
nl|'\n'
nl|'\n'
DECL|member|test_spawn_with_network_qos
dedent|''
name|'def'
name|'test_spawn_with_network_qos'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'for'
name|'vif_ref'
name|'in'
name|'xenapi_fake'
op|'.'
name|'get_all'
op|'('
string|"'VIF'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'vif_rec'
op|'='
name|'xenapi_fake'
op|'.'
name|'get_record'
op|'('
string|"'VIF'"
op|','
name|'vif_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'vif_rec'
op|'['
string|"'qos_algorithm_type'"
op|']'
op|','
string|"'ratelimit'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'vif_rec'
op|'['
string|"'qos_algorithm_params'"
op|']'
op|'['
string|"'kbps'"
op|']'
op|','
nl|'\n'
name|'str'
op|'('
number|'3'
op|'*'
number|'10'
op|'*'
number|'1024'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rescue
dedent|''
dedent|''
name|'def'
name|'test_rescue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'session'
op|'='
name|'xenapi_conn'
op|'.'
name|'XenAPISession'
op|'('
string|"'test_url'"
op|','
string|"'root'"
op|','
string|"'test_pass'"
op|')'
newline|'\n'
name|'vm_ref'
op|'='
name|'vm_utils'
op|'.'
name|'VMHelper'
op|'.'
name|'lookup'
op|'('
name|'session'
op|','
name|'instance'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
name|'xenapi_fake'
op|'.'
name|'create_vbd'
op|'('
name|'vm_ref'
op|','
string|'"swap"'
op|','
name|'userdevice'
op|'='
number|'1'
op|')'
newline|'\n'
name|'xenapi_fake'
op|'.'
name|'create_vbd'
op|'('
name|'vm_ref'
op|','
string|'"rootfs"'
op|','
name|'userdevice'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'xenapi_conn'
op|'.'
name|'get_connection'
op|'('
name|'False'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
name|'glance_stubs'
op|'.'
name|'FakeGlance'
op|'.'
name|'IMAGE_VHD'
op|','
nl|'\n'
string|"'disk_format'"
op|':'
string|"'vhd'"
op|'}'
newline|'\n'
name|'conn'
op|'.'
name|'rescue'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
op|'['
op|']'
op|','
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'vm'
op|'='
name|'xenapi_fake'
op|'.'
name|'get_record'
op|'('
string|"'VM'"
op|','
name|'vm_ref'
op|')'
newline|'\n'
name|'rescue_name'
op|'='
string|'"%s-rescue"'
op|'%'
name|'vm'
op|'['
string|'"name_label"'
op|']'
newline|'\n'
name|'rescue_ref'
op|'='
name|'vm_utils'
op|'.'
name|'VMHelper'
op|'.'
name|'lookup'
op|'('
name|'session'
op|','
name|'rescue_name'
op|')'
newline|'\n'
name|'rescue_vm'
op|'='
name|'xenapi_fake'
op|'.'
name|'get_record'
op|'('
string|"'VM'"
op|','
name|'rescue_ref'
op|')'
newline|'\n'
nl|'\n'
name|'vdi_uuids'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'vbd_uuid'
name|'in'
name|'rescue_vm'
op|'['
string|'"VBDs"'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'vdi_uuids'
op|'.'
name|'append'
op|'('
name|'xenapi_fake'
op|'.'
name|'get_record'
op|'('
string|"'VBD'"
op|','
name|'vbd_uuid'
op|')'
op|'['
string|'"VDI"'
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|'"swap"'
name|'not'
name|'in'
name|'vdi_uuids'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unrescue
dedent|''
name|'def'
name|'test_unrescue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'xenapi_conn'
op|'.'
name|'get_connection'
op|'('
name|'False'
op|')'
newline|'\n'
comment|'# Unrescue expects the original instance to be powered off'
nl|'\n'
name|'conn'
op|'.'
name|'power_off'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'rescue_vm'
op|'='
name|'xenapi_fake'
op|'.'
name|'create_vm'
op|'('
name|'instance'
op|'.'
name|'name'
op|'+'
string|"'-rescue'"
op|','
string|"'Running'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'unrescue'
op|'('
name|'instance'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unrescue_not_in_rescue
dedent|''
name|'def'
name|'test_unrescue_not_in_rescue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'='
name|'xenapi_conn'
op|'.'
name|'get_connection'
op|'('
name|'False'
op|')'
newline|'\n'
comment|'# Ensure that it will not unrescue a non-rescued instance.'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotInRescueMode'
op|','
name|'conn'
op|'.'
name|'unrescue'
op|','
nl|'\n'
name|'instance'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_revert_migration
dedent|''
name|'def'
name|'test_finish_revert_migration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|class|VMOpsMock
name|'class'
name|'VMOpsMock'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'finish_revert_migration_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|finish_revert_migration
dedent|''
name|'def'
name|'finish_revert_migration'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'finish_revert_migration_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'conn'
op|'='
name|'xenapi_conn'
op|'.'
name|'get_connection'
op|'('
name|'False'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'_vmops'
op|'='
name|'VMOpsMock'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'finish_revert_migration'
op|'('
name|'instance'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'conn'
op|'.'
name|'_vmops'
op|'.'
name|'finish_revert_migration_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_instance
dedent|''
name|'def'
name|'_create_instance'
op|'('
name|'self'
op|','
name|'instance_id'
op|'='
number|'1'
op|','
name|'spawn'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates and spawns a test instance."""'
newline|'\n'
name|'instance_values'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
name|'instance_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'image_ref'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'kernel_id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
number|'20'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
string|"'3'"
op|','
comment|'# m1.large'
nl|'\n'
string|"'os_type'"
op|':'
string|"'linux'"
op|','
nl|'\n'
string|"'architecture'"
op|':'
string|"'x86-64'"
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_values'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
nl|'\n'
name|'spectacular'
op|'='
name|'True'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
name|'glance_stubs'
op|'.'
name|'FakeGlance'
op|'.'
name|'IMAGE_VHD'
op|','
nl|'\n'
string|"'disk_format'"
op|':'
string|"'vhd'"
op|'}'
newline|'\n'
name|'if'
name|'spawn'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'.'
name|'admin_pass'
op|'='
string|"'herp'"
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'image_meta'
op|','
name|'network_info'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'instance'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|XenAPIDiffieHellmanTestCase
dedent|''
dedent|''
name|'class'
name|'XenAPIDiffieHellmanTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for Diffie-Hellman code."""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'XenAPIDiffieHellmanTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'alice'
op|'='
name|'vmops'
op|'.'
name|'SimpleDH'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'bob'
op|'='
name|'vmops'
op|'.'
name|'SimpleDH'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shared
dedent|''
name|'def'
name|'test_shared'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'alice_pub'
op|'='
name|'self'
op|'.'
name|'alice'
op|'.'
name|'get_public'
op|'('
op|')'
newline|'\n'
name|'bob_pub'
op|'='
name|'self'
op|'.'
name|'bob'
op|'.'
name|'get_public'
op|'('
op|')'
newline|'\n'
name|'alice_shared'
op|'='
name|'self'
op|'.'
name|'alice'
op|'.'
name|'compute_shared'
op|'('
name|'bob_pub'
op|')'
newline|'\n'
name|'bob_shared'
op|'='
name|'self'
op|'.'
name|'bob'
op|'.'
name|'compute_shared'
op|'('
name|'alice_pub'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'alice_shared'
op|','
name|'bob_shared'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_encryption
dedent|''
name|'def'
name|'_test_encryption'
op|'('
name|'self'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'enc'
op|'='
name|'self'
op|'.'
name|'alice'
op|'.'
name|'encrypt'
op|'('
name|'message'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'enc'
op|'.'
name|'endswith'
op|'('
string|"'\\n'"
op|')'
op|')'
newline|'\n'
name|'dec'
op|'='
name|'self'
op|'.'
name|'bob'
op|'.'
name|'decrypt'
op|'('
name|'enc'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'dec'
op|','
name|'message'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_encrypt_simple_message
dedent|''
name|'def'
name|'test_encrypt_simple_message'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_encryption'
op|'('
string|"'This is a simple message.'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_encrypt_message_with_newlines_at_end
dedent|''
name|'def'
name|'test_encrypt_message_with_newlines_at_end'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_encryption'
op|'('
string|"'This message has a newline at the end.\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_encrypt_many_newlines_at_end
dedent|''
name|'def'
name|'test_encrypt_many_newlines_at_end'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_encryption'
op|'('
string|"'Message with lotsa newlines.\\n\\n\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_encrypt_newlines_inside_message
dedent|''
name|'def'
name|'test_encrypt_newlines_inside_message'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_encryption'
op|'('
string|"'Message\\nwith\\ninterior\\nnewlines.'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_encrypt_with_leading_newlines
dedent|''
name|'def'
name|'test_encrypt_with_leading_newlines'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_encryption'
op|'('
string|"'\\n\\nMessage with leading newlines.'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_encrypt_really_long_message
dedent|''
name|'def'
name|'test_encrypt_really_long_message'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_encryption'
op|'('
string|"''"
op|'.'
name|'join'
op|'('
op|'['
string|"'abcd'"
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
number|'1024'
op|')'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|XenAPIMigrateInstance
dedent|''
dedent|''
name|'class'
name|'XenAPIMigrateInstance'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit test for verifying migration-related actions."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'XenAPIMigrateInstance'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'target_host'
op|'='
string|"'127.0.0.1'"
op|','
nl|'\n'
name|'xenapi_connection_url'
op|'='
string|"'test_url'"
op|','
nl|'\n'
name|'xenapi_connection_password'
op|'='
string|"'test_pass'"
op|','
nl|'\n'
name|'firewall_driver'
op|'='
string|"'nova.virt.xenapi.firewall.'"
nl|'\n'
string|"'Dom0IptablesFirewallDriver'"
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'stubout_session'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'stubs'
op|'.'
name|'FakeSessionForVMTests'
op|')'
newline|'\n'
name|'db_fakes'
op|'.'
name|'stub_out_db_instance_api'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'xenapi_fake'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'xenapi_fake'
op|'.'
name|'create_network'
op|'('
string|"'fake'"
op|','
name|'FLAGS'
op|'.'
name|'flat_network_bridge'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance_values'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'image_ref'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'kernel_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
number|'5'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
string|"'3'"
op|','
comment|'# m1.large'
nl|'\n'
string|"'os_type'"
op|':'
string|"'linux'"
op|','
nl|'\n'
string|"'architecture'"
op|':'
string|"'x86-64'"
op|'}'
newline|'\n'
nl|'\n'
name|'migration_values'
op|'='
op|'{'
nl|'\n'
string|"'source_compute'"
op|':'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'dest_compute'"
op|':'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'dest_host'"
op|':'
string|"'10.127.5.114'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'post-migrating'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'15f23e6a-cc6e-4d22-b651-d9bdaac316f7'"
op|','
nl|'\n'
string|"'old_instance_type_id'"
op|':'
number|'5'
op|','
nl|'\n'
string|"'new_instance_type_id'"
op|':'
number|'1'
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'migration'
op|'='
name|'db'
op|'.'
name|'migration_create'
op|'('
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'migration_values'
op|')'
newline|'\n'
nl|'\n'
name|'fake_utils'
op|'.'
name|'stub_out_utils_execute'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'stub_out_migration_methods'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'stubout_get_this_vm_uuid'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'glance_stubs'
op|'.'
name|'stubout_glance_client'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize_xenserver_6
dedent|''
name|'def'
name|'test_resize_xenserver_6'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance_values'
op|')'
newline|'\n'
name|'called'
op|'='
op|'{'
string|"'resize'"
op|':'
name|'False'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_vdi_resize
name|'def'
name|'fake_vdi_resize'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'['
string|"'resize'"
op|']'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'stubs'
op|'.'
name|'FakeSessionForVMTests'
op|','
nl|'\n'
string|'"VDI_resize"'
op|','
name|'fake_vdi_resize'
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'stubout_session'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'stubs'
op|'.'
name|'FakeSessionForVMTests'
op|','
nl|'\n'
name|'product_version'
op|'='
op|'('
number|'6'
op|','
number|'0'
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'xenapi_conn'
op|'.'
name|'get_connection'
op|'('
name|'False'
op|')'
newline|'\n'
name|'vdi_ref'
op|'='
name|'xenapi_fake'
op|'.'
name|'create_vdi'
op|'('
string|"'hurr'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'vdi_uuid'
op|'='
name|'xenapi_fake'
op|'.'
name|'get_record'
op|'('
string|"'VDI'"
op|','
name|'vdi_ref'
op|')'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'conn'
op|'.'
name|'_vmops'
op|'.'
name|'_resize_instance'
op|'('
name|'instance'
op|','
name|'vdi_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'called'
op|'['
string|"'resize'"
op|']'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_disk_and_power_off
dedent|''
name|'def'
name|'test_migrate_disk_and_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance_values'
op|')'
newline|'\n'
name|'xenapi_fake'
op|'.'
name|'create_vm'
op|'('
name|'instance'
op|'.'
name|'name'
op|','
string|"'Running'"
op|')'
newline|'\n'
name|'instance_type'
op|'='
name|'db'
op|'.'
name|'instance_type_get_by_name'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'m1.large'"
op|')'
newline|'\n'
name|'conn'
op|'='
name|'xenapi_conn'
op|'.'
name|'get_connection'
op|'('
name|'False'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'migrate_disk_and_power_off'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
string|"'127.0.0.1'"
op|','
name|'instance_type'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_disk_and_power_off_passes_exceptions
dedent|''
name|'def'
name|'test_migrate_disk_and_power_off_passes_exceptions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance_values'
op|')'
newline|'\n'
name|'xenapi_fake'
op|'.'
name|'create_vm'
op|'('
name|'instance'
op|'.'
name|'name'
op|','
string|"'Running'"
op|')'
newline|'\n'
name|'instance_type'
op|'='
name|'db'
op|'.'
name|'instance_type_get_by_name'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'m1.large'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_raise
name|'def'
name|'fake_raise'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'MigrationError'
op|'('
name|'reason'
op|'='
string|"'test failure'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'vmops'
op|'.'
name|'VMOps'
op|','
string|'"_migrate_vhd"'
op|','
name|'fake_raise'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'xenapi_conn'
op|'.'
name|'get_connection'
op|'('
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'MigrationError'
op|','
nl|'\n'
name|'conn'
op|'.'
name|'migrate_disk_and_power_off'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
string|"'127.0.0.1'"
op|','
name|'instance_type'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_revert_migrate
dedent|''
name|'def'
name|'test_revert_migrate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance_values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'called'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'fake_vm_start_called'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'fake_finish_revert_migration_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_vm_start
name|'def'
name|'fake_vm_start'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fake_vm_start_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|function|fake_vdi_resize
dedent|''
name|'def'
name|'fake_vdi_resize'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|function|fake_finish_revert_migration
dedent|''
name|'def'
name|'fake_finish_revert_migration'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fake_finish_revert_migration_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'stubs'
op|'.'
name|'FakeSessionForVMTests'
op|','
nl|'\n'
string|'"VDI_resize_online"'
op|','
name|'fake_vdi_resize'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'vmops'
op|'.'
name|'VMOps'
op|','
string|"'_start'"
op|','
name|'fake_vm_start'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'vmops'
op|'.'
name|'VMOps'
op|','
string|"'finish_revert_migration'"
op|','
nl|'\n'
name|'fake_finish_revert_migration'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'xenapi_conn'
op|'.'
name|'get_connection'
op|'('
name|'False'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
nl|'\n'
name|'spectacular'
op|'='
name|'True'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
name|'instance'
op|'.'
name|'image_ref'
op|','
string|"'disk_format'"
op|':'
string|"'vhd'"
op|'}'
newline|'\n'
name|'base'
op|'='
name|'xenapi_fake'
op|'.'
name|'create_vdi'
op|'('
string|"'hurr'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'base_uuid'
op|'='
name|'xenapi_fake'
op|'.'
name|'get_record'
op|'('
string|"'VDI'"
op|','
name|'base'
op|')'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'cow'
op|'='
name|'xenapi_fake'
op|'.'
name|'create_vdi'
op|'('
string|"'durr'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'cow_uuid'
op|'='
name|'xenapi_fake'
op|'.'
name|'get_record'
op|'('
string|"'VDI'"
op|','
name|'cow'
op|')'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'conn'
op|'.'
name|'finish_migration'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'migration'
op|','
name|'instance'
op|','
nl|'\n'
name|'dict'
op|'('
name|'base_copy'
op|'='
name|'base_uuid'
op|','
name|'cow'
op|'='
name|'cow_uuid'
op|')'
op|','
nl|'\n'
name|'network_info'
op|','
name|'image_meta'
op|','
name|'resize_instance'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'called'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'fake_vm_start_called'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'.'
name|'finish_revert_migration'
op|'('
name|'instance'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'fake_finish_revert_migration_called'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_migrate
dedent|''
name|'def'
name|'test_finish_migrate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance_values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'called'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'fake_vm_start_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_vm_start
name|'def'
name|'fake_vm_start'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fake_vm_start_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|function|fake_vdi_resize
dedent|''
name|'def'
name|'fake_vdi_resize'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'vmops'
op|'.'
name|'VMOps'
op|','
string|"'_start'"
op|','
name|'fake_vm_start'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'stubs'
op|'.'
name|'FakeSessionForVMTests'
op|','
nl|'\n'
string|'"VDI_resize_online"'
op|','
name|'fake_vdi_resize'
op|')'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'xenapi_conn'
op|'.'
name|'get_connection'
op|'('
name|'False'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
nl|'\n'
name|'spectacular'
op|'='
name|'True'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
name|'instance'
op|'.'
name|'image_ref'
op|','
string|"'disk_format'"
op|':'
string|"'vhd'"
op|'}'
newline|'\n'
name|'conn'
op|'.'
name|'finish_migration'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'migration'
op|','
name|'instance'
op|','
nl|'\n'
name|'dict'
op|'('
name|'base_copy'
op|'='
string|"'hurr'"
op|','
name|'cow'
op|'='
string|"'durr'"
op|')'
op|','
nl|'\n'
name|'network_info'
op|','
name|'image_meta'
op|','
name|'resize_instance'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'called'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'fake_vm_start_called'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_migrate_no_local_storage
dedent|''
name|'def'
name|'test_finish_migrate_no_local_storage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tiny_type'
op|'='
name|'instance_types'
op|'.'
name|'get_instance_type_by_name'
op|'('
string|"'m1.tiny'"
op|')'
newline|'\n'
name|'tiny_type_id'
op|'='
name|'tiny_type'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'instance_values'
op|'.'
name|'update'
op|'('
op|'{'
string|"'instance_type_id'"
op|':'
name|'tiny_type_id'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance_values'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_vdi_resize
name|'def'
name|'fake_vdi_resize'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|'"This shouldn\'t be called"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'stubs'
op|'.'
name|'FakeSessionForVMTests'
op|','
nl|'\n'
string|'"VDI_resize_online"'
op|','
name|'fake_vdi_resize'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'xenapi_conn'
op|'.'
name|'get_connection'
op|'('
name|'False'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
nl|'\n'
name|'spectacular'
op|'='
name|'True'
op|')'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
name|'instance'
op|'.'
name|'image_ref'
op|','
string|"'disk_format'"
op|':'
string|"'vhd'"
op|'}'
newline|'\n'
name|'conn'
op|'.'
name|'finish_migration'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'migration'
op|','
name|'instance'
op|','
nl|'\n'
name|'dict'
op|'('
name|'base_copy'
op|'='
string|"'hurr'"
op|','
name|'cow'
op|'='
string|"'durr'"
op|')'
op|','
nl|'\n'
name|'network_info'
op|','
name|'image_meta'
op|','
name|'resize_instance'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finish_migrate_no_resize_vdi
dedent|''
name|'def'
name|'test_finish_migrate_no_resize_vdi'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance_values'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_vdi_resize
name|'def'
name|'fake_vdi_resize'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|'"This shouldn\'t be called"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'stubs'
op|'.'
name|'FakeSessionForVMTests'
op|','
nl|'\n'
string|'"VDI_resize_online"'
op|','
name|'fake_vdi_resize'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'xenapi_conn'
op|'.'
name|'get_connection'
op|'('
name|'False'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
nl|'\n'
name|'spectacular'
op|'='
name|'True'
op|')'
newline|'\n'
comment|'# Resize instance would be determined by the compute call'
nl|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
name|'instance'
op|'.'
name|'image_ref'
op|','
string|"'disk_format'"
op|':'
string|"'vhd'"
op|'}'
newline|'\n'
name|'conn'
op|'.'
name|'finish_migration'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'migration'
op|','
name|'instance'
op|','
nl|'\n'
name|'dict'
op|'('
name|'base_copy'
op|'='
string|"'hurr'"
op|','
name|'cow'
op|'='
string|"'durr'"
op|')'
op|','
nl|'\n'
name|'network_info'
op|','
name|'image_meta'
op|','
name|'resize_instance'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|XenAPIImageTypeTestCase
dedent|''
dedent|''
name|'class'
name|'XenAPIImageTypeTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test ImageType class."""'
newline|'\n'
nl|'\n'
DECL|member|test_to_string
name|'def'
name|'test_to_string'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Can convert from type id to type string."""'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'vm_utils'
op|'.'
name|'ImageType'
op|'.'
name|'to_string'
op|'('
name|'vm_utils'
op|'.'
name|'ImageType'
op|'.'
name|'KERNEL'
op|')'
op|','
nl|'\n'
name|'vm_utils'
op|'.'
name|'ImageType'
op|'.'
name|'KERNEL_STR'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_from_string
dedent|''
name|'def'
name|'test_from_string'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Can convert from string to type id."""'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'vm_utils'
op|'.'
name|'ImageType'
op|'.'
name|'from_string'
op|'('
name|'vm_utils'
op|'.'
name|'ImageType'
op|'.'
name|'KERNEL_STR'
op|')'
op|','
nl|'\n'
name|'vm_utils'
op|'.'
name|'ImageType'
op|'.'
name|'KERNEL'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|XenAPIDetermineDiskImageTestCase
dedent|''
dedent|''
name|'class'
name|'XenAPIDetermineDiskImageTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for code that detects the ImageType."""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'XenAPIDetermineDiskImageTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'glance_stubs'
op|'.'
name|'stubout_glance_client'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeInstance
name|'class'
name|'FakeInstance'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'fake_instance'
op|'='
name|'FakeInstance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fake_instance'
op|'.'
name|'id'
op|'='
number|'42'
newline|'\n'
name|'self'
op|'.'
name|'fake_instance'
op|'.'
name|'os_type'
op|'='
string|"'linux'"
newline|'\n'
name|'self'
op|'.'
name|'fake_instance'
op|'.'
name|'architecture'
op|'='
string|"'x86-64'"
newline|'\n'
nl|'\n'
DECL|member|assert_disk_type
dedent|''
name|'def'
name|'assert_disk_type'
op|'('
name|'self'
op|','
name|'image_meta'
op|','
name|'expected_disk_type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'actual'
op|'='
name|'vm_utils'
op|'.'
name|'VMHelper'
op|'.'
name|'determine_disk_image_type'
op|'('
name|'image_meta'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_disk_type'
op|','
name|'actual'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_machine
dedent|''
name|'def'
name|'test_machine'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'a'"
op|','
string|"'disk_format'"
op|':'
string|"'ami'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assert_disk_type'
op|'('
name|'image_meta'
op|','
name|'vm_utils'
op|'.'
name|'ImageType'
op|'.'
name|'DISK'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_raw
dedent|''
name|'def'
name|'test_raw'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'a'"
op|','
string|"'disk_format'"
op|':'
string|"'raw'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assert_disk_type'
op|'('
name|'image_meta'
op|','
name|'vm_utils'
op|'.'
name|'ImageType'
op|'.'
name|'DISK_RAW'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vhd
dedent|''
name|'def'
name|'test_vhd'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'a'"
op|','
string|"'disk_format'"
op|':'
string|"'vhd'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assert_disk_type'
op|'('
name|'image_meta'
op|','
name|'vm_utils'
op|'.'
name|'ImageType'
op|'.'
name|'DISK_VHD'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CompareVersionTestCase
dedent|''
dedent|''
name|'class'
name|'CompareVersionTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_less_than
indent|'    '
name|'def'
name|'test_less_than'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test that cmp_version compares a as less than b"""'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vmops'
op|'.'
name|'cmp_version'
op|'('
string|"'1.2.3.4'"
op|','
string|"'1.2.3.5'"
op|')'
op|'<'
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_greater_than
dedent|''
name|'def'
name|'test_greater_than'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test that cmp_version compares a as greater than b"""'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vmops'
op|'.'
name|'cmp_version'
op|'('
string|"'1.2.3.5'"
op|','
string|"'1.2.3.4'"
op|')'
op|'>'
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_equal
dedent|''
name|'def'
name|'test_equal'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test that cmp_version compares a as equal to b"""'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vmops'
op|'.'
name|'cmp_version'
op|'('
string|"'1.2.3.4'"
op|','
string|"'1.2.3.4'"
op|')'
op|'=='
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_non_lexical
dedent|''
name|'def'
name|'test_non_lexical'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test that cmp_version compares non-lexically"""'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vmops'
op|'.'
name|'cmp_version'
op|'('
string|"'1.2.3.10'"
op|','
string|"'1.2.3.4'"
op|')'
op|'>'
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_length
dedent|''
name|'def'
name|'test_length'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test that cmp_version compares by length as last resort"""'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vmops'
op|'.'
name|'cmp_version'
op|'('
string|"'1.2.3'"
op|','
string|"'1.2.3.4'"
op|')'
op|'<'
number|'0'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|XenAPIHostTestCase
dedent|''
dedent|''
name|'class'
name|'XenAPIHostTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Tests HostState, which holds metrics from XenServer that get\n    reported back to the Schedulers."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'XenAPIHostTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'xenapi_connection_url'
op|'='
string|"'test_url'"
op|','
nl|'\n'
name|'xenapi_connection_password'
op|'='
string|"'test_pass'"
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'stubout_session'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'stubs'
op|'.'
name|'FakeSessionForVMTests'
op|')'
newline|'\n'
name|'xenapi_fake'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'xenapi_fake'
op|'.'
name|'create_local_srs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'='
name|'xenapi_conn'
op|'.'
name|'get_connection'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_state
dedent|''
name|'def'
name|'test_host_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'stats'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_host_stats'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'stats'
op|'['
string|"'disk_total'"
op|']'
op|','
number|'10000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'stats'
op|'['
string|"'disk_used'"
op|']'
op|','
number|'20000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'stats'
op|'['
string|"'host_memory_total'"
op|']'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'stats'
op|'['
string|"'host_memory_overhead'"
op|']'
op|','
number|'20'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'stats'
op|'['
string|"'host_memory_free'"
op|']'
op|','
number|'30'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'stats'
op|'['
string|"'host_memory_free_computed'"
op|']'
op|','
number|'40'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_host_action
dedent|''
name|'def'
name|'_test_host_action'
op|'('
name|'self'
op|','
name|'method'
op|','
name|'action'
op|','
name|'expected'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'method'
op|'('
string|"'host'"
op|','
name|'action'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'expected'
op|':'
newline|'\n'
indent|'            '
name|'expected'
op|'='
name|'action'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_reboot
dedent|''
name|'def'
name|'test_host_reboot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_host_action'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'host_power_action'
op|','
string|"'reboot'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_shutdown
dedent|''
name|'def'
name|'test_host_shutdown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_host_action'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'host_power_action'
op|','
string|"'shutdown'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_startup
dedent|''
name|'def'
name|'test_host_startup'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'host_power_action'
op|','
string|"'host'"
op|','
string|"'startup'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_maintenance_on
dedent|''
name|'def'
name|'test_host_maintenance_on'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_host_action'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'host_maintenance_mode'
op|','
nl|'\n'
name|'True'
op|','
string|"'on_maintenance'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_maintenance_off
dedent|''
name|'def'
name|'test_host_maintenance_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_host_action'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'host_maintenance_mode'
op|','
nl|'\n'
name|'False'
op|','
string|"'off_maintenance'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_enable_host_enable
dedent|''
name|'def'
name|'test_set_enable_host_enable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_host_action'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'set_host_enabled'
op|','
name|'True'
op|','
string|"'enabled'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_enable_host_disable
dedent|''
name|'def'
name|'test_set_enable_host_disable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_host_action'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'set_host_enabled'
op|','
name|'False'
op|','
string|"'disabled'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|XenAPIAutoDiskConfigTestCase
dedent|''
dedent|''
name|'class'
name|'XenAPIAutoDiskConfigTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'XenAPIAutoDiskConfigTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'target_host'
op|'='
string|"'127.0.0.1'"
op|','
nl|'\n'
name|'xenapi_connection_url'
op|'='
string|"'test_url'"
op|','
nl|'\n'
name|'xenapi_connection_password'
op|'='
string|"'test_pass'"
op|','
nl|'\n'
name|'firewall_driver'
op|'='
string|"'nova.virt.xenapi.firewall.'"
nl|'\n'
string|"'Dom0IptablesFirewallDriver'"
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'stubout_session'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'stubs'
op|'.'
name|'FakeSessionForVMTests'
op|')'
newline|'\n'
name|'xenapi_fake'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'='
name|'xenapi_conn'
op|'.'
name|'get_connection'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'instance_values'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'image_ref'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'kernel_id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
number|'20'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
string|"'3'"
op|','
comment|'# m1.large'
nl|'\n'
string|"'os_type'"
op|':'
string|"'linux'"
op|','
nl|'\n'
string|"'architecture'"
op|':'
string|"'x86-64'"
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'classmethod'
newline|'\n'
DECL|function|fake_create_vbd
name|'def'
name|'fake_create_vbd'
op|'('
name|'cls'
op|','
name|'session'
op|','
name|'vm_ref'
op|','
name|'vdi_ref'
op|','
name|'userdevice'
op|','
nl|'\n'
name|'vbd_type'
op|'='
string|"'disk'"
op|','
name|'read_only'
op|'='
name|'False'
op|','
name|'bootable'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'vm_utils'
op|'.'
name|'VMHelper'
op|','
nl|'\n'
string|'"create_vbd"'
op|','
nl|'\n'
name|'fake_create_vbd'
op|')'
newline|'\n'
nl|'\n'
DECL|member|assertIsPartitionCalled
dedent|''
name|'def'
name|'assertIsPartitionCalled'
op|'('
name|'self'
op|','
name|'called'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'marker'
op|'='
op|'{'
string|'"partition_called"'
op|':'
name|'False'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_resize_part_and_fs
name|'def'
name|'fake_resize_part_and_fs'
op|'('
name|'dev'
op|','
name|'start'
op|','
name|'old'
op|','
name|'new'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'marker'
op|'['
string|'"partition_called"'
op|']'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'vm_utils'
op|','
string|'"_resize_part_and_fs"'
op|','
nl|'\n'
name|'fake_resize_part_and_fs'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance_values'
op|')'
newline|'\n'
name|'disk_image_type'
op|'='
name|'vm_utils'
op|'.'
name|'ImageType'
op|'.'
name|'DISK_VHD'
newline|'\n'
name|'vm_ref'
op|'='
string|'"blah"'
newline|'\n'
name|'first_vdi_ref'
op|'='
string|'"blah"'
newline|'\n'
name|'vdis'
op|'='
op|'['
string|'"blah"'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|'.'
name|'_attach_disks'
op|'('
nl|'\n'
name|'instance'
op|','
name|'disk_image_type'
op|','
name|'vm_ref'
op|','
name|'first_vdi_ref'
op|','
name|'vdis'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'marker'
op|'['
string|'"partition_called"'
op|']'
op|','
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_not_auto_disk_config
dedent|''
name|'def'
name|'test_instance_not_auto_disk_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Should not partition unless instance is marked as\n        auto_disk_config.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'instance_values'
op|'['
string|"'auto_disk_config'"
op|']'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'assertIsPartitionCalled'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'stub_vm_utils_with_vdi_attached_here'
newline|'\n'
DECL|member|test_instance_auto_disk_config_doesnt_pass_fail_safes
name|'def'
name|'test_instance_auto_disk_config_doesnt_pass_fail_safes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Should not partition unless fail safes pass"""'
newline|'\n'
name|'self'
op|'.'
name|'instance_values'
op|'['
string|"'auto_disk_config'"
op|']'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|function|fake_get_partitions
name|'def'
name|'fake_get_partitions'
op|'('
name|'dev'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|'('
number|'1'
op|','
number|'0'
op|','
number|'100'
op|','
string|"'ext4'"
op|')'
op|','
op|'('
number|'2'
op|','
number|'100'
op|','
number|'200'
op|','
string|"'ext4'"
op|')'
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'vm_utils'
op|','
string|'"_get_partitions"'
op|','
nl|'\n'
name|'fake_get_partitions'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsPartitionCalled'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'stub_vm_utils_with_vdi_attached_here'
newline|'\n'
DECL|member|test_instance_auto_disk_config_passes_fail_safes
name|'def'
name|'test_instance_auto_disk_config_passes_fail_safes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Should partition if instance is marked as auto_disk_config=True and\n        virt-layer specific fail-safe checks pass.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'instance_values'
op|'['
string|"'auto_disk_config'"
op|']'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|function|fake_get_partitions
name|'def'
name|'fake_get_partitions'
op|'('
name|'dev'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|'('
number|'1'
op|','
number|'0'
op|','
number|'100'
op|','
string|"'ext4'"
op|')'
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'vm_utils'
op|','
string|'"_get_partitions"'
op|','
nl|'\n'
name|'fake_get_partitions'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsPartitionCalled'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|XenAPIGenerateLocal
dedent|''
dedent|''
name|'class'
name|'XenAPIGenerateLocal'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test generating of local disks, like swap and ephemeral"""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'XenAPIGenerateLocal'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'target_host'
op|'='
string|"'127.0.0.1'"
op|','
nl|'\n'
name|'xenapi_connection_url'
op|'='
string|"'test_url'"
op|','
nl|'\n'
name|'xenapi_connection_password'
op|'='
string|"'test_pass'"
op|','
nl|'\n'
name|'xenapi_generate_swap'
op|'='
name|'True'
op|','
nl|'\n'
name|'firewall_driver'
op|'='
string|"'nova.virt.xenapi.firewall.'"
nl|'\n'
string|"'Dom0IptablesFirewallDriver'"
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'stubout_session'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'stubs'
op|'.'
name|'FakeSessionForVMTests'
op|')'
newline|'\n'
name|'db_fakes'
op|'.'
name|'stub_out_db_instance_api'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'xenapi_fake'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'='
name|'xenapi_conn'
op|'.'
name|'get_connection'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'instance_values'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'image_ref'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'kernel_id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
number|'20'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
string|"'3'"
op|','
comment|'# m1.large'
nl|'\n'
string|"'os_type'"
op|':'
string|"'linux'"
op|','
nl|'\n'
string|"'architecture'"
op|':'
string|"'x86-64'"
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'classmethod'
newline|'\n'
DECL|function|fake_create_vbd
name|'def'
name|'fake_create_vbd'
op|'('
name|'cls'
op|','
name|'session'
op|','
name|'vm_ref'
op|','
name|'vdi_ref'
op|','
name|'userdevice'
op|','
nl|'\n'
name|'vbd_type'
op|'='
string|"'disk'"
op|','
name|'read_only'
op|'='
name|'False'
op|','
name|'bootable'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'vm_utils'
op|'.'
name|'VMHelper'
op|','
nl|'\n'
string|'"create_vbd"'
op|','
nl|'\n'
name|'fake_create_vbd'
op|')'
newline|'\n'
nl|'\n'
DECL|member|assertCalled
dedent|''
name|'def'
name|'assertCalled'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'disk_image_type'
op|'='
name|'vm_utils'
op|'.'
name|'ImageType'
op|'.'
name|'DISK_VHD'
newline|'\n'
name|'vm_ref'
op|'='
string|'"blah"'
newline|'\n'
name|'first_vdi_ref'
op|'='
string|'"blah"'
newline|'\n'
name|'vdis'
op|'='
op|'['
string|'"blah"'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'called'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|'.'
name|'_attach_disks'
op|'('
name|'instance'
op|','
name|'disk_image_type'
op|','
nl|'\n'
name|'vm_ref'
op|','
name|'first_vdi_ref'
op|','
name|'vdis'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_generate_swap
dedent|''
name|'def'
name|'test_generate_swap'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test swap disk generation."""'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance_values'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'instance_type_id'"
op|':'
number|'5'
op|'}'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'classmethod'
newline|'\n'
DECL|function|fake_generate_swap
name|'def'
name|'fake_generate_swap'
op|'('
name|'cls'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'called'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'vm_utils'
op|'.'
name|'VMHelper'
op|','
string|"'generate_swap'"
op|','
nl|'\n'
name|'fake_generate_swap'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertCalled'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_generate_ephemeral
dedent|''
name|'def'
name|'test_generate_ephemeral'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test ephemeral disk generation."""'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance_values'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'instance_type_id'"
op|':'
number|'4'
op|'}'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'classmethod'
newline|'\n'
DECL|function|fake_generate_ephemeral
name|'def'
name|'fake_generate_ephemeral'
op|'('
name|'cls'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'called'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'vm_utils'
op|'.'
name|'VMHelper'
op|','
string|"'generate_ephemeral'"
op|','
nl|'\n'
name|'fake_generate_ephemeral'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertCalled'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|XenAPIBWUsageTestCase
dedent|''
dedent|''
name|'class'
name|'XenAPIBWUsageTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'XenAPIBWUsageTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'vm_utils'
op|'.'
name|'VMHelper'
op|','
string|'"compile_metrics"'
op|','
nl|'\n'
name|'XenAPIBWUsageTestCase'
op|'.'
name|'_fake_compile_metrics'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'target_host'
op|'='
string|"'127.0.0.1'"
op|','
nl|'\n'
name|'xenapi_connection_url'
op|'='
string|"'test_url'"
op|','
nl|'\n'
name|'xenapi_connection_password'
op|'='
string|"'test_pass'"
op|','
nl|'\n'
name|'firewall_driver'
op|'='
string|"'nova.virt.xenapi.firewall.'"
nl|'\n'
string|"'Dom0IptablesFirewallDriver'"
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'stubout_session'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'stubs'
op|'.'
name|'FakeSessionForVMTests'
op|')'
newline|'\n'
name|'xenapi_fake'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'='
name|'xenapi_conn'
op|'.'
name|'get_connection'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|_fake_compile_metrics
name|'def'
name|'_fake_compile_metrics'
op|'('
name|'cls'
op|','
name|'start_time'
op|','
name|'stop_time'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'CouldNotFetchMetrics'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_bw_usage_in_failure_case
dedent|''
name|'def'
name|'test_get_all_bw_usage_in_failure_case'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test that get_all_bw_usage returns an empty list when metrics\n        compilation failed.  c.f. bug #910045.\n        """'
newline|'\n'
DECL|class|testinstance
name|'class'
name|'testinstance'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'name'
op|'='
string|'"instance-0001"'
newline|'\n'
name|'self'
op|'.'
name|'uuid'
op|'='
string|'"1-2-3-4-5"'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'result'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'get_all_bw_usage'
op|'('
op|'['
name|'testinstance'
op|'('
op|')'
op|']'
op|','
name|'utils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# TODO(salvatore-orlando): this class and'
nl|'\n'
comment|'# nova.tests.test_libvirt.IPTablesFirewallDriverTestCase share a lot of code.'
nl|'\n'
comment|'# Consider abstracting common code in a base class for firewall driver testing.'
nl|'\n'
DECL|class|XenAPIDom0IptablesFirewallTestCase
dedent|''
dedent|''
name|'class'
name|'XenAPIDom0IptablesFirewallTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|_in_nat_rules
indent|'    '
name|'_in_nat_rules'
op|'='
op|'['
nl|'\n'
string|"'# Generated by iptables-save v1.4.10 on Sat Feb 19 00:03:19 2011'"
op|','
nl|'\n'
string|"'*nat'"
op|','
nl|'\n'
string|"':PREROUTING ACCEPT [1170:189210]'"
op|','
nl|'\n'
string|"':INPUT ACCEPT [844:71028]'"
op|','
nl|'\n'
string|"':OUTPUT ACCEPT [5149:405186]'"
op|','
nl|'\n'
string|"':POSTROUTING ACCEPT [5063:386098]'"
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|_in_filter_rules
name|'_in_filter_rules'
op|'='
op|'['
nl|'\n'
string|"'# Generated by iptables-save v1.4.4 on Mon Dec  6 11:54:13 2010'"
op|','
nl|'\n'
string|"'*filter'"
op|','
nl|'\n'
string|"':INPUT ACCEPT [969615:281627771]'"
op|','
nl|'\n'
string|"':FORWARD ACCEPT [0:0]'"
op|','
nl|'\n'
string|"':OUTPUT ACCEPT [915599:63811649]'"
op|','
nl|'\n'
string|"':nova-block-ipv4 - [0:0]'"
op|','
nl|'\n'
string|"'-A INPUT -i virbr0 -p tcp -m tcp --dport 67 -j ACCEPT '"
op|','
nl|'\n'
string|"'-A FORWARD -d 192.168.122.0/24 -o virbr0 -m state --state RELATED'"
nl|'\n'
string|"',ESTABLISHED -j ACCEPT '"
op|','
nl|'\n'
string|"'-A FORWARD -s 192.168.122.0/24 -i virbr0 -j ACCEPT '"
op|','
nl|'\n'
string|"'-A FORWARD -i virbr0 -o virbr0 -j ACCEPT '"
op|','
nl|'\n'
string|"'-A FORWARD -o virbr0 -j REJECT --reject-with icmp-port-unreachable '"
op|','
nl|'\n'
string|"'-A FORWARD -i virbr0 -j REJECT --reject-with icmp-port-unreachable '"
op|','
nl|'\n'
string|"'COMMIT'"
op|','
nl|'\n'
string|"'# Completed on Mon Dec  6 11:54:13 2010'"
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|_in6_filter_rules
name|'_in6_filter_rules'
op|'='
op|'['
nl|'\n'
string|"'# Generated by ip6tables-save v1.4.4 on Tue Jan 18 23:47:56 2011'"
op|','
nl|'\n'
string|"'*filter'"
op|','
nl|'\n'
string|"':INPUT ACCEPT [349155:75810423]'"
op|','
nl|'\n'
string|"':FORWARD ACCEPT [0:0]'"
op|','
nl|'\n'
string|"':OUTPUT ACCEPT [349256:75777230]'"
op|','
nl|'\n'
string|"'COMMIT'"
op|','
nl|'\n'
string|"'# Completed on Tue Jan 18 23:47:56 2011'"
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'XenAPIDom0IptablesFirewallTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'xenapi_connection_url'
op|'='
string|"'test_url'"
op|','
nl|'\n'
name|'xenapi_connection_password'
op|'='
string|"'test_pass'"
op|','
nl|'\n'
name|'instance_name_template'
op|'='
string|"'%d'"
op|','
nl|'\n'
name|'firewall_driver'
op|'='
string|"'nova.virt.xenapi.firewall.'"
nl|'\n'
string|"'Dom0IptablesFirewallDriver'"
op|')'
newline|'\n'
name|'xenapi_fake'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'xenapi_fake'
op|'.'
name|'create_local_srs'
op|'('
op|')'
newline|'\n'
name|'xenapi_fake'
op|'.'
name|'create_local_pifs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'mappin'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'stubs'
op|'.'
name|'stubout_session'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'stubs'
op|'.'
name|'FakeSessionForFirewallTests'
op|','
nl|'\n'
name|'test_case'
op|'='
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'FLAGS'
op|'.'
name|'network_manager'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'='
name|'xenapi_conn'
op|'.'
name|'get_connection'
op|'('
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_vmops'
op|'.'
name|'firewall_driver'
newline|'\n'
nl|'\n'
DECL|member|_create_instance_ref
dedent|''
name|'def'
name|'_create_instance_ref'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_test_security_group
dedent|''
name|'def'
name|'_create_test_security_group'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'admin_ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'secgroup'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'admin_ctxt'
op|','
nl|'\n'
op|'{'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'testgroup'"
op|','
nl|'\n'
string|"'description'"
op|':'
string|"'test group'"
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'security_group_rule_create'
op|'('
name|'admin_ctxt'
op|','
nl|'\n'
op|'{'
string|"'parent_group_id'"
op|':'
name|'secgroup'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'protocol'"
op|':'
string|"'icmp'"
op|','
nl|'\n'
string|"'from_port'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'to_port'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'192.168.11.0/24'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'security_group_rule_create'
op|'('
name|'admin_ctxt'
op|','
nl|'\n'
op|'{'
string|"'parent_group_id'"
op|':'
name|'secgroup'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'protocol'"
op|':'
string|"'icmp'"
op|','
nl|'\n'
string|"'from_port'"
op|':'
number|'8'
op|','
nl|'\n'
string|"'to_port'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'192.168.11.0/24'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'security_group_rule_create'
op|'('
name|'admin_ctxt'
op|','
nl|'\n'
op|'{'
string|"'parent_group_id'"
op|':'
name|'secgroup'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
nl|'\n'
string|"'from_port'"
op|':'
number|'80'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'81'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'192.168.10.0/24'"
op|'}'
op|')'
newline|'\n'
name|'return'
name|'secgroup'
newline|'\n'
nl|'\n'
DECL|member|_validate_security_group
dedent|''
name|'def'
name|'_validate_security_group'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'in_rules'
op|'='
name|'filter'
op|'('
name|'lambda'
name|'l'
op|':'
name|'not'
name|'l'
op|'.'
name|'startswith'
op|'('
string|"'#'"
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_in_filter_rules'
op|')'
newline|'\n'
name|'for'
name|'rule'
name|'in'
name|'in_rules'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
string|"'nova'"
name|'in'
name|'rule'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'rule'
name|'in'
name|'self'
op|'.'
name|'_out_rules'
op|','
nl|'\n'
string|"'Rule went missing: %s'"
op|'%'
name|'rule'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'instance_chain'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'rule'
name|'in'
name|'self'
op|'.'
name|'_out_rules'
op|':'
newline|'\n'
comment|"# This is pretty crude, but it'll do for now"
nl|'\n'
comment|'# last two octets change'
nl|'\n'
indent|'            '
name|'if'
name|'re'
op|'.'
name|'search'
op|'('
string|"'-d 192.168.[0-9]{1,3}.[0-9]{1,3} -j'"
op|','
name|'rule'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'instance_chain'
op|'='
name|'rule'
op|'.'
name|'split'
op|'('
string|"' '"
op|')'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'instance_chain'
op|','
string|'"The instance chain wasn\'t added"'
op|')'
newline|'\n'
name|'security_group_chain'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'rule'
name|'in'
name|'self'
op|'.'
name|'_out_rules'
op|':'
newline|'\n'
comment|"# This is pretty crude, but it'll do for now"
nl|'\n'
indent|'            '
name|'if'
string|"'-A %s -j'"
op|'%'
name|'instance_chain'
name|'in'
name|'rule'
op|':'
newline|'\n'
indent|'                '
name|'security_group_chain'
op|'='
name|'rule'
op|'.'
name|'split'
op|'('
string|"' '"
op|')'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'security_group_chain'
op|','
nl|'\n'
string|'"The security group chain wasn\'t added"'
op|')'
newline|'\n'
nl|'\n'
name|'regex'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"'-A .* -j ACCEPT -p icmp -s 192.168.11.0/24'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'filter'
op|'('
name|'regex'
op|'.'
name|'match'
op|','
name|'self'
op|'.'
name|'_out_rules'
op|')'
op|')'
op|'>'
number|'0'
op|','
nl|'\n'
string|'"ICMP acceptance rule wasn\'t added"'
op|')'
newline|'\n'
nl|'\n'
name|'regex'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"'-A .* -j ACCEPT -p icmp -m icmp --icmp-type 8'"
nl|'\n'
string|"' -s 192.168.11.0/24'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'filter'
op|'('
name|'regex'
op|'.'
name|'match'
op|','
name|'self'
op|'.'
name|'_out_rules'
op|')'
op|')'
op|'>'
number|'0'
op|','
nl|'\n'
string|'"ICMP Echo Request acceptance rule wasn\'t added"'
op|')'
newline|'\n'
nl|'\n'
name|'regex'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"'-A .* -j ACCEPT -p tcp --dport 80:81'"
nl|'\n'
string|"' -s 192.168.10.0/24'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'filter'
op|'('
name|'regex'
op|'.'
name|'match'
op|','
name|'self'
op|'.'
name|'_out_rules'
op|')'
op|')'
op|'>'
number|'0'
op|','
nl|'\n'
string|'"TCP port 80/81 acceptance rule wasn\'t added"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_static_filters
dedent|''
name|'def'
name|'test_static_filters'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance_ref'
op|'('
op|')'
newline|'\n'
name|'src_instance_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance_ref'
op|'('
op|')'
newline|'\n'
name|'admin_ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'secgroup'
op|'='
name|'self'
op|'.'
name|'_create_test_security_group'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'src_secgroup'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'admin_ctxt'
op|','
nl|'\n'
op|'{'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'testsourcegroup'"
op|','
nl|'\n'
string|"'description'"
op|':'
string|"'src group'"
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'security_group_rule_create'
op|'('
name|'admin_ctxt'
op|','
nl|'\n'
op|'{'
string|"'parent_group_id'"
op|':'
name|'secgroup'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
nl|'\n'
string|"'from_port'"
op|':'
number|'80'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'81'
op|','
nl|'\n'
string|"'group_id'"
op|':'
name|'src_secgroup'
op|'['
string|"'id'"
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_add_security_group'
op|'('
name|'admin_ctxt'
op|','
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'secgroup'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_add_security_group'
op|'('
name|'admin_ctxt'
op|','
name|'src_instance_ref'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'src_secgroup'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'admin_ctxt'
op|','
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'src_instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'admin_ctxt'
op|','
name|'src_instance_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'network_model'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
nl|'\n'
number|'1'
op|','
name|'spectacular'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'fake_network'
op|'.'
name|'stub_out_nw_api_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|':'
name|'network_model'
op|')'
newline|'\n'
nl|'\n'
name|'network_info'
op|'='
name|'network_model'
op|'.'
name|'legacy'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'prepare_instance_filter'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'apply_instance_filter'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_validate_security_group'
op|'('
op|')'
newline|'\n'
comment|'# Extra test for TCP acceptance rules'
nl|'\n'
name|'for'
name|'ip'
name|'in'
name|'network_model'
op|'.'
name|'fixed_ips'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'ip'
op|'['
string|"'version'"
op|']'
op|'!='
number|'4'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'regex'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"'-A .* -j ACCEPT -p tcp'"
nl|'\n'
string|"' --dport 80:81 -s %s'"
op|'%'
name|'ip'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'filter'
op|'('
name|'regex'
op|'.'
name|'match'
op|','
name|'self'
op|'.'
name|'_out_rules'
op|')'
op|')'
op|'>'
number|'0'
op|','
nl|'\n'
string|'"TCP port 80/81 acceptance rule wasn\'t added"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'admin_ctxt'
op|','
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_filters_for_instance_with_ip_v6
dedent|''
name|'def'
name|'test_filters_for_instance_with_ip_v6'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_ipv6'
op|'='
name|'True'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'rulesv4'
op|','
name|'rulesv6'
op|'='
name|'self'
op|'.'
name|'fw'
op|'.'
name|'_filters_for_instance'
op|'('
string|'"fake"'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'rulesv4'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'rulesv6'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_filters_for_instance_without_ip_v6
dedent|''
name|'def'
name|'test_filters_for_instance_without_ip_v6'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_ipv6'
op|'='
name|'False'
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|')'
newline|'\n'
name|'rulesv4'
op|','
name|'rulesv6'
op|'='
name|'self'
op|'.'
name|'fw'
op|'.'
name|'_filters_for_instance'
op|'('
string|'"fake"'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'rulesv4'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'rulesv6'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_multinic_iptables
dedent|''
name|'def'
name|'test_multinic_iptables'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ipv4_rules_per_addr'
op|'='
number|'1'
newline|'\n'
name|'ipv4_addr_per_network'
op|'='
number|'2'
newline|'\n'
name|'ipv6_rules_per_addr'
op|'='
number|'1'
newline|'\n'
name|'ipv6_addr_per_network'
op|'='
number|'1'
newline|'\n'
name|'networks_count'
op|'='
number|'5'
newline|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance_ref'
op|'('
op|')'
newline|'\n'
name|'_get_instance_nw_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
newline|'\n'
name|'network_info'
op|'='
name|'_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
nl|'\n'
name|'networks_count'
op|','
nl|'\n'
name|'ipv4_addr_per_network'
op|')'
newline|'\n'
name|'ipv4_len'
op|'='
name|'len'
op|'('
name|'self'
op|'.'
name|'fw'
op|'.'
name|'iptables'
op|'.'
name|'ipv4'
op|'['
string|"'filter'"
op|']'
op|'.'
name|'rules'
op|')'
newline|'\n'
name|'ipv6_len'
op|'='
name|'len'
op|'('
name|'self'
op|'.'
name|'fw'
op|'.'
name|'iptables'
op|'.'
name|'ipv6'
op|'['
string|"'filter'"
op|']'
op|'.'
name|'rules'
op|')'
newline|'\n'
name|'inst_ipv4'
op|','
name|'inst_ipv6'
op|'='
name|'self'
op|'.'
name|'fw'
op|'.'
name|'instance_rules'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'prepare_instance_filter'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'ipv4'
op|'='
name|'self'
op|'.'
name|'fw'
op|'.'
name|'iptables'
op|'.'
name|'ipv4'
op|'['
string|"'filter'"
op|']'
op|'.'
name|'rules'
newline|'\n'
name|'ipv6'
op|'='
name|'self'
op|'.'
name|'fw'
op|'.'
name|'iptables'
op|'.'
name|'ipv6'
op|'['
string|"'filter'"
op|']'
op|'.'
name|'rules'
newline|'\n'
name|'ipv4_network_rules'
op|'='
name|'len'
op|'('
name|'ipv4'
op|')'
op|'-'
name|'len'
op|'('
name|'inst_ipv4'
op|')'
op|'-'
name|'ipv4_len'
newline|'\n'
name|'ipv6_network_rules'
op|'='
name|'len'
op|'('
name|'ipv6'
op|')'
op|'-'
name|'len'
op|'('
name|'inst_ipv6'
op|')'
op|'-'
name|'ipv6_len'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'ipv4_network_rules'
op|','
nl|'\n'
name|'ipv4_rules_per_addr'
op|'*'
name|'ipv4_addr_per_network'
op|'*'
name|'networks_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'ipv6_network_rules'
op|','
nl|'\n'
name|'ipv6_rules_per_addr'
op|'*'
name|'ipv6_addr_per_network'
op|'*'
name|'networks_count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_do_refresh_security_group_rules
dedent|''
name|'def'
name|'test_do_refresh_security_group_rules'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'admin_ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance_ref'
op|'('
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|','
number|'1'
op|')'
newline|'\n'
name|'secgroup'
op|'='
name|'self'
op|'.'
name|'_create_test_security_group'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_add_security_group'
op|'('
name|'admin_ctxt'
op|','
name|'instance_ref'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'secgroup'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'prepare_instance_filter'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'instances'
op|'['
name|'instance_ref'
op|'['
string|"'id'"
op|']'
op|']'
op|'='
name|'instance_ref'
newline|'\n'
name|'self'
op|'.'
name|'_validate_security_group'
op|'('
op|')'
newline|'\n'
comment|'# add a rule to the security group'
nl|'\n'
name|'db'
op|'.'
name|'security_group_rule_create'
op|'('
name|'admin_ctxt'
op|','
nl|'\n'
op|'{'
string|"'parent_group_id'"
op|':'
name|'secgroup'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'protocol'"
op|':'
string|"'udp'"
op|','
nl|'\n'
string|"'from_port'"
op|':'
number|'200'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'299'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'192.168.99.0/24'"
op|'}'
op|')'
newline|'\n'
comment|'#validate the extra rule'
nl|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'refresh_security_group_rules'
op|'('
name|'secgroup'
op|')'
newline|'\n'
name|'regex'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"'-A .* -j ACCEPT -p udp --dport 200:299'"
nl|'\n'
string|"' -s 192.168.99.0/24'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'filter'
op|'('
name|'regex'
op|'.'
name|'match'
op|','
name|'self'
op|'.'
name|'_out_rules'
op|')'
op|')'
op|'>'
number|'0'
op|','
nl|'\n'
string|'"Rules were not updated properly."'
nl|'\n'
string|'"The rule for UDP acceptance is missing"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_provider_firewall_rules
dedent|''
name|'def'
name|'test_provider_firewall_rules'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# setup basic instance data'
nl|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'_create_instance_ref'
op|'('
op|')'
newline|'\n'
comment|'# FRAGILE: as in libvirt tests'
nl|'\n'
comment|'# peeks at how the firewall names chains'
nl|'\n'
name|'chain_name'
op|'='
string|"'inst-%s'"
op|'%'
name|'instance_ref'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
name|'network_info'
op|'='
name|'fake_network'
op|'.'
name|'fake_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'1'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'prepare_instance_filter'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'provider'"
name|'in'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'iptables'
op|'.'
name|'ipv4'
op|'['
string|"'filter'"
op|']'
op|'.'
name|'chains'
op|')'
newline|'\n'
name|'rules'
op|'='
op|'['
name|'rule'
name|'for'
name|'rule'
name|'in'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'iptables'
op|'.'
name|'ipv4'
op|'['
string|"'filter'"
op|']'
op|'.'
name|'rules'
nl|'\n'
name|'if'
name|'rule'
op|'.'
name|'chain'
op|'=='
string|"'provider'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'rules'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'admin_ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
comment|'# add a rule and send the update message, check for 1 rule'
nl|'\n'
name|'provider_fw0'
op|'='
name|'db'
op|'.'
name|'provider_fw_rule_create'
op|'('
name|'admin_ctxt'
op|','
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'10.99.99.99/32'"
op|','
nl|'\n'
string|"'from_port'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'65535'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'refresh_provider_fw_rules'
op|'('
op|')'
newline|'\n'
name|'rules'
op|'='
op|'['
name|'rule'
name|'for'
name|'rule'
name|'in'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'iptables'
op|'.'
name|'ipv4'
op|'['
string|"'filter'"
op|']'
op|'.'
name|'rules'
nl|'\n'
name|'if'
name|'rule'
op|'.'
name|'chain'
op|'=='
string|"'provider'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'rules'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Add another, refresh, and make sure number of rules goes to two'
nl|'\n'
name|'provider_fw1'
op|'='
name|'db'
op|'.'
name|'provider_fw_rule_create'
op|'('
name|'admin_ctxt'
op|','
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'udp'"
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'10.99.99.99/32'"
op|','
nl|'\n'
string|"'from_port'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'65535'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'refresh_provider_fw_rules'
op|'('
op|')'
newline|'\n'
name|'rules'
op|'='
op|'['
name|'rule'
name|'for'
name|'rule'
name|'in'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'iptables'
op|'.'
name|'ipv4'
op|'['
string|"'filter'"
op|']'
op|'.'
name|'rules'
nl|'\n'
name|'if'
name|'rule'
op|'.'
name|'chain'
op|'=='
string|"'provider'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'rules'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# create the instance filter and make sure it has a jump rule'
nl|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'prepare_instance_filter'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'apply_instance_filter'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'inst_rules'
op|'='
op|'['
name|'rule'
name|'for'
name|'rule'
name|'in'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'iptables'
op|'.'
name|'ipv4'
op|'['
string|"'filter'"
op|']'
op|'.'
name|'rules'
nl|'\n'
name|'if'
name|'rule'
op|'.'
name|'chain'
op|'=='
name|'chain_name'
op|']'
newline|'\n'
name|'jump_rules'
op|'='
op|'['
name|'rule'
name|'for'
name|'rule'
name|'in'
name|'inst_rules'
name|'if'
string|"'-j'"
name|'in'
name|'rule'
op|'.'
name|'rule'
op|']'
newline|'\n'
name|'provjump_rules'
op|'='
op|'['
op|']'
newline|'\n'
comment|"# IptablesTable doesn't make rules unique internally"
nl|'\n'
name|'for'
name|'rule'
name|'in'
name|'jump_rules'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'provider'"
name|'in'
name|'rule'
op|'.'
name|'rule'
name|'and'
name|'rule'
name|'not'
name|'in'
name|'provjump_rules'
op|':'
newline|'\n'
indent|'                '
name|'provjump_rules'
op|'.'
name|'append'
op|'('
name|'rule'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'provjump_rules'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# remove a rule from the db, cast to compute to refresh rule'
nl|'\n'
name|'db'
op|'.'
name|'provider_fw_rule_destroy'
op|'('
name|'admin_ctxt'
op|','
name|'provider_fw1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'refresh_provider_fw_rules'
op|'('
op|')'
newline|'\n'
name|'rules'
op|'='
op|'['
name|'rule'
name|'for'
name|'rule'
name|'in'
name|'self'
op|'.'
name|'fw'
op|'.'
name|'iptables'
op|'.'
name|'ipv4'
op|'['
string|"'filter'"
op|']'
op|'.'
name|'rules'
nl|'\n'
name|'if'
name|'rule'
op|'.'
name|'chain'
op|'=='
string|"'provider'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'rules'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|XenAPISRSelectionTestCase
dedent|''
dedent|''
name|'class'
name|'XenAPISRSelectionTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for testing we find the right SR."""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'XenAPISRSelectionTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'xenapi_fake'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_safe_find_sr_raise_exception
dedent|''
name|'def'
name|'test_safe_find_sr_raise_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure StorageRepositoryNotFound is raise when wrong filter."""'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'sr_matching_filter'
op|'='
string|"'yadayadayada'"
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'stubout_session'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'stubs'
op|'.'
name|'FakeSessionForVMTests'
op|')'
newline|'\n'
name|'session'
op|'='
name|'xenapi_conn'
op|'.'
name|'XenAPISession'
op|'('
string|"'test_url'"
op|','
string|"'root'"
op|','
string|"'test_pass'"
op|')'
newline|'\n'
name|'helper'
op|'='
name|'vm_utils'
op|'.'
name|'VMHelper'
newline|'\n'
name|'helper'
op|'.'
name|'XenAPI'
op|'='
name|'session'
op|'.'
name|'get_imported_xenapi'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'StorageRepositoryNotFound'
op|','
nl|'\n'
name|'helper'
op|'.'
name|'safe_find_sr'
op|','
name|'session'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_safe_find_sr_local_storage
dedent|''
name|'def'
name|'test_safe_find_sr_local_storage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure the default local-storage is found."""'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'sr_matching_filter'
op|'='
string|"'other-config:i18n-key=local-storage'"
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'stubout_session'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'stubs'
op|'.'
name|'FakeSessionForVMTests'
op|')'
newline|'\n'
name|'session'
op|'='
name|'xenapi_conn'
op|'.'
name|'XenAPISession'
op|'('
string|"'test_url'"
op|','
string|"'root'"
op|','
string|"'test_pass'"
op|')'
newline|'\n'
name|'helper'
op|'='
name|'vm_utils'
op|'.'
name|'VMHelper'
newline|'\n'
name|'helper'
op|'.'
name|'XenAPI'
op|'='
name|'session'
op|'.'
name|'get_imported_xenapi'
op|'('
op|')'
newline|'\n'
name|'host_ref'
op|'='
name|'xenapi_fake'
op|'.'
name|'get_all'
op|'('
string|"'host'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'local_sr'
op|'='
name|'xenapi_fake'
op|'.'
name|'create_sr'
op|'('
nl|'\n'
name|'name_label'
op|'='
string|"'Fake Storage'"
op|','
nl|'\n'
name|'type'
op|'='
string|"'lvm'"
op|','
nl|'\n'
name|'other_config'
op|'='
op|'{'
string|"'i18n-original-value-name_label'"
op|':'
nl|'\n'
string|"'Local storage'"
op|','
nl|'\n'
string|"'i18n-key'"
op|':'
string|"'local-storage'"
op|'}'
op|','
nl|'\n'
name|'host_ref'
op|'='
name|'host_ref'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'helper'
op|'.'
name|'safe_find_sr'
op|'('
name|'session'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'local_sr'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_safe_find_sr_by_other_criteria
dedent|''
name|'def'
name|'test_safe_find_sr_by_other_criteria'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure the SR is found when using a different filter."""'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'sr_matching_filter'
op|'='
string|"'other-config:my_fake_sr=true'"
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'stubout_session'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'stubs'
op|'.'
name|'FakeSessionForVMTests'
op|')'
newline|'\n'
name|'session'
op|'='
name|'xenapi_conn'
op|'.'
name|'XenAPISession'
op|'('
string|"'test_url'"
op|','
string|"'root'"
op|','
string|"'test_pass'"
op|')'
newline|'\n'
name|'helper'
op|'='
name|'vm_utils'
op|'.'
name|'VMHelper'
newline|'\n'
name|'helper'
op|'.'
name|'XenAPI'
op|'='
name|'session'
op|'.'
name|'get_imported_xenapi'
op|'('
op|')'
newline|'\n'
name|'host_ref'
op|'='
name|'xenapi_fake'
op|'.'
name|'get_all'
op|'('
string|"'host'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'local_sr'
op|'='
name|'xenapi_fake'
op|'.'
name|'create_sr'
op|'('
name|'name_label'
op|'='
string|"'Fake Storage'"
op|','
nl|'\n'
name|'type'
op|'='
string|"'lvm'"
op|','
nl|'\n'
name|'other_config'
op|'='
op|'{'
string|"'my_fake_sr'"
op|':'
string|"'true'"
op|'}'
op|','
nl|'\n'
name|'host_ref'
op|'='
name|'host_ref'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'helper'
op|'.'
name|'safe_find_sr'
op|'('
name|'session'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'local_sr'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_safe_find_sr_default
dedent|''
name|'def'
name|'test_safe_find_sr_default'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure the default SR is found regardless of other-config."""'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'sr_matching_filter'
op|'='
string|"'default-sr:true'"
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'stubout_session'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'stubs'
op|'.'
name|'FakeSessionForVMTests'
op|')'
newline|'\n'
name|'session'
op|'='
name|'xenapi_conn'
op|'.'
name|'XenAPISession'
op|'('
string|"'test_url'"
op|','
string|"'root'"
op|','
string|"'test_pass'"
op|')'
newline|'\n'
name|'helper'
op|'='
name|'vm_utils'
op|'.'
name|'VMHelper'
newline|'\n'
name|'pool_ref'
op|'='
name|'xenapi_fake'
op|'.'
name|'create_pool'
op|'('
string|"''"
op|')'
newline|'\n'
name|'helper'
op|'.'
name|'XenAPI'
op|'='
name|'session'
op|'.'
name|'get_imported_xenapi'
op|'('
op|')'
newline|'\n'
name|'expected'
op|'='
name|'helper'
op|'.'
name|'safe_find_sr'
op|'('
name|'session'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'session'
op|'.'
name|'call_xenapi'
op|'('
string|"'pool.get_default_SR'"
op|','
name|'pool_ref'
op|')'
op|','
nl|'\n'
name|'expected'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|XenAPIAggregateTestCase
dedent|''
dedent|''
name|'class'
name|'XenAPIAggregateTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unit tests for aggregate operations."""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'XenAPIAggregateTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'xenapi_connection_url'
op|'='
string|"'http://test_url'"
op|','
nl|'\n'
name|'xenapi_connection_username'
op|'='
string|"'test_user'"
op|','
nl|'\n'
name|'xenapi_connection_password'
op|'='
string|"'test_pass'"
op|','
nl|'\n'
name|'instance_name_template'
op|'='
string|"'%d'"
op|','
nl|'\n'
name|'firewall_driver'
op|'='
string|"'nova.virt.xenapi.firewall.'"
nl|'\n'
string|"'Dom0IptablesFirewallDriver'"
op|','
nl|'\n'
name|'host'
op|'='
string|"'host'"
op|')'
newline|'\n'
name|'xenapi_fake'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'host_ref'
op|'='
name|'xenapi_fake'
op|'.'
name|'get_all'
op|'('
string|"'host'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'stubs'
op|'.'
name|'stubout_session'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'stubs'
op|'.'
name|'FakeSessionForVMTests'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'='
name|'xenapi_conn'
op|'.'
name|'get_connection'
op|'('
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fake_metadata'
op|'='
op|'{'
string|"'master_compute'"
op|':'
string|"'host'"
op|','
nl|'\n'
string|"'host'"
op|':'
name|'xenapi_fake'
op|'.'
name|'get_record'
op|'('
string|"'host'"
op|','
nl|'\n'
name|'host_ref'
op|')'
op|'['
string|"'uuid'"
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_add_to_aggregate_called
dedent|''
name|'def'
name|'test_add_to_aggregate_called'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_add_to_aggregate
indent|'        '
name|'def'
name|'fake_add_to_aggregate'
op|'('
name|'context'
op|','
name|'aggregate'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fake_add_to_aggregate'
op|'.'
name|'called'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_pool'
op|','
nl|'\n'
string|'"add_to_aggregate"'
op|','
nl|'\n'
name|'fake_add_to_aggregate'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'add_to_aggregate'
op|'('
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'fake_add_to_aggregate'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_to_aggregate_for_first_host_sets_metadata
dedent|''
name|'def'
name|'test_add_to_aggregate_for_first_host_sets_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_init_pool
indent|'        '
name|'def'
name|'fake_init_pool'
op|'('
name|'id'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fake_init_pool'
op|'.'
name|'called'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_pool'
op|','
string|'"_init_pool"'
op|','
name|'fake_init_pool'
op|')'
newline|'\n'
nl|'\n'
name|'aggregate'
op|'='
name|'self'
op|'.'
name|'_aggregate_setup'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_pool'
op|'.'
name|'add_to_aggregate'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'aggregate'
op|','
string|'"host"'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'aggregate_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'aggregate'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'fake_init_pool'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'self'
op|'.'
name|'fake_metadata'
op|','
name|'result'
op|'.'
name|'metadetails'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'aggregate_states'
op|'.'
name|'ACTIVE'
op|','
name|'result'
op|'.'
name|'operational_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_join_slave
dedent|''
name|'def'
name|'test_join_slave'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure join_slave gets called when the request gets to master."""'
newline|'\n'
DECL|function|fake_join_slave
name|'def'
name|'fake_join_slave'
op|'('
name|'id'
op|','
name|'compute_uuid'
op|','
name|'host'
op|','
name|'url'
op|','
name|'user'
op|','
name|'password'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fake_join_slave'
op|'.'
name|'called'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_pool'
op|','
string|'"_join_slave"'
op|','
name|'fake_join_slave'
op|')'
newline|'\n'
nl|'\n'
name|'aggregate'
op|'='
name|'self'
op|'.'
name|'_aggregate_setup'
op|'('
name|'hosts'
op|'='
op|'['
string|"'host'"
op|','
string|"'host2'"
op|']'
op|','
nl|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'fake_metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_pool'
op|'.'
name|'add_to_aggregate'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'aggregate'
op|','
string|'"host2"'
op|','
nl|'\n'
name|'compute_uuid'
op|'='
string|"'fake_uuid'"
op|','
nl|'\n'
name|'url'
op|'='
string|"'fake_url'"
op|','
nl|'\n'
name|'user'
op|'='
string|"'fake_user'"
op|','
nl|'\n'
name|'passwd'
op|'='
string|"'fake_pass'"
op|','
nl|'\n'
name|'xenhost_uuid'
op|'='
string|"'fake_uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'fake_join_slave'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_to_aggregate_first_host
dedent|''
name|'def'
name|'test_add_to_aggregate_first_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_pool_set_name_label
indent|'        '
name|'def'
name|'fake_pool_set_name_label'
op|'('
name|'self'
op|','
name|'session'
op|','
name|'pool_ref'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fake_pool_set_name_label'
op|'.'
name|'called'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'xenapi_fake'
op|'.'
name|'SessionBase'
op|','
string|'"pool_set_name_label"'
op|','
nl|'\n'
name|'fake_pool_set_name_label'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_session'
op|'.'
name|'call_xenapi'
op|'('
string|'"pool.create"'
op|','
op|'{'
string|'"name"'
op|':'
string|'"asdf"'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'values'
op|'='
op|'{'
string|'"name"'
op|':'
string|"'fake_aggregate'"
op|','
nl|'\n'
string|'"availability_zone"'
op|':'
string|"'fake_zone'"
op|'}'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'aggregate_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_host_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'result'
op|'.'
name|'id'
op|','
string|'"host"'
op|')'
newline|'\n'
name|'aggregate'
op|'='
name|'db'
op|'.'
name|'aggregate_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'result'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|'"host"'
op|']'
op|','
name|'aggregate'
op|'.'
name|'hosts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
op|'}'
op|','
name|'aggregate'
op|'.'
name|'metadetails'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_pool'
op|'.'
name|'add_to_aggregate'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'aggregate'
op|','
string|'"host"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'fake_pool_set_name_label'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_remove_from_aggregate_called
dedent|''
name|'def'
name|'test_remove_from_aggregate_called'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_remove_from_aggregate
indent|'        '
name|'def'
name|'fake_remove_from_aggregate'
op|'('
name|'context'
op|','
name|'aggregate'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fake_remove_from_aggregate'
op|'.'
name|'called'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_pool'
op|','
nl|'\n'
string|'"remove_from_aggregate"'
op|','
nl|'\n'
name|'fake_remove_from_aggregate'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'remove_from_aggregate'
op|'('
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'fake_remove_from_aggregate'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_remove_from_empty_aggregate
dedent|''
name|'def'
name|'test_remove_from_empty_aggregate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
string|'"name"'
op|':'
string|"'fake_aggregate'"
op|','
nl|'\n'
string|'"availability_zone"'
op|':'
string|"'fake_zone'"
op|'}'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'aggregate_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'AggregateError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_pool'
op|'.'
name|'remove_from_aggregate'
op|','
nl|'\n'
name|'None'
op|','
name|'result'
op|','
string|'"test_host"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_remove_slave
dedent|''
name|'def'
name|'test_remove_slave'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure eject slave gets called."""'
newline|'\n'
DECL|function|fake_eject_slave
name|'def'
name|'fake_eject_slave'
op|'('
name|'id'
op|','
name|'compute_uuid'
op|','
name|'host_uuid'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fake_eject_slave'
op|'.'
name|'called'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_pool'
op|','
string|'"_eject_slave"'
op|','
name|'fake_eject_slave'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'fake_metadata'
op|'['
string|"'host2'"
op|']'
op|'='
string|"'fake_host2_uuid'"
newline|'\n'
name|'aggregate'
op|'='
name|'self'
op|'.'
name|'_aggregate_setup'
op|'('
name|'hosts'
op|'='
op|'['
string|"'host'"
op|','
string|"'host2'"
op|']'
op|','
nl|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'fake_metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_pool'
op|'.'
name|'remove_from_aggregate'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'aggregate'
op|','
string|'"host2"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'fake_eject_slave'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_remove_master_solo
dedent|''
name|'def'
name|'test_remove_master_solo'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure metadata are cleared after removal."""'
newline|'\n'
DECL|function|fake_clear_pool
name|'def'
name|'fake_clear_pool'
op|'('
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fake_clear_pool'
op|'.'
name|'called'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_pool'
op|','
string|'"_clear_pool"'
op|','
name|'fake_clear_pool'
op|')'
newline|'\n'
nl|'\n'
name|'aggregate'
op|'='
name|'self'
op|'.'
name|'_aggregate_setup'
op|'('
name|'aggr_state'
op|'='
name|'aggregate_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'fake_metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_pool'
op|'.'
name|'remove_from_aggregate'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'aggregate'
op|','
string|'"host"'
op|')'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'aggregate_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'aggregate'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'fake_clear_pool'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
op|'{'
op|'}'
op|','
name|'result'
op|'.'
name|'metadetails'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'aggregate_states'
op|'.'
name|'ACTIVE'
op|','
name|'result'
op|'.'
name|'operational_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_remote_master_non_empty_pool
dedent|''
name|'def'
name|'test_remote_master_non_empty_pool'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure AggregateError is raised if removing the master."""'
newline|'\n'
name|'aggregate'
op|'='
name|'self'
op|'.'
name|'_aggregate_setup'
op|'('
name|'aggr_state'
op|'='
name|'aggregate_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host'"
op|','
string|"'host2'"
op|']'
op|','
nl|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'fake_metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidAggregateAction'
op|','
nl|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'_pool'
op|'.'
name|'remove_from_aggregate'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'aggregate'
op|','
string|'"host"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_aggregate_setup
dedent|''
name|'def'
name|'_aggregate_setup'
op|'('
name|'self'
op|','
name|'aggr_name'
op|'='
string|"'fake_aggregate'"
op|','
nl|'\n'
name|'aggr_zone'
op|'='
string|"'fake_zone'"
op|','
nl|'\n'
name|'aggr_state'
op|'='
name|'aggregate_states'
op|'.'
name|'CREATED'
op|','
nl|'\n'
name|'hosts'
op|'='
op|'['
string|"'host'"
op|']'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
string|'"name"'
op|':'
name|'aggr_name'
op|','
nl|'\n'
string|'"availability_zone"'
op|':'
name|'aggr_zone'
op|','
nl|'\n'
string|'"operational_state"'
op|':'
name|'aggr_state'
op|','
op|'}'
newline|'\n'
name|'result'
op|'='
name|'db'
op|'.'
name|'aggregate_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'for'
name|'host'
name|'in'
name|'hosts'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'aggregate_host_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'result'
op|'.'
name|'id'
op|','
name|'host'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'metadata'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'aggregate_metadata_add'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'result'
op|'.'
name|'id'
op|','
name|'metadata'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'db'
op|'.'
name|'aggregate_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'result'
op|'.'
name|'id'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
