begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2011 Piston Cloud Computing, Inc.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Test of Policy Engine For Nova"""'
newline|'\n'
nl|'\n'
name|'import'
name|'StringIO'
newline|'\n'
name|'import'
name|'tempfile'
newline|'\n'
name|'import'
name|'urllib2'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'common'
name|'import'
name|'policy'
name|'as'
name|'common_policy'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'common'
op|'.'
name|'policy'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'policy'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|PolicyFileTestCase
name|'class'
name|'PolicyFileTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'PolicyFileTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'policy'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'_'
op|','
name|'self'
op|'.'
name|'tmpfilename'
op|'='
name|'tempfile'
op|'.'
name|'mkstemp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'policy_file'
op|'='
name|'self'
op|'.'
name|'tmpfilename'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'target'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'PolicyFileTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
name|'policy'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_modified_policy_reloads
dedent|''
name|'def'
name|'test_modified_policy_reloads'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'action'
op|'='
string|'"example:test"'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'self'
op|'.'
name|'tmpfilename'
op|','
string|'"w"'
op|')'
name|'as'
name|'policyfile'
op|':'
newline|'\n'
indent|'            '
name|'policyfile'
op|'.'
name|'write'
op|'('
string|'"""{"example:test": []}"""'
op|')'
newline|'\n'
dedent|''
name|'policy'
op|'.'
name|'enforce'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'action'
op|','
name|'self'
op|'.'
name|'target'
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'self'
op|'.'
name|'tmpfilename'
op|','
string|'"w"'
op|')'
name|'as'
name|'policyfile'
op|':'
newline|'\n'
indent|'            '
name|'policyfile'
op|'.'
name|'write'
op|'('
string|'"""{"example:test": ["false:false"]}"""'
op|')'
newline|'\n'
comment|"# NOTE(vish): reset stored policy cache so we don't have to sleep(1)"
nl|'\n'
dedent|''
name|'policy'
op|'.'
name|'_POLICY_CACHE'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
name|'policy'
op|'.'
name|'enforce'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'action'
op|','
name|'self'
op|'.'
name|'target'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|PolicyTestCase
dedent|''
dedent|''
name|'class'
name|'PolicyTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'PolicyTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'policy'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
comment|'# NOTE(vish): preload rules to circumvent reloading from file'
nl|'\n'
name|'policy'
op|'.'
name|'init'
op|'('
op|')'
newline|'\n'
name|'rules'
op|'='
op|'{'
nl|'\n'
string|'"true"'
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|'"example:allowed"'
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|'"example:denied"'
op|':'
op|'['
op|'['
string|'"false:false"'
op|']'
op|']'
op|','
nl|'\n'
string|'"example:get_http"'
op|':'
op|'['
op|'['
string|'"http:http://www.example.com"'
op|']'
op|']'
op|','
nl|'\n'
string|'"example:my_file"'
op|':'
op|'['
op|'['
string|'"role:compute_admin"'
op|']'
op|','
nl|'\n'
op|'['
string|'"project_id:%(project_id)s"'
op|']'
op|']'
op|','
nl|'\n'
string|'"example:early_and_fail"'
op|':'
op|'['
op|'['
string|'"false:false"'
op|','
string|'"rule:true"'
op|']'
op|']'
op|','
nl|'\n'
string|'"example:early_or_success"'
op|':'
op|'['
op|'['
string|'"rule:true"'
op|']'
op|','
op|'['
string|'"false:false"'
op|']'
op|']'
op|','
nl|'\n'
string|'"example:sysadmin_allowed"'
op|':'
op|'['
op|'['
string|'"role:admin"'
op|']'
op|','
op|'['
string|'"role:sysadmin"'
op|']'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
comment|'# NOTE(vish): then overload underlying brain'
nl|'\n'
name|'common_policy'
op|'.'
name|'set_brain'
op|'('
name|'common_policy'
op|'.'
name|'HttpBrain'
op|'('
name|'rules'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|','
name|'roles'
op|'='
op|'['
string|"'member'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'admin_context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'admin'"
op|','
nl|'\n'
string|"'fake'"
op|','
nl|'\n'
name|'roles'
op|'='
op|'['
string|"'admin'"
op|']'
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'target'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'policy'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'super'
op|'('
name|'PolicyTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_enforce_nonexistent_action_throws
dedent|''
name|'def'
name|'test_enforce_nonexistent_action_throws'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'action'
op|'='
string|'"example:noexist"'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
name|'policy'
op|'.'
name|'enforce'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'action'
op|','
name|'self'
op|'.'
name|'target'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_enforce_bad_action_throws
dedent|''
name|'def'
name|'test_enforce_bad_action_throws'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'action'
op|'='
string|'"example:denied"'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
name|'policy'
op|'.'
name|'enforce'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'action'
op|','
name|'self'
op|'.'
name|'target'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_enforce_good_action
dedent|''
name|'def'
name|'test_enforce_good_action'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'action'
op|'='
string|'"example:allowed"'
newline|'\n'
name|'policy'
op|'.'
name|'enforce'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'action'
op|','
name|'self'
op|'.'
name|'target'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_enforce_http_true
dedent|''
name|'def'
name|'test_enforce_http_true'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fakeurlopen
indent|'        '
name|'def'
name|'fakeurlopen'
op|'('
name|'url'
op|','
name|'post_data'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
string|'"True"'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'urllib2'
op|','
string|"'urlopen'"
op|','
name|'fakeurlopen'
op|')'
newline|'\n'
name|'action'
op|'='
string|'"example:get_http"'
newline|'\n'
name|'target'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'result'
op|'='
name|'policy'
op|'.'
name|'enforce'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'action'
op|','
name|'target'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_enforce_http_false
dedent|''
name|'def'
name|'test_enforce_http_false'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fakeurlopen
indent|'        '
name|'def'
name|'fakeurlopen'
op|'('
name|'url'
op|','
name|'post_data'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
string|'"False"'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'urllib2'
op|','
string|"'urlopen'"
op|','
name|'fakeurlopen'
op|')'
newline|'\n'
name|'action'
op|'='
string|'"example:get_http"'
newline|'\n'
name|'target'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
name|'policy'
op|'.'
name|'enforce'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'action'
op|','
name|'target'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_templatized_enforcement
dedent|''
name|'def'
name|'test_templatized_enforcement'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'target_mine'
op|'='
op|'{'
string|"'project_id'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'target_not_mine'
op|'='
op|'{'
string|"'project_id'"
op|':'
string|"'another'"
op|'}'
newline|'\n'
name|'action'
op|'='
string|'"example:my_file"'
newline|'\n'
name|'policy'
op|'.'
name|'enforce'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'action'
op|','
name|'target_mine'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
name|'policy'
op|'.'
name|'enforce'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'action'
op|','
name|'target_not_mine'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_early_AND_enforcement
dedent|''
name|'def'
name|'test_early_AND_enforcement'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'action'
op|'='
string|'"example:early_and_fail"'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
name|'policy'
op|'.'
name|'enforce'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'action'
op|','
name|'self'
op|'.'
name|'target'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_early_OR_enforcement
dedent|''
name|'def'
name|'test_early_OR_enforcement'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'action'
op|'='
string|'"example:early_or_success"'
newline|'\n'
name|'policy'
op|'.'
name|'enforce'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'action'
op|','
name|'self'
op|'.'
name|'target'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DefaultPolicyTestCase
dedent|''
dedent|''
name|'class'
name|'DefaultPolicyTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'DefaultPolicyTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'policy'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'policy'
op|'.'
name|'init'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'rules'
op|'='
op|'{'
nl|'\n'
string|'"default"'
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|'"example:exist"'
op|':'
op|'['
op|'['
string|'"false:false"'
op|']'
op|']'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_set_brain'
op|'('
string|"'default'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_set_brain
dedent|''
name|'def'
name|'_set_brain'
op|'('
name|'self'
op|','
name|'default_rule'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'brain'
op|'='
name|'nova'
op|'.'
name|'common'
op|'.'
name|'policy'
op|'.'
name|'HttpBrain'
op|'('
name|'self'
op|'.'
name|'rules'
op|','
name|'default_rule'
op|')'
newline|'\n'
name|'nova'
op|'.'
name|'common'
op|'.'
name|'policy'
op|'.'
name|'set_brain'
op|'('
name|'brain'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'DefaultPolicyTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'policy'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_policy_called
dedent|''
name|'def'
name|'test_policy_called'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
name|'policy'
op|'.'
name|'enforce'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|'"example:exist"'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_not_found_policy_calls_default
dedent|''
name|'def'
name|'test_not_found_policy_calls_default'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'policy'
op|'.'
name|'enforce'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|'"example:noexist"'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_default_not_found
dedent|''
name|'def'
name|'test_default_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_set_brain'
op|'('
string|'"default_noexist"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
name|'policy'
op|'.'
name|'enforce'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|'"example:noexist"'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
