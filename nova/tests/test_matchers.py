begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2012 Hewlett-Packard Development Company, L.P.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'# not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'# a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#      http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'# License for the specific language governing permissions and limitations'
nl|'\n'
comment|'# under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'testtools'
newline|'\n'
name|'from'
name|'testtools'
op|'.'
name|'tests'
op|'.'
name|'matchers'
name|'import'
name|'helpers'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'matchers'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestDictMatches
name|'class'
name|'TestDictMatches'
op|'('
name|'testtools'
op|'.'
name|'TestCase'
op|','
name|'helpers'
op|'.'
name|'TestMatchersInterface'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|matches_matcher
indent|'    '
name|'matches_matcher'
op|'='
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
nl|'\n'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|','
string|"'baz'"
op|':'
string|"'DONTCARE'"
op|','
nl|'\n'
string|"'cat'"
op|':'
op|'{'
string|"'tabby'"
op|':'
name|'True'
op|','
string|"'fluffy'"
op|':'
name|'False'
op|'}'
op|'}'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|matches_matches
name|'matches_matches'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|','
string|"'baz'"
op|':'
string|"'noox'"
op|','
string|"'cat'"
op|':'
op|'{'
string|"'tabby'"
op|':'
name|'True'
op|','
string|"'fluffy'"
op|':'
name|'False'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|','
string|"'baz'"
op|':'
string|"'quux'"
op|','
string|"'cat'"
op|':'
op|'{'
string|"'tabby'"
op|':'
name|'True'
op|','
string|"'fluffy'"
op|':'
name|'False'
op|'}'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|matches_mismatches
name|'matches_mismatches'
op|'='
op|'['
nl|'\n'
op|'{'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|','
string|"'baz'"
op|':'
string|"'qux'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'foo'"
op|':'
string|"'bop'"
op|','
string|"'baz'"
op|':'
string|"'qux'"
op|','
nl|'\n'
string|"'cat'"
op|':'
op|'{'
string|"'tabby'"
op|':'
name|'True'
op|','
string|"'fluffy'"
op|':'
name|'False'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|','
string|"'baz'"
op|':'
string|"'quux'"
op|','
nl|'\n'
string|"'cat'"
op|':'
op|'{'
string|"'tabby'"
op|':'
name|'True'
op|','
string|"'fluffy'"
op|':'
name|'True'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|','
string|"'cat'"
op|':'
op|'{'
string|"'tabby'"
op|':'
name|'True'
op|','
string|"'fluffy'"
op|':'
name|'False'
op|'}'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|str_examples
name|'str_examples'
op|'='
op|'['
nl|'\n'
op|'('
string|'"DictMatches({\'baz\': \'DONTCARE\', \'cat\':"'
nl|'\n'
string|'" {\'fluffy\': False, \'tabby\': True}, \'foo\': \'bar\'})"'
op|','
nl|'\n'
name|'matches_matcher'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|describe_examples
name|'describe_examples'
op|'='
op|'['
nl|'\n'
op|'('
string|'"Keys in d1 and not d2: set([\'foo\', \'baz\', \'cat\'])."'
nl|'\n'
string|'" Keys in d2 and not d1: set([])"'
op|','
op|'{'
op|'}'
op|','
name|'matches_matcher'
op|')'
op|','
nl|'\n'
op|'('
string|'"Dictionaries do not match at fluffy. d1: False d2: True"'
op|','
nl|'\n'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|','
string|"'baz'"
op|':'
string|"'quux'"
op|','
nl|'\n'
string|"'cat'"
op|':'
op|'{'
string|"'tabby'"
op|':'
name|'True'
op|','
string|"'fluffy'"
op|':'
name|'True'
op|'}'
op|'}'
op|','
name|'matches_matcher'
op|')'
op|','
nl|'\n'
op|'('
string|'"Dictionaries do not match at foo. d1: bar d2: bop"'
op|','
nl|'\n'
op|'{'
string|"'foo'"
op|':'
string|"'bop'"
op|','
string|"'baz'"
op|':'
string|"'quux'"
op|','
nl|'\n'
string|"'cat'"
op|':'
op|'{'
string|"'tabby'"
op|':'
name|'True'
op|','
string|"'fluffy'"
op|':'
name|'False'
op|'}'
op|'}'
op|','
name|'matches_matcher'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestDictListMatches
dedent|''
name|'class'
name|'TestDictListMatches'
op|'('
name|'testtools'
op|'.'
name|'TestCase'
op|','
name|'helpers'
op|'.'
name|'TestMatchersInterface'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|matches_matcher
indent|'    '
name|'matches_matcher'
op|'='
name|'matchers'
op|'.'
name|'DictListMatches'
op|'('
nl|'\n'
op|'['
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|','
string|"'baz'"
op|':'
string|"'DONTCARE'"
op|','
nl|'\n'
string|"'cat'"
op|':'
op|'{'
string|"'tabby'"
op|':'
name|'True'
op|','
string|"'fluffy'"
op|':'
name|'False'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'dog'"
op|':'
string|"'yorkie'"
op|'}'
op|','
nl|'\n'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|matches_matches
name|'matches_matches'
op|'='
op|'['
nl|'\n'
op|'['
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|','
string|"'baz'"
op|':'
string|"'qoox'"
op|','
nl|'\n'
string|"'cat'"
op|':'
op|'{'
string|"'tabby'"
op|':'
name|'True'
op|','
string|"'fluffy'"
op|':'
name|'False'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'dog'"
op|':'
string|"'yorkie'"
op|'}'
op|']'
op|','
nl|'\n'
op|'['
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|','
string|"'baz'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'cat'"
op|':'
op|'{'
string|"'tabby'"
op|':'
name|'True'
op|','
string|"'fluffy'"
op|':'
name|'False'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'dog'"
op|':'
string|"'yorkie'"
op|'}'
op|']'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|matches_mismatches
name|'matches_mismatches'
op|'='
op|'['
nl|'\n'
op|'['
op|']'
op|','
nl|'\n'
op|'{'
op|'}'
op|','
nl|'\n'
op|'['
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|','
string|"'baz'"
op|':'
string|"'qoox'"
op|','
nl|'\n'
string|"'cat'"
op|':'
op|'{'
string|"'tabby'"
op|':'
name|'True'
op|','
string|"'fluffy'"
op|':'
name|'True'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'dog'"
op|':'
string|"'yorkie'"
op|'}'
op|']'
op|','
nl|'\n'
op|'['
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|','
string|"'baz'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'cat'"
op|':'
op|'{'
string|"'tabby'"
op|':'
name|'True'
op|','
string|"'fluffy'"
op|':'
name|'False'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'cat'"
op|':'
string|"'yorkie'"
op|'}'
op|']'
op|','
nl|'\n'
op|'['
op|'{'
string|"'foo'"
op|':'
string|"'bop'"
op|','
string|"'baz'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'cat'"
op|':'
op|'{'
string|"'tabby'"
op|':'
name|'True'
op|','
string|"'fluffy'"
op|':'
name|'False'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'dog'"
op|':'
string|"'yorkie'"
op|'}'
op|']'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|str_examples
name|'str_examples'
op|'='
op|'['
nl|'\n'
op|'('
string|'"DictListMatches([{\'baz\': \'DONTCARE\', \'cat\':"'
nl|'\n'
string|'" {\'fluffy\': False, \'tabby\': True}, \'foo\': \'bar\'},\\n"'
nl|'\n'
string|'" {\'dog\': \'yorkie\'}])"'
op|','
nl|'\n'
name|'matches_matcher'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|describe_examples
name|'describe_examples'
op|'='
op|'['
nl|'\n'
op|'('
string|'"Length mismatch: len(L1)=2 != len(L2)=0"'
op|','
op|'{'
op|'}'
op|','
name|'matches_matcher'
op|')'
op|','
nl|'\n'
op|'('
string|'"Dictionaries do not match at fluffy. d1: True d2: False"'
op|','
nl|'\n'
op|'['
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|','
string|"'baz'"
op|':'
string|"'qoox'"
op|','
nl|'\n'
string|"'cat'"
op|':'
op|'{'
string|"'tabby'"
op|':'
name|'True'
op|','
string|"'fluffy'"
op|':'
name|'True'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'dog'"
op|':'
string|"'yorkie'"
op|'}'
op|']'
op|','
nl|'\n'
name|'matches_matcher'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestDictMatches
dedent|''
name|'class'
name|'TestDictMatches'
op|'('
name|'testtools'
op|'.'
name|'TestCase'
op|','
name|'helpers'
op|'.'
name|'TestMatchersInterface'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|matches_matcher
indent|'    '
name|'matches_matcher'
op|'='
name|'matchers'
op|'.'
name|'IsSubDictOf'
op|'('
nl|'\n'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|','
string|"'baz'"
op|':'
string|"'DONTCARE'"
op|','
nl|'\n'
string|"'cat'"
op|':'
op|'{'
string|"'tabby'"
op|':'
name|'True'
op|','
string|"'fluffy'"
op|':'
name|'False'
op|'}'
op|'}'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|matches_matches
name|'matches_matches'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|','
string|"'baz'"
op|':'
string|"'noox'"
op|','
string|"'cat'"
op|':'
op|'{'
string|"'tabby'"
op|':'
name|'True'
op|','
string|"'fluffy'"
op|':'
name|'False'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|','
string|"'baz'"
op|':'
string|"'quux'"
op|'}'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|matches_mismatches
name|'matches_mismatches'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'foo'"
op|':'
string|"'bop'"
op|','
string|"'baz'"
op|':'
string|"'qux'"
op|','
nl|'\n'
string|"'cat'"
op|':'
op|'{'
string|"'tabby'"
op|':'
name|'True'
op|','
string|"'fluffy'"
op|':'
name|'False'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|','
string|"'baz'"
op|':'
string|"'quux'"
op|','
nl|'\n'
string|"'cat'"
op|':'
op|'{'
string|"'tabby'"
op|':'
name|'True'
op|','
string|"'fluffy'"
op|':'
name|'True'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|','
string|"'cat'"
op|':'
op|'{'
string|"'tabby'"
op|':'
name|'True'
op|','
string|"'fluffy'"
op|':'
name|'False'
op|'}'
op|','
string|"'dog'"
op|':'
name|'None'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|str_examples
name|'str_examples'
op|'='
op|'['
nl|'\n'
op|'('
string|'"IsSubDictOf({\'foo\': \'bar\', \'baz\': \'DONTCARE\',"'
nl|'\n'
string|'" \'cat\': {\'fluffy\': False, \'tabby\': True}})"'
op|','
nl|'\n'
name|'matches_matcher'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|describe_examples
name|'describe_examples'
op|'='
op|'['
nl|'\n'
op|'('
string|'"Dictionaries do not match at fluffy. d1: False d2: True"'
op|','
nl|'\n'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|','
string|"'baz'"
op|':'
string|"'quux'"
op|','
nl|'\n'
string|"'cat'"
op|':'
op|'{'
string|"'tabby'"
op|':'
name|'True'
op|','
string|"'fluffy'"
op|':'
name|'True'
op|'}'
op|'}'
op|','
name|'matches_matcher'
op|')'
op|','
nl|'\n'
op|'('
string|'"Dictionaries do not match at foo. d1: bar d2: bop"'
op|','
nl|'\n'
op|'{'
string|"'foo'"
op|':'
string|"'bop'"
op|','
string|"'baz'"
op|':'
string|"'quux'"
op|','
nl|'\n'
string|"'cat'"
op|':'
op|'{'
string|"'tabby'"
op|':'
name|'True'
op|','
string|"'fluffy'"
op|':'
name|'False'
op|'}'
op|'}'
op|','
name|'matches_matcher'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
dedent|''
endmarker|''
end_unit
