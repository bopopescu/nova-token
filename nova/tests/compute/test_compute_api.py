begin_unit
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Unit tests for compute API."""'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'api'
name|'as'
name|'compute_api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'cells_api'
name|'as'
name|'compute_cells_api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'flavors'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'instance_actions'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'base'
name|'as'
name|'obj_base'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'instance'
name|'as'
name|'instance_obj'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'timeutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'uuidutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FAKE_IMAGE_REF
name|'FAKE_IMAGE_REF'
op|'='
string|"'fake-image-ref'"
newline|'\n'
DECL|variable|NODENAME
name|'NODENAME'
op|'='
string|"'fakenode1'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_ComputeAPIUnitTestMixIn
name|'class'
name|'_ComputeAPIUnitTestMixIn'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'_ComputeAPIUnitTestMixIn'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_flavor
dedent|''
name|'def'
name|'_create_flavor'
op|'('
name|'self'
op|','
name|'params'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavor'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'flavorid'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'m1.tiny'"
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'512'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'vcpu_weight'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rxtx_factor'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'swap'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'disabled'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'True'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'if'
name|'params'
op|':'
newline|'\n'
indent|'            '
name|'flavor'
op|'.'
name|'update'
op|'('
name|'params'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'flavor'
newline|'\n'
nl|'\n'
DECL|member|_create_instance_obj
dedent|''
name|'def'
name|'_create_instance_obj'
op|'('
name|'self'
op|','
name|'params'
op|'='
name|'None'
op|','
name|'flavor'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a test instance."""'
newline|'\n'
name|'if'
name|'not'
name|'params'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'flavor'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'flavor'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|make_fake_sys_meta
dedent|''
name|'def'
name|'make_fake_sys_meta'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sys_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'flavors'
op|'.'
name|'system_metadata_flavor_props'
op|':'
newline|'\n'
indent|'                '
name|'sys_meta'
op|'['
string|"'instance_type_%s'"
op|'%'
name|'key'
op|']'
op|'='
name|'flavor'
op|'['
name|'key'
op|']'
newline|'\n'
dedent|''
name|'return'
name|'sys_meta'
newline|'\n'
nl|'\n'
dedent|''
name|'now'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'instance_obj'
op|'.'
name|'Instance'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'id'
op|'='
number|'1'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'cell_name'
op|'='
string|"'api!child'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'None'
newline|'\n'
name|'instance'
op|'.'
name|'image_ref'
op|'='
name|'FAKE_IMAGE_REF'
newline|'\n'
name|'instance'
op|'.'
name|'reservation_id'
op|'='
string|"'r-fakeres'"
newline|'\n'
name|'instance'
op|'.'
name|'user_id'
op|'='
name|'self'
op|'.'
name|'user_id'
newline|'\n'
name|'instance'
op|'.'
name|'project_id'
op|'='
name|'self'
op|'.'
name|'project_id'
newline|'\n'
name|'instance'
op|'.'
name|'host'
op|'='
string|"'fake_host'"
newline|'\n'
name|'instance'
op|'.'
name|'node'
op|'='
name|'NODENAME'
newline|'\n'
name|'instance'
op|'.'
name|'instance_type_id'
op|'='
name|'flavor'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'instance'
op|'.'
name|'ami_launch_index'
op|'='
number|'0'
newline|'\n'
name|'instance'
op|'.'
name|'memory_mb'
op|'='
number|'0'
newline|'\n'
name|'instance'
op|'.'
name|'vcpus'
op|'='
number|'0'
newline|'\n'
name|'instance'
op|'.'
name|'root_gb'
op|'='
number|'0'
newline|'\n'
name|'instance'
op|'.'
name|'ephemeral_gb'
op|'='
number|'0'
newline|'\n'
name|'instance'
op|'.'
name|'architecture'
op|'='
string|"'x86_64'"
newline|'\n'
name|'instance'
op|'.'
name|'os_type'
op|'='
string|"'Linux'"
newline|'\n'
name|'instance'
op|'.'
name|'system_metadata'
op|'='
name|'make_fake_sys_meta'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'locked'
op|'='
name|'False'
newline|'\n'
name|'instance'
op|'.'
name|'created_at'
op|'='
name|'now'
newline|'\n'
name|'instance'
op|'.'
name|'updated_at'
op|'='
name|'now'
newline|'\n'
name|'instance'
op|'.'
name|'launched_at'
op|'='
name|'now'
newline|'\n'
nl|'\n'
name|'if'
name|'params'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'.'
name|'update'
op|'('
name|'params'
op|')'
newline|'\n'
dedent|''
name|'instance'
op|'.'
name|'obj_reset_changes'
op|'('
op|')'
newline|'\n'
name|'return'
name|'instance'
newline|'\n'
nl|'\n'
DECL|member|test_start
dedent|''
name|'def'
name|'test_start'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
name|'dict'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'STOPPED'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
nl|'\n'
string|"'_record_action_start'"
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
name|'expected_task_state'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_record_action_start'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
name|'instance_actions'
op|'.'
name|'START'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'is_cells'
op|':'
newline|'\n'
indent|'            '
name|'rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'cells_rpcapi'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpcapi'
op|','
string|"'start_instance'"
op|')'
newline|'\n'
name|'rpcapi'
op|'.'
name|'start_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'start'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'task_states'
op|'.'
name|'POWERING_ON'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_start_invalid_state
dedent|''
name|'def'
name|'test_start_invalid_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'.'
name|'vm_state'
op|','
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'start'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_start_no_host
dedent|''
name|'def'
name|'test_start_no_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
name|'dict'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'STOPPED'
op|','
name|'host'
op|'='
string|"''"
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotReady'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'start'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop
dedent|''
name|'def'
name|'test_stop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Make sure 'progress' gets reset"
nl|'\n'
indent|'        '
name|'params'
op|'='
name|'dict'
op|'('
name|'task_state'
op|'='
name|'None'
op|','
name|'progress'
op|'='
number|'99'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
nl|'\n'
string|"'_record_action_start'"
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
name|'expected_task_state'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_record_action_start'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
name|'instance_actions'
op|'.'
name|'STOP'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'is_cells'
op|':'
newline|'\n'
indent|'            '
name|'rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'cells_rpcapi'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'rpcapi'
op|'='
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpcapi'
op|','
string|"'stop_instance'"
op|')'
newline|'\n'
name|'rpcapi'
op|'.'
name|'stop_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'do_cast'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'stop'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'task_states'
op|'.'
name|'POWERING_OFF'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'instance'
op|'.'
name|'progress'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_invalid_state
dedent|''
name|'def'
name|'test_stop_invalid_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
name|'dict'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'PAUSED'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'stop'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_a_stopped_inst
dedent|''
name|'def'
name|'test_stop_a_stopped_inst'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
op|'{'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'STOPPED'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'stop'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_no_host
dedent|''
name|'def'
name|'test_stop_no_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
op|'{'
string|"'host'"
op|':'
string|"''"
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
name|'params'
op|'='
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotReady'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'stop'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_reboot_type
dedent|''
name|'def'
name|'_test_reboot_type'
op|'('
name|'self'
op|','
name|'vm_state'
op|','
name|'reboot_type'
op|','
name|'task_state'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
comment|'# Ensure instance can be soft rebooted.'
nl|'\n'
indent|'        '
name|'inst'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'vm_state'
op|'='
name|'vm_state'
newline|'\n'
name|'inst'
op|'.'
name|'task_state'
op|'='
name|'task_state'
newline|'\n'
name|'db_inst'
op|'='
name|'obj_base'
op|'.'
name|'obj_to_primitive'
op|'('
name|'inst'
op|')'
newline|'\n'
nl|'\n'
name|'new_state'
op|'='
op|'('
name|'reboot_type'
op|'=='
string|"'HARD'"
name|'and'
nl|'\n'
name|'task_states'
op|'.'
name|'REBOOTING_HARD'
name|'or'
name|'task_states'
op|'.'
name|'REBOOTING'
op|')'
newline|'\n'
name|'new_inst'
op|'='
name|'dict'
op|'('
name|'db_inst'
op|','
name|'task_state'
op|'='
name|'new_state'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'elevated'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|"'_get_block_device_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|"'_record_action_start'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|"'update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|','
nl|'\n'
string|"'reboot_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'db_inst'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'new_state'
op|','
nl|'\n'
name|'expected_task_state'
op|'='
op|'['
name|'None'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'REBOOTING'
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'new_inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_get_block_device_info'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'.'
name|'uuid'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'blkinfo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_record_action_start'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'new_inst'
op|','
nl|'\n'
name|'instance_actions'
op|'.'
name|'REBOOT'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'compute_rpcapi'
op|'.'
name|'reboot_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'='
name|'new_inst'
op|','
name|'block_device_info'
op|'='
string|"'blkinfo'"
op|','
nl|'\n'
name|'reboot_type'
op|'='
name|'reboot_type'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'is_cells'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute_api'
op|','
string|"'_cast_to_cells'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'_cast_to_cells'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'db_inst'
op|','
string|"'reboot'"
op|','
name|'reboot_type'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'reboot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'db_inst'
op|','
name|'reboot_type'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_reboot_type_fails
dedent|''
name|'def'
name|'_test_reboot_type_fails'
op|'('
name|'self'
op|','
name|'reboot_type'
op|','
op|'**'
name|'updates'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'self'
op|'.'
name|'_create_instance_obj'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'update'
op|'('
name|'updates'
op|')'
newline|'\n'
name|'db_inst'
op|'='
name|'obj_base'
op|'.'
name|'obj_to_primitive'
op|'('
name|'inst'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'reboot'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'db_inst'
op|','
name|'reboot_type'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_hard_active
dedent|''
name|'def'
name|'test_reboot_hard_active'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
string|"'HARD'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_hard_error
dedent|''
name|'def'
name|'test_reboot_hard_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type'
op|'('
name|'vm_states'
op|'.'
name|'ERROR'
op|','
string|"'HARD'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_hard_rebooting
dedent|''
name|'def'
name|'test_reboot_hard_rebooting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
string|"'HARD'"
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOTING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_hard_rescued
dedent|''
name|'def'
name|'test_reboot_hard_rescued'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type_fails'
op|'('
string|"'HARD'"
op|','
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'RESCUED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_hard_error_not_launched
dedent|''
name|'def'
name|'test_reboot_hard_error_not_launched'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type_fails'
op|'('
string|"'HARD'"
op|','
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
op|','
nl|'\n'
name|'launched_at'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_soft
dedent|''
name|'def'
name|'test_reboot_soft'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
string|"'SOFT'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_soft_error
dedent|''
name|'def'
name|'test_reboot_soft_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type'
op|'('
name|'vm_states'
op|'.'
name|'ERROR'
op|','
string|"'SOFT'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_soft_rebooting
dedent|''
name|'def'
name|'test_reboot_soft_rebooting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type_fails'
op|'('
string|"'SOFT'"
op|','
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOTING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_soft_rescued
dedent|''
name|'def'
name|'test_reboot_soft_rescued'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type_fails'
op|'('
string|"'SOFT'"
op|','
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'RESCUED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_soft_error_not_launched
dedent|''
name|'def'
name|'test_reboot_soft_error_not_launched'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_reboot_type_fails'
op|'('
string|"'SOFT'"
op|','
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
op|','
nl|'\n'
name|'launched_at'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ComputeAPIUnitTestCase
dedent|''
dedent|''
name|'class'
name|'ComputeAPIUnitTestCase'
op|'('
name|'_ComputeAPIUnitTestMixIn'
op|','
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ComputeAPIUnitTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'is_cells'
op|'='
name|'False'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ComputeCellsAPIUnitTestCase
dedent|''
dedent|''
name|'class'
name|'ComputeCellsAPIUnitTestCase'
op|'('
name|'_ComputeAPIUnitTestMixIn'
op|','
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ComputeCellsAPIUnitTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_api'
op|'='
name|'compute_cells_api'
op|'.'
name|'ComputeCellsAPI'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'is_cells'
op|'='
name|'True'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
