begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'#    Copyright 2012 IBM Corp.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'mox'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'manager'
name|'as'
name|'compute_manager'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'fake'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'virtapi'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VirtAPIBaseTest
name|'class'
name|'VirtAPIBaseTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|','
name|'test'
op|'.'
name|'APICoverage'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|cover_api
indent|'    '
name|'cover_api'
op|'='
name|'virtapi'
op|'.'
name|'VirtAPI'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VirtAPIBaseTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake-user'"
op|','
string|"'fake-project'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'set_up_virtapi'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|set_up_virtapi
dedent|''
name|'def'
name|'set_up_virtapi'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'virtapi'
op|'='
name|'virtapi'
op|'.'
name|'VirtAPI'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|assertExpected
dedent|''
name|'def'
name|'assertExpected'
op|'('
name|'self'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
nl|'\n'
name|'getattr'
op|'('
name|'self'
op|'.'
name|'virtapi'
op|','
name|'method'
op|')'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update
dedent|''
name|'def'
name|'test_instance_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertExpected'
op|'('
string|"'instance_update'"
op|','
string|"'fake-uuid'"
op|','
nl|'\n'
name|'dict'
op|'('
name|'host'
op|'='
string|"'foohost'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_get_by_host
dedent|''
name|'def'
name|'test_aggregate_get_by_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertExpected'
op|'('
string|"'aggregate_get_by_host'"
op|','
string|"'fake-host'"
op|','
name|'key'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_add
dedent|''
name|'def'
name|'test_aggregate_metadata_add'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertExpected'
op|'('
string|"'aggregate_metadata_add'"
op|','
op|'{'
string|"'id'"
op|':'
string|"'fake'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'foo'"
op|':'
string|"'bar'"
op|'}'
op|','
name|'set_delete'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aggregate_metadata_delete
dedent|''
name|'def'
name|'test_aggregate_metadata_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertExpected'
op|'('
string|"'aggregate_metadata_delete'"
op|','
op|'{'
string|"'id'"
op|':'
string|"'fake'"
op|'}'
op|','
nl|'\n'
string|"'foo'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_get_by_instance
dedent|''
name|'def'
name|'test_security_group_get_by_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertExpected'
op|'('
string|"'security_group_get_by_instance'"
op|','
nl|'\n'
op|'{'
string|"'uuid'"
op|':'
string|"'fake-id'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_rule_get_by_security_group
dedent|''
name|'def'
name|'test_security_group_rule_get_by_security_group'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertExpected'
op|'('
string|"'security_group_rule_get_by_security_group'"
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
string|"'fake-id'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_provider_fw_rule_get_all
dedent|''
name|'def'
name|'test_provider_fw_rule_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertExpected'
op|'('
string|"'provider_fw_rule_get_all'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_agent_build_get_by_triple
dedent|''
name|'def'
name|'test_agent_build_get_by_triple'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertExpected'
op|'('
string|"'agent_build_get_by_triple'"
op|','
nl|'\n'
string|"'fake-hv'"
op|','
string|"'gnu/hurd'"
op|','
string|"'fake-arch'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_get
dedent|''
name|'def'
name|'test_instance_type_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertExpected'
op|'('
string|"'instance_type_get'"
op|','
nl|'\n'
string|"'fake-instance-type'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_block_device_mapping_get_all_by_instance
dedent|''
name|'def'
name|'test_block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertExpected'
op|'('
string|"'block_device_mapping_get_all_by_instance'"
op|','
nl|'\n'
op|'{'
string|"'uuid'"
op|':'
string|"'fake_uuid'"
op|'}'
op|','
name|'legacy'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeVirtAPITest
dedent|''
dedent|''
name|'class'
name|'FakeVirtAPITest'
op|'('
name|'VirtAPIBaseTest'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|cover_api
indent|'    '
name|'cover_api'
op|'='
name|'fake'
op|'.'
name|'FakeVirtAPI'
newline|'\n'
nl|'\n'
DECL|member|set_up_virtapi
name|'def'
name|'set_up_virtapi'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'virtapi'
op|'='
name|'fake'
op|'.'
name|'FakeVirtAPI'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|assertExpected
dedent|''
name|'def'
name|'assertExpected'
op|'('
name|'self'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'method'
op|'=='
string|"'instance_update'"
op|':'
newline|'\n'
comment|'# NOTE(danms): instance_update actually becomes the other variant'
nl|'\n'
comment|'# in FakeVirtAPI'
nl|'\n'
indent|'            '
name|'db_method'
op|'='
string|"'instance_update_and_get_original'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'db_method'
op|'='
name|'method'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
name|'db_method'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'method'
name|'in'
op|'('
string|"'aggregate_metadata_add'"
op|','
string|"'aggregate_metadata_delete'"
op|','
nl|'\n'
string|"'security_group_rule_get_by_security_group'"
op|')'
op|':'
newline|'\n'
comment|'# NOTE(danms): FakeVirtAPI will convert the first argument to'
nl|'\n'
comment|"# argument['id'], so expect that in the actual db call"
nl|'\n'
indent|'            '
name|'e_args'
op|'='
name|'tuple'
op|'('
op|'['
name|'args'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|']'
op|'+'
name|'list'
op|'('
name|'args'
op|'['
number|'1'
op|':'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'method'
name|'in'
op|'('
string|"'security_group_get_by_instance'"
op|','
nl|'\n'
string|"'block_device_mapping_get_all_by_instance'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'e_args'
op|'='
name|'tuple'
op|'('
op|'['
name|'args'
op|'['
number|'0'
op|']'
op|'['
string|"'uuid'"
op|']'
op|']'
op|'+'
name|'list'
op|'('
name|'args'
op|'['
number|'1'
op|':'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'e_args'
op|'='
name|'args'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'method'
name|'in'
op|'('
string|"'block_device_mapping_get_all_by_instance'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'e_kwargs'
op|'='
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'e_kwargs'
op|'='
name|'kwargs'
newline|'\n'
nl|'\n'
dedent|''
name|'getattr'
op|'('
name|'db'
op|','
name|'db_method'
op|')'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'*'
name|'e_args'
op|','
op|'**'
name|'e_kwargs'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
string|"'it worked'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'getattr'
op|'('
name|'self'
op|'.'
name|'virtapi'
op|','
name|'method'
op|')'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'it worked'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeCompute
dedent|''
dedent|''
name|'class'
name|'FakeCompute'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'conductor_api'
op|'='
name|'mox'
op|'.'
name|'MockAnything'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'db'
op|'='
name|'mox'
op|'.'
name|'MockAnything'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_instance_update
dedent|''
name|'def'
name|'_instance_update'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_uuid'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(danms): Fake this behavior from compute/manager::ComputeManager'
nl|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'conductor_api'
op|'.'
name|'instance_update'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance_uuid'
op|','
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ComputeVirtAPITest
dedent|''
dedent|''
name|'class'
name|'ComputeVirtAPITest'
op|'('
name|'VirtAPIBaseTest'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|cover_api
indent|'    '
name|'cover_api'
op|'='
name|'compute_manager'
op|'.'
name|'ComputeVirtAPI'
newline|'\n'
nl|'\n'
DECL|member|set_up_virtapi
name|'def'
name|'set_up_virtapi'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'compute'
op|'='
name|'FakeCompute'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'virtapi'
op|'='
name|'compute_manager'
op|'.'
name|'ComputeVirtAPI'
op|'('
name|'self'
op|'.'
name|'compute'
op|')'
newline|'\n'
nl|'\n'
DECL|member|assertExpected
dedent|''
name|'def'
name|'assertExpected'
op|'('
name|'self'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'conductor_api'
op|','
name|'method'
op|')'
newline|'\n'
name|'getattr'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'conductor_api'
op|','
name|'method'
op|')'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'it worked'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'getattr'
op|'('
name|'self'
op|'.'
name|'virtapi'
op|','
name|'method'
op|')'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'it worked'"
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
