begin_unit
comment|'# Copyright (c) 2012 OpenStack, LLC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'api'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fake_hosts'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HostApiTestCase
name|'class'
name|'HostApiTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Tests \'host\' subset of the compute api\n    """'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'HostApiTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_rpcapi'
op|'='
name|'api'
op|'.'
name|'compute_rpcapi'
newline|'\n'
name|'self'
op|'.'
name|'api'
op|'='
name|'api'
op|'.'
name|'HostAPI'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bad_host_set_enabled
dedent|''
name|'def'
name|'test_bad_host_set_enabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Tests that actions on single hosts that don\'t exist blow up without\n        having to reach the host via rpc.  Should raise HostNotFound if you\n        try to update a host that is not in the DB\n        """'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'HostNotFound'
op|','
name|'self'
op|'.'
name|'api'
op|'.'
name|'set_host_enabled'
op|','
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
string|'"bogus_host_name"'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_compute_hosts
dedent|''
name|'def'
name|'test_list_compute_hosts'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctx'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'service_get_all'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_get_all'
op|'('
name|'ctx'
op|','
name|'False'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_hosts'
op|'.'
name|'SERVICES_LIST'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'compute_hosts'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'list_hosts'
op|'('
name|'ctx'
op|','
name|'service'
op|'='
string|'"compute"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
name|'host'
name|'for'
name|'host'
name|'in'
name|'fake_hosts'
op|'.'
name|'HOST_LIST'
nl|'\n'
name|'if'
name|'host'
op|'['
string|'"service"'
op|']'
op|'=='
string|'"compute"'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'compute_hosts'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_host
dedent|''
name|'def'
name|'test_describe_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Makes sure that describe_host returns the correct information\n        given our fake input.\n        """'
newline|'\n'
name|'ctx'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'service_get_by_compute_host'"
op|')'
newline|'\n'
name|'host_name'
op|'='
string|"'host_c1'"
newline|'\n'
name|'db'
op|'.'
name|'service_get_by_compute_host'
op|'('
name|'ctx'
op|','
name|'host_name'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'fake_host'"
op|','
nl|'\n'
string|"'compute_node'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'vcpus'"
op|':'
number|'4'
op|','
nl|'\n'
string|"'vcpus_used'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'8192'
op|','
nl|'\n'
string|"'memory_mb_used'"
op|':'
number|'2048'
op|','
nl|'\n'
string|"'local_gb'"
op|':'
number|'1024'
op|','
nl|'\n'
string|"'local_gb_used'"
op|':'
number|'648'
op|'}'
nl|'\n'
op|']'
nl|'\n'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_host'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_host'
op|'('
name|'ctx'
op|','
string|"'fake_host'"
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'['
op|'{'
string|"'project_id'"
op|':'
number|'42'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'2048'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
number|'648'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
number|'0'
op|','
nl|'\n'
op|'}'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'describe_host'
op|'('
name|'ctx'
op|','
name|'host_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
nl|'\n'
op|'['
op|'{'
string|"'resource'"
op|':'
op|'{'
string|"'cpu'"
op|':'
number|'4'
op|','
nl|'\n'
string|"'disk_gb'"
op|':'
number|'1024'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'host_c1'"
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'8192'
op|','
nl|'\n'
string|"'project'"
op|':'
string|"'(total)'"
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'resource'"
op|':'
op|'{'
string|"'cpu'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'disk_gb'"
op|':'
number|'648'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'host_c1'"
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'2048'
op|','
nl|'\n'
string|"'project'"
op|':'
string|"'(used_now)'"
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'resource'"
op|':'
op|'{'
string|"'cpu'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'disk_gb'"
op|':'
number|'648'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'host_c1'"
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'2048'
op|','
nl|'\n'
string|"'project'"
op|':'
string|"'(used_max)'"
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'resource'"
op|':'
op|'{'
string|"'cpu'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'disk_gb'"
op|':'
number|'648'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'host_c1'"
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'2048'
op|','
nl|'\n'
string|"'project'"
op|':'
number|'42'
op|'}'
op|'}'
op|']'
nl|'\n'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
