begin_unit
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Unit tests for ComputeManager()."""'
newline|'\n'
nl|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'import'
name|'mox'
newline|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'power_state'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'utils'
name|'as'
name|'compute_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'model'
name|'as'
name|'network_model'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'instance'
name|'as'
name|'instance_obj'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'importutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'uuidutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fake_instance'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'compute_manager'"
op|','
string|"'nova.service'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ComputeManagerUnitTestCase
name|'class'
name|'ComputeManagerUnitTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ComputeManagerUnitTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'CONF'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_allocate_network_succeeds_after_retries
dedent|''
name|'def'
name|'test_allocate_network_succeeds_after_retries'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_allocate_retries'
op|'='
number|'8'
op|')'
newline|'\n'
nl|'\n'
name|'nwapi'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'nwapi'
op|','
string|"'allocate_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'time'
op|','
string|"'sleep'"
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'is_vpn'
op|'='
string|"'fake-is-vpn'"
newline|'\n'
name|'req_networks'
op|'='
string|"'fake-req-networks'"
newline|'\n'
name|'macs'
op|'='
string|"'fake-macs'"
newline|'\n'
name|'sec_groups'
op|'='
string|"'fake-sec-groups'"
newline|'\n'
name|'final_result'
op|'='
string|"'meow'"
newline|'\n'
nl|'\n'
name|'expected_sleep_times'
op|'='
op|'['
number|'1'
op|','
number|'2'
op|','
number|'4'
op|','
number|'8'
op|','
number|'16'
op|','
number|'30'
op|','
number|'30'
op|','
number|'30'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'sleep_time'
name|'in'
name|'expected_sleep_times'
op|':'
newline|'\n'
indent|'            '
name|'nwapi'
op|'.'
name|'allocate_for_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'vpn'
op|'='
name|'is_vpn'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'req_networks'
op|','
name|'macs'
op|'='
name|'macs'
op|','
nl|'\n'
name|'conductor_api'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'conductor_api'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'sec_groups'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|')'
newline|'\n'
name|'time'
op|'.'
name|'sleep'
op|'('
name|'sleep_time'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'nwapi'
op|'.'
name|'allocate_for_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'vpn'
op|'='
name|'is_vpn'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'req_networks'
op|','
name|'macs'
op|'='
name|'macs'
op|','
nl|'\n'
name|'conductor_api'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'conductor_api'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'sec_groups'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'final_result'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_allocate_network_async'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'req_networks'
op|','
nl|'\n'
name|'macs'
op|','
nl|'\n'
name|'sec_groups'
op|','
nl|'\n'
name|'is_vpn'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'final_result'
op|','
name|'res'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_allocate_network_fails
dedent|''
name|'def'
name|'test_allocate_network_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_allocate_retries'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'nwapi'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'nwapi'
op|','
string|"'allocate_for_instance'"
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'is_vpn'
op|'='
string|"'fake-is-vpn'"
newline|'\n'
name|'req_networks'
op|'='
string|"'fake-req-networks'"
newline|'\n'
name|'macs'
op|'='
string|"'fake-macs'"
newline|'\n'
name|'sec_groups'
op|'='
string|"'fake-sec-groups'"
newline|'\n'
nl|'\n'
name|'nwapi'
op|'.'
name|'allocate_for_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'vpn'
op|'='
name|'is_vpn'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'req_networks'
op|','
name|'macs'
op|'='
name|'macs'
op|','
nl|'\n'
name|'conductor_api'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'conductor_api'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'sec_groups'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_allocate_network_async'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'req_networks'
op|','
name|'macs'
op|','
nl|'\n'
name|'sec_groups'
op|','
name|'is_vpn'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_allocate_network_neg_conf_value_treated_as_zero
dedent|''
name|'def'
name|'test_allocate_network_neg_conf_value_treated_as_zero'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_allocate_retries'
op|'='
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'nwapi'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'nwapi'
op|','
string|"'allocate_for_instance'"
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'is_vpn'
op|'='
string|"'fake-is-vpn'"
newline|'\n'
name|'req_networks'
op|'='
string|"'fake-req-networks'"
newline|'\n'
name|'macs'
op|'='
string|"'fake-macs'"
newline|'\n'
name|'sec_groups'
op|'='
string|"'fake-sec-groups'"
newline|'\n'
nl|'\n'
comment|'# Only attempted once.'
nl|'\n'
name|'nwapi'
op|'.'
name|'allocate_for_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'vpn'
op|'='
name|'is_vpn'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'req_networks'
op|','
name|'macs'
op|'='
name|'macs'
op|','
nl|'\n'
name|'conductor_api'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'conductor_api'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'sec_groups'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_allocate_network_async'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'req_networks'
op|','
name|'macs'
op|','
nl|'\n'
name|'sec_groups'
op|','
name|'is_vpn'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_host
dedent|''
name|'def'
name|'test_init_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'our_host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
newline|'\n'
name|'fake_context'
op|'='
string|"'fake-context'"
newline|'\n'
name|'inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'info_cache'
op|'='
op|'{'
string|"'instance_uuid'"
op|':'
string|"'fake-uuid'"
op|','
nl|'\n'
string|"'network_info'"
op|':'
name|'None'
op|'}'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'None'
op|')'
newline|'\n'
name|'startup_instances'
op|'='
op|'['
name|'inst'
op|','
name|'inst'
op|','
name|'inst'
op|']'
newline|'\n'
nl|'\n'
DECL|function|_do_mock_calls
name|'def'
name|'_do_mock_calls'
op|'('
name|'defer_iptables_apply'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'init_host'
op|'('
name|'host'
op|'='
name|'our_host'
op|')'
newline|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_context'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_host'
op|'('
nl|'\n'
name|'fake_context'
op|','
name|'our_host'
op|','
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'startup_instances'
op|')'
newline|'\n'
name|'if'
name|'defer_iptables_apply'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'filter_defer_apply_on'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_destroy_evacuated_instances'
op|'('
name|'fake_context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'fake_context'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'instance_obj'
op|'.'
name|'Instance'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'fake_context'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'instance_obj'
op|'.'
name|'Instance'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'fake_context'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'instance_obj'
op|'.'
name|'Instance'
op|')'
op|')'
newline|'\n'
name|'if'
name|'defer_iptables_apply'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'filter_defer_apply_off'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_report_driver_status'
op|'('
name|'fake_context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'publish_service_capabilities'
op|'('
name|'fake_context'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'init_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'filter_defer_apply_on'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'filter_defer_apply_off'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'context'
op|','
string|"'get_admin_context'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_destroy_evacuated_instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_init_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_report_driver_status'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'publish_service_capabilities'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Test with defer_iptables_apply'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'defer_iptables_apply'
op|'='
name|'True'
op|')'
newline|'\n'
name|'_do_mock_calls'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'init_host'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Test without defer_iptables_apply'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ResetAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'defer_iptables_apply'
op|'='
name|'False'
op|')'
newline|'\n'
name|'_do_mock_calls'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'init_host'
op|'('
op|')'
newline|'\n'
comment|'# tearDown() uses context.get_admin_context(), so we have'
nl|'\n'
comment|'# to do the verification here and unstub it.'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_host_with_deleted_migration
dedent|''
name|'def'
name|'test_init_host_with_deleted_migration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'our_host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
newline|'\n'
name|'not_our_host'
op|'='
string|"'not-'"
op|'+'
name|'our_host'
newline|'\n'
name|'fake_context'
op|'='
string|"'fake-context'"
newline|'\n'
nl|'\n'
name|'deleted_instance'
op|'='
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'fake-name'"
op|','
nl|'\n'
string|"'host'"
op|':'
name|'not_our_host'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'fake-uuid'"
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'init_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'destroy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'context'
op|','
string|"'get_admin_context'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'init_virt_events'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_instances_on_driver'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_init_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_report_driver_status'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'publish_service_capabilities'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_instance_nw_info'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'init_host'
op|'('
name|'host'
op|'='
name|'our_host'
op|')'
newline|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_context'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_host'
op|'('
name|'fake_context'
op|','
name|'our_host'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|']'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'init_virt_events'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# simulate failed instance'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_instances_on_driver'
op|'('
nl|'\n'
name|'fake_context'
op|','
op|'{'
string|"'deleted'"
op|':'
name|'False'
op|'}'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'deleted_instance'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_instance_nw_info'
op|'('
name|'fake_context'
op|','
name|'deleted_instance'
nl|'\n'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
nl|'\n'
name|'instance_id'
op|'='
name|'deleted_instance'
op|'['
string|"'uuid'"
op|']'
op|')'
op|')'
newline|'\n'
comment|'# ensure driver.destroy is called so that driver may'
nl|'\n'
comment|'# clean up any dangling files'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'destroy'
op|'('
name|'deleted_instance'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_report_driver_status'
op|'('
name|'fake_context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'publish_service_capabilities'
op|'('
name|'fake_context'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'init_host'
op|'('
op|')'
newline|'\n'
comment|'# tearDown() uses context.get_admin_context(), so we have'
nl|'\n'
comment|'# to do the verification here and unstub it.'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_failed_resume_sets_error
dedent|''
name|'def'
name|'test_init_instance_failed_resume_sets_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
op|'{'
nl|'\n'
string|"'uuid'"
op|':'
string|"'fake-uuid'"
op|','
nl|'\n'
string|"'info_cache'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'power_state'"
op|':'
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
string|"'task_state'"
op|':'
name|'None'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'resume_guests_state_on_host_boot'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'plug_vifs'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'resume_state_on_host_boot'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_get_instance_volume_block_device_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_set_instance_error_state'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_power_state'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'plug_vifs'
op|'('
name|'instance'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_instance_volume_block_device_info'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake-bdm'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'resume_state_on_host_boot'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'instance'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
string|"'fake-bdm'"
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_set_instance_error_state'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
string|"'fake-context'"
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_init_instance_reverts_crashed_migrations
dedent|''
name|'def'
name|'_test_init_instance_reverts_crashed_migrations'
op|'('
name|'self'
op|','
nl|'\n'
name|'old_vm_state'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'power_on'
op|'='
name|'True'
name|'if'
op|'('
name|'not'
name|'old_vm_state'
name|'or'
nl|'\n'
name|'old_vm_state'
op|'=='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
name|'else'
name|'False'
newline|'\n'
name|'sys_meta'
op|'='
op|'{'
nl|'\n'
string|"'old_vm_state'"
op|':'
name|'old_vm_state'
nl|'\n'
op|'}'
newline|'\n'
name|'instance'
op|'='
op|'{'
nl|'\n'
string|"'uuid'"
op|':'
string|"'foo'"
op|','
nl|'\n'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'ERROR'
op|','
nl|'\n'
string|"'task_state'"
op|':'
name|'task_states'
op|'.'
name|'RESIZE_MIGRATING'
op|','
nl|'\n'
string|"'power_state'"
op|':'
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
name|'sys_meta'
nl|'\n'
op|'}'
newline|'\n'
name|'fixed'
op|'='
name|'dict'
op|'('
name|'instance'
op|','
name|'task_state'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'get_nw_info_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'utils'
op|','
string|"'instance_sys_meta'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'plug_vifs'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'finish_revert_migration'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_get_instance_volume_block_device_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'get_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_instance_update'"
op|')'
newline|'\n'
nl|'\n'
name|'compute_utils'
op|'.'
name|'get_nw_info_for_instance'
op|'('
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'plug_vifs'
op|'('
name|'instance'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'instance_sys_meta'
op|'('
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'sys_meta'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_instance_volume_block_device_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'finish_revert_migration'
op|'('
name|'instance'
op|','
op|'['
op|']'
op|','
op|'['
op|']'
op|','
name|'power_on'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_instance_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'None'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fixed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'get_info'
op|'('
name|'fixed'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'{'
string|"'state'"
op|':'
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_reverts_crashed_migration_from_active
dedent|''
name|'def'
name|'test_init_instance_reverts_crashed_migration_from_active'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_init_instance_reverts_crashed_migrations'
op|'('
nl|'\n'
name|'old_vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_reverts_crashed_migration_from_stopped
dedent|''
name|'def'
name|'test_init_instance_reverts_crashed_migration_from_stopped'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_init_instance_reverts_crashed_migrations'
op|'('
nl|'\n'
name|'old_vm_state'
op|'='
name|'vm_states'
op|'.'
name|'STOPPED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_reverts_crashed_migration_no_old_state
dedent|''
name|'def'
name|'test_init_instance_reverts_crashed_migration_no_old_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_init_instance_reverts_crashed_migrations'
op|'('
name|'old_vm_state'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instances_on_driver
dedent|''
name|'def'
name|'test_get_instances_on_driver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'driver_instances'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'xrange'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'dict'
op|'('
name|'uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
op|')'
newline|'\n'
name|'driver_instances'
op|'.'
name|'append'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'list_instance_uuids'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'conductor_api'
op|','
nl|'\n'
string|"'instance_get_all_by_filters'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'list_instance_uuids'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'['
name|'inst'
op|'['
string|"'uuid'"
op|']'
name|'for'
name|'inst'
name|'in'
name|'driver_instances'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'conductor_api'
op|'.'
name|'instance_get_all_by_filters'
op|'('
nl|'\n'
name|'fake_context'
op|','
nl|'\n'
op|'{'
string|"'uuid'"
op|':'
op|'['
name|'inst'
op|'['
string|"'uuid'"
op|']'
name|'for'
nl|'\n'
name|'inst'
name|'in'
name|'driver_instances'
op|']'
op|'}'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'driver_instances'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_instances_on_driver'
op|'('
name|'fake_context'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'driver_instances'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instances_on_driver_fallback
dedent|''
name|'def'
name|'test_get_instances_on_driver_fallback'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Test getting instances when driver doesn't support"
nl|'\n'
comment|"# 'list_instance_uuids'"
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|'='
string|"'host'"
newline|'\n'
name|'filters'
op|'='
op|'{'
string|"'host'"
op|':'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|'}'
newline|'\n'
name|'fake_context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'all_instances'
op|'='
op|'['
op|']'
newline|'\n'
name|'driver_instances'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'xrange'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'x'
op|'%'
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'driver_instances'
op|'.'
name|'append'
op|'('
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'all_instances'
op|'.'
name|'append'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'list_instance_uuids'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'list_instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'conductor_api'
op|','
nl|'\n'
string|"'instance_get_all_by_filters'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'list_instance_uuids'
op|'('
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'NotImplementedError'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'list_instances'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'['
name|'inst'
op|'['
string|"'name'"
op|']'
name|'for'
name|'inst'
name|'in'
name|'driver_instances'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'conductor_api'
op|'.'
name|'instance_get_all_by_filters'
op|'('
nl|'\n'
name|'fake_context'
op|','
name|'filters'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'all_instances'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_instances_on_driver'
op|'('
name|'fake_context'
op|','
name|'filters'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'driver_instances'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_usage_audit
dedent|''
name|'def'
name|'test_instance_usage_audit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instances'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
string|"'foo'"
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'instance_usage_audit'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_utils'
op|','
string|"'has_audit_been_run'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'conductor_api'
op|','
nl|'\n'
string|"'instance_get_active_by_window_joined'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'instances'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_utils'
op|','
string|"'start_instance_usage_audit'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_utils'
op|','
string|"'finish_instance_usage_audit'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'conductor_api'
op|','
nl|'\n'
string|"'notify_usage_exists'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'conductor_api'
op|'.'
name|'notify_usage_exists'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instances'
op|'['
number|'0'
op|']'
op|','
name|'ignore_missing_network_data'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_instance_usage_audit'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_sync_instance
dedent|''
name|'def'
name|'_get_sync_instance'
op|'('
name|'self'
op|','
name|'power_state'
op|','
name|'vm_state'
op|','
name|'task_state'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'instance_obj'
op|'.'
name|'Instance'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'fake-uuid'"
newline|'\n'
name|'instance'
op|'.'
name|'power_state'
op|'='
name|'power_state'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_state'
newline|'\n'
name|'instance'
op|'.'
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_state'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance'
op|','
string|"'refresh'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'return'
name|'instance'
newline|'\n'
nl|'\n'
DECL|member|test_sync_instance_power_state_match
dedent|''
name|'def'
name|'test_sync_instance_power_state_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_sync_instance'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'refresh'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_sync_instance_power_state'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sync_instance_power_state_running_stopped
dedent|''
name|'def'
name|'test_sync_instance_power_state_running_stopped'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_sync_instance'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'refresh'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_sync_instance_power_state'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'.'
name|'power_state'
op|','
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_sync_to_stop
dedent|''
name|'def'
name|'_test_sync_to_stop'
op|'('
name|'self'
op|','
name|'power_state'
op|','
name|'vm_state'
op|','
name|'driver_power_state'
op|','
nl|'\n'
name|'stop'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_sync_instance'
op|'('
name|'power_state'
op|','
name|'vm_state'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'refresh'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_api'
op|','
string|"'stop'"
op|')'
newline|'\n'
name|'if'
name|'stop'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_api'
op|'.'
name|'stop'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_sync_instance_power_state'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'driver_power_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sync_instance_power_state_to_stop
dedent|''
name|'def'
name|'test_sync_instance_power_state_to_stop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'ps'
name|'in'
op|'('
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
name|'power_state'
op|'.'
name|'CRASHED'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'SUSPENDED'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_test_sync_to_stop'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'ps'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_test_sync_to_stop'
op|'('
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
name|'vm_states'
op|'.'
name|'STOPPED'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sync_instance_power_state_to_no_stop
dedent|''
name|'def'
name|'test_sync_instance_power_state_to_no_stop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'ps'
name|'in'
op|'('
name|'power_state'
op|'.'
name|'PAUSED'
op|','
name|'power_state'
op|'.'
name|'NOSTATE'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_test_sync_to_stop'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'ps'
op|','
nl|'\n'
name|'stop'
op|'='
name|'False'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'vs'
name|'in'
op|'('
name|'vm_states'
op|'.'
name|'SOFT_DELETED'
op|','
name|'vm_states'
op|'.'
name|'DELETED'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'ps'
name|'in'
op|'('
name|'power_state'
op|'.'
name|'NOSTATE'
op|','
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_test_sync_to_stop'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'vs'
op|','
name|'ps'
op|','
nl|'\n'
name|'stop'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_pending_deletes
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_run_pending_deletes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'instance_delete_interval'
op|'='
number|'10'
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeInstance
name|'class'
name|'FakeInstance'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'uuid'
op|','
name|'name'
op|','
name|'smd'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'uuid'
op|'='
name|'uuid'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'system_metadata'
op|'='
name|'smd'
newline|'\n'
name|'self'
op|'.'
name|'cleaned'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|__getitem__
dedent|''
name|'def'
name|'__getitem__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'getattr'
op|'('
name|'self'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|save
dedent|''
name|'def'
name|'save'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
DECL|class|FakeInstanceList
dedent|''
dedent|''
name|'class'
name|'FakeInstanceList'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|get_by_filters
indent|'            '
name|'def'
name|'get_by_filters'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'a'
op|'='
name|'FakeInstance'
op|'('
string|"'123'"
op|','
string|"'apple'"
op|','
op|'{'
string|"'clean_attempts'"
op|':'
string|"'100'"
op|'}'
op|')'
newline|'\n'
name|'b'
op|'='
name|'FakeInstance'
op|'('
string|"'456'"
op|','
string|"'orange'"
op|','
op|'{'
string|"'clean_attempts'"
op|':'
string|"'3'"
op|'}'
op|')'
newline|'\n'
name|'c'
op|'='
name|'FakeInstance'
op|'('
string|"'789'"
op|','
string|"'banana'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance_obj'
op|'.'
name|'InstanceList'
op|','
nl|'\n'
string|"'get_by_filters'"
op|')'
newline|'\n'
name|'instance_obj'
op|'.'
name|'InstanceList'
op|'.'
name|'get_by_filters'
op|'('
nl|'\n'
op|'{'
string|"'read_deleted'"
op|':'
string|"'yes'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deleted'"
op|':'
name|'True'
op|','
string|"'host'"
op|':'
string|"'fake-mini'"
op|','
string|"'cleaned'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
DECL|variable|expected_attrs
name|'expected_attrs'
op|'='
op|'['
string|"'info_cache'"
op|','
string|"'security_groups'"
op|','
nl|'\n'
string|"'system_metadata'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'a'
op|','
name|'b'
op|','
name|'c'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'delete_instance_files'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'delete_instance_files'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'delete_instance_files'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_run_pending_deletes'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'a'
op|'.'
name|'cleaned'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'100'"
op|','
name|'a'
op|'.'
name|'system_metadata'
op|'['
string|"'clean_attempts'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'b'
op|'.'
name|'cleaned'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'4'"
op|','
name|'b'
op|'.'
name|'system_metadata'
op|'['
string|"'clean_attempts'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'c'
op|'.'
name|'cleaned'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'1'"
op|','
name|'c'
op|'.'
name|'system_metadata'
op|'['
string|"'clean_attempts'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_swap_volume_volume_api_usage
dedent|''
name|'def'
name|'test_swap_volume_volume_api_usage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# This test ensures that volume_id arguments are passed to volume_api'
nl|'\n'
comment|'# and that volume states are OK'
nl|'\n'
indent|'        '
name|'volumes'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'old_volume_id'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'='
op|'{'
string|"'id'"
op|':'
name|'old_volume_id'
op|','
nl|'\n'
string|"'display_name'"
op|':'
string|"'old_volume'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'detaching'"
op|'}'
newline|'\n'
name|'new_volume_id'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'='
op|'{'
string|"'id'"
op|':'
name|'new_volume_id'
op|','
nl|'\n'
string|"'display_name'"
op|':'
string|"'new_volume'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'attaching'"
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_vol_api_func
name|'def'
name|'fake_vol_api_func'
op|'('
name|'context'
op|','
name|'volume'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'volume'
op|')'
op|')'
newline|'\n'
name|'return'
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_vol_get
dedent|''
name|'def'
name|'fake_vol_get'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'volume_id'
op|')'
op|')'
newline|'\n'
name|'return'
name|'volumes'
op|'['
name|'volume_id'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_vol_attach
dedent|''
name|'def'
name|'fake_vol_attach'
op|'('
name|'context'
op|','
name|'volume_id'
op|','
name|'instance_uuid'
op|','
name|'connector'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'volume_id'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
nl|'\n'
op|'['
string|"'available'"
op|','
string|"'attaching'"
op|']'
op|')'
newline|'\n'
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'in-use'"
newline|'\n'
nl|'\n'
DECL|function|fake_vol_unreserve
dedent|''
name|'def'
name|'fake_vol_unreserve'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'volume_id'
op|')'
op|')'
newline|'\n'
name|'if'
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'=='
string|"'attaching'"
op|':'
newline|'\n'
indent|'                '
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'available'"
newline|'\n'
nl|'\n'
DECL|function|fake_vol_detach
dedent|''
dedent|''
name|'def'
name|'fake_vol_detach'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'volume_id'
op|')'
op|')'
newline|'\n'
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'available'"
newline|'\n'
nl|'\n'
DECL|function|fake_func_exc
dedent|''
name|'def'
name|'fake_func_exc'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'AttributeError'
comment|'# Random exception'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'get'"
op|','
name|'fake_vol_get'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'initialize_connection'"
op|','
nl|'\n'
name|'fake_vol_api_func'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'attach'"
op|','
name|'fake_vol_attach'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'unreserve_volume'"
op|','
nl|'\n'
name|'fake_vol_unreserve'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'terminate_connection'"
op|','
nl|'\n'
name|'fake_vol_api_func'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'detach'"
op|','
name|'fake_vol_detach'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_instance_volume_bdm'"
op|','
nl|'\n'
name|'lambda'
name|'x'
op|','
name|'y'
op|','
name|'z'
op|':'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/vdb'"
op|','
nl|'\n'
string|"'connection_info'"
op|':'
string|'\'{"foo": "bar"}\''
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'get_volume_connector'"
op|','
nl|'\n'
name|'lambda'
name|'x'
op|':'
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'swap_volume'"
op|','
nl|'\n'
name|'lambda'
name|'w'
op|','
name|'x'
op|','
name|'y'
op|','
name|'z'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'conductor_api'
op|','
nl|'\n'
string|"'block_device_mapping_update_or_create'"
op|','
nl|'\n'
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'None'
op|')'
newline|'\n'
nl|'\n'
comment|'# Good path'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'swap_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'old_volume_id'
op|','
name|'new_volume_id'
op|','
nl|'\n'
op|'{'
string|"'uuid'"
op|':'
string|"'fake'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'in-use'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Error paths'
nl|'\n'
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'detaching'"
newline|'\n'
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'attaching'"
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'swap_volume'"
op|','
name|'fake_func_exc'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AttributeError'
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'swap_volume'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'old_volume_id'
op|','
name|'new_volume_id'
op|','
nl|'\n'
op|'{'
string|"'uuid'"
op|':'
string|"'fake'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'detaching'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'attaching'"
op|')'
newline|'\n'
nl|'\n'
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'detaching'"
newline|'\n'
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'attaching'"
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'initialize_connection'"
op|','
nl|'\n'
name|'fake_func_exc'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AttributeError'
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'swap_volume'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'old_volume_id'
op|','
name|'new_volume_id'
op|','
nl|'\n'
op|'{'
string|"'uuid'"
op|':'
string|"'fake'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'detaching'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'attaching'"
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
