begin_unit
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Unit tests for ComputeManager()."""'
newline|'\n'
nl|'\n'
name|'import'
name|'contextlib'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'event'
name|'as'
name|'eventlet_event'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'import'
name|'mox'
newline|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'power_state'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'utils'
name|'as'
name|'compute_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'conductor'
name|'import'
name|'rpcapi'
name|'as'
name|'conductor_rpcapi'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'model'
name|'as'
name|'network_model'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'block_device'
name|'as'
name|'block_device_obj'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'importutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'uuidutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'compute'
name|'import'
name|'fake_resource_tracker'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fake_block_device'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fake_instance'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'objects'
name|'import'
name|'test_instance_fault'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'objects'
name|'import'
name|'test_instance_info_cache'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'compute_manager'"
op|','
string|"'nova.service'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ComputeManagerUnitTestCase
name|'class'
name|'ComputeManagerUnitTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ComputeManagerUnitTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'CONF'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_allocate_network_succeeds_after_retries
dedent|''
name|'def'
name|'test_allocate_network_succeeds_after_retries'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_allocate_retries'
op|'='
number|'8'
op|')'
newline|'\n'
nl|'\n'
name|'nwapi'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'nwapi'
op|','
string|"'allocate_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_instance_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'time'
op|','
string|"'sleep'"
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'expected_attrs'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'is_vpn'
op|'='
string|"'fake-is-vpn'"
newline|'\n'
name|'req_networks'
op|'='
string|"'fake-req-networks'"
newline|'\n'
name|'macs'
op|'='
string|"'fake-macs'"
newline|'\n'
name|'sec_groups'
op|'='
string|"'fake-sec-groups'"
newline|'\n'
name|'final_result'
op|'='
string|"'meow'"
newline|'\n'
name|'dhcp_options'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'expected_sleep_times'
op|'='
op|'['
number|'1'
op|','
number|'2'
op|','
number|'4'
op|','
number|'8'
op|','
number|'16'
op|','
number|'30'
op|','
number|'30'
op|','
number|'30'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'sleep_time'
name|'in'
name|'expected_sleep_times'
op|':'
newline|'\n'
indent|'            '
name|'nwapi'
op|'.'
name|'allocate_for_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'vpn'
op|'='
name|'is_vpn'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'req_networks'
op|','
name|'macs'
op|'='
name|'macs'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'sec_groups'
op|','
nl|'\n'
name|'dhcp_options'
op|'='
name|'dhcp_options'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|')'
newline|'\n'
name|'time'
op|'.'
name|'sleep'
op|'('
name|'sleep_time'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'nwapi'
op|'.'
name|'allocate_for_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'vpn'
op|'='
name|'is_vpn'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'req_networks'
op|','
name|'macs'
op|'='
name|'macs'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'sec_groups'
op|','
nl|'\n'
name|'dhcp_options'
op|'='
name|'dhcp_options'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'final_result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_instance_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'system_metadata'
op|'='
op|'{'
string|"'network_allocated'"
op|':'
string|"'True'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_allocate_network_async'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'req_networks'
op|','
nl|'\n'
name|'macs'
op|','
nl|'\n'
name|'sec_groups'
op|','
nl|'\n'
name|'is_vpn'
op|','
nl|'\n'
name|'dhcp_options'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'final_result'
op|','
name|'res'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_allocate_network_maintains_context
dedent|''
name|'def'
name|'test_allocate_network_maintains_context'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# override tracker with a version that doesn't need the database:"
nl|'\n'
DECL|class|FakeResourceTracker
indent|'        '
name|'class'
name|'FakeResourceTracker'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|instance_claim
indent|'            '
name|'def'
name|'instance_claim'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'limits'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'mox'
op|'.'
name|'MockAnything'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_resource_tracker'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_allocate_network'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_instance_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|','
nl|'\n'
string|"'get_by_instance_uuid'"
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
name|'system_metadata'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|'.'
name|'get_by_instance_uuid'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'node'
op|'='
string|"'fake_node'"
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_resource_tracker'
op|'('
name|'node'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'FakeResourceTracker'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'admin_context'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|fake_allocate
name|'def'
name|'fake_allocate'
op|'('
name|'context'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'context'
op|'.'
name|'is_admin'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'admin_context'
op|'='
name|'True'
newline|'\n'
nl|'\n'
comment|"# NOTE(vish): The nice mox parameter matchers here don't work well"
nl|'\n'
comment|'#             because they raise an exception that gets wrapped by'
nl|'\n'
comment|'#             the retry exception handling, so use a side effect'
nl|'\n'
comment|'#             to keep track of whether allocate was called with admin'
nl|'\n'
comment|'#             context.'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_allocate_network'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'instance'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'WithSideEffects'
op|'('
name|'fake_allocate'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_instance_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'system_metadata'
op|'='
op|'{'
string|"'network_allocated'"
op|':'
string|"'True'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
op|'}'
op|','
op|'{'
op|'}'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'True'
op|','
nl|'\n'
name|'node'
op|','
name|'instance'
op|','
nl|'\n'
op|'{'
op|'}'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'admin_context'
op|','
nl|'\n'
string|'"_allocate_network called with admin context"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_allocate_network_fails
dedent|''
name|'def'
name|'test_allocate_network_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_allocate_retries'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'nwapi'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'nwapi'
op|','
string|"'allocate_for_instance'"
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'is_vpn'
op|'='
string|"'fake-is-vpn'"
newline|'\n'
name|'req_networks'
op|'='
string|"'fake-req-networks'"
newline|'\n'
name|'macs'
op|'='
string|"'fake-macs'"
newline|'\n'
name|'sec_groups'
op|'='
string|"'fake-sec-groups'"
newline|'\n'
name|'dhcp_options'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'nwapi'
op|'.'
name|'allocate_for_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'vpn'
op|'='
name|'is_vpn'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'req_networks'
op|','
name|'macs'
op|'='
name|'macs'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'sec_groups'
op|','
nl|'\n'
name|'dhcp_options'
op|'='
name|'dhcp_options'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_allocate_network_async'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'req_networks'
op|','
name|'macs'
op|','
nl|'\n'
name|'sec_groups'
op|','
name|'is_vpn'
op|','
name|'dhcp_options'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_allocate_network_neg_conf_value_treated_as_zero
dedent|''
name|'def'
name|'test_allocate_network_neg_conf_value_treated_as_zero'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_allocate_retries'
op|'='
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'nwapi'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'nwapi'
op|','
string|"'allocate_for_instance'"
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'is_vpn'
op|'='
string|"'fake-is-vpn'"
newline|'\n'
name|'req_networks'
op|'='
string|"'fake-req-networks'"
newline|'\n'
name|'macs'
op|'='
string|"'fake-macs'"
newline|'\n'
name|'sec_groups'
op|'='
string|"'fake-sec-groups'"
newline|'\n'
name|'dhcp_options'
op|'='
name|'None'
newline|'\n'
nl|'\n'
comment|'# Only attempted once.'
nl|'\n'
name|'nwapi'
op|'.'
name|'allocate_for_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'vpn'
op|'='
name|'is_vpn'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'req_networks'
op|','
name|'macs'
op|'='
name|'macs'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'sec_groups'
op|','
nl|'\n'
name|'dhcp_options'
op|'='
name|'dhcp_options'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_allocate_network_async'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'req_networks'
op|','
name|'macs'
op|','
nl|'\n'
name|'sec_groups'
op|','
name|'is_vpn'
op|','
name|'dhcp_options'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_host
dedent|''
name|'def'
name|'test_init_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'our_host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
newline|'\n'
name|'fake_context'
op|'='
string|"'fake-context'"
newline|'\n'
name|'inst'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'info_cache'
op|'='
name|'dict'
op|'('
name|'test_instance_info_cache'
op|'.'
name|'fake_info_cache'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'None'
op|')'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'None'
op|')'
newline|'\n'
name|'startup_instances'
op|'='
op|'['
name|'inst'
op|','
name|'inst'
op|','
name|'inst'
op|']'
newline|'\n'
nl|'\n'
DECL|function|_do_mock_calls
name|'def'
name|'_do_mock_calls'
op|'('
name|'defer_iptables_apply'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'init_host'
op|'('
name|'host'
op|'='
name|'our_host'
op|')'
newline|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_context'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_host'
op|'('
nl|'\n'
name|'fake_context'
op|','
name|'our_host'
op|','
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|']'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'False'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'startup_instances'
op|')'
newline|'\n'
name|'if'
name|'defer_iptables_apply'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'filter_defer_apply_on'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_destroy_evacuated_instances'
op|'('
name|'fake_context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'fake_context'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'fake_context'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'fake_context'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IsA'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|')'
op|')'
newline|'\n'
name|'if'
name|'defer_iptables_apply'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'filter_defer_apply_off'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'init_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'filter_defer_apply_on'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'filter_defer_apply_off'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'context'
op|','
string|"'get_admin_context'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_destroy_evacuated_instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_init_instance'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Test with defer_iptables_apply'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'defer_iptables_apply'
op|'='
name|'True'
op|')'
newline|'\n'
name|'_do_mock_calls'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'init_host'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Test without defer_iptables_apply'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ResetAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'defer_iptables_apply'
op|'='
name|'False'
op|')'
newline|'\n'
name|'_do_mock_calls'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'init_host'
op|'('
op|')'
newline|'\n'
comment|'# tearDown() uses context.get_admin_context(), so we have'
nl|'\n'
comment|'# to do the verification here and unstub it.'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.InstanceList'"
op|')'
newline|'\n'
DECL|member|test_cleanup_host
name|'def'
name|'test_cleanup_host'
op|'('
name|'self'
op|','
name|'mock_instance_list'
op|')'
op|':'
newline|'\n'
comment|'# just testing whether the cleanup_host method'
nl|'\n'
comment|"# when fired will invoke the underlying driver's"
nl|'\n'
comment|'# equivalent method.'
nl|'\n'
nl|'\n'
indent|'        '
name|'mock_instance_list'
op|'.'
name|'get_by_host'
op|'.'
name|'return_value'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'driver'"
op|')'
name|'as'
name|'mock_driver'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'init_host'
op|'('
op|')'
newline|'\n'
name|'mock_driver'
op|'.'
name|'init_host'
op|'.'
name|'assert_called_once_with'
op|'('
name|'host'
op|'='
string|"'fake-mini'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'cleanup_host'
op|'('
op|')'
newline|'\n'
name|'mock_driver'
op|'.'
name|'cleanup_host'
op|'.'
name|'assert_called_once_with'
op|'('
name|'host'
op|'='
string|"'fake-mini'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_host_with_deleted_migration
dedent|''
dedent|''
name|'def'
name|'test_init_host_with_deleted_migration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'our_host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
newline|'\n'
name|'not_our_host'
op|'='
string|"'not-'"
op|'+'
name|'our_host'
newline|'\n'
name|'fake_context'
op|'='
string|"'fake-context'"
newline|'\n'
nl|'\n'
name|'deleted_instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'host'
op|'='
name|'not_our_host'
op|','
name|'uuid'
op|'='
string|"'fake-uuid'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'init_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'destroy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'context'
op|','
string|"'get_admin_context'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'init_virt_events'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_instances_on_driver'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_init_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_instance_nw_info'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'init_host'
op|'('
name|'host'
op|'='
name|'our_host'
op|')'
newline|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_context'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_host'
op|'('
name|'fake_context'
op|','
name|'our_host'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'info_cache'"
op|']'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'False'
nl|'\n'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'init_virt_events'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# simulate failed instance'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_instances_on_driver'
op|'('
nl|'\n'
name|'fake_context'
op|','
op|'{'
string|"'deleted'"
op|':'
name|'False'
op|'}'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'deleted_instance'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_instance_nw_info'
op|'('
name|'fake_context'
op|','
name|'deleted_instance'
nl|'\n'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
nl|'\n'
name|'instance_id'
op|'='
name|'deleted_instance'
op|'['
string|"'uuid'"
op|']'
op|')'
op|')'
newline|'\n'
comment|'# ensure driver.destroy is called so that driver may'
nl|'\n'
comment|'# clean up any dangling files'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'destroy'
op|'('
name|'fake_context'
op|','
name|'deleted_instance'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'init_host'
op|'('
op|')'
newline|'\n'
comment|'# tearDown() uses context.get_admin_context(), so we have'
nl|'\n'
comment|'# to do the verification here and unstub it.'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_failed_resume_sets_error
dedent|''
name|'def'
name|'test_init_instance_failed_resume_sets_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
nl|'\n'
name|'info_cache'
op|'='
name|'None'
op|','
nl|'\n'
name|'power_state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'None'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'info_cache'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'resume_guests_state_on_host_boot'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'plug_vifs'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'resume_state_on_host_boot'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_get_instance_block_device_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_set_instance_error_state'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_power_state'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_power_state'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_power_state'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'plug_vifs'
op|'('
name|'instance'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_instance_block_device_info'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake-bdm'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'resume_state_on_host_boot'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'instance'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
string|"'fake-bdm'"
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_set_instance_error_state'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
string|"'fake-context'"
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_stuck_in_deleting
dedent|''
name|'def'
name|'test_init_instance_stuck_in_deleting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
nl|'\n'
name|'power_state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'DELETING'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|','
nl|'\n'
string|"'get_by_instance_uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_delete_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance'
op|','
string|"'obj_load_attr'"
op|')'
newline|'\n'
nl|'\n'
name|'bdms'
op|'='
op|'['
op|']'
newline|'\n'
name|'instance'
op|'.'
name|'obj_load_attr'
op|'('
string|"'metadata'"
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'obj_load_attr'
op|'('
string|"'system_metadata'"
op|')'
newline|'\n'
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|'.'
name|'get_by_instance_uuid'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'bdms'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_delete_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'bdms'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_init_instance_reverts_crashed_migrations
dedent|''
name|'def'
name|'_test_init_instance_reverts_crashed_migrations'
op|'('
name|'self'
op|','
nl|'\n'
name|'old_vm_state'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'power_on'
op|'='
name|'True'
name|'if'
op|'('
name|'not'
name|'old_vm_state'
name|'or'
nl|'\n'
name|'old_vm_state'
op|'=='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
name|'else'
name|'False'
newline|'\n'
name|'sys_meta'
op|'='
op|'{'
nl|'\n'
string|"'old_vm_state'"
op|':'
name|'old_vm_state'
nl|'\n'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'uuid'
op|'='
string|"'foo'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'RESIZE_MIGRATING'
op|','
nl|'\n'
name|'power_state'
op|'='
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'sys_meta'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'get_nw_info_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'plug_vifs'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'finish_revert_migration'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_get_instance_block_device_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'get_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_retry_reboot'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_retry_reboot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'('
name|'False'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
name|'compute_utils'
op|'.'
name|'get_nw_info_for_instance'
op|'('
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'plug_vifs'
op|'('
name|'instance'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_instance_block_device_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'finish_revert_migration'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
op|'['
op|']'
op|','
op|'['
op|']'
op|','
name|'power_on'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'get_info'
op|'('
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'{'
string|"'state'"
op|':'
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'get_info'
op|'('
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'{'
string|"'state'"
op|':'
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_reverts_crashed_migration_from_active
dedent|''
name|'def'
name|'test_init_instance_reverts_crashed_migration_from_active'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_init_instance_reverts_crashed_migrations'
op|'('
nl|'\n'
name|'old_vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_reverts_crashed_migration_from_stopped
dedent|''
name|'def'
name|'test_init_instance_reverts_crashed_migration_from_stopped'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_init_instance_reverts_crashed_migrations'
op|'('
nl|'\n'
name|'old_vm_state'
op|'='
name|'vm_states'
op|'.'
name|'STOPPED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_reverts_crashed_migration_no_old_state
dedent|''
name|'def'
name|'test_init_instance_reverts_crashed_migration_no_old_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_init_instance_reverts_crashed_migrations'
op|'('
name|'old_vm_state'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_sets_building_error
dedent|''
name|'def'
name|'test_init_instance_sets_building_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'uuid'
op|'='
string|"'foo'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'BUILDING'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'None'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
name|'as'
name|'save'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'ERROR'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_init_instance_sets_building_tasks_error
dedent|''
name|'def'
name|'_test_init_instance_sets_building_tasks_error'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
name|'as'
name|'save'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'ERROR'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_sets_building_tasks_error_scheduling
dedent|''
name|'def'
name|'test_init_instance_sets_building_tasks_error_scheduling'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'uuid'
op|'='
string|"'foo'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'None'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'SCHEDULING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_sets_building_tasks_error'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_sets_building_tasks_error_block_device
dedent|''
name|'def'
name|'test_init_instance_sets_building_tasks_error_block_device'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'None'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'BLOCK_DEVICE_MAPPING'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_sets_building_tasks_error'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_sets_building_tasks_error_networking
dedent|''
name|'def'
name|'test_init_instance_sets_building_tasks_error_networking'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'None'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'NETWORKING'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_sets_building_tasks_error'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_sets_building_tasks_error_spawning
dedent|''
name|'def'
name|'test_init_instance_sets_building_tasks_error_spawning'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'None'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'SPAWNING'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_sets_building_tasks_error'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_init_instance_cleans_image_states
dedent|''
name|'def'
name|'_test_init_instance_cleans_image_states'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
name|'as'
name|'save'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_power_state'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'info_cache'
op|'='
name|'None'
newline|'\n'
name|'instance'
op|'.'
name|'power_state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_cleans_image_state_pending_upload
dedent|''
name|'def'
name|'test_init_instance_cleans_image_state_pending_upload'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'IMAGE_PENDING_UPLOAD'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_cleans_image_states'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_cleans_image_state_uploading
dedent|''
name|'def'
name|'test_init_instance_cleans_image_state_uploading'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'IMAGE_UPLOADING'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_cleans_image_states'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_cleans_image_state_snapshot
dedent|''
name|'def'
name|'test_init_instance_cleans_image_state_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'IMAGE_SNAPSHOT'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_cleans_image_states'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_cleans_image_state_snapshot_pending
dedent|''
name|'def'
name|'test_init_instance_cleans_image_state_snapshot_pending'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'IMAGE_SNAPSHOT_PENDING'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_cleans_image_states'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_errors_when_not_migrating
dedent|''
name|'def'
name|'test_init_instance_errors_when_not_migrating'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'IMAGE_UPLOADING'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_utils'
op|','
string|"'get_nw_info_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_deletes_error_deleting_instance
dedent|''
name|'def'
name|'test_init_instance_deletes_error_deleting_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'uuid'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'DELETING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|','
nl|'\n'
string|"'get_by_instance_uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_delete_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance'
op|','
string|"'obj_load_attr'"
op|')'
newline|'\n'
nl|'\n'
name|'bdms'
op|'='
op|'['
op|']'
newline|'\n'
name|'instance'
op|'.'
name|'obj_load_attr'
op|'('
string|"'metadata'"
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'obj_load_attr'
op|'('
string|"'system_metadata'"
op|')'
newline|'\n'
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|'.'
name|'get_by_instance_uuid'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'bdms'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_delete_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'bdms'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_init_instance_retries_reboot
dedent|''
name|'def'
name|'_test_init_instance_retries_reboot'
op|'('
name|'self'
op|','
name|'instance'
op|','
name|'reboot_type'
op|','
nl|'\n'
name|'return_power_state'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'return_power_state'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_rpcapi'
op|','
string|"'reboot_instance'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_utils'
op|','
string|"'get_nw_info_for_instance'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
nl|'\n'
name|'_get_power_state'
op|','
nl|'\n'
name|'reboot_instance'
op|','
nl|'\n'
name|'get_nw_info_for_instance'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'block_device_info'
op|'='
name|'None'
op|','
nl|'\n'
name|'reboot_type'
op|'='
name|'reboot_type'
op|')'
newline|'\n'
name|'reboot_instance'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'call'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_retries_reboot_pending
dedent|''
dedent|''
name|'def'
name|'test_init_instance_retries_reboot_pending'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_PENDING'
newline|'\n'
name|'for'
name|'state'
name|'in'
name|'vm_states'
op|'.'
name|'ALLOW_SOFT_REBOOT'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'state'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_retries_reboot'
op|'('
name|'instance'
op|','
string|"'SOFT'"
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_retries_reboot_pending_hard
dedent|''
dedent|''
name|'def'
name|'test_init_instance_retries_reboot_pending_hard'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_PENDING_HARD'
newline|'\n'
name|'for'
name|'state'
name|'in'
name|'vm_states'
op|'.'
name|'ALLOW_HARD_REBOOT'
op|':'
newline|'\n'
comment|'# NOTE(dave-mcnally) while a reboot of a vm in error state is'
nl|'\n'
comment|"# possible we don't attempt to recover an error during init"
nl|'\n'
indent|'            '
name|'if'
name|'state'
op|'=='
name|'vm_states'
op|'.'
name|'ERROR'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'state'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_retries_reboot'
op|'('
name|'instance'
op|','
string|"'HARD'"
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_retries_reboot_started
dedent|''
dedent|''
name|'def'
name|'test_init_instance_retries_reboot_started'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_STARTED'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_retries_reboot'
op|'('
name|'instance'
op|','
string|"'HARD'"
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'NOSTATE'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_retries_reboot_started_hard
dedent|''
name|'def'
name|'test_init_instance_retries_reboot_started_hard'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_STARTED_HARD'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_retries_reboot'
op|'('
name|'instance'
op|','
string|"'HARD'"
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'NOSTATE'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_init_instance_cleans_reboot_state
dedent|''
name|'def'
name|'_test_init_instance_cleans_reboot_state'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|','
name|'autospec'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_utils'
op|','
string|"'get_nw_info_for_instance'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
nl|'\n'
name|'_get_power_state'
op|','
nl|'\n'
name|'instance_save'
op|','
nl|'\n'
name|'get_nw_info_for_instance'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'instance_save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_cleans_image_state_reboot_started
dedent|''
dedent|''
name|'def'
name|'test_init_instance_cleans_image_state_reboot_started'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_STARTED'
newline|'\n'
name|'instance'
op|'.'
name|'power_state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_cleans_reboot_state'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_cleans_image_state_reboot_started_hard
dedent|''
name|'def'
name|'test_init_instance_cleans_image_state_reboot_started_hard'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_STARTED_HARD'
newline|'\n'
name|'instance'
op|'.'
name|'power_state'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
newline|'\n'
name|'self'
op|'.'
name|'_test_init_instance_cleans_reboot_state'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_retries_power_off
dedent|''
name|'def'
name|'test_init_instance_retries_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'id'
op|'='
number|'1'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'POWERING_OFF'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'stop_instance'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'stop_instance'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'call'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_retries_power_on
dedent|''
dedent|''
name|'def'
name|'test_init_instance_retries_power_on'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'id'
op|'='
number|'1'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'POWERING_ON'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'start_instance'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'start_instance'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'call'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_retries_power_on_silent_exception
dedent|''
dedent|''
name|'def'
name|'test_init_instance_retries_power_on_silent_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'id'
op|'='
number|'1'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'POWERING_ON'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'start_instance'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'init_return'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'start_instance'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'call'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'init_return'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_instance_retries_power_off_silent_exception
dedent|''
dedent|''
name|'def'
name|'test_init_instance_retries_power_off_silent_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'id'
op|'='
number|'1'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'POWERING_OFF'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'stop_instance'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'init_return'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_init_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'stop_instance'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'call'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'init_return'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instances_on_driver
dedent|''
dedent|''
name|'def'
name|'test_get_instances_on_driver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'driver_instances'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'xrange'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'driver_instances'
op|'.'
name|'append'
op|'('
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'list_instance_uuids'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'list_instance_uuids'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'['
name|'inst'
op|'['
string|"'uuid'"
op|']'
name|'for'
name|'inst'
name|'in'
name|'driver_instances'
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
nl|'\n'
name|'fake_context'
op|','
nl|'\n'
op|'{'
string|"'uuid'"
op|':'
op|'['
name|'inst'
op|'['
string|"'uuid'"
op|']'
name|'for'
nl|'\n'
name|'inst'
name|'in'
name|'driver_instances'
op|']'
op|'}'
op|','
nl|'\n'
string|"'created_at'"
op|','
string|"'desc'"
op|','
name|'columns_to_join'
op|'='
name|'None'
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'True'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'driver_instances'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_instances_on_driver'
op|'('
name|'fake_context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'x'
op|'['
string|"'uuid'"
op|']'
name|'for'
name|'x'
name|'in'
name|'driver_instances'
op|']'
op|','
nl|'\n'
op|'['
name|'x'
op|'['
string|"'uuid'"
op|']'
name|'for'
name|'x'
name|'in'
name|'result'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instances_on_driver_fallback
dedent|''
name|'def'
name|'test_get_instances_on_driver_fallback'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Test getting instances when driver doesn't support"
nl|'\n'
comment|"# 'list_instance_uuids'"
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|'='
string|"'host'"
newline|'\n'
name|'filters'
op|'='
op|'{'
string|"'host'"
op|':'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|'}'
newline|'\n'
name|'fake_context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'instance_name_template'
op|'='
string|"'inst-%i'"
op|')'
newline|'\n'
nl|'\n'
name|'all_instances'
op|'='
op|'['
op|']'
newline|'\n'
name|'driver_instances'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'xrange'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
name|'name'
op|'='
string|"'inst-%i'"
op|'%'
name|'x'
op|','
nl|'\n'
name|'id'
op|'='
name|'x'
op|')'
newline|'\n'
name|'if'
name|'x'
op|'%'
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'driver_instances'
op|'.'
name|'append'
op|'('
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'all_instances'
op|'.'
name|'append'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'list_instance_uuids'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'list_instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'list_instance_uuids'
op|'('
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'NotImplementedError'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'list_instances'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'['
name|'inst'
op|'['
string|"'name'"
op|']'
name|'for'
name|'inst'
name|'in'
name|'driver_instances'
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
nl|'\n'
name|'fake_context'
op|','
name|'filters'
op|','
nl|'\n'
string|"'created_at'"
op|','
string|"'desc'"
op|','
name|'columns_to_join'
op|'='
name|'None'
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'True'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'all_instances'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_instances_on_driver'
op|'('
name|'fake_context'
op|','
name|'filters'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'x'
op|'['
string|"'uuid'"
op|']'
name|'for'
name|'x'
name|'in'
name|'driver_instances'
op|']'
op|','
nl|'\n'
op|'['
name|'x'
op|'['
string|"'uuid'"
op|']'
name|'for'
name|'x'
name|'in'
name|'result'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_usage_audit
dedent|''
name|'def'
name|'test_instance_usage_audit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instances'
op|'='
op|'['
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'foo'"
op|')'
op|']'
newline|'\n'
nl|'\n'
op|'@'
name|'classmethod'
newline|'\n'
DECL|function|fake_get
name|'def'
name|'fake_get'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'instances'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'flags'
op|'('
name|'instance_usage_audit'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_utils'
op|','
string|"'has_audit_been_run'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'objects'
op|'.'
name|'InstanceList'
op|','
nl|'\n'
string|"'get_active_by_window_joined'"
op|','
name|'fake_get'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_utils'
op|','
string|"'start_instance_usage_audit'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_utils'
op|','
string|"'finish_instance_usage_audit'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'conductor_api'
op|','
nl|'\n'
string|"'notify_usage_exists'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'conductor_api'
op|'.'
name|'notify_usage_exists'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instances'
op|'['
number|'0'
op|']'
op|','
name|'ignore_missing_network_data'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_instance_usage_audit'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_sync_instance
dedent|''
name|'def'
name|'_get_sync_instance'
op|'('
name|'self'
op|','
name|'power_state'
op|','
name|'vm_state'
op|','
name|'task_state'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'fake-uuid'"
newline|'\n'
name|'instance'
op|'.'
name|'power_state'
op|'='
name|'power_state'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_state'
newline|'\n'
name|'instance'
op|'.'
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_state'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance'
op|','
string|"'refresh'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'return'
name|'instance'
newline|'\n'
nl|'\n'
DECL|member|test_sync_instance_power_state_match
dedent|''
name|'def'
name|'test_sync_instance_power_state_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_sync_instance'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'refresh'
op|'('
name|'use_slave'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_sync_instance_power_state'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sync_instance_power_state_running_stopped
dedent|''
name|'def'
name|'test_sync_instance_power_state_running_stopped'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_sync_instance'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'refresh'
op|'('
name|'use_slave'
op|'='
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_sync_instance_power_state'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'.'
name|'power_state'
op|','
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_sync_to_stop
dedent|''
name|'def'
name|'_test_sync_to_stop'
op|'('
name|'self'
op|','
name|'power_state'
op|','
name|'vm_state'
op|','
name|'driver_power_state'
op|','
nl|'\n'
name|'stop'
op|'='
name|'True'
op|','
name|'force'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_sync_instance'
op|'('
name|'power_state'
op|','
name|'vm_state'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'refresh'
op|'('
name|'use_slave'
op|'='
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_api'
op|','
string|"'stop'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_api'
op|','
string|"'force_stop'"
op|')'
newline|'\n'
name|'if'
name|'stop'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'force'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_api'
op|'.'
name|'force_stop'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_api'
op|'.'
name|'stop'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_sync_instance_power_state'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'driver_power_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'VerifyAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sync_instance_power_state_to_stop
dedent|''
name|'def'
name|'test_sync_instance_power_state_to_stop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'ps'
name|'in'
op|'('
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
name|'power_state'
op|'.'
name|'CRASHED'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'SUSPENDED'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_test_sync_to_stop'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'ps'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'ps'
name|'in'
op|'('
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
name|'power_state'
op|'.'
name|'CRASHED'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_test_sync_to_stop'
op|'('
name|'power_state'
op|'.'
name|'PAUSED'
op|','
name|'vm_states'
op|'.'
name|'PAUSED'
op|','
name|'ps'
op|','
nl|'\n'
name|'force'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_test_sync_to_stop'
op|'('
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|','
name|'vm_states'
op|'.'
name|'STOPPED'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'force'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sync_instance_power_state_to_no_stop
dedent|''
name|'def'
name|'test_sync_instance_power_state_to_no_stop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'ps'
name|'in'
op|'('
name|'power_state'
op|'.'
name|'PAUSED'
op|','
name|'power_state'
op|'.'
name|'NOSTATE'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_test_sync_to_stop'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'ps'
op|','
nl|'\n'
name|'stop'
op|'='
name|'False'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'vs'
name|'in'
op|'('
name|'vm_states'
op|'.'
name|'SOFT_DELETED'
op|','
name|'vm_states'
op|'.'
name|'DELETED'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'ps'
name|'in'
op|'('
name|'power_state'
op|'.'
name|'NOSTATE'
op|','
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_test_sync_to_stop'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'vs'
op|','
name|'ps'
op|','
nl|'\n'
name|'stop'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager.'"
nl|'\n'
string|"'_sync_instance_power_state'"
op|')'
newline|'\n'
DECL|member|test_query_driver_power_state_and_sync_pending_task
name|'def'
name|'test_query_driver_power_state_and_sync_pending_task'
op|'('
nl|'\n'
name|'self'
op|','
name|'mock_sync_power_state'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'get_info'"
op|')'
name|'as'
name|'mock_get_info'
op|':'
newline|'\n'
indent|'            '
name|'db_instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'POWERING_OFF'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_query_driver_power_state_and_sync'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'db_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_get_info'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_sync_power_state'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager.'"
nl|'\n'
string|"'_sync_instance_power_state'"
op|')'
newline|'\n'
DECL|member|test_query_driver_power_state_and_sync_not_found_driver
name|'def'
name|'test_query_driver_power_state_and_sync_not_found_driver'
op|'('
nl|'\n'
name|'self'
op|','
name|'mock_sync_power_state'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'error'
op|'='
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
number|'1'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'get_info'"
op|','
name|'side_effect'
op|'='
name|'error'
op|')'
name|'as'
name|'mock_get_info'
op|':'
newline|'\n'
indent|'            '
name|'db_instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'fake-uuid'"
op|','
name|'task_state'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_query_driver_power_state_and_sync'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'db_instance'
op|')'
newline|'\n'
name|'mock_get_info'
op|'.'
name|'assert_called_once_with'
op|'('
name|'db_instance'
op|')'
newline|'\n'
name|'mock_sync_power_state'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'db_instance'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'NOSTATE'
op|','
nl|'\n'
name|'use_slave'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_pending_deletes
dedent|''
dedent|''
name|'def'
name|'test_run_pending_deletes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'instance_delete_interval'
op|'='
number|'10'
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeInstance
name|'class'
name|'FakeInstance'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'uuid'
op|','
name|'name'
op|','
name|'smd'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'uuid'
op|'='
name|'uuid'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'system_metadata'
op|'='
name|'smd'
newline|'\n'
name|'self'
op|'.'
name|'cleaned'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|__getitem__
dedent|''
name|'def'
name|'__getitem__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'getattr'
op|'('
name|'self'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|save
dedent|''
name|'def'
name|'save'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
DECL|class|FakeInstanceList
dedent|''
dedent|''
name|'class'
name|'FakeInstanceList'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|get_by_filters
indent|'            '
name|'def'
name|'get_by_filters'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'a'
op|'='
name|'FakeInstance'
op|'('
string|"'123'"
op|','
string|"'apple'"
op|','
op|'{'
string|"'clean_attempts'"
op|':'
string|"'100'"
op|'}'
op|')'
newline|'\n'
name|'b'
op|'='
name|'FakeInstance'
op|'('
string|"'456'"
op|','
string|"'orange'"
op|','
op|'{'
string|"'clean_attempts'"
op|':'
string|"'3'"
op|'}'
op|')'
newline|'\n'
name|'c'
op|'='
name|'FakeInstance'
op|'('
string|"'789'"
op|','
string|"'banana'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'objects'
op|'.'
name|'InstanceList'
op|','
nl|'\n'
string|"'get_by_filters'"
op|')'
newline|'\n'
name|'objects'
op|'.'
name|'InstanceList'
op|'.'
name|'get_by_filters'
op|'('
nl|'\n'
op|'{'
string|"'read_deleted'"
op|':'
string|"'yes'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deleted'"
op|':'
name|'True'
op|','
string|"'soft_deleted'"
op|':'
name|'False'
op|','
string|"'host'"
op|':'
string|"'fake-mini'"
op|','
nl|'\n'
string|"'cleaned'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
DECL|variable|expected_attrs
name|'expected_attrs'
op|'='
op|'['
string|"'info_cache'"
op|','
string|"'security_groups'"
op|','
nl|'\n'
string|"'system_metadata'"
op|']'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'a'
op|','
name|'b'
op|','
name|'c'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'delete_instance_files'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'delete_instance_files'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'delete_instance_files'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_run_pending_deletes'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'a'
op|'.'
name|'cleaned'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'100'"
op|','
name|'a'
op|'.'
name|'system_metadata'
op|'['
string|"'clean_attempts'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'b'
op|'.'
name|'cleaned'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'4'"
op|','
name|'b'
op|'.'
name|'system_metadata'
op|'['
string|"'clean_attempts'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'c'
op|'.'
name|'cleaned'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'1'"
op|','
name|'c'
op|'.'
name|'system_metadata'
op|'['
string|"'clean_attempts'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_interface_failure
dedent|''
name|'def'
name|'test_attach_interface_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test that the fault methods are invoked when an attach fails'
nl|'\n'
indent|'        '
name|'db_instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
op|')'
newline|'\n'
name|'f_instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'_from_db_object'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'Instance'
op|'('
op|')'
op|','
nl|'\n'
name|'db_instance'
op|')'
newline|'\n'
name|'e'
op|'='
name|'exception'
op|'.'
name|'InterfaceAttachFailed'
op|'('
name|'instance'
op|'='
name|'f_instance'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_utils'
op|','
string|"'add_instance_fault_from_exc'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|','
nl|'\n'
string|"'allocate_port_for_instance'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'e'
op|')'
newline|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
name|'meth'
op|','
name|'add_fault'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InterfaceAttachFailed'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'attach_interface'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'f_instance'
op|','
string|"'net_id'"
op|','
string|"'port_id'"
op|','
nl|'\n'
name|'None'
op|')'
newline|'\n'
name|'add_fault'
op|'.'
name|'assert_has_calls'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'f_instance'
op|','
name|'e'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'ANY'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'do_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_interface_failure
dedent|''
name|'def'
name|'test_detach_interface_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test that the fault methods are invoked when a detach fails'
nl|'\n'
nl|'\n'
comment|'# Build test data that will cause a PortNotFound exception'
nl|'\n'
indent|'        '
name|'f_instance'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'f_instance'
op|'.'
name|'info_cache'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'f_instance'
op|'.'
name|'info_cache'
op|'.'
name|'network_info'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_utils'
op|','
string|"'add_instance_fault_from_exc'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_set_instance_error_state'"
op|')'
newline|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
name|'meth'
op|','
name|'add_fault'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PortNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'detach_interface'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'f_instance'
op|','
string|"'port_id'"
op|')'
newline|'\n'
name|'add_fault'
op|'.'
name|'assert_has_calls'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'f_instance'
op|','
name|'mock'
op|'.'
name|'ANY'
op|','
name|'mock'
op|'.'
name|'ANY'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'do_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_swap_volume_volume_api_usage
dedent|''
name|'def'
name|'test_swap_volume_volume_api_usage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# This test ensures that volume_id arguments are passed to volume_api'
nl|'\n'
comment|'# and that volume states are OK'
nl|'\n'
indent|'        '
name|'volumes'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'old_volume_id'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'='
op|'{'
string|"'id'"
op|':'
name|'old_volume_id'
op|','
nl|'\n'
string|"'display_name'"
op|':'
string|"'old_volume'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'detaching'"
op|'}'
newline|'\n'
name|'new_volume_id'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'='
op|'{'
string|"'id'"
op|':'
name|'new_volume_id'
op|','
nl|'\n'
string|"'display_name'"
op|':'
string|"'new_volume'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'available'"
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_vol_api_begin_detaching
name|'def'
name|'fake_vol_api_begin_detaching'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'volume_id'
op|')'
op|')'
newline|'\n'
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'detaching'"
newline|'\n'
nl|'\n'
DECL|function|fake_vol_api_roll_detaching
dedent|''
name|'def'
name|'fake_vol_api_roll_detaching'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'volume_id'
op|')'
op|')'
newline|'\n'
name|'if'
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'=='
string|"'detaching'"
op|':'
newline|'\n'
indent|'                '
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'in-use'"
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'fake_bdm'
op|'='
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/vdb'"
op|','
string|"'source_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
string|"'instance_uuid'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'connection_info'"
op|':'
string|'\'{"foo": "bar"}\''
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_vol_api_func
name|'def'
name|'fake_vol_api_func'
op|'('
name|'context'
op|','
name|'volume'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'volume'
op|')'
op|')'
newline|'\n'
name|'return'
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_vol_get
dedent|''
name|'def'
name|'fake_vol_get'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'volume_id'
op|')'
op|')'
newline|'\n'
name|'return'
name|'volumes'
op|'['
name|'volume_id'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_vol_attach
dedent|''
name|'def'
name|'fake_vol_attach'
op|'('
name|'context'
op|','
name|'volume_id'
op|','
name|'instance_uuid'
op|','
name|'connector'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'volume_id'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
nl|'\n'
op|'['
string|"'available'"
op|','
string|"'attaching'"
op|']'
op|')'
newline|'\n'
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'in-use'"
newline|'\n'
nl|'\n'
DECL|function|fake_vol_api_reserve
dedent|''
name|'def'
name|'fake_vol_api_reserve'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'volume_id'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'attaching'"
newline|'\n'
nl|'\n'
DECL|function|fake_vol_unreserve
dedent|''
name|'def'
name|'fake_vol_unreserve'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'volume_id'
op|')'
op|')'
newline|'\n'
name|'if'
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'=='
string|"'attaching'"
op|':'
newline|'\n'
indent|'                '
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'available'"
newline|'\n'
nl|'\n'
DECL|function|fake_vol_detach
dedent|''
dedent|''
name|'def'
name|'fake_vol_detach'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'volume_id'
op|')'
op|')'
newline|'\n'
name|'volumes'
op|'['
name|'volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'available'"
newline|'\n'
nl|'\n'
DECL|function|fake_vol_migrate_volume_completion
dedent|''
name|'def'
name|'fake_vol_migrate_volume_completion'
op|'('
name|'context'
op|','
name|'old_volume_id'
op|','
nl|'\n'
name|'new_volume_id'
op|','
name|'error'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'old_volume_id'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'old_volume_id'
op|')'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'save_volume_id'"
op|':'
name|'new_volume_id'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_func_exc
dedent|''
name|'def'
name|'fake_func_exc'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'AttributeError'
comment|'# Random exception'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'begin_detaching'"
op|','
nl|'\n'
name|'fake_vol_api_begin_detaching'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'roll_detaching'"
op|','
nl|'\n'
name|'fake_vol_api_roll_detaching'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'get'"
op|','
name|'fake_vol_get'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'initialize_connection'"
op|','
nl|'\n'
name|'fake_vol_api_func'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'attach'"
op|','
name|'fake_vol_attach'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'reserve_volume'"
op|','
nl|'\n'
name|'fake_vol_api_reserve'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'unreserve_volume'"
op|','
nl|'\n'
name|'fake_vol_unreserve'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'terminate_connection'"
op|','
nl|'\n'
name|'fake_vol_api_func'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'detach'"
op|','
name|'fake_vol_detach'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'block_device_mapping_get_by_volume_id'"
op|','
nl|'\n'
name|'lambda'
name|'x'
op|','
name|'y'
op|','
name|'z'
op|':'
name|'fake_bdm'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'get_volume_connector'"
op|','
nl|'\n'
name|'lambda'
name|'x'
op|':'
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'swap_volume'"
op|','
nl|'\n'
name|'lambda'
name|'w'
op|','
name|'x'
op|','
name|'y'
op|','
name|'z'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'migrate_volume_completion'"
op|','
nl|'\n'
name|'fake_vol_migrate_volume_completion'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'block_device_mapping_update'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'fake_bdm'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
nl|'\n'
string|"'instance_fault_create'"
op|','
nl|'\n'
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
nl|'\n'
name|'test_instance_fault'
op|'.'
name|'fake_faults'
op|'['
string|"'fake-uuid'"
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Good path'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'swap_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'old_volume_id'
op|','
name|'new_volume_id'
op|','
nl|'\n'
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'**'
op|'{'
string|"'uuid'"
op|':'
string|"'fake'"
op|'}'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'in-use'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Error paths'
nl|'\n'
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'detaching'"
newline|'\n'
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'attaching'"
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'swap_volume'"
op|','
name|'fake_func_exc'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AttributeError'
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'swap_volume'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'old_volume_id'
op|','
name|'new_volume_id'
op|','
nl|'\n'
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'**'
op|'{'
string|"'uuid'"
op|':'
string|"'fake'"
op|'}'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'in-use'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
nl|'\n'
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'detaching'"
newline|'\n'
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|'='
string|"'attaching'"
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
string|"'initialize_connection'"
op|','
nl|'\n'
name|'fake_func_exc'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AttributeError'
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'swap_volume'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'old_volume_id'
op|','
name|'new_volume_id'
op|','
nl|'\n'
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'**'
op|'{'
string|"'uuid'"
op|':'
string|"'fake'"
op|'}'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volumes'
op|'['
name|'old_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'in-use'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volumes'
op|'['
name|'new_volume_id'
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'available'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_source
dedent|''
name|'def'
name|'test_check_can_live_migrate_source'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'is_volume_backed'
op|'='
string|"'volume_backed'"
newline|'\n'
name|'dest_check_data'
op|'='
name|'dict'
op|'('
name|'foo'
op|'='
string|"'bar'"
op|')'
newline|'\n'
name|'db_instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'objects'
op|'.'
name|'Instance'
op|'('
op|')'
op|','
name|'db_instance'
op|')'
newline|'\n'
name|'expected_dest_check_data'
op|'='
name|'dict'
op|'('
name|'dest_check_data'
op|','
nl|'\n'
name|'is_volume_backed'
op|'='
name|'is_volume_backed'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_api'
op|','
nl|'\n'
string|"'is_volume_backed_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'check_can_live_migrate_source'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_api'
op|'.'
name|'is_volume_backed_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'is_volume_backed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'check_can_live_migrate_source'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'expected_dest_check_data'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'check_can_live_migrate_source'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'='
name|'instance'
op|','
nl|'\n'
name|'dest_check_data'
op|'='
name|'dest_check_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_check_can_live_migrate_destination
dedent|''
name|'def'
name|'_test_check_can_live_migrate_destination'
op|'('
name|'self'
op|','
name|'do_raise'
op|'='
name|'False'
op|','
nl|'\n'
name|'has_mig_data'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
name|'host'
op|'='
string|"'fake-host'"
op|')'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'objects'
op|'.'
name|'Instance'
op|'('
op|')'
op|','
name|'db_instance'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'host'
op|'='
string|"'fake-host'"
newline|'\n'
name|'block_migration'
op|'='
string|"'block_migration'"
newline|'\n'
name|'disk_over_commit'
op|'='
string|"'disk_over_commit'"
newline|'\n'
name|'src_info'
op|'='
string|"'src_info'"
newline|'\n'
name|'dest_info'
op|'='
string|"'dest_info'"
newline|'\n'
name|'dest_check_data'
op|'='
name|'dict'
op|'('
name|'foo'
op|'='
string|"'bar'"
op|')'
newline|'\n'
name|'mig_data'
op|'='
name|'dict'
op|'('
name|'cow'
op|'='
string|"'moo'"
op|')'
newline|'\n'
name|'expected_result'
op|'='
name|'dict'
op|'('
name|'mig_data'
op|')'
newline|'\n'
name|'if'
name|'has_mig_data'
op|':'
newline|'\n'
indent|'            '
name|'dest_check_data'
op|'['
string|"'migrate_data'"
op|']'
op|'='
name|'dict'
op|'('
name|'cat'
op|'='
string|"'meow'"
op|')'
newline|'\n'
name|'expected_result'
op|'.'
name|'update'
op|'('
name|'cat'
op|'='
string|"'meow'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_compute_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'check_can_live_migrate_destination'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_rpcapi'
op|','
nl|'\n'
string|"'check_can_live_migrate_source'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'check_can_live_migrate_destination_cleanup'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_compute_info'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'fake-host'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'src_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_compute_info'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'host'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'dest_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'check_can_live_migrate_destination'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'src_info'
op|','
name|'dest_info'
op|','
nl|'\n'
name|'block_migration'
op|','
name|'disk_over_commit'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'dest_check_data'
op|')'
newline|'\n'
nl|'\n'
name|'mock_meth'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_rpcapi'
op|'.'
name|'check_can_live_migrate_source'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'dest_check_data'
op|')'
newline|'\n'
name|'if'
name|'do_raise'
op|':'
newline|'\n'
indent|'            '
name|'mock_meth'
op|'.'
name|'AndRaise'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'instance_fault_create'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_fault_create'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'test_instance_fault'
op|'.'
name|'fake_faults'
op|'['
string|"'fake-uuid'"
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'mock_meth'
op|'.'
name|'AndReturn'
op|'('
name|'mig_data'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'check_can_live_migrate_destination_cleanup'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'dest_check_data'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'check_can_live_migrate_destination'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'='
name|'instance'
op|','
nl|'\n'
name|'block_migration'
op|'='
name|'block_migration'
op|','
nl|'\n'
name|'disk_over_commit'
op|'='
name|'disk_over_commit'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_result'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_destination_success
dedent|''
name|'def'
name|'test_check_can_live_migrate_destination_success'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_check_can_live_migrate_destination'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_destination_success_w_mig_data
dedent|''
name|'def'
name|'test_check_can_live_migrate_destination_success_w_mig_data'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_check_can_live_migrate_destination'
op|'('
name|'has_mig_data'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_can_live_migrate_destination_fail
dedent|''
name|'def'
name|'test_check_can_live_migrate_destination_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'test'
op|'.'
name|'TestingException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_check_can_live_migrate_destination'
op|','
nl|'\n'
name|'do_raise'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.InstanceEvents._lock_name'"
op|')'
newline|'\n'
DECL|member|test_prepare_for_instance_event
name|'def'
name|'test_prepare_for_instance_event'
op|'('
name|'self'
op|','
name|'lock_name_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_obj'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'foo'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'prepare_for_instance_event'
op|'('
nl|'\n'
name|'inst_obj'
op|','
string|"'test-event'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'foo'"
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_events'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'test-event'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_events'
op|'['
string|"'foo'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'result'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_events'
op|'['
string|"'foo'"
op|']'
op|'['
string|"'test-event'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'hasattr'
op|'('
name|'result'
op|','
string|"'send'"
op|')'
op|')'
newline|'\n'
name|'lock_name_mock'
op|'.'
name|'assert_called_once_with'
op|'('
name|'inst_obj'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.InstanceEvents._lock_name'"
op|')'
newline|'\n'
DECL|member|test_pop_instance_event
name|'def'
name|'test_pop_instance_event'
op|'('
name|'self'
op|','
name|'lock_name_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'event'
op|'='
name|'eventlet_event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_events'
op|'='
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
nl|'\n'
string|"'test-event'"
op|':'
name|'event'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'inst_obj'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'foo'"
op|')'
newline|'\n'
name|'event_obj'
op|'='
name|'objects'
op|'.'
name|'InstanceExternalEvent'
op|'('
name|'name'
op|'='
string|"'test-event'"
op|','
nl|'\n'
name|'tag'
op|'='
name|'None'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'pop_instance_event'
op|'('
name|'inst_obj'
op|','
nl|'\n'
name|'event_obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'event'
op|')'
newline|'\n'
name|'lock_name_mock'
op|'.'
name|'assert_called_once_with'
op|'('
name|'inst_obj'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.InstanceEvents._lock_name'"
op|')'
newline|'\n'
DECL|member|test_clear_events_for_instance
name|'def'
name|'test_clear_events_for_instance'
op|'('
name|'self'
op|','
name|'lock_name_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'event'
op|'='
name|'eventlet_event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_events'
op|'='
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
nl|'\n'
string|"'test-event'"
op|':'
name|'event'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'inst_obj'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'foo'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'clear_events_for_instance'
op|'('
nl|'\n'
name|'inst_obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
op|'{'
string|"'test-event'"
op|':'
name|'event'
op|'}'
op|')'
newline|'\n'
name|'lock_name_mock'
op|'.'
name|'assert_called_once_with'
op|'('
name|'inst_obj'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_events_lock_name
dedent|''
name|'def'
name|'test_instance_events_lock_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_obj'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'foo'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_lock_name'
op|'('
name|'inst_obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
string|"'foo-events'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_prepare_for_instance_event_again
dedent|''
name|'def'
name|'test_prepare_for_instance_event_again'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_obj'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'foo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'prepare_for_instance_event'
op|'('
nl|'\n'
name|'inst_obj'
op|','
string|"'test-event'"
op|')'
newline|'\n'
comment|'# A second attempt will avoid creating a new list; make sure we'
nl|'\n'
comment|'# get the current list'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'prepare_for_instance_event'
op|'('
nl|'\n'
name|'inst_obj'
op|','
string|"'test-event'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'foo'"
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_events'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'test-event'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_events'
op|'['
string|"'foo'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'result'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_events'
op|'['
string|"'foo'"
op|']'
op|'['
string|"'test-event'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'hasattr'
op|'('
name|'result'
op|','
string|"'send'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_process_instance_event
dedent|''
name|'def'
name|'test_process_instance_event'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'event'
op|'='
name|'eventlet_event'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_events'
op|'='
op|'{'
nl|'\n'
string|"'foo'"
op|':'
op|'{'
nl|'\n'
string|"'test-event'"
op|':'
name|'event'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'inst_obj'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'foo'"
op|')'
newline|'\n'
name|'event_obj'
op|'='
name|'objects'
op|'.'
name|'InstanceExternalEvent'
op|'('
name|'name'
op|'='
string|"'test-event'"
op|','
name|'tag'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_process_instance_event'
op|'('
name|'inst_obj'
op|','
name|'event_obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'event'
op|'.'
name|'ready'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'event_obj'
op|','
name|'event'
op|'.'
name|'wait'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
op|'}'
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'instance_events'
op|'.'
name|'_events'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_external_instance_event
dedent|''
name|'def'
name|'test_external_instance_event'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instances'
op|'='
op|'['
nl|'\n'
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'uuid1'"
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'uuid'
op|'='
string|"'uuid2'"
op|')'
op|']'
newline|'\n'
name|'events'
op|'='
op|'['
nl|'\n'
name|'objects'
op|'.'
name|'InstanceExternalEvent'
op|'('
name|'name'
op|'='
string|"'network-changed'"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|"'uuid1'"
op|')'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'InstanceExternalEvent'
op|'('
name|'name'
op|'='
string|"'foo'"
op|','
name|'instance_uuid'
op|'='
string|"'uuid2'"
op|')'
op|']'
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'network_api'
op|','
string|"'get_instance_nw_info'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_process_instance_event'"
op|')'
newline|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
name|'_process_instance_event'
op|','
name|'get_instance_nw_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'external_instance_event'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instances'
op|','
name|'events'
op|')'
newline|'\n'
name|'get_instance_nw_info'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instances'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'_process_instance_event'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instances'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'events'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
dedent|''
name|'do_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_retry_reboot_pending_soft
dedent|''
name|'def'
name|'test_retry_reboot_pending_soft'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_PENDING'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'allow_reboot'
op|','
name|'reboot_type'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_retry_reboot'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'allow_reboot'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'reboot_type'
op|','
string|"'SOFT'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_retry_reboot_pending_hard
dedent|''
dedent|''
name|'def'
name|'test_retry_reboot_pending_hard'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_PENDING_HARD'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'allow_reboot'
op|','
name|'reboot_type'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_retry_reboot'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'allow_reboot'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'reboot_type'
op|','
string|"'HARD'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_retry_reboot_starting_soft_off
dedent|''
dedent|''
name|'def'
name|'test_retry_reboot_starting_soft_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_STARTED'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'NOSTATE'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'allow_reboot'
op|','
name|'reboot_type'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_retry_reboot'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'allow_reboot'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'reboot_type'
op|','
string|"'HARD'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_retry_reboot_starting_hard_off
dedent|''
dedent|''
name|'def'
name|'test_retry_reboot_starting_hard_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_STARTED_HARD'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'NOSTATE'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'allow_reboot'
op|','
name|'reboot_type'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_retry_reboot'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'allow_reboot'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'reboot_type'
op|','
string|"'HARD'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_retry_reboot_starting_hard_on
dedent|''
dedent|''
name|'def'
name|'test_retry_reboot_starting_hard_on'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOT_STARTED_HARD'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'allow_reboot'
op|','
name|'reboot_type'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_retry_reboot'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'allow_reboot'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'reboot_type'
op|','
string|"'HARD'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_retry_reboot_no_reboot
dedent|''
dedent|''
name|'def'
name|'test_retry_reboot_no_reboot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
string|"'bar'"
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'allow_reboot'
op|','
name|'reboot_type'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_retry_reboot'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'allow_reboot'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'reboot_type'
op|','
string|"'HARD'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.BlockDeviceMapping.get_by_volume_id'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager._detach_volume'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.Instance._from_db_object'"
op|')'
newline|'\n'
DECL|member|test_remove_volume_connection
name|'def'
name|'test_remove_volume_connection'
op|'('
name|'self'
op|','
name|'inst_from_db'
op|','
name|'detach'
op|','
name|'bdm_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bdm'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'bdm'
newline|'\n'
name|'inst_obj'
op|'='
name|'mock'
op|'.'
name|'sentinel'
op|'.'
name|'inst_obj'
newline|'\n'
name|'bdm_get'
op|'.'
name|'return_value'
op|'='
name|'bdm'
newline|'\n'
name|'inst_from_db'
op|'.'
name|'return_value'
op|'='
name|'inst_obj'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'volume_api'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'remove_volume_connection'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'vol'"
op|','
nl|'\n'
name|'inst_obj'
op|')'
newline|'\n'
dedent|''
name|'detach'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst_obj'
op|','
name|'bdm'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rescue
dedent|''
name|'def'
name|'test_rescue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'fake_nw_info'
op|'='
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'('
op|')'
newline|'\n'
name|'rescue_image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'fake'"
op|','
string|"'name'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'InstanceActionEvent'
op|','
string|"'event_start'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'InstanceActionEvent'
op|','
nl|'\n'
string|"'event_finish_with_failure'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'elevated'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'context'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_instance_nw_info'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'fake_nw_info'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_rescue_image'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'rescue_image_meta'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_notify_about_instance_usage'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'rescue'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'conductor_api'
op|','
nl|'\n'
string|"'notify_usage_exists'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
nl|'\n'
name|'event_start'
op|','
name|'event_finish'
op|','
name|'elevated_context'
op|','
name|'get_nw_info'
op|','
nl|'\n'
name|'get_rescue_image'
op|','
name|'notify_instance_usage'
op|','
name|'driver_rescue'
op|','
nl|'\n'
name|'notify_usage_exists'
op|','
name|'get_power_state'
op|','
name|'instance_save'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'rescue_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'rescue_password'
op|'='
string|"'verybadpass'"
op|','
nl|'\n'
name|'rescue_image_ref'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
comment|'# assert the field values on the instance object'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'RESCUED'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'instance'
op|'.'
name|'power_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'instance'
op|'.'
name|'launched_at'
op|')'
newline|'\n'
nl|'\n'
comment|'# assert our mock calls'
nl|'\n'
name|'get_nw_info'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'get_rescue_image'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'extra_usage_info'
op|'='
op|'{'
string|"'rescue_image_name'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'notify_calls'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
string|'"rescue.start"'
op|','
nl|'\n'
name|'extra_usage_info'
op|'='
name|'extra_usage_info'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'fake_nw_info'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
string|'"rescue.end"'
op|','
nl|'\n'
name|'extra_usage_info'
op|'='
name|'extra_usage_info'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'fake_nw_info'
op|')'
nl|'\n'
op|']'
newline|'\n'
name|'notify_instance_usage'
op|'.'
name|'assert_has_calls'
op|'('
name|'notify_calls'
op|')'
newline|'\n'
nl|'\n'
name|'driver_rescue'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'fake_nw_info'
op|','
name|'rescue_image_meta'
op|','
nl|'\n'
string|"'verybadpass'"
op|')'
newline|'\n'
nl|'\n'
name|'notify_usage_exists'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'current_period'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'instance_save'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'expected_task_state'
op|'='
name|'task_states'
op|'.'
name|'RESCUING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unrescue
dedent|''
dedent|''
name|'def'
name|'test_unrescue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'RESCUED'
op|')'
newline|'\n'
name|'fake_nw_info'
op|'='
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'('
op|')'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'InstanceActionEvent'
op|','
string|"'event_start'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'InstanceActionEvent'
op|','
nl|'\n'
string|"'event_finish_with_failure'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'elevated'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'context'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_instance_nw_info'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'fake_nw_info'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_notify_about_instance_usage'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'unrescue'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
nl|'\n'
name|'event_start'
op|','
name|'event_finish'
op|','
name|'elevated_context'
op|','
name|'get_nw_info'
op|','
nl|'\n'
name|'notify_instance_usage'
op|','
name|'driver_unrescue'
op|','
name|'get_power_state'
op|','
nl|'\n'
name|'instance_save'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'unrescue_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
comment|'# assert the field values on the instance object'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'instance'
op|'.'
name|'power_state'
op|')'
newline|'\n'
nl|'\n'
comment|'# assert our mock calls'
nl|'\n'
name|'get_nw_info'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'notify_calls'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
string|'"unrescue.start"'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'fake_nw_info'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
string|'"unrescue.end"'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'fake_nw_info'
op|')'
nl|'\n'
op|']'
newline|'\n'
name|'notify_instance_usage'
op|'.'
name|'assert_has_calls'
op|'('
name|'notify_calls'
op|')'
newline|'\n'
nl|'\n'
name|'driver_unrescue'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|','
name|'fake_nw_info'
op|')'
newline|'\n'
nl|'\n'
name|'instance_save'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'expected_task_state'
op|'='
name|'task_states'
op|'.'
name|'UNRESCUING'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'InstanceActionEvent'
op|','
string|"'event_start'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'InstanceActionEvent'
op|','
nl|'\n'
string|"'event_finish_with_failure'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager._get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.generate_password'"
op|','
name|'return_value'
op|'='
string|"'fake-pass'"
op|')'
newline|'\n'
DECL|member|test_set_admin_password
name|'def'
name|'test_set_admin_password'
op|'('
name|'self'
op|','
name|'gen_password_mock'
op|','
nl|'\n'
name|'instance_save_mock'
op|','
name|'power_state_mock'
op|','
nl|'\n'
name|'event_finish_mock'
op|','
name|'event_start_mock'
op|')'
op|':'
newline|'\n'
comment|'# Ensure instance can have its admin password set.'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'UPDATING_PASSWORD'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'elevated'"
op|','
name|'return_value'
op|'='
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'set_admin_password'"
op|')'
newline|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
name|'driver_mock'
op|','
name|'elevated_mock'
op|')'
op|':'
newline|'\n'
comment|'# call the manager method'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'set_admin_password'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'None'
op|')'
newline|'\n'
comment|'# make our assertions'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
name|'power_state_mock'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'driver_mock'
op|'.'
name|'assert_called_once_with'
op|'('
name|'instance'
op|','
string|"'fake-pass'"
op|')'
newline|'\n'
name|'instance_save_mock'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'expected_task_state'
op|'='
name|'task_states'
op|'.'
name|'UPDATING_PASSWORD'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'do_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'InstanceActionEvent'
op|','
string|"'event_start'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'InstanceActionEvent'
op|','
nl|'\n'
string|"'event_finish_with_failure'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager._get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'NOSTATE'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_utils'
op|','
string|"'add_instance_fault_from_exc'"
op|')'
newline|'\n'
DECL|member|test_set_admin_password_bad_state
name|'def'
name|'test_set_admin_password_bad_state'
op|'('
name|'self'
op|','
name|'add_fault_mock'
op|','
nl|'\n'
name|'instance_save_mock'
op|','
name|'power_state_mock'
op|','
nl|'\n'
name|'event_finish_mock'
op|','
name|'event_start_mock'
op|')'
op|':'
newline|'\n'
comment|'# Test setting password while instance is rebuilding.'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'elevated'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'context'
op|')'
op|':'
newline|'\n'
comment|'# call the manager method'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstancePasswordSetFailed'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'set_admin_password'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
comment|'# make our assertions'
nl|'\n'
dedent|''
name|'power_state_mock'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'instance_save_mock'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'expected_task_state'
op|'='
name|'task_states'
op|'.'
name|'UPDATING_PASSWORD'
op|')'
newline|'\n'
name|'add_fault_mock'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'mock'
op|'.'
name|'ANY'
op|','
name|'mock'
op|'.'
name|'ANY'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'InstanceActionEvent'
op|','
string|"'event_start'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'InstanceActionEvent'
op|','
nl|'\n'
string|"'event_finish_with_failure'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.utils.generate_password'"
op|','
name|'return_value'
op|'='
string|"'fake-pass'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager._get_power_state'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'power_state'
op|'.'
name|'RUNNING'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager._instance_update'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'Instance'
op|','
string|"'save'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'compute_utils'
op|','
string|"'add_instance_fault_from_exc'"
op|')'
newline|'\n'
DECL|member|_do_test_set_admin_password_driver_error
name|'def'
name|'_do_test_set_admin_password_driver_error'
op|'('
name|'self'
op|','
name|'exc'
op|','
nl|'\n'
name|'expected_vm_state'
op|','
nl|'\n'
name|'expected_task_state'
op|','
nl|'\n'
name|'expected_exception'
op|','
nl|'\n'
name|'add_fault_mock'
op|','
nl|'\n'
name|'instance_save_mock'
op|','
nl|'\n'
name|'update_mock'
op|','
nl|'\n'
name|'power_state_mock'
op|','
nl|'\n'
name|'gen_password_mock'
op|','
nl|'\n'
name|'event_finish_mock'
op|','
nl|'\n'
name|'event_start_mock'
op|')'
op|':'
newline|'\n'
comment|'# Ensure expected exception is raised if set_admin_password fails.'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'UPDATING_PASSWORD'
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'elevated'"
op|','
name|'return_value'
op|'='
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'set_admin_password'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exc'
op|')'
newline|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
name|'driver_mock'
op|','
name|'elevated_mock'
op|')'
op|':'
newline|'\n'
comment|'# error raised from the driver should not reveal internal'
nl|'\n'
comment|'# information so a new error is raised'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'expected_exception'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'set_admin_password'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|'='
name|'instance'
op|','
nl|'\n'
name|'new_pass'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'expected_exception'
op|'=='
name|'NotImplementedError'
op|':'
newline|'\n'
indent|'                '
name|'instance_save_mock'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'expected_task_state'
op|'='
name|'task_states'
op|'.'
name|'UPDATING_PASSWORD'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# setting the instance to error state'
nl|'\n'
indent|'                '
name|'instance_save_mock'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_vm_state'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
comment|'# check revert_task_state decorator'
nl|'\n'
name|'update_mock'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'expected_task_state'
op|')'
newline|'\n'
comment|'# check wrap_instance_fault decorator'
nl|'\n'
name|'add_fault_mock'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'mock'
op|'.'
name|'ANY'
op|','
name|'mock'
op|'.'
name|'ANY'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'do_test'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_admin_password_driver_not_authorized
dedent|''
name|'def'
name|'test_set_admin_password_driver_not_authorized'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensure expected exception is raised if set_admin_password not'
nl|'\n'
comment|'# authorized.'
nl|'\n'
indent|'        '
name|'exc'
op|'='
name|'exception'
op|'.'
name|'Forbidden'
op|'('
string|"'Internal error'"
op|')'
newline|'\n'
name|'expected_exception'
op|'='
name|'exception'
op|'.'
name|'InstancePasswordSetFailed'
newline|'\n'
name|'self'
op|'.'
name|'_do_test_set_admin_password_driver_error'
op|'('
nl|'\n'
name|'exc'
op|','
name|'vm_states'
op|'.'
name|'ERROR'
op|','
name|'None'
op|','
name|'expected_exception'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_admin_password_driver_not_implemented
dedent|''
name|'def'
name|'test_set_admin_password_driver_not_implemented'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensure expected exception is raised if set_admin_password not'
nl|'\n'
comment|'# implemented by driver.'
nl|'\n'
indent|'        '
name|'exc'
op|'='
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
name|'expected_exception'
op|'='
name|'NotImplementedError'
newline|'\n'
name|'self'
op|'.'
name|'_do_test_set_admin_password_driver_error'
op|'('
nl|'\n'
name|'exc'
op|','
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'None'
op|','
name|'expected_exception'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_init_host_with_partial_migration
dedent|''
name|'def'
name|'_test_init_host_with_partial_migration'
op|'('
name|'self'
op|','
name|'task_state'
op|'='
name|'None'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'our_host'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
newline|'\n'
name|'instance_1'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance_1'
op|'.'
name|'uuid'
op|'='
string|"'foo'"
newline|'\n'
name|'instance_1'
op|'.'
name|'task_state'
op|'='
name|'task_state'
newline|'\n'
name|'instance_1'
op|'.'
name|'vm_state'
op|'='
name|'vm_state'
newline|'\n'
name|'instance_1'
op|'.'
name|'host'
op|'='
string|"'not-'"
op|'+'
name|'our_host'
newline|'\n'
name|'instance_2'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'instance_2'
op|'.'
name|'uuid'
op|'='
string|"'bar'"
newline|'\n'
name|'instance_2'
op|'.'
name|'task_state'
op|'='
name|'None'
newline|'\n'
name|'instance_2'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance_2'
op|'.'
name|'host'
op|'='
string|"'not-'"
op|'+'
name|'our_host'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_instances_on_driver'"
op|','
nl|'\n'
name|'return_value'
op|'='
op|'['
name|'instance_1'
op|','
nl|'\n'
name|'instance_2'
op|']'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_instance_nw_info'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'None'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_instance_block_device_info'"
op|','
nl|'\n'
name|'return_value'
op|'='
op|'{'
op|'}'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_is_instance_storage_shared'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'destroy'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'_get_instances_on_driver'
op|','
name|'_get_instance_nw_info'
op|','
nl|'\n'
name|'_get_instance_block_device_info'
op|','
name|'_is_instance_storage_shared'
op|','
nl|'\n'
name|'destroy'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_destroy_evacuated_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'destroy'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_2'
op|','
name|'None'
op|','
nl|'\n'
op|'{'
op|'}'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_host_with_partial_migration_migrating
dedent|''
dedent|''
name|'def'
name|'test_init_host_with_partial_migration_migrating'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_init_host_with_partial_migration'
op|'('
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'MIGRATING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_host_with_partial_migration_resize_migrating
dedent|''
name|'def'
name|'test_init_host_with_partial_migration_resize_migrating'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_init_host_with_partial_migration'
op|'('
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'RESIZE_MIGRATING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_host_with_partial_migration_resize_migrated
dedent|''
name|'def'
name|'test_init_host_with_partial_migration_resize_migrated'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_init_host_with_partial_migration'
op|'('
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'RESIZE_MIGRATED'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_host_with_partial_migration_finish_resize
dedent|''
name|'def'
name|'test_init_host_with_partial_migration_finish_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_init_host_with_partial_migration'
op|'('
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'RESIZE_FINISH'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_host_with_partial_migration_resized
dedent|''
name|'def'
name|'test_init_host_with_partial_migration_resized'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_init_host_with_partial_migration'
op|'('
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'RESIZED'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager._instance_update'"
op|')'
newline|'\n'
DECL|member|test_error_out_instance_on_exception_not_implemented_err
name|'def'
name|'test_error_out_instance_on_exception_not_implemented_err'
op|'('
name|'self'
op|','
nl|'\n'
name|'inst_update_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_error_out_instance_on_exception'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'instance_state'
op|'='
name|'vm_states'
op|'.'
name|'STOPPED'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'NotImplementedError'
op|'('
string|"'test'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NotImplementedError'
op|','
name|'do_test'
op|')'
newline|'\n'
name|'inst_update_mock'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'STOPPED'
op|','
name|'task_state'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager._instance_update'"
op|')'
newline|'\n'
DECL|member|test_error_out_instance_on_exception_inst_fault_rollback
name|'def'
name|'test_error_out_instance_on_exception_inst_fault_rollback'
op|'('
name|'self'
op|','
nl|'\n'
name|'inst_update_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_error_out_instance_on_exception'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'InstanceFaultRollback'
op|'('
nl|'\n'
name|'inner_exception'
op|'='
name|'test'
op|'.'
name|'TestingException'
op|'('
string|"'test'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
name|'do_test'
op|')'
newline|'\n'
name|'inst_update_mock'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'task_state'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager.'"
nl|'\n'
string|"'_set_instance_error_state'"
op|')'
newline|'\n'
DECL|member|test_error_out_instance_on_exception_unknown_with_quotas
name|'def'
name|'test_error_out_instance_on_exception_unknown_with_quotas'
op|'('
name|'self'
op|','
nl|'\n'
name|'set_error'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'quotas'
op|'='
name|'mock'
op|'.'
name|'create_autospec'
op|'('
name|'objects'
op|'.'
name|'Quotas'
op|','
name|'spec_set'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|function|do_test
name|'def'
name|'do_test'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_error_out_instance_on_exception'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'quotas'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
string|"'test'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
name|'do_test'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'quotas'
op|'.'
name|'method_calls'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mock'
op|'.'
name|'call'
op|'.'
name|'rollback'
op|'('
op|')'
op|','
name|'quotas'
op|'.'
name|'method_calls'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'set_error'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cleanup_volumes
dedent|''
name|'def'
name|'test_cleanup_volumes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'bdm_do_not_delete_dict'
op|'='
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
string|"'fake-id1'"
op|','
string|"'source_type'"
op|':'
string|"'image'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|'}'
op|')'
newline|'\n'
name|'bdm_delete_dict'
op|'='
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
string|"'fake-id2'"
op|','
string|"'source_type'"
op|':'
string|"'image'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'bdms'
op|'='
name|'block_device_obj'
op|'.'
name|'block_device_make_list'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'['
name|'bdm_do_not_delete_dict'
op|','
name|'bdm_delete_dict'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
nl|'\n'
string|"'delete'"
op|')'
name|'as'
name|'volume_delete'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_cleanup_volumes'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|','
name|'bdms'
op|')'
newline|'\n'
name|'volume_delete'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'bdms'
op|'['
number|'1'
op|']'
op|'.'
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cleanup_volumes_exception_do_not_raise
dedent|''
dedent|''
name|'def'
name|'test_cleanup_volumes_exception_do_not_raise'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'bdm_dict1'
op|'='
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
string|"'fake-id1'"
op|','
string|"'source_type'"
op|':'
string|"'image'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'bdm_dict2'
op|'='
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
string|"'fake-id2'"
op|','
string|"'source_type'"
op|':'
string|"'image'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'bdms'
op|'='
name|'block_device_obj'
op|'.'
name|'block_device_make_list'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'['
name|'bdm_dict1'
op|','
name|'bdm_dict2'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
nl|'\n'
string|"'delete'"
op|','
nl|'\n'
name|'side_effect'
op|'='
op|'['
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|','
name|'None'
op|']'
op|')'
name|'as'
name|'volume_delete'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_cleanup_volumes'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|','
name|'bdms'
op|','
nl|'\n'
name|'raise_exc'
op|'='
name|'False'
op|')'
newline|'\n'
name|'calls'
op|'='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'bdm'
op|'.'
name|'volume_id'
op|')'
name|'for'
name|'bdm'
name|'in'
name|'bdms'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'calls'
op|','
name|'volume_delete'
op|'.'
name|'call_args_list'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cleanup_volumes_exception_raise
dedent|''
dedent|''
name|'def'
name|'test_cleanup_volumes_exception_raise'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'bdm_dict1'
op|'='
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
string|"'fake-id1'"
op|','
string|"'source_type'"
op|':'
string|"'image'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'bdm_dict2'
op|'='
name|'fake_block_device'
op|'.'
name|'FakeDbBlockDeviceDict'
op|'('
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
string|"'fake-id2'"
op|','
string|"'source_type'"
op|':'
string|"'image'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'bdms'
op|'='
name|'block_device_obj'
op|'.'
name|'block_device_make_list'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'['
name|'bdm_dict1'
op|','
name|'bdm_dict2'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'volume_api'
op|','
nl|'\n'
string|"'delete'"
op|','
nl|'\n'
name|'side_effect'
op|'='
op|'['
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|','
name|'None'
op|']'
op|')'
name|'as'
name|'volume_delete'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_cleanup_volumes'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'bdms'
op|')'
newline|'\n'
name|'calls'
op|'='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'bdm'
op|'.'
name|'volume_id'
op|')'
name|'for'
name|'bdm'
name|'in'
name|'bdms'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'calls'
op|','
name|'volume_delete'
op|'.'
name|'call_args_list'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ComputeManagerBuildInstanceTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'ComputeManagerBuildInstanceTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ComputeManagerBuildInstanceTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'CONF'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|','
string|"'info_cache'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'admin_pass'
op|'='
string|"'pass'"
newline|'\n'
name|'self'
op|'.'
name|'injected_files'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'image'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'node'
op|'='
string|"'fake-node'"
newline|'\n'
name|'self'
op|'.'
name|'limits'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'security_groups'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'filter_properties'
op|'='
op|'{'
string|"'retry'"
op|':'
op|'{'
string|"'num_attempts'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'hosts'"
op|':'
op|'['
op|'['
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|','
nl|'\n'
string|"'fake-node'"
op|']'
op|']'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_network_info
name|'def'
name|'fake_network_info'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'network_info'
op|'='
name|'network_model'
op|'.'
name|'NetworkInfoAsyncWrapper'
op|'('
nl|'\n'
name|'fake_network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'block_device_info'
op|'='
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_prep_block_device'
op|'('
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
newline|'\n'
nl|'\n'
comment|"# override tracker with a version that doesn't need the database:"
nl|'\n'
name|'fake_rt'
op|'='
name|'fake_resource_tracker'
op|'.'
name|'FakeResourceTracker'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
name|'self'
op|'.'
name|'node'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_resource_tracker_dict'
op|'['
name|'self'
op|'.'
name|'node'
op|']'
op|'='
name|'fake_rt'
newline|'\n'
nl|'\n'
DECL|member|_do_build_instance_update
dedent|''
name|'def'
name|'_do_build_instance_update'
op|'('
name|'self'
op|','
name|'reschedule_update'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'.'
name|'save'
op|'('
nl|'\n'
name|'expected_task_state'
op|'='
op|'('
name|'task_states'
op|'.'
name|'SCHEDULING'
op|','
name|'None'
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'if'
name|'reschedule_update'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'instance'
op|'.'
name|'save'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_build_and_run_instance_update
dedent|''
dedent|''
name|'def'
name|'_build_and_run_instance_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_build_resources_instance_update'
op|'('
name|'stub'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'.'
name|'save'
op|'('
name|'expected_task_state'
op|'='
nl|'\n'
name|'task_states'
op|'.'
name|'BLOCK_DEVICE_MAPPING'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_build_resources_instance_update
dedent|''
name|'def'
name|'_build_resources_instance_update'
op|'('
name|'self'
op|','
name|'stub'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'stub'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
string|"'save'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'instance'
op|'.'
name|'save'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_notify_about_instance_usage
dedent|''
name|'def'
name|'_notify_about_instance_usage'
op|'('
name|'self'
op|','
name|'event'
op|','
name|'stub'
op|'='
name|'True'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'stub'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_notify_about_instance_usage'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_notify_about_instance_usage'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'event'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_instance_action_events
dedent|''
name|'def'
name|'_instance_action_events'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'objects'
op|'.'
name|'InstanceActionEvent'
op|','
string|"'event_start'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'objects'
op|'.'
name|'InstanceActionEvent'
op|','
nl|'\n'
string|"'event_finish_with_failure'"
op|')'
newline|'\n'
name|'objects'
op|'.'
name|'InstanceActionEvent'
op|'.'
name|'event_start'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'want_result'
op|'='
name|'False'
op|')'
newline|'\n'
name|'objects'
op|'.'
name|'InstanceActionEvent'
op|'.'
name|'event_finish_with_failure'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'exc_val'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'exc_tb'
op|'='
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'want_result'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_and_run_instance_called_with_proper_args
dedent|''
name|'def'
name|'test_build_and_run_instance_called_with_proper_args'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_and_run_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_build_instance_update'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'limits'
op|','
nl|'\n'
name|'self'
op|'.'
name|'filter_properties'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_instance_action_events'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'request_spec'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'filter_properties'
op|'='
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'admin_password'
op|'='
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'node'
op|'='
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'limits'
op|'='
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_abort_exception
dedent|''
name|'def'
name|'test_build_abort_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_and_run_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_cleanup_allocated_networks'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_cleanup_volumes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_set_instance_error_state'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_task_api'
op|','
nl|'\n'
string|"'build_instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_build_instance_update'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'limits'
op|','
nl|'\n'
name|'self'
op|'.'
name|'filter_properties'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'BuildAbortException'
op|'('
name|'reason'
op|'='
string|"''"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_cleanup_allocated_networks'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_cleanup_volumes'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'raise_exc'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_set_instance_error_state'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_instance_action_events'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'request_spec'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'filter_properties'
op|'='
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'admin_password'
op|'='
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'node'
op|'='
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'limits'
op|'='
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rescheduled_exception
dedent|''
name|'def'
name|'test_rescheduled_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_and_run_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_set_instance_error_state'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_task_api'
op|','
nl|'\n'
string|"'build_instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_build_instance_update'
op|'('
name|'reschedule_update'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'limits'
op|','
nl|'\n'
name|'self'
op|'.'
name|'filter_properties'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'RescheduledException'
op|'('
name|'reason'
op|'='
string|"''"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_task_api'
op|'.'
name|'build_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'['
name|'self'
op|'.'
name|'instance'
op|']'
op|','
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'self'
op|'.'
name|'admin_pass'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'self'
op|'.'
name|'security_groups'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_instance_action_events'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'request_spec'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'filter_properties'
op|'='
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'admin_password'
op|'='
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'node'
op|'='
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'limits'
op|'='
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rescheduled_exception_without_retry
dedent|''
name|'def'
name|'test_rescheduled_exception_without_retry'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_and_run_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_set_instance_error_state'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_cleanup_allocated_networks'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_cleanup_volumes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_build_instance_update'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'limits'
op|','
nl|'\n'
op|'{'
op|'}'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'RescheduledException'
op|'('
name|'reason'
op|'='
string|"''"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_cleanup_allocated_networks'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_set_instance_error_state'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_instance_action_events'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'request_spec'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'filter_properties'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'admin_password'
op|'='
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'node'
op|'='
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'limits'
op|'='
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rescheduled_exception_do_not_deallocate_network
dedent|''
name|'def'
name|'test_rescheduled_exception_do_not_deallocate_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_and_run_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_cleanup_allocated_networks'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_task_api'
op|','
nl|'\n'
string|"'build_instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_build_instance_update'
op|'('
name|'reschedule_update'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'limits'
op|','
nl|'\n'
name|'self'
op|'.'
name|'filter_properties'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'RescheduledException'
op|'('
name|'reason'
op|'='
string|"''"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_task_api'
op|'.'
name|'build_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'['
name|'self'
op|'.'
name|'instance'
op|']'
op|','
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'self'
op|'.'
name|'admin_pass'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'self'
op|'.'
name|'security_groups'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_instance_action_events'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'request_spec'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'filter_properties'
op|'='
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'admin_password'
op|'='
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'node'
op|'='
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'limits'
op|'='
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rescheduled_exception_deallocate_network_if_dhcp
dedent|''
name|'def'
name|'test_rescheduled_exception_deallocate_network_if_dhcp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_and_run_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'dhcp_options_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_cleanup_allocated_networks'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_task_api'
op|','
nl|'\n'
string|"'build_instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_build_instance_update'
op|'('
name|'reschedule_update'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'limits'
op|','
nl|'\n'
name|'self'
op|'.'
name|'filter_properties'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'RescheduledException'
op|'('
name|'reason'
op|'='
string|"''"
op|','
nl|'\n'
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'dhcp_options_for_instance'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
op|'{'
string|"'fake'"
op|':'
string|"'options'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_cleanup_allocated_networks'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_task_api'
op|'.'
name|'build_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'['
name|'self'
op|'.'
name|'instance'
op|']'
op|','
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'self'
op|'.'
name|'admin_pass'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'self'
op|'.'
name|'security_groups'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_instance_action_events'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'request_spec'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'filter_properties'
op|'='
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'admin_password'
op|'='
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'node'
op|'='
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'limits'
op|'='
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_build_and_run_exceptions
dedent|''
name|'def'
name|'_test_build_and_run_exceptions'
op|'('
name|'self'
op|','
name|'exc'
op|','
name|'set_error'
op|'='
name|'False'
op|','
nl|'\n'
name|'cleanup_volumes'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_and_run_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_cleanup_allocated_networks'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_cleanup_volumes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_task_api'
op|','
nl|'\n'
string|"'build_instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_build_instance_update'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'limits'
op|','
nl|'\n'
name|'self'
op|'.'
name|'filter_properties'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exc'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_cleanup_allocated_networks'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|')'
newline|'\n'
name|'if'
name|'cleanup_volumes'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_cleanup_volumes'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'raise_exc'
op|'='
name|'False'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'set_error'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_set_instance_error_state'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_set_instance_error_state'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_instance_action_events'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'request_spec'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'filter_properties'
op|'='
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'admin_password'
op|'='
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'node'
op|'='
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'limits'
op|'='
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_and_run_notfound_exception
dedent|''
name|'def'
name|'test_build_and_run_notfound_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_build_and_run_exceptions'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
nl|'\n'
name|'instance_id'
op|'='
string|"''"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_and_run_unexpecteddeleting_exception
dedent|''
name|'def'
name|'test_build_and_run_unexpecteddeleting_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_build_and_run_exceptions'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'UnexpectedDeletingTaskStateError'
op|'('
name|'expected'
op|'='
string|"''"
op|','
nl|'\n'
name|'actual'
op|'='
string|"''"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_and_run_buildabort_exception
dedent|''
name|'def'
name|'test_build_and_run_buildabort_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_build_and_run_exceptions'
op|'('
name|'exception'
op|'.'
name|'BuildAbortException'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
string|"''"
op|','
name|'reason'
op|'='
string|"''"
op|')'
op|','
name|'set_error'
op|'='
name|'True'
op|','
name|'cleanup_volumes'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_and_run_unhandled_exception
dedent|''
name|'def'
name|'test_build_and_run_unhandled_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_build_and_run_exceptions'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|','
nl|'\n'
name|'set_error'
op|'='
name|'True'
op|','
name|'cleanup_volumes'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_not_found
dedent|''
name|'def'
name|'test_instance_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'exc'
op|'='
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'spawn'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conductor_rpcapi'
op|'.'
name|'ConductorAPI'
op|','
nl|'\n'
string|"'instance_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_networks_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_shutdown_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_networks_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_shutdown_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'try_deallocate_networks'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_notify_about_instance_usage'
op|'('
string|"'create.start'"
op|','
nl|'\n'
name|'extra_usage_info'
op|'='
op|'{'
string|"'image_name'"
op|':'
name|'self'
op|'.'
name|'image'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_build_and_run_instance_update'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
nl|'\n'
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'self'
op|'.'
name|'block_device_info'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exc'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_notify_about_instance_usage'
op|'('
string|"'create.end'"
op|','
nl|'\n'
name|'fault'
op|'='
name|'exc'
op|','
name|'stub'
op|'='
name|'False'
op|')'
newline|'\n'
name|'conductor_rpcapi'
op|'.'
name|'ConductorAPI'
op|'.'
name|'instance_update'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
string|"'conductor'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'self'
op|'.'
name|'admin_pass'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'self'
op|'.'
name|'limits'
op|','
name|'self'
op|'.'
name|'filter_properties'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reschedule_on_exception
dedent|''
name|'def'
name|'test_reschedule_on_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'spawn'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conductor_rpcapi'
op|'.'
name|'ConductorAPI'
op|','
nl|'\n'
string|"'instance_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_networks_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_shutdown_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_networks_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_shutdown_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'try_deallocate_networks'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_notify_about_instance_usage'
op|'('
string|"'create.start'"
op|','
nl|'\n'
name|'extra_usage_info'
op|'='
op|'{'
string|"'image_name'"
op|':'
name|'self'
op|'.'
name|'image'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_build_and_run_instance_update'
op|'('
op|')'
newline|'\n'
name|'exc'
op|'='
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
nl|'\n'
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'self'
op|'.'
name|'block_device_info'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exc'
op|')'
newline|'\n'
name|'conductor_rpcapi'
op|'.'
name|'ConductorAPI'
op|'.'
name|'instance_update'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
string|"'conductor'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_notify_about_instance_usage'
op|'('
string|"'create.error'"
op|','
nl|'\n'
name|'fault'
op|'='
name|'exc'
op|','
name|'stub'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'RescheduledException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'self'
op|'.'
name|'admin_pass'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'self'
op|'.'
name|'limits'
op|','
name|'self'
op|'.'
name|'filter_properties'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_spawn_network_alloc_failure
dedent|''
name|'def'
name|'test_spawn_network_alloc_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Because network allocation is asynchronous, failures may not present'
nl|'\n'
comment|'# themselves until the virt spawn method is called.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_build_and_run_spawn_exceptions'
op|'('
name|'exception'
op|'.'
name|'NoMoreNetworks'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_and_run_flavor_disk_too_small_exception
dedent|''
name|'def'
name|'test_build_and_run_flavor_disk_too_small_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_build_and_run_spawn_exceptions'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'FlavorDiskTooSmall'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_and_run_flavor_memory_too_small_exception
dedent|''
name|'def'
name|'test_build_and_run_flavor_memory_too_small_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_build_and_run_spawn_exceptions'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'FlavorMemoryTooSmall'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_and_run_image_not_active_exception
dedent|''
name|'def'
name|'test_build_and_run_image_not_active_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_build_and_run_spawn_exceptions'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'ImageNotActive'
op|'('
name|'image_id'
op|'='
name|'self'
op|'.'
name|'image'
op|'.'
name|'get'
op|'('
string|"'id'"
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_and_run_image_unacceptable_exception
dedent|''
name|'def'
name|'test_build_and_run_image_unacceptable_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_build_and_run_spawn_exceptions'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'ImageUnacceptable'
op|'('
name|'image_id'
op|'='
name|'self'
op|'.'
name|'image'
op|'.'
name|'get'
op|'('
string|"'id'"
op|')'
op|','
nl|'\n'
name|'reason'
op|'='
string|'""'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_build_and_run_spawn_exceptions
dedent|''
name|'def'
name|'_test_build_and_run_spawn_exceptions'
op|'('
name|'self'
op|','
name|'exc'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'spawn'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exc'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'conductor_rpcapi'
op|'.'
name|'ConductorAPI'
op|','
nl|'\n'
string|"'instance_update'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
string|"'save'"
op|','
nl|'\n'
name|'side_effect'
op|'='
op|'['
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'instance'
op|']'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_build_networks_for_instance'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'network_info'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_notify_about_instance_usage'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_shutdown_instance'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_validate_instance_group_policy'"
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'spawn'
op|','
name|'instance_update'
op|','
name|'save'
op|','
nl|'\n'
name|'_build_networks_for_instance'
op|','
name|'_notify_about_instance_usage'
op|','
nl|'\n'
name|'_shutdown_instance'
op|','
name|'_validate_instance_group_policy'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'BuildAbortException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'self'
op|'.'
name|'admin_pass'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'self'
op|'.'
name|'security_groups'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'self'
op|'.'
name|'limits'
op|','
name|'self'
op|'.'
name|'filter_properties'
op|')'
newline|'\n'
nl|'\n'
name|'_validate_instance_group_policy'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'filter_properties'
op|')'
newline|'\n'
name|'_build_networks_for_instance'
op|'.'
name|'assert_has_calls'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'_notify_about_instance_usage'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
string|"'create.start'"
op|','
nl|'\n'
name|'extra_usage_info'
op|'='
op|'{'
string|"'image_name'"
op|':'
name|'self'
op|'.'
name|'image'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|'}'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
string|"'create.error'"
op|','
nl|'\n'
name|'fault'
op|'='
name|'exc'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'save'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
nl|'\n'
name|'expected_task_state'
op|'='
name|'task_states'
op|'.'
name|'BLOCK_DEVICE_MAPPING'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'spawn'
op|'.'
name|'assert_has_calls'
op|'('
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'self'
op|'.'
name|'network_info'
op|','
nl|'\n'
name|'block_device_info'
op|'='
name|'self'
op|'.'
name|'block_device_info'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'instance_update'
op|'.'
name|'assert_has_calls'
op|'('
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'mock'
op|'.'
name|'ANY'
op|','
string|"'conductor'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'_shutdown_instance'
op|'.'
name|'assert_called_once_with'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'try_deallocate_networks'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.compute.manager.ComputeManager._get_power_state'"
op|')'
newline|'\n'
DECL|member|test_spawn_waits_for_network_and_saves_info_cache
name|'def'
name|'test_spawn_waits_for_network_and_saves_info_cache'
op|'('
name|'self'
op|','
name|'gps'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'driver'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_spawn'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|','
op|'{'
op|'}'
op|','
name|'network_info'
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
name|'network_info'
op|'.'
name|'wait'
op|'.'
name|'assert_called_once_with'
op|'('
name|'do_raise'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'network_info'
op|','
name|'inst'
op|'.'
name|'info_cache'
op|'.'
name|'network_info'
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'save'
op|'.'
name|'assert_called_with'
op|'('
name|'expected_task_state'
op|'='
name|'task_states'
op|'.'
name|'SPAWNING'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reschedule_on_resources_unavailable
dedent|''
name|'def'
name|'test_reschedule_on_resources_unavailable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'reason'
op|'='
string|"'resource unavailable'"
newline|'\n'
name|'exc'
op|'='
name|'exception'
op|'.'
name|'ComputeResourcesUnavailable'
op|'('
name|'reason'
op|'='
name|'reason'
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeResourceTracker
name|'class'
name|'FakeResourceTracker'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|instance_claim
indent|'            '
name|'def'
name|'instance_claim'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'limits'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exc'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_resource_tracker'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_task_api'
op|','
nl|'\n'
string|"'build_instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_resource_tracker'
op|'('
name|'self'
op|'.'
name|'node'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'FakeResourceTracker'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_build_instance_update'
op|'('
name|'reschedule_update'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_notify_about_instance_usage'
op|'('
string|"'create.start'"
op|','
nl|'\n'
DECL|variable|extra_usage_info
name|'extra_usage_info'
op|'='
op|'{'
string|"'image_name'"
op|':'
name|'self'
op|'.'
name|'image'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_notify_about_instance_usage'
op|'('
string|"'create.error'"
op|','
nl|'\n'
name|'fault'
op|'='
name|'exc'
op|','
name|'stub'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'compute_task_api'
op|'.'
name|'build_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'['
name|'self'
op|'.'
name|'instance'
op|']'
op|','
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'self'
op|'.'
name|'admin_pass'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'self'
op|'.'
name|'security_groups'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_instance_action_events'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'request_spec'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'filter_properties'
op|'='
name|'self'
op|'.'
name|'filter_properties'
op|','
nl|'\n'
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'admin_password'
op|'='
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'node'
op|'='
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'limits'
op|'='
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_resources_buildabort_reraise
dedent|''
name|'def'
name|'test_build_resources_buildabort_reraise'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'exc'
op|'='
name|'exception'
op|'.'
name|'BuildAbortException'
op|'('
nl|'\n'
name|'instance_uuid'
op|'='
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'reason'
op|'='
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_resources'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'conductor_rpcapi'
op|'.'
name|'ConductorAPI'
op|','
nl|'\n'
string|"'instance_update'"
op|')'
newline|'\n'
name|'conductor_rpcapi'
op|'.'
name|'ConductorAPI'
op|'.'
name|'instance_update'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
string|"'conductor'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_notify_about_instance_usage'
op|'('
string|"'create.start'"
op|','
nl|'\n'
name|'extra_usage_info'
op|'='
op|'{'
string|"'image_name'"
op|':'
name|'self'
op|'.'
name|'image'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_resources'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
name|'self'
op|'.'
name|'image'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exc'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_notify_about_instance_usage'
op|'('
string|"'create.error'"
op|','
nl|'\n'
name|'fault'
op|'='
name|'exc'
op|','
name|'stub'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'BuildAbortException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
nl|'\n'
name|'self'
op|'.'
name|'admin_pass'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'self'
op|'.'
name|'security_groups'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
nl|'\n'
name|'self'
op|'.'
name|'limits'
op|','
name|'self'
op|'.'
name|'filter_properties'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_resources_reraises_on_failed_bdm_prep
dedent|''
name|'def'
name|'test_build_resources_reraises_on_failed_bdm_prep'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_prep_block_device'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_networks_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_networks_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_build_resources_instance_update'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_prep_block_device'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_resources'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'e'
op|','
name|'exception'
op|'.'
name|'BuildAbortException'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_failed_bdm_prep_from_delete_raises_unexpected
dedent|''
dedent|''
name|'def'
name|'test_failed_bdm_prep_from_delete_raises_unexpected'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_build_networks_for_instance'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'self'
op|'.'
name|'network_info'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
string|"'save'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'UnexpectedDeletingTaskStateError'
op|'('
nl|'\n'
name|'actual'
op|'='
name|'task_states'
op|'.'
name|'DELETING'
op|','
name|'expected'
op|'='
string|"'None'"
op|')'
op|')'
op|','
nl|'\n'
op|')'
name|'as'
op|'('
name|'_build_networks_for_instance'
op|','
name|'save'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_resources'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'e'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'UnexpectedDeletingTaskStateError'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'_build_networks_for_instance'
op|'.'
name|'assert_has_calls'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'save'
op|'.'
name|'assert_has_calls'
op|'('
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_resources_aborts_on_failed_network_alloc
dedent|''
dedent|''
name|'def'
name|'test_build_resources_aborts_on_failed_network_alloc'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_networks_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_networks_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_resources'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
name|'self'
op|'.'
name|'image'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'e'
op|','
name|'exception'
op|'.'
name|'BuildAbortException'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_failed_network_alloc_from_delete_raises_unexpected
dedent|''
dedent|''
name|'def'
name|'test_failed_network_alloc_from_delete_raises_unexpected'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_build_networks_for_instance'"
op|')'
name|'as'
name|'_build_networks'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'exc'
op|'='
name|'exception'
op|'.'
name|'UnexpectedDeletingTaskStateError'
newline|'\n'
name|'_build_networks'
op|'.'
name|'side_effect'
op|'='
name|'exc'
op|'('
name|'actual'
op|'='
name|'task_states'
op|'.'
name|'DELETING'
op|','
nl|'\n'
name|'expected'
op|'='
string|"'None'"
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_resources'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'e'
op|','
name|'exc'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'_build_networks'
op|'.'
name|'assert_has_calls'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_resources_with_network_info_obj_on_spawn_failure
dedent|''
dedent|''
name|'def'
name|'test_build_resources_with_network_info_obj_on_spawn_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_networks_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_shutdown_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_networks_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_shutdown_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'try_deallocate_networks'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_build_resources_instance_update'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'test_exception'
op|'='
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_spawn
name|'def'
name|'fake_spawn'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'test_exception'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_resources'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'fake_spawn'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'test_exception'
op|','
name|'e'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_resources_cleans_up_and_reraises_on_spawn_failure
dedent|''
dedent|''
name|'def'
name|'test_build_resources_cleans_up_and_reraises_on_spawn_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_networks_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_shutdown_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_networks_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_shutdown_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'try_deallocate_networks'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_build_resources_instance_update'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'test_exception'
op|'='
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_spawn
name|'def'
name|'fake_spawn'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'test_exception'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_resources'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'fake_spawn'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'test_exception'
op|','
name|'e'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_resources_aborts_on_cleanup_failure
dedent|''
dedent|''
name|'def'
name|'test_build_resources_aborts_on_cleanup_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_build_networks_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_shutdown_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_networks_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_shutdown_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|','
nl|'\n'
name|'try_deallocate_networks'
op|'='
name|'False'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_build_resources_instance_update'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_spawn
name|'def'
name|'fake_spawn'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_resources'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'block_device_mapping'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'fake_spawn'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'e'
op|','
name|'exception'
op|'.'
name|'BuildAbortException'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_networks_if_not_allocated
dedent|''
dedent|''
name|'def'
name|'test_build_networks_if_not_allocated'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'system_metadata'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_instance_nw_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_allocate_network'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_allocate_network'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'None'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_networks_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_networks_if_allocated_false
dedent|''
name|'def'
name|'test_build_networks_if_allocated_false'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'dict'
op|'('
name|'network_allocated'
op|'='
string|"'False'"
op|')'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_instance_nw_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_allocate_network'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_allocate_network'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'None'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_networks_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_return_networks_if_found
dedent|''
name|'def'
name|'test_return_networks_if_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'system_metadata'
op|'='
name|'dict'
op|'('
name|'network_allocated'
op|'='
string|"'True'"
op|')'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_network_info
name|'def'
name|'fake_network_info'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'network_model'
op|'.'
name|'NetworkInfo'
op|'('
op|'['
op|'{'
string|"'address'"
op|':'
string|"'123.123.123.123'"
op|'}'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_instance_nw_info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_allocate_network'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'network_model'
op|'.'
name|'NetworkInfoAsyncWrapper'
op|'('
name|'fake_network_info'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_networks_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cleanup_allocated_networks_instance_not_found
dedent|''
name|'def'
name|'test_cleanup_allocated_networks_instance_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_deallocate_network'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
string|"'save'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
string|"''"
op|')'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'_deallocate_network'
op|','
name|'save'
op|')'
op|':'
newline|'\n'
comment|"# Testing that this doesn't raise an exeption"
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_cleanup_allocated_networks'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|','
name|'self'
op|'.'
name|'requested_networks'
op|')'
newline|'\n'
name|'save'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'False'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|'.'
name|'system_metadata'
op|'['
string|"'network_allocated'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'conductor_rpcapi'
op|'.'
name|'ConductorAPI'
op|','
string|"'instance_update'"
op|')'
newline|'\n'
DECL|member|test_launched_at_in_create_end_notification
name|'def'
name|'test_launched_at_in_create_end_notification'
op|'('
name|'self'
op|','
nl|'\n'
name|'mock_instance_update'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_notify
indent|'        '
name|'def'
name|'fake_notify'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'args'
op|'['
number|'2'
op|']'
op|'=='
string|"'create.end'"
op|':'
newline|'\n'
comment|'# Check that launched_at is set on the instance'
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'args'
op|'['
number|'1'
op|']'
op|'.'
name|'launched_at'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
string|"'spawn'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_build_networks_for_instance'"
op|','
name|'return_value'
op|'='
op|'['
op|']'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
string|"'save'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_notify_about_instance_usage'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'fake_notify'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'mock_spawn'
op|','
name|'mock_networks'
op|','
name|'mock_save'
op|','
name|'mock_notify'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'.'
name|'_build_and_run_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image'
op|','
name|'self'
op|'.'
name|'injected_files'
op|','
name|'self'
op|'.'
name|'admin_pass'
op|','
nl|'\n'
name|'self'
op|'.'
name|'requested_networks'
op|','
name|'self'
op|'.'
name|'security_groups'
op|','
nl|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|','
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'limits'
op|','
nl|'\n'
name|'self'
op|'.'
name|'filter_properties'
op|')'
newline|'\n'
name|'expected_call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
string|"'create.end'"
op|','
name|'extra_usage_info'
op|'='
op|'{'
string|"'message'"
op|':'
string|"u'Success'"
op|'}'
op|','
nl|'\n'
name|'network_info'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
name|'create_end_call'
op|'='
name|'mock_notify'
op|'.'
name|'call_args_list'
op|'['
nl|'\n'
name|'mock_notify'
op|'.'
name|'call_count'
op|'-'
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_call'
op|','
name|'create_end_call'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ComputeManagerMigrationTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'ComputeManagerMigrationTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ComputeManagerMigrationTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'CONF'
op|'.'
name|'compute_manager'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'image'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|','
string|"'info_cache'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'migration'
op|'='
name|'objects'
op|'.'
name|'Migration'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'migration'
op|'.'
name|'status'
op|'='
string|"'migrating'"
newline|'\n'
nl|'\n'
DECL|member|test_finish_resize_failure
dedent|''
name|'def'
name|'test_finish_resize_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'elevated_context'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_finish_resize'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'ResizeError'
op|'('
name|'reason'
op|'='
string|"''"
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'InstanceActionEvent'
op|','
string|"'event_start'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'InstanceActionEvent'
op|','
nl|'\n'
string|"'event_finish_with_failure'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'db'
op|','
string|"'instance_fault_create'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_instance_update'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'migration'
op|','
string|"'save'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'elevated'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'elevated_context'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'meth'
op|','
name|'event_start'
op|','
name|'event_finish'
op|','
name|'fault_create'
op|','
name|'instance_update'
op|','
nl|'\n'
name|'migration_save'
op|','
name|'context_elevated'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fault_create'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
name|'test_instance_fault'
op|'.'
name|'fake_faults'
op|'['
string|"'fake-uuid'"
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'ResizeError'
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'finish_resize'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'disk_info'
op|'='
op|'['
op|']'
op|','
name|'image'
op|'='
name|'self'
op|'.'
name|'image'
op|','
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'instance'
op|','
name|'reservations'
op|'='
op|'['
op|']'
op|','
nl|'\n'
name|'migration'
op|'='
name|'self'
op|'.'
name|'migration'
nl|'\n'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"error"'
op|','
name|'self'
op|'.'
name|'migration'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'migration_save'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'elevated_context'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize_instance_failure
dedent|''
dedent|''
name|'def'
name|'test_resize_instance_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'elevated_context'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'migration'
op|'.'
name|'dest_host'
op|'='
name|'None'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'driver'
op|','
nl|'\n'
string|"'migrate_disk_and_power_off'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'exception'
op|'.'
name|'ResizeError'
op|'('
name|'reason'
op|'='
string|"''"
op|')'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'InstanceActionEvent'
op|','
string|"'event_start'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'InstanceActionEvent'
op|','
nl|'\n'
string|"'event_finish_with_failure'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'db'
op|','
string|"'instance_fault_create'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_instance_update'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'migration'
op|','
string|"'save'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'elevated'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'elevated_context'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_get_instance_nw_info'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'None'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
string|"'save'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
string|"'_notify_about_instance_usage'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'compute'
op|','
nl|'\n'
string|"'_get_instance_block_device_info'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'None'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|','
nl|'\n'
string|"'get_by_instance_uuid'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'None'
op|')'
nl|'\n'
op|')'
name|'as'
op|'('
name|'meth'
op|','
name|'event_start'
op|','
name|'event_finish'
op|','
name|'fault_create'
op|','
name|'instance_update'
op|','
nl|'\n'
name|'migration_save'
op|','
name|'context_elevated'
op|','
name|'nw_info'
op|','
name|'save_inst'
op|','
name|'notify'
op|','
nl|'\n'
name|'vol_block_info'
op|','
name|'bdm'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fault_create'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
name|'test_instance_fault'
op|'.'
name|'fake_faults'
op|'['
string|"'fake-uuid'"
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'ResizeError'
op|','
name|'self'
op|'.'
name|'compute'
op|'.'
name|'resize_instance'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|'='
name|'self'
op|'.'
name|'instance'
op|','
name|'image'
op|'='
name|'self'
op|'.'
name|'image'
op|','
nl|'\n'
name|'reservations'
op|'='
op|'['
op|']'
op|','
name|'migration'
op|'='
name|'self'
op|'.'
name|'migration'
op|','
name|'instance_type'
op|'='
string|"'type'"
nl|'\n'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"error"'
op|','
name|'self'
op|'.'
name|'migration'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'migration_save'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'elevated_context'
op|')'
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
