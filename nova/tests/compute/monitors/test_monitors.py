begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2013 Intel Corporation'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Tests for resource monitors."""'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'monitors'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeResourceMonitor
name|'class'
name|'FakeResourceMonitor'
op|'('
name|'monitors'
op|'.'
name|'ResourceMonitorBase'
op|')'
op|':'
newline|'\n'
DECL|member|get_metric_names
indent|'    '
name|'def'
name|'get_metric_names'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
string|'"foo.metric1"'
op|','
string|'"foo.metric2"'
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_metrics
dedent|''
name|'def'
name|'get_metrics'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
op|'['
op|']'
newline|'\n'
name|'data'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'_populate'
op|'('
string|"'foo.metric1'"
op|','
string|"'1000'"
op|')'
op|')'
newline|'\n'
name|'data'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'_populate'
op|'('
string|"'foo.metric2'"
op|','
string|"'99.999'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'data'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeMonitorClass1
dedent|''
dedent|''
name|'class'
name|'FakeMonitorClass1'
op|'('
name|'monitors'
op|'.'
name|'ResourceMonitorBase'
op|')'
op|':'
newline|'\n'
DECL|member|get_metrics
indent|'    '
name|'def'
name|'get_metrics'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
op|'['
op|'{'
string|"'timestamp'"
op|':'
number|'1232'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'key1'"
op|','
nl|'\n'
string|"'value'"
op|':'
number|'2600'
op|','
nl|'\n'
string|"'source'"
op|':'
string|"'libvirt'"
op|'}'
op|']'
newline|'\n'
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|get_metric_names
dedent|''
name|'def'
name|'get_metric_names'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
string|"'key1'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeMonitorClass2
dedent|''
dedent|''
name|'class'
name|'FakeMonitorClass2'
op|'('
name|'monitors'
op|'.'
name|'ResourceMonitorBase'
op|')'
op|':'
newline|'\n'
DECL|member|get_metrics
indent|'    '
name|'def'
name|'get_metrics'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
op|'['
op|'{'
string|"'timestamp'"
op|':'
number|'123'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'key2'"
op|','
nl|'\n'
string|"'value'"
op|':'
number|'1600'
op|','
nl|'\n'
string|"'source'"
op|':'
string|"'libvirt'"
op|'}'
op|']'
newline|'\n'
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|get_metric_names
dedent|''
name|'def'
name|'get_metric_names'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
string|"'key2'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeMonitorClass3
dedent|''
dedent|''
name|'class'
name|'FakeMonitorClass3'
op|'('
name|'monitors'
op|'.'
name|'ResourceMonitorBase'
op|')'
op|':'
newline|'\n'
DECL|member|get_metrics
indent|'    '
name|'def'
name|'get_metrics'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
op|'['
op|'{'
string|"'timestamp'"
op|':'
number|'1234'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'key1'"
op|','
nl|'\n'
string|"'value'"
op|':'
number|'1200'
op|','
nl|'\n'
string|"'source'"
op|':'
string|"'libvirt'"
op|'}'
op|']'
newline|'\n'
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|get_metric_names
dedent|''
name|'def'
name|'get_metric_names'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
string|"'key1'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeMonitorClass4
dedent|''
dedent|''
name|'class'
name|'FakeMonitorClass4'
op|'('
name|'monitors'
op|'.'
name|'ResourceMonitorBase'
op|')'
op|':'
newline|'\n'
DECL|member|get_metrics
indent|'    '
name|'def'
name|'get_metrics'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
op|'['
op|'{'
string|"'timestamp'"
op|':'
number|'123'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'key4'"
op|','
nl|'\n'
string|"'value'"
op|':'
number|'1600'
op|','
nl|'\n'
string|"'source'"
op|':'
string|"'libvirt'"
op|'}'
op|']'
newline|'\n'
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_metric_names
dedent|''
name|'def'
name|'get_metric_names'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ResourceMonitorBaseTestCase
dedent|''
dedent|''
name|'class'
name|'ResourceMonitorBaseTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ResourceMonitorBaseTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'monitor'
op|'='
name|'FakeResourceMonitor'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_metric_names
dedent|''
name|'def'
name|'test_get_metric_names'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'names'
op|'='
name|'self'
op|'.'
name|'monitor'
op|'.'
name|'get_metric_names'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'names'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|'"foo.metric1"'
op|','
name|'names'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|'"foo.metric2"'
op|','
name|'names'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_metrics
dedent|''
name|'def'
name|'test_get_metrics'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'metrics_raw'
op|'='
name|'self'
op|'.'
name|'monitor'
op|'.'
name|'get_metrics'
op|'('
op|')'
newline|'\n'
name|'names'
op|'='
name|'self'
op|'.'
name|'monitor'
op|'.'
name|'get_metric_names'
op|'('
op|')'
newline|'\n'
name|'metrics'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'metric'
name|'in'
name|'metrics_raw'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'metric'
op|'['
string|"'name'"
op|']'
op|','
name|'names'
op|')'
newline|'\n'
name|'metrics'
op|'['
name|'metric'
op|'['
string|"'name'"
op|']'
op|']'
op|'='
name|'metric'
op|'['
string|"'value'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'metrics'
op|'['
string|'"foo.metric1"'
op|']'
op|','
string|"'1000'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'metrics'
op|'['
string|'"foo.metric2"'
op|']'
op|','
string|"'99.999'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ResourceMonitorsTestCase
dedent|''
dedent|''
name|'class'
name|'ResourceMonitorsTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for monitors."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ResourceMonitorsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'monitor_handler'
op|'='
name|'monitors'
op|'.'
name|'ResourceMonitorHandler'
op|'('
op|')'
newline|'\n'
name|'fake_monitors'
op|'='
op|'['
nl|'\n'
string|"'nova.tests.compute.monitors.test_monitors.FakeMonitorClass1'"
op|','
nl|'\n'
string|"'nova.tests.compute.monitors.test_monitors.FakeMonitorClass2'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'compute_available_monitors'
op|'='
name|'fake_monitors'
op|')'
newline|'\n'
nl|'\n'
name|'classes'
op|'='
name|'self'
op|'.'
name|'monitor_handler'
op|'.'
name|'get_matching_classes'
op|'('
nl|'\n'
op|'['
string|"'nova.compute.monitors.all_monitors'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'class_map'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'cls'
name|'in'
name|'classes'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'class_map'
op|'['
name|'cls'
op|'.'
name|'__name__'
op|']'
op|'='
name|'cls'
newline|'\n'
nl|'\n'
DECL|member|test_choose_monitors_not_found
dedent|''
dedent|''
name|'def'
name|'test_choose_monitors_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'compute_monitors'
op|'='
op|'['
string|"'FakeMonitorClass5'"
op|','
string|"'FakeMonitorClass4'"
op|']'
op|')'
newline|'\n'
name|'monitor_classes'
op|'='
name|'self'
op|'.'
name|'monitor_handler'
op|'.'
name|'choose_monitors'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'monitor_classes'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_choose_monitors_bad
dedent|''
name|'def'
name|'test_choose_monitors_bad'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'compute_monitors'
op|'='
op|'['
string|"'FakeMonitorClass1'"
op|','
string|"'FakePluginClass3'"
op|']'
op|')'
newline|'\n'
name|'monitor_classes'
op|'='
name|'self'
op|'.'
name|'monitor_handler'
op|'.'
name|'choose_monitors'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'monitor_classes'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_choose_monitors
dedent|''
name|'def'
name|'test_choose_monitors'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'compute_monitors'
op|'='
op|'['
string|"'FakeMonitorClass1'"
op|','
string|"'FakeMonitorClass2'"
op|']'
op|')'
newline|'\n'
name|'monitor_classes'
op|'='
name|'self'
op|'.'
name|'monitor_handler'
op|'.'
name|'choose_monitors'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'monitor_classes'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_choose_monitors_none
dedent|''
name|'def'
name|'test_choose_monitors_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'compute_monitors'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
name|'monitor_classes'
op|'='
name|'self'
op|'.'
name|'monitor_handler'
op|'.'
name|'choose_monitors'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'monitor_classes'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_all_monitors
dedent|''
name|'def'
name|'test_all_monitors'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Double check at least a couple of known monitors exist'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'ComputeDriverCPUMonitor'"
op|','
name|'self'
op|'.'
name|'class_map'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
