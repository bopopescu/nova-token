begin_unit
comment|'#    Copyright (C) 2014 Red Hat, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'arch'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ArchTest
name|'class'
name|'ArchTest'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'os'
op|','
string|'"uname"'
op|')'
newline|'\n'
DECL|member|test_host
name|'def'
name|'test_host'
op|'('
name|'self'
op|','
name|'mock_uname'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'os'
op|'.'
name|'uname'
op|'.'
name|'return_value'
op|'='
op|'('
nl|'\n'
string|"'Linux'"
op|','
nl|'\n'
string|"'localhost.localdomain'"
op|','
nl|'\n'
string|"'3.14.8-200.fc20.x86_64'"
op|','
nl|'\n'
string|"'#1 SMP Mon Jun 16 21:57:53 UTC 2014'"
op|','
nl|'\n'
string|"'i686'"
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'arch'
op|'.'
name|'I686'
op|','
name|'arch'
op|'.'
name|'from_host'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_valid_string
dedent|''
name|'def'
name|'test_valid_string'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'arch'
op|'.'
name|'is_valid'
op|'('
string|'"x86_64"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_valid_constant
dedent|''
name|'def'
name|'test_valid_constant'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'arch'
op|'.'
name|'is_valid'
op|'('
name|'arch'
op|'.'
name|'X86_64'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_valid_bogus
dedent|''
name|'def'
name|'test_valid_bogus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'arch'
op|'.'
name|'is_valid'
op|'('
string|'"x86_64wibble"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_canonicalize_i386
dedent|''
name|'def'
name|'test_canonicalize_i386'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'arch'
op|'.'
name|'I686'
op|','
name|'arch'
op|'.'
name|'canonicalize'
op|'('
string|'"i386"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_canonicalize_case
dedent|''
name|'def'
name|'test_canonicalize_case'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'arch'
op|'.'
name|'X86_64'
op|','
name|'arch'
op|'.'
name|'canonicalize'
op|'('
string|'"X86_64"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_canonicalize_compat_xen1
dedent|''
name|'def'
name|'test_canonicalize_compat_xen1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'arch'
op|'.'
name|'I686'
op|','
name|'arch'
op|'.'
name|'canonicalize'
op|'('
string|'"x86_32"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_canonicalize_compat_xen2
dedent|''
name|'def'
name|'test_canonicalize_compat_xen2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'arch'
op|'.'
name|'I686'
op|','
name|'arch'
op|'.'
name|'canonicalize'
op|'('
string|'"x86_32p"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_canonicalize_bogus
dedent|''
name|'def'
name|'test_canonicalize_bogus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidArchitectureName'
op|','
nl|'\n'
name|'arch'
op|'.'
name|'canonicalize'
op|','
nl|'\n'
string|'"x86_64wibble"'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
