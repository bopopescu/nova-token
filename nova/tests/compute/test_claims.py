begin_unit
comment|'# Copyright (c) 2012 OpenStack Foundation'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Tests for resource tracker claims."""'
newline|'\n'
nl|'\n'
name|'import'
name|'re'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'import'
name|'six'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'claims'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'pci'
name|'import'
name|'pci_manager'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'pci'
name|'import'
name|'pci_fakes'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeResourceHandler
name|'class'
name|'FakeResourceHandler'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|variable|test_called
indent|'    '
name|'test_called'
op|'='
name|'False'
newline|'\n'
DECL|variable|usage_is_instance
name|'usage_is_instance'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|test_resources
name|'def'
name|'test_resources'
op|'('
name|'self'
op|','
name|'usage'
op|','
name|'limits'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'test_called'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'usage_is_itype'
op|'='
name|'usage'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
name|'is'
string|"'fakeitype'"
newline|'\n'
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DummyTracker
dedent|''
dedent|''
name|'class'
name|'DummyTracker'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|variable|icalled
indent|'    '
name|'icalled'
op|'='
name|'False'
newline|'\n'
DECL|variable|rcalled
name|'rcalled'
op|'='
name|'False'
newline|'\n'
DECL|variable|pci_tracker
name|'pci_tracker'
op|'='
name|'pci_manager'
op|'.'
name|'PciDevTracker'
op|'('
op|')'
newline|'\n'
DECL|variable|ext_resources_handler
name|'ext_resources_handler'
op|'='
name|'FakeResourceHandler'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|abort_instance_claim
name|'def'
name|'abort_instance_claim'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'icalled'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|drop_resize_claim
dedent|''
name|'def'
name|'drop_resize_claim'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'rcalled'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|new_pci_tracker
dedent|''
name|'def'
name|'new_pci_tracker'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'pci_tracker'
op|'='
name|'pci_manager'
op|'.'
name|'PciDevTracker'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.InstancePCIRequests.get_by_instance_uuid'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'('
name|'requests'
op|'='
op|'['
op|']'
op|')'
op|')'
newline|'\n'
DECL|class|ClaimTestCase
name|'class'
name|'ClaimTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ClaimTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'resources'
op|'='
name|'self'
op|'.'
name|'_fake_resources'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'='
name|'DummyTracker'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_claim
dedent|''
name|'def'
name|'_claim'
op|'('
name|'self'
op|','
name|'limits'
op|'='
name|'None'
op|','
name|'overhead'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'if'
name|'overhead'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'overhead'
op|'='
op|'{'
string|"'memory_mb'"
op|':'
number|'0'
op|'}'
newline|'\n'
dedent|''
name|'return'
name|'claims'
op|'.'
name|'Claim'
op|'('
string|"'context'"
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'tracker'
op|','
name|'self'
op|'.'
name|'resources'
op|','
nl|'\n'
name|'overhead'
op|'='
name|'overhead'
op|','
name|'limits'
op|'='
name|'limits'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_fake_instance
dedent|''
name|'def'
name|'_fake_instance'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
op|'{'
nl|'\n'
string|"'uuid'"
op|':'
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid1'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'1024'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
number|'5'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
op|'{'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'instance'
op|'.'
name|'update'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'return'
name|'instance'
newline|'\n'
nl|'\n'
DECL|member|_fake_instance_type
dedent|''
name|'def'
name|'_fake_instance_type'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_type'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'fakeitype'"
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
number|'2'
nl|'\n'
op|'}'
newline|'\n'
name|'instance_type'
op|'.'
name|'update'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'return'
name|'instance_type'
newline|'\n'
nl|'\n'
DECL|member|_fake_resources
dedent|''
name|'def'
name|'_fake_resources'
op|'('
name|'self'
op|','
name|'values'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resources'
op|'='
op|'{'
nl|'\n'
string|"'memory_mb'"
op|':'
number|'2048'
op|','
nl|'\n'
string|"'memory_mb_used'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'free_ram_mb'"
op|':'
number|'2048'
op|','
nl|'\n'
string|"'local_gb'"
op|':'
number|'20'
op|','
nl|'\n'
string|"'local_gb_used'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'free_disk_gb'"
op|':'
number|'20'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'vcpus_used'"
op|':'
number|'0'
nl|'\n'
op|'}'
newline|'\n'
name|'if'
name|'values'
op|':'
newline|'\n'
indent|'            '
name|'resources'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'resources'
newline|'\n'
nl|'\n'
comment|'# TODO(lxsli): Remove once Py2.6 is deprecated'
nl|'\n'
DECL|member|assertRaisesRegexp
dedent|''
name|'def'
name|'assertRaisesRegexp'
op|'('
name|'self'
op|','
name|'re_obj'
op|','
name|'e'
op|','
name|'fn'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'fn'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Expected exception not raised"'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'e'
name|'as'
name|'ee'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'re'
op|'.'
name|'search'
op|'('
name|'re_obj'
op|','
name|'six'
op|'.'
name|'text_type'
op|'('
name|'ee'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_memory_unlimited
dedent|''
dedent|''
name|'def'
name|'test_memory_unlimited'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_claim'
op|'('
name|'memory_mb'
op|'='
number|'99999999'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disk_unlimited_root
dedent|''
name|'def'
name|'test_disk_unlimited_root'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_claim'
op|'('
name|'root_gb'
op|'='
number|'999999'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disk_unlimited_ephemeral
dedent|''
name|'def'
name|'test_disk_unlimited_ephemeral'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_claim'
op|'('
name|'ephemeral_gb'
op|'='
number|'999999'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_memory_with_overhead
dedent|''
name|'def'
name|'test_memory_with_overhead'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'overhead'
op|'='
op|'{'
string|"'memory_mb'"
op|':'
number|'8'
op|'}'
newline|'\n'
name|'limits'
op|'='
op|'{'
string|"'memory_mb'"
op|':'
number|'2048'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_claim'
op|'('
name|'memory_mb'
op|'='
number|'2040'
op|','
name|'limits'
op|'='
name|'limits'
op|','
nl|'\n'
name|'overhead'
op|'='
name|'overhead'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_memory_with_overhead_insufficient
dedent|''
name|'def'
name|'test_memory_with_overhead_insufficient'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'overhead'
op|'='
op|'{'
string|"'memory_mb'"
op|':'
number|'9'
op|'}'
newline|'\n'
name|'limits'
op|'='
op|'{'
string|"'memory_mb'"
op|':'
number|'2048'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ComputeResourcesUnavailable'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_claim'
op|','
name|'limits'
op|'='
name|'limits'
op|','
name|'overhead'
op|'='
name|'overhead'
op|','
nl|'\n'
name|'memory_mb'
op|'='
number|'2040'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_memory_oversubscription
dedent|''
name|'def'
name|'test_memory_oversubscription'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_claim'
op|'('
name|'memory_mb'
op|'='
number|'4096'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_memory_insufficient
dedent|''
name|'def'
name|'test_memory_insufficient'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'limits'
op|'='
op|'{'
string|"'memory_mb'"
op|':'
number|'8192'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ComputeResourcesUnavailable'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_claim'
op|','
name|'limits'
op|'='
name|'limits'
op|','
name|'memory_mb'
op|'='
number|'16384'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disk_oversubscription
dedent|''
name|'def'
name|'test_disk_oversubscription'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'limits'
op|'='
op|'{'
string|"'disk_gb'"
op|':'
number|'60'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_claim'
op|'('
name|'root_gb'
op|'='
number|'10'
op|','
name|'ephemeral_gb'
op|'='
number|'40'
op|','
nl|'\n'
name|'limits'
op|'='
name|'limits'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disk_insufficient
dedent|''
name|'def'
name|'test_disk_insufficient'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'limits'
op|'='
op|'{'
string|"'disk_gb'"
op|':'
number|'45'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaisesRegexp'
op|'('
name|'re'
op|'.'
name|'compile'
op|'('
string|'"disk"'
op|','
name|'re'
op|'.'
name|'IGNORECASE'
op|')'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'ComputeResourcesUnavailable'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_claim'
op|','
name|'limits'
op|'='
name|'limits'
op|','
name|'root_gb'
op|'='
number|'10'
op|','
name|'ephemeral_gb'
op|'='
number|'40'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disk_and_memory_insufficient
dedent|''
name|'def'
name|'test_disk_and_memory_insufficient'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'limits'
op|'='
op|'{'
string|"'disk_gb'"
op|':'
number|'45'
op|','
string|"'memory_mb'"
op|':'
number|'8192'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaisesRegexp'
op|'('
name|'re'
op|'.'
name|'compile'
op|'('
string|'"memory.*disk"'
op|','
name|'re'
op|'.'
name|'IGNORECASE'
op|')'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'ComputeResourcesUnavailable'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_claim'
op|','
name|'limits'
op|'='
name|'limits'
op|','
name|'root_gb'
op|'='
number|'10'
op|','
name|'ephemeral_gb'
op|'='
number|'40'
op|','
nl|'\n'
name|'memory_mb'
op|'='
number|'16384'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'pci_fakes'
op|'.'
name|'patch_pci_whitelist'
newline|'\n'
DECL|member|test_pci_pass
name|'def'
name|'test_pci_pass'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dev_dict'
op|'='
op|'{'
nl|'\n'
string|"'compute_node_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'a'"
op|','
nl|'\n'
string|"'product_id'"
op|':'
string|"'p'"
op|','
nl|'\n'
string|"'vendor_id'"
op|':'
string|"'v'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'available'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'new_pci_tracker'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'pci_tracker'
op|'.'
name|'set_hvdevs'
op|'('
op|'['
name|'dev_dict'
op|']'
op|')'
newline|'\n'
name|'claim'
op|'='
name|'self'
op|'.'
name|'_claim'
op|'('
op|')'
newline|'\n'
name|'request'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequest'
op|'('
name|'count'
op|'='
number|'1'
op|','
nl|'\n'
name|'spec'
op|'='
op|'['
op|'{'
string|"'vendor_id'"
op|':'
string|"'v'"
op|','
string|"'product_id'"
op|':'
string|"'p'"
op|'}'
op|']'
op|')'
newline|'\n'
name|'mock_get'
op|'.'
name|'return_value'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'('
nl|'\n'
name|'requests'
op|'='
op|'['
name|'request'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'claim'
op|'.'
name|'_test_pci'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'pci_fakes'
op|'.'
name|'patch_pci_whitelist'
newline|'\n'
DECL|member|test_pci_fail
name|'def'
name|'test_pci_fail'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dev_dict'
op|'='
op|'{'
nl|'\n'
string|"'compute_node_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'a'"
op|','
nl|'\n'
string|"'product_id'"
op|':'
string|"'p'"
op|','
nl|'\n'
string|"'vendor_id'"
op|':'
string|"'v1'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'available'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'new_pci_tracker'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'pci_tracker'
op|'.'
name|'set_hvdevs'
op|'('
op|'['
name|'dev_dict'
op|']'
op|')'
newline|'\n'
name|'claim'
op|'='
name|'self'
op|'.'
name|'_claim'
op|'('
op|')'
newline|'\n'
name|'request'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequest'
op|'('
name|'count'
op|'='
number|'1'
op|','
nl|'\n'
name|'spec'
op|'='
op|'['
op|'{'
string|"'vendor_id'"
op|':'
string|"'v'"
op|','
string|"'product_id'"
op|':'
string|"'p'"
op|'}'
op|']'
op|')'
newline|'\n'
name|'mock_get'
op|'.'
name|'return_value'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'('
nl|'\n'
name|'requests'
op|'='
op|'['
name|'request'
op|']'
op|')'
newline|'\n'
name|'claim'
op|'.'
name|'_test_pci'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'pci_fakes'
op|'.'
name|'patch_pci_whitelist'
newline|'\n'
DECL|member|test_pci_pass_no_requests
name|'def'
name|'test_pci_pass_no_requests'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dev_dict'
op|'='
op|'{'
nl|'\n'
string|"'compute_node_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'a'"
op|','
nl|'\n'
string|"'product_id'"
op|':'
string|"'p'"
op|','
nl|'\n'
string|"'vendor_id'"
op|':'
string|"'v'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'available'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'new_pci_tracker'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'pci_tracker'
op|'.'
name|'set_hvdevs'
op|'('
op|'['
name|'dev_dict'
op|']'
op|')'
newline|'\n'
name|'claim'
op|'='
name|'self'
op|'.'
name|'_claim'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'claim'
op|'.'
name|'_test_pci'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ext_resources
dedent|''
name|'def'
name|'test_ext_resources'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_claim'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'ext_resources_handler'
op|'.'
name|'test_called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'ext_resources_handler'
op|'.'
name|'usage_is_itype'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_abort
dedent|''
name|'def'
name|'test_abort'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'claim'
op|'='
name|'self'
op|'.'
name|'_abort'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'claim'
op|'.'
name|'tracker'
op|'.'
name|'icalled'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_abort
dedent|''
name|'def'
name|'_abort'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'claim'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'_claim'
op|'('
name|'memory_mb'
op|'='
number|'4096'
op|')'
name|'as'
name|'claim'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
string|'"abort"'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'test'
op|'.'
name|'TestingException'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'claim'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ResizeClaimTestCase
dedent|''
dedent|''
name|'class'
name|'ResizeClaimTestCase'
op|'('
name|'ClaimTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ResizeClaimTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_claim
dedent|''
name|'def'
name|'_claim'
op|'('
name|'self'
op|','
name|'limits'
op|'='
name|'None'
op|','
name|'overhead'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_type'
op|'='
name|'self'
op|'.'
name|'_fake_instance_type'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'if'
name|'overhead'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'overhead'
op|'='
op|'{'
string|"'memory_mb'"
op|':'
number|'0'
op|'}'
newline|'\n'
dedent|''
name|'return'
name|'claims'
op|'.'
name|'ResizeClaim'
op|'('
string|"'context'"
op|','
name|'self'
op|'.'
name|'instance'
op|','
name|'instance_type'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|','
name|'self'
op|'.'
name|'resources'
op|','
nl|'\n'
name|'overhead'
op|'='
name|'overhead'
op|','
name|'limits'
op|'='
name|'limits'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.InstancePCIRequests.get_by_instance_uuid'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'('
name|'requests'
op|'='
op|'['
op|']'
op|')'
op|')'
newline|'\n'
DECL|member|test_ext_resources
name|'def'
name|'test_ext_resources'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_claim'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'ext_resources_handler'
op|'.'
name|'test_called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'ext_resources_handler'
op|'.'
name|'usage_is_itype'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.objects.InstancePCIRequests.get_by_instance_uuid'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'objects'
op|'.'
name|'InstancePCIRequests'
op|'('
name|'requests'
op|'='
op|'['
op|']'
op|')'
op|')'
newline|'\n'
DECL|member|test_abort
name|'def'
name|'test_abort'
op|'('
name|'self'
op|','
name|'mock_get'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'claim'
op|'='
name|'self'
op|'.'
name|'_abort'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'claim'
op|'.'
name|'tracker'
op|'.'
name|'rcalled'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
