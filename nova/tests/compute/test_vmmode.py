begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Copyright (C) 2012 Red Hat, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_mode'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ComputeVMModeTest
name|'class'
name|'ComputeVMModeTest'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_case
indent|'    '
name|'def'
name|'test_case'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'dict'
op|'('
name|'vm_mode'
op|'='
string|'"HVM"'
op|')'
newline|'\n'
name|'mode'
op|'='
name|'vm_mode'
op|'.'
name|'get_from_instance'
op|'('
name|'inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mode'
op|','
string|'"hvm"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_legacy_pv
dedent|''
name|'def'
name|'test_legacy_pv'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'dict'
op|'('
name|'vm_mode'
op|'='
string|'"pv"'
op|')'
newline|'\n'
name|'mode'
op|'='
name|'vm_mode'
op|'.'
name|'get_from_instance'
op|'('
name|'inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mode'
op|','
string|'"xen"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_legacy_hv
dedent|''
name|'def'
name|'test_legacy_hv'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'dict'
op|'('
name|'vm_mode'
op|'='
string|'"hv"'
op|')'
newline|'\n'
name|'mode'
op|'='
name|'vm_mode'
op|'.'
name|'get_from_instance'
op|'('
name|'inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mode'
op|','
string|'"hvm"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bogus
dedent|''
name|'def'
name|'test_bogus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'dict'
op|'('
name|'vm_mode'
op|'='
string|'"wibble"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Invalid'
op|','
nl|'\n'
name|'vm_mode'
op|'.'
name|'get_from_instance'
op|','
nl|'\n'
name|'inst'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_good
dedent|''
name|'def'
name|'test_good'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'dict'
op|'('
name|'vm_mode'
op|'='
string|'"hvm"'
op|')'
newline|'\n'
name|'mode'
op|'='
name|'vm_mode'
op|'.'
name|'get_from_instance'
op|'('
name|'inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mode'
op|','
string|'"hvm"'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
