begin_unit
comment|'# Copyright (c) 2012 OpenStack Foundation'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Tests for compute resource tracking."""'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
nl|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'flavors'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'resource_tracker'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'base'
name|'as'
name|'obj_base'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'migration'
name|'as'
name|'migration_obj'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'timeutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'compute'
op|'.'
name|'monitors'
name|'import'
name|'test_monitors'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'objects'
name|'import'
name|'test_migration'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'driver'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FAKE_VIRT_MEMORY_MB
name|'FAKE_VIRT_MEMORY_MB'
op|'='
number|'5'
newline|'\n'
DECL|variable|FAKE_VIRT_MEMORY_OVERHEAD
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|'='
number|'1'
newline|'\n'
DECL|variable|FAKE_VIRT_LOCAL_GB
name|'FAKE_VIRT_LOCAL_GB'
op|'='
number|'6'
newline|'\n'
DECL|variable|FAKE_VIRT_VCPUS
name|'FAKE_VIRT_VCPUS'
op|'='
number|'1'
newline|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|UnsupportedVirtDriver
name|'class'
name|'UnsupportedVirtDriver'
op|'('
name|'driver'
op|'.'
name|'ComputeDriver'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Pretend version of a lame virt driver."""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'UnsupportedVirtDriver'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_host_ip_addr
dedent|''
name|'def'
name|'get_host_ip_addr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'127.0.0.1'"
newline|'\n'
nl|'\n'
DECL|member|get_available_resource
dedent|''
name|'def'
name|'get_available_resource'
op|'('
name|'self'
op|','
name|'nodename'
op|')'
op|':'
newline|'\n'
comment|'# no support for getting resource usage info'
nl|'\n'
indent|'        '
name|'return'
op|'{'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeVirtDriver
dedent|''
dedent|''
name|'class'
name|'FakeVirtDriver'
op|'('
name|'driver'
op|'.'
name|'ComputeDriver'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'pci_support'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'FakeVirtDriver'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'memory_mb'
op|'='
name|'FAKE_VIRT_MEMORY_MB'
newline|'\n'
name|'self'
op|'.'
name|'local_gb'
op|'='
name|'FAKE_VIRT_LOCAL_GB'
newline|'\n'
name|'self'
op|'.'
name|'vcpus'
op|'='
name|'FAKE_VIRT_VCPUS'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'memory_mb_used'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'local_gb_used'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'pci_support'
op|'='
name|'pci_support'
newline|'\n'
nl|'\n'
DECL|member|get_host_ip_addr
dedent|''
name|'def'
name|'get_host_ip_addr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'127.0.0.1'"
newline|'\n'
nl|'\n'
DECL|member|get_available_resource
dedent|''
name|'def'
name|'get_available_resource'
op|'('
name|'self'
op|','
name|'nodename'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
op|'{'
nl|'\n'
string|"'vcpus'"
op|':'
name|'self'
op|'.'
name|'vcpus'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
name|'self'
op|'.'
name|'memory_mb'
op|','
nl|'\n'
string|"'local_gb'"
op|':'
name|'self'
op|'.'
name|'local_gb'
op|','
nl|'\n'
string|"'vcpus_used'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'memory_mb_used'"
op|':'
name|'self'
op|'.'
name|'memory_mb_used'
op|','
nl|'\n'
string|"'local_gb_used'"
op|':'
name|'self'
op|'.'
name|'local_gb_used'
op|','
nl|'\n'
string|"'hypervisor_type'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'hypervisor_version'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'hypervisor_hostname'"
op|':'
string|"'fakehost'"
op|','
nl|'\n'
string|"'cpu_info'"
op|':'
string|"''"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'pci_support'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'['
string|"'pci_passthrough_devices'"
op|']'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
op|'['
op|'{'
nl|'\n'
string|"'label'"
op|':'
string|"'forza-napoli'"
op|','
nl|'\n'
string|"'dev_type'"
op|':'
string|"'foo'"
op|','
nl|'\n'
string|"'compute_node_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'0000:00:00.1'"
op|','
nl|'\n'
string|"'product_id'"
op|':'
string|"'p1'"
op|','
nl|'\n'
string|"'vendor_id'"
op|':'
string|"'v1'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'available'"
op|','
nl|'\n'
string|"'extra_k1'"
op|':'
string|"'v1'"
op|'}'
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|estimate_instance_overhead
dedent|''
name|'def'
name|'estimate_instance_overhead'
op|'('
name|'self'
op|','
name|'instance_info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mem'
op|'='
name|'instance_info'
op|'['
string|"'memory_mb'"
op|']'
comment|'# make sure memory value is present'
newline|'\n'
name|'overhead'
op|'='
op|'{'
nl|'\n'
string|"'memory_mb'"
op|':'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
nl|'\n'
op|'}'
newline|'\n'
name|'return'
name|'overhead'
comment|'# just return a constant value for testing'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BaseTestCase
dedent|''
dedent|''
name|'class'
name|'BaseTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'BaseTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'reserved_host_disk_mb'
op|'='
number|'0'
op|','
nl|'\n'
name|'reserved_host_memory_mb'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_local'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'conductor'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conductor'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'conductor'"
op|','
nl|'\n'
name|'manager'
op|'='
name|'CONF'
op|'.'
name|'conductor'
op|'.'
name|'manager'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_instances'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_instance_types'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'db'
op|','
nl|'\n'
string|"'instance_get_all_by_host_and_node'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_instance_get_all_by_host_and_node'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'db'
op|','
nl|'\n'
string|"'instance_update_and_get_original'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_instance_update_and_get_original'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'conductor'
op|'.'
name|'db'
op|','
nl|'\n'
string|"'flavor_get'"
op|','
name|'self'
op|'.'
name|'_fake_flavor_get'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'host'
op|'='
string|"'fakehost'"
newline|'\n'
nl|'\n'
DECL|member|_create_compute_node
dedent|''
name|'def'
name|'_create_compute_node'
op|'('
name|'self'
op|','
name|'values'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'compute'
op|'='
op|'{'
nl|'\n'
string|'"id"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"service_id"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"vcpus"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"memory_mb"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"local_gb"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"vcpus_used"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"memory_mb_used"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"local_gb_used"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"free_ram_mb"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"free_disk_gb"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"current_workload"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"running_vms"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"cpu_info"'
op|':'
name|'None'
op|','
nl|'\n'
string|'"stats"'
op|':'
op|'['
op|'{'
string|'"key"'
op|':'
string|'"num_instances"'
op|','
string|'"value"'
op|':'
string|'"1"'
op|'}'
op|']'
op|','
nl|'\n'
string|'"hypervisor_hostname"'
op|':'
string|'"fakenode"'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'if'
name|'values'
op|':'
newline|'\n'
indent|'            '
name|'compute'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'compute'
newline|'\n'
nl|'\n'
DECL|member|_create_service
dedent|''
name|'def'
name|'_create_service'
op|'('
name|'self'
op|','
name|'host'
op|'='
string|'"fakehost"'
op|','
name|'compute'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'compute'
op|':'
newline|'\n'
indent|'            '
name|'compute'
op|'='
op|'['
name|'compute'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'service'
op|'='
op|'{'
nl|'\n'
string|'"id"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"host"'
op|':'
name|'host'
op|','
nl|'\n'
string|'"binary"'
op|':'
string|'"nova-compute"'
op|','
nl|'\n'
string|'"topic"'
op|':'
string|'"compute"'
op|','
nl|'\n'
string|'"compute_node"'
op|':'
name|'compute'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'return'
name|'service'
newline|'\n'
nl|'\n'
DECL|member|_fake_instance_system_metadata
dedent|''
name|'def'
name|'_fake_instance_system_metadata'
op|'('
name|'self'
op|','
name|'instance_type'
op|','
name|'prefix'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sys_meta'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'flavors'
op|'.'
name|'system_metadata_flavor_props'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sys_meta'
op|'.'
name|'append'
op|'('
op|'{'
string|"'key'"
op|':'
string|"'%sinstance_type_%s'"
op|'%'
op|'('
name|'prefix'
op|','
name|'key'
op|')'
op|','
nl|'\n'
string|"'value'"
op|':'
name|'instance_type'
op|'['
name|'key'
op|']'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'sys_meta'
newline|'\n'
nl|'\n'
DECL|member|_fake_instance
dedent|''
name|'def'
name|'_fake_instance'
op|'('
name|'self'
op|','
name|'stash'
op|'='
name|'True'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
nl|'\n'
comment|'# Default to an instance ready to resize to or from the same'
nl|'\n'
comment|'# instance_type'
nl|'\n'
indent|'        '
name|'itype'
op|'='
name|'self'
op|'.'
name|'_fake_flavor_create'
op|'('
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'self'
op|'.'
name|'_fake_instance_system_metadata'
op|'('
name|'itype'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'stash'
op|':'
newline|'\n'
comment|'# stash instance types in system metadata.'
nl|'\n'
indent|'            '
name|'sys_meta'
op|'='
op|'('
name|'sys_meta'
op|'+'
nl|'\n'
name|'self'
op|'.'
name|'_fake_instance_system_metadata'
op|'('
name|'itype'
op|','
string|"'new_'"
op|')'
op|'+'
nl|'\n'
name|'self'
op|'.'
name|'_fake_instance_system_metadata'
op|'('
name|'itype'
op|','
string|"'old_'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'instance_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid1'
op|'('
op|')'
op|')'
newline|'\n'
name|'instance'
op|'='
op|'{'
nl|'\n'
string|"'uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'RESIZED'
op|','
nl|'\n'
string|"'task_state'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'ephemeral_key_uuid'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'os_type'"
op|':'
string|"'Linux'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'123456'"
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'node'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'launched_on'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
name|'sys_meta'
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'vm_mode'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'reservation_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'display_name'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'default_swap_device'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'power_state'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'scheduled_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'access_ip_v6'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'access_ip_v4'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'key_name'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'cell_name'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'locked'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'locked_by'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'launch_index'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'architecture'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'auto_disk_config'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'terminated_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'user_data'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'cleaned'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'id'"
op|':'
number|'333'
op|','
nl|'\n'
string|"'disable_terminate'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'hostname'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'display_description'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'key_data'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'default_ephemeral_device'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'progress'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'launched_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'config_drive'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'kernel_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'shutdown_terminate'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'image_ref'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'root_device_name'"
op|':'
name|'None'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'instance'
op|'.'
name|'update'
op|'('
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_instances'
op|'['
name|'instance_uuid'
op|']'
op|'='
name|'instance'
newline|'\n'
name|'return'
name|'instance'
newline|'\n'
nl|'\n'
DECL|member|_fake_flavor_create
dedent|''
name|'def'
name|'_fake_flavor_create'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_type'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'fakeitype'"
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
name|'FAKE_VIRT_MEMORY_MB'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
name|'FAKE_VIRT_VCPUS'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
name|'FAKE_VIRT_LOCAL_GB'
op|'/'
number|'2'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
name|'FAKE_VIRT_LOCAL_GB'
op|'/'
number|'2'
op|','
nl|'\n'
string|"'swap'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rxtx_factor'"
op|':'
number|'1.0'
op|','
nl|'\n'
string|"'vcpu_weight'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'flavorid'"
op|':'
string|"'fakeflavor'"
nl|'\n'
op|'}'
newline|'\n'
name|'instance_type'
op|'.'
name|'update'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'id_'
op|'='
name|'instance_type'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_instance_types'
op|'['
name|'id_'
op|']'
op|'='
name|'instance_type'
newline|'\n'
name|'return'
name|'instance_type'
newline|'\n'
nl|'\n'
DECL|member|_fake_instance_get_all_by_host_and_node
dedent|''
name|'def'
name|'_fake_instance_get_all_by_host_and_node'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'host'
op|','
name|'nodename'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
name|'i'
name|'for'
name|'i'
name|'in'
name|'self'
op|'.'
name|'_instances'
op|'.'
name|'values'
op|'('
op|')'
name|'if'
name|'i'
op|'['
string|"'host'"
op|']'
op|'=='
name|'host'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_fake_flavor_get
dedent|''
name|'def'
name|'_fake_flavor_get'
op|'('
name|'self'
op|','
name|'ctxt'
op|','
name|'id_'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_instance_types'
op|'['
name|'id_'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_fake_instance_update_and_get_original
dedent|''
name|'def'
name|'_fake_instance_update_and_get_original'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_instances'
op|'['
name|'instance_uuid'
op|']'
newline|'\n'
name|'instance'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
comment|"# the test doesn't care what the original instance values are, it's"
nl|'\n'
comment|'# only used in the subsequent notification:'
nl|'\n'
name|'return'
op|'('
name|'instance'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_driver
dedent|''
name|'def'
name|'_driver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'FakeVirtDriver'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_tracker
dedent|''
name|'def'
name|'_tracker'
op|'('
name|'self'
op|','
name|'host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'if'
name|'host'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'host'
op|'='
name|'self'
op|'.'
name|'host'
newline|'\n'
nl|'\n'
dedent|''
name|'node'
op|'='
string|'"fakenode"'
newline|'\n'
nl|'\n'
name|'driver'
op|'='
name|'self'
op|'.'
name|'_driver'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'tracker'
op|'='
name|'resource_tracker'
op|'.'
name|'ResourceTracker'
op|'('
name|'host'
op|','
name|'driver'
op|','
name|'node'
op|')'
newline|'\n'
name|'return'
name|'tracker'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|UnsupportedDriverTestCase
dedent|''
dedent|''
name|'class'
name|'UnsupportedDriverTestCase'
op|'('
name|'BaseTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Resource tracking should be disabled when the virt driver doesn\'t\n    support it.\n    """'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'UnsupportedDriverTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'='
name|'self'
op|'.'
name|'_tracker'
op|'('
op|')'
newline|'\n'
comment|'# seed tracker with data:'
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_driver
dedent|''
name|'def'
name|'_driver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'UnsupportedVirtDriver'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disabled
dedent|''
name|'def'
name|'test_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# disabled = no compute node stats'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'disabled'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disabled_claim
dedent|''
name|'def'
name|'test_disabled_claim'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# basic claim:'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
op|')'
newline|'\n'
name|'claim'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'claim'
op|'.'
name|'memory_mb'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disabled_instance_claim
dedent|''
name|'def'
name|'test_disabled_instance_claim'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# instance variation:'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
op|')'
newline|'\n'
name|'claim'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'claim'
op|'.'
name|'memory_mb'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disabled_instance_context_claim
dedent|''
name|'def'
name|'test_disabled_instance_context_claim'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# instance context manager variation:'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
op|')'
newline|'\n'
name|'claim'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
name|'as'
name|'claim'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'claim'
op|'.'
name|'memory_mb'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disabled_updated_usage
dedent|''
dedent|''
name|'def'
name|'test_disabled_updated_usage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
name|'host'
op|'='
string|"'fakehost'"
op|','
name|'memory_mb'
op|'='
number|'5'
op|','
nl|'\n'
name|'root_gb'
op|'='
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_usage'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disabled_resize_claim
dedent|''
name|'def'
name|'test_disabled_resize_claim'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
op|')'
newline|'\n'
name|'instance_type'
op|'='
name|'self'
op|'.'
name|'_fake_flavor_create'
op|'('
op|')'
newline|'\n'
name|'claim'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'resize_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'instance_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'claim'
op|'.'
name|'memory_mb'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'claim'
op|'.'
name|'migration'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance_type'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'claim'
op|'.'
name|'migration'
op|'['
string|"'new_instance_type_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disabled_resize_context_claim
dedent|''
name|'def'
name|'test_disabled_resize_context_claim'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
op|')'
newline|'\n'
name|'instance_type'
op|'='
name|'self'
op|'.'
name|'_fake_flavor_create'
op|'('
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'resize_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'instance_type'
op|')'
name|'as'
name|'claim'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'claim'
op|'.'
name|'memory_mb'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MissingServiceTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'MissingServiceTestCase'
op|'('
name|'BaseTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'MissingServiceTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'='
name|'self'
op|'.'
name|'_tracker'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_missing_service
dedent|''
name|'def'
name|'test_missing_service'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'disabled'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MissingComputeNodeTestCase
dedent|''
dedent|''
name|'class'
name|'MissingComputeNodeTestCase'
op|'('
name|'BaseTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'MissingComputeNodeTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'='
name|'self'
op|'.'
name|'_tracker'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'service_get_by_compute_host'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_service_get_by_compute_host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'compute_node_create'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_create_compute_node'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_fake_create_compute_node
dedent|''
name|'def'
name|'_fake_create_compute_node'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'created'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_create_compute_node'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_fake_service_get_by_compute_host
dedent|''
name|'def'
name|'_fake_service_get_by_compute_host'
op|'('
name|'self'
op|','
name|'ctx'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
comment|'# return a service with no joined compute'
nl|'\n'
indent|'        '
name|'service'
op|'='
name|'self'
op|'.'
name|'_create_service'
op|'('
op|')'
newline|'\n'
name|'return'
name|'service'
newline|'\n'
nl|'\n'
DECL|member|test_create_compute_node
dedent|''
name|'def'
name|'test_create_compute_node'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'created'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_enabled
dedent|''
name|'def'
name|'test_enabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'disabled'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BaseTrackerTestCase
dedent|''
dedent|''
name|'class'
name|'BaseTrackerTestCase'
op|'('
name|'BaseTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# setup plumbing for a working resource tracker with required'
nl|'\n'
comment|'# database models and a compatible compute driver:'
nl|'\n'
indent|'        '
name|'super'
op|'('
name|'BaseTrackerTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'updated'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'deleted'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'='
name|'self'
op|'.'
name|'_tracker'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_migrations'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'service_get_by_compute_host'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_service_get_by_compute_host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'compute_node_update'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_compute_node_update'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'compute_node_delete'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_compute_node_delete'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'migration_update'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_migration_update'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'migration_get_in_progress_by_host_and_node'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_migration_get_in_progress_by_host_and_node'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'limits'
op|'='
name|'self'
op|'.'
name|'_limits'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_fake_service_get_by_compute_host
dedent|''
name|'def'
name|'_fake_service_get_by_compute_host'
op|'('
name|'self'
op|','
name|'ctx'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'compute'
op|'='
name|'self'
op|'.'
name|'_create_compute_node'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'service'
op|'='
name|'self'
op|'.'
name|'_create_service'
op|'('
name|'host'
op|','
name|'compute'
op|'='
name|'self'
op|'.'
name|'compute'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'service'
newline|'\n'
nl|'\n'
DECL|member|_fake_compute_node_update
dedent|''
name|'def'
name|'_fake_compute_node_update'
op|'('
name|'self'
op|','
name|'ctx'
op|','
name|'compute_node_id'
op|','
name|'values'
op|','
nl|'\n'
name|'prune_stats'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'updated'
op|'='
name|'True'
newline|'\n'
name|'values'
op|'['
string|"'stats'"
op|']'
op|'='
op|'['
op|'{'
string|'"key"'
op|':'
string|'"num_instances"'
op|','
string|'"value"'
op|':'
string|'"1"'
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'compute'
newline|'\n'
nl|'\n'
DECL|member|_fake_compute_node_delete
dedent|''
name|'def'
name|'_fake_compute_node_delete'
op|'('
name|'self'
op|','
name|'ctx'
op|','
name|'compute_node_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'deleted'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'update'
op|'('
op|'{'
string|"'deleted'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'compute'
newline|'\n'
nl|'\n'
DECL|member|_fake_migration_get_in_progress_by_host_and_node
dedent|''
name|'def'
name|'_fake_migration_get_in_progress_by_host_and_node'
op|'('
name|'self'
op|','
name|'ctxt'
op|','
name|'host'
op|','
nl|'\n'
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'status'
op|'='
op|'['
string|"'confirmed'"
op|','
string|"'reverted'"
op|','
string|"'error'"
op|']'
newline|'\n'
name|'migrations'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'migration'
name|'in'
name|'self'
op|'.'
name|'_migrations'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'migration'
op|'='
name|'obj_base'
op|'.'
name|'obj_to_primitive'
op|'('
name|'migration'
op|')'
newline|'\n'
name|'if'
name|'migration'
op|'['
string|"'status'"
op|']'
name|'in'
name|'status'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'uuid'
op|'='
name|'migration'
op|'['
string|"'instance_uuid'"
op|']'
newline|'\n'
name|'migration'
op|'['
string|"'instance'"
op|']'
op|'='
name|'self'
op|'.'
name|'_instances'
op|'['
name|'uuid'
op|']'
newline|'\n'
name|'migrations'
op|'.'
name|'append'
op|'('
name|'migration'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'migrations'
newline|'\n'
nl|'\n'
DECL|member|_fake_migration_update
dedent|''
name|'def'
name|'_fake_migration_update'
op|'('
name|'self'
op|','
name|'ctxt'
op|','
name|'migration_id'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
comment|"# cheat and assume there's only 1 migration present"
nl|'\n'
indent|'        '
name|'migration'
op|'='
name|'self'
op|'.'
name|'_migrations'
op|'.'
name|'values'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'migration'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'return'
name|'migration'
newline|'\n'
nl|'\n'
DECL|member|_limits
dedent|''
name|'def'
name|'_limits'
op|'('
name|'self'
op|','
name|'memory_mb'
op|'='
name|'FAKE_VIRT_MEMORY_MB'
op|'+'
nl|'\n'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
name|'disk_gb'
op|'='
name|'FAKE_VIRT_LOCAL_GB'
op|','
nl|'\n'
name|'vcpus'
op|'='
name|'FAKE_VIRT_VCPUS'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create limits dictionary used for oversubscribing resources."""'
newline|'\n'
nl|'\n'
name|'return'
op|'{'
nl|'\n'
string|"'memory_mb'"
op|':'
name|'memory_mb'
op|','
nl|'\n'
string|"'disk_gb'"
op|':'
name|'disk_gb'
op|','
nl|'\n'
string|"'vcpu'"
op|':'
name|'vcpus'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_assert
dedent|''
name|'def'
name|'_assert'
op|'('
name|'self'
op|','
name|'value'
op|','
name|'field'
op|','
name|'tracker'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'if'
name|'tracker'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'tracker'
op|'='
name|'self'
op|'.'
name|'tracker'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'field'
name|'not'
name|'in'
name|'tracker'
op|'.'
name|'compute_node'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
nl|'\n'
string|'"\'%(field)s\' not in compute node."'
op|'%'
op|'{'
string|"'field'"
op|':'
name|'field'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'x'
op|'='
name|'tracker'
op|'.'
name|'compute_node'
op|'['
name|'field'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'value'
op|','
name|'x'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TrackerTestCase
dedent|''
dedent|''
name|'class'
name|'TrackerTestCase'
op|'('
name|'BaseTrackerTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_free_ram_resource_value
indent|'    '
name|'def'
name|'test_free_ram_resource_value'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'driver'
op|'='
name|'FakeVirtDriver'
op|'('
op|')'
newline|'\n'
name|'mem_free'
op|'='
name|'driver'
op|'.'
name|'memory_mb'
op|'-'
name|'driver'
op|'.'
name|'memory_mb_used'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mem_free'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'free_ram_mb'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_free_disk_resource_value
dedent|''
name|'def'
name|'test_free_disk_resource_value'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'driver'
op|'='
name|'FakeVirtDriver'
op|'('
op|')'
newline|'\n'
name|'mem_free'
op|'='
name|'driver'
op|'.'
name|'local_gb'
op|'-'
name|'driver'
op|'.'
name|'local_gb_used'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mem_free'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'free_disk_gb'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_compute_node
dedent|''
name|'def'
name|'test_update_compute_node'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'disabled'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'updated'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init
dedent|''
name|'def'
name|'test_init'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_MEMORY_MB'
op|','
string|"'memory_mb'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_LOCAL_GB'
op|','
string|"'local_gb'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_VCPUS'
op|','
string|"'vcpus'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'memory_mb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'local_gb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'vcpus_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'running_vms'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_MEMORY_MB'
op|','
string|"'free_ram_mb'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_LOCAL_GB'
op|','
string|"'free_disk_gb'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'disabled'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'current_workload'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
string|"'{}'"
op|','
string|"'pci_stats'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TrackerPciStatsTestCase
dedent|''
dedent|''
name|'class'
name|'TrackerPciStatsTestCase'
op|'('
name|'BaseTrackerTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_update_compute_node
indent|'    '
name|'def'
name|'test_update_compute_node'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'disabled'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'updated'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init
dedent|''
name|'def'
name|'test_init'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_MEMORY_MB'
op|','
string|"'memory_mb'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_LOCAL_GB'
op|','
string|"'local_gb'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_VCPUS'
op|','
string|"'vcpus'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'memory_mb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'local_gb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'vcpus_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'running_vms'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_MEMORY_MB'
op|','
string|"'free_ram_mb'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_LOCAL_GB'
op|','
string|"'free_disk_gb'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'disabled'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'current_workload'"
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
string|'"""[{"count": 1,\n                        "vendor_id": "v1",\n                        "product_id": "p1",\n                        "extra_info": {"extra_k1": "v1"}}]"""'
newline|'\n'
name|'expected'
op|'='
name|'re'
op|'.'
name|'sub'
op|'('
string|"r'\\s+'"
op|','
string|"''"
op|','
name|'expected'
op|')'
newline|'\n'
name|'pci'
op|'='
name|'re'
op|'.'
name|'sub'
op|'('
string|"r'\\s+'"
op|','
string|"''"
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'pci_stats'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'pci'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_driver
dedent|''
name|'def'
name|'_driver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'FakeVirtDriver'
op|'('
name|'pci_support'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceClaimTestCase
dedent|''
dedent|''
name|'class'
name|'InstanceClaimTestCase'
op|'('
name|'BaseTrackerTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_update_usage_only_for_tracked
indent|'    '
name|'def'
name|'test_update_usage_only_for_tracked'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
name|'memory_mb'
op|'='
number|'3'
op|','
name|'root_gb'
op|'='
number|'1'
op|','
name|'ephemeral_gb'
op|'='
number|'1'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_usage'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'memory_mb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'local_gb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'current_workload'"
op|')'
newline|'\n'
nl|'\n'
name|'claim'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
number|'0'
op|','
name|'claim'
op|'.'
name|'memory_mb'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'3'
op|'+'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
string|"'memory_mb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'2'
op|','
string|"'local_gb_used'"
op|')'
newline|'\n'
nl|'\n'
comment|'# now update should actually take effect'
nl|'\n'
name|'instance'
op|'['
string|"'task_state'"
op|']'
op|'='
name|'task_states'
op|'.'
name|'SCHEDULING'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_usage'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'3'
op|'+'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
string|"'memory_mb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'2'
op|','
string|"'local_gb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'1'
op|','
string|"'current_workload'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_claim_and_audit
dedent|''
name|'def'
name|'test_claim_and_audit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'claim_mem'
op|'='
number|'3'
newline|'\n'
name|'claim_disk'
op|'='
number|'2'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
name|'memory_mb'
op|'='
name|'claim_mem'
op|','
name|'root_gb'
op|'='
name|'claim_disk'
op|','
nl|'\n'
name|'ephemeral_gb'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'claim'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'5'
op|','
name|'self'
op|'.'
name|'compute'
op|'['
string|'"memory_mb"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'claim_mem'
op|'+'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'['
string|'"memory_mb_used"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'5'
op|'-'
name|'claim_mem'
op|'-'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'['
string|'"free_ram_mb"'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'6'
op|','
name|'self'
op|'.'
name|'compute'
op|'['
string|'"local_gb"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'claim_disk'
op|','
name|'self'
op|'.'
name|'compute'
op|'['
string|'"local_gb_used"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'6'
op|'-'
name|'claim_disk'
op|','
name|'self'
op|'.'
name|'compute'
op|'['
string|'"free_disk_gb"'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# 1st pretend that the compute operation finished and claimed the'
nl|'\n'
comment|'# desired resources from the virt layer'
nl|'\n'
name|'driver'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'driver'
newline|'\n'
name|'driver'
op|'.'
name|'memory_mb_used'
op|'='
name|'claim_mem'
newline|'\n'
name|'driver'
op|'.'
name|'local_gb_used'
op|'='
name|'claim_disk'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
comment|'# confirm tracker is adding in host_ip'
nl|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'get'
op|'('
string|"'host_ip'"
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# confirm that resource usage is derived from instance usages,'
nl|'\n'
comment|'# not virt layer:'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'claim_mem'
op|'+'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'['
string|"'memory_mb_used'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'5'
op|'-'
name|'claim_mem'
op|'-'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'['
string|"'free_ram_mb'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'claim_disk'
op|','
name|'self'
op|'.'
name|'compute'
op|'['
string|"'local_gb_used'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'6'
op|'-'
name|'claim_disk'
op|','
name|'self'
op|'.'
name|'compute'
op|'['
string|"'free_disk_gb'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_claim_and_abort
dedent|''
name|'def'
name|'test_claim_and_abort'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'claim_mem'
op|'='
number|'3'
newline|'\n'
name|'claim_disk'
op|'='
number|'2'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
name|'memory_mb'
op|'='
name|'claim_mem'
op|','
nl|'\n'
name|'root_gb'
op|'='
name|'claim_disk'
op|','
name|'ephemeral_gb'
op|'='
number|'0'
op|')'
newline|'\n'
name|'claim'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'claim'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'claim_mem'
op|'+'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'['
string|'"memory_mb_used"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'5'
op|'-'
name|'claim_mem'
op|'-'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'['
string|'"free_ram_mb"'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'claim_disk'
op|','
name|'self'
op|'.'
name|'compute'
op|'['
string|'"local_gb_used"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'6'
op|'-'
name|'claim_disk'
op|','
name|'self'
op|'.'
name|'compute'
op|'['
string|'"free_disk_gb"'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'claim'
op|'.'
name|'abort'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'compute'
op|'['
string|'"memory_mb_used"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'5'
op|','
name|'self'
op|'.'
name|'compute'
op|'['
string|'"free_ram_mb"'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'compute'
op|'['
string|'"local_gb_used"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'6'
op|','
name|'self'
op|'.'
name|'compute'
op|'['
string|'"free_disk_gb"'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_claim_with_oversubscription
dedent|''
name|'def'
name|'test_instance_claim_with_oversubscription'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'memory_mb'
op|'='
name|'FAKE_VIRT_MEMORY_MB'
op|'*'
number|'2'
newline|'\n'
name|'root_gb'
op|'='
name|'ephemeral_gb'
op|'='
name|'FAKE_VIRT_LOCAL_GB'
newline|'\n'
name|'vcpus'
op|'='
name|'FAKE_VIRT_VCPUS'
op|'*'
number|'2'
newline|'\n'
nl|'\n'
name|'limits'
op|'='
op|'{'
string|"'memory_mb'"
op|':'
name|'memory_mb'
op|'+'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
nl|'\n'
string|"'disk_gb'"
op|':'
name|'root_gb'
op|'*'
number|'2'
op|','
nl|'\n'
string|"'vcpu'"
op|':'
name|'vcpus'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
name|'memory_mb'
op|'='
name|'memory_mb'
op|','
nl|'\n'
name|'root_gb'
op|'='
name|'root_gb'
op|','
name|'ephemeral_gb'
op|'='
name|'ephemeral_gb'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'limits'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'memory_mb'
op|'+'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'memory_mb_used'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'root_gb'
op|'*'
number|'2'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'local_gb_used'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_additive_claims
dedent|''
name|'def'
name|'test_additive_claims'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'limits'
op|'['
string|"'vcpu'"
op|']'
op|'='
number|'2'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
name|'memory_mb'
op|'='
number|'1'
op|','
name|'root_gb'
op|'='
number|'1'
op|','
name|'ephemeral_gb'
op|'='
number|'1'
op|','
nl|'\n'
name|'vcpus'
op|'='
number|'1'
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'limits'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
name|'memory_mb'
op|'='
number|'1'
op|','
name|'root_gb'
op|'='
number|'1'
op|','
name|'ephemeral_gb'
op|'='
number|'1'
op|','
nl|'\n'
name|'vcpus'
op|'='
number|'1'
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'limits'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|'+'
number|'2'
op|'*'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'memory_mb_used'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'local_gb_used'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'vcpus_used'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_context_claim_with_exception
dedent|''
name|'def'
name|'test_context_claim_with_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
name|'memory_mb'
op|'='
number|'1'
op|','
name|'root_gb'
op|'='
number|'1'
op|','
name|'ephemeral_gb'
op|'='
number|'1'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
comment|'# <insert exciting things that utilize resources>'
nl|'\n'
indent|'                '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'test'
op|'.'
name|'TestingException'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'memory_mb_used'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'local_gb_used'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'compute'
op|'['
string|"'memory_mb_used'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'compute'
op|'['
string|"'local_gb_used'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_context_claim
dedent|''
name|'def'
name|'test_instance_context_claim'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
name|'memory_mb'
op|'='
number|'1'
op|','
name|'root_gb'
op|'='
number|'1'
op|','
name|'ephemeral_gb'
op|'='
number|'1'
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
comment|'# <insert exciting things that utilize resources>'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|'+'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'memory_mb_used'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'local_gb_used'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|'+'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'['
string|"'memory_mb_used'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'self'
op|'.'
name|'compute'
op|'['
string|"'local_gb_used'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# after exiting claim context, build is marked as finished.  usage'
nl|'\n'
comment|'# totals should be same:'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|'+'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'memory_mb_used'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'local_gb_used'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|'+'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'['
string|"'memory_mb_used'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'self'
op|'.'
name|'compute'
op|'['
string|"'local_gb_used'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_load_stats_for_instance
dedent|''
name|'def'
name|'test_update_load_stats_for_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'SCHEDULING'
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'current_workload'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'['
string|"'task_state'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'instance'
op|'['
string|"'host'"
op|']'
op|'='
string|"'fakehost'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_usage'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'current_workload'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cpu_stats
dedent|''
name|'def'
name|'test_cpu_stats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'limits'
op|'='
op|'{'
string|"'disk_gb'"
op|':'
number|'100'
op|','
string|"'memory_mb'"
op|':'
number|'100'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'vcpus_used'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
name|'vcpus'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
comment|'# should not do anything until a claim is made:'
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_usage'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'vcpus_used'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'limits'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'vcpus_used'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# instance state can change without modifying vcpus in use:'
nl|'\n'
name|'instance'
op|'['
string|"'task_state'"
op|']'
op|'='
name|'task_states'
op|'.'
name|'SCHEDULING'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_usage'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'vcpus_used'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
name|'vcpus'
op|'='
number|'10'
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'limits'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'11'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'vcpus_used'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_states'
op|'.'
name|'DELETED'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_usage'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'vcpus_used'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_skip_deleted_instances
dedent|''
name|'def'
name|'test_skip_deleted_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# ensure that the audit process skips instances that have vm_state'
nl|'\n'
comment|'# DELETED, but the DB record is not yet deleted.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_fake_instance'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'DELETED'
op|','
name|'host'
op|'='
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'memory_mb_used'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'local_gb_used'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ResizeClaimTestCase
dedent|''
dedent|''
name|'class'
name|'ResizeClaimTestCase'
op|'('
name|'BaseTrackerTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ResizeClaimTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|_fake_migration_create
name|'def'
name|'_fake_migration_create'
op|'('
name|'mig_self'
op|','
name|'ctxt'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_migrations'
op|'['
name|'mig_self'
op|'.'
name|'instance_uuid'
op|']'
op|'='
name|'mig_self'
newline|'\n'
name|'mig_self'
op|'.'
name|'obj_reset_changes'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'migration_obj'
op|'.'
name|'Migration'
op|','
string|"'create'"
op|','
nl|'\n'
name|'_fake_migration_create'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance_type'
op|'='
name|'self'
op|'.'
name|'_fake_flavor_create'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_fake_migration_create
dedent|''
name|'def'
name|'_fake_migration_create'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'values'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid1'
op|'('
op|')'
op|')'
newline|'\n'
name|'mig_dict'
op|'='
name|'test_migration'
op|'.'
name|'fake_db_migration'
op|'('
op|')'
newline|'\n'
name|'mig_dict'
op|'.'
name|'update'
op|'('
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'source_compute'"
op|':'
string|"'host1'"
op|','
nl|'\n'
string|"'source_node'"
op|':'
string|"'fakenode'"
op|','
nl|'\n'
string|"'dest_compute'"
op|':'
string|"'host2'"
op|','
nl|'\n'
string|"'dest_node'"
op|':'
string|"'fakenode'"
op|','
nl|'\n'
string|"'dest_host'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'old_instance_type_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'new_instance_type_id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'pre-migrating'"
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
nl|'\n'
op|'}'
op|')'
newline|'\n'
name|'if'
name|'values'
op|':'
newline|'\n'
indent|'            '
name|'mig_dict'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'migration'
op|'='
name|'migration_obj'
op|'.'
name|'Migration'
op|'('
op|')'
newline|'\n'
name|'migration'
op|'.'
name|'update'
op|'('
name|'mig_dict'
op|')'
newline|'\n'
comment|'# This hits the stub in setUp()'
nl|'\n'
name|'migration'
op|'.'
name|'create'
op|'('
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_claim
dedent|''
name|'def'
name|'test_claim'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'resize_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance_type'
op|','
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_MEMORY_MB'
op|'+'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
nl|'\n'
string|"'memory_mb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_LOCAL_GB'
op|','
string|"'local_gb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_VCPUS'
op|','
string|"'vcpus_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'tracked_migrations'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_abort
dedent|''
name|'def'
name|'test_abort'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'resize_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance_type'
op|','
name|'self'
op|'.'
name|'limits'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
string|'"abort"'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'test'
op|'.'
name|'TestingException'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'memory_mb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'local_gb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'vcpus_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'tracked_migrations'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_additive_claims
dedent|''
name|'def'
name|'test_additive_claims'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'limits'
op|'='
name|'self'
op|'.'
name|'_limits'
op|'('
name|'FAKE_VIRT_MEMORY_MB'
op|'*'
number|'2'
op|'+'
nl|'\n'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|'*'
number|'2'
op|','
nl|'\n'
name|'FAKE_VIRT_LOCAL_GB'
op|'*'
number|'2'
op|','
nl|'\n'
name|'FAKE_VIRT_VCPUS'
op|'*'
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'resize_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance_type'
op|','
name|'limits'
op|')'
newline|'\n'
name|'instance2'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'resize_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance2'
op|','
name|'self'
op|'.'
name|'instance_type'
op|','
nl|'\n'
name|'limits'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'2'
op|'*'
name|'FAKE_VIRT_MEMORY_MB'
op|'+'
number|'2'
op|'*'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
nl|'\n'
string|"'memory_mb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'2'
op|'*'
name|'FAKE_VIRT_LOCAL_GB'
op|','
string|"'local_gb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'2'
op|'*'
name|'FAKE_VIRT_VCPUS'
op|','
string|"'vcpus_used'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_claim_and_audit
dedent|''
name|'def'
name|'test_claim_and_audit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'resize_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance_type'
op|','
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_MEMORY_MB'
op|'+'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
nl|'\n'
string|"'memory_mb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_LOCAL_GB'
op|','
string|"'local_gb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_VCPUS'
op|','
string|"'vcpus_used'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_same_host
dedent|''
name|'def'
name|'test_same_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'limits'
op|'['
string|"'vcpu'"
op|']'
op|'='
number|'3'
newline|'\n'
nl|'\n'
name|'src_type'
op|'='
name|'self'
op|'.'
name|'_fake_flavor_create'
op|'('
name|'id'
op|'='
number|'2'
op|','
name|'memory_mb'
op|'='
number|'1'
op|','
nl|'\n'
name|'root_gb'
op|'='
number|'1'
op|','
name|'ephemeral_gb'
op|'='
number|'0'
op|','
name|'vcpus'
op|'='
number|'1'
op|')'
newline|'\n'
name|'dest_type'
op|'='
name|'self'
op|'.'
name|'_fake_flavor_create'
op|'('
name|'id'
op|'='
number|'2'
op|','
name|'memory_mb'
op|'='
number|'2'
op|','
nl|'\n'
name|'root_gb'
op|'='
number|'2'
op|','
name|'ephemeral_gb'
op|'='
number|'1'
op|','
name|'vcpus'
op|'='
number|'2'
op|')'
newline|'\n'
nl|'\n'
comment|'# make an instance of src_type:'
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
name|'memory_mb'
op|'='
number|'1'
op|','
name|'root_gb'
op|'='
number|'1'
op|','
name|'ephemeral_gb'
op|'='
number|'0'
op|','
nl|'\n'
name|'vcpus'
op|'='
number|'1'
op|','
name|'instance_type_id'
op|'='
number|'2'
op|')'
newline|'\n'
name|'instance'
op|'['
string|"'system_metadata'"
op|']'
op|'='
name|'self'
op|'.'
name|'_fake_instance_system_metadata'
op|'('
nl|'\n'
name|'dest_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
nl|'\n'
comment|'# resize to dest_type:'
nl|'\n'
name|'claim'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'resize_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'dest_type'
op|','
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'3'
op|'+'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|'*'
number|'2'
op|','
string|"'memory_mb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'4'
op|','
string|"'local_gb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'3'
op|','
string|"'vcpus_used'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'claim'
op|'.'
name|'abort'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# only the original instance should remain, not the migration:'
nl|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'1'
op|'+'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
string|"'memory_mb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'1'
op|','
string|"'local_gb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'1'
op|','
string|"'vcpus_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'tracked_instances'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'tracked_migrations'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_revert
dedent|''
name|'def'
name|'test_revert'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'resize_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|','
nl|'\n'
name|'self'
op|'.'
name|'instance_type'
op|','
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'drop_resize_claim'
op|'('
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'tracked_instances'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'tracked_migrations'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'memory_mb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'local_gb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
number|'0'
op|','
string|"'vcpus_used'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_revert_reserve_source
dedent|''
name|'def'
name|'test_revert_reserve_source'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# if a revert has started at the API and audit runs on'
nl|'\n'
comment|'# the source compute before the instance flips back to source,'
nl|'\n'
comment|'# resources should still be held at the source based on the'
nl|'\n'
comment|'# migration:'
nl|'\n'
indent|'        '
name|'dest'
op|'='
string|'"desthost"'
newline|'\n'
name|'dest_tracker'
op|'='
name|'self'
op|'.'
name|'_tracker'
op|'('
name|'host'
op|'='
name|'dest'
op|')'
newline|'\n'
name|'dest_tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
name|'memory_mb'
op|'='
name|'FAKE_VIRT_MEMORY_MB'
op|','
nl|'\n'
name|'root_gb'
op|'='
name|'FAKE_VIRT_LOCAL_GB'
op|','
name|'ephemeral_gb'
op|'='
number|'0'
op|','
nl|'\n'
name|'vcpus'
op|'='
name|'FAKE_VIRT_VCPUS'
op|','
name|'instance_type_id'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'values'
op|'='
op|'{'
string|"'source_compute'"
op|':'
name|'self'
op|'.'
name|'host'
op|','
string|"'dest_compute'"
op|':'
name|'dest'
op|','
nl|'\n'
string|"'old_instance_type_id'"
op|':'
number|'1'
op|','
string|"'new_instance_type_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'post-migrating'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|'}'
newline|'\n'
name|'migration'
op|'='
name|'self'
op|'.'
name|'_fake_migration_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
comment|'# attach an instance to the destination host tracker:'
nl|'\n'
name|'dest_tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_MEMORY_MB'
op|'+'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
nl|'\n'
string|"'memory_mb_used'"
op|','
name|'tracker'
op|'='
name|'dest_tracker'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_LOCAL_GB'
op|','
string|"'local_gb_used'"
op|','
nl|'\n'
name|'tracker'
op|'='
name|'dest_tracker'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_VCPUS'
op|','
string|"'vcpus_used'"
op|','
nl|'\n'
name|'tracker'
op|'='
name|'dest_tracker'
op|')'
newline|'\n'
nl|'\n'
comment|"# audit and recheck to confirm migration doesn't get double counted"
nl|'\n'
comment|'# on dest:'
nl|'\n'
name|'dest_tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_MEMORY_MB'
op|'+'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
nl|'\n'
string|"'memory_mb_used'"
op|','
name|'tracker'
op|'='
name|'dest_tracker'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_LOCAL_GB'
op|','
string|"'local_gb_used'"
op|','
nl|'\n'
name|'tracker'
op|'='
name|'dest_tracker'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_VCPUS'
op|','
string|"'vcpus_used'"
op|','
nl|'\n'
name|'tracker'
op|'='
name|'dest_tracker'
op|')'
newline|'\n'
nl|'\n'
comment|'# apply the migration to the source host tracker:'
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_MEMORY_MB'
op|'+'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
nl|'\n'
string|"'memory_mb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_LOCAL_GB'
op|','
string|"'local_gb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_VCPUS'
op|','
string|"'vcpus_used'"
op|')'
newline|'\n'
nl|'\n'
comment|'# flag the instance and migration as reverting and re-audit:'
nl|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_states'
op|'.'
name|'RESIZED'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'task_state'"
op|']'
op|'='
name|'task_states'
op|'.'
name|'RESIZE_REVERTING'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_MEMORY_MB'
op|'+'
number|'1'
op|','
string|"'memory_mb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_LOCAL_GB'
op|','
string|"'local_gb_used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert'
op|'('
name|'FAKE_VIRT_VCPUS'
op|','
string|"'vcpus_used'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize_filter
dedent|''
name|'def'
name|'test_resize_filter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'SUSPENDING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_instance_in_resize_state'
op|'('
name|'instance'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'RESIZED'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'SUSPENDING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_instance_in_resize_state'
op|'('
name|'instance'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'states'
op|'='
op|'['
name|'task_states'
op|'.'
name|'RESIZE_PREP'
op|','
name|'task_states'
op|'.'
name|'RESIZE_MIGRATING'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'RESIZE_MIGRATED'
op|','
name|'task_states'
op|'.'
name|'RESIZE_FINISH'
op|']'
newline|'\n'
name|'for'
name|'vm_state'
name|'in'
op|'['
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'vm_states'
op|'.'
name|'STOPPED'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'task_state'
name|'in'
name|'states'
op|':'
newline|'\n'
indent|'                '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
name|'vm_state'
op|'='
name|'vm_state'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_state'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_instance_in_resize_state'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dupe_filter
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_dupe_filter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_fake_flavor_create'
op|'('
name|'id'
op|'='
number|'2'
op|','
name|'memory_mb'
op|'='
number|'1'
op|','
name|'root_gb'
op|'='
number|'1'
op|','
nl|'\n'
name|'ephemeral_gb'
op|'='
number|'1'
op|','
name|'vcpus'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
name|'host'
op|'='
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
nl|'\n'
name|'values'
op|'='
op|'{'
string|"'source_compute'"
op|':'
name|'self'
op|'.'
name|'host'
op|','
string|"'dest_compute'"
op|':'
name|'self'
op|'.'
name|'host'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
string|"'new_instance_type_id'"
op|':'
number|'2'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_fake_migration_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_fake_migration_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'update_available_resource'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'tracked_migrations'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_set_instance_host_and_node
dedent|''
name|'def'
name|'test_set_instance_host_and_node'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'['
string|"'launched_on'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'instance'
op|'['
string|"'node'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'claim'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'instance_claim'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
number|'0'
op|','
name|'claim'
op|'.'
name|'memory_mb'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fakehost'"
op|','
name|'instance'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fakehost'"
op|','
name|'instance'
op|'['
string|"'launched_on'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fakenode'"
op|','
name|'instance'
op|'['
string|"'node'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NoInstanceTypesInSysMetadata
dedent|''
dedent|''
name|'class'
name|'NoInstanceTypesInSysMetadata'
op|'('
name|'ResizeClaimTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Make sure we handle the case where the following are true:\n    1) Compute node C gets upgraded to code that looks for instance types in\n       system metadata. AND\n    2) C already has instances in the process of migrating that do not have\n       stashed instance types.\n\n    bug 1164110\n    """'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'NoInstanceTypesInSysMetadata'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_fake_instance'
op|'('
name|'stash'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|OrphanTestCase
dedent|''
dedent|''
name|'class'
name|'OrphanTestCase'
op|'('
name|'BaseTrackerTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|_driver
indent|'    '
name|'def'
name|'_driver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|OrphanVirtDriver
indent|'        '
name|'class'
name|'OrphanVirtDriver'
op|'('
name|'FakeVirtDriver'
op|')'
op|':'
newline|'\n'
DECL|member|get_per_instance_usage
indent|'            '
name|'def'
name|'get_per_instance_usage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
nl|'\n'
string|"'1-2-3-4-5'"
op|':'
op|'{'
string|"'memory_mb'"
op|':'
number|'4'
op|','
string|"'uuid'"
op|':'
string|"'1-2-3-4-5'"
op|'}'
op|','
nl|'\n'
string|"'2-3-4-5-6'"
op|':'
op|'{'
string|"'memory_mb'"
op|':'
number|'4'
op|','
string|"'uuid'"
op|':'
string|"'2-3-4-5-6'"
op|'}'
op|','
nl|'\n'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'OrphanVirtDriver'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_usage
dedent|''
name|'def'
name|'test_usage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# 2 instances, 4 mb each, plus overhead'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'8'
op|'+'
number|'2'
op|'*'
name|'FAKE_VIRT_MEMORY_OVERHEAD'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'compute_node'
op|'['
string|"'memory_mb_used'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_find
dedent|''
name|'def'
name|'test_find'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# create one legit instance and verify the 2 orphans remain'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_fake_instance'
op|'('
op|')'
newline|'\n'
name|'orphans'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_find_orphaned_instances'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'orphans'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ComputeMonitorTestCase
dedent|''
dedent|''
name|'class'
name|'ComputeMonitorTestCase'
op|'('
name|'BaseTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ComputeMonitorTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'fake_monitors'
op|'='
op|'['
nl|'\n'
string|"'nova.tests.compute.monitors.test_monitors.FakeMonitorClass1'"
op|','
nl|'\n'
string|"'nova.tests.compute.monitors.test_monitors.FakeMonitorClass2'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'compute_available_monitors'
op|'='
name|'fake_monitors'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'='
name|'self'
op|'.'
name|'_tracker'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'node_name'
op|'='
string|"'nodename'"
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'info'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_host_metrics_none
dedent|''
name|'def'
name|'test_get_host_metrics_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'compute_monitors'
op|'='
op|'['
string|"'FakeMontorClass1'"
op|','
string|"'FakeMonitorClass4'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'monitors'
op|'='
op|'['
op|']'
newline|'\n'
name|'metrics'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_get_host_metrics'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'node_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'metrics'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_host_metrics_one_failed
dedent|''
name|'def'
name|'test_get_host_metrics_one_failed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'compute_monitors'
op|'='
op|'['
string|"'FakeMonitorClass1'"
op|','
string|"'FakeMonitorClass4'"
op|']'
op|')'
newline|'\n'
name|'class1'
op|'='
name|'test_monitors'
op|'.'
name|'FakeMonitorClass1'
op|'('
name|'self'
op|'.'
name|'tracker'
op|')'
newline|'\n'
name|'class4'
op|'='
name|'test_monitors'
op|'.'
name|'FakeMonitorClass4'
op|'('
name|'self'
op|'.'
name|'tracker'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'monitors'
op|'='
op|'['
name|'class1'
op|','
name|'class4'
op|']'
newline|'\n'
name|'metrics'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_get_host_metrics'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'node_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'metrics'
op|')'
op|'>'
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_host_metrics
dedent|''
name|'def'
name|'test_get_host_metrics'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'compute_monitors'
op|'='
op|'['
string|"'FakeMonitorClass1'"
op|','
string|"'FakeMonitorClass2'"
op|']'
op|')'
newline|'\n'
name|'class1'
op|'='
name|'test_monitors'
op|'.'
name|'FakeMonitorClass1'
op|'('
name|'self'
op|'.'
name|'tracker'
op|')'
newline|'\n'
name|'class2'
op|'='
name|'test_monitors'
op|'.'
name|'FakeMonitorClass2'
op|'('
name|'self'
op|'.'
name|'tracker'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'monitors'
op|'='
op|'['
name|'class1'
op|','
name|'class2'
op|']'
newline|'\n'
nl|'\n'
name|'mock_notifier'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'rpc'
op|','
string|"'get_notifier'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'mock_notifier'
op|')'
name|'as'
name|'mock_get'
op|':'
newline|'\n'
indent|'            '
name|'metrics'
op|'='
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'_get_host_metrics'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'node_name'
op|')'
newline|'\n'
name|'mock_get'
op|'.'
name|'assert_called_once_with'
op|'('
name|'service'
op|'='
string|"'compute'"
op|','
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'node_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'expected_metrics'
op|'='
op|'['
op|'{'
nl|'\n'
string|"'timestamp'"
op|':'
number|'1232'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'key1'"
op|','
nl|'\n'
string|"'value'"
op|':'
number|'2600'
op|','
nl|'\n'
string|"'source'"
op|':'
string|"'libvirt'"
nl|'\n'
op|'}'
op|','
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'key2'"
op|','
nl|'\n'
string|"'source'"
op|':'
string|"'libvirt'"
op|','
nl|'\n'
string|"'timestamp'"
op|':'
number|'123'
op|','
nl|'\n'
string|"'value'"
op|':'
number|'1600'
nl|'\n'
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'payload'
op|'='
op|'{'
nl|'\n'
string|"'metrics'"
op|':'
name|'expected_metrics'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'self'
op|'.'
name|'tracker'
op|'.'
name|'host'
op|','
nl|'\n'
string|"'host_ip'"
op|':'
name|'CONF'
op|'.'
name|'my_ip'
op|','
nl|'\n'
string|"'nodename'"
op|':'
name|'self'
op|'.'
name|'node_name'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'mock_notifier'
op|'.'
name|'info'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'compute.metrics.update'"
op|','
name|'payload'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metrics'
op|','
name|'expected_metrics'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
