begin_unit
comment|'# Copyright (c) 2012 Intel, LLC'
nl|'\n'
comment|'# Copyright (c) 2012 OpenStack, LLC'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nTest multiprocess enabled EC2/OSAPI_Compute/OSAPI_Volume/Metadata API service.\n"""'
newline|'\n'
name|'import'
name|'boto'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'ec2'
name|'import'
name|'regioninfo'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'signal'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'log'
name|'import'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'service'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'integrated'
name|'import'
name|'integrated_helpers'
newline|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MultiprocessEC2Test
name|'class'
name|'MultiprocessEC2Test'
op|'('
name|'integrated_helpers'
op|'.'
name|'_IntegratedTestBase'
op|')'
op|':'
newline|'\n'
DECL|member|_start_api_service
indent|'    '
name|'def'
name|'_start_api_service'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'osapi'
op|'='
name|'service'
op|'.'
name|'WSGIService'
op|'('
string|'"ec2"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'osapi'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'auth_url'
op|'='
string|"'http://%s:%s/services/Cloud'"
op|'%'
op|'('
name|'self'
op|'.'
name|'osapi'
op|'.'
name|'host'
op|','
name|'self'
op|'.'
name|'osapi'
op|'.'
name|'port'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'self'
op|'.'
name|'auth_url'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_flags
dedent|''
name|'def'
name|'_get_flags'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'f'
op|'='
name|'super'
op|'('
name|'MultiprocessEC2Test'
op|','
name|'self'
op|')'
op|'.'
name|'_get_flags'
op|'('
op|')'
newline|'\n'
name|'f'
op|'['
string|"'ec2_workers'"
op|']'
op|'='
number|'2'
newline|'\n'
name|'return'
name|'f'
newline|'\n'
nl|'\n'
DECL|member|test_ec2
dedent|''
name|'def'
name|'test_ec2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'region'
op|'='
name|'regioninfo'
op|'.'
name|'RegionInfo'
op|'('
name|'None'
op|','
string|"'test'"
op|','
name|'self'
op|'.'
name|'osapi'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ec2'
op|'='
name|'boto'
op|'.'
name|'connect_ec2'
op|'('
nl|'\n'
name|'aws_access_key_id'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'aws_secret_access_key'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'is_secure'
op|'='
name|'False'
op|','
nl|'\n'
name|'region'
op|'='
name|'region'
op|','
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'osapi'
op|'.'
name|'host'
op|','
nl|'\n'
name|'port'
op|'='
name|'self'
op|'.'
name|'osapi'
op|'.'
name|'port'
op|','
nl|'\n'
name|'path'
op|'='
string|"'/services/Cloud'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'ec2'
op|'.'
name|'get_all_regions'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MultiprocessMetadataTest
dedent|''
dedent|''
name|'class'
name|'MultiprocessMetadataTest'
op|'('
name|'integrated_helpers'
op|'.'
name|'_IntegratedTestBase'
op|')'
op|':'
newline|'\n'
DECL|member|_start_api_service
indent|'    '
name|'def'
name|'_start_api_service'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'osapi'
op|'='
name|'service'
op|'.'
name|'WSGIService'
op|'('
string|'"metadata"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'osapi'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'auth_url'
op|'='
string|"'http://%s:%s/'"
op|'%'
op|'('
name|'self'
op|'.'
name|'osapi'
op|'.'
name|'host'
op|','
name|'self'
op|'.'
name|'osapi'
op|'.'
name|'port'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'self'
op|'.'
name|'auth_url'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_flags
dedent|''
name|'def'
name|'_get_flags'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'f'
op|'='
name|'super'
op|'('
name|'MultiprocessMetadataTest'
op|','
name|'self'
op|')'
op|'.'
name|'_get_flags'
op|'('
op|')'
newline|'\n'
name|'f'
op|'['
string|"'metadata_workers'"
op|']'
op|'='
number|'2'
newline|'\n'
name|'return'
name|'f'
newline|'\n'
nl|'\n'
DECL|member|request
dedent|''
name|'def'
name|'request'
op|'('
name|'self'
op|','
name|'relative_url'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'api'
op|'.'
name|'api_get'
op|'('
name|'relative_url'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_meta
dedent|''
name|'def'
name|'test_meta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'userdata_url'
op|'='
name|'self'
op|'.'
name|'auth_url'
op|'+'
string|"'/user-data'"
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'request'
op|'('
name|'userdata_url'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MultiprocessOSAPIComputeTest
dedent|''
dedent|''
name|'class'
name|'MultiprocessOSAPIComputeTest'
op|'('
name|'integrated_helpers'
op|'.'
name|'_IntegratedTestBase'
op|')'
op|':'
newline|'\n'
DECL|member|_start_api_service
indent|'    '
name|'def'
name|'_start_api_service'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'osapi'
op|'='
name|'service'
op|'.'
name|'WSGIService'
op|'('
string|'"osapi_compute"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'osapi'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'auth_url'
op|'='
string|"'http://%s:%s/v2'"
op|'%'
op|'('
name|'self'
op|'.'
name|'osapi'
op|'.'
name|'host'
op|','
name|'self'
op|'.'
name|'osapi'
op|'.'
name|'port'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'self'
op|'.'
name|'auth_url'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_flags
dedent|''
name|'def'
name|'_get_flags'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'f'
op|'='
name|'super'
op|'('
name|'MultiprocessOSAPIComputeTest'
op|','
name|'self'
op|')'
op|'.'
name|'_get_flags'
op|'('
op|')'
newline|'\n'
name|'f'
op|'['
string|"'osapi_compute_workers'"
op|']'
op|'='
number|'2'
newline|'\n'
name|'return'
name|'f'
newline|'\n'
nl|'\n'
DECL|member|test_osapi_compute
dedent|''
name|'def'
name|'test_osapi_compute'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavors'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_flavors'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'flavors'
op|')'
op|'>'
number|'0'
op|','
string|"'Num of flavors > 0.'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MultiprocessOSAPIVolumesTest
dedent|''
dedent|''
name|'class'
name|'MultiprocessOSAPIVolumesTest'
op|'('
name|'integrated_helpers'
op|'.'
name|'_IntegratedTestBase'
op|')'
op|':'
newline|'\n'
DECL|member|_start_api_service
indent|'    '
name|'def'
name|'_start_api_service'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'osapi'
op|'='
name|'service'
op|'.'
name|'WSGIService'
op|'('
string|'"osapi_volume"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'osapi'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'auth_url'
op|'='
string|"'http://%s:%s/v1'"
op|'%'
op|'('
name|'self'
op|'.'
name|'osapi'
op|'.'
name|'host'
op|','
name|'self'
op|'.'
name|'osapi'
op|'.'
name|'port'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'self'
op|'.'
name|'auth_url'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_flags
dedent|''
name|'def'
name|'_get_flags'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'f'
op|'='
name|'super'
op|'('
name|'MultiprocessOSAPIVolumesTest'
op|','
name|'self'
op|')'
op|'.'
name|'_get_flags'
op|'('
op|')'
newline|'\n'
name|'f'
op|'['
string|"'osapi_volume_workers'"
op|']'
op|'='
number|'2'
newline|'\n'
name|'f'
op|'['
string|"'use_local_volumes'"
op|']'
op|'='
name|'False'
comment|'# Avoids calling local_path'
newline|'\n'
name|'f'
op|'['
string|"'volume_driver'"
op|']'
op|'='
string|"'nova.volume.driver.LoggingVolumeDriver'"
newline|'\n'
name|'return'
name|'f'
newline|'\n'
nl|'\n'
DECL|member|test_create_volumes
dedent|''
name|'def'
name|'test_create_volumes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create Volume with API"""'
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'volume'"
op|':'
op|'{'
string|"'size'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'display_name'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'display_description'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'volume_type'"
op|':'
name|'None'
op|'}'
op|'}'
newline|'\n'
name|'created_volume'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_volume'
op|'('
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'created_volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MultiprocessWSGITest
dedent|''
dedent|''
name|'class'
name|'MultiprocessWSGITest'
op|'('
name|'integrated_helpers'
op|'.'
name|'_IntegratedTestBase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'workers'
op|'='
number|'4'
newline|'\n'
name|'super'
op|'('
name|'MultiprocessWSGITest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_start_api_service
dedent|''
name|'def'
name|'_start_api_service'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'osapi'
op|'='
name|'service'
op|'.'
name|'WSGIService'
op|'('
string|'"osapi_compute"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'osapi'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'master_worker_pid'
op|'='
name|'self'
op|'.'
name|'osapi'
op|'.'
name|'server'
op|'.'
name|'master_worker'
op|'.'
name|'pid'
newline|'\n'
name|'LOG'
op|'.'
name|'warn'
op|'('
string|"'Master_work pid is: %d'"
op|'%'
name|'self'
op|'.'
name|'master_worker_pid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'auth_url'
op|'='
string|"'http://%s:%s/v2'"
op|'%'
op|'('
name|'self'
op|'.'
name|'osapi'
op|'.'
name|'host'
op|','
name|'self'
op|'.'
name|'osapi'
op|'.'
name|'port'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'self'
op|'.'
name|'auth_url'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_flags
dedent|''
name|'def'
name|'_get_flags'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'f'
op|'='
name|'super'
op|'('
name|'MultiprocessWSGITest'
op|','
name|'self'
op|')'
op|'.'
name|'_get_flags'
op|'('
op|')'
newline|'\n'
name|'f'
op|'['
string|"'osapi_compute_workers'"
op|']'
op|'='
name|'self'
op|'.'
name|'workers'
newline|'\n'
name|'return'
name|'f'
newline|'\n'
nl|'\n'
DECL|member|test_killed_worker_recover
dedent|''
name|'def'
name|'test_killed_worker_recover'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# kill one worker and check if new worker can come up'
nl|'\n'
indent|'        '
name|'f'
op|'='
name|'os'
op|'.'
name|'popen'
op|'('
string|"'ps --no-headers --ppid %d'"
op|'%'
name|'self'
op|'.'
name|'master_worker_pid'
op|')'
newline|'\n'
name|'children_pid'
op|'='
name|'f'
op|'.'
name|'readline'
op|'('
op|')'
op|'.'
name|'split'
op|'('
op|')'
newline|'\n'
name|'for'
name|'pid'
name|'in'
name|'children_pid'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'warn'
op|'('
string|"'pid of first child is %s'"
op|'%'
name|'pid'
op|')'
newline|'\n'
name|'if'
name|'pid'
op|'.'
name|'isdigit'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'os'
op|'.'
name|'kill'
op|'('
name|'int'
op|'('
name|'pid'
op|')'
op|','
name|'signal'
op|'.'
name|'SIGTERM'
op|')'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
comment|'# wait for new worker'
nl|'\n'
dedent|''
dedent|''
name|'time'
op|'.'
name|'sleep'
op|'('
number|'1.5'
op|')'
newline|'\n'
name|'f'
op|'='
name|'os'
op|'.'
name|'popen'
op|'('
string|"'ps --no-headers --ppid %d|wc -l'"
op|'%'
nl|'\n'
name|'self'
op|'.'
name|'master_worker_pid'
op|')'
newline|'\n'
name|'workers'
op|'='
name|'f'
op|'.'
name|'readline'
op|'('
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'warn'
op|'('
string|"'# of workers: %s'"
op|'%'
name|'workers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'int'
op|'('
name|'workers'
op|')'
op|','
name|'self'
op|'.'
name|'workers'
op|','
nl|'\n'
string|"'Num of children = %d.'"
op|'%'
name|'self'
op|'.'
name|'workers'
op|')'
newline|'\n'
name|'flavors'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_flavors'
op|'('
op|')'
newline|'\n'
comment|'# check if api service works'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'flavors'
op|')'
op|'>'
number|'0'
op|','
string|"'Num of flavors > 0.'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_terminate_api_with_signal
dedent|''
name|'def'
name|'test_terminate_api_with_signal'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# check if api service is working'
nl|'\n'
indent|'        '
name|'flavors'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_flavors'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'flavors'
op|')'
op|'>'
number|'0'
op|','
string|"'Num of flavors > 0.'"
op|')'
newline|'\n'
comment|'# send SIGTERM to master_worker will terminate service'
nl|'\n'
name|'os'
op|'.'
name|'kill'
op|'('
name|'self'
op|'.'
name|'master_worker_pid'
op|','
name|'signal'
op|'.'
name|'SIGTERM'
op|')'
newline|'\n'
name|'time'
op|'.'
name|'sleep'
op|'('
number|'1.5'
op|')'
newline|'\n'
comment|"# check if service is still available (shouldn't be)"
nl|'\n'
comment|'#"""'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_flavors'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fail'
op|'('
string|"'API service should have been terminated'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'exc_value'
op|'='
name|'sys'
op|'.'
name|'exc_info'
op|'('
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'Connection refused'"
name|'in'
name|'exc_value'
name|'or'
nl|'\n'
string|"'ECONNREFUSED'"
name|'in'
name|'exc_value'
op|')'
newline|'\n'
comment|'#"""'
nl|'\n'
comment|'#self.api.get_flavors()'
nl|'\n'
comment|'# check there is no OS processes left over'
nl|'\n'
dedent|''
name|'f'
op|'='
name|'os'
op|'.'
name|'popen'
op|'('
string|"'ps --no-headers --ppid %d'"
op|'%'
name|'self'
op|'.'
name|'master_worker_pid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'f'
op|'.'
name|'readline'
op|'('
op|')'
op|','
string|"''"
op|','
string|"'No OS processes left.'"
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
