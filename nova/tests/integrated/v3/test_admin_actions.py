begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
comment|'# Copyright 2012 Nebula, Inc.'
nl|'\n'
comment|'# Copyright 2013 IBM Corp.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'conductor'
name|'import'
name|'manager'
name|'as'
name|'conductor_manager'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
name|'import'
name|'fake'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'integrated'
op|'.'
name|'v3'
name|'import'
name|'test_servers'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AdminActionsSamplesJsonTest
name|'class'
name|'AdminActionsSamplesJsonTest'
op|'('
name|'test_servers'
op|'.'
name|'ServersSampleBase'
op|')'
op|':'
newline|'\n'
DECL|variable|extension_name
indent|'    '
name|'extension_name'
op|'='
string|'"os-admin-actions"'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""setUp Method for AdminActions api samples extension\n\n        This method creates the server that will be used in each tests\n        """'
newline|'\n'
name|'super'
op|'('
name|'AdminActionsSamplesJsonTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'uuid'
op|'='
name|'self'
op|'.'
name|'_post_server'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_post_suspend
dedent|''
name|'def'
name|'test_post_suspend'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Get api samples to suspend server request.'
nl|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_post'
op|'('
string|"'servers/%s/action'"
op|'%'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'admin-actions-suspend'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'.'
name|'status'
op|','
number|'202'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_post_resume
dedent|''
name|'def'
name|'test_post_resume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Get api samples to server resume request.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'test_post_suspend'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_post'
op|'('
string|"'servers/%s/action'"
op|'%'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'admin-actions-resume'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'.'
name|'status'
op|','
number|'202'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_post_migrate
dedent|''
name|'def'
name|'test_post_migrate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Get api samples to migrate server request.'
nl|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_post'
op|'('
string|"'servers/%s/action'"
op|'%'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'admin-actions-migrate'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'.'
name|'status'
op|','
number|'202'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_post_reset_network
dedent|''
name|'def'
name|'test_post_reset_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Get api samples to reset server network request.'
nl|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_post'
op|'('
string|"'servers/%s/action'"
op|'%'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'admin-actions-reset-network'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'.'
name|'status'
op|','
number|'202'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_post_inject_network_info
dedent|''
name|'def'
name|'test_post_inject_network_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Get api samples to inject network info request.'
nl|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_post'
op|'('
string|"'servers/%s/action'"
op|'%'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'admin-actions-inject-network-info'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'.'
name|'status'
op|','
number|'202'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_post_backup_server
dedent|''
name|'def'
name|'test_post_backup_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Get api samples to backup server request.'
nl|'\n'
DECL|function|image_details
indent|'        '
name|'def'
name|'image_details'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""This stub is specifically used on the backup action."""'
newline|'\n'
comment|"# NOTE(maurosr): I've added this simple stub cause backup action"
nl|'\n'
comment|'# was trapped in infinite loop during fetch image phase since the'
nl|'\n'
comment|'# fake Image Service always returns the same set of images'
nl|'\n'
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'detail'"
op|','
name|'image_details'
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_post'
op|'('
string|"'servers/%s/action'"
op|'%'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'admin-actions-backup-server'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'.'
name|'status'
op|','
number|'202'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_post_live_migrate_server
dedent|''
name|'def'
name|'test_post_live_migrate_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Get api samples to server live migrate request.'
nl|'\n'
DECL|function|fake_live_migrate
indent|'        '
name|'def'
name|'fake_live_migrate'
op|'('
name|'_self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'scheduler_hint'
op|','
nl|'\n'
name|'block_migration'
op|','
name|'disk_over_commit'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'uuid'
op|','
name|'instance'
op|'['
string|'"uuid"'
op|']'
op|')'
newline|'\n'
name|'host'
op|'='
name|'scheduler_hint'
op|'['
string|'"host"'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'conductor_manager'
op|'.'
name|'ComputeTaskManager'
op|','
nl|'\n'
string|"'_live_migrate'"
op|','
nl|'\n'
name|'fake_live_migrate'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_compute
name|'def'
name|'fake_get_compute'
op|'('
name|'context'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'service'
op|'='
name|'dict'
op|'('
name|'host'
op|'='
name|'host'
op|','
nl|'\n'
name|'binary'
op|'='
string|"'nova-compute'"
op|','
nl|'\n'
name|'topic'
op|'='
string|"'compute'"
op|','
nl|'\n'
name|'report_count'
op|'='
number|'1'
op|','
nl|'\n'
name|'updated_at'
op|'='
string|"'foo'"
op|','
nl|'\n'
name|'hypervisor_type'
op|'='
string|"'bar'"
op|','
nl|'\n'
name|'hypervisor_version'
op|'='
string|"'1'"
op|','
nl|'\n'
name|'disabled'
op|'='
name|'False'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'compute_node'"
op|':'
op|'['
name|'service'
op|']'
op|'}'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|'"service_get_by_compute_host"'
op|','
name|'fake_get_compute'
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_post'
op|'('
string|"'servers/%s/action'"
op|'%'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'admin-actions-live-migrate'"
op|','
nl|'\n'
op|'{'
string|"'hostname'"
op|':'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'.'
name|'status'
op|','
number|'202'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_post_reset_state
dedent|''
name|'def'
name|'test_post_reset_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# get api samples to server reset state request.'
nl|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_post'
op|'('
string|"'servers/%s/action'"
op|'%'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'admin-actions-reset-server-state'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'.'
name|'status'
op|','
number|'202'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
