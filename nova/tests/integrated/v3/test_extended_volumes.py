begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
comment|'# Copyright 2012 Nebula, Inc.'
nl|'\n'
comment|'# Copyright 2013 IBM Corp.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'api'
name|'as'
name|'compute_api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'manager'
name|'as'
name|'compute_manager'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'fakes'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'integrated'
op|'.'
name|'v3'
name|'import'
name|'test_servers'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'volume'
name|'import'
name|'cinder'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ExtendedVolumesSampleJsonTests
name|'class'
name|'ExtendedVolumesSampleJsonTests'
op|'('
name|'test_servers'
op|'.'
name|'ServersSampleBase'
op|')'
op|':'
newline|'\n'
DECL|variable|extension_name
indent|'    '
name|'extension_name'
op|'='
string|'"os-extended-volumes"'
newline|'\n'
nl|'\n'
DECL|member|_stub_compute_api_get_instance_bdms
name|'def'
name|'_stub_compute_api_get_instance_bdms'
op|'('
name|'self'
op|','
name|'server_id'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_compute_api_get_instance_bdms
indent|'        '
name|'def'
name|'fake_compute_api_get_instance_bdms'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'bdms'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
string|"'a26887c6-c47b-4654-abb5-dfadf7d3f803'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'server_id'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdd'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
string|"'a26887c6-c47b-4654-abb5-dfadf7d3f804'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'server_id'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdc'"
op|'}'
nl|'\n'
op|']'
newline|'\n'
name|'return'
name|'bdms'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|'"get_instance_bdms"'
op|','
nl|'\n'
name|'fake_compute_api_get_instance_bdms'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_swap_volume
dedent|''
name|'def'
name|'test_swap_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server_id'
op|'='
name|'self'
op|'.'
name|'_post_server'
op|'('
op|')'
newline|'\n'
name|'old_volume_id'
op|'='
string|'"a26887c6-c47b-4654-abb5-dfadf7d3f803"'
newline|'\n'
name|'old_new_volume'
op|'='
string|"'a26887c6-c47b-4654-abb5-dfadf7d3f805'"
newline|'\n'
name|'self'
op|'.'
name|'_stub_compute_api_get_instance_bdms'
op|'('
name|'server_id'
op|')'
newline|'\n'
nl|'\n'
DECL|function|stub_volume_get
name|'def'
name|'stub_volume_get'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'volume_id'
op|'=='
name|'old_volume_id'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'fakes'
op|'.'
name|'stub_volume'
op|'('
name|'volume_id'
op|','
name|'instance_uuid'
op|'='
name|'server_id'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'fakes'
op|'.'
name|'stub_volume'
op|'('
name|'volume_id'
op|','
name|'instance_uuid'
op|'='
name|'None'
op|','
nl|'\n'
name|'attach_status'
op|'='
string|"'detached'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'cinder'
op|'.'
name|'API'
op|','
string|"'get'"
op|','
name|'stub_volume_get'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'cinder'
op|'.'
name|'API'
op|','
string|"'begin_detaching'"
op|','
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'cinder'
op|'.'
name|'API'
op|','
string|"'check_attach'"
op|','
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'cinder'
op|'.'
name|'API'
op|','
string|"'check_detach'"
op|','
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'cinder'
op|'.'
name|'API'
op|','
string|"'reserve_volume'"
op|','
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_manager'
op|'.'
name|'ComputeManager'
op|','
string|"'swap_volume'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|':'
name|'None'
op|')'
newline|'\n'
name|'subs'
op|'='
op|'{'
nl|'\n'
string|"'old_volume_id'"
op|':'
name|'old_volume_id'
op|','
nl|'\n'
string|"'new_volume_id'"
op|':'
name|'old_new_volume'
nl|'\n'
op|'}'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_post'
op|'('
string|"'servers/%s/action'"
op|'%'
name|'server_id'
op|','
nl|'\n'
string|"'swap-volume-req'"
op|','
name|'subs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'.'
name|'status'
op|','
number|'202'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'.'
name|'read'
op|'('
op|')'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ExtendedVolumesSampleXmlTests
dedent|''
dedent|''
name|'class'
name|'ExtendedVolumesSampleXmlTests'
op|'('
name|'ExtendedVolumesSampleJsonTests'
op|')'
op|':'
newline|'\n'
DECL|variable|ctype
indent|'    '
name|'ctype'
op|'='
string|"'xml'"
newline|'\n'
dedent|''
endmarker|''
end_unit
