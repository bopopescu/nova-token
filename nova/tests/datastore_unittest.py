begin_unit
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'datastore'
newline|'\n'
name|'import'
name|'random'
newline|'\n'
nl|'\n'
DECL|class|KeeperTestCase
name|'class'
name|'KeeperTestCase'
op|'('
name|'test'
op|'.'
name|'BaseTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Basic persistence tests for Keeper datastore.\n    Generalize, then use these to support\n    migration to redis / cassandra / multiple stores.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create a new keeper instance for test keys.\n        """'
newline|'\n'
name|'super'
op|'('
name|'KeeperTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'keeper'
op|'='
name|'datastore'
op|'.'
name|'Keeper'
op|'('
string|"'test-'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|tear_down
dedent|''
name|'def'
name|'tear_down'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Scrub out test keeper data.\n        """'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_store_strings
dedent|''
name|'def'
name|'test_store_strings'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Confirm that simple strings go in and come out safely.\n        Should also test unicode strings.\n        """'
newline|'\n'
name|'randomstring'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
nl|'\n'
op|'['
name|'random'
op|'.'
name|'choice'
op|'('
string|"'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890-'"
op|')'
nl|'\n'
name|'for'
name|'_x'
name|'in'
name|'xrange'
op|'('
number|'20'
op|')'
op|']'
nl|'\n'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'keeper'
op|'['
string|"'test_string'"
op|']'
op|'='
name|'randomstring'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'randomstring'
op|','
name|'self'
op|'.'
name|'keeper'
op|'['
string|"'test_string'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_store_dicts
dedent|''
name|'def'
name|'test_store_dicts'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Arbitrary dictionaries should be storable.\n        """'
newline|'\n'
name|'test_dict'
op|'='
op|'{'
string|"'key_one'"
op|':'
string|"'value_one'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'keeper'
op|'['
string|"'test_dict'"
op|']'
op|'='
name|'test_dict'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'test_dict'
op|'['
string|"'key_one'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'keeper'
op|'['
string|"'test_dict'"
op|']'
op|'['
string|"'key_one'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sets
dedent|''
name|'def'
name|'test_sets'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A keeper dict should be self-serializing.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'keeper'
op|'.'
name|'set_add'
op|'('
string|"'test_set'"
op|','
string|"'foo'"
op|')'
newline|'\n'
name|'test_dict'
op|'='
op|'{'
string|"'arbitrary'"
op|':'
string|"'dict of stuff'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'keeper'
op|'.'
name|'set_add'
op|'('
string|"'test_set'"
op|','
name|'test_dict'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'keeper'
op|'.'
name|'set_is_member'
op|'('
string|"'test_set'"
op|','
string|"'foo'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'keeper'
op|'.'
name|'set_is_member'
op|'('
string|"'test_set'"
op|','
string|"'bar'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'keeper'
op|'.'
name|'set_remove'
op|'('
string|"'test_set'"
op|','
string|"'foo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'keeper'
op|'.'
name|'set_is_member'
op|'('
string|"'test_set'"
op|','
string|"'foo'"
op|')'
op|')'
newline|'\n'
name|'rv'
op|'='
name|'self'
op|'.'
name|'keeper'
op|'.'
name|'set_fetch'
op|'('
string|"'test_set'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'test_dict'
op|','
name|'rv'
op|'.'
name|'next'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'keeper'
op|'.'
name|'set_remove'
op|'('
string|"'test_set'"
op|','
name|'test_dict'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
