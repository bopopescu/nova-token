begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Copyright 2010 OpenStack LLC'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'base64'
newline|'\n'
name|'import'
name|'netaddr'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'traceback'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'manager'
name|'import'
name|'ComputeManager'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'image'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'importutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'utils'
name|'as'
name|'test_utils'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|catch_notimplementederror
name|'def'
name|'catch_notimplementederror'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Decorator to simplify catching drivers raising NotImplementedError\n\n    If a particular call makes a driver raise NotImplementedError, we\n    log it so that we can extract this information afterwards to\n    automatically generate a hypervisor/feature support matrix."""'
newline|'\n'
DECL|function|wrapped_func
name|'def'
name|'wrapped_func'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'f'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'NotImplementedError'
op|':'
newline|'\n'
indent|'            '
name|'frame'
op|'='
name|'traceback'
op|'.'
name|'extract_tb'
op|'('
name|'sys'
op|'.'
name|'exc_info'
op|'('
op|')'
op|'['
number|'2'
op|']'
op|')'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'LOG'
op|'.'
name|'error'
op|'('
string|"'%(driver)s does not implement %(method)s'"
op|'%'
op|'{'
nl|'\n'
string|"'driver'"
op|':'
name|'type'
op|'('
name|'self'
op|'.'
name|'connection'
op|')'
op|','
nl|'\n'
string|"'method'"
op|':'
name|'frame'
op|'['
number|'2'
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'wrapped_func'
op|'.'
name|'__name__'
op|'='
name|'f'
op|'.'
name|'__name__'
newline|'\n'
name|'wrapped_func'
op|'.'
name|'__doc__'
op|'='
name|'f'
op|'.'
name|'__doc__'
newline|'\n'
name|'return'
name|'wrapped_func'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_FakeDriverBackendTestCase
dedent|''
name|'class'
name|'_FakeDriverBackendTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|_setup_fakelibvirt
indent|'    '
name|'def'
name|'_setup_fakelibvirt'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# So that the _supports_direct_io does the test based'
nl|'\n'
comment|'# on the current working directory, instead of the'
nl|'\n'
comment|"# default instances_path which doesn't exist"
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'instances_path'
op|'='
string|"''"
op|')'
newline|'\n'
nl|'\n'
comment|'# Put fakelibvirt in place'
nl|'\n'
name|'if'
string|"'libvirt'"
name|'in'
name|'sys'
op|'.'
name|'modules'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'saved_libvirt'
op|'='
name|'sys'
op|'.'
name|'modules'
op|'['
string|"'libvirt'"
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'saved_libvirt'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'import'
name|'fake_imagebackend'
newline|'\n'
name|'import'
name|'fake_libvirt_utils'
newline|'\n'
name|'import'
name|'fakelibvirt'
newline|'\n'
nl|'\n'
name|'sys'
op|'.'
name|'modules'
op|'['
string|"'libvirt'"
op|']'
op|'='
name|'fakelibvirt'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'driver'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'firewall'
newline|'\n'
nl|'\n'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'driver'
op|'.'
name|'imagebackend'
op|'='
name|'fake_imagebackend'
newline|'\n'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'driver'
op|'.'
name|'libvirt'
op|'='
name|'fakelibvirt'
newline|'\n'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'driver'
op|'.'
name|'libvirt_utils'
op|'='
name|'fake_libvirt_utils'
newline|'\n'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'firewall'
op|'.'
name|'libvirt'
op|'='
name|'fakelibvirt'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'firewall_driver'
op|'='
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'firewall'
op|'.'
name|'drivers'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'rescue_image_id'
op|'='
string|'"2"'
op|','
nl|'\n'
name|'rescue_kernel_id'
op|'='
string|'"3"'
op|','
nl|'\n'
name|'rescue_ramdisk_id'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_extend
name|'def'
name|'fake_extend'
op|'('
name|'image'
op|','
name|'size'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'driver'
op|'.'
name|'disk'
op|','
nl|'\n'
string|"'extend'"
op|','
name|'fake_extend'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_teardown_fakelibvirt
dedent|''
name|'def'
name|'_teardown_fakelibvirt'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Restore libvirt'
nl|'\n'
indent|'        '
name|'import'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'driver'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'firewall'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'saved_libvirt'
op|':'
newline|'\n'
indent|'            '
name|'sys'
op|'.'
name|'modules'
op|'['
string|"'libvirt'"
op|']'
op|'='
name|'self'
op|'.'
name|'saved_libvirt'
newline|'\n'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'driver'
op|'.'
name|'libvirt'
op|'='
name|'self'
op|'.'
name|'saved_libvirt'
newline|'\n'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'driver'
op|'.'
name|'libvirt_utils'
op|'='
name|'self'
op|'.'
name|'saved_libvirt'
newline|'\n'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
op|'.'
name|'firewall'
op|'.'
name|'libvirt'
op|'='
name|'self'
op|'.'
name|'saved_libvirt'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'_FakeDriverBackendTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
comment|'# TODO(sdague): it would be nice to do this in a way that only'
nl|'\n'
comment|'# the relevant backends where replaced for tests, though this'
nl|'\n'
comment|'# should not harm anything by doing it for all backends'
nl|'\n'
name|'self'
op|'.'
name|'_setup_fakelibvirt'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_teardown_fakelibvirt'
op|'('
op|')'
newline|'\n'
name|'super'
op|'('
name|'_FakeDriverBackendTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VirtDriverLoaderTestCase
dedent|''
dedent|''
name|'class'
name|'VirtDriverLoaderTestCase'
op|'('
name|'_FakeDriverBackendTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test that ComputeManager can successfully load both\n    old style and new style drivers and end up with the correct\n    final class"""'
newline|'\n'
nl|'\n'
comment|'# if your driver supports being tested in a fake way, it can go here'
nl|'\n'
DECL|variable|new_drivers
name|'new_drivers'
op|'='
op|'{'
nl|'\n'
string|"'nova.virt.fake.FakeDriver'"
op|':'
string|"'FakeDriver'"
op|','
nl|'\n'
string|"'nova.virt.libvirt.LibvirtDriver'"
op|':'
string|"'LibvirtDriver'"
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
comment|'# NOTE(sdague): remove after Folsom release when connection_type'
nl|'\n'
comment|'# is removed'
nl|'\n'
DECL|variable|old_drivers
name|'old_drivers'
op|'='
op|'{'
nl|'\n'
string|"'libvirt'"
op|':'
string|"'LibvirtDriver'"
op|','
nl|'\n'
string|"'fake'"
op|':'
string|"'FakeDriver'"
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_load_new_drivers
name|'def'
name|'test_load_new_drivers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'cls'
op|','
name|'driver'
name|'in'
name|'self'
op|'.'
name|'new_drivers'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flags'
op|'('
name|'compute_driver'
op|'='
name|'cls'
op|')'
newline|'\n'
comment|'# NOTE(sdague) the try block is to make it easier to debug a'
nl|'\n'
comment|'# failure by knowing which driver broke'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'cm'
op|'='
name|'ComputeManager'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Couldn\'t load driver %s - %s"'
op|'%'
op|'('
name|'cls'
op|','
name|'e'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cm'
op|'.'
name|'driver'
op|'.'
name|'__class__'
op|'.'
name|'__name__'
op|','
name|'driver'
op|','
nl|'\n'
string|'"Could\'t load driver %s"'
op|'%'
name|'cls'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(sdague): remove after Folsom release when connection_type'
nl|'\n'
comment|'# is removed'
nl|'\n'
DECL|member|test_load_old_drivers
dedent|''
dedent|''
name|'def'
name|'test_load_old_drivers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# we explicitly use the old default'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'compute_driver'
op|'='
string|"'nova.virt.connection.get_connection'"
op|')'
newline|'\n'
name|'for'
name|'cls'
op|','
name|'driver'
name|'in'
name|'self'
op|'.'
name|'old_drivers'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flags'
op|'('
name|'connection_type'
op|'='
name|'cls'
op|')'
newline|'\n'
comment|'# NOTE(sdague) the try block is to make it easier to debug a'
nl|'\n'
comment|'# failure by knowing which driver broke'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'cm'
op|'='
name|'ComputeManager'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Couldn\'t load connection %s - %s"'
op|'%'
op|'('
name|'cls'
op|','
name|'e'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cm'
op|'.'
name|'driver'
op|'.'
name|'__class__'
op|'.'
name|'__name__'
op|','
name|'driver'
op|','
nl|'\n'
string|'"Could\'t load connection %s"'
op|'%'
name|'cls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fail_to_load_old_drivers
dedent|''
dedent|''
name|'def'
name|'test_fail_to_load_old_drivers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'compute_driver'
op|'='
string|"'nova.virt.connection.get_connection'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'connection_type'
op|'='
string|"'56kmodem'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'VirtDriverNotFound'
op|','
name|'ComputeManager'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fail_to_load_new_drivers
dedent|''
name|'def'
name|'test_fail_to_load_new_drivers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'compute_driver'
op|'='
string|"'nova.virt.amiga'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|_fake_exit
name|'def'
name|'_fake_exit'
op|'('
name|'error'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'sys'
op|','
string|"'exit'"
op|','
name|'_fake_exit'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
name|'ComputeManager'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_VirtDriverTestCase
dedent|''
dedent|''
name|'class'
name|'_VirtDriverTestCase'
op|'('
name|'_FakeDriverBackendTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'_VirtDriverTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'self'
op|'.'
name|'driver_module'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'test_utils'
op|'.'
name|'get_test_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'image_service'
op|'='
name|'image'
op|'.'
name|'get_default_image_service'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_running_instance
dedent|''
name|'def'
name|'_get_running_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'test_utils'
op|'.'
name|'get_test_instance'
op|'('
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'test_utils'
op|'.'
name|'get_test_network_info'
op|'('
op|')'
newline|'\n'
name|'image_info'
op|'='
name|'test_utils'
op|'.'
name|'get_test_image_info'
op|'('
name|'None'
op|','
name|'instance_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'='
name|'instance_ref'
op|','
nl|'\n'
name|'image_meta'
op|'='
name|'image_info'
op|','
nl|'\n'
name|'network_info'
op|'='
name|'network_info'
op|')'
newline|'\n'
name|'return'
name|'instance_ref'
op|','
name|'network_info'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_init_host
name|'def'
name|'test_init_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'connection'
op|'.'
name|'init_host'
op|'('
string|"'myhostname'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_list_instances
name|'def'
name|'test_list_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'connection'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_list_instances_detail
name|'def'
name|'test_list_instances_detail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'connection'
op|'.'
name|'list_instances_detail'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_spawn
name|'def'
name|'test_spawn'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'domains'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'list_instances'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|','
name|'domains'
op|')'
newline|'\n'
nl|'\n'
name|'domains_details'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'list_instances_detail'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|','
op|'['
name|'i'
op|'.'
name|'name'
name|'for'
name|'i'
name|'in'
name|'domains_details'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_snapshot_not_running
name|'def'
name|'test_snapshot_not_running'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'test_utils'
op|'.'
name|'get_test_instance'
op|'('
op|')'
newline|'\n'
name|'img_ref'
op|'='
name|'self'
op|'.'
name|'image_service'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'name'"
op|':'
string|"'snap-1'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotRunning'
op|','
nl|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'snapshot'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance_ref'
op|','
name|'img_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_snapshot_running
name|'def'
name|'test_snapshot_running'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'img_ref'
op|'='
name|'self'
op|'.'
name|'image_service'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'{'
string|"'name'"
op|':'
string|"'snap-1'"
op|'}'
op|')'
newline|'\n'
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'snapshot'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance_ref'
op|','
name|'img_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_reboot
name|'def'
name|'test_reboot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'reboot_type'
op|'='
string|'"SOFT"'
newline|'\n'
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'reboot'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|','
name|'reboot_type'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_get_host_ip_addr
name|'def'
name|'test_get_host_ip_addr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host_ip'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'get_host_ip_addr'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|"# Will raise an exception if it's not a valid IP at all"
nl|'\n'
name|'ip'
op|'='
name|'netaddr'
op|'.'
name|'IPAddress'
op|'('
name|'host_ip'
op|')'
newline|'\n'
nl|'\n'
comment|'# For now, assume IPv4.'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'ip'
op|'.'
name|'version'
op|','
number|'4'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_set_admin_password
name|'def'
name|'test_set_admin_password'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'set_admin_password'
op|'('
name|'instance_ref'
op|','
string|"'p4ssw0rd'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_inject_file
name|'def'
name|'test_inject_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'inject_file'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'base64'
op|'.'
name|'b64encode'
op|'('
string|"'/testfile'"
op|')'
op|','
nl|'\n'
name|'base64'
op|'.'
name|'b64encode'
op|'('
string|"'testcontents'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_agent_update
name|'def'
name|'test_agent_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'agent_update'
op|'('
name|'instance_ref'
op|','
string|"'http://www.openstack.org/'"
op|','
nl|'\n'
string|"'d41d8cd98f00b204e9800998ecf8427e'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_resume_state_on_host_boot
name|'def'
name|'test_resume_state_on_host_boot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'resume_state_on_host_boot'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance_ref'
op|','
nl|'\n'
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_rescue
name|'def'
name|'test_rescue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'rescue'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance_ref'
op|','
name|'network_info'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_unrescue_unrescued_instance
name|'def'
name|'test_unrescue_unrescued_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'unrescue'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_unrescue_rescued_instance
name|'def'
name|'test_unrescue_rescued_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'rescue'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance_ref'
op|','
name|'network_info'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'unrescue'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_poll_rebooting_instances
name|'def'
name|'test_poll_rebooting_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'connection'
op|'.'
name|'poll_rebooting_instances'
op|'('
number|'10'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_poll_rescued_instances
name|'def'
name|'test_poll_rescued_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'connection'
op|'.'
name|'poll_rescued_instances'
op|'('
number|'10'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_migrate_disk_and_power_off
name|'def'
name|'test_migrate_disk_and_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'instance_type_ref'
op|'='
name|'test_utils'
op|'.'
name|'get_test_instance_type'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'migrate_disk_and_power_off'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance_ref'
op|','
string|"'dest_host'"
op|','
name|'instance_type_ref'
op|','
nl|'\n'
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_power_off
name|'def'
name|'test_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'power_off'
op|'('
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_test_power_on_running
name|'def'
name|'test_test_power_on_running'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'power_on'
op|'('
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_test_power_on_powered_off
name|'def'
name|'test_test_power_on_powered_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'power_off'
op|'('
name|'instance_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'power_on'
op|'('
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_pause
name|'def'
name|'test_pause'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'pause'
op|'('
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_unpause_unpaused_instance
name|'def'
name|'test_unpause_unpaused_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'unpause'
op|'('
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_unpause_paused_instance
name|'def'
name|'test_unpause_paused_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'pause'
op|'('
name|'instance_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'unpause'
op|'('
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_suspend
name|'def'
name|'test_suspend'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'suspend'
op|'('
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_resume_unsuspended_instance
name|'def'
name|'test_resume_unsuspended_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'resume'
op|'('
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_resume_suspended_instance
name|'def'
name|'test_resume_suspended_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'suspend'
op|'('
name|'instance_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'resume'
op|'('
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_destroy_instance_nonexistant
name|'def'
name|'test_destroy_instance_nonexistant'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_instance'
op|'='
op|'{'
string|"'id'"
op|':'
number|'42'
op|','
string|"'name'"
op|':'
string|"'I just made this up!'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'bda5fb9e-b347-40e8-8256-42397848cb00'"
op|'}'
newline|'\n'
name|'network_info'
op|'='
name|'test_utils'
op|'.'
name|'get_test_network_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'destroy'
op|'('
name|'fake_instance'
op|','
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_destroy_instance
name|'def'
name|'test_destroy_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'list_instances'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'destroy'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'list_instances'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_get_volume_connector
name|'def'
name|'test_get_volume_connector'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'get_volume_connector'
op|'('
op|'{'
string|"'id'"
op|':'
string|"'fake'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'ip'"
name|'in'
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'initiator'"
name|'in'
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'host'"
name|'in'
name|'result'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_attach_detach_volume
name|'def'
name|'test_attach_detach_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'attach_volume'
op|'('
op|'{'
string|"'driver_volume_type'"
op|':'
string|"'fake'"
op|'}'
op|','
nl|'\n'
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
string|"'/mnt/nova/something'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'detach_volume'
op|'('
op|'{'
string|"'driver_volume_type'"
op|':'
string|"'fake'"
op|'}'
op|','
nl|'\n'
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
string|"'/mnt/nova/something'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_get_info
name|'def'
name|'test_get_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'get_info'
op|'('
name|'instance_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'state'"
op|','
name|'info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'max_mem'"
op|','
name|'info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'mem'"
op|','
name|'info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'num_cpu'"
op|','
name|'info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'cpu_time'"
op|','
name|'info'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_get_info_for_unknown_instance
name|'def'
name|'test_get_info_for_unknown_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'get_info'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'I just made this name up'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_get_diagnostics
name|'def'
name|'test_get_diagnostics'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'get_diagnostics'
op|'('
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_block_stats
name|'def'
name|'test_block_stats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'stats'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'block_stats'
op|'('
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|','
string|"'someid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'stats'
op|')'
op|','
number|'5'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_interface_stats
name|'def'
name|'test_interface_stats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'stats'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'interface_stats'
op|'('
name|'instance_ref'
op|'['
string|"'name'"
op|']'
op|','
string|"'someid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'stats'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_get_console_output
name|'def'
name|'test_get_console_output'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'console_output'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'get_console_output'
op|'('
name|'instance_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'console_output'
op|','
name|'basestring'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_get_vnc_console
name|'def'
name|'test_get_vnc_console'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'vnc_console'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'get_vnc_console'
op|'('
name|'instance_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'internal_access_path'"
op|','
name|'vnc_console'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'host'"
op|','
name|'vnc_console'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'port'"
op|','
name|'vnc_console'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_get_console_pool_info
name|'def'
name|'test_get_console_pool_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'console_pool'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'get_console_pool_info'
op|'('
name|'instance_ref'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'address'"
op|','
name|'console_pool'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'username'"
op|','
name|'console_pool'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'password'"
op|','
name|'console_pool'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_refresh_security_group_rules
name|'def'
name|'test_refresh_security_group_rules'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# FIXME: Create security group and add the instance to it'
nl|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'refresh_security_group_rules'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_refresh_security_group_members
name|'def'
name|'test_refresh_security_group_members'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# FIXME: Create security group and add the instance to it'
nl|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'refresh_security_group_members'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_refresh_provider_fw_rules
name|'def'
name|'test_refresh_provider_fw_rules'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'refresh_provider_fw_rules'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_compare_cpu
name|'def'
name|'test_compare_cpu'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cpu_info'
op|'='
string|'\'\'\'{ "topology": {\n                               "sockets": 1,\n                               "cores": 2,\n                               "threads": 1 },\n                        "features": [\n                            "xtpr",\n                            "tm2",\n                            "est",\n                            "vmx",\n                            "ds_cpl",\n                            "monitor",\n                            "pbe",\n                            "tm",\n                            "ht",\n                            "ss",\n                            "acpi",\n                            "ds",\n                            "vme"],\n                        "arch": "x86_64",\n                        "model": "Penryn",\n                        "vendor": "Intel" }\'\'\''
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'compare_cpu'
op|'('
name|'cpu_info'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_ensure_filtering_for_instance
name|'def'
name|'test_ensure_filtering_for_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'test_utils'
op|'.'
name|'get_test_instance'
op|'('
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'test_utils'
op|'.'
name|'get_test_network_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'ensure_filtering_rules_for_instance'
op|'('
name|'instance_ref'
op|','
nl|'\n'
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_unfilter_instance
name|'def'
name|'test_unfilter_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|'='
name|'test_utils'
op|'.'
name|'get_test_instance'
op|'('
op|')'
newline|'\n'
name|'network_info'
op|'='
name|'test_utils'
op|'.'
name|'get_test_network_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'unfilter_instance'
op|'('
name|'instance_ref'
op|','
name|'network_info'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_live_migration
name|'def'
name|'test_live_migration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_ref'
op|','
name|'network_info'
op|'='
name|'self'
op|'.'
name|'_get_running_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'live_migration'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance_ref'
op|','
string|"'otherhost'"
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|_check_host_status_fields
name|'def'
name|'_check_host_status_fields'
op|'('
name|'self'
op|','
name|'host_status'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'disk_total'"
op|','
name|'host_status'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'disk_used'"
op|','
name|'host_status'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'host_memory_total'"
op|','
name|'host_status'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'host_memory_free'"
op|','
name|'host_status'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_update_host_status
name|'def'
name|'test_update_host_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host_status'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'update_host_status'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_host_status_fields'
op|'('
name|'host_status'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_get_host_stats
name|'def'
name|'test_get_host_stats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host_status'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'get_host_stats'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_host_status_fields'
op|'('
name|'host_status'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_set_host_enabled
name|'def'
name|'test_set_host_enabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'connection'
op|'.'
name|'set_host_enabled'
op|'('
string|"'a useless argument?'"
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_host_power_action_reboot
name|'def'
name|'test_host_power_action_reboot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'connection'
op|'.'
name|'host_power_action'
op|'('
string|"'a useless argument?'"
op|','
string|"'reboot'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_host_power_action_shutdown
name|'def'
name|'test_host_power_action_shutdown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'connection'
op|'.'
name|'host_power_action'
op|'('
string|"'a useless argument?'"
op|','
string|"'shutdown'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_host_power_action_startup
name|'def'
name|'test_host_power_action_startup'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'connection'
op|'.'
name|'host_power_action'
op|'('
string|"'a useless argument?'"
op|','
string|"'startup'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_add_to_aggregate
name|'def'
name|'test_add_to_aggregate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'connection'
op|'.'
name|'add_to_aggregate'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'aggregate'"
op|','
string|"'host'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'catch_notimplementederror'
newline|'\n'
DECL|member|test_remove_from_aggregate
name|'def'
name|'test_remove_from_aggregate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'connection'
op|'.'
name|'remove_from_aggregate'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'aggregate'"
op|','
string|"'host'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AbstractDriverTestCase
dedent|''
dedent|''
name|'class'
name|'AbstractDriverTestCase'
op|'('
name|'_VirtDriverTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'driver'
name|'import'
name|'ComputeDriver'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'driver_module'
op|'='
string|'"nova.virt.driver.ComputeDriver"'
newline|'\n'
nl|'\n'
comment|"# TODO(sdague): the abstract driver doesn't have a constructor,"
nl|'\n'
comment|'# add one now that the loader loads classes directly'
nl|'\n'
DECL|function|__new_init__
name|'def'
name|'__new_init__'
op|'('
name|'self'
op|','
name|'read_only'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'super'
op|'('
name|'ComputeDriver'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'ComputeDriver'
op|'.'
name|'__init__'
op|'='
name|'__new_init__'
newline|'\n'
nl|'\n'
name|'super'
op|'('
name|'AbstractDriverTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeConnectionTestCase
dedent|''
dedent|''
name|'class'
name|'FakeConnectionTestCase'
op|'('
name|'_VirtDriverTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'driver_module'
op|'='
string|"'nova.virt.fake.FakeDriver'"
newline|'\n'
name|'super'
op|'('
name|'FakeConnectionTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LibvirtConnTestCase
dedent|''
dedent|''
name|'class'
name|'LibvirtConnTestCase'
op|'('
name|'_VirtDriverTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Point _VirtDriverTestCase at the right module'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'driver_module'
op|'='
string|"'nova.virt.libvirt.LibvirtDriver'"
newline|'\n'
name|'super'
op|'('
name|'LibvirtConnTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'LibvirtConnTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_force_hard_reboot
dedent|''
name|'def'
name|'test_force_hard_reboot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'libvirt_wait_soft_reboot_seconds'
op|'='
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'test_reboot'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'test'
op|'.'
name|'skip_test'
op|'('
string|'"Test nothing, but this method "'
nl|'\n'
string|'"needed to override superclass."'
op|')'
newline|'\n'
DECL|member|test_migrate_disk_and_power_off
name|'def'
name|'test_migrate_disk_and_power_off'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# there is lack of fake stuff to execute this method. so pass.'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
