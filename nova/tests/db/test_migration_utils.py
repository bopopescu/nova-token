begin_unit
comment|'# Copyright (c) 2013 Boris Pavlovic (boris@pavlovic.me).'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'uuid'
newline|'\n'
name|'import'
name|'warnings'
newline|'\n'
nl|'\n'
name|'from'
name|'migrate'
op|'.'
name|'changeset'
name|'import'
name|'UniqueConstraint'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'dialects'
name|'import'
name|'mysql'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'Boolean'
op|','
name|'Index'
op|','
name|'Integer'
op|','
name|'DateTime'
op|','
name|'String'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'MetaData'
op|','
name|'Table'
op|','
name|'Column'
op|','
name|'ForeignKey'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'engine'
name|'import'
name|'reflection'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'exc'
name|'import'
name|'NoSuchTableError'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'exc'
name|'import'
name|'SAWarning'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'sql'
name|'import'
name|'select'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'types'
name|'import'
name|'UserDefinedType'
op|','
name|'NullType'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'api'
name|'as'
name|'db'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'db'
name|'import'
name|'test_migrations'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CustomType
name|'class'
name|'CustomType'
op|'('
name|'UserDefinedType'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Dummy column type for testing unsupported types."""'
newline|'\n'
DECL|member|get_col_spec
name|'def'
name|'get_col_spec'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|'"CustomType"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestMigrationUtils
dedent|''
dedent|''
name|'class'
name|'TestMigrationUtils'
op|'('
name|'test_migrations'
op|'.'
name|'BaseMigrationTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Class for testing utils that are used in db migrations."""'
newline|'\n'
nl|'\n'
DECL|member|test_delete_from_select
name|'def'
name|'test_delete_from_select'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'table_name'
op|'='
string|'"__test_deletefromselect_table__"'
newline|'\n'
name|'uuidstrs'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'unused'
name|'in'
name|'range'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'uuidstrs'
op|'.'
name|'append'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|'.'
name|'hex'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'key'
op|','
name|'engine'
name|'in'
name|'self'
op|'.'
name|'engines'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
name|'conn'
op|'='
name|'engine'
op|'.'
name|'connect'
op|'('
op|')'
newline|'\n'
name|'test_table'
op|'='
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
nl|'\n'
name|'nullable'
op|'='
name|'False'
op|','
name|'autoincrement'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'uuid'"
op|','
name|'String'
op|'('
number|'36'
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
op|')'
newline|'\n'
name|'test_table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
comment|'# Add 10 rows to table'
nl|'\n'
name|'for'
name|'uuidstr'
name|'in'
name|'uuidstrs'
op|':'
newline|'\n'
indent|'                '
name|'ins_stmt'
op|'='
name|'test_table'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'uuid'
op|'='
name|'uuidstr'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'ins_stmt'
op|')'
newline|'\n'
nl|'\n'
comment|'# Delete 4 rows in one chunk'
nl|'\n'
dedent|''
name|'column'
op|'='
name|'test_table'
op|'.'
name|'c'
op|'.'
name|'id'
newline|'\n'
name|'query_delete'
op|'='
name|'select'
op|'('
op|'['
name|'column'
op|']'
op|','
nl|'\n'
name|'test_table'
op|'.'
name|'c'
op|'.'
name|'id'
op|'<'
number|'5'
op|')'
op|'.'
name|'order_by'
op|'('
name|'column'
op|')'
newline|'\n'
name|'delete_statement'
op|'='
name|'utils'
op|'.'
name|'DeleteFromSelect'
op|'('
name|'test_table'
op|','
nl|'\n'
name|'query_delete'
op|','
name|'column'
op|')'
newline|'\n'
name|'result_delete'
op|'='
name|'conn'
op|'.'
name|'execute'
op|'('
name|'delete_statement'
op|')'
newline|'\n'
comment|'# Verify we delete 4 rows'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result_delete'
op|'.'
name|'rowcount'
op|','
number|'4'
op|')'
newline|'\n'
nl|'\n'
name|'query_all'
op|'='
name|'select'
op|'('
op|'['
name|'test_table'
op|']'
op|')'
op|'.'
name|'where'
op|'('
name|'test_table'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'uuidstrs'
op|')'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'conn'
op|'.'
name|'execute'
op|'('
name|'query_all'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we still have 6 rows in table'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'6'
op|')'
newline|'\n'
nl|'\n'
name|'test_table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_insert_from_select
dedent|''
dedent|''
name|'def'
name|'test_insert_from_select'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'insert_table_name'
op|'='
string|'"__test_insert_to_table__"'
newline|'\n'
name|'select_table_name'
op|'='
string|'"__test_select_from_table__"'
newline|'\n'
name|'uuidstrs'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'unused'
name|'in'
name|'range'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'uuidstrs'
op|'.'
name|'append'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|'.'
name|'hex'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'key'
op|','
name|'engine'
name|'in'
name|'self'
op|'.'
name|'engines'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
name|'conn'
op|'='
name|'engine'
op|'.'
name|'connect'
op|'('
op|')'
newline|'\n'
name|'insert_table'
op|'='
name|'Table'
op|'('
name|'insert_table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
nl|'\n'
name|'nullable'
op|'='
name|'False'
op|','
name|'autoincrement'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'uuid'"
op|','
name|'String'
op|'('
number|'36'
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
op|')'
newline|'\n'
name|'select_table'
op|'='
name|'Table'
op|'('
name|'select_table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
nl|'\n'
name|'nullable'
op|'='
name|'False'
op|','
name|'autoincrement'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'uuid'"
op|','
name|'String'
op|'('
number|'36'
op|')'
op|','
name|'nullable'
op|'='
name|'False'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'insert_table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
name|'select_table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
comment|'# Add 10 rows to select_table'
nl|'\n'
name|'for'
name|'uuidstr'
name|'in'
name|'uuidstrs'
op|':'
newline|'\n'
indent|'                '
name|'ins_stmt'
op|'='
name|'select_table'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'uuid'
op|'='
name|'uuidstr'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'execute'
op|'('
name|'ins_stmt'
op|')'
newline|'\n'
nl|'\n'
comment|'# Select 4 rows in one chunk from select_table'
nl|'\n'
dedent|''
name|'column'
op|'='
name|'select_table'
op|'.'
name|'c'
op|'.'
name|'id'
newline|'\n'
name|'query_insert'
op|'='
name|'select'
op|'('
op|'['
name|'select_table'
op|']'
op|','
nl|'\n'
name|'select_table'
op|'.'
name|'c'
op|'.'
name|'id'
op|'<'
number|'5'
op|')'
op|'.'
name|'order_by'
op|'('
name|'column'
op|')'
newline|'\n'
name|'insert_statement'
op|'='
name|'utils'
op|'.'
name|'InsertFromSelect'
op|'('
name|'insert_table'
op|','
nl|'\n'
name|'query_insert'
op|')'
newline|'\n'
name|'result_insert'
op|'='
name|'conn'
op|'.'
name|'execute'
op|'('
name|'insert_statement'
op|')'
newline|'\n'
comment|'# Verify we insert 4 rows'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result_insert'
op|'.'
name|'rowcount'
op|','
number|'4'
op|')'
newline|'\n'
nl|'\n'
name|'query_all'
op|'='
name|'select'
op|'('
op|'['
name|'insert_table'
op|']'
op|')'
op|'.'
name|'where'
op|'('
name|'insert_table'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
name|'uuidstrs'
op|')'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'conn'
op|'.'
name|'execute'
op|'('
name|'query_all'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Verify we really have 4 rows in insert_table'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
nl|'\n'
name|'insert_table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
name|'select_table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_utils_drop_unique_constraint
dedent|''
dedent|''
name|'def'
name|'test_utils_drop_unique_constraint'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'table_name'
op|'='
string|'"test_utils_drop_unique_constraint"'
newline|'\n'
name|'uc_name'
op|'='
string|"'uniq_foo'"
newline|'\n'
name|'values'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'a'"
op|':'
number|'3'
op|','
string|"'foo'"
op|':'
number|'10'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
string|"'a'"
op|':'
number|'2'
op|','
string|"'foo'"
op|':'
number|'20'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'3'
op|','
string|"'a'"
op|':'
number|'1'
op|','
string|"'foo'"
op|':'
number|'30'
op|'}'
nl|'\n'
op|']'
newline|'\n'
name|'for'
name|'key'
op|','
name|'engine'
name|'in'
name|'self'
op|'.'
name|'engines'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
name|'test_table'
op|'='
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
nl|'\n'
name|'nullable'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'a'"
op|','
name|'Integer'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'foo'"
op|','
name|'Integer'
op|')'
op|','
nl|'\n'
name|'UniqueConstraint'
op|'('
string|"'a'"
op|','
name|'name'
op|'='
string|"'uniq_a'"
op|')'
op|','
nl|'\n'
name|'UniqueConstraint'
op|'('
string|"'foo'"
op|','
name|'name'
op|'='
name|'uc_name'
op|')'
op|')'
newline|'\n'
name|'test_table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'test_table'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'values'
op|')'
newline|'\n'
comment|'# NOTE(boris-42): This method is generic UC dropper.'
nl|'\n'
name|'utils'
op|'.'
name|'drop_unique_constraint'
op|'('
name|'engine'
op|','
name|'table_name'
op|','
name|'uc_name'
op|','
string|"'foo'"
op|')'
newline|'\n'
nl|'\n'
name|'s'
op|'='
name|'test_table'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'order_by'
op|'('
name|'test_table'
op|'.'
name|'c'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'engine'
op|'.'
name|'execute'
op|'('
name|'s'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'values'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'v'
op|'='
name|'values'
op|'['
name|'i'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'('
name|'v'
op|'['
string|"'id'"
op|']'
op|','
name|'v'
op|'['
string|"'a'"
op|']'
op|','
name|'v'
op|'['
string|"'foo'"
op|']'
op|')'
op|','
name|'rows'
op|'['
name|'i'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(boris-42): Update data about Table from DB.'
nl|'\n'
dedent|''
name|'meta'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
name|'test_table'
op|'='
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
name|'constraints'
op|'='
name|'filter'
op|'('
name|'lambda'
name|'c'
op|':'
name|'c'
op|'.'
name|'name'
op|'=='
name|'uc_name'
op|','
nl|'\n'
name|'test_table'
op|'.'
name|'constraints'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'constraints'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'test_table'
op|'.'
name|'constraints'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'test_table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_util_drop_unique_constraint_with_not_supported_sqlite_type
dedent|''
dedent|''
name|'def'
name|'test_util_drop_unique_constraint_with_not_supported_sqlite_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'sqlite'"
name|'in'
name|'self'
op|'.'
name|'engines'
op|':'
newline|'\n'
indent|'            '
name|'engine'
op|'='
name|'self'
op|'.'
name|'engines'
op|'['
string|"'sqlite'"
op|']'
newline|'\n'
name|'meta'
op|'='
name|'MetaData'
op|'('
name|'bind'
op|'='
name|'engine'
op|')'
newline|'\n'
nl|'\n'
name|'table_name'
op|'='
op|'('
string|'"test_util_drop_unique_constraint_with_not_supported"'
nl|'\n'
string|'"_sqlite_type"'
op|')'
newline|'\n'
name|'uc_name'
op|'='
string|"'uniq_foo'"
newline|'\n'
name|'values'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'a'"
op|':'
number|'3'
op|','
string|"'foo'"
op|':'
number|'10'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
string|"'a'"
op|':'
number|'2'
op|','
string|"'foo'"
op|':'
number|'20'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'3'
op|','
string|"'a'"
op|':'
number|'1'
op|','
string|"'foo'"
op|':'
number|'30'
op|'}'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'test_table'
op|'='
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
nl|'\n'
name|'nullable'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'a'"
op|','
name|'Integer'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'foo'"
op|','
name|'CustomType'
op|','
name|'default'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
name|'UniqueConstraint'
op|'('
string|"'a'"
op|','
name|'name'
op|'='
string|"'uniq_a'"
op|')'
op|','
nl|'\n'
name|'UniqueConstraint'
op|'('
string|"'foo'"
op|','
name|'name'
op|'='
name|'uc_name'
op|')'
op|')'
newline|'\n'
name|'test_table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'test_table'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'values'
op|')'
newline|'\n'
name|'warnings'
op|'.'
name|'simplefilter'
op|'('
string|'"ignore"'
op|','
name|'SAWarning'
op|')'
newline|'\n'
comment|'# NOTE(boris-42): Missing info about column `foo` that has'
nl|'\n'
comment|'#                 unsupported type CustomType.'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'drop_unique_constraint'
op|','
nl|'\n'
name|'engine'
op|','
name|'table_name'
op|','
name|'uc_name'
op|','
string|"'foo'"
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(boris-42): Wrong type of foo instance. it should be'
nl|'\n'
comment|'#                 instance of sqlalchemy.Column.'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'drop_unique_constraint'
op|','
nl|'\n'
name|'engine'
op|','
name|'table_name'
op|','
name|'uc_name'
op|','
string|"'foo'"
op|','
nl|'\n'
name|'foo'
op|'='
name|'Integer'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'foo'
op|'='
name|'Column'
op|'('
string|"'foo'"
op|','
name|'CustomType'
op|','
name|'default'
op|'='
number|'0'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'drop_unique_constraint'
op|'('
name|'engine'
op|','
name|'table_name'
op|','
name|'uc_name'
op|','
string|"'foo'"
op|','
nl|'\n'
name|'foo'
op|'='
name|'foo'
op|')'
newline|'\n'
nl|'\n'
name|'s'
op|'='
name|'test_table'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'order_by'
op|'('
name|'test_table'
op|'.'
name|'c'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'engine'
op|'.'
name|'execute'
op|'('
name|'s'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'values'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'v'
op|'='
name|'values'
op|'['
name|'i'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'('
name|'v'
op|'['
string|"'id'"
op|']'
op|','
name|'v'
op|'['
string|"'a'"
op|']'
op|','
name|'v'
op|'['
string|"'foo'"
op|']'
op|')'
op|','
name|'rows'
op|'['
name|'i'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(boris-42): Update data about Table from DB.'
nl|'\n'
dedent|''
name|'meta'
op|'='
name|'MetaData'
op|'('
name|'bind'
op|'='
name|'engine'
op|')'
newline|'\n'
name|'test_table'
op|'='
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
name|'constraints'
op|'='
name|'filter'
op|'('
name|'lambda'
name|'c'
op|':'
name|'c'
op|'.'
name|'name'
op|'=='
name|'uc_name'
op|','
nl|'\n'
name|'test_table'
op|'.'
name|'constraints'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'constraints'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'test_table'
op|'.'
name|'constraints'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'test_table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_populate_db_for_drop_duplicate_entries
dedent|''
name|'def'
name|'_populate_db_for_drop_duplicate_entries'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'meta'
op|','
nl|'\n'
name|'table_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'11'
op|','
string|"'a'"
op|':'
number|'3'
op|','
string|"'b'"
op|':'
number|'10'
op|','
string|"'c'"
op|':'
string|"'abcdef'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'12'
op|','
string|"'a'"
op|':'
number|'5'
op|','
string|"'b'"
op|':'
number|'10'
op|','
string|"'c'"
op|':'
string|"'abcdef'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'13'
op|','
string|"'a'"
op|':'
number|'6'
op|','
string|"'b'"
op|':'
number|'10'
op|','
string|"'c'"
op|':'
string|"'abcdef'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'14'
op|','
string|"'a'"
op|':'
number|'7'
op|','
string|"'b'"
op|':'
number|'10'
op|','
string|"'c'"
op|':'
string|"'abcdef'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'21'
op|','
string|"'a'"
op|':'
number|'1'
op|','
string|"'b'"
op|':'
number|'20'
op|','
string|"'c'"
op|':'
string|"'aa'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'31'
op|','
string|"'a'"
op|':'
number|'1'
op|','
string|"'b'"
op|':'
number|'20'
op|','
string|"'c'"
op|':'
string|"'bb'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'41'
op|','
string|"'a'"
op|':'
number|'1'
op|','
string|"'b'"
op|':'
number|'30'
op|','
string|"'c'"
op|':'
string|"'aef'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'42'
op|','
string|"'a'"
op|':'
number|'2'
op|','
string|"'b'"
op|':'
number|'30'
op|','
string|"'c'"
op|':'
string|"'aef'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'43'
op|','
string|"'a'"
op|':'
number|'3'
op|','
string|"'b'"
op|':'
number|'30'
op|','
string|"'c'"
op|':'
string|"'aef'"
op|'}'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'test_table'
op|'='
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
nl|'\n'
name|'nullable'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'a'"
op|','
name|'Integer'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'b'"
op|','
name|'Integer'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'c'"
op|','
name|'String'
op|'('
number|'255'
op|')'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'deleted'"
op|','
name|'Integer'
op|','
name|'default'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'deleted_at'"
op|','
name|'DateTime'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'updated_at'"
op|','
name|'DateTime'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'test_table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'test_table'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'values'
op|')'
newline|'\n'
name|'return'
name|'test_table'
op|','
name|'values'
newline|'\n'
nl|'\n'
DECL|member|test_drop_old_duplicate_entries_from_table
dedent|''
name|'def'
name|'test_drop_old_duplicate_entries_from_table'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'table_name'
op|'='
string|'"test_drop_old_duplicate_entries_from_table"'
newline|'\n'
nl|'\n'
name|'for'
name|'key'
op|','
name|'engine'
name|'in'
name|'self'
op|'.'
name|'engines'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
name|'test_table'
op|','
name|'values'
op|'='
name|'self'
op|'.'
name|'_populate_db_for_drop_duplicate_entries'
op|'('
name|'engine'
op|','
name|'meta'
op|','
nl|'\n'
name|'table_name'
op|')'
newline|'\n'
nl|'\n'
name|'utils'
op|'.'
name|'drop_old_duplicate_entries_from_table'
op|'('
name|'engine'
op|','
name|'table_name'
op|','
nl|'\n'
name|'False'
op|','
string|"'b'"
op|','
string|"'c'"
op|')'
newline|'\n'
nl|'\n'
name|'uniq_values'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'expected_ids'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'value'
name|'in'
name|'sorted'
op|'('
name|'values'
op|','
name|'key'
op|'='
name|'lambda'
name|'x'
op|':'
name|'x'
op|'['
string|"'id'"
op|']'
op|','
name|'reverse'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'uniq_value'
op|'='
op|'('
op|'('
string|"'b'"
op|','
name|'value'
op|'['
string|"'b'"
op|']'
op|')'
op|','
op|'('
string|"'c'"
op|','
name|'value'
op|'['
string|"'c'"
op|']'
op|')'
op|')'
newline|'\n'
name|'if'
name|'uniq_value'
name|'in'
name|'uniq_values'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
name|'uniq_values'
op|'.'
name|'add'
op|'('
name|'uniq_value'
op|')'
newline|'\n'
name|'expected_ids'
op|'.'
name|'append'
op|'('
name|'value'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'real_ids'
op|'='
op|'['
name|'row'
op|'['
number|'0'
op|']'
name|'for'
name|'row'
name|'in'
nl|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'select'
op|'('
op|'['
name|'test_table'
op|'.'
name|'c'
op|'.'
name|'id'
op|']'
op|')'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'real_ids'
op|')'
op|','
name|'len'
op|'('
name|'expected_ids'
op|')'
op|')'
newline|'\n'
name|'for'
name|'id_'
name|'in'
name|'expected_ids'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'id_'
op|','
name|'real_ids'
op|')'
newline|'\n'
dedent|''
name|'test_table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_drop_old_duplicate_entries_from_table_soft_delete
dedent|''
dedent|''
name|'def'
name|'test_drop_old_duplicate_entries_from_table_soft_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'table_name'
op|'='
string|'"test_drop_old_duplicate_entries_from_table_soft_delete"'
newline|'\n'
nl|'\n'
name|'for'
name|'key'
op|','
name|'engine'
name|'in'
name|'self'
op|'.'
name|'engines'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
name|'table'
op|','
name|'values'
op|'='
name|'self'
op|'.'
name|'_populate_db_for_drop_duplicate_entries'
op|'('
name|'engine'
op|','
name|'meta'
op|','
nl|'\n'
name|'table_name'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'drop_old_duplicate_entries_from_table'
op|'('
name|'engine'
op|','
name|'table_name'
op|','
nl|'\n'
name|'True'
op|','
string|"'b'"
op|','
string|"'c'"
op|')'
newline|'\n'
name|'uniq_values'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'expected_values'
op|'='
op|'['
op|']'
newline|'\n'
name|'soft_deleted_values'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'value'
name|'in'
name|'sorted'
op|'('
name|'values'
op|','
name|'key'
op|'='
name|'lambda'
name|'x'
op|':'
name|'x'
op|'['
string|"'id'"
op|']'
op|','
name|'reverse'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'uniq_value'
op|'='
op|'('
op|'('
string|"'b'"
op|','
name|'value'
op|'['
string|"'b'"
op|']'
op|')'
op|','
op|'('
string|"'c'"
op|','
name|'value'
op|'['
string|"'c'"
op|']'
op|')'
op|')'
newline|'\n'
name|'if'
name|'uniq_value'
name|'in'
name|'uniq_values'
op|':'
newline|'\n'
indent|'                    '
name|'soft_deleted_values'
op|'.'
name|'append'
op|'('
name|'value'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'uniq_values'
op|'.'
name|'add'
op|'('
name|'uniq_value'
op|')'
newline|'\n'
name|'expected_values'
op|'.'
name|'append'
op|'('
name|'value'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'base_select'
op|'='
name|'table'
op|'.'
name|'select'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'rows_select'
op|'='
name|'base_select'
op|'.'
name|'where'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'!='
name|'table'
op|'.'
name|'c'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'row_ids'
op|'='
op|'['
name|'row'
op|'['
string|"'id'"
op|']'
name|'for'
name|'row'
name|'in'
nl|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'rows_select'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'row_ids'
op|')'
op|','
name|'len'
op|'('
name|'expected_values'
op|')'
op|')'
newline|'\n'
name|'for'
name|'value'
name|'in'
name|'expected_values'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'value'
op|'['
string|"'id'"
op|']'
op|','
name|'row_ids'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'deleted_rows_select'
op|'='
name|'base_select'
op|'.'
name|'where'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'=='
name|'table'
op|'.'
name|'c'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'deleted_rows_ids'
op|'='
op|'['
name|'row'
op|'['
string|"'id'"
op|']'
name|'for'
name|'row'
name|'in'
nl|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'deleted_rows_select'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'deleted_rows_ids'
op|')'
op|','
nl|'\n'
name|'len'
op|'('
name|'values'
op|')'
op|'-'
name|'len'
op|'('
name|'row_ids'
op|')'
op|')'
newline|'\n'
name|'for'
name|'value'
name|'in'
name|'soft_deleted_values'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'value'
op|'['
string|"'id'"
op|']'
op|','
name|'deleted_rows_ids'
op|')'
newline|'\n'
dedent|''
name|'table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_shadow_table
dedent|''
dedent|''
name|'def'
name|'test_check_shadow_table'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'table_name'
op|'='
string|"'test_check_shadow_table'"
newline|'\n'
name|'for'
name|'key'
op|','
name|'engine'
name|'in'
name|'self'
op|'.'
name|'engines'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
nl|'\n'
name|'table'
op|'='
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'a'"
op|','
name|'Integer'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'c'"
op|','
name|'String'
op|'('
number|'256'
op|')'
op|')'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'#check missing shadow table'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NoSuchTableError'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'check_shadow_table'
op|','
name|'engine'
op|','
name|'table_name'
op|')'
newline|'\n'
nl|'\n'
name|'shadow_table'
op|'='
name|'Table'
op|'('
name|'db'
op|'.'
name|'_SHADOW_TABLE_PREFIX'
op|'+'
name|'table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'a'"
op|','
name|'Integer'
op|')'
op|')'
newline|'\n'
name|'shadow_table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# check missing column'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'check_shadow_table'
op|','
name|'engine'
op|','
name|'table_name'
op|')'
newline|'\n'
nl|'\n'
comment|'# check when all is ok'
nl|'\n'
name|'c'
op|'='
name|'Column'
op|'('
string|"'c'"
op|','
name|'String'
op|'('
number|'256'
op|')'
op|')'
newline|'\n'
name|'shadow_table'
op|'.'
name|'create_column'
op|'('
name|'c'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'utils'
op|'.'
name|'check_shadow_table'
op|'('
name|'engine'
op|','
name|'table_name'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# check extra column'
nl|'\n'
name|'d'
op|'='
name|'Column'
op|'('
string|"'d'"
op|','
name|'Integer'
op|')'
newline|'\n'
name|'shadow_table'
op|'.'
name|'create_column'
op|'('
name|'d'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'check_shadow_table'
op|','
name|'engine'
op|','
name|'table_name'
op|')'
newline|'\n'
nl|'\n'
name|'table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
name|'shadow_table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_shadow_table_different_types
dedent|''
dedent|''
name|'def'
name|'test_check_shadow_table_different_types'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'table_name'
op|'='
string|"'test_check_shadow_table_different_types'"
newline|'\n'
name|'for'
name|'key'
op|','
name|'engine'
name|'in'
name|'self'
op|'.'
name|'engines'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
nl|'\n'
name|'table'
op|'='
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'a'"
op|','
name|'Integer'
op|')'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'shadow_table'
op|'='
name|'Table'
op|'('
name|'db'
op|'.'
name|'_SHADOW_TABLE_PREFIX'
op|'+'
name|'table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'a'"
op|','
name|'String'
op|'('
number|'256'
op|')'
op|')'
op|')'
newline|'\n'
name|'shadow_table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'check_shadow_table'
op|','
name|'engine'
op|','
name|'table_name'
op|')'
newline|'\n'
nl|'\n'
name|'table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
name|'shadow_table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_check_shadow_table_with_unsupported_type
dedent|''
dedent|''
name|'def'
name|'test_check_shadow_table_with_unsupported_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'table_name'
op|'='
string|"'test_check_shadow_table_with_unsupported_type'"
newline|'\n'
name|'engine'
op|'='
name|'self'
op|'.'
name|'engines'
op|'['
string|"'sqlite'"
op|']'
newline|'\n'
name|'meta'
op|'='
name|'MetaData'
op|'('
name|'bind'
op|'='
name|'engine'
op|')'
newline|'\n'
nl|'\n'
name|'table'
op|'='
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'a'"
op|','
name|'Integer'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'c'"
op|','
name|'CustomType'
op|')'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'shadow_table'
op|'='
name|'Table'
op|'('
name|'db'
op|'.'
name|'_SHADOW_TABLE_PREFIX'
op|'+'
name|'table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'a'"
op|','
name|'Integer'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'c'"
op|','
name|'CustomType'
op|')'
op|')'
newline|'\n'
name|'shadow_table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'utils'
op|'.'
name|'check_shadow_table'
op|'('
name|'engine'
op|','
name|'table_name'
op|')'
op|')'
newline|'\n'
name|'shadow_table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_shadow_table_by_table_instance
dedent|''
name|'def'
name|'test_create_shadow_table_by_table_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'table_name'
op|'='
string|"'test_create_shadow_table_by_table_instance'"
newline|'\n'
name|'for'
name|'key'
op|','
name|'engine'
name|'in'
name|'self'
op|'.'
name|'engines'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
name|'table'
op|'='
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'a'"
op|','
name|'Integer'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'b'"
op|','
name|'String'
op|'('
number|'256'
op|')'
op|')'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
name|'shadow_table'
op|'='
name|'utils'
op|'.'
name|'create_shadow_table'
op|'('
name|'engine'
op|','
name|'table'
op|'='
name|'table'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'utils'
op|'.'
name|'check_shadow_table'
op|'('
name|'engine'
op|','
name|'table_name'
op|')'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
name|'shadow_table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_shadow_table_by_name
dedent|''
dedent|''
name|'def'
name|'test_create_shadow_table_by_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'table_name'
op|'='
string|"'test_create_shadow_table_by_name'"
newline|'\n'
name|'for'
name|'key'
op|','
name|'engine'
name|'in'
name|'self'
op|'.'
name|'engines'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
nl|'\n'
name|'table'
op|'='
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'a'"
op|','
name|'Integer'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'b'"
op|','
name|'String'
op|'('
number|'256'
op|')'
op|')'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
name|'shadow_table'
op|'='
name|'utils'
op|'.'
name|'create_shadow_table'
op|'('
name|'engine'
op|','
nl|'\n'
name|'table_name'
op|'='
name|'table_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'utils'
op|'.'
name|'check_shadow_table'
op|'('
name|'engine'
op|','
name|'table_name'
op|')'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
name|'shadow_table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_shadow_table_not_supported_type
dedent|''
dedent|''
name|'def'
name|'test_create_shadow_table_not_supported_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'sqlite'"
name|'in'
name|'self'
op|'.'
name|'engines'
op|':'
newline|'\n'
indent|'            '
name|'table_name'
op|'='
string|"'test_create_shadow_table_not_supported_type'"
newline|'\n'
name|'engine'
op|'='
name|'self'
op|'.'
name|'engines'
op|'['
string|"'sqlite'"
op|']'
newline|'\n'
name|'meta'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
name|'table'
op|'='
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'a'"
op|','
name|'CustomType'
op|')'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'create_shadow_table'
op|','
nl|'\n'
name|'engine'
op|','
name|'table_name'
op|'='
name|'table_name'
op|')'
newline|'\n'
nl|'\n'
name|'shadow_table'
op|'='
name|'utils'
op|'.'
name|'create_shadow_table'
op|'('
name|'engine'
op|','
nl|'\n'
name|'table_name'
op|'='
name|'table_name'
op|','
nl|'\n'
name|'a'
op|'='
name|'Column'
op|'('
string|"'a'"
op|','
name|'CustomType'
op|'('
op|')'
op|')'
nl|'\n'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'utils'
op|'.'
name|'check_shadow_table'
op|'('
name|'engine'
op|','
name|'table_name'
op|')'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
name|'shadow_table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_shadow_both_table_and_table_name_are_none
dedent|''
dedent|''
name|'def'
name|'test_create_shadow_both_table_and_table_name_are_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'key'
op|','
name|'engine'
name|'in'
name|'self'
op|'.'
name|'engines'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'create_shadow_table'
op|','
name|'engine'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_shadow_both_table_and_table_name_are_specified
dedent|''
dedent|''
name|'def'
name|'test_create_shadow_both_table_and_table_name_are_specified'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'table_name'
op|'='
op|'('
string|"'test_create_shadow_both_table_and_table_name_are_'"
nl|'\n'
string|"'specified'"
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'engine'
name|'in'
name|'self'
op|'.'
name|'engines'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
name|'table'
op|'='
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'a'"
op|','
name|'Integer'
op|')'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'create_shadow_table'
op|','
nl|'\n'
name|'engine'
op|','
name|'table'
op|'='
name|'table'
op|','
name|'table_name'
op|'='
name|'table_name'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_duplicate_shadow_table
dedent|''
dedent|''
name|'def'
name|'test_create_duplicate_shadow_table'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'table_name'
op|'='
string|"'test_create_duplicate_shadow_table'"
newline|'\n'
name|'for'
name|'key'
op|','
name|'engine'
name|'in'
name|'self'
op|'.'
name|'engines'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
name|'table'
op|'='
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'a'"
op|','
name|'Integer'
op|')'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
name|'shadow_table'
op|'='
name|'utils'
op|'.'
name|'create_shadow_table'
op|'('
name|'engine'
op|','
nl|'\n'
name|'table_name'
op|'='
name|'table_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ShadowTableExists'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'create_shadow_table'
op|','
nl|'\n'
name|'engine'
op|','
name|'table_name'
op|'='
name|'table_name'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
name|'shadow_table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_change_deleted_column_type_doesnt_drop_index
dedent|''
dedent|''
name|'def'
name|'test_change_deleted_column_type_doesnt_drop_index'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'table_name'
op|'='
string|"'test_change_deleted_column_type_doesnt_drop_index'"
newline|'\n'
name|'for'
name|'key'
op|','
name|'engine'
name|'in'
name|'self'
op|'.'
name|'engines'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'MetaData'
op|'('
name|'bind'
op|'='
name|'engine'
op|')'
newline|'\n'
nl|'\n'
name|'indexes'
op|'='
op|'{'
nl|'\n'
string|"'idx_a_deleted'"
op|':'
op|'['
string|"'a'"
op|','
string|"'deleted'"
op|']'
op|','
nl|'\n'
string|"'idx_b_deleted'"
op|':'
op|'['
string|"'b'"
op|','
string|"'deleted'"
op|']'
op|','
nl|'\n'
string|"'idx_a'"
op|':'
op|'['
string|"'a'"
op|']'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'index_instances'
op|'='
op|'['
name|'Index'
op|'('
name|'name'
op|','
op|'*'
name|'columns'
op|')'
nl|'\n'
name|'for'
name|'name'
op|','
name|'columns'
name|'in'
name|'indexes'
op|'.'
name|'iteritems'
op|'('
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'table'
op|'='
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'a'"
op|','
name|'String'
op|'('
number|'255'
op|')'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'b'"
op|','
name|'String'
op|'('
number|'255'
op|')'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'deleted'"
op|','
name|'Boolean'
op|')'
op|','
nl|'\n'
op|'*'
name|'index_instances'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'change_deleted_column_type_to_id_type'
op|'('
name|'engine'
op|','
name|'table_name'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'change_deleted_column_type_to_boolean'
op|'('
name|'engine'
op|','
name|'table_name'
op|')'
newline|'\n'
nl|'\n'
name|'insp'
op|'='
name|'reflection'
op|'.'
name|'Inspector'
op|'.'
name|'from_engine'
op|'('
name|'engine'
op|')'
newline|'\n'
name|'real_indexes'
op|'='
name|'insp'
op|'.'
name|'get_indexes'
op|'('
name|'table_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'real_indexes'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
name|'for'
name|'index'
name|'in'
name|'real_indexes'
op|':'
newline|'\n'
indent|'                '
name|'name'
op|'='
name|'index'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'name'
op|','
name|'indexes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
name|'index'
op|'['
string|"'column_names'"
op|']'
op|')'
op|','
nl|'\n'
name|'set'
op|'('
name|'indexes'
op|'['
name|'name'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_change_deleted_column_type_to_id_type_integer
dedent|''
dedent|''
name|'def'
name|'test_change_deleted_column_type_to_id_type_integer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'table_name'
op|'='
string|"'test_change_deleted_column_type_to_id_type_integer'"
newline|'\n'
name|'for'
name|'key'
op|','
name|'engine'
name|'in'
name|'self'
op|'.'
name|'engines'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
name|'table'
op|'='
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'deleted'"
op|','
name|'Boolean'
op|')'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'change_deleted_column_type_to_id_type'
op|'('
name|'engine'
op|','
name|'table_name'
op|')'
newline|'\n'
nl|'\n'
name|'table'
op|'='
name|'utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'table_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'.'
name|'type'
op|','
name|'Integer'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_change_deleted_column_type_to_id_type_string
dedent|''
dedent|''
name|'def'
name|'test_change_deleted_column_type_to_id_type_string'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'table_name'
op|'='
string|"'test_change_deleted_column_type_to_id_type_string'"
newline|'\n'
name|'for'
name|'key'
op|','
name|'engine'
name|'in'
name|'self'
op|'.'
name|'engines'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
name|'table'
op|'='
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'String'
op|'('
number|'255'
op|')'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'deleted'"
op|','
name|'Boolean'
op|')'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'change_deleted_column_type_to_id_type'
op|'('
name|'engine'
op|','
name|'table_name'
op|')'
newline|'\n'
nl|'\n'
name|'table'
op|'='
name|'utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'table_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'.'
name|'type'
op|','
name|'String'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_change_deleted_column_type_to_id_type_custom
dedent|''
dedent|''
name|'def'
name|'test_change_deleted_column_type_to_id_type_custom'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'sqlite'"
name|'in'
name|'self'
op|'.'
name|'engines'
op|':'
newline|'\n'
indent|'            '
name|'table_name'
op|'='
string|"'test_change_deleted_column_type_to_id_type_custom'"
newline|'\n'
name|'engine'
op|'='
name|'self'
op|'.'
name|'engines'
op|'['
string|"'sqlite'"
op|']'
newline|'\n'
name|'meta'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
name|'table'
op|'='
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'foo'"
op|','
name|'CustomType'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'deleted'"
op|','
name|'Boolean'
op|')'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'change_deleted_column_type_to_id_type'
op|','
nl|'\n'
name|'engine'
op|','
name|'table_name'
op|')'
newline|'\n'
nl|'\n'
name|'fooColumn'
op|'='
name|'Column'
op|'('
string|"'foo'"
op|','
name|'CustomType'
op|'('
op|')'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'change_deleted_column_type_to_id_type'
op|'('
name|'engine'
op|','
name|'table_name'
op|','
nl|'\n'
name|'foo'
op|'='
name|'fooColumn'
op|')'
newline|'\n'
nl|'\n'
name|'table'
op|'='
name|'utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'table_name'
op|')'
newline|'\n'
comment|'# NOTE(boris-42): There is no way to check has foo type CustomType.'
nl|'\n'
comment|'#                 but sqlalchemy will set it to NullType.'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'foo'
op|'.'
name|'type'
op|','
name|'NullType'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'.'
name|'type'
op|','
name|'Integer'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_change_deleted_column_type_to_boolean
dedent|''
dedent|''
name|'def'
name|'test_change_deleted_column_type_to_boolean'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'table_name'
op|'='
string|"'test_change_deleted_column_type_to_boolean'"
newline|'\n'
name|'for'
name|'key'
op|','
name|'engine'
name|'in'
name|'self'
op|'.'
name|'engines'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
name|'table'
op|'='
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'deleted'"
op|','
name|'Integer'
op|')'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'utils'
op|'.'
name|'change_deleted_column_type_to_boolean'
op|'('
name|'engine'
op|','
name|'table_name'
op|')'
newline|'\n'
nl|'\n'
name|'table'
op|'='
name|'utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'table_name'
op|')'
newline|'\n'
name|'expected_type'
op|'='
name|'Boolean'
name|'if'
name|'key'
op|'!='
string|'"mysql"'
name|'else'
name|'mysql'
op|'.'
name|'TINYINT'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'.'
name|'type'
op|','
name|'expected_type'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_change_deleted_column_type_to_boolean_type_custom
dedent|''
dedent|''
name|'def'
name|'test_change_deleted_column_type_to_boolean_type_custom'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'sqlite'"
name|'in'
name|'self'
op|'.'
name|'engines'
op|':'
newline|'\n'
indent|'            '
name|'table_name'
op|'='
string|"'test_change_deleted_column_type_to_boolean_type_custom'"
newline|'\n'
name|'engine'
op|'='
name|'self'
op|'.'
name|'engines'
op|'['
string|"'sqlite'"
op|']'
newline|'\n'
name|'meta'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
name|'table'
op|'='
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'foo'"
op|','
name|'CustomType'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'deleted'"
op|','
name|'Integer'
op|')'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NovaException'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'change_deleted_column_type_to_boolean'
op|','
nl|'\n'
name|'engine'
op|','
name|'table_name'
op|')'
newline|'\n'
nl|'\n'
name|'fooColumn'
op|'='
name|'Column'
op|'('
string|"'foo'"
op|','
name|'CustomType'
op|'('
op|')'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'change_deleted_column_type_to_boolean'
op|'('
name|'engine'
op|','
name|'table_name'
op|','
nl|'\n'
name|'foo'
op|'='
name|'fooColumn'
op|')'
newline|'\n'
nl|'\n'
name|'table'
op|'='
name|'utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'table_name'
op|')'
newline|'\n'
comment|'# NOTE(boris-42): There is no way to check has foo type CustomType.'
nl|'\n'
comment|'#                 but sqlalchemy will set it to NullType.'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'foo'
op|'.'
name|'type'
op|','
name|'NullType'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'.'
name|'type'
op|','
name|'Boolean'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_drop_unique_constraint_in_sqlite_fk_recreate
dedent|''
dedent|''
name|'def'
name|'test_drop_unique_constraint_in_sqlite_fk_recreate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'sqlite'"
name|'in'
name|'self'
op|'.'
name|'engines'
op|':'
newline|'\n'
indent|'            '
name|'engine'
op|'='
name|'self'
op|'.'
name|'engines'
op|'['
string|"'sqlite'"
op|']'
newline|'\n'
name|'meta'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
name|'parent_table_name'
op|'='
op|'('
string|"'test_drop_unique_constraint_in_sqlite_fk_'"
nl|'\n'
string|"'recreate_parent_table'"
op|')'
newline|'\n'
name|'parent_table'
op|'='
name|'Table'
op|'('
name|'parent_table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'foo'"
op|','
name|'Integer'
op|')'
op|')'
newline|'\n'
name|'parent_table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
name|'table_name'
op|'='
string|"'test_drop_unique_constraint_in_sqlite_fk_recreate'"
newline|'\n'
name|'table'
op|'='
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'baz'"
op|','
name|'Integer'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'bar'"
op|','
name|'Integer'
op|','
nl|'\n'
name|'ForeignKey'
op|'('
name|'parent_table_name'
op|'+'
string|'".id"'
op|')'
op|')'
op|','
nl|'\n'
name|'UniqueConstraint'
op|'('
string|"'baz'"
op|','
name|'name'
op|'='
string|"'constr1'"
op|')'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'drop_unique_constraint'
op|'('
name|'engine'
op|','
name|'table_name'
op|','
string|"'constr1'"
op|','
string|"'baz'"
op|')'
newline|'\n'
nl|'\n'
name|'insp'
op|'='
name|'reflection'
op|'.'
name|'Inspector'
op|'.'
name|'from_engine'
op|'('
name|'engine'
op|')'
newline|'\n'
name|'f_keys'
op|'='
name|'insp'
op|'.'
name|'get_foreign_keys'
op|'('
name|'table_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'f_keys'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'f_key'
op|'='
name|'f_keys'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'f_key'
op|'['
string|"'referred_table'"
op|']'
op|','
name|'parent_table_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'f_key'
op|'['
string|"'referred_columns'"
op|']'
op|','
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'f_key'
op|'['
string|"'constrained_columns'"
op|']'
op|','
op|'['
string|"'bar'"
op|']'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
name|'parent_table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
