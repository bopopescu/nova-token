begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010-2011 OpenStack Foundation'
nl|'\n'
comment|'# Copyright 2012-2013 IBM Corp.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nTests for database migrations. This test case reads the configuration\nfile test_migrations.conf for database connection settings\nto use in the tests. For each connection found in the config file,\nthe test case runs a series of test cases to ensure that migrations work\nproperly both upgrading and downgrading, and that no data loss occurs\nif possible.\n\nThere are also "opportunistic" tests for both mysql and postgresql in here,\nwhich allows testing against all 3 databases (sqlite in memory, mysql, pg) in\na properly configured unit test environment.\n\nFor the opportunistic testing you need to set up a db named \'openstack_citest\'\nwith user \'openstack_citest\' and password \'openstack_citest\' on localhost.\nThe test will then use that db and u/p combo to run the tests.\n\nFor postgres on Ubuntu this can be done with the following commands:\n\nsudo -u postgres psql\npostgres=# create user openstack_citest with createdb login password\n      \'openstack_citest\';\npostgres=# create database openstack_citest with owner openstack_citest;\npostgres=# create database openstack_baremetal_citest with owner\n            openstack_citest;\n\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'collections'
newline|'\n'
name|'import'
name|'commands'
newline|'\n'
name|'import'
name|'ConfigParser'
newline|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'glob'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'urlparse'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
nl|'\n'
name|'from'
name|'migrate'
op|'.'
name|'versioning'
name|'import'
name|'repository'
newline|'\n'
name|'import'
name|'netaddr'
newline|'\n'
name|'import'
name|'sqlalchemy'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'dialects'
name|'import'
name|'postgresql'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'dialects'
name|'import'
name|'sqlite'
newline|'\n'
name|'import'
name|'sqlalchemy'
op|'.'
name|'exc'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'api'
name|'as'
name|'db'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
op|'.'
name|'migrate_repo'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'utils'
name|'as'
name|'db_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'gettextutils'
name|'import'
name|'_'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'timeutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'uuidutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'matchers'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'baremetal'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
op|'.'
name|'migrate_repo'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_get_connect_string
name|'def'
name|'_get_connect_string'
op|'('
name|'backend'
op|','
name|'user'
op|','
name|'passwd'
op|','
name|'database'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Try to get a connection with a very specific set of values, if we get\n    these then we\'ll run the tests, otherwise they are skipped\n    """'
newline|'\n'
name|'if'
name|'backend'
op|'=='
string|'"postgres"'
op|':'
newline|'\n'
indent|'        '
name|'backend'
op|'='
string|'"postgresql+psycopg2"'
newline|'\n'
dedent|''
name|'elif'
name|'backend'
op|'=='
string|'"mysql"'
op|':'
newline|'\n'
indent|'        '
name|'backend'
op|'='
string|'"mysql+mysqldb"'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'Exception'
op|'('
string|'"Unrecognized backend: \'%s\'"'
op|'%'
name|'backend'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
op|'('
string|'"%s://%s:%s@localhost/%s"'
op|'%'
op|'('
name|'backend'
op|','
name|'user'
op|','
name|'passwd'
op|','
name|'database'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_is_backend_avail
dedent|''
name|'def'
name|'_is_backend_avail'
op|'('
name|'backend'
op|','
name|'user'
op|','
name|'passwd'
op|','
name|'database'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'connect_uri'
op|'='
name|'_get_connect_string'
op|'('
name|'backend'
op|','
name|'user'
op|','
name|'passwd'
op|','
name|'database'
op|')'
newline|'\n'
name|'engine'
op|'='
name|'sqlalchemy'
op|'.'
name|'create_engine'
op|'('
name|'connect_uri'
op|')'
newline|'\n'
name|'connection'
op|'='
name|'engine'
op|'.'
name|'connect'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
comment|"# intentionally catch all to handle exceptions even if we don't"
nl|'\n'
comment|'# have any backend code loaded.'
nl|'\n'
indent|'        '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'connection'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'engine'
op|'.'
name|'dispose'
op|'('
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_have_mysql
dedent|''
dedent|''
name|'def'
name|'_have_mysql'
op|'('
name|'user'
op|','
name|'passwd'
op|','
name|'database'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'present'
op|'='
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'NOVA_TEST_MYSQL_PRESENT'"
op|')'
newline|'\n'
name|'if'
name|'present'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'_is_backend_avail'
op|'('
string|"'mysql'"
op|','
name|'user'
op|','
name|'passwd'
op|','
name|'database'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'present'
op|'.'
name|'lower'
op|'('
op|')'
name|'in'
op|'('
string|"''"
op|','
string|"'true'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_have_postgresql
dedent|''
name|'def'
name|'_have_postgresql'
op|'('
name|'user'
op|','
name|'passwd'
op|','
name|'database'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'present'
op|'='
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'NOVA_TEST_POSTGRESQL_PRESENT'"
op|')'
newline|'\n'
name|'if'
name|'present'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'_is_backend_avail'
op|'('
string|"'postgres'"
op|','
name|'user'
op|','
name|'passwd'
op|','
name|'database'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'present'
op|'.'
name|'lower'
op|'('
op|')'
name|'in'
op|'('
string|"''"
op|','
string|"'true'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_mysql_connection_info
dedent|''
name|'def'
name|'get_mysql_connection_info'
op|'('
name|'conn_pieces'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'database'
op|'='
name|'conn_pieces'
op|'.'
name|'path'
op|'.'
name|'strip'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'loc_pieces'
op|'='
name|'conn_pieces'
op|'.'
name|'netloc'
op|'.'
name|'split'
op|'('
string|"'@'"
op|')'
newline|'\n'
name|'host'
op|'='
name|'loc_pieces'
op|'['
number|'1'
op|']'
newline|'\n'
name|'auth_pieces'
op|'='
name|'loc_pieces'
op|'['
number|'0'
op|']'
op|'.'
name|'split'
op|'('
string|"':'"
op|')'
newline|'\n'
name|'user'
op|'='
name|'auth_pieces'
op|'['
number|'0'
op|']'
newline|'\n'
name|'password'
op|'='
string|'""'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'auth_pieces'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'auth_pieces'
op|'['
number|'1'
op|']'
op|'.'
name|'strip'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'password'
op|'='
string|'"-p\\"%s\\""'
op|'%'
name|'auth_pieces'
op|'['
number|'1'
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
op|'('
name|'user'
op|','
name|'password'
op|','
name|'database'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_pgsql_connection_info
dedent|''
name|'def'
name|'get_pgsql_connection_info'
op|'('
name|'conn_pieces'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'database'
op|'='
name|'conn_pieces'
op|'.'
name|'path'
op|'.'
name|'strip'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'loc_pieces'
op|'='
name|'conn_pieces'
op|'.'
name|'netloc'
op|'.'
name|'split'
op|'('
string|"'@'"
op|')'
newline|'\n'
name|'host'
op|'='
name|'loc_pieces'
op|'['
number|'1'
op|']'
newline|'\n'
nl|'\n'
name|'auth_pieces'
op|'='
name|'loc_pieces'
op|'['
number|'0'
op|']'
op|'.'
name|'split'
op|'('
string|"':'"
op|')'
newline|'\n'
name|'user'
op|'='
name|'auth_pieces'
op|'['
number|'0'
op|']'
newline|'\n'
name|'password'
op|'='
string|'""'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'auth_pieces'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'        '
name|'password'
op|'='
name|'auth_pieces'
op|'['
number|'1'
op|']'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
op|'('
name|'user'
op|','
name|'password'
op|','
name|'database'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CommonTestsMixIn
dedent|''
name|'class'
name|'CommonTestsMixIn'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""These tests are shared between TestNovaMigrations and\n    TestBaremetalMigrations.\n\n    BaseMigrationTestCase is effectively an abstract class, meant to be derived\n    from and not directly tested against; that\'s why these `test_` methods need\n    to be on a Mixin, so that they won\'t be picked up as valid tests for\n    BaseMigrationTestCase.\n    """'
newline|'\n'
DECL|member|test_walk_versions
name|'def'
name|'test_walk_versions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'key'
op|','
name|'engine'
name|'in'
name|'self'
op|'.'
name|'engines'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# We start each walk with a completely blank slate.'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'_reset_database'
op|'('
name|'key'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_walk_versions'
op|'('
name|'engine'
op|','
name|'self'
op|'.'
name|'snake_walk'
op|','
name|'self'
op|'.'
name|'downgrade'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_mysql_opportunistically
dedent|''
dedent|''
name|'def'
name|'test_mysql_opportunistically'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_mysql_opportunistically'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_mysql_connect_fail
dedent|''
name|'def'
name|'test_mysql_connect_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test that we can trigger a mysql connection failure and we fail\n        gracefully to ensure we don\'t break people without mysql\n        """'
newline|'\n'
name|'if'
name|'_is_backend_avail'
op|'('
string|"'mysql'"
op|','
string|'"openstack_cifail"'
op|','
name|'self'
op|'.'
name|'PASSWD'
op|','
nl|'\n'
name|'self'
op|'.'
name|'DATABASE'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Shouldn\'t have connected"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_postgresql_opportunistically
dedent|''
dedent|''
name|'def'
name|'test_postgresql_opportunistically'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_postgresql_opportunistically'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_postgresql_connect_fail
dedent|''
name|'def'
name|'test_postgresql_connect_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test that we can trigger a postgres connection failure and we fail\n        gracefully to ensure we don\'t break people without postgres\n        """'
newline|'\n'
name|'if'
name|'_is_backend_avail'
op|'('
string|"'postgres'"
op|','
string|'"openstack_cifail"'
op|','
name|'self'
op|'.'
name|'PASSWD'
op|','
nl|'\n'
name|'self'
op|'.'
name|'DATABASE'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Shouldn\'t have connected"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BaseMigrationTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'BaseMigrationTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Base class for testing migrations and migration utils. This sets up\n    and configures the databases to run tests against.\n    """'
newline|'\n'
nl|'\n'
comment|'# NOTE(jhesketh): It is expected that tests clean up after themselves.'
nl|'\n'
comment|'# This is necessary for concurrency to allow multiple tests to work on'
nl|'\n'
comment|'# one database.'
nl|'\n'
comment|'# The full migration walk tests however do call the old _reset_databases()'
nl|'\n'
comment|'# to throw away whatever was there so they need to operate on their own'
nl|'\n'
comment|"# database that we know isn't accessed concurrently."
nl|'\n'
comment|'# Hence, BaseWalkMigrationTestCase overwrites the engine list.'
nl|'\n'
nl|'\n'
DECL|variable|USER
name|'USER'
op|'='
name|'None'
newline|'\n'
DECL|variable|PASSWD
name|'PASSWD'
op|'='
name|'None'
newline|'\n'
DECL|variable|DATABASE
name|'DATABASE'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'BaseMigrationTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'DEFAULT_CONFIG_FILE'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'__file__'
op|')'
op|','
nl|'\n'
string|"'test_migrations.conf'"
op|')'
newline|'\n'
comment|'# Test machines can set the NOVA_TEST_MIGRATIONS_CONF variable'
nl|'\n'
comment|'# to override the location of the config file for migration testing'
nl|'\n'
name|'self'
op|'.'
name|'CONFIG_FILE_PATH'
op|'='
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'NOVA_TEST_MIGRATIONS_CONF'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'DEFAULT_CONFIG_FILE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'MIGRATE_FILE'
op|'='
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
op|'.'
name|'migrate_repo'
op|'.'
name|'__file__'
newline|'\n'
name|'self'
op|'.'
name|'REPOSITORY'
op|'='
name|'repository'
op|'.'
name|'Repository'
op|'('
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'abspath'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'self'
op|'.'
name|'MIGRATE_FILE'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'INIT_VERSION'
op|'='
number|'0'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'snake_walk'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'downgrade'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'test_databases'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'migration'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'migration_api'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'BaseMigrationTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_load_config'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_load_config
dedent|''
name|'def'
name|'_load_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Load test databases from the config file. Only do this'
nl|'\n'
comment|'# once. No need to re-run this on each test...'
nl|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'config_path is %s'"
op|'%'
name|'self'
op|'.'
name|'CONFIG_FILE_PATH'
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'CONFIG_FILE_PATH'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cp'
op|'='
name|'ConfigParser'
op|'.'
name|'RawConfigParser'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'cp'
op|'.'
name|'read'
op|'('
name|'self'
op|'.'
name|'CONFIG_FILE_PATH'
op|')'
newline|'\n'
name|'config'
op|'='
name|'cp'
op|'.'
name|'options'
op|'('
string|"'unit_tests'"
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'config'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'test_databases'
op|'['
name|'key'
op|']'
op|'='
name|'cp'
op|'.'
name|'get'
op|'('
string|"'unit_tests'"
op|','
name|'key'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'snake_walk'
op|'='
name|'cp'
op|'.'
name|'getboolean'
op|'('
string|"'walk_style'"
op|','
string|"'snake_walk'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'downgrade'
op|'='
name|'cp'
op|'.'
name|'getboolean'
op|'('
string|"'walk_style'"
op|','
string|"'downgrade'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'except'
name|'ConfigParser'
op|'.'
name|'ParsingError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Failed to read test_migrations.conf config "'
nl|'\n'
string|'"file. Got error: %s"'
op|'%'
name|'e'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Failed to find test_migrations.conf config "'
nl|'\n'
string|'"file."'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'engines'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'self'
op|'.'
name|'test_databases'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'engines'
op|'['
name|'key'
op|']'
op|'='
name|'sqlalchemy'
op|'.'
name|'create_engine'
op|'('
name|'value'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(jhesketh): We only need to make sure the databases are created'
nl|'\n'
comment|'# not necessarily clean of tables.'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_create_databases'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|execute_cmd
dedent|''
name|'def'
name|'execute_cmd'
op|'('
name|'self'
op|','
name|'cmd'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'status'
op|','
name|'output'
op|'='
name|'commands'
op|'.'
name|'getstatusoutput'
op|'('
name|'cmd'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'output'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'status'
op|','
nl|'\n'
string|'"Failed to run: %s\\n%s"'
op|'%'
op|'('
name|'cmd'
op|','
name|'output'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'utils'
op|'.'
name|'synchronized'
op|'('
string|"'pgadmin'"
op|','
name|'external'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|_reset_pg
name|'def'
name|'_reset_pg'
op|'('
name|'self'
op|','
name|'conn_pieces'
op|')'
op|':'
newline|'\n'
indent|'        '
op|'('
name|'user'
op|','
name|'password'
op|','
name|'database'
op|','
name|'host'
op|')'
op|'='
name|'get_pgsql_connection_info'
op|'('
name|'conn_pieces'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'environ'
op|'['
string|"'PGPASSWORD'"
op|']'
op|'='
name|'password'
newline|'\n'
name|'os'
op|'.'
name|'environ'
op|'['
string|"'PGUSER'"
op|']'
op|'='
name|'user'
newline|'\n'
comment|"# note(boris-42): We must create and drop database, we can't"
nl|'\n'
comment|'# drop database which we have connected to, so for such'
nl|'\n'
comment|'# operations there is a special database template1.'
nl|'\n'
name|'sqlcmd'
op|'='
op|'('
string|'"psql -w -U %(user)s -h %(host)s -c"'
nl|'\n'
string|'" \'%(sql)s\' -d template1"'
op|')'
newline|'\n'
name|'sqldict'
op|'='
op|'{'
string|"'user'"
op|':'
name|'user'
op|','
string|"'host'"
op|':'
name|'host'
op|'}'
newline|'\n'
nl|'\n'
name|'sqldict'
op|'['
string|"'sql'"
op|']'
op|'='
op|'('
string|'"drop database if exists %s;"'
op|')'
op|'%'
name|'database'
newline|'\n'
name|'droptable'
op|'='
name|'sqlcmd'
op|'%'
name|'sqldict'
newline|'\n'
name|'self'
op|'.'
name|'execute_cmd'
op|'('
name|'droptable'
op|')'
newline|'\n'
nl|'\n'
name|'sqldict'
op|'['
string|"'sql'"
op|']'
op|'='
op|'('
string|'"create database %s;"'
op|')'
op|'%'
name|'database'
newline|'\n'
name|'createtable'
op|'='
name|'sqlcmd'
op|'%'
name|'sqldict'
newline|'\n'
name|'self'
op|'.'
name|'execute_cmd'
op|'('
name|'createtable'
op|')'
newline|'\n'
nl|'\n'
name|'os'
op|'.'
name|'unsetenv'
op|'('
string|"'PGPASSWORD'"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'unsetenv'
op|'('
string|"'PGUSER'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'utils'
op|'.'
name|'synchronized'
op|'('
string|"'mysql'"
op|','
name|'external'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|_reset_mysql
name|'def'
name|'_reset_mysql'
op|'('
name|'self'
op|','
name|'conn_pieces'
op|')'
op|':'
newline|'\n'
comment|'# We can execute the MySQL client to destroy and re-create'
nl|'\n'
comment|'# the MYSQL database, which is easier and less error-prone'
nl|'\n'
comment|'# than using SQLAlchemy to do this via MetaData...trust me.'
nl|'\n'
indent|'        '
op|'('
name|'user'
op|','
name|'password'
op|','
name|'database'
op|','
name|'host'
op|')'
op|'='
name|'get_mysql_connection_info'
op|'('
name|'conn_pieces'
op|')'
newline|'\n'
name|'sql'
op|'='
op|'('
string|'"drop database if exists %(database)s; "'
nl|'\n'
string|'"create database %(database)s;"'
op|'%'
op|'{'
string|"'database'"
op|':'
name|'database'
op|'}'
op|')'
newline|'\n'
name|'cmd'
op|'='
op|'('
string|'"mysql -u \\"%(user)s\\" %(password)s -h %(host)s "'
nl|'\n'
string|'"-e \\"%(sql)s\\""'
op|'%'
op|'{'
string|"'user'"
op|':'
name|'user'
op|','
string|"'password'"
op|':'
name|'password'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'host'
op|','
string|"'sql'"
op|':'
name|'sql'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'execute_cmd'
op|'('
name|'cmd'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'utils'
op|'.'
name|'synchronized'
op|'('
string|"'sqlite'"
op|','
name|'external'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|_reset_sqlite
name|'def'
name|'_reset_sqlite'
op|'('
name|'self'
op|','
name|'conn_pieces'
op|')'
op|':'
newline|'\n'
comment|'# We can just delete the SQLite database, which is'
nl|'\n'
comment|'# the easiest and cleanest solution'
nl|'\n'
indent|'        '
name|'db_path'
op|'='
name|'conn_pieces'
op|'.'
name|'path'
op|'.'
name|'strip'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'db_path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'db_path'
op|')'
newline|'\n'
comment|'# No need to recreate the SQLite DB. SQLite will'
nl|'\n'
comment|"# create it for us if it's not there..."
nl|'\n'
nl|'\n'
DECL|member|_create_databases
dedent|''
dedent|''
name|'def'
name|'_create_databases'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create all configured databases as needed."""'
newline|'\n'
name|'for'
name|'key'
op|','
name|'engine'
name|'in'
name|'self'
op|'.'
name|'engines'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_create_database'
op|'('
name|'key'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_database
dedent|''
dedent|''
name|'def'
name|'_create_database'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create database if it doesn\'t exist."""'
newline|'\n'
name|'conn_string'
op|'='
name|'self'
op|'.'
name|'test_databases'
op|'['
name|'key'
op|']'
newline|'\n'
name|'conn_pieces'
op|'='
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'conn_string'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'conn_string'
op|'.'
name|'startswith'
op|'('
string|"'mysql'"
op|')'
op|':'
newline|'\n'
indent|'            '
op|'('
name|'user'
op|','
name|'password'
op|','
name|'database'
op|','
name|'host'
op|')'
op|'='
name|'get_mysql_connection_info'
op|'('
name|'conn_pieces'
op|')'
newline|'\n'
name|'sql'
op|'='
string|'"create database if not exists %s;"'
op|'%'
name|'database'
newline|'\n'
name|'cmd'
op|'='
op|'('
string|'"mysql -u \\"%(user)s\\" %(password)s -h %(host)s "'
nl|'\n'
string|'"-e \\"%(sql)s\\""'
op|'%'
op|'{'
string|"'user'"
op|':'
name|'user'
op|','
string|"'password'"
op|':'
name|'password'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'host'
op|','
string|"'sql'"
op|':'
name|'sql'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'execute_cmd'
op|'('
name|'cmd'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'conn_string'
op|'.'
name|'startswith'
op|'('
string|"'postgresql'"
op|')'
op|':'
newline|'\n'
indent|'            '
op|'('
name|'user'
op|','
name|'password'
op|','
name|'database'
op|','
name|'host'
op|')'
op|'='
name|'get_pgsql_connection_info'
op|'('
name|'conn_pieces'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'environ'
op|'['
string|"'PGPASSWORD'"
op|']'
op|'='
name|'password'
newline|'\n'
name|'os'
op|'.'
name|'environ'
op|'['
string|"'PGUSER'"
op|']'
op|'='
name|'user'
newline|'\n'
nl|'\n'
name|'sqlcmd'
op|'='
op|'('
string|'"psql -w -U %(user)s -h %(host)s -c"'
nl|'\n'
string|'" \'%(sql)s\' -d template1"'
op|')'
newline|'\n'
nl|'\n'
name|'sql'
op|'='
op|'('
string|'"create database if not exists %s;"'
op|')'
op|'%'
name|'database'
newline|'\n'
name|'createtable'
op|'='
name|'sqlcmd'
op|'%'
op|'{'
string|"'user'"
op|':'
name|'user'
op|','
string|"'host'"
op|':'
name|'host'
op|','
string|"'sql'"
op|':'
name|'sql'
op|'}'
newline|'\n'
name|'status'
op|','
name|'output'
op|'='
name|'commands'
op|'.'
name|'getstatusoutput'
op|'('
name|'createtable'
op|')'
newline|'\n'
name|'if'
name|'status'
op|'!='
number|'0'
name|'and'
name|'status'
op|'!='
number|'256'
op|':'
newline|'\n'
comment|'# 0 means databases is created'
nl|'\n'
comment|'# 256 means it already exists (which is fine)'
nl|'\n'
comment|'# otherwise raise an error'
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Failed to run: %s\\n%s"'
op|'%'
op|'('
name|'createtable'
op|','
name|'output'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'os'
op|'.'
name|'unsetenv'
op|'('
string|"'PGPASSWORD'"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'unsetenv'
op|'('
string|"'PGUSER'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_reset_databases
dedent|''
dedent|''
name|'def'
name|'_reset_databases'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Reset all configured databases."""'
newline|'\n'
name|'for'
name|'key'
op|','
name|'engine'
name|'in'
name|'self'
op|'.'
name|'engines'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_reset_database'
op|'('
name|'key'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_reset_database
dedent|''
dedent|''
name|'def'
name|'_reset_database'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Reset specific database."""'
newline|'\n'
name|'engine'
op|'='
name|'self'
op|'.'
name|'engines'
op|'['
name|'key'
op|']'
newline|'\n'
name|'conn_string'
op|'='
name|'self'
op|'.'
name|'test_databases'
op|'['
name|'key'
op|']'
newline|'\n'
name|'conn_pieces'
op|'='
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'conn_string'
op|')'
newline|'\n'
name|'engine'
op|'.'
name|'dispose'
op|'('
op|')'
newline|'\n'
name|'if'
name|'conn_string'
op|'.'
name|'startswith'
op|'('
string|"'sqlite'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_reset_sqlite'
op|'('
name|'conn_pieces'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'conn_string'
op|'.'
name|'startswith'
op|'('
string|"'mysql'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_reset_mysql'
op|'('
name|'conn_pieces'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'conn_string'
op|'.'
name|'startswith'
op|'('
string|"'postgresql'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_reset_pg'
op|'('
name|'conn_pieces'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BaseWalkMigrationTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'BaseWalkMigrationTestCase'
op|'('
name|'BaseMigrationTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""BaseWalkMigrationTestCase loads in an alternative set of databases for\n    testing against. This is necessary as the default databases can run tests\n    concurrently without interfering with itself. It is expected that\n    databases listed under [migraiton_dbs] in the configuration are only being\n    accessed by one test at a time. Currently only test_walk_versions accesses\n    the databases (and is the only method that calls _reset_database() which\n    is clearly problematic for concurrency).\n    """'
newline|'\n'
nl|'\n'
DECL|member|_load_config
name|'def'
name|'_load_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Load test databases from the config file. Only do this'
nl|'\n'
comment|'# once. No need to re-run this on each test...'
nl|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'config_path is %s'"
op|'%'
name|'self'
op|'.'
name|'CONFIG_FILE_PATH'
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'CONFIG_FILE_PATH'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cp'
op|'='
name|'ConfigParser'
op|'.'
name|'RawConfigParser'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'cp'
op|'.'
name|'read'
op|'('
name|'self'
op|'.'
name|'CONFIG_FILE_PATH'
op|')'
newline|'\n'
name|'config'
op|'='
name|'cp'
op|'.'
name|'options'
op|'('
string|"'migration_dbs'"
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'config'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'test_databases'
op|'['
name|'key'
op|']'
op|'='
name|'cp'
op|'.'
name|'get'
op|'('
string|"'migration_dbs'"
op|','
name|'key'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'snake_walk'
op|'='
name|'cp'
op|'.'
name|'getboolean'
op|'('
string|"'walk_style'"
op|','
string|"'snake_walk'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'downgrade'
op|'='
name|'cp'
op|'.'
name|'getboolean'
op|'('
string|"'walk_style'"
op|','
string|"'downgrade'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ConfigParser'
op|'.'
name|'ParsingError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Failed to read test_migrations.conf config "'
nl|'\n'
string|'"file. Got error: %s"'
op|'%'
name|'e'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Failed to find test_migrations.conf config "'
nl|'\n'
string|'"file."'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'engines'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'self'
op|'.'
name|'test_databases'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'engines'
op|'['
name|'key'
op|']'
op|'='
name|'sqlalchemy'
op|'.'
name|'create_engine'
op|'('
name|'value'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_create_databases'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_mysql_opportunistically
dedent|''
name|'def'
name|'_test_mysql_opportunistically'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test that table creation on mysql only builds InnoDB tables'
nl|'\n'
indent|'        '
name|'if'
name|'not'
name|'_have_mysql'
op|'('
name|'self'
op|'.'
name|'USER'
op|','
name|'self'
op|'.'
name|'PASSWD'
op|','
name|'self'
op|'.'
name|'DATABASE'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'skipTest'
op|'('
string|'"mysql not available"'
op|')'
newline|'\n'
comment|"# add this to the global lists to make reset work with it, it's removed"
nl|'\n'
comment|'# automatically in tearDown so no need to clean it up here.'
nl|'\n'
dedent|''
name|'connect_string'
op|'='
name|'_get_connect_string'
op|'('
string|'"mysql"'
op|','
name|'self'
op|'.'
name|'USER'
op|','
name|'self'
op|'.'
name|'PASSWD'
op|','
nl|'\n'
name|'self'
op|'.'
name|'DATABASE'
op|')'
newline|'\n'
op|'('
name|'user'
op|','
name|'password'
op|','
name|'database'
op|','
name|'host'
op|')'
op|'='
name|'get_mysql_connection_info'
op|'('
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'connect_string'
op|')'
op|')'
newline|'\n'
name|'engine'
op|'='
name|'sqlalchemy'
op|'.'
name|'create_engine'
op|'('
name|'connect_string'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'engines'
op|'['
name|'database'
op|']'
op|'='
name|'engine'
newline|'\n'
name|'self'
op|'.'
name|'test_databases'
op|'['
name|'database'
op|']'
op|'='
name|'connect_string'
newline|'\n'
nl|'\n'
comment|'# build a fully populated mysql database with all the tables'
nl|'\n'
name|'self'
op|'.'
name|'_reset_database'
op|'('
name|'database'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_walk_versions'
op|'('
name|'engine'
op|','
name|'self'
op|'.'
name|'snake_walk'
op|','
name|'self'
op|'.'
name|'downgrade'
op|')'
newline|'\n'
nl|'\n'
name|'connection'
op|'='
name|'engine'
op|'.'
name|'connect'
op|'('
op|')'
newline|'\n'
comment|'# sanity check'
nl|'\n'
name|'total'
op|'='
name|'connection'
op|'.'
name|'execute'
op|'('
string|'"SELECT count(*) "'
nl|'\n'
string|'"from information_schema.TABLES "'
nl|'\n'
string|'"where TABLE_SCHEMA=\'%(database)s\'"'
op|'%'
nl|'\n'
op|'{'
string|"'database'"
op|':'
name|'database'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'total'
op|'.'
name|'scalar'
op|'('
op|')'
op|'>'
number|'0'
op|','
string|'"No tables found. Wrong schema?"'
op|')'
newline|'\n'
nl|'\n'
name|'noninnodb'
op|'='
name|'connection'
op|'.'
name|'execute'
op|'('
string|'"SELECT count(*) "'
nl|'\n'
string|'"from information_schema.TABLES "'
nl|'\n'
string|'"where TABLE_SCHEMA=\'%(database)s\' "'
nl|'\n'
string|'"and ENGINE!=\'InnoDB\' "'
nl|'\n'
string|'"and TABLE_NAME!=\'migrate_version\'"'
op|'%'
nl|'\n'
op|'{'
string|"'database'"
op|':'
name|'database'
op|'}'
op|')'
newline|'\n'
name|'count'
op|'='
name|'noninnodb'
op|'.'
name|'scalar'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'count'
op|','
number|'0'
op|','
string|'"%d non InnoDB tables created"'
op|'%'
name|'count'
op|')'
newline|'\n'
name|'connection'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'del'
op|'('
name|'self'
op|'.'
name|'engines'
op|'['
name|'database'
op|']'
op|')'
newline|'\n'
name|'del'
op|'('
name|'self'
op|'.'
name|'test_databases'
op|'['
name|'database'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_postgresql_opportunistically
dedent|''
name|'def'
name|'_test_postgresql_opportunistically'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test postgresql database migration walk'
nl|'\n'
indent|'        '
name|'if'
name|'not'
name|'_have_postgresql'
op|'('
name|'self'
op|'.'
name|'USER'
op|','
name|'self'
op|'.'
name|'PASSWD'
op|','
name|'self'
op|'.'
name|'DATABASE'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'skipTest'
op|'('
string|'"postgresql not available"'
op|')'
newline|'\n'
comment|"# add this to the global lists to make reset work with it, it's removed"
nl|'\n'
comment|'# automatically in tearDown so no need to clean it up here.'
nl|'\n'
dedent|''
name|'connect_string'
op|'='
name|'_get_connect_string'
op|'('
string|'"postgres"'
op|','
name|'self'
op|'.'
name|'USER'
op|','
nl|'\n'
name|'self'
op|'.'
name|'PASSWD'
op|','
name|'self'
op|'.'
name|'DATABASE'
op|')'
newline|'\n'
name|'engine'
op|'='
name|'sqlalchemy'
op|'.'
name|'create_engine'
op|'('
name|'connect_string'
op|')'
newline|'\n'
op|'('
name|'user'
op|','
name|'password'
op|','
name|'database'
op|','
name|'host'
op|')'
op|'='
name|'get_mysql_connection_info'
op|'('
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'connect_string'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'engines'
op|'['
name|'database'
op|']'
op|'='
name|'engine'
newline|'\n'
name|'self'
op|'.'
name|'test_databases'
op|'['
name|'database'
op|']'
op|'='
name|'connect_string'
newline|'\n'
nl|'\n'
comment|'# build a fully populated postgresql database with all the tables'
nl|'\n'
name|'self'
op|'.'
name|'_reset_database'
op|'('
name|'database'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_walk_versions'
op|'('
name|'engine'
op|','
name|'self'
op|'.'
name|'snake_walk'
op|','
name|'self'
op|'.'
name|'downgrade'
op|')'
newline|'\n'
name|'del'
op|'('
name|'self'
op|'.'
name|'engines'
op|'['
name|'database'
op|']'
op|')'
newline|'\n'
name|'del'
op|'('
name|'self'
op|'.'
name|'test_databases'
op|'['
name|'database'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_walk_versions
dedent|''
name|'def'
name|'_walk_versions'
op|'('
name|'self'
op|','
name|'engine'
op|'='
name|'None'
op|','
name|'snake_walk'
op|'='
name|'False'
op|','
name|'downgrade'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
comment|'# Determine latest version script from the repo, then'
nl|'\n'
comment|'# upgrade from 1 through to the latest, with no data'
nl|'\n'
comment|'# in the databases. This just checks that the schema itself'
nl|'\n'
comment|'# upgrades successfully.'
nl|'\n'
nl|'\n'
comment|'# Place the database under version control'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'migration_api'
op|'.'
name|'version_control'
op|'('
name|'engine'
op|','
nl|'\n'
name|'self'
op|'.'
name|'REPOSITORY'
op|','
nl|'\n'
name|'self'
op|'.'
name|'INIT_VERSION'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'INIT_VERSION'
op|','
nl|'\n'
name|'self'
op|'.'
name|'migration_api'
op|'.'
name|'db_version'
op|'('
name|'engine'
op|','
nl|'\n'
name|'self'
op|'.'
name|'REPOSITORY'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'latest version is %s'"
op|'%'
name|'self'
op|'.'
name|'REPOSITORY'
op|'.'
name|'latest'
op|')'
newline|'\n'
name|'versions'
op|'='
name|'range'
op|'('
name|'self'
op|'.'
name|'INIT_VERSION'
op|'+'
number|'1'
op|','
name|'self'
op|'.'
name|'REPOSITORY'
op|'.'
name|'latest'
op|'+'
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'version'
name|'in'
name|'versions'
op|':'
newline|'\n'
comment|'# upgrade -> downgrade -> upgrade'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'_migrate_up'
op|'('
name|'engine'
op|','
name|'version'
op|','
name|'with_data'
op|'='
name|'True'
op|')'
newline|'\n'
name|'if'
name|'snake_walk'
op|':'
newline|'\n'
indent|'                '
name|'downgraded'
op|'='
name|'self'
op|'.'
name|'_migrate_down'
op|'('
nl|'\n'
name|'engine'
op|','
name|'version'
op|'-'
number|'1'
op|','
name|'with_data'
op|'='
name|'True'
op|')'
newline|'\n'
name|'if'
name|'downgraded'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'_migrate_up'
op|'('
name|'engine'
op|','
name|'version'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'downgrade'
op|':'
newline|'\n'
comment|'# Now walk it back down to 0 from the latest, testing'
nl|'\n'
comment|'# the downgrade paths.'
nl|'\n'
indent|'            '
name|'for'
name|'version'
name|'in'
name|'reversed'
op|'('
name|'versions'
op|')'
op|':'
newline|'\n'
comment|'# downgrade -> upgrade -> downgrade'
nl|'\n'
indent|'                '
name|'downgraded'
op|'='
name|'self'
op|'.'
name|'_migrate_down'
op|'('
name|'engine'
op|','
name|'version'
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'snake_walk'
name|'and'
name|'downgraded'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'_migrate_up'
op|'('
name|'engine'
op|','
name|'version'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_migrate_down'
op|'('
name|'engine'
op|','
name|'version'
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_migrate_down
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'_migrate_down'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'version'
op|','
name|'with_data'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'migration_api'
op|'.'
name|'downgrade'
op|'('
name|'engine'
op|','
name|'self'
op|'.'
name|'REPOSITORY'
op|','
name|'version'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'NotImplementedError'
op|':'
newline|'\n'
comment|'# NOTE(sirp): some migrations, namely release-level'
nl|'\n'
comment|"# migrations, don't support a downgrade."
nl|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'version'
op|','
nl|'\n'
name|'self'
op|'.'
name|'migration_api'
op|'.'
name|'db_version'
op|'('
name|'engine'
op|','
nl|'\n'
name|'self'
op|'.'
name|'REPOSITORY'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# NOTE(sirp): `version` is what we're downgrading to (i.e. the 'target'"
nl|'\n'
comment|'# version). So if we have any downgrade checks, they need to be run for'
nl|'\n'
comment|'# the previous (higher numbered) migration.'
nl|'\n'
name|'if'
name|'with_data'
op|':'
newline|'\n'
indent|'            '
name|'post_downgrade'
op|'='
name|'getattr'
op|'('
nl|'\n'
name|'self'
op|','
string|'"_post_downgrade_%03d"'
op|'%'
op|'('
name|'version'
op|'+'
number|'1'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'post_downgrade'
op|':'
newline|'\n'
indent|'                '
name|'post_downgrade'
op|'('
name|'engine'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|_migrate_up
dedent|''
name|'def'
name|'_migrate_up'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'version'
op|','
name|'with_data'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""migrate up to a new version of the db.\n\n        We allow for data insertion and post checks at every\n        migration version with special _pre_upgrade_### and\n        _check_### functions in the main test.\n        """'
newline|'\n'
comment|"# NOTE(sdague): try block is here because it's impossible to debug"
nl|'\n'
comment|'# where a failed data migration happens otherwise'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'with_data'
op|':'
newline|'\n'
indent|'                '
name|'data'
op|'='
name|'None'
newline|'\n'
name|'pre_upgrade'
op|'='
name|'getattr'
op|'('
nl|'\n'
name|'self'
op|','
string|'"_pre_upgrade_%03d"'
op|'%'
name|'version'
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'pre_upgrade'
op|':'
newline|'\n'
indent|'                    '
name|'data'
op|'='
name|'pre_upgrade'
op|'('
name|'engine'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'migration_api'
op|'.'
name|'upgrade'
op|'('
name|'engine'
op|','
name|'self'
op|'.'
name|'REPOSITORY'
op|','
name|'version'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'version'
op|','
nl|'\n'
name|'self'
op|'.'
name|'migration_api'
op|'.'
name|'db_version'
op|'('
name|'engine'
op|','
nl|'\n'
name|'self'
op|'.'
name|'REPOSITORY'
op|')'
op|')'
newline|'\n'
name|'if'
name|'with_data'
op|':'
newline|'\n'
indent|'                '
name|'check'
op|'='
name|'getattr'
op|'('
name|'self'
op|','
string|'"_check_%03d"'
op|'%'
name|'version'
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'check'
op|':'
newline|'\n'
indent|'                    '
name|'check'
op|'('
name|'engine'
op|','
name|'data'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'error'
op|'('
string|'"Failed to migrate to version %s on engine %s"'
op|'%'
nl|'\n'
op|'('
name|'version'
op|','
name|'engine'
op|')'
op|')'
newline|'\n'
name|'raise'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestNovaMigrations
dedent|''
dedent|''
dedent|''
name|'class'
name|'TestNovaMigrations'
op|'('
name|'BaseWalkMigrationTestCase'
op|','
name|'CommonTestsMixIn'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test sqlalchemy-migrate migrations."""'
newline|'\n'
DECL|variable|USER
name|'USER'
op|'='
string|'"openstack_citest"'
newline|'\n'
DECL|variable|PASSWD
name|'PASSWD'
op|'='
string|'"openstack_citest"'
newline|'\n'
DECL|variable|DATABASE
name|'DATABASE'
op|'='
string|'"openstack_citest"'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestNovaMigrations'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'DEFAULT_CONFIG_FILE'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'__file__'
op|')'
op|','
nl|'\n'
string|"'test_migrations.conf'"
op|')'
newline|'\n'
comment|'# Test machines can set the NOVA_TEST_MIGRATIONS_CONF variable'
nl|'\n'
comment|'# to override the location of the config file for migration testing'
nl|'\n'
name|'self'
op|'.'
name|'CONFIG_FILE_PATH'
op|'='
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'NOVA_TEST_MIGRATIONS_CONF'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'DEFAULT_CONFIG_FILE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'MIGRATE_FILE'
op|'='
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
op|'.'
name|'migrate_repo'
op|'.'
name|'__file__'
newline|'\n'
name|'self'
op|'.'
name|'REPOSITORY'
op|'='
name|'repository'
op|'.'
name|'Repository'
op|'('
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'abspath'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'self'
op|'.'
name|'MIGRATE_FILE'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestNovaMigrations'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'migration'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'migration'
op|'='
name|'__import__'
op|'('
string|"'nova.db.migration'"
op|','
nl|'\n'
name|'globals'
op|'('
op|')'
op|','
name|'locals'
op|'('
op|')'
op|','
op|'['
string|"'db_initial_version'"
op|']'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'INIT_VERSION'
op|'='
name|'self'
op|'.'
name|'migration'
op|'.'
name|'db_initial_version'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'migration_api'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'temp'
op|'='
name|'__import__'
op|'('
string|"'nova.db.sqlalchemy.migration'"
op|','
nl|'\n'
name|'globals'
op|'('
op|')'
op|','
name|'locals'
op|'('
op|')'
op|','
op|'['
string|"'versioning_api'"
op|']'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'migration_api'
op|'='
name|'temp'
op|'.'
name|'versioning_api'
newline|'\n'
nl|'\n'
DECL|member|assertColumnExists
dedent|''
dedent|''
name|'def'
name|'assertColumnExists'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'table'
op|','
name|'column'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'t'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'table'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'column'
op|','
name|'t'
op|'.'
name|'c'
op|')'
newline|'\n'
nl|'\n'
DECL|member|assertColumnNotExists
dedent|''
name|'def'
name|'assertColumnNotExists'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'table'
op|','
name|'column'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'t'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'table'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
name|'column'
op|','
name|'t'
op|'.'
name|'c'
op|')'
newline|'\n'
nl|'\n'
DECL|member|assertIndexExists
dedent|''
name|'def'
name|'assertIndexExists'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'table'
op|','
name|'index'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'t'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'table'
op|')'
newline|'\n'
name|'index_names'
op|'='
op|'['
name|'idx'
op|'.'
name|'name'
name|'for'
name|'idx'
name|'in'
name|'t'
op|'.'
name|'indexes'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'index'
op|','
name|'index_names'
op|')'
newline|'\n'
nl|'\n'
DECL|member|assertIndexMembers
dedent|''
name|'def'
name|'assertIndexMembers'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'table'
op|','
name|'index'
op|','
name|'members'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertIndexExists'
op|'('
name|'engine'
op|','
name|'table'
op|','
name|'index'
op|')'
newline|'\n'
nl|'\n'
name|'t'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'table'
op|')'
newline|'\n'
name|'index_columns'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'idx'
name|'in'
name|'t'
op|'.'
name|'indexes'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'idx'
op|'.'
name|'name'
op|'=='
name|'index'
op|':'
newline|'\n'
indent|'                '
name|'index_columns'
op|'='
name|'idx'
op|'.'
name|'columns'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'break'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sorted'
op|'('
name|'members'
op|')'
op|','
name|'sorted'
op|'('
name|'index_columns'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# migration 141, update migrations instance uuid'
nl|'\n'
DECL|member|_pre_upgrade_141
dedent|''
name|'def'
name|'_pre_upgrade_141'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
op|'{'
nl|'\n'
string|"'instance_uuid'"
op|':'
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
nl|'\n'
op|'}'
newline|'\n'
name|'migrations'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'migrations'"
op|')'
newline|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'migrations'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'data'
op|')'
newline|'\n'
name|'result'
op|'='
name|'migrations'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'data'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
name|'data'
op|'['
string|"'id'"
op|']'
op|'='
name|'result'
op|'.'
name|'inserted_primary_key'
op|'['
number|'0'
op|']'
newline|'\n'
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_check_141
dedent|''
name|'def'
name|'_check_141'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'migrations'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'migrations'"
op|')'
newline|'\n'
name|'row'
op|'='
name|'migrations'
op|'.'
name|'select'
op|'('
nl|'\n'
name|'migrations'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
name|'data'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
comment|'# Check that change to String(36) went alright'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'data'
op|'['
string|"'instance_uuid'"
op|']'
op|','
name|'row'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# migration 146, availability zone transition'
nl|'\n'
DECL|member|_pre_upgrade_146
dedent|''
name|'def'
name|'_pre_upgrade_146'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
op|'{'
nl|'\n'
string|"'availability_zone'"
op|':'
string|"'custom_az'"
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'name'"
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'aggregates'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'aggregates'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'aggregates'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'data'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
comment|"# NOTE(sdague) it's important you don't insert keys by value in"
nl|'\n'
comment|"# postgresql, because its autoincrement counter won't get updated"
nl|'\n'
name|'data'
op|'['
string|"'id'"
op|']'
op|'='
name|'result'
op|'.'
name|'inserted_primary_key'
op|'['
number|'0'
op|']'
newline|'\n'
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_check_146
dedent|''
name|'def'
name|'_check_146'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'aggregate_md'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'aggregate_metadata'"
op|')'
newline|'\n'
name|'md'
op|'='
name|'aggregate_md'
op|'.'
name|'select'
op|'('
nl|'\n'
name|'aggregate_md'
op|'.'
name|'c'
op|'.'
name|'aggregate_id'
op|'=='
name|'data'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'data'
op|'['
string|"'availability_zone'"
op|']'
op|','
name|'md'
op|'['
string|"'value'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_146
dedent|''
name|'def'
name|'_post_downgrade_146'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
comment|'# Downgrade should delete availability_zone aggregate_metadata entries'
nl|'\n'
indent|'        '
name|'aggregate_md'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'aggregate_metadata'"
op|')'
newline|'\n'
name|'num_azs'
op|'='
name|'aggregate_md'
op|'.'
name|'count'
op|'('
op|')'
op|'.'
name|'where'
op|'('
nl|'\n'
name|'aggregate_md'
op|'.'
name|'c'
op|'.'
name|'key'
op|'=='
string|"'availability_zone'"
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'scalar'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'num_azs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_upgrade_147_test_data
dedent|''
name|'def'
name|'_upgrade_147_test_data'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'az'
op|'='
string|"'test_zone'"
newline|'\n'
name|'host1'
op|'='
string|"'compute-host1'"
newline|'\n'
name|'host2'
op|'='
string|"'compute-host2'"
newline|'\n'
comment|'# start at id == 2 because we already inserted one'
nl|'\n'
name|'data'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'host'"
op|':'
name|'host1'
op|','
nl|'\n'
string|"'binary'"
op|':'
string|"'nova-compute'"
op|','
string|"'topic'"
op|':'
string|"'compute'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'0'
op|','
string|"'availability_zone'"
op|':'
name|'az'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
string|"'host'"
op|':'
string|"'sched-host'"
op|','
nl|'\n'
string|"'binary'"
op|':'
string|"'nova-scheduler'"
op|','
string|"'topic'"
op|':'
string|"'scheduler'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'0'
op|','
string|"'availability_zone'"
op|':'
string|"'ignore_me'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'3'
op|','
string|"'host'"
op|':'
name|'host2'
op|','
nl|'\n'
string|"'binary'"
op|':'
string|"'nova-compute'"
op|','
string|"'topic'"
op|':'
string|"'compute'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'0'
op|','
string|"'availability_zone'"
op|':'
name|'az'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'return'
name|'data'
newline|'\n'
nl|'\n'
comment|'# migration 147, availability zone transition for services'
nl|'\n'
DECL|member|_pre_upgrade_147
dedent|''
name|'def'
name|'_pre_upgrade_147'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
name|'self'
op|'.'
name|'_upgrade_147_test_data'
op|'('
op|')'
newline|'\n'
name|'services'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'services'"
op|')'
newline|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'services'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_pre_upgrade_147_no_duplicate_aggregate_hosts'
op|'('
name|'engine'
op|')'
newline|'\n'
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_147_no_duplicate_aggregate_hosts
dedent|''
name|'def'
name|'_pre_upgrade_147_no_duplicate_aggregate_hosts'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'engine'
op|'.'
name|'execute'
op|'('
nl|'\n'
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'aggregate_metadata'"
op|')'
op|'.'
name|'insert'
op|'('
op|')'
op|','
nl|'\n'
op|'['
op|'{'
string|"'aggregate_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'key'"
op|':'
string|"'availability_zone'"
op|','
nl|'\n'
string|"'value'"
op|':'
string|"'custom_az'"
op|'}'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'aggregate_hosts'"
op|')'
op|'.'
name|'insert'
op|'('
op|')'
op|','
nl|'\n'
op|'['
op|'{'
string|"'aggregate_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'compute-host3'"
op|'}'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'services'"
op|')'
op|'.'
name|'insert'
op|'('
op|')'
op|','
nl|'\n'
op|'['
op|'{'
string|"'id'"
op|':'
number|'99'
op|','
string|"'host'"
op|':'
string|"'compute-host3'"
op|','
nl|'\n'
string|"'binary'"
op|':'
string|"'nova-compute'"
op|','
string|"'topic'"
op|':'
string|"'compute'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'0'
op|','
string|"'availability_zone'"
op|':'
string|"'custom_az'"
op|'}'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_147
dedent|''
name|'def'
name|'_check_147'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'aggregate_md'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'aggregate_metadata'"
op|')'
newline|'\n'
name|'aggregate_hosts'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'aggregate_hosts'"
op|')'
newline|'\n'
comment|'# NOTE(sdague): hard coded to id == 2, because we added to'
nl|'\n'
comment|'# aggregate_metadata previously'
nl|'\n'
name|'for'
name|'item'
name|'in'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'md'
op|'='
name|'aggregate_md'
op|'.'
name|'select'
op|'('
nl|'\n'
name|'aggregate_md'
op|'.'
name|'c'
op|'.'
name|'aggregate_id'
op|'=='
number|'2'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'item'
op|'['
string|"'binary'"
op|']'
op|'=='
string|'"nova-compute"'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'item'
op|'['
string|"'availability_zone'"
op|']'
op|','
name|'md'
op|'['
string|"'value'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'host'
op|'='
name|'aggregate_hosts'
op|'.'
name|'select'
op|'('
nl|'\n'
name|'aggregate_hosts'
op|'.'
name|'c'
op|'.'
name|'aggregate_id'
op|'=='
number|'2'
nl|'\n'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'host'
op|'['
string|"'host'"
op|']'
op|','
name|'data'
op|'['
number|'0'
op|']'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(sdague): id 3 is just non-existent'
nl|'\n'
name|'host'
op|'='
name|'aggregate_hosts'
op|'.'
name|'select'
op|'('
nl|'\n'
name|'aggregate_hosts'
op|'.'
name|'c'
op|'.'
name|'aggregate_id'
op|'=='
number|'3'
nl|'\n'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'host'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_check_147_no_duplicate_aggregate_hosts'
op|'('
name|'engine'
op|','
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_147_no_duplicate_aggregate_hosts
dedent|''
name|'def'
name|'_check_147_no_duplicate_aggregate_hosts'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'aggregate_hosts'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'aggregate_hosts'"
op|')'
newline|'\n'
name|'agg1_hosts'
op|'='
op|'['
name|'h'
op|'['
string|"'host'"
op|']'
name|'for'
name|'h'
name|'in'
name|'aggregate_hosts'
op|'.'
name|'select'
op|'('
nl|'\n'
name|'aggregate_hosts'
op|'.'
name|'c'
op|'.'
name|'aggregate_id'
op|'=='
number|'1'
nl|'\n'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'compute-host3'"
op|']'
op|','
name|'agg1_hosts'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_147
dedent|''
name|'def'
name|'_post_downgrade_147'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
comment|'# Test that availability_zone is back on the services table.'
nl|'\n'
indent|'        '
name|'services'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'services'"
op|')'
newline|'\n'
name|'record_list'
op|'='
name|'list'
op|'('
name|'services'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|')'
newline|'\n'
name|'test_data'
op|'='
name|'self'
op|'.'
name|'_upgrade_147_test_data'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'availability_zones'
op|'='
op|'['
name|'x'
op|'['
string|"'availability_zone'"
op|']'
name|'for'
name|'x'
name|'in'
name|'test_data'
op|']'
newline|'\n'
comment|'# Append the default availability_zone'
nl|'\n'
name|'availability_zones'
op|'.'
name|'append'
op|'('
string|"'nova'"
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'row'
name|'in'
name|'record_list'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'row'
op|'['
string|"'availability_zone'"
op|']'
op|','
name|'availability_zones'
op|')'
newline|'\n'
nl|'\n'
comment|'# migration 149, changes IPAddr storage format'
nl|'\n'
DECL|member|_pre_upgrade_149
dedent|''
dedent|''
name|'def'
name|'_pre_upgrade_149'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'provider_fw_rules'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'provider_fw_rules'"
op|')'
newline|'\n'
name|'console_pools'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'console_pools'"
op|')'
newline|'\n'
name|'data'
op|'='
op|'{'
nl|'\n'
string|"'provider_fw_rules'"
op|':'
nl|'\n'
op|'['
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
string|"'from_port'"
op|':'
number|'1234'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'1234'
op|','
string|"'cidr'"
op|':'
name|'str'
op|'('
name|'netaddr'
op|'.'
name|'IPNetwork'
op|'('
nl|'\n'
string|'"127.0.0.1/30"'
op|')'
op|')'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
string|"'from_port'"
op|':'
number|'1234'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'1234'
op|','
string|"'cidr'"
op|':'
name|'str'
op|'('
name|'netaddr'
op|'.'
name|'IPNetwork'
op|'('
nl|'\n'
string|'"128.128.128.128/16"'
op|')'
op|')'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
string|"'from_port'"
op|':'
number|'1234'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'1234'
op|','
string|"'cidr'"
op|':'
name|'str'
op|'('
name|'netaddr'
op|'.'
name|'IPNetwork'
op|'('
nl|'\n'
string|'"128.128.128.128/32"'
op|')'
op|')'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
string|"'from_port'"
op|':'
number|'1234'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'1234'
op|','
string|"'cidr'"
op|':'
name|'str'
op|'('
name|'netaddr'
op|'.'
name|'IPNetwork'
op|'('
nl|'\n'
string|'"2001:db8::1:2/48"'
op|')'
op|')'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
string|"'from_port'"
op|':'
number|'1234'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'1234'
op|','
string|"'cidr'"
op|':'
name|'str'
op|'('
name|'netaddr'
op|'.'
name|'IPNetwork'
op|'('
nl|'\n'
string|'"::1/64"'
op|')'
op|')'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
string|"'from_port'"
op|':'
number|'1234'
op|','
string|"'to_port'"
op|':'
number|'1234'
op|','
nl|'\n'
string|"'cidr'"
op|':'
name|'str'
op|'('
name|'netaddr'
op|'.'
name|'IPNetwork'
op|'('
nl|'\n'
string|'"0000:0000:0000:2013:0000:6535:abcd:ef11/64"'
op|')'
op|')'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
string|"'from_port'"
op|':'
number|'1234'
op|','
string|"'to_port'"
op|':'
number|'1234'
op|','
nl|'\n'
string|"'cidr'"
op|':'
name|'str'
op|'('
name|'netaddr'
op|'.'
name|'IPNetwork'
op|'('
nl|'\n'
string|'"0000:1020:0000:2013:0000:6535:abcd:ef11/128"'
op|')'
op|')'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'console_pools'"
op|':'
nl|'\n'
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'10.10.10.10'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'128.100.100.100'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'2002:2002:2002:2002:2002:2002:2002:2002'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'::1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'0000:0000:0000:2013:0000:6535:abcd:ef11'"
op|'}'
nl|'\n'
op|']'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'provider_fw_rules'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'data'
op|'['
string|"'provider_fw_rules'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'pool'
name|'in'
name|'data'
op|'['
string|"'console_pools'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'engine'
op|'.'
name|'execute'
op|'('
name|'console_pools'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'pool'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_check_149
dedent|''
name|'def'
name|'_check_149'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'provider_fw_rules'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'provider_fw_rules'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'provider_fw_rules'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'iplist'
op|'='
name|'map'
op|'('
name|'lambda'
name|'x'
op|':'
name|'str'
op|'('
name|'netaddr'
op|'.'
name|'IPNetwork'
op|'('
name|'x'
op|'['
string|"'cidr'"
op|']'
op|')'
op|')'
op|','
nl|'\n'
name|'data'
op|'['
string|"'provider_fw_rules'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'row'
name|'in'
name|'result'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'str'
op|'('
name|'netaddr'
op|'.'
name|'IPNetwork'
op|'('
name|'row'
op|'['
string|"'cidr'"
op|']'
op|')'
op|')'
op|','
name|'iplist'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'console_pools'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'console_pools'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'console_pools'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'iplist'
op|'='
name|'map'
op|'('
name|'lambda'
name|'x'
op|':'
name|'str'
op|'('
name|'netaddr'
op|'.'
name|'IPAddress'
op|'('
name|'x'
op|'['
string|"'address'"
op|']'
op|')'
op|')'
op|','
nl|'\n'
name|'data'
op|'['
string|"'console_pools'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'row'
name|'in'
name|'result'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'str'
op|'('
name|'netaddr'
op|'.'
name|'IPAddress'
op|'('
name|'row'
op|'['
string|"'address'"
op|']'
op|')'
op|')'
op|','
name|'iplist'
op|')'
newline|'\n'
nl|'\n'
comment|'# migration 151 - changes period_beginning and period_ending to DateTime'
nl|'\n'
DECL|member|_pre_upgrade_151
dedent|''
dedent|''
name|'def'
name|'_pre_upgrade_151'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'task_log'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'task_log'"
op|')'
newline|'\n'
name|'data'
op|'='
op|'{'
nl|'\n'
string|"'task_name'"
op|':'
string|"'The name of the task'"
op|','
nl|'\n'
string|"'state'"
op|':'
string|"'The state of the task'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'compute-host1'"
op|','
nl|'\n'
string|"'period_beginning'"
op|':'
name|'str'
op|'('
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2013'
op|','
number|'2'
op|','
number|'11'
op|')'
op|')'
op|','
nl|'\n'
string|"'period_ending'"
op|':'
name|'str'
op|'('
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2013'
op|','
number|'2'
op|','
number|'12'
op|')'
op|')'
op|','
nl|'\n'
string|"'message'"
op|':'
string|"'The task_log message'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'result'
op|'='
name|'task_log'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'data'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
name|'data'
op|'['
string|"'id'"
op|']'
op|'='
name|'result'
op|'.'
name|'inserted_primary_key'
op|'['
number|'0'
op|']'
newline|'\n'
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_check_151
dedent|''
name|'def'
name|'_check_151'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'task_log'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'task_log'"
op|')'
newline|'\n'
name|'row'
op|'='
name|'task_log'
op|'.'
name|'select'
op|'('
name|'task_log'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
name|'data'
op|'['
string|"'id'"
op|']'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'row'
op|'['
string|"'period_beginning'"
op|']'
op|','
name|'datetime'
op|'.'
name|'datetime'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'row'
op|'['
string|"'period_ending'"
op|']'
op|','
name|'datetime'
op|'.'
name|'datetime'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'data'
op|'['
string|"'period_beginning'"
op|']'
op|','
name|'str'
op|'('
name|'row'
op|'['
string|"'period_beginning'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'data'
op|'['
string|"'period_ending'"
op|']'
op|','
name|'str'
op|'('
name|'row'
op|'['
string|"'period_ending'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# migration 152 - convert deleted from boolean to int'
nl|'\n'
DECL|member|_pre_upgrade_152
dedent|''
name|'def'
name|'_pre_upgrade_152'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host1'
op|'='
string|"'compute-host1'"
newline|'\n'
name|'host2'
op|'='
string|"'compute-host2'"
newline|'\n'
comment|'# NOTE(sdague): start at #4 because services data already in table'
nl|'\n'
comment|'# from 147'
nl|'\n'
name|'services_data'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'4'
op|','
string|"'host'"
op|':'
name|'host1'
op|','
string|"'binary'"
op|':'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'0'
op|','
string|"'topic'"
op|':'
string|"'compute'"
op|','
string|"'deleted'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'5'
op|','
string|"'host'"
op|':'
name|'host1'
op|','
string|"'binary'"
op|':'
string|"'nova-compute'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'0'
op|','
string|"'topic'"
op|':'
string|"'compute'"
op|','
string|"'deleted'"
op|':'
name|'True'
op|'}'
nl|'\n'
op|']'
newline|'\n'
name|'volumes_data'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'id'"
op|':'
string|"'first'"
op|','
string|"'host'"
op|':'
name|'host1'
op|','
string|"'deleted'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
string|"'second'"
op|','
string|"'host'"
op|':'
name|'host2'
op|','
string|"'deleted'"
op|':'
name|'True'
op|'}'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'services'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'services'"
op|')'
newline|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'services'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'services_data'
op|')'
newline|'\n'
nl|'\n'
name|'volumes'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'volumes'"
op|')'
newline|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'volumes'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'volumes_data'
op|')'
newline|'\n'
name|'return'
name|'dict'
op|'('
name|'services'
op|'='
name|'services_data'
op|','
name|'volumes'
op|'='
name|'volumes_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_152
dedent|''
name|'def'
name|'_check_152'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'services'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'services'"
op|')'
newline|'\n'
name|'service'
op|'='
name|'services'
op|'.'
name|'select'
op|'('
name|'services'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
number|'4'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'service'
op|'.'
name|'deleted'
op|')'
newline|'\n'
name|'service'
op|'='
name|'services'
op|'.'
name|'select'
op|'('
name|'services'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
number|'5'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'service'
op|'.'
name|'id'
op|','
name|'service'
op|'.'
name|'deleted'
op|')'
newline|'\n'
nl|'\n'
name|'volumes'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'volumes'"
op|')'
newline|'\n'
name|'volume'
op|'='
name|'volumes'
op|'.'
name|'select'
op|'('
name|'volumes'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
string|'"first"'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'""'
op|','
name|'volume'
op|'.'
name|'deleted'
op|')'
newline|'\n'
name|'volume'
op|'='
name|'volumes'
op|'.'
name|'select'
op|'('
name|'volumes'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
string|'"second"'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'volume'
op|'.'
name|'id'
op|','
name|'volume'
op|'.'
name|'deleted'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_152
dedent|''
name|'def'
name|'_post_downgrade_152'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
comment|'# Check indexes exist as they used to'
nl|'\n'
indent|'        '
name|'if'
name|'engine'
op|'.'
name|'name'
op|'!='
string|"'sqlite'"
op|':'
newline|'\n'
indent|'            '
name|'test_data'
op|'='
name|'self'
op|'.'
name|'_pre_upgrade_194'
op|'('
name|'engine'
op|')'
newline|'\n'
name|'test_data'
op|'['
string|"'migrations'"
op|']'
op|'='
op|'('
op|'('
nl|'\n'
string|"'migrations_instance_uuid_and_status_idx'"
op|','
nl|'\n'
op|'['
string|"'deleted'"
op|','
string|"'instance_uuid'"
op|','
string|"'status'"
op|']'
nl|'\n'
op|')'
op|','
op|'('
nl|'\n'
string|"'migrations_by_host_nodes_and_status_idx'"
op|','
nl|'\n'
op|'['
string|"'deleted'"
op|','
string|"'source_compute'"
op|','
string|"'dest_compute'"
op|','
string|"'source_node'"
op|','
nl|'\n'
string|"'dest_node'"
op|','
string|"'status'"
op|']'
nl|'\n'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'table_name'
op|','
name|'indexes'
name|'in'
name|'test_data'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'meta'
op|'='
name|'sqlalchemy'
op|'.'
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
name|'table'
op|'='
name|'sqlalchemy'
op|'.'
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'index_data'
op|'='
op|'['
op|'('
name|'idx'
op|'.'
name|'name'
op|','
name|'idx'
op|'.'
name|'columns'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
nl|'\n'
name|'for'
name|'idx'
name|'in'
name|'table'
op|'.'
name|'indexes'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'name'
op|','
name|'columns'
name|'in'
name|'indexes'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'engine'
op|'.'
name|'name'
op|'=='
string|'"postgresql"'
op|':'
newline|'\n'
comment|'# we can not get correct order of columns in index'
nl|'\n'
comment|'# definition to postgresql using sqlalchemy.'
nl|'\n'
comment|'# So we sort columns list before compare'
nl|'\n'
comment|'# bug http://www.sqlalchemy.org/trac/ticket/2767'
nl|'\n'
indent|'                        '
name|'self'
op|'.'
name|'assertIn'
op|'('
nl|'\n'
op|'('
name|'name'
op|','
name|'sorted'
op|'('
name|'columns'
op|')'
op|')'
op|','
nl|'\n'
op|'('
op|'['
op|'('
name|'idx'
op|'['
number|'0'
op|']'
op|','
name|'sorted'
op|'('
name|'idx'
op|'['
number|'1'
op|']'
op|')'
op|')'
name|'for'
name|'idx'
name|'in'
name|'index_data'
op|']'
op|')'
nl|'\n'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'assertIn'
op|'('
op|'('
name|'name'
op|','
name|'columns'
op|')'
op|','
name|'index_data'
op|')'
newline|'\n'
nl|'\n'
comment|'# migration 153, copy flavor information into system_metadata'
nl|'\n'
DECL|member|_pre_upgrade_153
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'_pre_upgrade_153'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_types'
op|'='
op|'['
nl|'\n'
name|'dict'
op|'('
name|'id'
op|'='
number|'10'
op|','
name|'name'
op|'='
string|"'type1'"
op|','
name|'memory_mb'
op|'='
number|'128'
op|','
name|'vcpus'
op|'='
number|'1'
op|','
nl|'\n'
name|'root_gb'
op|'='
number|'10'
op|','
name|'ephemeral_gb'
op|'='
number|'0'
op|','
name|'flavorid'
op|'='
string|'"1"'
op|','
name|'swap'
op|'='
number|'0'
op|','
nl|'\n'
name|'rxtx_factor'
op|'='
number|'1.0'
op|','
name|'vcpu_weight'
op|'='
number|'1'
op|','
name|'disabled'
op|'='
name|'False'
op|','
nl|'\n'
name|'is_public'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'id'
op|'='
number|'11'
op|','
name|'name'
op|'='
string|"'type2'"
op|','
name|'memory_mb'
op|'='
number|'512'
op|','
name|'vcpus'
op|'='
number|'1'
op|','
nl|'\n'
name|'root_gb'
op|'='
number|'10'
op|','
name|'ephemeral_gb'
op|'='
number|'5'
op|','
name|'flavorid'
op|'='
string|'"2"'
op|','
name|'swap'
op|'='
number|'0'
op|','
nl|'\n'
name|'rxtx_factor'
op|'='
number|'1.5'
op|','
name|'vcpu_weight'
op|'='
number|'2'
op|','
name|'disabled'
op|'='
name|'False'
op|','
nl|'\n'
name|'is_public'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'id'
op|'='
number|'12'
op|','
name|'name'
op|'='
string|"'type3'"
op|','
name|'memory_mb'
op|'='
number|'128'
op|','
name|'vcpus'
op|'='
number|'1'
op|','
nl|'\n'
name|'root_gb'
op|'='
number|'10'
op|','
name|'ephemeral_gb'
op|'='
number|'0'
op|','
name|'flavorid'
op|'='
string|'"3"'
op|','
name|'swap'
op|'='
number|'0'
op|','
nl|'\n'
name|'rxtx_factor'
op|'='
number|'1.0'
op|','
name|'vcpu_weight'
op|'='
number|'1'
op|','
name|'disabled'
op|'='
name|'False'
op|','
nl|'\n'
name|'is_public'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'id'
op|'='
number|'13'
op|','
name|'name'
op|'='
string|"'type4'"
op|','
name|'memory_mb'
op|'='
number|'128'
op|','
name|'vcpus'
op|'='
number|'1'
op|','
nl|'\n'
name|'root_gb'
op|'='
number|'10'
op|','
name|'ephemeral_gb'
op|'='
number|'0'
op|','
name|'flavorid'
op|'='
string|'"4"'
op|','
name|'swap'
op|'='
number|'0'
op|','
nl|'\n'
name|'rxtx_factor'
op|'='
number|'1.0'
op|','
name|'vcpu_weight'
op|'='
name|'None'
op|','
name|'disabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'is_public'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'id'
op|'='
number|'14'
op|','
name|'name'
op|'='
string|"'type5'"
op|','
name|'memory_mb'
op|'='
number|'128'
op|','
name|'vcpus'
op|'='
number|'1'
op|','
nl|'\n'
name|'root_gb'
op|'='
number|'10'
op|','
name|'ephemeral_gb'
op|'='
number|'0'
op|','
name|'flavorid'
op|'='
string|'"5"'
op|','
name|'swap'
op|'='
number|'0'
op|','
nl|'\n'
name|'rxtx_factor'
op|'='
number|'1.0'
op|','
name|'vcpu_weight'
op|'='
number|'1'
op|','
name|'disabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'is_public'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'fake_instances'
op|'='
op|'['
nl|'\n'
name|'dict'
op|'('
name|'uuid'
op|'='
string|"'m153-uuid1'"
op|','
name|'instance_type_id'
op|'='
number|'10'
op|','
name|'deleted'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'uuid'
op|'='
string|"'m153-uuid2'"
op|','
name|'instance_type_id'
op|'='
number|'11'
op|','
name|'deleted'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'uuid'
op|'='
string|"'m153-uuid3'"
op|','
name|'instance_type_id'
op|'='
number|'12'
op|','
name|'deleted'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'uuid'
op|'='
string|"'m153-uuid4'"
op|','
name|'instance_type_id'
op|'='
number|'13'
op|','
name|'deleted'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
comment|'# NOTE(danms): no use of type5'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instances'"
op|')'
newline|'\n'
name|'instance_types'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instance_types'"
op|')'
newline|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'instance_types'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'fake_types'
op|')'
newline|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'instances'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'fake_instances'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'fake_types'
op|','
name|'fake_instances'
newline|'\n'
nl|'\n'
DECL|member|_check_153
dedent|''
name|'def'
name|'_check_153'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_types'
op|','
name|'fake_instances'
op|'='
name|'data'
newline|'\n'
comment|'# NOTE(danms): Fetch all the tables and data from scratch after change'
nl|'\n'
name|'sys_meta'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instance_system_metadata'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Collect all system metadata, indexed by instance_uuid'
nl|'\n'
name|'metadata'
op|'='
name|'collections'
op|'.'
name|'defaultdict'
op|'('
name|'dict'
op|')'
newline|'\n'
name|'for'
name|'values'
name|'in'
name|'sys_meta'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'['
name|'values'
op|'['
string|"'instance_uuid'"
op|']'
op|']'
op|'['
name|'values'
op|'['
string|"'key'"
op|']'
op|']'
op|'='
name|'values'
op|'['
string|"'value'"
op|']'
newline|'\n'
nl|'\n'
comment|'# Taken from nova/compute/api.py'
nl|'\n'
dedent|''
name|'instance_type_props'
op|'='
op|'['
string|"'id'"
op|','
string|"'name'"
op|','
string|"'memory_mb'"
op|','
string|"'vcpus'"
op|','
nl|'\n'
string|"'root_gb'"
op|','
string|"'ephemeral_gb'"
op|','
string|"'flavorid'"
op|','
nl|'\n'
string|"'swap'"
op|','
string|"'rxtx_factor'"
op|','
string|"'vcpu_weight'"
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'instance'
name|'in'
name|'fake_instances'
op|':'
newline|'\n'
indent|'            '
name|'inst_sys_meta'
op|'='
name|'metadata'
op|'['
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|']'
newline|'\n'
name|'inst_type'
op|'='
name|'fake_types'
op|'['
name|'instance'
op|'['
string|"'instance_type_id'"
op|']'
op|'-'
number|'10'
op|']'
newline|'\n'
name|'for'
name|'prop'
name|'in'
name|'instance_type_props'
op|':'
newline|'\n'
indent|'                '
name|'prop_name'
op|'='
string|"'instance_type_%s'"
op|'%'
name|'prop'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'prop_name'
op|','
name|'inst_sys_meta'
op|')'
newline|'\n'
name|'if'
name|'prop'
op|'=='
string|'"vcpu_weight"'
op|':'
newline|'\n'
comment|'# NOTE(danms) vcpu_weight can be NULL'
nl|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'inst_sys_meta'
op|'['
name|'prop_name'
op|']'
op|','
nl|'\n'
name|'inst_type'
op|'['
name|'prop'
op|']'
name|'and'
name|'str'
op|'('
name|'inst_type'
op|'['
name|'prop'
op|']'
op|')'
nl|'\n'
name|'or'
name|'None'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'inst_sys_meta'
op|'['
name|'prop_name'
op|']'
op|')'
op|','
nl|'\n'
name|'str'
op|'('
name|'inst_type'
op|'['
name|'prop'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# migration 154, add shadow tables for deleted data'
nl|'\n'
comment|'# There are 53 shadow tables but we only test one'
nl|'\n'
comment|'# There are additional tests in test_db_api.py'
nl|'\n'
DECL|member|_pre_upgrade_154
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'_pre_upgrade_154'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'meta'
op|'='
name|'sqlalchemy'
op|'.'
name|'schema'
op|'.'
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'reflect'
op|'('
name|'engine'
op|')'
newline|'\n'
name|'table_names'
op|'='
name|'meta'
op|'.'
name|'tables'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'for'
name|'table_name'
name|'in'
name|'table_names'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'table_name'
op|'.'
name|'startswith'
op|'('
string|'"_shadow"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_154
dedent|''
dedent|''
name|'def'
name|'_check_154'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'meta'
op|'='
name|'sqlalchemy'
op|'.'
name|'schema'
op|'.'
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'reflect'
op|'('
name|'engine'
op|')'
newline|'\n'
name|'table_names'
op|'='
name|'set'
op|'('
name|'meta'
op|'.'
name|'tables'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
newline|'\n'
name|'for'
name|'table_name'
name|'in'
name|'table_names'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'table_name'
op|'.'
name|'startswith'
op|'('
name|'db'
op|'.'
name|'_SHADOW_TABLE_PREFIX'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'shadow_name'
op|'='
name|'table_name'
newline|'\n'
name|'base_name'
op|'='
name|'table_name'
op|'.'
name|'replace'
op|'('
name|'db'
op|'.'
name|'_SHADOW_TABLE_PREFIX'
op|','
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'base_name'
op|','
name|'table_names'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'base_name'
op|'='
name|'table_name'
newline|'\n'
name|'shadow_name'
op|'='
name|'db'
op|'.'
name|'_SHADOW_TABLE_PREFIX'
op|'+'
name|'table_name'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'shadow_name'
op|','
name|'table_names'
op|')'
newline|'\n'
dedent|''
name|'shadow_table'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'shadow_name'
op|')'
newline|'\n'
name|'base_table'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'base_name'
op|')'
newline|'\n'
name|'base_columns'
op|'='
op|'['
op|']'
newline|'\n'
name|'shadow_columns'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'column'
name|'in'
name|'base_table'
op|'.'
name|'columns'
op|':'
newline|'\n'
indent|'                '
name|'base_columns'
op|'.'
name|'append'
op|'('
name|'column'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'column'
name|'in'
name|'shadow_table'
op|'.'
name|'columns'
op|':'
newline|'\n'
indent|'                '
name|'shadow_columns'
op|'.'
name|'append'
op|'('
name|'column'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'ii'
op|','
name|'base_column'
name|'in'
name|'enumerate'
op|'('
name|'base_columns'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'shadow_column'
op|'='
name|'shadow_columns'
op|'['
name|'ii'
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'base_column'
op|'.'
name|'name'
op|','
name|'shadow_column'
op|'.'
name|'name'
op|')'
newline|'\n'
comment|'# NullType needs a special case.  We end up with NullType on sqlite'
nl|'\n'
comment|'# where bigint is not defined.'
nl|'\n'
name|'if'
name|'isinstance'
op|'('
name|'base_column'
op|'.'
name|'type'
op|','
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'NullType'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'shadow_column'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'NullType'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# Identical types do not test equal because sqlalchemy does not'
nl|'\n'
comment|'# override __eq__, but if we stringify them then they do.'
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'base_column'
op|'.'
name|'type'
op|')'
op|','
nl|'\n'
name|'str'
op|'('
name|'shadow_column'
op|'.'
name|'type'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# migration 156 - introduce CIDR type'
nl|'\n'
DECL|member|_pre_upgrade_156
dedent|''
dedent|''
dedent|''
name|'def'
name|'_pre_upgrade_156'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
comment|'# assume the same data as from 149'
nl|'\n'
indent|'        '
name|'data'
op|'='
op|'{'
nl|'\n'
string|"'provider_fw_rules'"
op|':'
nl|'\n'
op|'['
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
string|"'from_port'"
op|':'
number|'1234'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'1234'
op|','
string|"'cidr'"
op|':'
name|'str'
op|'('
name|'netaddr'
op|'.'
name|'IPNetwork'
op|'('
nl|'\n'
string|'"127.0.0.1/30"'
op|')'
op|')'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
string|"'from_port'"
op|':'
number|'1234'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'1234'
op|','
string|"'cidr'"
op|':'
name|'str'
op|'('
name|'netaddr'
op|'.'
name|'IPNetwork'
op|'('
nl|'\n'
string|'"128.128.128.128/16"'
op|')'
op|')'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
string|"'from_port'"
op|':'
number|'1234'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'1234'
op|','
string|"'cidr'"
op|':'
name|'str'
op|'('
name|'netaddr'
op|'.'
name|'IPNetwork'
op|'('
nl|'\n'
string|'"128.128.128.128/32"'
op|')'
op|')'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
string|"'from_port'"
op|':'
number|'1234'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'1234'
op|','
string|"'cidr'"
op|':'
name|'str'
op|'('
name|'netaddr'
op|'.'
name|'IPNetwork'
op|'('
nl|'\n'
string|'"2001:db8::1:2/48"'
op|')'
op|')'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
string|"'from_port'"
op|':'
number|'1234'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'1234'
op|','
string|"'cidr'"
op|':'
name|'str'
op|'('
name|'netaddr'
op|'.'
name|'IPNetwork'
op|'('
nl|'\n'
string|'"::1/64"'
op|')'
op|')'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
string|"'from_port'"
op|':'
number|'1234'
op|','
string|"'to_port'"
op|':'
number|'1234'
op|','
nl|'\n'
string|"'cidr'"
op|':'
name|'str'
op|'('
name|'netaddr'
op|'.'
name|'IPNetwork'
op|'('
nl|'\n'
string|'"0000:0000:0000:2013:0000:6535:abcd:ef11/64"'
op|')'
op|')'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
string|"'from_port'"
op|':'
number|'1234'
op|','
string|"'to_port'"
op|':'
number|'1234'
op|','
nl|'\n'
string|"'cidr'"
op|':'
name|'str'
op|'('
name|'netaddr'
op|'.'
name|'IPNetwork'
op|'('
nl|'\n'
string|'"0000:1020:0000:2013:0000:6535:abcd:ef11/128"'
op|')'
op|')'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'console_pools'"
op|':'
nl|'\n'
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'10.10.10.10'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'128.100.100.100'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'2002:2002:2002:2002:2002:2002:2002:2002'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'::1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'0000:0000:0000:2013:0000:6535:abcd:ef11'"
op|'}'
nl|'\n'
op|']'
nl|'\n'
op|'}'
newline|'\n'
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_check_156
dedent|''
name|'def'
name|'_check_156'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
comment|'# recheck the 149 data'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_check_149'
op|'('
name|'engine'
op|','
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_158
dedent|''
name|'def'
name|'_pre_upgrade_158'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'networks'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'networks'"
op|')'
newline|'\n'
name|'data'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'vlan'"
op|':'
number|'1'
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'vlan'"
op|':'
number|'1'
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'vlan'"
op|':'
number|'1'
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'item'
name|'in'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'networks'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'item'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_check_158
dedent|''
name|'def'
name|'_check_158'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'networks'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'networks'"
op|')'
newline|'\n'
name|'rows'
op|'='
name|'networks'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'networks'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'!='
name|'networks'
op|'.'
name|'c'
op|'.'
name|'id'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_159
dedent|''
name|'def'
name|'_pre_upgrade_159'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
op|'{'
nl|'\n'
string|"'provider_fw_rules'"
op|':'
nl|'\n'
op|'['
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
string|"'from_port'"
op|':'
number|'1234'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'1234'
op|','
string|"'cidr'"
op|':'
string|'"127.0.0.1/30"'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
string|"'from_port'"
op|':'
number|'1234'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'1234'
op|','
string|"'cidr'"
op|':'
string|'"128.128.128.128/16"'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
string|"'from_port'"
op|':'
number|'1234'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'1234'
op|','
string|"'cidr'"
op|':'
string|'"128.128.128.128/32"'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
string|"'from_port'"
op|':'
number|'1234'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'1234'
op|','
string|"'cidr'"
op|':'
string|'"2001:db8::1:2/48"'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
string|"'from_port'"
op|':'
number|'1234'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'1234'
op|','
string|"'cidr'"
op|':'
string|'"::1/64"'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
string|"'from_port'"
op|':'
number|'1234'
op|','
string|"'to_port'"
op|':'
number|'1234'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|'"0000:0000:0000:2013:0000:6535:abcd:ef11/64"'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
string|"'from_port'"
op|':'
number|'1234'
op|','
string|"'to_port'"
op|':'
number|'1234'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|'"0000:1020:0000:2013:0000:6535:abcd:ef11/128"'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'console_pools'"
op|':'
nl|'\n'
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'10.10.10.10'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'128.100.100.100'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'2002:2002:2002:2002:2002:2002:2002:2002'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'::1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'0000:0000:0000:2013:0000:6535:abcd:ef11'"
op|'}'
nl|'\n'
op|']'
nl|'\n'
op|'}'
newline|'\n'
name|'return'
name|'data'
newline|'\n'
nl|'\n'
comment|'# migration 159 - revert ip column size'
nl|'\n'
DECL|member|_check_159
dedent|''
name|'def'
name|'_check_159'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dialect'
op|'='
name|'engine'
op|'.'
name|'url'
op|'.'
name|'get_dialect'
op|'('
op|')'
newline|'\n'
comment|'# NOTE(maurosr): check if column length is 39 again (it currently makes'
nl|'\n'
comment|'# sense only for mysql)'
nl|'\n'
name|'if'
name|'dialect'
name|'not'
name|'in'
op|'['
name|'postgresql'
op|'.'
name|'dialect'
op|','
name|'sqlite'
op|'.'
name|'dialect'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'console_pools'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'console_pools'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'console_pools'
op|'.'
name|'columns'
op|'['
string|"'address'"
op|']'
op|'.'
name|'type'
op|'.'
name|'length'
op|','
number|'39'
op|')'
newline|'\n'
comment|'# recheck the 149 data'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_check_149'
op|'('
name|'engine'
op|','
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_159
dedent|''
name|'def'
name|'_post_downgrade_159'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dialect'
op|'='
name|'engine'
op|'.'
name|'url'
op|'.'
name|'get_dialect'
op|'('
op|')'
newline|'\n'
comment|'# NOTE(maurosr): check if column length is 43 again (it currently makes'
nl|'\n'
comment|'# sense only for mysql)'
nl|'\n'
name|'if'
name|'dialect'
name|'not'
name|'in'
op|'['
name|'postgresql'
op|'.'
name|'dialect'
op|','
name|'sqlite'
op|'.'
name|'dialect'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'console_pools'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'console_pools'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'console_pools'
op|'.'
name|'columns'
op|'['
string|"'address'"
op|']'
op|'.'
name|'type'
op|'.'
name|'length'
op|','
number|'43'
op|')'
newline|'\n'
nl|'\n'
comment|'# migration 160, fix system_metadata NULL deleted entries to be 0'
nl|'\n'
DECL|member|_pre_upgrade_160
dedent|''
dedent|''
name|'def'
name|'_pre_upgrade_160'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_instances'
op|'='
op|'['
nl|'\n'
name|'dict'
op|'('
name|'uuid'
op|'='
string|"'m160-uuid1'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'uuid'
op|'='
string|"'m160-uuid2'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'uuid'
op|'='
string|"'m160-uuid3'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'fake_sys_meta'
op|'='
op|'['
nl|'\n'
name|'dict'
op|'('
name|'instance_uuid'
op|'='
string|"'m160-uuid1'"
op|','
name|'key'
op|'='
string|"'foo'"
op|','
name|'value'
op|'='
string|"'bar'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'instance_uuid'
op|'='
string|"'m160-uuid2'"
op|','
name|'key'
op|'='
string|"'foo2'"
op|','
name|'value'
op|'='
string|"'bar2'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'instance_uuid'
op|'='
string|"'m160-uuid3'"
op|','
name|'key'
op|'='
string|"'foo3'"
op|','
name|'value'
op|'='
string|"'bar3'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instances'"
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instance_system_metadata'"
op|')'
newline|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'instances'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'fake_instances'
op|')'
newline|'\n'
nl|'\n'
comment|'# Create the metadata entries'
nl|'\n'
name|'data'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'sm'
name|'in'
name|'fake_sys_meta'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'sys_meta'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'sm'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
name|'sm'
op|'['
string|"'id'"
op|']'
op|'='
name|'result'
op|'.'
name|'inserted_primary_key'
op|'['
number|'0'
op|']'
newline|'\n'
name|'data'
op|'['
name|'sm'
op|'['
string|"'id'"
op|']'
op|']'
op|'='
name|'sm'
newline|'\n'
nl|'\n'
comment|"# Make sure the entries in the DB for 'deleted' are None."
nl|'\n'
dedent|''
name|'our_ids'
op|'='
name|'data'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'results'
op|'='
name|'sys_meta'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'sys_meta'
op|'.'
name|'c'
op|'.'
name|'id'
op|'.'
name|'in_'
op|'('
name|'our_ids'
op|')'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
name|'results'
op|'='
name|'list'
op|'('
name|'results'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'our_ids'
op|')'
op|','
name|'len'
op|'('
name|'results'
op|')'
op|')'
newline|'\n'
name|'for'
name|'result'
name|'in'
name|'results'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'result'
op|'['
string|"'deleted'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_check_160
dedent|''
name|'def'
name|'_check_160'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'our_ids'
op|'='
name|'data'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instance_system_metadata'"
op|')'
newline|'\n'
name|'results'
op|'='
name|'sys_meta'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'sys_meta'
op|'.'
name|'c'
op|'.'
name|'id'
op|'.'
name|'in_'
op|'('
name|'our_ids'
op|')'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
name|'results'
op|'='
name|'list'
op|'('
name|'results'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'our_ids'
op|')'
op|','
name|'len'
op|'('
name|'results'
op|')'
op|')'
newline|'\n'
name|'for'
name|'result'
name|'in'
name|'results'
op|':'
newline|'\n'
indent|'            '
name|'the_id'
op|'='
name|'result'
op|'['
string|"'id'"
op|']'
newline|'\n'
comment|'# Make sure this is now 0.'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'deleted'"
op|']'
op|','
number|'0'
op|')'
newline|'\n'
comment|'# Make sure nothing else changed.'
nl|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'data'
op|'['
name|'the_id'
op|']'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'value'
op|','
name|'result'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# migration 161, fix system_metadata "None" values should be NULL'
nl|'\n'
DECL|member|_pre_upgrade_161
dedent|''
dedent|''
dedent|''
name|'def'
name|'_pre_upgrade_161'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_instances'
op|'='
op|'['
name|'dict'
op|'('
name|'uuid'
op|'='
string|"'m161-uuid1'"
op|')'
op|']'
newline|'\n'
name|'sm_base'
op|'='
name|'dict'
op|'('
name|'instance_uuid'
op|'='
string|"'m161-uuid1'"
op|','
name|'value'
op|'='
name|'None'
op|')'
newline|'\n'
name|'now'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'.'
name|'replace'
op|'('
name|'microsecond'
op|'='
number|'0'
op|')'
newline|'\n'
name|'fake_sys_meta'
op|'='
op|'['
nl|'\n'
comment|'# Should be fixed'
nl|'\n'
name|'dict'
op|'('
name|'sm_base'
op|','
name|'key'
op|'='
string|"'instance_type_foo'"
op|','
name|'value'
op|'='
string|"'None'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'sm_base'
op|','
name|'key'
op|'='
string|"'instance_type_bar'"
op|','
name|'value'
op|'='
string|"'88 mph'"
op|')'
op|','
nl|'\n'
nl|'\n'
comment|'# Should be unaffected'
nl|'\n'
name|'dict'
op|'('
name|'sm_base'
op|','
name|'key'
op|'='
string|"'instance_type_name'"
op|','
name|'value'
op|'='
string|"'None'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'sm_base'
op|','
name|'key'
op|'='
string|"'instance_type_flavorid'"
op|','
name|'value'
op|'='
string|"'None'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'sm_base'
op|','
name|'key'
op|'='
string|"'foo'"
op|','
name|'value'
op|'='
string|"'None'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'sm_base'
op|','
name|'key'
op|'='
string|"'instance_type_bat'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'sm_base'
op|','
name|'key'
op|'='
string|"'instance_type_baz'"
op|','
name|'created_at'
op|'='
name|'now'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instances'"
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instance_system_metadata'"
op|')'
newline|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'instances'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'fake_instances'
op|')'
newline|'\n'
nl|'\n'
name|'data'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'sm'
name|'in'
name|'fake_sys_meta'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'sys_meta'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'sm'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
name|'sm'
op|'['
string|"'id'"
op|']'
op|'='
name|'result'
op|'.'
name|'inserted_primary_key'
op|'['
number|'0'
op|']'
newline|'\n'
name|'data'
op|'['
name|'sm'
op|'['
string|"'id'"
op|']'
op|']'
op|'='
name|'sm'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_check_161
dedent|''
name|'def'
name|'_check_161'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'our_ids'
op|'='
name|'data'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'sys_meta'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instance_system_metadata'"
op|')'
newline|'\n'
name|'results'
op|'='
name|'sys_meta'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'sys_meta'
op|'.'
name|'c'
op|'.'
name|'id'
op|'.'
name|'in_'
op|'('
name|'our_ids'
op|')'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
name|'results'
op|'='
name|'list'
op|'('
name|'results'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'our_ids'
op|')'
op|','
name|'len'
op|'('
name|'results'
op|')'
op|')'
newline|'\n'
name|'for'
name|'result'
name|'in'
name|'results'
op|':'
newline|'\n'
indent|'            '
name|'the_id'
op|'='
name|'result'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'key'
op|'='
name|'result'
op|'['
string|"'key'"
op|']'
newline|'\n'
name|'original'
op|'='
name|'data'
op|'['
name|'the_id'
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'key'
op|'=='
string|"'instance_type_baz'"
op|':'
newline|'\n'
comment|'# Neither value nor created_at should have been altered'
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'value'"
op|']'
op|','
name|'original'
op|'['
string|"'value'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'created_at'"
op|']'
op|','
name|'original'
op|'['
string|"'created_at'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'key'
name|'in'
op|'['
string|"'instance_type_name'"
op|','
string|"'instance_type_flavorid'"
op|']'
op|':'
newline|'\n'
comment|'# These should not have their values changed, but should'
nl|'\n'
comment|'# have corrected created_at stamps'
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'value'"
op|']'
op|','
name|'original'
op|'['
string|"'value'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'result'
op|'['
string|"'created_at'"
op|']'
op|','
name|'datetime'
op|'.'
name|'datetime'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'key'
op|'.'
name|'startswith'
op|'('
string|"'instance_type'"
op|')'
op|':'
newline|'\n'
comment|'# Values like instance_type_% should be stamped and values'
nl|'\n'
comment|"# converted from 'None' to None where appropriate"
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'value'"
op|']'
op|','
nl|'\n'
name|'None'
name|'if'
name|'original'
op|'['
string|"'value'"
op|']'
op|'=='
string|"'None'"
nl|'\n'
name|'else'
name|'original'
op|'['
string|"'value'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'result'
op|'['
string|"'created_at'"
op|']'
op|','
name|'datetime'
op|'.'
name|'datetime'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# None of the non-instance_type values should have'
nl|'\n'
comment|"# been touched. Since we didn't set created_at on any"
nl|'\n'
comment|'# of them, they should all still be None.'
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'value'"
op|']'
op|','
name|'original'
op|'['
string|"'value'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'result'
op|'['
string|"'created_at'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_172
dedent|''
dedent|''
dedent|''
name|'def'
name|'_pre_upgrade_172'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_types'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instance_types'"
op|')'
newline|'\n'
name|'data'
op|'='
op|'['
nl|'\n'
name|'dict'
op|'('
name|'id'
op|'='
number|'21'
op|','
name|'name'
op|'='
string|"'uc_name0'"
op|','
name|'memory_mb'
op|'='
number|'128'
op|','
name|'vcpus'
op|'='
number|'1'
op|','
nl|'\n'
name|'root_gb'
op|'='
number|'10'
op|','
name|'ephemeral_gb'
op|'='
number|'0'
op|','
name|'flavorid'
op|'='
string|'"uc_flavor1"'
op|','
name|'swap'
op|'='
number|'0'
op|','
nl|'\n'
name|'rxtx_factor'
op|'='
number|'1.0'
op|','
name|'vcpu_weight'
op|'='
number|'1'
op|','
name|'disabled'
op|'='
name|'False'
op|','
nl|'\n'
name|'is_public'
op|'='
name|'True'
op|','
name|'deleted'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'id'
op|'='
number|'22'
op|','
name|'name'
op|'='
string|"'uc_name1'"
op|','
name|'memory_mb'
op|'='
number|'128'
op|','
name|'vcpus'
op|'='
number|'1'
op|','
nl|'\n'
name|'root_gb'
op|'='
number|'10'
op|','
name|'ephemeral_gb'
op|'='
number|'0'
op|','
name|'flavorid'
op|'='
string|'"uc_flavor1"'
op|','
name|'swap'
op|'='
number|'0'
op|','
nl|'\n'
name|'rxtx_factor'
op|'='
number|'1.0'
op|','
name|'vcpu_weight'
op|'='
number|'1'
op|','
name|'disabled'
op|'='
name|'False'
op|','
nl|'\n'
name|'is_public'
op|'='
name|'True'
op|','
name|'deleted'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'id'
op|'='
number|'23'
op|','
name|'name'
op|'='
string|"'uc_name2'"
op|','
name|'memory_mb'
op|'='
number|'128'
op|','
name|'vcpus'
op|'='
number|'1'
op|','
nl|'\n'
name|'root_gb'
op|'='
number|'10'
op|','
name|'ephemeral_gb'
op|'='
number|'0'
op|','
name|'flavorid'
op|'='
string|'"uc_flavor2"'
op|','
name|'swap'
op|'='
number|'0'
op|','
nl|'\n'
name|'rxtx_factor'
op|'='
number|'1.0'
op|','
name|'vcpu_weight'
op|'='
number|'1'
op|','
name|'disabled'
op|'='
name|'False'
op|','
nl|'\n'
name|'is_public'
op|'='
name|'True'
op|','
name|'deleted'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'id'
op|'='
number|'24'
op|','
name|'name'
op|'='
string|"'uc_name2'"
op|','
name|'memory_mb'
op|'='
number|'128'
op|','
name|'vcpus'
op|'='
number|'1'
op|','
nl|'\n'
name|'root_gb'
op|'='
number|'10'
op|','
name|'ephemeral_gb'
op|'='
number|'0'
op|','
name|'flavorid'
op|'='
string|'"uc_flavor3"'
op|','
name|'swap'
op|'='
number|'0'
op|','
nl|'\n'
name|'rxtx_factor'
op|'='
number|'1.0'
op|','
name|'vcpu_weight'
op|'='
number|'1'
op|','
name|'disabled'
op|'='
name|'False'
op|','
nl|'\n'
name|'is_public'
op|'='
name|'True'
op|','
name|'deleted'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'instance_types'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'data'
op|')'
newline|'\n'
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_check_172
dedent|''
name|'def'
name|'_check_172'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_types'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instance_types'"
op|')'
newline|'\n'
nl|'\n'
name|'not_deleted'
op|'='
name|'instance_types'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'!='
name|'instance_types'
op|'.'
name|'c'
op|'.'
name|'id'
newline|'\n'
nl|'\n'
comment|'# There is only one instance_type with flavor `uc_flavor1`'
nl|'\n'
name|'uc_flavor1_rows'
op|'='
name|'instance_types'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'instance_types'
op|'.'
name|'c'
op|'.'
name|'flavorid'
op|'=='
string|"'uc_flavor1'"
op|')'
op|'.'
name|'where'
op|'('
name|'not_deleted'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'uc_flavor1_rows'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# There is only one instance_type with name `uc_name2`'
nl|'\n'
name|'uc_name2_rows'
op|'='
name|'instance_types'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'instance_types'
op|'.'
name|'c'
op|'.'
name|'name'
op|'=='
string|"'uc_name2'"
op|')'
op|'.'
name|'where'
op|'('
name|'not_deleted'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'uc_name2_rows'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# migration 173, add unique constraint to keypairs'
nl|'\n'
DECL|member|_pre_upgrade_173
dedent|''
name|'def'
name|'_pre_upgrade_173'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'created_at'
op|'='
op|'['
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
name|'for'
name|'x'
name|'in'
name|'range'
op|'('
number|'0'
op|','
number|'7'
op|')'
op|']'
newline|'\n'
name|'fake_keypairs'
op|'='
op|'['
name|'dict'
op|'('
name|'name'
op|'='
string|"'key1'"
op|','
name|'user_id'
op|'='
string|"'1a'"
op|','
nl|'\n'
name|'created_at'
op|'='
name|'created_at'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'deleted'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'name'
op|'='
string|"'key1'"
op|','
name|'user_id'
op|'='
string|"'1a'"
op|','
nl|'\n'
name|'created_at'
op|'='
name|'created_at'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'deleted'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'name'
op|'='
string|"'key1'"
op|','
name|'user_id'
op|'='
string|"'1a'"
op|','
nl|'\n'
name|'created_at'
op|'='
name|'created_at'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
name|'deleted'
op|'='
number|'0'
op|')'
nl|'\n'
op|']'
newline|'\n'
name|'keypairs'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'key_pairs'"
op|')'
newline|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'keypairs'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'fake_keypairs'
op|')'
newline|'\n'
name|'return'
name|'fake_keypairs'
newline|'\n'
nl|'\n'
DECL|member|_check_173
dedent|''
name|'def'
name|'_check_173'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'keypairs'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'key_pairs'"
op|')'
newline|'\n'
comment|'# Unique constraints are not listed in table.constraints for any db.'
nl|'\n'
comment|'# So, simply add a duplicate keypair to check if unique constraint'
nl|'\n'
comment|'# is applied to the key_pairs table or not.'
nl|'\n'
name|'insert'
op|'='
name|'keypairs'
op|'.'
name|'insert'
op|'('
op|')'
newline|'\n'
name|'duplicate_keypair'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"'key4'"
op|','
name|'user_id'
op|'='
string|"'4a'"
op|','
nl|'\n'
name|'created_at'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|','
nl|'\n'
name|'deleted'
op|'='
number|'0'
op|')'
newline|'\n'
name|'insert'
op|'.'
name|'execute'
op|'('
name|'duplicate_keypair'
op|')'
newline|'\n'
comment|'# Insert again'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'IntegrityError'
op|','
name|'insert'
op|'.'
name|'execute'
op|','
nl|'\n'
name|'duplicate_keypair'
op|')'
newline|'\n'
nl|'\n'
comment|'# Get all unique records'
nl|'\n'
name|'rows'
op|'='
name|'keypairs'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'keypairs'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'!='
name|'keypairs'
op|'.'
name|'c'
op|'.'
name|'id'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
comment|'# Ensure the number of unique keypairs is correct'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_174
dedent|''
name|'def'
name|'_pre_upgrade_174'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_types'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instance_types'"
op|')'
newline|'\n'
name|'instance_type_projects'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
nl|'\n'
string|"'instance_type_projects'"
op|')'
newline|'\n'
nl|'\n'
name|'instance_type_data'
op|'='
op|'['
nl|'\n'
name|'dict'
op|'('
name|'id'
op|'='
number|'31'
op|','
name|'name'
op|'='
string|"'itp_name0'"
op|','
name|'memory_mb'
op|'='
number|'128'
op|','
name|'vcpus'
op|'='
number|'1'
op|','
nl|'\n'
name|'root_gb'
op|'='
number|'10'
op|','
name|'ephemeral_gb'
op|'='
number|'0'
op|','
name|'flavorid'
op|'='
string|'"itp_flavor1"'
op|','
name|'swap'
op|'='
number|'0'
op|','
nl|'\n'
name|'rxtx_factor'
op|'='
number|'1.0'
op|','
name|'vcpu_weight'
op|'='
number|'1'
op|','
name|'disabled'
op|'='
name|'False'
op|','
nl|'\n'
name|'is_public'
op|'='
name|'True'
op|','
name|'deleted'
op|'='
number|'0'
op|')'
nl|'\n'
op|']'
newline|'\n'
name|'instance_type_projects_data'
op|'='
op|'['
nl|'\n'
name|'dict'
op|'('
name|'project_id'
op|'='
string|"'pr1'"
op|','
name|'instance_type_id'
op|'='
number|'31'
op|','
name|'deleted'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'project_id'
op|'='
string|"'pr1'"
op|','
name|'instance_type_id'
op|'='
number|'31'
op|','
name|'deleted'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'project_id'
op|'='
string|"'pr2'"
op|','
name|'instance_type_id'
op|'='
number|'31'
op|','
name|'deleted'
op|'='
number|'0'
op|')'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'instance_types'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'instance_type_data'
op|')'
newline|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'instance_type_projects'
op|'.'
name|'insert'
op|'('
op|')'
op|','
nl|'\n'
name|'instance_type_projects_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_174
dedent|''
name|'def'
name|'_check_174'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'it_projects'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instance_type_projects'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_
name|'def'
name|'get_'
op|'('
name|'project_id'
op|','
name|'it_id'
op|','
name|'deleted'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'deleted_value'
op|'='
number|'0'
name|'if'
name|'not'
name|'deleted'
name|'else'
name|'it_projects'
op|'.'
name|'c'
op|'.'
name|'id'
newline|'\n'
name|'return'
name|'it_projects'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'it_projects'
op|'.'
name|'c'
op|'.'
name|'project_id'
op|'=='
name|'project_id'
op|')'
op|'.'
name|'where'
op|'('
name|'it_projects'
op|'.'
name|'c'
op|'.'
name|'instance_type_id'
op|'=='
name|'it_id'
op|')'
op|'.'
name|'where'
op|'('
name|'it_projects'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'=='
name|'deleted_value'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'pr1'"
op|','
string|"'31'"
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'pr1'"
op|','
string|"'31'"
op|','
name|'True'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'pr2'"
op|','
string|"'31'"
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'IntegrityError'
op|','
nl|'\n'
name|'it_projects'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|','
nl|'\n'
name|'dict'
op|'('
name|'instance_type'
op|'='
number|'31'
op|','
name|'project_id'
op|'='
string|"'pr1'"
op|','
name|'deleted'
op|'='
number|'0'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# migration 175, Modify volume_usage-cache, Drop column instance_id, add'
nl|'\n'
comment|'# columns instance_uuid, project_id and user_id'
nl|'\n'
DECL|member|_pre_upgrade_175
dedent|''
name|'def'
name|'_pre_upgrade_175'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'volume_usage_cache'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'volume_usage_cache'"
op|')'
newline|'\n'
name|'fake_usage'
op|'='
op|'{'
string|"'volume_id'"
op|':'
string|"'fake_volume_id'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'tot_last_refreshed'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|','
nl|'\n'
string|"'tot_reads'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'tot_read_bytes'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'tot_writes'"
op|':'
number|'4'
op|','
nl|'\n'
string|"'tot_write_bytes'"
op|':'
number|'5'
op|','
nl|'\n'
string|"'curr_last_refreshed'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|','
nl|'\n'
string|"'curr_reads'"
op|':'
number|'6'
op|','
nl|'\n'
string|"'curr_read_bytes'"
op|':'
number|'7'
op|','
nl|'\n'
string|"'curr_writes'"
op|':'
number|'8'
op|','
nl|'\n'
string|"'curr_write_bytes'"
op|':'
number|'9'
op|'}'
newline|'\n'
name|'volume_usage_cache'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
name|'fake_usage'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_175
dedent|''
name|'def'
name|'_check_175'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'volume_usage_cache'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'volume_usage_cache'"
op|')'
newline|'\n'
comment|'# Get the record'
nl|'\n'
name|'rows'
op|'='
name|'volume_usage_cache'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'rows'
op|'['
number|'0'
op|']'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'rows'
op|'['
number|'0'
op|']'
op|'['
string|"'project_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'rows'
op|'['
number|'0'
op|']'
op|'['
string|"'user_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'instance_id'"
op|','
name|'rows'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_175
dedent|''
name|'def'
name|'_post_downgrade_175'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'volume_usage_cache'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'volume_usage_cache'"
op|')'
newline|'\n'
comment|'# Get the record'
nl|'\n'
name|'rows'
op|'='
name|'volume_usage_cache'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'instance_uuid'"
op|','
name|'rows'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'project_id'"
op|','
name|'rows'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'user_id'"
op|','
name|'rows'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'rows'
op|'['
number|'0'
op|']'
op|'['
string|"'instance_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_176
dedent|''
name|'def'
name|'_check_176'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'volume_usage_cache'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'volume_usage_cache'"
op|')'
newline|'\n'
comment|'# Get the record'
nl|'\n'
name|'rows'
op|'='
name|'volume_usage_cache'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'rows'
op|'['
number|'0'
op|']'
op|'['
string|"'availability_zone'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_176
dedent|''
name|'def'
name|'_post_downgrade_176'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'volume_usage_cache'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'volume_usage_cache'"
op|')'
newline|'\n'
comment|'# Get the record'
nl|'\n'
name|'rows'
op|'='
name|'volume_usage_cache'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'availability_zone'"
op|','
name|'rows'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_177
dedent|''
name|'def'
name|'_pre_upgrade_177'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'floating_ips'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'floating_ips'"
op|')'
newline|'\n'
name|'data'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'128.128.128.128'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'128.128.128.128'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'128.128.128.129'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'item'
name|'in'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'floating_ips'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'item'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_check_177
dedent|''
name|'def'
name|'_check_177'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'floating_ips'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'floating_ips'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_
name|'def'
name|'get_'
op|'('
name|'address'
op|','
name|'deleted'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'deleted_value'
op|'='
number|'0'
name|'if'
name|'not'
name|'deleted'
name|'else'
name|'floating_ips'
op|'.'
name|'c'
op|'.'
name|'id'
newline|'\n'
name|'return'
name|'floating_ips'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'floating_ips'
op|'.'
name|'c'
op|'.'
name|'address'
op|'=='
name|'address'
op|')'
op|'.'
name|'where'
op|'('
name|'floating_ips'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'=='
name|'deleted_value'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'128.128.128.128'"
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'128.128.128.128'"
op|','
name|'True'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'128.128.128.129'"
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'IntegrityError'
op|','
nl|'\n'
name|'floating_ips'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|','
nl|'\n'
name|'dict'
op|'('
name|'address'
op|'='
string|"'128.128.128.129'"
op|','
name|'deleted'
op|'='
number|'0'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# migration 179 - convert cells.deleted from boolean to int'
nl|'\n'
DECL|member|_pre_upgrade_179
dedent|''
name|'def'
name|'_pre_upgrade_179'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cells_data'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'4'
op|','
string|"'deleted'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'5'
op|','
string|"'deleted'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'cells'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'cells'"
op|')'
newline|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'cells'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'cells_data'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'dict'
op|'('
name|'cells'
op|'='
name|'cells_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_179
dedent|''
name|'def'
name|'_check_179'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cells'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'cells'"
op|')'
newline|'\n'
name|'cell'
op|'='
name|'cells'
op|'.'
name|'select'
op|'('
name|'cells'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
number|'4'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4'
op|','
name|'cell'
op|'.'
name|'deleted'
op|')'
newline|'\n'
name|'cell'
op|'='
name|'cells'
op|'.'
name|'select'
op|'('
name|'cells'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
number|'5'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'cell'
op|'.'
name|'deleted'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_180
dedent|''
name|'def'
name|'_check_180'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'db_utils'
op|'.'
name|'check_shadow_table'
op|'('
name|'engine'
op|','
nl|'\n'
string|'"volume_usage_cache"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_181
dedent|''
name|'def'
name|'_check_181'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'db_utils'
op|'.'
name|'check_shadow_table'
op|'('
name|'engine'
op|','
string|"'cells'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_182
dedent|''
name|'def'
name|'_pre_upgrade_182'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'CIDR'
op|'='
string|"'6666:1020:1000:2013:1000:6535:abcd:abcd'"
newline|'\n'
nl|'\n'
name|'security_group_rules'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'shadow_security_group_rules'"
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'182'
op|','
nl|'\n'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
nl|'\n'
string|"'from_port'"
op|':'
number|'6666'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'9999'
op|','
nl|'\n'
string|"'cidr'"
op|':'
name|'CIDR'
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
nl|'\n'
op|'}'
newline|'\n'
name|'security_group_rules'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'values'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'networks'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'shadow_networks'"
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'182'
op|','
nl|'\n'
string|"'vlan'"
op|':'
number|'100500'
op|','
nl|'\n'
string|"'cidr'"
op|':'
name|'CIDR'
op|','
nl|'\n'
string|"'cidr_v6'"
op|':'
name|'CIDR'
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
nl|'\n'
op|'}'
newline|'\n'
name|'networks'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'values'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'provider_fw_rules'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
nl|'\n'
string|"'shadow_provider_fw_rules'"
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'182'
op|','
nl|'\n'
string|"'protocol'"
op|':'
string|"'tcp'"
op|','
nl|'\n'
string|"'from_port'"
op|':'
number|'6666'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'9999'
op|','
nl|'\n'
string|"'cidr'"
op|':'
name|'CIDR'
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
nl|'\n'
op|'}'
newline|'\n'
name|'provider_fw_rules'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'values'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'cidr'"
op|':'
name|'CIDR'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_check_182
dedent|''
name|'def'
name|'_check_182'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'db_utils'
op|'.'
name|'check_shadow_table'
op|'('
name|'engine'
op|','
nl|'\n'
string|"'security_group_rules'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'db_utils'
op|'.'
name|'check_shadow_table'
op|'('
name|'engine'
op|','
nl|'\n'
string|"'provider_fw_rules'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'db_utils'
op|'.'
name|'check_shadow_table'
op|'('
name|'engine'
op|','
string|"'networks'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'table_fields'
op|'='
op|'{'
nl|'\n'
string|"'shadow_security_group_rules'"
op|':'
op|'['
string|"'cidr'"
op|']'
op|','
nl|'\n'
string|"'shadow_networks'"
op|':'
op|'['
string|"'cidr'"
op|','
string|"'cidr_v6'"
op|']'
op|','
nl|'\n'
string|"'shadow_provider_fw_rules'"
op|':'
op|'['
string|"'cidr'"
op|']'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'for'
name|'table_name'
op|','
name|'fields'
name|'in'
name|'table_fields'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'table'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'table_name'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'table'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
number|'182'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'for'
name|'field'
name|'in'
name|'fields'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'rows'
op|'['
number|'0'
op|']'
op|'['
name|'field'
op|']'
op|','
name|'data'
op|'['
string|"'cidr'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'field'
name|'in'
name|'fields'
op|':'
newline|'\n'
comment|'# we should be able to store mask in cidr fields also'
nl|'\n'
indent|'                '
name|'table'
op|'.'
name|'update'
op|'('
op|')'
op|'.'
name|'values'
op|'('
op|'{'
name|'field'
op|':'
name|'data'
op|'['
string|"'cidr'"
op|']'
op|'+'
string|"'/128'"
op|'}'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_183
dedent|''
dedent|''
dedent|''
name|'def'
name|'_check_183'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'table_name'
op|'='
string|"'security_group_default_rules'"
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'db_utils'
op|'.'
name|'check_shadow_table'
op|'('
name|'engine'
op|','
name|'table_name'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_184
dedent|''
name|'def'
name|'_check_184'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'db_utils'
op|'.'
name|'check_shadow_table'
op|'('
name|'engine'
op|','
string|"'instances'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'db_utils'
op|'.'
name|'check_shadow_table'
op|'('
name|'engine'
op|','
string|"'networks'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'db_utils'
op|'.'
name|'check_shadow_table'
op|'('
name|'engine'
op|','
string|"'fixed_ips'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'db_utils'
op|'.'
name|'check_shadow_table'
op|'('
name|'engine'
op|','
string|"'floating_ips'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'db_utils'
op|'.'
name|'check_shadow_table'
op|'('
name|'engine'
op|','
string|"'console_pools'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_unique_constraint_check_migrate_185
dedent|''
name|'def'
name|'_unique_constraint_check_migrate_185'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'check'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test check unique constraint behavior.\n\n        It should be the same before and after migration because we\n        changed their names only.\n        """'
newline|'\n'
nl|'\n'
name|'data_list'
op|'='
op|'['
nl|'\n'
op|'('
string|'"floating_ips"'
op|','
op|'{'
string|"'address'"
op|':'
string|"'10.12.14.16'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|')'
op|','
nl|'\n'
op|'('
string|'"instance_info_caches"'
op|','
op|'{'
string|"'instance_uuid'"
op|':'
string|"'m161-uuid1'"
op|'}'
op|')'
op|','
nl|'\n'
op|'('
string|"'instance_type_projects'"
op|','
op|'{'
string|"'instance_type_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'116'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|')'
op|','
nl|'\n'
op|'('
string|"'instance_types'"
op|','
op|'{'
string|"'flavorid'"
op|':'
string|'"flavorid_12"'
op|','
string|"'deleted'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'64'
op|','
string|"'vcpus'"
op|':'
number|'10'
op|','
string|"'swap'"
op|':'
number|'100'
op|'}'
op|')'
op|','
nl|'\n'
op|'('
string|"'instance_types'"
op|','
op|'{'
string|"'name'"
op|':'
string|'"name_123"'
op|','
string|"'deleted'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'128'
op|','
string|"'vcpus'"
op|':'
number|'11'
op|','
string|"'swap'"
op|':'
number|'300'
op|'}'
op|')'
op|','
nl|'\n'
op|'('
string|"'key_pairs'"
op|','
op|'{'
string|"'user_id'"
op|':'
number|'1'
op|','
string|"'name'"
op|':'
string|'"name_qwer"'
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|')'
op|','
nl|'\n'
op|'('
string|"'networks'"
op|','
op|'{'
string|"'vlan'"
op|':'
string|"'123'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|')'
op|','
nl|'\n'
op|'('
string|"'task_log'"
op|','
op|'{'
string|"'task_name'"
op|':'
string|"'task_123'"
op|','
string|"'host'"
op|':'
string|"'localhost'"
op|','
nl|'\n'
string|"'period_beginning'"
op|':'
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2013'
op|','
number|'2'
op|','
number|'11'
op|')'
op|','
nl|'\n'
string|"'period_ending'"
op|':'
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2015'
op|','
number|'1'
op|','
number|'1'
op|')'
op|','
nl|'\n'
string|"'state'"
op|':'
string|"'state_1'"
op|','
string|"'message'"
op|':'
string|"'msg_1'"
op|'}'
op|')'
op|','
nl|'\n'
op|'('
string|"'virtual_interfaces'"
op|','
op|'{'
string|"'address'"
op|':'
string|"'192.168.0.0'"
op|'}'
op|')'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'table_name'
op|','
name|'data'
name|'in'
name|'data_list'
op|':'
newline|'\n'
indent|'            '
name|'table'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'table_name'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'check'
op|':'
newline|'\n'
indent|'                '
name|'table'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'data'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|"# we replace values for some columns because they don't"
nl|'\n'
comment|'# belong to unique constraint'
nl|'\n'
indent|'                '
name|'if'
name|'table_name'
op|'=='
string|'"instance_types"'
op|':'
newline|'\n'
indent|'                    '
name|'for'
name|'key'
name|'in'
op|'('
string|'"memory_mb"'
op|','
string|'"vcpus"'
op|','
string|'"swap"'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'data'
op|'['
name|'key'
op|']'
op|'='
name|'data'
op|'['
name|'key'
op|']'
op|'*'
number|'2'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'table_name'
op|'=='
string|'"task_log"'
op|':'
newline|'\n'
indent|'                    '
name|'data'
op|'['
string|'"message"'
op|']'
op|'='
string|"'msg_2'"
newline|'\n'
name|'data'
op|'['
string|'"state"'
op|']'
op|'='
string|"'state_2'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'IntegrityError'
op|','
nl|'\n'
name|'table'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|','
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_185
dedent|''
dedent|''
dedent|''
name|'def'
name|'_pre_upgrade_185'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_unique_constraint_check_migrate_185'
op|'('
name|'engine'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|check_185
dedent|''
name|'def'
name|'check_185'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_unique_constraint_check_migrate_185'
op|'('
name|'engine'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_185
dedent|''
name|'def'
name|'_post_downgrade_185'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_unique_constraint_check_migrate_185'
op|'('
name|'engine'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_186
dedent|''
name|'def'
name|'_pre_upgrade_186'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mig186_fake_instances'
op|'='
op|'['
nl|'\n'
name|'dict'
op|'('
name|'uuid'
op|'='
string|"'mig186_uuid-1'"
op|','
name|'image_ref'
op|'='
string|"'fake_image_1'"
op|','
nl|'\n'
name|'root_device_name'
op|'='
string|"'/dev/vda'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'uuid'
op|'='
string|"'mig186_uuid-2'"
op|','
name|'image_ref'
op|'='
string|"''"
op|','
nl|'\n'
name|'root_device_name'
op|'='
string|"'vda'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'uuid'
op|'='
string|"'mig186_uuid-3'"
op|','
name|'image_ref'
op|'='
string|"'fake_image_2'"
op|','
nl|'\n'
name|'root_device_name'
op|'='
string|"'/dev/vda'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mig186_fake_bdms'
op|'='
op|'['
nl|'\n'
comment|'# Instance 1 - image, volume and swap'
nl|'\n'
name|'dict'
op|'('
name|'instance_uuid'
op|'='
string|"'mig186_uuid-1'"
op|','
name|'device_name'
op|'='
string|"'/dev/vdc'"
op|','
nl|'\n'
name|'volume_id'
op|'='
string|"'fake_volume_1'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'instance_uuid'
op|'='
string|"'mig186_uuid-1'"
op|','
name|'device_name'
op|'='
string|"'/dev/vdb'"
op|','
nl|'\n'
name|'virtual_name'
op|'='
string|"'swap'"
op|')'
op|','
nl|'\n'
comment|'# Instance 2 - no image. snapshot and volume'
nl|'\n'
name|'dict'
op|'('
name|'instance_uuid'
op|'='
string|"'mig186_uuid-2'"
op|','
name|'device_name'
op|'='
string|"'/dev/vda'"
op|','
nl|'\n'
name|'snapshot_id'
op|'='
string|"'fake_snap_1'"
op|','
name|'volume_id'
op|'='
string|"'fake_volume_2'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'instance_uuid'
op|'='
string|"'mig186_uuid-2'"
op|','
name|'device_name'
op|'='
string|"'/dev/vdc'"
op|','
nl|'\n'
name|'volume_id'
op|'='
string|"'fake_volume_3'"
op|')'
op|','
nl|'\n'
comment|'# Instance 3 - ephemerals and swap'
nl|'\n'
name|'dict'
op|'('
name|'instance_uuid'
op|'='
string|"'mig186_uuid-3'"
op|','
name|'device_name'
op|'='
string|"'/dev/vdc'"
op|','
nl|'\n'
name|'virtual_name'
op|'='
string|"'ephemeral0'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'instance_uuid'
op|'='
string|"'mig186_uuid-3'"
op|','
name|'device_name'
op|'='
string|"'/dev/vdd'"
op|','
nl|'\n'
name|'virtual_name'
op|'='
string|"'ephemeral1'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'instance_uuid'
op|'='
string|"'mig186_uuid-3'"
op|','
name|'device_name'
op|'='
string|"'/dev/vdb'"
op|','
nl|'\n'
name|'virtual_name'
op|'='
string|"'swap'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instances'"
op|')'
newline|'\n'
name|'block_device'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'block_device_mapping'"
op|')'
newline|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'instances'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'mig186_fake_instances'
op|')'
newline|'\n'
name|'for'
name|'fake_bdm'
name|'in'
name|'self'
op|'.'
name|'mig186_fake_bdms'
op|':'
newline|'\n'
indent|'            '
name|'engine'
op|'.'
name|'execute'
op|'('
name|'block_device'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'fake_bdm'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'mig186_fake_instances'
op|','
name|'self'
op|'.'
name|'mig186_fake_bdms'
newline|'\n'
nl|'\n'
DECL|member|_check_186
dedent|''
name|'def'
name|'_check_186'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'block_device'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'block_device_mapping'"
op|')'
newline|'\n'
nl|'\n'
name|'instance_qs'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'instance'
name|'in'
op|'('
string|"'mig186_uuid-1'"
op|','
string|"'mig186_uuid-2'"
op|','
string|"'mig186_uuid-3'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'q'
op|'='
name|'block_device'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
nl|'\n'
name|'block_device'
op|'.'
name|'c'
op|'.'
name|'instance_uuid'
op|'=='
name|'instance'
op|')'
op|'.'
name|'order_by'
op|'('
nl|'\n'
name|'block_device'
op|'.'
name|'c'
op|'.'
name|'id'
op|'.'
name|'asc'
op|'('
op|')'
nl|'\n'
op|')'
newline|'\n'
name|'instance_qs'
op|'.'
name|'append'
op|'('
name|'q'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'bdm_1s'
op|','
name|'bdm_2s'
op|','
name|'bdm_3s'
op|'='
op|'('
nl|'\n'
op|'['
name|'bdm'
name|'for'
name|'bdm'
name|'in'
name|'q'
op|'.'
name|'execute'
op|'('
op|')'
op|']'
nl|'\n'
name|'for'
name|'q'
name|'in'
name|'instance_qs'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bdm_1s'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bdm_2s'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'bdm_3s'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
nl|'\n'
comment|'# Instance 1'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_1s'
op|'['
number|'0'
op|']'
op|'.'
name|'source_type'
op|','
string|"'volume'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_1s'
op|'['
number|'0'
op|']'
op|'.'
name|'destination_type'
op|','
string|"'volume'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_1s'
op|'['
number|'0'
op|']'
op|'.'
name|'volume_id'
op|','
string|"'fake_volume_1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_1s'
op|'['
number|'0'
op|']'
op|'.'
name|'device_type'
op|','
string|"'disk'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_1s'
op|'['
number|'0'
op|']'
op|'.'
name|'boot_index'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_1s'
op|'['
number|'0'
op|']'
op|'.'
name|'device_name'
op|','
string|"'/dev/vdc'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_1s'
op|'['
number|'1'
op|']'
op|'.'
name|'source_type'
op|','
string|"'blank'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_1s'
op|'['
number|'1'
op|']'
op|'.'
name|'guest_format'
op|','
string|"'swap'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_1s'
op|'['
number|'1'
op|']'
op|'.'
name|'destination_type'
op|','
string|"'local'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_1s'
op|'['
number|'1'
op|']'
op|'.'
name|'device_type'
op|','
string|"'disk'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_1s'
op|'['
number|'1'
op|']'
op|'.'
name|'boot_index'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_1s'
op|'['
number|'1'
op|']'
op|'.'
name|'device_name'
op|','
string|"'/dev/vdb'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_1s'
op|'['
number|'2'
op|']'
op|'.'
name|'source_type'
op|','
string|"'image'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_1s'
op|'['
number|'2'
op|']'
op|'.'
name|'destination_type'
op|','
string|"'local'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_1s'
op|'['
number|'2'
op|']'
op|'.'
name|'device_type'
op|','
string|"'disk'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_1s'
op|'['
number|'2'
op|']'
op|'.'
name|'image_id'
op|','
string|"'fake_image_1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_1s'
op|'['
number|'2'
op|']'
op|'.'
name|'boot_index'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
comment|'# Instance 2'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_2s'
op|'['
number|'0'
op|']'
op|'.'
name|'source_type'
op|','
string|"'snapshot'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_2s'
op|'['
number|'0'
op|']'
op|'.'
name|'destination_type'
op|','
string|"'volume'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_2s'
op|'['
number|'0'
op|']'
op|'.'
name|'snapshot_id'
op|','
string|"'fake_snap_1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_2s'
op|'['
number|'0'
op|']'
op|'.'
name|'volume_id'
op|','
string|"'fake_volume_2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_2s'
op|'['
number|'0'
op|']'
op|'.'
name|'device_type'
op|','
string|"'disk'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_2s'
op|'['
number|'0'
op|']'
op|'.'
name|'boot_index'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_2s'
op|'['
number|'0'
op|']'
op|'.'
name|'device_name'
op|','
string|"'/dev/vda'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_2s'
op|'['
number|'1'
op|']'
op|'.'
name|'source_type'
op|','
string|"'volume'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_2s'
op|'['
number|'1'
op|']'
op|'.'
name|'destination_type'
op|','
string|"'volume'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_2s'
op|'['
number|'1'
op|']'
op|'.'
name|'volume_id'
op|','
string|"'fake_volume_3'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_2s'
op|'['
number|'1'
op|']'
op|'.'
name|'device_type'
op|','
string|"'disk'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_2s'
op|'['
number|'1'
op|']'
op|'.'
name|'boot_index'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_2s'
op|'['
number|'1'
op|']'
op|'.'
name|'device_name'
op|','
string|"'/dev/vdc'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Instance 3'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_3s'
op|'['
number|'0'
op|']'
op|'.'
name|'source_type'
op|','
string|"'blank'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_3s'
op|'['
number|'0'
op|']'
op|'.'
name|'destination_type'
op|','
string|"'local'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_3s'
op|'['
number|'0'
op|']'
op|'.'
name|'device_type'
op|','
string|"'disk'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_3s'
op|'['
number|'0'
op|']'
op|'.'
name|'boot_index'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_3s'
op|'['
number|'0'
op|']'
op|'.'
name|'device_name'
op|','
string|"'/dev/vdc'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_3s'
op|'['
number|'1'
op|']'
op|'.'
name|'source_type'
op|','
string|"'blank'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_3s'
op|'['
number|'1'
op|']'
op|'.'
name|'destination_type'
op|','
string|"'local'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_3s'
op|'['
number|'1'
op|']'
op|'.'
name|'device_type'
op|','
string|"'disk'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_3s'
op|'['
number|'1'
op|']'
op|'.'
name|'boot_index'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_3s'
op|'['
number|'1'
op|']'
op|'.'
name|'device_name'
op|','
string|"'/dev/vdd'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_3s'
op|'['
number|'2'
op|']'
op|'.'
name|'source_type'
op|','
string|"'blank'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_3s'
op|'['
number|'2'
op|']'
op|'.'
name|'guest_format'
op|','
string|"'swap'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_3s'
op|'['
number|'2'
op|']'
op|'.'
name|'destination_type'
op|','
string|"'local'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_3s'
op|'['
number|'2'
op|']'
op|'.'
name|'device_type'
op|','
string|"'disk'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_3s'
op|'['
number|'2'
op|']'
op|'.'
name|'boot_index'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_3s'
op|'['
number|'2'
op|']'
op|'.'
name|'device_name'
op|','
string|"'/dev/vdb'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_3s'
op|'['
number|'3'
op|']'
op|'.'
name|'source_type'
op|','
string|"'image'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_3s'
op|'['
number|'3'
op|']'
op|'.'
name|'destination_type'
op|','
string|"'local'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_3s'
op|'['
number|'3'
op|']'
op|'.'
name|'device_type'
op|','
string|"'disk'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_3s'
op|'['
number|'3'
op|']'
op|'.'
name|'image_id'
op|','
string|"'fake_image_2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm_3s'
op|'['
number|'3'
op|']'
op|'.'
name|'boot_index'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_186
dedent|''
name|'def'
name|'_post_downgrade_186'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'block_device'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'block_device_mapping'"
op|')'
newline|'\n'
nl|'\n'
name|'q'
op|'='
name|'block_device'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'or_'
op|'('
nl|'\n'
name|'block_device'
op|'.'
name|'c'
op|'.'
name|'instance_uuid'
op|'=='
string|"'mig186_uuid-1'"
op|','
nl|'\n'
name|'block_device'
op|'.'
name|'c'
op|'.'
name|'instance_uuid'
op|'=='
string|"'mig186_uuid-2'"
op|','
nl|'\n'
name|'block_device'
op|'.'
name|'c'
op|'.'
name|'instance_uuid'
op|'=='
string|"'mig186_uuid-3'"
op|')'
op|')'
op|'.'
name|'order_by'
op|'('
name|'block_device'
op|'.'
name|'c'
op|'.'
name|'device_name'
op|'.'
name|'asc'
op|'('
op|')'
op|','
nl|'\n'
name|'block_device'
op|'.'
name|'c'
op|'.'
name|'instance_uuid'
op|'.'
name|'asc'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'expected_bdms'
op|'='
name|'sorted'
op|'('
name|'self'
op|'.'
name|'mig186_fake_bdms'
op|','
nl|'\n'
name|'key'
op|'='
name|'lambda'
name|'x'
op|':'
nl|'\n'
name|'x'
op|'['
string|"'device_name'"
op|']'
op|'+'
name|'x'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
name|'got_bdms'
op|'='
op|'['
name|'bdm'
name|'for'
name|'bdm'
name|'in'
name|'q'
op|'.'
name|'execute'
op|'('
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'expected_bdms'
op|')'
op|','
name|'len'
op|'('
name|'got_bdms'
op|')'
op|')'
newline|'\n'
name|'for'
name|'expected'
op|','
name|'got'
name|'in'
name|'zip'
op|'('
name|'expected_bdms'
op|','
name|'got_bdms'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'expected'
op|','
name|'matchers'
op|'.'
name|'IsSubDictOf'
op|'('
name|'dict'
op|'('
name|'got'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# addition of the vm instance groups'
nl|'\n'
DECL|member|_check_no_group_instance_tables
dedent|''
dedent|''
name|'def'
name|'_check_no_group_instance_tables'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'NoSuchTableError'
op|','
nl|'\n'
name|'db_utils'
op|'.'
name|'get_table'
op|','
name|'engine'
op|','
nl|'\n'
string|"'instance_groups'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'NoSuchTableError'
op|','
nl|'\n'
name|'db_utils'
op|'.'
name|'get_table'
op|','
name|'engine'
op|','
nl|'\n'
string|"'instance_group_member'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'NoSuchTableError'
op|','
nl|'\n'
name|'db_utils'
op|'.'
name|'get_table'
op|','
name|'engine'
op|','
nl|'\n'
string|"'instance_group_policy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'NoSuchTableError'
op|','
nl|'\n'
name|'db_utils'
op|'.'
name|'get_table'
op|','
name|'engine'
op|','
nl|'\n'
string|"'instance_group_metadata'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_group_instance_groups
dedent|''
name|'def'
name|'_check_group_instance_groups'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'groups'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instance_groups'"
op|')'
newline|'\n'
name|'uuid4'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'uuid5'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'group_data'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'4'
op|','
string|"'deleted'"
op|':'
number|'4'
op|','
string|"'uuid'"
op|':'
name|'uuid4'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'5'
op|','
string|"'deleted'"
op|':'
number|'0'
op|','
string|"'uuid'"
op|':'
name|'uuid5'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'groups'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'group_data'
op|')'
newline|'\n'
name|'group'
op|'='
name|'groups'
op|'.'
name|'select'
op|'('
name|'groups'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
number|'4'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4'
op|','
name|'group'
op|'.'
name|'deleted'
op|')'
newline|'\n'
name|'group'
op|'='
name|'groups'
op|'.'
name|'select'
op|'('
name|'groups'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
number|'5'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'group'
op|'.'
name|'deleted'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_187
dedent|''
name|'def'
name|'_pre_upgrade_187'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_check_no_group_instance_tables'
op|'('
name|'engine'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_187
dedent|''
name|'def'
name|'_check_187'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_check_group_instance_groups'
op|'('
name|'engine'
op|')'
newline|'\n'
name|'tables'
op|'='
op|'['
string|"'instance_group_policy'"
op|','
string|"'instance_group_metadata'"
op|','
nl|'\n'
string|"'instance_group_member'"
op|']'
newline|'\n'
name|'for'
name|'table'
name|'in'
name|'tables'
op|':'
newline|'\n'
indent|'            '
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'table'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_187
dedent|''
dedent|''
name|'def'
name|'_post_downgrade_187'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
comment|'# check that groups does not exist'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_check_no_group_instance_tables'
op|'('
name|'engine'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_188
dedent|''
name|'def'
name|'_check_188'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'services'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'services'"
op|')'
newline|'\n'
name|'rows'
op|'='
name|'services'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'rows'
op|'['
number|'0'
op|']'
op|'['
string|"'disabled_reason'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_188
dedent|''
name|'def'
name|'_post_downgrade_188'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'services'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'services'"
op|')'
newline|'\n'
name|'rows'
op|'='
name|'services'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'disabled_reason'"
op|','
name|'rows'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_189
dedent|''
name|'def'
name|'_pre_upgrade_189'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cells'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'cells'"
op|')'
newline|'\n'
name|'data'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'name_123'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'name_123'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'name_345'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'for'
name|'item'
name|'in'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'cells'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'item'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_check_189
dedent|''
name|'def'
name|'_check_189'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cells'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'cells'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_
name|'def'
name|'get_'
op|'('
name|'name'
op|','
name|'deleted'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'deleted_value'
op|'='
number|'0'
name|'if'
name|'not'
name|'deleted'
name|'else'
name|'cells'
op|'.'
name|'c'
op|'.'
name|'id'
newline|'\n'
name|'return'
name|'cells'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'cells'
op|'.'
name|'c'
op|'.'
name|'name'
op|'=='
name|'name'
op|')'
op|'.'
name|'where'
op|'('
name|'cells'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'=='
name|'deleted_value'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'name_123'"
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'name_123'"
op|','
name|'True'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'name_345'"
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'IntegrityError'
op|','
nl|'\n'
name|'cells'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'name_123'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_190
dedent|''
name|'def'
name|'_pre_upgrade_190'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'security_groups'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'security_groups'"
op|')'
newline|'\n'
name|'data'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'group1'"
op|','
string|"'project_id'"
op|':'
string|"'fake'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'group1'"
op|','
string|"'project_id'"
op|':'
string|"'fake'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'group2'"
op|','
string|"'project_id'"
op|':'
string|"'fake'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'item'
name|'in'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'security_groups'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'item'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_190
dedent|''
dedent|''
name|'def'
name|'_check_190'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'security_groups'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'security_groups'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_
name|'def'
name|'get_'
op|'('
name|'name'
op|','
name|'project_id'
op|','
name|'deleted'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'deleted_value'
op|'='
number|'0'
name|'if'
name|'not'
name|'deleted'
name|'else'
name|'security_groups'
op|'.'
name|'c'
op|'.'
name|'id'
newline|'\n'
name|'return'
name|'security_groups'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'security_groups'
op|'.'
name|'c'
op|'.'
name|'name'
op|'=='
name|'name'
op|')'
op|'.'
name|'where'
op|'('
name|'security_groups'
op|'.'
name|'c'
op|'.'
name|'project_id'
op|'=='
name|'project_id'
op|')'
op|'.'
name|'where'
op|'('
name|'security_groups'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'=='
name|'deleted_value'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'group1'"
op|','
string|"'fake'"
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'group1'"
op|','
string|"'fake'"
op|','
name|'True'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'group2'"
op|','
string|"'fake'"
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'IntegrityError'
op|','
nl|'\n'
name|'security_groups'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|','
nl|'\n'
name|'dict'
op|'('
name|'name'
op|'='
string|"'group2'"
op|','
name|'project_id'
op|'='
string|"'fake'"
op|','
name|'deleted'
op|'='
number|'0'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_191
dedent|''
name|'def'
name|'_pre_upgrade_191'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'quotas'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'quotas'"
op|')'
newline|'\n'
name|'data'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|','
string|"'resource'"
op|':'
string|"'resource1'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|','
string|"'resource'"
op|':'
string|"'resource1'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
string|"'project2'"
op|','
string|"'resource'"
op|':'
string|"'resource1'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'for'
name|'item'
name|'in'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'quotas'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'item'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_check_191
dedent|''
name|'def'
name|'_check_191'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'quotas'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'quotas'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_
name|'def'
name|'get_'
op|'('
name|'project_id'
op|','
name|'deleted'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'deleted_value'
op|'='
number|'0'
name|'if'
name|'not'
name|'deleted'
name|'else'
name|'quotas'
op|'.'
name|'c'
op|'.'
name|'id'
newline|'\n'
name|'return'
name|'quotas'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'quotas'
op|'.'
name|'c'
op|'.'
name|'project_id'
op|'=='
name|'project_id'
op|')'
op|'.'
name|'where'
op|'('
name|'quotas'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'=='
name|'deleted_value'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'project1'"
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'project1'"
op|','
name|'True'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'project2'"
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'IntegrityError'
op|','
nl|'\n'
name|'quotas'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
string|"'project1'"
op|','
string|"'resource'"
op|':'
string|"'resource1'"
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_192
dedent|''
name|'def'
name|'_check_192'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'virtual_if'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'virtual_interfaces'"
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'address0'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
newline|'\n'
name|'virtual_if'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'values'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'deleted'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'virtual_if'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'values'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'deleted'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'IntegrityError'
op|','
nl|'\n'
name|'virtual_if'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|','
nl|'\n'
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_192
dedent|''
name|'def'
name|'_post_downgrade_192'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'virtual_if'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'virtual_interfaces'"
op|')'
newline|'\n'
name|'deleted'
op|'='
name|'virtual_if'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'virtual_if'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'!='
number|'0'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'deleted'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'address'"
op|':'
string|"'address1'"
op|'}'
newline|'\n'
name|'virtual_if'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'values'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'IntegrityError'
op|','
nl|'\n'
name|'virtual_if'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|','
nl|'\n'
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_193
dedent|''
name|'def'
name|'_check_193'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tables'
op|'='
name|'set'
op|'('
name|'engine'
op|'.'
name|'table_names'
op|'('
op|')'
op|')'
newline|'\n'
name|'dropped_tables'
op|'='
name|'set'
op|'('
op|'['
nl|'\n'
string|"'sm_volume'"
op|','
nl|'\n'
string|"'sm_backend_config'"
op|','
nl|'\n'
string|"'sm_flavors'"
op|','
nl|'\n'
string|"'virtual_storage_arrays'"
op|','
nl|'\n'
string|"'volume_metadata'"
op|','
nl|'\n'
string|"'volume_type_extra_specs'"
op|','
nl|'\n'
string|"'volume_types'"
op|','
nl|'\n'
string|"'shadow_sm_volume'"
op|','
nl|'\n'
string|"'shadow_sm_backend_config'"
op|','
nl|'\n'
string|"'shadow_sm_flavors'"
op|','
nl|'\n'
string|"'shadow_virtual_storage_arrays'"
op|','
nl|'\n'
string|"'shadow_volume_metadata'"
op|','
nl|'\n'
string|"'shadow_volume_type_extra_specs'"
op|','
nl|'\n'
string|"'shadow_volume_types'"
op|']'
op|')'
newline|'\n'
name|'check'
op|'='
name|'bool'
op|'('
name|'tables'
op|'&'
name|'dropped_tables'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'check'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_193
dedent|''
name|'def'
name|'_post_downgrade_193'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tables'
op|'='
name|'set'
op|'('
name|'engine'
op|'.'
name|'table_names'
op|'('
op|')'
op|')'
newline|'\n'
name|'dropped_tables'
op|'='
name|'set'
op|'('
op|'['
nl|'\n'
string|"'sm_volume'"
op|','
nl|'\n'
string|"'sm_backend_config'"
op|','
nl|'\n'
string|"'sm_flavors'"
op|','
nl|'\n'
string|"'virtual_storage_arrays'"
op|','
nl|'\n'
string|"'volume_metadata'"
op|','
nl|'\n'
string|"'volume_type_extra_specs'"
op|','
nl|'\n'
string|"'volume_types'"
op|','
nl|'\n'
string|"'shadow_sm_volume'"
op|','
nl|'\n'
string|"'shadow_sm_backend_config'"
op|','
nl|'\n'
string|"'shadow_sm_flavors'"
op|','
nl|'\n'
string|"'shadow_virtual_storage_arrays'"
op|','
nl|'\n'
string|"'shadow_volume_metadata'"
op|','
nl|'\n'
string|"'shadow_volume_type_extra_specs'"
op|','
nl|'\n'
string|"'shadow_volume_types'"
op|']'
op|')'
newline|'\n'
name|'check'
op|'='
name|'tables'
op|'&'
name|'dropped_tables'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'check'
op|','
name|'dropped_tables'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_194
dedent|''
name|'def'
name|'_pre_upgrade_194'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'test_data'
op|'='
op|'{'
nl|'\n'
comment|'# table_name: ((index_name_1, (*columns)), ...)'
nl|'\n'
string|'"certificates"'
op|':'
op|'('
nl|'\n'
op|'('
string|'"certificates_project_id_deleted_idx"'
op|','
nl|'\n'
op|'['
string|'"project_id"'
op|','
string|'"deleted"'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|'"certificates_user_id_deleted_idx"'
op|','
op|'['
string|'"user_id"'
op|','
string|'"deleted"'
op|']'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|'"instances"'
op|':'
op|'('
nl|'\n'
op|'('
string|'"instances_host_deleted_idx"'
op|','
op|'['
string|'"host"'
op|','
string|'"deleted"'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|'"instances_uuid_deleted_idx"'
op|','
op|'['
string|'"uuid"'
op|','
string|'"deleted"'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|'"instances_host_node_deleted_idx"'
op|','
nl|'\n'
op|'['
string|'"host"'
op|','
string|'"node"'
op|','
string|'"deleted"'
op|']'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|'"iscsi_targets"'
op|':'
op|'('
nl|'\n'
op|'('
string|'"iscsi_targets_host_volume_id_deleted_idx"'
op|','
nl|'\n'
op|'['
string|'"host"'
op|','
string|'"volume_id"'
op|','
string|'"deleted"'
op|']'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|'"networks"'
op|':'
op|'('
nl|'\n'
op|'('
string|'"networks_bridge_deleted_idx"'
op|','
op|'['
string|'"bridge"'
op|','
string|'"deleted"'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|'"networks_project_id_deleted_idx"'
op|','
op|'['
string|'"project_id"'
op|','
string|'"deleted"'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|'"networks_uuid_project_id_deleted_idx"'
op|','
nl|'\n'
op|'['
string|'"uuid"'
op|','
string|'"project_id"'
op|','
string|'"deleted"'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|'"networks_vlan_deleted_idx"'
op|','
op|'['
string|'"vlan"'
op|','
string|'"deleted"'
op|']'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|'"fixed_ips"'
op|':'
op|'('
nl|'\n'
op|'('
string|'"fixed_ips_network_id_host_deleted_idx"'
op|','
nl|'\n'
op|'['
string|'"network_id"'
op|','
string|'"host"'
op|','
string|'"deleted"'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|'"fixed_ips_address_reserved_network_id_deleted_idx"'
op|','
nl|'\n'
op|'['
string|'"address"'
op|','
string|'"reserved"'
op|','
string|'"network_id"'
op|','
string|'"deleted"'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|'"fixed_ips_deleted_allocated_idx"'
op|','
nl|'\n'
op|'['
string|'"address"'
op|','
string|'"deleted"'
op|','
string|'"allocated"'
op|']'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|'"floating_ips"'
op|':'
op|'('
nl|'\n'
op|'('
string|'"floating_ips_pool_deleted_fixed_ip_id_project_id_idx"'
op|','
nl|'\n'
op|'['
string|'"pool"'
op|','
string|'"deleted"'
op|','
string|'"fixed_ip_id"'
op|','
string|'"project_id"'
op|']'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|'"instance_faults"'
op|':'
op|'('
nl|'\n'
op|'('
string|'"instance_faults_instance_uuid_deleted_created_at_idx"'
op|','
nl|'\n'
op|'['
string|'"instance_uuid"'
op|','
string|'"deleted"'
op|','
string|'"created_at"'
op|']'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'return'
name|'test_data'
newline|'\n'
nl|'\n'
DECL|member|_check_194
dedent|''
name|'def'
name|'_check_194'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'engine'
op|'.'
name|'name'
op|'=='
string|"'sqlite'"
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'table_name'
op|','
name|'indexes'
name|'in'
name|'data'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'sqlalchemy'
op|'.'
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
name|'table'
op|'='
name|'sqlalchemy'
op|'.'
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'index_data'
op|'='
op|'['
op|'('
name|'idx'
op|'.'
name|'name'
op|','
name|'idx'
op|'.'
name|'columns'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
nl|'\n'
name|'for'
name|'idx'
name|'in'
name|'table'
op|'.'
name|'indexes'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'name'
op|','
name|'columns'
name|'in'
name|'indexes'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'engine'
op|'.'
name|'name'
op|'=='
string|'"postgresql"'
op|':'
newline|'\n'
comment|'# we can not get correct order of columns in index'
nl|'\n'
comment|'# definition to postgresql using sqlalchemy. So we sortind'
nl|'\n'
comment|'# columns list before compare'
nl|'\n'
comment|'# bug http://www.sqlalchemy.org/trac/ticket/2767'
nl|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertIn'
op|'('
nl|'\n'
op|'('
name|'name'
op|','
name|'sorted'
op|'('
name|'columns'
op|')'
op|')'
op|','
nl|'\n'
op|'('
op|'['
op|'('
name|'idx'
op|'['
number|'0'
op|']'
op|','
name|'sorted'
op|'('
name|'idx'
op|'['
number|'1'
op|']'
op|')'
op|')'
name|'for'
name|'idx'
name|'in'
name|'index_data'
op|']'
op|')'
nl|'\n'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertIn'
op|'('
op|'('
name|'name'
op|','
name|'columns'
op|')'
op|','
name|'index_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_194
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'_post_downgrade_194'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'engine'
op|'.'
name|'name'
op|'=='
string|"'sqlite'"
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'table_name'
op|','
name|'indexes'
name|'in'
name|'self'
op|'.'
name|'_pre_upgrade_194'
op|'('
name|'engine'
op|')'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'sqlalchemy'
op|'.'
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
name|'table'
op|'='
name|'sqlalchemy'
op|'.'
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'index_data'
op|'='
op|'['
op|'('
name|'idx'
op|'.'
name|'name'
op|','
name|'idx'
op|'.'
name|'columns'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
nl|'\n'
name|'for'
name|'idx'
name|'in'
name|'table'
op|'.'
name|'indexes'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'name'
op|','
name|'columns'
name|'in'
name|'indexes'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'engine'
op|'.'
name|'name'
op|'=='
string|'"postgresql"'
op|':'
newline|'\n'
comment|'# we can not get correct order of columns in index'
nl|'\n'
comment|'# definition to postgresql using sqlalchemy. So we sortind'
nl|'\n'
comment|'# columns list before compare'
nl|'\n'
comment|'# bug http://www.sqlalchemy.org/trac/ticket/2767'
nl|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
nl|'\n'
op|'('
name|'name'
op|','
name|'sorted'
op|'('
name|'columns'
op|')'
op|')'
op|','
nl|'\n'
op|'('
op|'['
op|'('
name|'idx'
op|'['
number|'0'
op|']'
op|','
name|'sorted'
op|'('
name|'idx'
op|'['
number|'1'
op|']'
op|')'
op|')'
name|'for'
name|'idx'
name|'in'
name|'index_data'
op|']'
op|')'
nl|'\n'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
op|'('
name|'name'
op|','
name|'columns'
op|')'
op|','
name|'index_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_195
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'_pre_upgrade_195'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fixed_ips'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'fixed_ips'"
op|')'
newline|'\n'
name|'data'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'128.128.128.128'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'128.128.128.128'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'128.128.128.129'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'item'
name|'in'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'fixed_ips'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'item'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_check_195
dedent|''
name|'def'
name|'_check_195'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fixed_ips'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'fixed_ips'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_
name|'def'
name|'get_'
op|'('
name|'address'
op|','
name|'deleted'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'deleted_value'
op|'='
number|'0'
name|'if'
name|'not'
name|'deleted'
name|'else'
name|'fixed_ips'
op|'.'
name|'c'
op|'.'
name|'id'
newline|'\n'
name|'return'
name|'fixed_ips'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'fixed_ips'
op|'.'
name|'c'
op|'.'
name|'address'
op|'=='
name|'address'
op|')'
op|'.'
name|'where'
op|'('
name|'fixed_ips'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'=='
name|'deleted_value'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'128.128.128.128'"
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'128.128.128.128'"
op|','
name|'True'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'128.128.128.129'"
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'IntegrityError'
op|','
nl|'\n'
name|'fixed_ips'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|','
nl|'\n'
name|'dict'
op|'('
name|'address'
op|'='
string|"'128.128.128.129'"
op|','
name|'deleted'
op|'='
number|'0'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_196
dedent|''
name|'def'
name|'_pre_upgrade_196'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'services'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'services'"
op|')'
newline|'\n'
name|'data'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'6'
op|','
string|"'host'"
op|':'
string|"'host1'"
op|','
string|"'binary'"
op|':'
string|"'binary1'"
op|','
string|"'topic'"
op|':'
string|"'topic3'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'5'
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'7'
op|','
string|"'host'"
op|':'
string|"'host1'"
op|','
string|"'binary'"
op|':'
string|"'binary1'"
op|','
string|"'topic'"
op|':'
string|"'topic4'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'5'
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'8'
op|','
string|"'host'"
op|':'
string|"'host2'"
op|','
string|"'binary'"
op|':'
string|"'binary7'"
op|','
string|"'topic'"
op|':'
string|"'topic2'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'5'
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'9'
op|','
string|"'host'"
op|':'
string|"'host2'"
op|','
string|"'binary'"
op|':'
string|"'binary8'"
op|','
string|"'topic'"
op|':'
string|"'topic2'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'5'
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'for'
name|'item'
name|'in'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'services'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'item'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_check_196
dedent|''
name|'def'
name|'_check_196'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'services'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'services'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_
name|'def'
name|'get_'
op|'('
name|'host'
op|','
name|'deleted'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'deleted_value'
op|'='
number|'0'
name|'if'
name|'not'
name|'deleted'
name|'else'
name|'services'
op|'.'
name|'c'
op|'.'
name|'id'
newline|'\n'
name|'return'
name|'services'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'services'
op|'.'
name|'c'
op|'.'
name|'host'
op|'=='
name|'host'
op|')'
op|'.'
name|'where'
op|'('
name|'services'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'=='
name|'deleted_value'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'host1'"
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'host1'"
op|','
name|'True'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'host2'"
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'host2'"
op|','
name|'True'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'IntegrityError'
op|','
nl|'\n'
name|'services'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'10'
op|','
string|"'host'"
op|':'
string|"'host1'"
op|','
string|"'binary'"
op|':'
string|"'binary1'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'5'
op|','
string|"'topic'"
op|':'
string|"'topic0'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'IntegrityError'
op|','
nl|'\n'
name|'services'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'11'
op|','
string|"'host'"
op|':'
string|"'host2'"
op|','
string|"'binary'"
op|':'
string|"'binary0'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'5'
op|','
string|"'topic'"
op|':'
string|"'topic2'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_197
dedent|''
name|'def'
name|'_pre_upgrade_197'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'abuilds'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'agent_builds'"
op|')'
newline|'\n'
name|'data'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'hypervisor'"
op|':'
string|"'hyper1'"
op|','
string|"'os'"
op|':'
string|"'os1'"
op|','
string|"'architecture'"
op|':'
string|"'arch1'"
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'hypervisor'"
op|':'
string|"'hyper1'"
op|','
string|"'os'"
op|':'
string|"'os1'"
op|','
string|"'architecture'"
op|':'
string|"'arch1'"
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'hypervisor'"
op|':'
string|"'hyper2'"
op|','
string|"'os'"
op|':'
string|"'os1'"
op|','
string|"'architecture'"
op|':'
string|"'arch1'"
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'for'
name|'item'
name|'in'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'abuilds'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'item'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_check_197
dedent|''
name|'def'
name|'_check_197'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'abuilds'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'agent_builds'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_
name|'def'
name|'get_'
op|'('
name|'hypervisor'
op|','
name|'deleted'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'deleted_value'
op|'='
number|'0'
name|'if'
name|'not'
name|'deleted'
name|'else'
name|'abuilds'
op|'.'
name|'c'
op|'.'
name|'id'
newline|'\n'
name|'return'
name|'abuilds'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'abuilds'
op|'.'
name|'c'
op|'.'
name|'hypervisor'
op|'=='
name|'hypervisor'
op|')'
op|'.'
name|'where'
op|'('
name|'abuilds'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'=='
name|'deleted_value'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'hyper1'"
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'hyper1'"
op|','
name|'True'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'hyper2'"
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'IntegrityError'
op|','
nl|'\n'
name|'abuilds'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|','
nl|'\n'
op|'{'
string|"'hypervisor'"
op|':'
string|"'hyper2'"
op|','
string|"'os'"
op|':'
string|"'os1'"
op|','
nl|'\n'
string|"'architecture'"
op|':'
string|"'arch1'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_198
dedent|''
name|'def'
name|'_pre_upgrade_198'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'table'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'console_pools'"
op|')'
newline|'\n'
name|'data'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'localhost'"
op|','
string|"'console_type'"
op|':'
string|"'type_1'"
op|','
nl|'\n'
string|"'compute_host'"
op|':'
string|"'192.168.122.8'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'localhost'"
op|','
string|"'console_type'"
op|':'
string|"'type_1'"
op|','
nl|'\n'
string|"'compute_host'"
op|':'
string|"'192.168.122.8'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'localhost'"
op|','
string|"'console_type'"
op|':'
string|"'type_2'"
op|','
nl|'\n'
string|"'compute_host'"
op|':'
string|"'192.168.122.8'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'item'
name|'in'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'table'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'item'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_check_198
dedent|''
name|'def'
name|'_check_198'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'table'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'console_pools'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_
name|'def'
name|'get_'
op|'('
name|'host'
op|','
name|'console_type'
op|','
name|'compute_host'
op|','
name|'deleted'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'deleted_value'
op|'='
number|'0'
name|'if'
name|'not'
name|'deleted'
name|'else'
name|'table'
op|'.'
name|'c'
op|'.'
name|'id'
newline|'\n'
name|'return'
name|'table'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'host'
op|'=='
name|'host'
op|')'
op|'.'
name|'where'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'console_type'
op|'=='
name|'console_type'
op|')'
op|'.'
name|'where'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'compute_host'
op|'=='
name|'compute_host'
op|')'
op|'.'
name|'where'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'=='
name|'deleted_value'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'localhost'"
op|','
string|"'type_1'"
op|','
string|"'192.168.122.8'"
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'localhost'"
op|','
string|"'type_1'"
op|','
string|"'192.168.122.8'"
op|','
name|'True'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'localhost'"
op|','
string|"'type_2'"
op|','
string|"'192.168.122.8'"
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'IntegrityError'
op|','
nl|'\n'
name|'table'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'localhost'"
op|','
string|"'console_type'"
op|':'
string|"'type_2'"
op|','
nl|'\n'
string|"'compute_host'"
op|':'
string|"'192.168.122.8'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_199
dedent|''
name|'def'
name|'_pre_upgrade_199'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_aggregates'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'5'
op|','
string|"'name'"
op|':'
string|"'name1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'6'
op|','
string|"'name'"
op|':'
string|"'name2'"
op|'}'
op|']'
newline|'\n'
name|'aggregates'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'aggregates'"
op|')'
newline|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'aggregates'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'fake_aggregates'
op|')'
newline|'\n'
nl|'\n'
name|'fake_metadata'
op|'='
op|'['
op|'{'
string|"'aggregate_id'"
op|':'
number|'5'
op|','
string|"'key'"
op|':'
string|"'availability_zone'"
op|','
nl|'\n'
string|"'value'"
op|':'
string|"'custom_az'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'aggregate_id'"
op|':'
number|'6'
op|','
string|"'key'"
op|':'
string|"'availability_zone'"
op|','
nl|'\n'
string|"'value'"
op|':'
string|"'custom_az'"
op|'}'
op|']'
newline|'\n'
name|'metadata'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'aggregate_metadata'"
op|')'
newline|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'metadata'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'fake_metadata'
op|')'
newline|'\n'
nl|'\n'
name|'ahosts'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'aggregate_hosts'"
op|')'
newline|'\n'
name|'data'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host1'"
op|','
string|"'aggregate_id'"
op|':'
number|'5'
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host1'"
op|','
string|"'aggregate_id'"
op|':'
number|'5'
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host2'"
op|','
string|"'aggregate_id'"
op|':'
number|'6'
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'for'
name|'item'
name|'in'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'ahosts'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'item'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_check_199
dedent|''
name|'def'
name|'_check_199'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ahosts'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'aggregate_hosts'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_
name|'def'
name|'get_'
op|'('
name|'host'
op|','
name|'deleted'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'deleted_value'
op|'='
number|'0'
name|'if'
name|'not'
name|'deleted'
name|'else'
name|'ahosts'
op|'.'
name|'c'
op|'.'
name|'id'
newline|'\n'
name|'return'
name|'ahosts'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'ahosts'
op|'.'
name|'c'
op|'.'
name|'host'
op|'=='
name|'host'
op|')'
op|'.'
name|'where'
op|'('
name|'ahosts'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'=='
name|'deleted_value'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'host1'"
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'host1'"
op|','
name|'True'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
string|"'host2'"
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'IntegrityError'
op|','
nl|'\n'
name|'ahosts'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
string|"'host2'"
op|','
string|"'aggregate_id'"
op|':'
number|'6'
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_200
dedent|''
name|'def'
name|'_pre_upgrade_200'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cells'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'cells'"
op|')'
newline|'\n'
name|'shadow_cells'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'shadow_cells'"
op|')'
newline|'\n'
name|'cells'
op|'.'
name|'delete'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
name|'shadow_cells'
op|'.'
name|'delete'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
name|'data'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'cell_transport_123'"
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'username'"
op|':'
string|"'user_123'"
op|','
nl|'\n'
string|"'password'"
op|':'
string|"'pass_123'"
op|','
nl|'\n'
string|"'rpc_host'"
op|':'
string|"'host_123'"
op|','
nl|'\n'
string|"'rpc_port'"
op|':'
number|'123'
op|','
nl|'\n'
string|"'rpc_virtual_host'"
op|':'
string|"'virtual_123'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'cell_transport_456'"
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'username'"
op|':'
string|"'user_456'"
op|','
nl|'\n'
string|"'password'"
op|':'
string|"'pass_456'"
op|','
nl|'\n'
string|"'rpc_host'"
op|':'
string|"'ffff::456'"
op|','
nl|'\n'
string|"'rpc_port'"
op|':'
number|'456'
op|','
nl|'\n'
string|"'rpc_virtual_host'"
op|':'
string|"'virtual_456'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'for'
name|'item'
name|'in'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'cells'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'item'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
name|'shadow_cells'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'item'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_check_200
dedent|''
name|'def'
name|'_check_200'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cells'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'cells'"
op|')'
newline|'\n'
name|'shadow_cells'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'shadow_cells'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_
name|'def'
name|'get_'
op|'('
name|'table'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'table'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'cells'
op|'.'
name|'c'
op|'.'
name|'name'
op|'=='
name|'name'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'table'
name|'in'
op|'('
name|'cells'
op|','
name|'shadow_cells'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cell_123'
op|'='
name|'get_'
op|'('
name|'cells'
op|','
string|"'cell_transport_123'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'username'"
op|','
name|'cell_123'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'password'"
op|','
name|'cell_123'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'rpc_host'"
op|','
name|'cell_123'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'rpc_port'"
op|','
name|'cell_123'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'rpc_virtual_host'"
op|','
name|'cell_123'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'rabbit://user_123:pass_123@host_123:123/'"
nl|'\n'
string|"'virtual_123'"
op|','
name|'cell_123'
op|'['
string|"'transport_url'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'cell_456'
op|'='
name|'get_'
op|'('
name|'cells'
op|','
string|"'cell_transport_456'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'username'"
op|','
name|'cell_456'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'password'"
op|','
name|'cell_456'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'rpc_host'"
op|','
name|'cell_456'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'rpc_port'"
op|','
name|'cell_456'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'rpc_virtual_host'"
op|','
name|'cell_456'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'rabbit://user_456:pass_456@[ffff::456]:456/'"
nl|'\n'
string|"'virtual_456'"
op|','
name|'cell_456'
op|'['
string|"'transport_url'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Verify that the unique constraint still exists'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'IntegrityError'
op|','
nl|'\n'
name|'cells'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'cell_transport_123'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_200
dedent|''
name|'def'
name|'_post_downgrade_200'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cells'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'cells'"
op|')'
newline|'\n'
name|'shadow_cells'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'shadow_cells'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_
name|'def'
name|'get_'
op|'('
name|'table'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'table'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'cells'
op|'.'
name|'c'
op|'.'
name|'name'
op|'=='
name|'name'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'table'
name|'in'
op|'('
name|'cells'
op|','
name|'shadow_cells'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cell_123'
op|'='
name|'get_'
op|'('
name|'cells'
op|','
string|"'cell_transport_123'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'transport_url'"
op|','
name|'cell_123'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'user_123'"
op|','
name|'cell_123'
op|'['
string|"'username'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'pass_123'"
op|','
name|'cell_123'
op|'['
string|"'password'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'host_123'"
op|','
name|'cell_123'
op|'['
string|"'rpc_host'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'123'
op|','
name|'cell_123'
op|'['
string|"'rpc_port'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'virtual_123'"
op|','
name|'cell_123'
op|'['
string|"'rpc_virtual_host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'cell_456'
op|'='
name|'get_'
op|'('
name|'cells'
op|','
string|"'cell_transport_456'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'transport_url'"
op|','
name|'cell_456'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'user_456'"
op|','
name|'cell_456'
op|'['
string|"'username'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'pass_456'"
op|','
name|'cell_456'
op|'['
string|"'password'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'ffff::456'"
op|','
name|'cell_456'
op|'['
string|"'rpc_host'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'456'
op|','
name|'cell_456'
op|'['
string|"'rpc_port'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'virtual_456'"
op|','
name|'cell_456'
op|'['
string|"'rpc_virtual_host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Verify that the unique constraint still exists'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'IntegrityError'
op|','
nl|'\n'
name|'cells'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'cell_transport_123'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_201
dedent|''
name|'def'
name|'_pre_upgrade_201'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
op|'{'
nl|'\n'
comment|'# table_name: ((idx_1, (c1, c2,)), (idx2, (c1, c2,)), ...)'
nl|'\n'
string|"'agent_builds'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'agent_builds_hypervisor_os_arch_idx'"
op|','
nl|'\n'
op|'('
string|"'hypervisor'"
op|','
string|"'os'"
op|','
string|"'architecture'"
op|')'
op|','
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'aggregate_metadata'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'aggregate_metadata_key_idx'"
op|','
op|'('
string|"'key'"
op|','
op|')'
op|','
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'block_device_mapping'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'block_device_mapping_instance_uuid_idx'"
op|','
nl|'\n'
op|'('
string|"'instance_uuid'"
op|','
op|')'
op|','
op|')'
op|','
nl|'\n'
op|'('
string|"'block_device_mapping_instance_uuid_device_name_idx'"
op|','
nl|'\n'
op|'('
string|"'instance_uuid'"
op|','
string|"'device_name'"
op|','
op|')'
op|','
op|')'
op|','
nl|'\n'
op|'('
string|"'block_device_mapping_instance_uuid_volume_id_idx'"
op|','
nl|'\n'
op|'('
string|"'instance_uuid'"
op|','
string|"'volume_id'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'snapshot_id'"
op|','
op|'('
string|"'snapshot_id'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'volume_id'"
op|','
op|'('
string|"'volume_id'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'bw_usage_cache'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'bw_usage_cache_uuid_start_period_idx'"
op|','
nl|'\n'
op|'('
string|"'uuid'"
op|','
string|"'start_period'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'certificates'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'certificates_project_id_deleted_idx'"
op|','
nl|'\n'
op|'('
string|"'project_id'"
op|','
string|"'deleted'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'certificates_user_id_deleted_idx'"
op|','
op|'('
string|"'user_id'"
op|','
string|"'deleted'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'compute_node_stats'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'ix_compute_node_stats_compute_node_id'"
op|','
nl|'\n'
op|'('
string|"'compute_node_id'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'consoles'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'consoles_instance_uuid_idx'"
op|','
op|'('
string|"'instance_uuid'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'dns_domains'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'dns_domains_domain_deleted_idx'"
op|','
op|'('
string|"'domain'"
op|','
string|"'deleted'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'address'"
op|','
op|'('
string|"'address'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'fixed_ips_host_idx'"
op|','
op|'('
string|"'host'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'fixed_ips_network_id_host_deleted_idx'"
op|','
nl|'\n'
op|'('
string|"'network_id'"
op|','
string|"'host'"
op|','
string|"'deleted'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'fixed_ips_address_reserved_network_id_deleted_idx'"
op|','
nl|'\n'
op|'('
string|"'address'"
op|','
string|"'reserved'"
op|','
string|"'network_id'"
op|','
string|"'deleted'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'network_id'"
op|','
op|'('
string|"'network_id'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'fixed_ips_virtual_interface_id_fkey'"
op|','
nl|'\n'
op|'('
string|"'virtual_interface_id'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'fixed_ips_instance_uuid_fkey'"
op|','
op|'('
string|"'instance_uuid'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'floating_ips'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'fixed_ip_id'"
op|','
op|'('
string|"'fixed_ip_id'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'floating_ips_host_idx'"
op|','
op|'('
string|"'host'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'floating_ips_project_id_idx'"
op|','
op|'('
string|"'project_id'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'floating_ips_pool_deleted_fixed_ip_id_project_id_idx'"
op|','
nl|'\n'
op|'('
string|"'pool'"
op|','
string|"'deleted'"
op|','
string|"'fixed_ip_id'"
op|','
string|"'project_id'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'instance_group_member'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'instance_group_member_instance_idx'"
op|','
op|'('
string|"'instance_id'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'instance_group_metadata'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'instance_instance_group_metadata_key_idx'"
op|','
op|'('
string|"'key'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'instance_group_policy'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'instance_instance_group_policy_policy_idx'"
op|','
op|'('
string|"'policy'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'instance_faults'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'instance_faults_instance_uuid_deleted_created_at_idx'"
op|','
nl|'\n'
op|'('
string|"'instance_uuid'"
op|','
string|"'deleted'"
op|','
string|"'created_at'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'instance_id_mappings'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'ix_instance_id_mappings_uuid'"
op|','
op|'('
string|"'uuid'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'instance_type_extra_specs'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'instance_type_extra_specs_instance_type_id_key_idx'"
op|','
nl|'\n'
op|'('
string|"'instance_type_id'"
op|','
string|"'key'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'instance_system_metadata'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'instance_uuid'"
op|','
op|'('
string|"'instance_uuid'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'instance_metadata'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'instance_metadata_instance_uuid_idx'"
op|','
op|'('
string|"'instance_uuid'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'instance_type_projects'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'instance_type_id'"
op|','
op|'('
string|"'instance_type_id'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'iscsi_targets'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'iscsi_targets_host_idx'"
op|','
op|'('
string|"'host'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'iscsi_targets_volume_id_fkey'"
op|','
op|'('
string|"'volume_id'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'iscsi_targets_host_volume_id_deleted_idx'"
op|','
nl|'\n'
op|'('
string|"'host'"
op|','
string|"'volume_id'"
op|','
string|"'deleted'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'networks'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'networks_bridge_deleted_idx'"
op|','
op|'('
string|"'bridge'"
op|','
string|"'deleted'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'networks_host_idx'"
op|','
op|'('
string|"'host'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'networks_project_id_deleted_idx'"
op|','
op|'('
string|"'project_id'"
op|','
nl|'\n'
string|"'deleted'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'networks_uuid_project_id_deleted_idx'"
op|','
op|'('
string|"'uuid'"
op|','
string|"'project_id'"
op|','
nl|'\n'
string|"'deleted'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'networks_vlan_deleted_idx'"
op|','
op|'('
string|"'vlan'"
op|','
string|"'deleted'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'networks_cidr_v6_idx'"
op|','
op|'('
string|"'cidr_v6'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'reservations'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'ix_reservations_project_id'"
op|','
op|'('
string|"'project_id'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'usage_id'"
op|','
op|'('
string|"'usage_id'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'security_group_instance_association'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'security_group_instance_association_instance_uuid_idx'"
op|','
nl|'\n'
op|'('
string|"'instance_uuid'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'quota_classes'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'ix_quota_classes_class_name'"
op|','
op|'('
string|"'class_name'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'quota_usages'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'ix_quota_usages_project_id'"
op|','
op|'('
string|"'project_id'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'virtual_interfaces'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'virtual_interfaces_network_id_idx'"
op|','
op|'('
string|"'network_id'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'virtual_interfaces_instance_uuid_fkey'"
op|','
op|'('
string|"'instance_uuid'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'volumes'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'volumes_instance_uuid_idx'"
op|','
op|'('
string|"'instance_uuid'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'task_log'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'ix_task_log_period_beginning'"
op|','
op|'('
string|"'period_beginning'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'ix_task_log_host'"
op|','
op|'('
string|"'host'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'ix_task_log_period_ending'"
op|','
op|'('
string|"'period_ending'"
op|','
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_check_201
dedent|''
name|'def'
name|'_check_201'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'engine'
op|'.'
name|'name'
op|'!='
string|"'sqlite'"
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'meta'
op|'='
name|'sqlalchemy'
op|'.'
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
nl|'\n'
name|'for'
name|'table_name'
op|','
name|'indexes'
name|'in'
name|'data'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'table'
op|'='
name|'sqlalchemy'
op|'.'
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
name|'loaded_indexes'
op|'='
op|'['
op|'('
name|'i'
op|'.'
name|'name'
op|','
name|'tuple'
op|'('
name|'i'
op|'.'
name|'columns'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|')'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'table'
op|'.'
name|'indexes'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'index'
name|'in'
name|'indexes'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'index'
op|','
name|'loaded_indexes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_201
dedent|''
dedent|''
dedent|''
name|'def'
name|'_post_downgrade_201'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'engine'
op|'.'
name|'name'
op|'!='
string|"'sqlite'"
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'data'
op|'='
name|'self'
op|'.'
name|'_pre_upgrade_201'
op|'('
name|'engine'
op|')'
newline|'\n'
name|'meta'
op|'='
name|'sqlalchemy'
op|'.'
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
nl|'\n'
name|'for'
name|'table_name'
op|','
name|'indexes'
name|'in'
name|'data'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'table'
op|'='
name|'sqlalchemy'
op|'.'
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
name|'loaded_indexes'
op|'='
op|'['
op|'('
name|'i'
op|'.'
name|'name'
op|','
name|'tuple'
op|'('
name|'i'
op|'.'
name|'columns'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|')'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'table'
op|'.'
name|'indexes'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'index'
name|'in'
name|'indexes'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
name|'index'
op|','
name|'loaded_indexes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_202
dedent|''
dedent|''
dedent|''
name|'def'
name|'_pre_upgrade_202'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_types'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'35'
op|','
string|"'name'"
op|':'
string|"'type1'"
op|','
string|"'memory_mb'"
op|':'
number|'128'
op|','
string|"'vcpus'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
number|'10'
op|','
string|"'ephemeral_gb'"
op|':'
number|'0'
op|','
string|"'flavorid'"
op|':'
string|'"1"'
op|','
string|"'swap'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rxtx_factor'"
op|':'
number|'1.0'
op|','
string|"'vcpu_weight'"
op|':'
number|'1'
op|','
string|"'disabled'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'36'
op|','
string|"'name'"
op|':'
string|"'type2'"
op|','
string|"'memory_mb'"
op|':'
number|'512'
op|','
string|"'vcpus'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
number|'10'
op|','
string|"'ephemeral_gb'"
op|':'
number|'5'
op|','
string|"'flavorid'"
op|':'
string|'"2"'
op|','
string|"'swap'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rxtx_factor'"
op|':'
number|'1.5'
op|','
string|"'vcpu_weight'"
op|':'
number|'2'
op|','
string|"'disabled'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'instance_types'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instance_types'"
op|')'
newline|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'instance_types'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'fake_types'
op|')'
newline|'\n'
name|'specs'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instance_type_extra_specs'"
op|')'
newline|'\n'
name|'data'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'instance_type_id'"
op|':'
number|'35'
op|','
string|"'key'"
op|':'
string|"'key1'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_type_id'"
op|':'
number|'35'
op|','
string|"'key'"
op|':'
string|"'key1'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_type_id'"
op|':'
number|'36'
op|','
string|"'key'"
op|':'
string|"'key1'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'for'
name|'item'
name|'in'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'specs'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'item'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_check_202
dedent|''
name|'def'
name|'_check_202'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'specs'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instance_type_extra_specs'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_
name|'def'
name|'get_'
op|'('
name|'typeid'
op|','
name|'deleted'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'deleted_value'
op|'='
number|'0'
name|'if'
name|'not'
name|'deleted'
name|'else'
name|'specs'
op|'.'
name|'c'
op|'.'
name|'id'
newline|'\n'
name|'return'
name|'specs'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'specs'
op|'.'
name|'c'
op|'.'
name|'instance_type_id'
op|'=='
name|'typeid'
op|')'
op|'.'
name|'where'
op|'('
name|'specs'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'=='
name|'deleted_value'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
number|'35'
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
number|'35'
op|','
name|'True'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
number|'36'
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'IntegrityError'
op|','
nl|'\n'
name|'specs'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|','
nl|'\n'
op|'{'
string|"'instance_type_id'"
op|':'
number|'35'
op|','
string|"'key'"
op|':'
string|"'key1'"
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# migration 203 - make user quotas key and value'
nl|'\n'
DECL|member|_pre_upgrade_203
dedent|''
name|'def'
name|'_pre_upgrade_203'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'quota_usages'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'quota_usages'"
op|')'
newline|'\n'
name|'reservations'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'reservations'"
op|')'
newline|'\n'
name|'fake_quota_usages'
op|'='
op|'{'
string|"'id'"
op|':'
number|'5'
op|','
nl|'\n'
string|"'resource'"
op|':'
string|"'instances'"
op|','
nl|'\n'
string|"'in_use'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'reserved'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'fake_reservations'
op|'='
op|'{'
string|"'id'"
op|':'
number|'6'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'fake_reservationo_uuid'"
op|','
nl|'\n'
string|"'usage_id'"
op|':'
number|'5'
op|','
nl|'\n'
string|"'resource'"
op|':'
string|"'instances'"
op|','
nl|'\n'
string|"'delta'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'expire'"
op|':'
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'}'
newline|'\n'
name|'quota_usages'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
name|'fake_quota_usages'
op|')'
newline|'\n'
name|'reservations'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
name|'fake_reservations'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_203
dedent|''
name|'def'
name|'_check_203'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'project_user_quotas'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'project_user_quotas'"
op|')'
newline|'\n'
name|'fake_quotas'
op|'='
op|'{'
string|"'id'"
op|':'
number|'4'
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake_project'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake_user'"
op|','
nl|'\n'
string|"'resource'"
op|':'
string|"'instances'"
op|','
nl|'\n'
string|"'hard_limit'"
op|':'
number|'10'
op|'}'
newline|'\n'
name|'project_user_quotas'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
name|'fake_quotas'
op|')'
newline|'\n'
name|'quota_usages'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'quota_usages'"
op|')'
newline|'\n'
name|'reservations'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'reservations'"
op|')'
newline|'\n'
comment|'# Get the record'
nl|'\n'
name|'quota'
op|'='
name|'project_user_quotas'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'quota_usage'
op|'='
name|'quota_usages'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'reservation'
op|'='
name|'reservations'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'quota'
op|'['
string|"'id'"
op|']'
op|','
number|'4'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'quota'
op|'['
string|"'project_id'"
op|']'
op|','
string|"'fake_project'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'quota'
op|'['
string|"'user_id'"
op|']'
op|','
string|"'fake_user'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'quota'
op|'['
string|"'resource'"
op|']'
op|','
string|"'instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'quota'
op|'['
string|"'hard_limit'"
op|']'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'quota_usage'
op|'['
string|"'user_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'reservation'
op|'['
string|"'user_id'"
op|']'
op|')'
newline|'\n'
comment|'# Check indexes exist'
nl|'\n'
name|'if'
name|'engine'
op|'.'
name|'name'
op|'=='
string|"'mysql'"
name|'or'
name|'engine'
op|'.'
name|'name'
op|'=='
string|"'postgresql'"
op|':'
newline|'\n'
indent|'            '
name|'data'
op|'='
op|'{'
nl|'\n'
comment|'# table_name: ((idx_1, (c1, c2,)), (idx2, (c1, c2,)), ...)'
nl|'\n'
string|"'quota_usages'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'ix_quota_usages_user_id_deleted'"
op|','
nl|'\n'
name|'sorted'
op|'('
op|'('
string|"'user_id'"
op|','
string|"'deleted'"
op|')'
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'reservations'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'ix_reservations_user_id_deleted'"
op|','
nl|'\n'
name|'sorted'
op|'('
op|'('
string|"'user_id'"
op|','
string|"'deleted'"
op|')'
op|')'
op|')'
op|','
nl|'\n'
op|')'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'meta'
op|'='
name|'sqlalchemy'
op|'.'
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
nl|'\n'
name|'for'
name|'table_name'
op|','
name|'indexes'
name|'in'
name|'data'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'table'
op|'='
name|'sqlalchemy'
op|'.'
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
name|'current_indexes'
op|'='
op|'['
op|'('
name|'i'
op|'.'
name|'name'
op|','
name|'tuple'
op|'('
name|'i'
op|'.'
name|'columns'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|')'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'table'
op|'.'
name|'indexes'
op|']'
newline|'\n'
nl|'\n'
comment|'# we can not get correct order of columns in index'
nl|'\n'
comment|'# definition to postgresql using sqlalchemy. So we sort'
nl|'\n'
comment|'# columns list before compare'
nl|'\n'
comment|'# bug http://www.sqlalchemy.org/trac/ticket/2767'
nl|'\n'
name|'current_indexes'
op|'='
op|'('
nl|'\n'
op|'['
op|'('
name|'idx'
op|'['
number|'0'
op|']'
op|','
name|'sorted'
op|'('
name|'idx'
op|'['
number|'1'
op|']'
op|')'
op|')'
name|'for'
name|'idx'
name|'in'
name|'current_indexes'
op|']'
nl|'\n'
op|')'
newline|'\n'
name|'for'
name|'index'
name|'in'
name|'indexes'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'index'
op|','
name|'current_indexes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_203
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'_post_downgrade_203'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'table_exist'
op|'='
name|'True'
newline|'\n'
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'project_user_quotas'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'table_exist'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'quota_usages'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'quota_usages'"
op|')'
newline|'\n'
name|'reservations'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'reservations'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Get the record'
nl|'\n'
name|'quota_usage'
op|'='
name|'quota_usages'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'reservation'
op|'='
name|'reservations'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'user_id'"
op|','
name|'quota_usage'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'user_id'"
op|','
name|'reservation'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'table_exist'
op|')'
newline|'\n'
comment|'# Check indexes are gone'
nl|'\n'
name|'if'
name|'engine'
op|'.'
name|'name'
op|'=='
string|"'mysql'"
name|'or'
name|'engine'
op|'.'
name|'name'
op|'=='
string|"'postgresql'"
op|':'
newline|'\n'
indent|'            '
name|'data'
op|'='
op|'{'
nl|'\n'
comment|'# table_name: ((idx_1, (c1, c2,)), (idx2, (c1, c2,)), ...)'
nl|'\n'
string|"'quota_usages'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'ix_quota_usages_user_id_deleted'"
op|','
nl|'\n'
name|'sorted'
op|'('
op|'('
string|"'user_id'"
op|','
string|"'deleted'"
op|')'
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'reservations'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'ix_reservations_user_id_deleted'"
op|','
nl|'\n'
name|'sorted'
op|'('
op|'('
string|"'user_id'"
op|','
string|"'deleted'"
op|')'
op|')'
op|')'
op|','
nl|'\n'
op|')'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'meta'
op|'='
name|'sqlalchemy'
op|'.'
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
nl|'\n'
name|'for'
name|'table_name'
op|','
name|'indexes'
name|'in'
name|'data'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'table'
op|'='
name|'sqlalchemy'
op|'.'
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
name|'current_indexes'
op|'='
op|'['
op|'('
name|'i'
op|'.'
name|'name'
op|','
name|'tuple'
op|'('
name|'i'
op|'.'
name|'columns'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|')'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'table'
op|'.'
name|'indexes'
op|']'
newline|'\n'
nl|'\n'
comment|'# we can not get correct order of columns in index'
nl|'\n'
comment|'# definition to postgresql using sqlalchemy. So we sort'
nl|'\n'
comment|'# columns list before compare'
nl|'\n'
comment|'# bug http://www.sqlalchemy.org/trac/ticket/2767'
nl|'\n'
name|'current_indexes'
op|'='
op|'('
nl|'\n'
op|'['
op|'('
name|'idx'
op|'['
number|'0'
op|']'
op|','
name|'sorted'
op|'('
name|'idx'
op|'['
number|'1'
op|']'
op|')'
op|')'
name|'for'
name|'idx'
name|'in'
name|'current_indexes'
op|']'
nl|'\n'
op|')'
newline|'\n'
name|'for'
name|'index'
name|'in'
name|'indexes'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
name|'index'
op|','
name|'current_indexes'
op|')'
newline|'\n'
nl|'\n'
comment|'# Check indexes are gone'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'engine'
op|'.'
name|'name'
op|'=='
string|"'mysql'"
name|'or'
name|'engine'
op|'.'
name|'name'
op|'=='
string|"'postgresql'"
op|':'
newline|'\n'
indent|'            '
name|'data'
op|'='
op|'{'
nl|'\n'
comment|'# table_name: ((idx_1, (c1, c2,)), (idx2, (c1, c2,)), ...)'
nl|'\n'
string|"'quota_usages'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'ix_quota_usages_user_id_deleted'"
op|','
nl|'\n'
op|'('
string|"'user_id'"
op|','
string|"'deleted'"
op|')'
op|')'
op|','
nl|'\n'
op|')'
op|','
nl|'\n'
string|"'reservations'"
op|':'
op|'('
nl|'\n'
op|'('
string|"'ix_reservations_user_id_deleted'"
op|','
nl|'\n'
op|'('
string|"'user_id'"
op|','
string|"'deleted'"
op|')'
op|')'
op|','
nl|'\n'
op|')'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'meta'
op|'='
name|'sqlalchemy'
op|'.'
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
nl|'\n'
name|'for'
name|'table_name'
op|','
name|'indexes'
name|'in'
name|'data'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'table'
op|'='
name|'sqlalchemy'
op|'.'
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
name|'current_indexes'
op|'='
op|'['
op|'('
name|'i'
op|'.'
name|'name'
op|','
name|'tuple'
op|'('
name|'i'
op|'.'
name|'columns'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|')'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'table'
op|'.'
name|'indexes'
op|']'
newline|'\n'
name|'for'
name|'index'
name|'in'
name|'indexes'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
name|'index'
op|','
name|'current_indexes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_204
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'_check_204'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'engine'
op|'.'
name|'name'
op|'!='
string|"'sqlite'"
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'meta'
op|'='
name|'sqlalchemy'
op|'.'
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
name|'reservations'
op|'='
name|'sqlalchemy'
op|'.'
name|'Table'
op|'('
string|"'reservations'"
op|','
name|'meta'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'index_data'
op|'='
op|'['
op|'('
name|'idx'
op|'.'
name|'name'
op|','
name|'idx'
op|'.'
name|'columns'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
nl|'\n'
name|'for'
name|'idx'
name|'in'
name|'reservations'
op|'.'
name|'indexes'
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'engine'
op|'.'
name|'name'
op|'=='
string|'"postgresql"'
op|':'
newline|'\n'
comment|'# we can not get correct order of columns in index'
nl|'\n'
comment|'# definition to postgresql using sqlalchemy. So we sort'
nl|'\n'
comment|'# columns list before compare'
nl|'\n'
comment|'# bug http://www.sqlalchemy.org/trac/ticket/2767'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
nl|'\n'
op|'('
string|"'reservations_uuid_idx'"
op|','
name|'sorted'
op|'('
op|'['
string|"'uuid'"
op|']'
op|')'
op|')'
op|','
nl|'\n'
op|'('
op|'['
op|'('
name|'idx'
op|'['
number|'0'
op|']'
op|','
name|'sorted'
op|'('
name|'idx'
op|'['
number|'1'
op|']'
op|')'
op|')'
name|'for'
name|'idx'
name|'in'
name|'index_data'
op|']'
op|')'
nl|'\n'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
op|'('
string|"'reservations_uuid_idx'"
op|','
op|'['
string|"'uuid'"
op|']'
op|')'
op|','
name|'index_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_205
dedent|''
dedent|''
name|'def'
name|'_pre_upgrade_205'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_instances'
op|'='
op|'['
name|'dict'
op|'('
name|'uuid'
op|'='
string|"'m205-uuid1'"
op|','
name|'locked'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'uuid'
op|'='
string|"'m205-uuid2'"
op|','
name|'locked'
op|'='
name|'False'
op|')'
op|']'
newline|'\n'
name|'for'
name|'table_name'
name|'in'
op|'['
string|"'instances'"
op|','
string|"'shadow_instances'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'table'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'table_name'
op|')'
newline|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'table'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'fake_instances'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_205
dedent|''
dedent|''
name|'def'
name|'_check_205'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'table_name'
name|'in'
op|'['
string|"'instances'"
op|','
string|"'shadow_instances'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'table'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'table_name'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'table'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'.'
name|'in_'
op|'('
op|'['
string|"'m205-uuid1'"
op|','
string|"'m205-uuid2'"
op|']'
op|')'
op|')'
op|'.'
name|'order_by'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'rows'
op|'['
number|'0'
op|']'
op|'['
string|"'locked_by'"
op|']'
op|','
string|"'admin'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'rows'
op|'['
number|'1'
op|']'
op|'['
string|"'locked_by'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_205
dedent|''
dedent|''
name|'def'
name|'_post_downgrade_205'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'table_name'
name|'in'
op|'['
string|"'instances'"
op|','
string|"'shadow_instances'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'table'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'table_name'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'table'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'locked_by'"
op|','
name|'rows'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_206
dedent|''
dedent|''
name|'def'
name|'_pre_upgrade_206'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instances'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instances'"
op|')'
newline|'\n'
name|'shadow_instances'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'shadow_instances'"
op|')'
newline|'\n'
nl|'\n'
name|'data'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'650'
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'651'
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'2'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'for'
name|'item'
name|'in'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'instances'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'item'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
name|'shadow_instances'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'item'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_check_206
dedent|''
name|'def'
name|'_check_206'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'instances'"
op|','
string|"'cleaned'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'shadow_instances'"
op|','
string|"'cleaned'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIndexMembers'
op|'('
name|'engine'
op|','
string|"'instances'"
op|','
nl|'\n'
string|"'instances_host_deleted_cleaned_idx'"
op|','
nl|'\n'
op|'['
string|"'host'"
op|','
string|"'deleted'"
op|','
string|"'cleaned'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instances'"
op|')'
newline|'\n'
name|'shadow_instances'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'shadow_instances'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_
name|'def'
name|'get_'
op|'('
name|'table'
op|','
name|'ident'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'table'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
name|'ident'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'table'
name|'in'
op|'('
name|'instances'
op|','
name|'shadow_instances'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'id_1'
op|'='
name|'get_'
op|'('
name|'instances'
op|','
number|'650'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'id_1'
op|'['
string|"'deleted'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'id_1'
op|'['
string|"'cleaned'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'id_2'
op|'='
name|'get_'
op|'('
name|'instances'
op|','
number|'651'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'id_2'
op|'['
string|"'deleted'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'id_2'
op|'['
string|"'cleaned'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_206
dedent|''
dedent|''
name|'def'
name|'_post_downgrade_206'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'instances'"
op|','
string|"'cleaned'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'shadow_instances'"
op|','
string|"'cleaned'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_207
dedent|''
name|'def'
name|'_207'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'upgrade'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uniq_names'
op|'='
op|'['
string|"'uniq_cell_name0deleted'"
op|','
nl|'\n'
string|"'uniq_cells0name0deleted'"
op|']'
newline|'\n'
name|'if'
name|'upgrade'
op|':'
newline|'\n'
indent|'            '
name|'uniq_names'
op|'='
name|'uniq_names'
op|'['
op|':'
op|':'
op|'-'
number|'1'
op|']'
newline|'\n'
dedent|''
name|'cells'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'cells'"
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'name'"
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'transport_url'"
op|':'
string|"'fake_transport_url'"
op|'}'
newline|'\n'
name|'cells'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'values'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'deleted'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'cells'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'values'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
name|'values'
op|'['
string|"'deleted'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'IntegrityError'
op|','
nl|'\n'
name|'cells'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|','
nl|'\n'
name|'values'
op|')'
newline|'\n'
name|'cells'
op|'.'
name|'delete'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
name|'indexes'
op|'='
name|'dict'
op|'('
op|'('
name|'i'
op|'.'
name|'name'
op|','
name|'i'
op|')'
name|'for'
name|'i'
name|'in'
name|'cells'
op|'.'
name|'indexes'
op|')'
newline|'\n'
name|'if'
name|'indexes'
op|':'
newline|'\n'
indent|'            '
name|'check_index_old'
op|'='
name|'indexes'
op|'.'
name|'get'
op|'('
name|'uniq_names'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'check_index_new'
op|'='
name|'indexes'
op|'.'
name|'get'
op|'('
name|'uniq_names'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'bool'
op|'('
name|'check_index_old'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'bool'
op|'('
name|'check_index_new'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_207
dedent|''
dedent|''
name|'def'
name|'_pre_upgrade_207'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_207'
op|'('
name|'engine'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_207
dedent|''
name|'def'
name|'_check_207'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_207'
op|'('
name|'engine'
op|','
name|'upgrade'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_207
dedent|''
name|'def'
name|'_post_downgrade_207'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_207'
op|'('
name|'engine'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_208
dedent|''
name|'def'
name|'_check_208'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|','
string|"'host_ip'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|','
string|"'supported_instances'"
op|')'
newline|'\n'
nl|'\n'
name|'compute_nodes'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|')'
newline|'\n'
name|'if'
name|'engine'
op|'.'
name|'name'
op|'=='
string|'"postgresql"'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'compute_nodes'
op|'.'
name|'c'
op|'.'
name|'host_ip'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'dialects'
op|'.'
name|'postgresql'
op|'.'
name|'INET'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'compute_nodes'
op|'.'
name|'c'
op|'.'
name|'host_ip'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'String'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'compute_nodes'
op|'.'
name|'c'
op|'.'
name|'supported_instances'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'Text'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_208
dedent|''
name|'def'
name|'_post_downgrade_208'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|','
string|"'host_ip'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|','
nl|'\n'
string|"'supported_instance'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_data_209
dedent|''
name|'def'
name|'_data_209'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ret'
op|'='
op|'{'
string|'"compute_nodes"'
op|':'
op|'{'
string|'"service_id"'
op|':'
number|'999'
op|','
string|'"vcpus"'
op|':'
number|'1'
op|','
string|'"memory_mb"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"local_gb"'
op|':'
number|'1'
op|','
string|'"vcpus_used"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"memory_mb_used"'
op|':'
number|'1'
op|','
string|'"local_gb_used"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"hypervisor_type"'
op|':'
string|'"fake_type"'
op|','
nl|'\n'
string|'"hypervisor_version"'
op|':'
number|'1'
op|','
string|'"cpu_info"'
op|':'
string|'"info"'
op|'}'
op|','
nl|'\n'
string|'"instance_actions"'
op|':'
op|'{'
string|'"instance_uuid"'
op|':'
string|'"fake"'
op|'}'
op|','
nl|'\n'
string|'"migrations"'
op|':'
op|'{'
string|'"instance_uuid"'
op|':'
string|'"fake"'
op|'}'
op|','
nl|'\n'
string|'"instance_faults"'
op|':'
op|'{'
string|'"instance_uuid"'
op|':'
string|'"fake"'
op|','
string|'"code"'
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
string|'"compute_node_stats"'
op|':'
op|'{'
string|'"compute_node_id"'
op|':'
number|'1'
op|','
string|'"key"'
op|':'
string|'"fake"'
op|'}'
op|'}'
newline|'\n'
name|'return'
name|'ret'
newline|'\n'
nl|'\n'
DECL|member|_constraints_209
dedent|''
name|'def'
name|'_constraints_209'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|'"compute_nodes"'
op|':'
op|'('
string|"'services'"
op|','
string|"'id'"
op|')'
op|','
nl|'\n'
string|'"instance_actions"'
op|':'
op|'('
string|"'instances'"
op|','
string|"'uuid'"
op|')'
op|','
nl|'\n'
string|'"migrations"'
op|':'
op|'('
string|"'instances'"
op|','
string|"'uuid'"
op|')'
op|','
nl|'\n'
string|'"instance_faults"'
op|':'
op|'('
string|"'instances'"
op|','
string|"'uuid'"
op|')'
op|','
nl|'\n'
string|'"compute_node_stats"'
op|':'
op|'('
string|"'compute_nodes'"
op|','
string|"'id'"
op|')'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_209
dedent|''
name|'def'
name|'_pre_upgrade_209'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'engine'
op|'.'
name|'name'
op|'=='
string|"'sqlite'"
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'instances'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instances'"
op|')'
newline|'\n'
name|'instances'
op|'.'
name|'delete'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'instances'
op|'.'
name|'c'
op|'.'
name|'uuid'
op|'=='
name|'None'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
name|'tables'
op|'='
op|'['
string|'"compute_nodes"'
op|','
string|'"instance_actions"'
op|','
string|'"migrations"'
op|','
nl|'\n'
string|'"instance_faults"'
op|','
string|'"compute_node_stats"'
op|']'
newline|'\n'
name|'change_tables'
op|'='
name|'dict'
op|'('
op|'('
name|'i'
op|','
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'i'
op|')'
op|')'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'tables'
op|')'
newline|'\n'
name|'data'
op|'='
name|'self'
op|'.'
name|'_data_209'
op|'('
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'tables'
op|':'
newline|'\n'
indent|'            '
name|'change_tables'
op|'['
name|'i'
op|']'
op|'.'
name|'delete'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
name|'change_tables'
op|'['
name|'i'
op|']'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'data'
op|'['
name|'i'
op|']'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(jhesketh): Add instance with NULL uuid to check the backups'
nl|'\n'
comment|'#                 still work correctly and avoid violating the foreign'
nl|'\n'
comment|'#                 key constraint. If there are NULL values in a NOT IN'
nl|'\n'
comment|'#                 () set the result is always false. Therefore having'
nl|'\n'
comment|'#                 this instance inserted here causes migration 209 to'
nl|'\n'
comment|'#                 fail unless the IN set sub-query is modified'
nl|'\n'
comment|'#                 appropriately. See bug/1240325'
nl|'\n'
dedent|''
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'instances'"
op|')'
op|'.'
name|'insert'
op|'('
nl|'\n'
op|'{'
string|"'uuid'"
op|':'
name|'None'
op|'}'
nl|'\n'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_209
dedent|''
name|'def'
name|'_check_209'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'engine'
op|'.'
name|'name'
op|'=='
string|"'sqlite'"
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'tables'
op|'='
op|'['
string|'"compute_nodes"'
op|','
string|'"instance_actions"'
op|','
string|'"migrations"'
op|','
nl|'\n'
string|'"instance_faults"'
op|','
string|'"compute_node_stats"'
op|']'
newline|'\n'
name|'change_tables'
op|'='
name|'dict'
op|'('
op|'('
name|'i'
op|','
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'i'
op|')'
op|')'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'tables'
op|')'
newline|'\n'
name|'data'
op|'='
name|'self'
op|'.'
name|'_data_209'
op|'('
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'tables'
op|':'
newline|'\n'
indent|'            '
name|'insert_values'
op|'='
name|'data'
op|'['
name|'i'
op|']'
newline|'\n'
name|'table'
op|'='
name|'change_tables'
op|'['
name|'i'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'IntegrityError'
op|','
nl|'\n'
name|'table'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|','
nl|'\n'
name|'insert_values'
op|')'
newline|'\n'
name|'dump_table'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'dump_'"
op|'+'
name|'i'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'dump_table'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'table'
op|'.'
name|'delete'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
name|'fks'
op|'='
op|'['
op|'('
name|'f'
op|'.'
name|'column'
op|'.'
name|'table'
op|'.'
name|'name'
op|','
name|'f'
op|'.'
name|'column'
op|'.'
name|'name'
op|')'
nl|'\n'
name|'for'
name|'f'
name|'in'
name|'table'
op|'.'
name|'foreign_keys'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'self'
op|'.'
name|'_constraints_209'
op|'('
op|')'
op|'.'
name|'get'
op|'('
name|'i'
op|')'
op|','
name|'fks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_209
dedent|''
dedent|''
name|'def'
name|'_post_downgrade_209'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'engine'
op|'.'
name|'name'
op|'=='
string|"'sqlite'"
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'check_tables'
op|'='
name|'engine'
op|'.'
name|'table_names'
op|'('
op|')'
newline|'\n'
name|'tables'
op|'='
op|'['
string|'"compute_nodes"'
op|','
string|'"instance_actions"'
op|','
string|'"migrations"'
op|','
nl|'\n'
string|'"instance_faults"'
op|','
string|'"compute_node_stats"'
op|']'
newline|'\n'
name|'change_tables'
op|'='
name|'dict'
op|'('
op|'('
name|'i'
op|','
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'i'
op|')'
op|')'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'tables'
op|')'
newline|'\n'
name|'data'
op|'='
name|'self'
op|'.'
name|'_data_209'
op|'('
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'tables'
op|':'
newline|'\n'
indent|'            '
name|'dump_table_name'
op|'='
string|"'dump_'"
op|'+'
name|'i'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
name|'dump_table_name'
op|','
name|'check_tables'
op|')'
newline|'\n'
name|'table'
op|'='
name|'change_tables'
op|'['
name|'i'
op|']'
newline|'\n'
name|'table'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'data'
op|'['
name|'i'
op|']'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'table'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'fks'
op|'='
op|'['
op|'('
name|'f'
op|'.'
name|'column'
op|'.'
name|'table'
op|'.'
name|'name'
op|','
name|'f'
op|'.'
name|'column'
op|'.'
name|'name'
op|')'
nl|'\n'
name|'for'
name|'f'
name|'in'
name|'table'
op|'.'
name|'foreign_keys'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
name|'self'
op|'.'
name|'_constraints_209'
op|'('
op|')'
op|'.'
name|'get'
op|'('
name|'i'
op|')'
op|','
name|'fks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_210
dedent|''
dedent|''
name|'def'
name|'_check_210'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'project_user_quotas'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'project_user_quotas'"
op|')'
newline|'\n'
nl|'\n'
name|'index_data'
op|'='
op|'['
op|'('
name|'idx'
op|'.'
name|'name'
op|','
name|'idx'
op|'.'
name|'columns'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
nl|'\n'
name|'for'
name|'idx'
name|'in'
name|'project_user_quotas'
op|'.'
name|'indexes'
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'engine'
op|'.'
name|'name'
op|'=='
string|"'postgresql'"
op|':'
newline|'\n'
comment|'# NOTE(vsergeyev): There is no possibility to get the order of'
nl|'\n'
comment|'#                  columns due to bug in reflection of indexes in'
nl|'\n'
comment|'#                  PostgreSQL.'
nl|'\n'
comment|'#                  See http://www.sqlalchemy.org/trac/ticket/2767'
nl|'\n'
comment|'#                  So we should compare sets instead of lists.'
nl|'\n'
indent|'            '
name|'index_data'
op|'='
op|'['
op|'('
name|'name'
op|','
name|'set'
op|'('
name|'columns'
op|')'
op|')'
name|'for'
name|'name'
op|','
name|'columns'
name|'in'
name|'index_data'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
op|'('
string|"'project_user_quotas_user_id_deleted_idx'"
op|','
nl|'\n'
name|'set'
op|'('
op|'['
string|"'user_id'"
op|','
string|"'deleted'"
op|']'
op|')'
op|')'
op|','
name|'index_data'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
op|'('
string|"'project_user_quotas_user_id_deleted_idx'"
op|','
nl|'\n'
op|'['
string|"'user_id'"
op|','
string|"'deleted'"
op|']'
op|')'
op|','
name|'index_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_210
dedent|''
dedent|''
name|'def'
name|'_post_downgrade_210'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'project_user_quotas'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'project_user_quotas'"
op|')'
newline|'\n'
nl|'\n'
name|'index_data'
op|'='
op|'['
op|'('
name|'idx'
op|'.'
name|'name'
op|','
name|'idx'
op|'.'
name|'columns'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
nl|'\n'
name|'for'
name|'idx'
name|'in'
name|'project_user_quotas'
op|'.'
name|'indexes'
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'engine'
op|'.'
name|'name'
op|'=='
string|"'postgresql'"
op|':'
newline|'\n'
comment|'# NOTE(vsergeyev): There is no possibility to get the order of'
nl|'\n'
comment|'#                  columns due to bug in reflection of indexes in'
nl|'\n'
comment|'#                  PostgreSQL.'
nl|'\n'
comment|'#                  See http://www.sqlalchemy.org/trac/ticket/2767'
nl|'\n'
comment|'#                  So we should compare sets instead of lists.'
nl|'\n'
indent|'            '
name|'index_data'
op|'='
op|'['
op|'('
name|'name'
op|','
name|'set'
op|'('
name|'columns'
op|')'
op|')'
name|'for'
name|'name'
op|','
name|'columns'
name|'in'
name|'index_data'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
op|'('
string|"'project_user_quotas_user_id_deleted_idx'"
op|','
nl|'\n'
name|'set'
op|'('
op|'['
string|"'user_id'"
op|','
string|"'deleted'"
op|']'
op|')'
op|')'
op|','
name|'index_data'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
op|'('
string|"'project_user_quotas_user_id_deleted_idx'"
op|','
nl|'\n'
op|'['
string|"'user_id'"
op|','
string|"'deleted'"
op|']'
op|')'
op|','
name|'index_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_211
dedent|''
dedent|''
name|'def'
name|'_pre_upgrade_211'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_aggregates'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'7'
op|','
string|"'name'"
op|':'
string|"'name1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'8'
op|','
string|"'name'"
op|':'
string|"'name2'"
op|'}'
op|']'
newline|'\n'
name|'aggregates'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'aggregates'"
op|')'
newline|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'aggregates'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'fake_aggregates'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'aggregate_metadata'"
op|')'
newline|'\n'
name|'data'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'aggregate_id'"
op|':'
number|'7'
op|','
string|"'key'"
op|':'
string|"'availability_zone'"
op|','
nl|'\n'
string|"'value'"
op|':'
string|"'custom_az1'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'aggregate_id'"
op|':'
number|'7'
op|','
string|"'key'"
op|':'
string|"'availability_zone'"
op|','
nl|'\n'
string|"'value'"
op|':'
string|"'custom_az2'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'aggregate_id'"
op|':'
number|'8'
op|','
string|"'key'"
op|':'
string|"'availability_zone'"
op|','
nl|'\n'
string|"'value'"
op|':'
string|"'custom_az3'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'for'
name|'item'
name|'in'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'item'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_check_211
dedent|''
name|'def'
name|'_check_211'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'metadata'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'aggregate_metadata'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_
name|'def'
name|'get_'
op|'('
name|'aggrid'
op|','
name|'deleted'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'deleted_value'
op|'='
number|'0'
name|'if'
name|'not'
name|'deleted'
name|'else'
name|'metadata'
op|'.'
name|'c'
op|'.'
name|'id'
newline|'\n'
name|'return'
name|'metadata'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'metadata'
op|'.'
name|'c'
op|'.'
name|'aggregate_id'
op|'=='
name|'aggrid'
op|')'
op|'.'
name|'where'
op|'('
name|'metadata'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'=='
name|'deleted_value'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
number|'7'
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
number|'7'
op|','
name|'True'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
number|'8'
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'IntegrityError'
op|','
nl|'\n'
name|'metadata'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|','
nl|'\n'
op|'{'
string|"'aggregate_id'"
op|':'
number|'7'
op|','
string|"'key'"
op|':'
string|"'availability_zone'"
op|','
nl|'\n'
string|"'value'"
op|':'
string|"'az4'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_211
dedent|''
name|'def'
name|'_post_downgrade_211'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'metadata'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'aggregate_metadata'"
op|')'
newline|'\n'
name|'data'
op|'='
op|'{'
string|"'aggregate_id'"
op|':'
number|'8'
op|','
string|"'key'"
op|':'
string|"'availability_zone'"
op|','
nl|'\n'
string|"'value'"
op|':'
string|"'az'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
newline|'\n'
name|'metadata'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'data'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'metadata'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'data'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_212
dedent|''
name|'def'
name|'_212'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'ext'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'engine'
op|'.'
name|'name'
op|'=='
string|"'sqlite'"
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'migrations'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'migrations'"
op|')'
newline|'\n'
name|'indexes'
op|'='
name|'dict'
op|'('
op|'('
name|'i'
op|'.'
name|'name'
op|','
name|'i'
op|')'
name|'for'
name|'i'
name|'in'
name|'migrations'
op|'.'
name|'indexes'
op|')'
newline|'\n'
name|'check_index'
op|'='
name|'indexes'
op|'['
string|"'migrations_by_host_nodes_and_status_idx'"
op|']'
newline|'\n'
name|'index_columns'
op|'='
op|'['
name|'c'
op|'.'
name|'name'
name|'for'
name|'c'
name|'in'
name|'check_index'
op|'.'
name|'columns'
op|']'
newline|'\n'
name|'check_columns'
op|'='
op|'['
string|"'source_compute'"
op|','
string|"'dest_compute'"
op|','
string|"'source_node'"
op|','
nl|'\n'
string|"'dest_node'"
op|','
string|"'status'"
op|']'
newline|'\n'
name|'if'
name|'ext'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'check_columns'
op|'.'
name|'insert'
op|'('
number|'0'
op|','
name|'ext'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'set'
op|'('
name|'index_columns'
op|')'
op|'=='
name|'set'
op|'('
name|'check_columns'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_212
dedent|''
name|'def'
name|'_pre_upgrade_212'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'engine'
op|'.'
name|'name'
op|'=='
string|"'mysql'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_212'
op|'('
name|'engine'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_212
dedent|''
dedent|''
name|'def'
name|'_check_212'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_212'
op|'('
name|'engine'
op|','
name|'ext'
op|'='
string|"'deleted'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_212
dedent|''
name|'def'
name|'_post_downgrade_212'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'engine'
op|'.'
name|'name'
op|'=='
string|"'mysql'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_212'
op|'('
name|'engine'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_213
dedent|''
dedent|''
name|'def'
name|'_213'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'NoSuchTableError'
op|','
nl|'\n'
name|'db_utils'
op|'.'
name|'get_table'
op|','
name|'engine'
op|','
nl|'\n'
string|"'pci_devices'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|','
string|"'pci_stats'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_213
dedent|''
name|'def'
name|'_pre_upgrade_213'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_213'
op|'('
name|'engine'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_213
dedent|''
name|'def'
name|'_check_213'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_pci'
op|'='
op|'{'
string|"'id'"
op|':'
number|'3353'
op|','
nl|'\n'
string|"'compute_node_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'dev_id'"
op|':'
string|"'pci_0000:0f:08:07'"
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'0000:0f:08:7'"
op|','
nl|'\n'
string|"'product_id'"
op|':'
string|"'8086'"
op|','
nl|'\n'
string|"'vendor_id'"
op|':'
string|"'1520'"
op|','
nl|'\n'
string|"'dev_type'"
op|':'
string|"'type-VF'"
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'label_8086_1520'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'available'"
op|','
nl|'\n'
string|"'extra_info'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'00000000-0000-0000-0000-000000000010'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'devs'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'pci_devices'"
op|')'
newline|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'devs'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'fake_pci'
op|')'
newline|'\n'
name|'result'
op|'='
name|'devs'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
number|'0'
op|']'
op|'['
string|"'vendor_id'"
op|']'
op|','
string|"'1520'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|','
string|"'pci_stats'"
op|')'
newline|'\n'
name|'nodes'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'nodes'
op|'.'
name|'c'
op|'.'
name|'pci_stats'
op|'.'
name|'type'
op|','
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'Text'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_213
dedent|''
name|'def'
name|'_post_downgrade_213'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_213'
op|'('
name|'engine'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_214
dedent|''
name|'def'
name|'_pre_upgrade_214'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'test_data'
op|'='
op|'{'
nl|'\n'
comment|'# table_name: ((index_name_1, (*columns)), ...)'
nl|'\n'
string|'"migrations"'
op|':'
op|'('
op|'('
nl|'\n'
string|"'migrations_instance_uuid_and_status_idx'"
op|','
nl|'\n'
op|'['
string|"'deleted'"
op|','
string|"'instance_uuid'"
op|','
string|"'status'"
op|']'
nl|'\n'
op|')'
op|','
op|')'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'return'
name|'test_data'
newline|'\n'
nl|'\n'
DECL|member|_check_214
dedent|''
name|'def'
name|'_check_214'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'engine'
op|'.'
name|'name'
op|'=='
string|"'sqlite'"
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'table_name'
op|','
name|'indexes'
name|'in'
name|'data'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'sqlalchemy'
op|'.'
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
name|'table'
op|'='
name|'sqlalchemy'
op|'.'
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'index_data'
op|'='
op|'['
op|'('
name|'idx'
op|'.'
name|'name'
op|','
name|'idx'
op|'.'
name|'columns'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
nl|'\n'
name|'for'
name|'idx'
name|'in'
name|'table'
op|'.'
name|'indexes'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'name'
op|','
name|'columns'
name|'in'
name|'indexes'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'engine'
op|'.'
name|'name'
op|'=='
string|'"postgresql"'
op|':'
newline|'\n'
comment|'# we can not get correct order of columns in index'
nl|'\n'
comment|'# definition to postgresql using sqlalchemy. So we sortind'
nl|'\n'
comment|'# columns list before compare'
nl|'\n'
comment|'# bug http://www.sqlalchemy.org/trac/ticket/2767'
nl|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertIn'
op|'('
nl|'\n'
op|'('
name|'name'
op|','
name|'sorted'
op|'('
name|'columns'
op|')'
op|')'
op|','
nl|'\n'
op|'('
op|'['
op|'('
name|'idx'
op|'['
number|'0'
op|']'
op|','
name|'sorted'
op|'('
name|'idx'
op|'['
number|'1'
op|']'
op|')'
op|')'
name|'for'
name|'idx'
name|'in'
name|'index_data'
op|']'
op|')'
nl|'\n'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertIn'
op|'('
op|'('
name|'name'
op|','
name|'columns'
op|')'
op|','
name|'index_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_214
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'_post_downgrade_214'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'engine'
op|'.'
name|'name'
op|'=='
string|"'sqlite'"
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'table_name'
op|','
name|'indexes'
name|'in'
name|'self'
op|'.'
name|'_pre_upgrade_214'
op|'('
name|'engine'
op|')'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'meta'
op|'='
name|'sqlalchemy'
op|'.'
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'engine'
newline|'\n'
name|'table'
op|'='
name|'sqlalchemy'
op|'.'
name|'Table'
op|'('
name|'table_name'
op|','
name|'meta'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'index_data'
op|'='
op|'['
op|'('
name|'idx'
op|'.'
name|'name'
op|','
name|'idx'
op|'.'
name|'columns'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
nl|'\n'
name|'for'
name|'idx'
name|'in'
name|'table'
op|'.'
name|'indexes'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'name'
op|','
name|'columns'
name|'in'
name|'indexes'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'engine'
op|'.'
name|'name'
op|'=='
string|'"postgresql"'
op|':'
newline|'\n'
comment|'# we can not get correct order of columns in index'
nl|'\n'
comment|'# definition to postgresql using sqlalchemy. So we sortind'
nl|'\n'
comment|'# columns list before compare'
nl|'\n'
comment|'# bug http://www.sqlalchemy.org/trac/ticket/2767'
nl|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
nl|'\n'
op|'('
name|'name'
op|','
name|'sorted'
op|'('
name|'columns'
op|')'
op|')'
op|','
nl|'\n'
op|'('
op|'['
op|'('
name|'idx'
op|'['
number|'0'
op|']'
op|','
name|'sorted'
op|'('
name|'idx'
op|'['
number|'1'
op|']'
op|')'
op|')'
name|'for'
name|'idx'
name|'in'
name|'index_data'
op|']'
op|')'
nl|'\n'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
op|'('
name|'name'
op|','
name|'columns'
op|')'
op|','
name|'index_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_data_215
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'_data_215'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ret'
op|'='
op|'{'
string|'"services"'
op|':'
op|'['
op|'{'
string|'"host"'
op|':'
string|'"compute-host1"'
op|','
string|'"id"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"binary"'
op|':'
string|'"nova-compute"'
op|','
string|'"topic"'
op|':'
string|'"compute"'
op|','
nl|'\n'
string|'"report_count"'
op|':'
number|'1'
op|'}'
op|']'
op|','
nl|'\n'
string|'"compute_nodes"'
op|':'
op|'['
op|'{'
string|'"vcpus"'
op|':'
number|'1'
op|','
string|'"cpu_info"'
op|':'
string|'"info"'
op|','
nl|'\n'
string|'"memory_mb"'
op|':'
number|'1'
op|','
string|'"local_gb"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"vcpus_used"'
op|':'
number|'1'
op|','
string|'"memory_mb_used"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"local_gb_used"'
op|':'
number|'1'
op|','
string|'"deleted"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"hypervisor_type"'
op|':'
string|'"fake_type"'
op|','
nl|'\n'
string|'"hypervisor_version"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"service_id"'
op|':'
number|'1'
op|','
string|'"id"'
op|':'
number|'10001'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"vcpus"'
op|':'
number|'1'
op|','
string|'"cpu_info"'
op|':'
string|'"info"'
op|','
nl|'\n'
string|'"memory_mb"'
op|':'
number|'1'
op|','
string|'"local_gb"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"vcpus_used"'
op|':'
number|'1'
op|','
string|'"memory_mb_used"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"local_gb_used"'
op|':'
number|'1'
op|','
string|'"deleted"'
op|':'
number|'2'
op|','
nl|'\n'
string|'"hypervisor_type"'
op|':'
string|'"fake_type"'
op|','
nl|'\n'
string|'"hypervisor_version"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"service_id"'
op|':'
number|'1'
op|','
string|'"id"'
op|':'
number|'10002'
op|'}'
op|']'
op|','
nl|'\n'
string|'"compute_node_stats"'
op|':'
op|'['
op|'{'
string|'"id"'
op|':'
number|'10'
op|','
string|'"compute_node_id"'
op|':'
number|'10001'
op|','
nl|'\n'
string|'"key"'
op|':'
string|'"fake-1"'
op|','
nl|'\n'
string|'"deleted"'
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"id"'
op|':'
number|'20'
op|','
string|'"compute_node_id"'
op|':'
number|'10002'
op|','
nl|'\n'
string|'"key"'
op|':'
string|'"fake-2"'
op|','
nl|'\n'
string|'"deleted"'
op|':'
number|'0'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'return'
name|'ret'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_215
dedent|''
name|'def'
name|'_pre_upgrade_215'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tables'
op|'='
op|'['
string|'"services"'
op|','
string|'"compute_nodes"'
op|','
string|'"compute_node_stats"'
op|']'
newline|'\n'
name|'change_tables'
op|'='
name|'dict'
op|'('
op|'('
name|'i'
op|','
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'i'
op|')'
op|')'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'tables'
op|')'
newline|'\n'
name|'data'
op|'='
name|'self'
op|'.'
name|'_data_215'
op|'('
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'tables'
op|':'
newline|'\n'
indent|'            '
name|'change_tables'
op|'['
name|'i'
op|']'
op|'.'
name|'delete'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
name|'for'
name|'v'
name|'in'
name|'data'
op|'['
name|'i'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'change_tables'
op|'['
name|'i'
op|']'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'v'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_215
dedent|''
dedent|''
dedent|''
name|'def'
name|'_check_215'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'stats'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|'"compute_node_stats"'
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_
name|'def'
name|'get_'
op|'('
name|'stat_id'
op|','
name|'deleted'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'deleted_value'
op|'='
number|'0'
name|'if'
name|'not'
name|'deleted'
name|'else'
name|'stats'
op|'.'
name|'c'
op|'.'
name|'id'
newline|'\n'
name|'return'
name|'stats'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'stats'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
name|'stat_id'
op|')'
op|'.'
name|'where'
op|'('
name|'stats'
op|'.'
name|'c'
op|'.'
name|'deleted'
op|'=='
name|'deleted_value'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
number|'10'
op|','
name|'False'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'get_'
op|'('
number|'20'
op|','
name|'True'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_data_216
dedent|''
name|'def'
name|'_data_216'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ret'
op|'='
op|'{'
string|"'instances'"
op|':'
op|'['
op|'{'
string|"'user_id'"
op|':'
string|"'1234'"
op|','
string|"'project_id'"
op|':'
string|"'5678'"
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'2'
op|','
string|"'memory_mb'"
op|':'
number|'256'
op|','
string|"'uuid'"
op|':'
string|"'uuid1'"
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'user_id'"
op|':'
string|"'234'"
op|','
string|"'project_id'"
op|':'
string|"'5678'"
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'1'
op|','
string|"'memory_mb'"
op|':'
number|'256'
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|']'
op|','
nl|'\n'
string|"'security_groups'"
op|':'
op|'['
op|'{'
string|"'user_id'"
op|':'
string|"'1234'"
op|','
string|"'project_id'"
op|':'
string|"'5678'"
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'user_id'"
op|':'
string|"'234'"
op|','
string|"'project_id'"
op|':'
string|"'5678'"
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'user_id'"
op|':'
string|"'234'"
op|','
string|"'project_id'"
op|':'
string|"'5678'"
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|']'
op|','
nl|'\n'
string|"'floating_ips'"
op|':'
op|'['
op|'{'
string|"'deleted'"
op|':'
number|'0'
op|','
string|"'project_id'"
op|':'
string|"'5678'"
op|','
nl|'\n'
string|"'auto_assigned'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deleted'"
op|':'
number|'0'
op|','
string|"'project_id'"
op|':'
string|"'5678'"
op|','
nl|'\n'
string|"'auto_assigned'"
op|':'
name|'False'
op|'}'
op|']'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'['
op|'{'
string|"'instance_uuid'"
op|':'
string|"'uuid1'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|']'
op|','
nl|'\n'
string|"'networks'"
op|':'
op|'['
op|'{'
string|"'project_id'"
op|':'
string|"'5678'"
op|','
string|"'deleted'"
op|':'
number|'0'
op|'}'
op|']'
op|','
nl|'\n'
string|"'quota_usages'"
op|':'
op|'['
op|'{'
string|"'user_id'"
op|':'
string|"'1234'"
op|','
string|"'project_id'"
op|':'
string|"'5678'"
op|','
nl|'\n'
string|"'resource'"
op|':'
string|"'instances'"
op|','
string|"'in_use'"
op|':'
number|'1'
op|','
string|"'reserved'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'user_id'"
op|':'
string|"'234'"
op|','
string|"'project_id'"
op|':'
string|"'5678'"
op|','
nl|'\n'
string|"'resource'"
op|':'
string|"'instances'"
op|','
string|"'in_use'"
op|':'
number|'1'
op|','
string|"'reserved'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'user_id'"
op|':'
name|'None'
op|','
string|"'project_id'"
op|':'
string|"'5678'"
op|','
nl|'\n'
string|"'resource'"
op|':'
string|"'instances'"
op|','
string|"'in_use'"
op|':'
number|'1'
op|','
string|"'reserved'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'user_id'"
op|':'
string|"'1234'"
op|','
string|"'project_id'"
op|':'
string|"'5678'"
op|','
nl|'\n'
string|"'resource'"
op|':'
string|"'security_groups'"
op|','
string|"'in_use'"
op|':'
number|'1'
op|','
string|"'reserved'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'user_id'"
op|':'
string|"'234'"
op|','
string|"'project_id'"
op|':'
string|"'5678'"
op|','
nl|'\n'
string|"'resource'"
op|':'
string|"'security_groups'"
op|','
string|"'in_use'"
op|':'
number|'2'
op|','
string|"'reserved'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'user_id'"
op|':'
name|'None'
op|','
string|"'project_id'"
op|':'
string|"'5678'"
op|','
nl|'\n'
string|"'resource'"
op|':'
string|"'security_groups'"
op|','
string|"'in_use'"
op|':'
number|'1'
op|','
string|"'reserved'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'user_id'"
op|':'
string|"'1234'"
op|','
string|"'project_id'"
op|':'
string|"'5678'"
op|','
nl|'\n'
string|"'resource'"
op|':'
string|"'floating_ips'"
op|','
string|"'in_use'"
op|':'
number|'1'
op|','
string|"'reserved'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'user_id'"
op|':'
name|'None'
op|','
string|"'project_id'"
op|':'
string|"'5678'"
op|','
nl|'\n'
string|"'resource'"
op|':'
string|"'floating_ips'"
op|','
string|"'in_use'"
op|':'
number|'1'
op|','
string|"'reserved'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'user_id'"
op|':'
string|"'1234'"
op|','
string|"'project_id'"
op|':'
string|"'5678'"
op|','
nl|'\n'
string|"'resource'"
op|':'
string|"'fixed_ips'"
op|','
string|"'in_use'"
op|':'
number|'1'
op|','
string|"'reserved'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'user_id'"
op|':'
name|'None'
op|','
string|"'project_id'"
op|':'
string|"'5678'"
op|','
nl|'\n'
string|"'resource'"
op|':'
string|"'fixed_ips'"
op|','
string|"'in_use'"
op|':'
number|'1'
op|','
string|"'reserved'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'user_id'"
op|':'
string|"'1234'"
op|','
string|"'project_id'"
op|':'
string|"'5678'"
op|','
nl|'\n'
string|"'resource'"
op|':'
string|"'networks'"
op|','
string|"'in_use'"
op|':'
number|'1'
op|','
string|"'reserved'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'user_id'"
op|':'
name|'None'
op|','
string|"'project_id'"
op|':'
string|"'5678'"
op|','
nl|'\n'
string|"'resource'"
op|':'
string|"'networks'"
op|','
string|"'in_use'"
op|':'
number|'2'
op|','
string|"'reserved'"
op|':'
number|'0'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'return'
name|'ret'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_216
dedent|''
name|'def'
name|'_pre_upgrade_216'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tables'
op|'='
op|'['
string|"'instance_system_metadata'"
op|','
string|"'instance_info_caches'"
op|','
nl|'\n'
string|"'block_device_mapping'"
op|','
string|"'security_group_instance_association'"
op|','
nl|'\n'
string|"'security_groups'"
op|','
string|"'migrations'"
op|','
string|"'instance_metadata'"
op|','
nl|'\n'
string|"'fixed_ips'"
op|','
string|"'instances'"
op|','
string|"'security_groups'"
op|','
string|"'floating_ips'"
op|','
nl|'\n'
string|"'fixed_ips'"
op|','
string|"'networks'"
op|']'
newline|'\n'
name|'delete_tables'
op|'='
name|'dict'
op|'('
op|'('
name|'table'
op|','
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'table'
op|')'
op|')'
nl|'\n'
name|'for'
name|'table'
name|'in'
name|'tables'
op|')'
newline|'\n'
name|'for'
name|'table'
name|'in'
name|'tables'
op|':'
newline|'\n'
indent|'            '
name|'delete_tables'
op|'['
name|'table'
op|']'
op|'.'
name|'delete'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'data'
op|'='
name|'self'
op|'.'
name|'_data_216'
op|'('
op|')'
newline|'\n'
name|'tables'
op|'='
name|'data'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'change_tables'
op|'='
name|'dict'
op|'('
op|'('
name|'table'
op|','
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
name|'table'
op|')'
op|')'
nl|'\n'
name|'for'
name|'table'
name|'in'
name|'tables'
op|')'
newline|'\n'
name|'for'
name|'table'
name|'in'
name|'tables'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'row'
name|'in'
name|'data'
op|'['
name|'table'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'change_tables'
op|'['
name|'table'
op|']'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'values'
op|'('
name|'row'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'IntegrityError'
op|':'
newline|'\n'
comment|'# This is run multiple times with opportunistic db testing.'
nl|'\n'
comment|"# There's no on duplicate key update functionality in"
nl|'\n'
comment|'# sqlalchemy so we just ignore the error.'
nl|'\n'
indent|'                    '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|_check_216
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'_check_216'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'quota_usages'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'quota_usages'"
op|')'
newline|'\n'
name|'per_user'
op|'='
op|'{'
string|"'1234'"
op|':'
op|'{'
string|"'instances'"
op|':'
number|'1'
op|','
string|"'cores'"
op|':'
number|'2'
op|','
string|"'ram'"
op|':'
number|'256'
op|','
nl|'\n'
string|"'security_groups'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
string|"'234'"
op|':'
op|'{'
string|"'instances'"
op|':'
number|'1'
op|','
string|"'cores'"
op|':'
number|'1'
op|','
string|"'ram'"
op|':'
number|'256'
op|','
nl|'\n'
string|"'security_groups'"
op|':'
number|'2'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'per_project'
op|'='
op|'{'
string|"'floating_ips'"
op|':'
number|'2'
op|','
string|"'fixed_ips'"
op|':'
number|'1'
op|','
string|"'networks'"
op|':'
number|'1'
op|'}'
newline|'\n'
nl|'\n'
name|'for'
name|'resource'
name|'in'
op|'['
string|"'instances'"
op|','
string|"'cores'"
op|','
string|"'ram'"
op|','
string|"'security_groups'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'rows'
op|'='
name|'quota_usages'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
nl|'\n'
name|'quota_usages'
op|'.'
name|'c'
op|'.'
name|'user_id'
op|'=='
name|'None'
op|')'
op|'.'
name|'where'
op|'('
nl|'\n'
name|'quota_usages'
op|'.'
name|'c'
op|'.'
name|'resource'
op|'=='
name|'resource'
op|')'
op|'.'
name|'execute'
op|'('
nl|'\n'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'rows'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'user'
name|'in'
name|'per_user'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'rows'
op|'='
name|'quota_usages'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
nl|'\n'
name|'quota_usages'
op|'.'
name|'c'
op|'.'
name|'user_id'
op|'=='
name|'user'
op|')'
op|'.'
name|'where'
op|'('
nl|'\n'
name|'quota_usages'
op|'.'
name|'c'
op|'.'
name|'project_id'
op|'=='
string|"'5678'"
op|')'
op|'.'
name|'execute'
op|'('
nl|'\n'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'for'
name|'row'
name|'in'
name|'rows'
op|':'
newline|'\n'
indent|'                '
name|'resource'
op|'='
name|'row'
op|'['
string|"'resource'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'per_user'
op|'['
name|'user'
op|']'
op|'['
name|'resource'
op|']'
op|','
name|'row'
op|'['
string|"'in_use'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'networks'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'networks'"
op|')'
newline|'\n'
name|'rows'
op|'='
name|'networks'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'for'
name|'resource'
name|'in'
name|'per_project'
op|':'
newline|'\n'
indent|'            '
name|'rows'
op|'='
name|'quota_usages'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
nl|'\n'
name|'quota_usages'
op|'.'
name|'c'
op|'.'
name|'resource'
op|'=='
name|'resource'
op|')'
op|'.'
name|'where'
op|'('
nl|'\n'
name|'quota_usages'
op|'.'
name|'c'
op|'.'
name|'project_id'
op|'=='
string|"'5678'"
op|')'
op|'.'
name|'execute'
op|'('
nl|'\n'
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'rows'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'per_project'
op|'['
name|'resource'
op|']'
op|','
name|'rows'
op|'['
number|'0'
op|']'
op|'['
string|"'in_use'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_227
dedent|''
dedent|''
name|'def'
name|'_check_227'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'table'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'project_user_quotas'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Insert fake_quotas with the longest resource name.'
nl|'\n'
name|'fake_quotas'
op|'='
op|'{'
string|"'id'"
op|':'
number|'5'
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake_project'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake_user'"
op|','
nl|'\n'
string|"'resource'"
op|':'
string|"'injected_file_content_bytes'"
op|','
nl|'\n'
string|"'hard_limit'"
op|':'
number|'10'
op|'}'
newline|'\n'
name|'table'
op|'.'
name|'insert'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
name|'fake_quotas'
op|')'
newline|'\n'
nl|'\n'
comment|'# Check we can get the longest resource name.'
nl|'\n'
name|'quota'
op|'='
name|'table'
op|'.'
name|'select'
op|'('
name|'table'
op|'.'
name|'c'
op|'.'
name|'id'
op|'=='
number|'5'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'quota'
op|'['
string|"'resource'"
op|']'
op|','
string|"'injected_file_content_bytes'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_228
dedent|''
name|'def'
name|'_check_228'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnExists'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|','
string|"'metrics'"
op|')'
newline|'\n'
nl|'\n'
name|'compute_nodes'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'compute_nodes'
op|'.'
name|'c'
op|'.'
name|'metrics'
op|'.'
name|'type'
op|','
nl|'\n'
name|'sqlalchemy'
op|'.'
name|'types'
op|'.'
name|'Text'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_228
dedent|''
name|'def'
name|'_post_downgrade_228'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertColumnNotExists'
op|'('
name|'engine'
op|','
string|"'compute_nodes'"
op|','
string|"'metrics'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestBaremetalMigrations
dedent|''
dedent|''
name|'class'
name|'TestBaremetalMigrations'
op|'('
name|'BaseWalkMigrationTestCase'
op|','
name|'CommonTestsMixIn'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test sqlalchemy-migrate migrations."""'
newline|'\n'
DECL|variable|USER
name|'USER'
op|'='
string|'"openstack_citest"'
newline|'\n'
DECL|variable|PASSWD
name|'PASSWD'
op|'='
string|'"openstack_citest"'
newline|'\n'
DECL|variable|DATABASE
name|'DATABASE'
op|'='
string|'"openstack_baremetal_citest"'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestBaremetalMigrations'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'DEFAULT_CONFIG_FILE'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'__file__'
op|')'
op|','
nl|'\n'
string|"'../virt/baremetal/test_baremetal_migrations.conf'"
op|')'
newline|'\n'
comment|'# Test machines can set the NOVA_TEST_MIGRATIONS_CONF variable'
nl|'\n'
comment|'# to override the location of the config file for migration testing'
nl|'\n'
name|'self'
op|'.'
name|'CONFIG_FILE_PATH'
op|'='
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
nl|'\n'
string|"'BAREMETAL_TEST_MIGRATIONS_CONF'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'DEFAULT_CONFIG_FILE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'MIGRATE_FILE'
op|'='
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'baremetal'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
op|'.'
name|'migrate_repo'
op|'.'
name|'__file__'
newline|'\n'
name|'self'
op|'.'
name|'REPOSITORY'
op|'='
name|'repository'
op|'.'
name|'Repository'
op|'('
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'abspath'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'self'
op|'.'
name|'MIGRATE_FILE'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestBaremetalMigrations'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'migration'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'migration'
op|'='
name|'__import__'
op|'('
string|"'nova.virt.baremetal.db.migration'"
op|','
nl|'\n'
name|'globals'
op|'('
op|')'
op|','
name|'locals'
op|'('
op|')'
op|','
op|'['
string|"'db_initial_version'"
op|']'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'INIT_VERSION'
op|'='
name|'self'
op|'.'
name|'migration'
op|'.'
name|'db_initial_version'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'migration_api'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'temp'
op|'='
name|'__import__'
op|'('
string|"'nova.virt.baremetal.db.sqlalchemy.migration'"
op|','
nl|'\n'
name|'globals'
op|'('
op|')'
op|','
name|'locals'
op|'('
op|')'
op|','
op|'['
string|"'versioning_api'"
op|']'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'migration_api'
op|'='
name|'temp'
op|'.'
name|'versioning_api'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_002
dedent|''
dedent|''
name|'def'
name|'_pre_upgrade_002'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'key'"
op|':'
string|"'fake-key'"
op|','
string|"'image_path'"
op|':'
string|"'/dev/null'"
op|','
nl|'\n'
string|"'pxe_config_path'"
op|':'
string|"'/dev/null/'"
op|','
string|"'root_mb'"
op|':'
number|'0'
op|','
string|"'swap_mb'"
op|':'
number|'0'
op|'}'
op|']'
newline|'\n'
name|'table'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'bm_deployments'"
op|')'
newline|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'table'
op|'.'
name|'insert'
op|'('
op|')'
op|','
name|'data'
op|')'
newline|'\n'
name|'return'
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_check_002
dedent|''
name|'def'
name|'_check_002'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'NoSuchTableError'
op|','
nl|'\n'
name|'db_utils'
op|'.'
name|'get_table'
op|','
name|'engine'
op|','
string|"'bm_deployments'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_004
dedent|''
name|'def'
name|'_post_downgrade_004'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bm_nodes'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'bm_nodes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"u'instance_name'"
op|','
op|'['
name|'c'
op|'.'
name|'name'
name|'for'
name|'c'
name|'in'
name|'bm_nodes'
op|'.'
name|'columns'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_005
dedent|''
name|'def'
name|'_check_005'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bm_nodes'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'bm_nodes'"
op|')'
newline|'\n'
name|'columns'
op|'='
op|'['
name|'c'
op|'.'
name|'name'
name|'for'
name|'c'
name|'in'
name|'bm_nodes'
op|'.'
name|'columns'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"u'prov_vlan_id'"
op|','
name|'columns'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"u'registration_status'"
op|','
name|'columns'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pre_upgrade_006
dedent|''
name|'def'
name|'_pre_upgrade_006'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'nodes'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'bm_nodes'"
op|')'
newline|'\n'
name|'ifs'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'bm_interfaces'"
op|')'
newline|'\n'
comment|'# node 1 has two diffrent addresses in bm_nodes and bm_interfaces'
nl|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'nodes'
op|'.'
name|'insert'
op|'('
op|')'
op|','
nl|'\n'
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'prov_mac_address'"
op|':'
string|"'aa:aa:aa:aa:aa:aa'"
op|'}'
op|']'
op|')'
newline|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'ifs'
op|'.'
name|'insert'
op|'('
op|')'
op|','
nl|'\n'
op|'['
op|'{'
string|"'id'"
op|':'
number|'101'
op|','
nl|'\n'
string|"'bm_node_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'bb:bb:bb:bb:bb:bb'"
op|'}'
op|']'
op|')'
newline|'\n'
comment|'# node 2 has one same address both in bm_nodes and bm_interfaces'
nl|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'nodes'
op|'.'
name|'insert'
op|'('
op|')'
op|','
nl|'\n'
op|'['
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'prov_mac_address'"
op|':'
string|"'cc:cc:cc:cc:cc:cc'"
op|'}'
op|']'
op|')'
newline|'\n'
name|'engine'
op|'.'
name|'execute'
op|'('
name|'ifs'
op|'.'
name|'insert'
op|'('
op|')'
op|','
nl|'\n'
op|'['
op|'{'
string|"'id'"
op|':'
number|'201'
op|','
nl|'\n'
string|"'bm_node_id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'cc:cc:cc:cc:cc:cc'"
op|'}'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_006
dedent|''
name|'def'
name|'_check_006'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ifs'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'bm_interfaces'"
op|')'
newline|'\n'
name|'rows'
op|'='
name|'ifs'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'ifs'
op|'.'
name|'c'
op|'.'
name|'bm_node_id'
op|'=='
number|'1'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'rows'
op|'='
name|'ifs'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'ifs'
op|'.'
name|'c'
op|'.'
name|'bm_node_id'
op|'=='
number|'2'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'rows'
op|'['
number|'0'
op|']'
op|'['
string|"'address'"
op|']'
op|','
string|"'cc:cc:cc:cc:cc:cc'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_006
dedent|''
name|'def'
name|'_post_downgrade_006'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ifs'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'bm_interfaces'"
op|')'
newline|'\n'
name|'rows'
op|'='
name|'ifs'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'ifs'
op|'.'
name|'c'
op|'.'
name|'bm_node_id'
op|'=='
number|'1'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'rows'
op|'['
number|'0'
op|']'
op|'['
string|"'address'"
op|']'
op|','
string|"'bb:bb:bb:bb:bb:bb'"
op|')'
newline|'\n'
nl|'\n'
name|'rows'
op|'='
name|'ifs'
op|'.'
name|'select'
op|'('
op|')'
op|'.'
name|'where'
op|'('
name|'ifs'
op|'.'
name|'c'
op|'.'
name|'bm_node_id'
op|'=='
number|'2'
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rows'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_007
dedent|''
name|'def'
name|'_check_007'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bm_nodes'
op|'='
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'bm_nodes'"
op|')'
newline|'\n'
name|'columns'
op|'='
op|'['
name|'c'
op|'.'
name|'name'
name|'for'
name|'c'
name|'in'
name|'bm_nodes'
op|'.'
name|'columns'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"u'prov_mac_address'"
op|','
name|'columns'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_008
dedent|''
name|'def'
name|'_check_008'
op|'('
name|'self'
op|','
name|'engine'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'NoSuchTableError'
op|','
nl|'\n'
name|'db_utils'
op|'.'
name|'get_table'
op|','
name|'engine'
op|','
string|"'bm_pxe_ips'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_downgrade_008
dedent|''
name|'def'
name|'_post_downgrade_008'
op|'('
name|'self'
op|','
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_utils'
op|'.'
name|'get_table'
op|'('
name|'engine'
op|','
string|"'bm_pxe_ips'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ProjectTestCase
dedent|''
dedent|''
name|'class'
name|'ProjectTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_all_migrations_have_downgrade
indent|'    '
name|'def'
name|'test_all_migrations_have_downgrade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'topdir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'normpath'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'__file__'
op|')'
op|'+'
string|"'/../../../'"
op|')'
newline|'\n'
name|'py_glob'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'topdir'
op|','
string|'"nova"'
op|','
string|'"db"'
op|','
string|'"sqlalchemy"'
op|','
nl|'\n'
string|'"migrate_repo"'
op|','
string|'"versions"'
op|','
string|'"*.py"'
op|')'
newline|'\n'
nl|'\n'
name|'missing_downgrade'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'path'
name|'in'
name|'glob'
op|'.'
name|'iglob'
op|'('
name|'py_glob'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'has_upgrade'
op|'='
name|'False'
newline|'\n'
name|'has_downgrade'
op|'='
name|'False'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'path'
op|','
string|'"r"'
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'line'
name|'in'
name|'f'
op|':'
newline|'\n'
indent|'                    '
name|'if'
string|"'def upgrade('"
name|'in'
name|'line'
op|':'
newline|'\n'
indent|'                        '
name|'has_upgrade'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'if'
string|"'def downgrade('"
name|'in'
name|'line'
op|':'
newline|'\n'
indent|'                        '
name|'has_downgrade'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'has_upgrade'
name|'and'
name|'not'
name|'has_downgrade'
op|':'
newline|'\n'
indent|'                    '
name|'fname'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'path'
op|')'
newline|'\n'
name|'missing_downgrade'
op|'.'
name|'append'
op|'('
name|'fname'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'helpful_msg'
op|'='
op|'('
name|'_'
op|'('
string|'"The following migrations are missing a downgrade:"'
nl|'\n'
string|'"\\n\\t%s"'
op|')'
op|'%'
string|"'\\n\\t'"
op|'.'
name|'join'
op|'('
name|'sorted'
op|'('
name|'missing_downgrade'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'not'
name|'missing_downgrade'
op|','
name|'helpful_msg'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
