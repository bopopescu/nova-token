begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SqlAlchemyUtilsTestCase
name|'class'
name|'SqlAlchemyUtilsTestCase'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for sqlaclchemy utils methods."""'
newline|'\n'
nl|'\n'
DECL|member|test_modify_indexes_checks_index_before_dropping_in_postgresql
name|'def'
name|'test_modify_indexes_checks_index_before_dropping_in_postgresql'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
op|'{'
string|'"table_name"'
op|':'
op|'('
op|'('
string|"'index2'"
op|','
op|'('
string|"'old_column'"
op|')'
op|','
nl|'\n'
op|'('
string|"'new_column'"
op|')'
op|')'
op|','
op|')'
op|'}'
newline|'\n'
name|'migrate_engine'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'migrate_engine'
op|'.'
name|'name'
op|'='
string|"'postgresql'"
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.sqlalchemy.utils.reflection.Inspector'"
nl|'\n'
string|"'.from_engine'"
op|')'
name|'as'
name|'inspector'
op|':'
newline|'\n'
indent|'            '
name|'inspector'
op|'.'
name|'return_value'
op|'.'
name|'get_indexes'
op|'.'
name|'return_value'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|'"index1"'
op|'}'
op|']'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.sqlalchemy.utils.Index'"
op|')'
name|'as'
name|'index'
op|':'
newline|'\n'
indent|'                '
name|'index'
op|'.'
name|'return_value'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'modify_indexes'
op|'('
name|'migrate_engine'
op|','
name|'data'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'index'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'index'
op|'.'
name|'return_value'
op|'.'
name|'drop'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_modify_indexes_checks_index_before_dropping_in_mysql
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_modify_indexes_checks_index_before_dropping_in_mysql'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
op|'{'
string|'"table_name"'
op|':'
op|'('
op|'('
string|"'index2'"
op|','
op|'('
string|"'old_column'"
op|')'
op|','
nl|'\n'
op|'('
string|"'new_column'"
op|')'
op|')'
op|','
op|')'
op|'}'
newline|'\n'
name|'migrate_engine'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'migrate_engine'
op|'.'
name|'name'
op|'='
string|"'mysql'"
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.sqlalchemy.utils.reflection.Inspector'"
nl|'\n'
string|"'.from_engine'"
op|')'
name|'as'
name|'inspector'
op|':'
newline|'\n'
indent|'            '
name|'inspector'
op|'.'
name|'return_value'
op|'.'
name|'get_indexes'
op|'.'
name|'return_value'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|'"index1"'
op|'}'
op|']'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.sqlalchemy.utils.Index'"
op|')'
name|'as'
name|'index'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.sqlalchemy.utils.Table'"
op|')'
name|'as'
name|'Table'
op|':'
newline|'\n'
indent|'                    '
name|'index'
op|'.'
name|'return_value'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'modify_indexes'
op|'('
name|'migrate_engine'
op|','
name|'data'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'index'
op|'.'
name|'return_value'
op|'.'
name|'drop'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_modify_indexes
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_modify_indexes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
op|'{'
string|'"table_name"'
op|':'
op|'('
op|'('
string|"'index2'"
op|','
op|'('
string|"'old_column'"
op|')'
op|','
nl|'\n'
op|'('
string|"'new_column'"
op|')'
op|')'
op|','
op|')'
op|'}'
newline|'\n'
name|'migrate_engine'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'migrate_engine'
op|'.'
name|'name'
op|'='
string|"'mysql'"
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.sqlalchemy.utils.reflection.Inspector'"
nl|'\n'
string|"'.from_engine'"
op|')'
name|'as'
name|'inspector'
op|':'
newline|'\n'
indent|'            '
name|'inspector'
op|'.'
name|'return_value'
op|'.'
name|'get_indexes'
op|'.'
name|'return_value'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|'"index2"'
op|'}'
op|']'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.sqlalchemy.utils.Index'"
op|')'
name|'as'
name|'index'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.db.sqlalchemy.utils.Table'"
op|')'
name|'as'
name|'Table'
op|':'
newline|'\n'
indent|'                    '
name|'index'
op|'.'
name|'return_value'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'modify_indexes'
op|'('
name|'migrate_engine'
op|','
name|'data'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'index'
op|'.'
name|'return_value'
op|'.'
name|'drop'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'index'
op|'.'
name|'return_value'
op|'.'
name|'create'
op|'.'
name|'called'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
