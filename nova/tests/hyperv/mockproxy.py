begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'#  Copyright 2012 Cloudbase Solutions Srl'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
nl|'\n'
string|'"""\nClasses for dynamic generation of mock objects.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'inspect'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|serialize_obj
name|'def'
name|'serialize_obj'
op|'('
name|'obj'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'isinstance'
op|'('
name|'obj'
op|','
name|'float'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'val'
op|'='
name|'str'
op|'('
name|'round'
op|'('
name|'obj'
op|','
number|'10'
op|')'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'isinstance'
op|'('
name|'obj'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'k1'
op|','
name|'v1'
name|'in'
name|'obj'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'['
name|'k1'
op|']'
op|'='
name|'serialize_obj'
op|'('
name|'v1'
op|')'
newline|'\n'
dedent|''
name|'val'
op|'='
name|'str'
op|'('
name|'d'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'isinstance'
op|'('
name|'obj'
op|','
name|'list'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'l1'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i1'
name|'in'
name|'obj'
op|':'
newline|'\n'
indent|'            '
name|'l1'
op|'.'
name|'append'
op|'('
name|'serialize_obj'
op|'('
name|'i1'
op|')'
op|')'
newline|'\n'
dedent|''
name|'val'
op|'='
name|'str'
op|'('
name|'l1'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'isinstance'
op|'('
name|'obj'
op|','
name|'tuple'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'l1'
op|'='
op|'('
op|')'
newline|'\n'
name|'for'
name|'i1'
name|'in'
name|'obj'
op|':'
newline|'\n'
indent|'            '
name|'l1'
op|'='
name|'l1'
op|'+'
op|'('
name|'serialize_obj'
op|'('
name|'i1'
op|')'
op|','
op|')'
newline|'\n'
dedent|''
name|'val'
op|'='
name|'str'
op|'('
name|'l1'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'obj'
op|','
name|'str'
op|')'
name|'or'
name|'isinstance'
op|'('
name|'obj'
op|','
name|'unicode'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'val'
op|'='
name|'obj'
newline|'\n'
dedent|''
name|'elif'
name|'hasattr'
op|'('
name|'obj'
op|','
string|"'__str__'"
op|')'
name|'and'
name|'inspect'
op|'.'
name|'ismethod'
op|'('
name|'obj'
op|'.'
name|'__str__'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'val'
op|'='
name|'str'
op|'('
name|'obj'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'val'
op|'='
name|'str'
op|'('
name|'type'
op|'('
name|'obj'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'val'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|serialize_args
dedent|''
name|'def'
name|'serialize_args'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Workaround for float string conversion issues in Python 2.6"""'
newline|'\n'
name|'return'
name|'serialize_obj'
op|'('
op|'('
name|'args'
op|','
name|'kwargs'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MockException
dedent|''
name|'class'
name|'MockException'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'MockException'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'message'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Mock
dedent|''
dedent|''
name|'class'
name|'Mock'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|_get_next_value
indent|'    '
name|'def'
name|'_get_next_value'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'c'
op|'='
name|'self'
op|'.'
name|'_access_count'
op|'.'
name|'get'
op|'('
name|'name'
op|')'
newline|'\n'
name|'if'
name|'c'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'c'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'c'
op|'='
name|'c'
op|'+'
number|'1'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_access_count'
op|'['
name|'name'
op|']'
op|'='
name|'c'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'value'
op|'='
name|'self'
op|'.'
name|'_values'
op|'['
name|'name'
op|']'
op|'['
name|'c'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'IndexError'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'MockException'
op|'('
name|'_'
op|'('
string|"'Couldn\\'t find invocation num. %(c)d '"
nl|'\n'
string|'\'of attribute "%(name)s"\''
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'value'
newline|'\n'
nl|'\n'
DECL|member|_get_next_ret_value
dedent|''
name|'def'
name|'_get_next_ret_value'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'_access_count'
op|'.'
name|'get'
op|'('
name|'name'
op|')'
newline|'\n'
name|'if'
name|'d'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_access_count'
op|'['
name|'name'
op|']'
op|'='
name|'d'
newline|'\n'
dedent|''
name|'c'
op|'='
name|'d'
op|'.'
name|'get'
op|'('
name|'params'
op|')'
newline|'\n'
name|'if'
name|'c'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'c'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'c'
op|'='
name|'c'
op|'+'
number|'1'
newline|'\n'
dedent|''
name|'d'
op|'['
name|'params'
op|']'
op|'='
name|'c'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'='
name|'self'
op|'.'
name|'_values'
op|'['
name|'name'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'MockException'
op|'('
name|'_'
op|'('
string|'\'Couldn\\\'t find attribute "%s"\''
op|')'
op|'%'
op|'('
name|'name'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'value'
op|'='
name|'m'
op|'['
name|'params'
op|']'
op|'['
name|'c'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'MockException'
op|'('
name|'_'
op|'('
string|'\'Couldn\\\'t find attribute "%(name)s" \''
nl|'\n'
string|'\'with arguments "%(params)s"\''
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'IndexError'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'MockException'
op|'('
name|'_'
op|'('
string|"'Couldn\\'t find invocation num. %(c)d '"
nl|'\n'
string|'\'of attribute "%(name)s" with arguments "%(params)s"\''
op|')'
nl|'\n'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'value'
newline|'\n'
nl|'\n'
DECL|member|__init__
dedent|''
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_values'
op|'='
name|'values'
newline|'\n'
name|'self'
op|'.'
name|'_access_count'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|has_values
dedent|''
name|'def'
name|'has_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'len'
op|'('
name|'self'
op|'.'
name|'_values'
op|')'
op|'>'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|__getattr__
dedent|''
name|'def'
name|'__getattr__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'name'
op|'.'
name|'startswith'
op|'('
string|"'__'"
op|')'
name|'and'
name|'name'
op|'.'
name|'endswith'
op|'('
string|"'__'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'object'
op|'.'
name|'__getattribute__'
op|'('
name|'self'
op|','
name|'name'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'isdict'
op|'='
name|'isinstance'
op|'('
name|'self'
op|'.'
name|'_values'
op|'['
name|'name'
op|']'
op|','
name|'dict'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'MockException'
op|'('
name|'_'
op|'('
string|'\'Couldn\\\'t find attribute "%s"\''
op|')'
nl|'\n'
op|'%'
op|'('
name|'name'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'isdict'
op|':'
newline|'\n'
DECL|function|newfunc
indent|'                '
name|'def'
name|'newfunc'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'params'
op|'='
name|'serialize_args'
op|'('
name|'args'
op|','
name|'kwargs'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_get_next_ret_value'
op|'('
name|'name'
op|','
name|'params'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'newfunc'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'_get_next_value'
op|'('
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
dedent|''
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_get_next_value'
op|'('
string|"'__str__'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'getattr'
op|'('
name|'self'
op|'.'
name|'_get_next_value'
op|'('
string|"'__iter__'"
op|')'
op|','
string|"'__iter__'"
op|')'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|__len__
dedent|''
name|'def'
name|'__len__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_get_next_value'
op|'('
string|"'__len__'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|__getitem__
dedent|''
name|'def'
name|'__getitem__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_get_next_ret_value'
op|'('
string|"'__getitem__'"
op|','
name|'str'
op|'('
name|'key'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
name|'serialize_args'
op|'('
name|'args'
op|','
name|'kwargs'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_get_next_ret_value'
op|'('
string|"'__call__'"
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MockProxy
dedent|''
dedent|''
name|'class'
name|'MockProxy'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'wrapped'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_wrapped'
op|'='
name|'wrapped'
newline|'\n'
name|'self'
op|'.'
name|'_recorded_values'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_get_proxy_object
dedent|''
name|'def'
name|'_get_proxy_object'
op|'('
name|'self'
op|','
name|'obj'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'hasattr'
op|'('
name|'obj'
op|','
string|"'__dict__'"
op|')'
name|'or'
name|'isinstance'
op|'('
name|'obj'
op|','
name|'tuple'
op|')'
name|'or'
name|'isinstance'
op|'('
name|'obj'
op|','
name|'list'
op|')'
name|'or'
name|'isinstance'
op|'('
name|'obj'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'p'
op|'='
name|'MockProxy'
op|'('
name|'obj'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'p'
op|'='
name|'obj'
newline|'\n'
dedent|''
name|'return'
name|'p'
newline|'\n'
nl|'\n'
DECL|member|__getattr__
dedent|''
name|'def'
name|'__getattr__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'name'
name|'in'
op|'['
string|"'_wrapped'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'object'
op|'.'
name|'__getattribute__'
op|'('
name|'self'
op|','
name|'name'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'attr'
op|'='
name|'getattr'
op|'('
name|'self'
op|'.'
name|'_wrapped'
op|','
name|'name'
op|')'
newline|'\n'
name|'if'
name|'inspect'
op|'.'
name|'isfunction'
op|'('
name|'attr'
op|')'
name|'or'
name|'inspect'
op|'.'
name|'ismethod'
op|'('
name|'attr'
op|')'
name|'or'
name|'inspect'
op|'.'
name|'isbuiltin'
op|'('
name|'attr'
op|')'
op|':'
newline|'\n'
DECL|function|newfunc
indent|'                '
name|'def'
name|'newfunc'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'result'
op|'='
name|'attr'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'p'
op|'='
name|'self'
op|'.'
name|'_get_proxy_object'
op|'('
name|'result'
op|')'
newline|'\n'
name|'params'
op|'='
name|'serialize_args'
op|'('
name|'args'
op|','
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_add_recorded_ret_value'
op|'('
name|'name'
op|','
name|'params'
op|','
name|'p'
op|')'
newline|'\n'
name|'return'
name|'p'
newline|'\n'
dedent|''
name|'return'
name|'newfunc'
newline|'\n'
dedent|''
name|'elif'
name|'hasattr'
op|'('
name|'attr'
op|','
string|"'__dict__'"
op|')'
name|'or'
op|'('
name|'hasattr'
op|'('
name|'attr'
op|','
string|"'__getitem__'"
op|')'
nl|'\n'
name|'and'
name|'not'
op|'('
name|'isinstance'
op|'('
name|'attr'
op|','
name|'str'
op|')'
name|'or'
name|'isinstance'
op|'('
name|'attr'
op|','
name|'unicode'
op|')'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'p'
op|'='
name|'MockProxy'
op|'('
name|'attr'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'p'
op|'='
name|'attr'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_add_recorded_value'
op|'('
name|'name'
op|','
name|'p'
op|')'
newline|'\n'
name|'return'
name|'p'
newline|'\n'
nl|'\n'
DECL|member|__setattr__
dedent|''
dedent|''
name|'def'
name|'__setattr__'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'name'
name|'in'
op|'['
string|"'_wrapped'"
op|','
string|"'_recorded_values'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'object'
op|'.'
name|'__setattr__'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'value'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'setattr'
op|'('
name|'self'
op|'.'
name|'_wrapped'
op|','
name|'name'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_add_recorded_ret_value
dedent|''
dedent|''
name|'def'
name|'_add_recorded_ret_value'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'params'
op|','
name|'val'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'_recorded_values'
op|'.'
name|'get'
op|'('
name|'name'
op|')'
newline|'\n'
name|'if'
name|'d'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_recorded_values'
op|'['
name|'name'
op|']'
op|'='
name|'d'
newline|'\n'
dedent|''
name|'l'
op|'='
name|'d'
op|'.'
name|'get'
op|'('
name|'params'
op|')'
newline|'\n'
name|'if'
name|'l'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'l'
op|'='
op|'['
op|']'
newline|'\n'
name|'d'
op|'['
name|'params'
op|']'
op|'='
name|'l'
newline|'\n'
dedent|''
name|'l'
op|'.'
name|'append'
op|'('
name|'val'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_add_recorded_value
dedent|''
name|'def'
name|'_add_recorded_value'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'val'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'name'
name|'in'
name|'self'
op|'.'
name|'_recorded_values'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_recorded_values'
op|'['
name|'name'
op|']'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_recorded_values'
op|'['
name|'name'
op|']'
op|'.'
name|'append'
op|'('
name|'val'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_mock
dedent|''
name|'def'
name|'get_mock'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'self'
op|'.'
name|'_recorded_values'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'isinstance'
op|'('
name|'v'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'d'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'values'
op|'['
name|'k'
op|']'
op|'='
name|'d'
newline|'\n'
name|'for'
name|'k1'
op|','
name|'v1'
name|'in'
name|'v'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'l'
op|'='
op|'['
op|']'
newline|'\n'
name|'d'
op|'['
name|'k1'
op|']'
op|'='
name|'l'
newline|'\n'
name|'for'
name|'i1'
name|'in'
name|'v1'
op|':'
newline|'\n'
indent|'                        '
name|'if'
name|'isinstance'
op|'('
name|'i1'
op|','
name|'MockProxy'
op|')'
op|':'
newline|'\n'
indent|'                            '
name|'l'
op|'.'
name|'append'
op|'('
name|'i1'
op|'.'
name|'get_mock'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                            '
name|'l'
op|'.'
name|'append'
op|'('
name|'i1'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'l'
op|'='
op|'['
op|']'
newline|'\n'
name|'values'
op|'['
name|'k'
op|']'
op|'='
name|'l'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'v'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'isinstance'
op|'('
name|'i'
op|','
name|'MockProxy'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'l'
op|'.'
name|'append'
op|'('
name|'i'
op|'.'
name|'get_mock'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'isinstance'
op|'('
name|'i'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'d'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'k1'
op|','
name|'v1'
name|'in'
name|'v'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                            '
name|'if'
name|'isinstance'
op|'('
name|'v1'
op|','
name|'MockProxy'
op|')'
op|':'
newline|'\n'
indent|'                                '
name|'d'
op|'['
name|'k1'
op|']'
op|'='
name|'v1'
op|'.'
name|'get_mock'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                                '
name|'d'
op|'['
name|'k1'
op|']'
op|'='
name|'v1'
newline|'\n'
dedent|''
dedent|''
name|'l'
op|'.'
name|'append'
op|'('
name|'d'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'isinstance'
op|'('
name|'i'
op|','
name|'list'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'l1'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i1'
name|'in'
name|'i'
op|':'
newline|'\n'
indent|'                            '
name|'if'
name|'isinstance'
op|'('
name|'i1'
op|','
name|'MockProxy'
op|')'
op|':'
newline|'\n'
indent|'                                '
name|'l1'
op|'.'
name|'append'
op|'('
name|'i1'
op|'.'
name|'get_mock'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                                '
name|'l1'
op|'.'
name|'append'
op|'('
name|'i1'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'l'
op|'.'
name|'append'
op|'('
name|'l1'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'l'
op|'.'
name|'append'
op|'('
name|'i'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'return'
name|'Mock'
op|'('
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'s'
op|'='
name|'str'
op|'('
name|'self'
op|'.'
name|'_wrapped'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_add_recorded_value'
op|'('
string|"'__str__'"
op|','
name|'s'
op|')'
newline|'\n'
name|'return'
name|'s'
newline|'\n'
nl|'\n'
DECL|member|__len__
dedent|''
name|'def'
name|'__len__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'l'
op|'='
name|'len'
op|'('
name|'self'
op|'.'
name|'_wrapped'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_add_recorded_value'
op|'('
string|"'__len__'"
op|','
name|'l'
op|')'
newline|'\n'
name|'return'
name|'l'
newline|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'it'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'self'
op|'.'
name|'_wrapped'
op|':'
newline|'\n'
indent|'            '
name|'it'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'_get_proxy_object'
op|'('
name|'i'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_add_recorded_value'
op|'('
string|"'__iter__'"
op|','
name|'it'
op|')'
newline|'\n'
name|'return'
name|'iter'
op|'('
name|'it'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__getitem__
dedent|''
name|'def'
name|'__getitem__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|'='
name|'self'
op|'.'
name|'_get_proxy_object'
op|'('
name|'self'
op|'.'
name|'_wrapped'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_add_recorded_ret_value'
op|'('
string|"'__getitem__'"
op|','
name|'str'
op|'('
name|'key'
op|')'
op|','
name|'p'
op|')'
newline|'\n'
name|'return'
name|'p'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'c'
op|'='
name|'self'
op|'.'
name|'_wrapped'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'p'
op|'='
name|'self'
op|'.'
name|'_get_proxy_object'
op|'('
name|'c'
op|')'
newline|'\n'
name|'params'
op|'='
name|'serialize_args'
op|'('
name|'args'
op|','
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_add_recorded_ret_value'
op|'('
string|"'__call__'"
op|','
name|'params'
op|','
name|'p'
op|')'
newline|'\n'
name|'return'
name|'p'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
