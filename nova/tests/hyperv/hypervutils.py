begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'#  Copyright 2012 Cloudbase Solutions Srl'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nHyper-V classes to be used in testing.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'constants'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'hyperv'
name|'import'
name|'volumeutils'
newline|'\n'
name|'from'
name|'xml'
op|'.'
name|'etree'
name|'import'
name|'ElementTree'
newline|'\n'
nl|'\n'
comment|'# Check needed for unit testing on Unix'
nl|'\n'
name|'if'
name|'sys'
op|'.'
name|'platform'
op|'=='
string|"'win32'"
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'wmi'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HyperVUtils
dedent|''
name|'class'
name|'HyperVUtils'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'__conn'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'__conn_v2'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'__conn_cimv2'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'__conn_wmi'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_volumeutils'
op|'='
name|'volumeutils'
op|'.'
name|'VolumeUtils'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|_conn
name|'def'
name|'_conn'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'__conn'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'__conn'
op|'='
name|'wmi'
op|'.'
name|'WMI'
op|'('
name|'moniker'
op|'='
string|"'//./root/virtualization'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'__conn'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|_conn_v2
name|'def'
name|'_conn_v2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'__conn_v2'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'__conn_v2'
op|'='
name|'wmi'
op|'.'
name|'WMI'
op|'('
name|'moniker'
op|'='
string|"'//./root/virtualization/v2'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'__conn_v2'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|_conn_cimv2
name|'def'
name|'_conn_cimv2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'__conn_cimv2'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'__conn_cimv2'
op|'='
name|'wmi'
op|'.'
name|'WMI'
op|'('
name|'moniker'
op|'='
string|"'//./root/cimv2'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'__conn_cimv2'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|_conn_wmi
name|'def'
name|'_conn_wmi'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'__conn_wmi'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'__conn_wmi'
op|'='
name|'wmi'
op|'.'
name|'WMI'
op|'('
name|'moniker'
op|'='
string|"'//./root/wmi'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'__conn_wmi'
newline|'\n'
nl|'\n'
DECL|member|create_vhd
dedent|''
name|'def'
name|'create_vhd'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_service'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'query'
op|'('
nl|'\n'
string|'"Select * from Msvm_ImageManagementService"'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
op|'('
name|'job'
op|','
name|'ret_val'
op|')'
op|'='
name|'image_service'
op|'.'
name|'CreateDynamicVirtualHardDisk'
op|'('
nl|'\n'
name|'Path'
op|'='
name|'path'
op|','
name|'MaxInternalSize'
op|'='
number|'3'
op|'*'
number|'1024'
op|'*'
number|'1024'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'ret_val'
op|'=='
name|'constants'
op|'.'
name|'WMI_JOB_STATUS_STARTED'
op|':'
newline|'\n'
indent|'            '
name|'success'
op|'='
name|'self'
op|'.'
name|'_check_job_status'
op|'('
name|'job'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'success'
op|'='
op|'('
name|'ret_val'
op|'=='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'success'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Failed to create Dynamic disk %s with error %d'"
nl|'\n'
op|'%'
op|'('
name|'path'
op|','
name|'ret_val'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_job_status
dedent|''
dedent|''
name|'def'
name|'_check_job_status'
op|'('
name|'self'
op|','
name|'jobpath'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Poll WMI job state for completion"""'
newline|'\n'
name|'job_wmi_path'
op|'='
name|'jobpath'
op|'.'
name|'replace'
op|'('
string|"'\\\\'"
op|','
string|"'/'"
op|')'
newline|'\n'
name|'job'
op|'='
name|'wmi'
op|'.'
name|'WMI'
op|'('
name|'moniker'
op|'='
name|'job_wmi_path'
op|')'
newline|'\n'
nl|'\n'
name|'while'
name|'job'
op|'.'
name|'JobState'
op|'=='
name|'constants'
op|'.'
name|'WMI_JOB_STATE_RUNNING'
op|':'
newline|'\n'
indent|'            '
name|'time'
op|'.'
name|'sleep'
op|'('
number|'0.1'
op|')'
newline|'\n'
name|'job'
op|'='
name|'wmi'
op|'.'
name|'WMI'
op|'('
name|'moniker'
op|'='
name|'job_wmi_path'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'job'
op|'.'
name|'JobState'
op|'=='
name|'constants'
op|'.'
name|'WMI_JOB_STATE_COMPLETED'
newline|'\n'
nl|'\n'
DECL|member|_get_vm
dedent|''
name|'def'
name|'_get_vm'
op|'('
name|'self'
op|','
name|'vm_name'
op|','
name|'conn'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'conn'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'='
name|'self'
op|'.'
name|'_conn'
newline|'\n'
dedent|''
name|'vml'
op|'='
name|'conn'
op|'.'
name|'Msvm_ComputerSystem'
op|'('
name|'ElementName'
op|'='
name|'vm_name'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'len'
op|'('
name|'vml'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance'
op|'='
name|'vm_name'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'vml'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|member|remote_vm_exists
dedent|''
name|'def'
name|'remote_vm_exists'
op|'('
name|'self'
op|','
name|'server'
op|','
name|'vm_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'wmi'
op|'.'
name|'WMI'
op|'('
name|'moniker'
op|'='
string|"'//'"
op|'+'
name|'server'
op|'+'
string|"'/root/virtualization'"
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_vm_exists'
op|'('
name|'conn'
op|','
name|'vm_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|vm_exists
dedent|''
name|'def'
name|'vm_exists'
op|'('
name|'self'
op|','
name|'vm_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_vm_exists'
op|'('
name|'self'
op|'.'
name|'_conn'
op|','
name|'vm_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_vm_exists
dedent|''
name|'def'
name|'_vm_exists'
op|'('
name|'self'
op|','
name|'conn'
op|','
name|'vm_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'len'
op|'('
name|'conn'
op|'.'
name|'Msvm_ComputerSystem'
op|'('
name|'ElementName'
op|'='
name|'vm_name'
op|')'
op|')'
op|'>'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|_get_vm_summary
dedent|''
name|'def'
name|'_get_vm_summary'
op|'('
name|'self'
op|','
name|'vm_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vm'
op|'='
name|'self'
op|'.'
name|'_get_vm'
op|'('
name|'vm_name'
op|')'
newline|'\n'
name|'vs_man_svc'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_VirtualSystemManagementService'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'vmsettings'
op|'='
name|'vm'
op|'.'
name|'associators'
op|'('
nl|'\n'
name|'wmi_association_class'
op|'='
string|"'Msvm_SettingsDefineState'"
op|','
nl|'\n'
name|'wmi_result_class'
op|'='
string|"'Msvm_VirtualSystemSettingData'"
op|')'
newline|'\n'
name|'settings_paths'
op|'='
op|'['
name|'v'
op|'.'
name|'path_'
op|'('
op|')'
name|'for'
name|'v'
name|'in'
name|'vmsettings'
op|']'
newline|'\n'
name|'return'
name|'vs_man_svc'
op|'.'
name|'GetSummaryInformation'
op|'('
op|'['
number|'100'
op|','
number|'105'
op|']'
op|','
nl|'\n'
name|'settings_paths'
op|')'
op|'['
number|'1'
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_vm_uptime
dedent|''
name|'def'
name|'get_vm_uptime'
op|'('
name|'self'
op|','
name|'vm_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_get_vm_summary'
op|'('
name|'vm_name'
op|')'
op|'.'
name|'UpTime'
newline|'\n'
nl|'\n'
DECL|member|get_vm_state
dedent|''
name|'def'
name|'get_vm_state'
op|'('
name|'self'
op|','
name|'vm_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_get_vm_summary'
op|'('
name|'vm_name'
op|')'
op|'.'
name|'EnabledState'
newline|'\n'
nl|'\n'
DECL|member|set_vm_state
dedent|''
name|'def'
name|'set_vm_state'
op|'('
name|'self'
op|','
name|'vm_name'
op|','
name|'req_state'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_set_vm_state'
op|'('
name|'self'
op|'.'
name|'_conn'
op|','
name|'vm_name'
op|','
name|'req_state'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_set_vm_state
dedent|''
name|'def'
name|'_set_vm_state'
op|'('
name|'self'
op|','
name|'conn'
op|','
name|'vm_name'
op|','
name|'req_state'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vm'
op|'='
name|'self'
op|'.'
name|'_get_vm'
op|'('
name|'vm_name'
op|','
name|'conn'
op|')'
newline|'\n'
op|'('
name|'job'
op|','
name|'ret_val'
op|')'
op|'='
name|'vm'
op|'.'
name|'RequestStateChange'
op|'('
name|'req_state'
op|')'
newline|'\n'
nl|'\n'
name|'success'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'ret_val'
op|'=='
name|'constants'
op|'.'
name|'WMI_JOB_STATUS_STARTED'
op|':'
newline|'\n'
indent|'            '
name|'success'
op|'='
name|'self'
op|'.'
name|'_check_job_status'
op|'('
name|'job'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'ret_val'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'success'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'elif'
name|'ret_val'
op|'=='
number|'32775'
op|':'
newline|'\n'
comment|'#Invalid state for current operation. Typically means it is'
nl|'\n'
comment|'#already in the state requested'
nl|'\n'
indent|'            '
name|'success'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'success'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
name|'_'
op|'('
string|'"Failed to change vm state of %(vm_name)s"'
nl|'\n'
string|'" to %(req_state)s"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_vm_disks
dedent|''
dedent|''
name|'def'
name|'get_vm_disks'
op|'('
name|'self'
op|','
name|'vm_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_get_vm_disks'
op|'('
name|'self'
op|'.'
name|'_conn'
op|','
name|'vm_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_vm_disks
dedent|''
name|'def'
name|'_get_vm_disks'
op|'('
name|'self'
op|','
name|'conn'
op|','
name|'vm_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vm'
op|'='
name|'self'
op|'.'
name|'_get_vm'
op|'('
name|'vm_name'
op|','
name|'conn'
op|')'
newline|'\n'
name|'vmsettings'
op|'='
name|'vm'
op|'.'
name|'associators'
op|'('
nl|'\n'
name|'wmi_result_class'
op|'='
string|"'Msvm_VirtualSystemSettingData'"
op|')'
newline|'\n'
name|'rasds'
op|'='
name|'vmsettings'
op|'['
number|'0'
op|']'
op|'.'
name|'associators'
op|'('
nl|'\n'
name|'wmi_result_class'
op|'='
string|"'MSVM_ResourceAllocationSettingData'"
op|')'
newline|'\n'
nl|'\n'
name|'disks'
op|'='
op|'['
name|'r'
name|'for'
name|'r'
name|'in'
name|'rasds'
nl|'\n'
name|'if'
name|'r'
op|'.'
name|'ResourceSubType'
op|'=='
string|"'Microsoft Virtual Hard Disk'"
op|']'
newline|'\n'
name|'disk_files'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'disk'
name|'in'
name|'disks'
op|':'
newline|'\n'
indent|'            '
name|'disk_files'
op|'.'
name|'extend'
op|'('
op|'['
name|'c'
name|'for'
name|'c'
name|'in'
name|'disk'
op|'.'
name|'Connection'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'volumes'
op|'='
op|'['
name|'r'
name|'for'
name|'r'
name|'in'
name|'rasds'
nl|'\n'
name|'if'
name|'r'
op|'.'
name|'ResourceSubType'
op|'=='
string|"'Microsoft Physical Disk Drive'"
op|']'
newline|'\n'
name|'volume_drives'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'volume'
name|'in'
name|'volumes'
op|':'
newline|'\n'
indent|'            '
name|'hostResources'
op|'='
name|'volume'
op|'.'
name|'HostResource'
newline|'\n'
name|'drive_path'
op|'='
name|'hostResources'
op|'['
number|'0'
op|']'
newline|'\n'
name|'volume_drives'
op|'.'
name|'append'
op|'('
name|'drive_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'dvds'
op|'='
op|'['
name|'r'
name|'for'
name|'r'
name|'in'
name|'rasds'
nl|'\n'
name|'if'
name|'r'
op|'.'
name|'ResourceSubType'
op|'=='
string|"'Microsoft Virtual CD/DVD Disk'"
op|']'
newline|'\n'
name|'dvd_files'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'dvd'
name|'in'
name|'dvds'
op|':'
newline|'\n'
indent|'            '
name|'dvd_files'
op|'.'
name|'extend'
op|'('
op|'['
name|'c'
name|'for'
name|'c'
name|'in'
name|'dvd'
op|'.'
name|'Connection'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
op|'('
name|'disk_files'
op|','
name|'volume_drives'
op|','
name|'dvd_files'
op|')'
newline|'\n'
nl|'\n'
DECL|member|remove_remote_vm
dedent|''
name|'def'
name|'remove_remote_vm'
op|'('
name|'self'
op|','
name|'server'
op|','
name|'vm_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'wmi'
op|'.'
name|'WMI'
op|'('
name|'moniker'
op|'='
string|"'//'"
op|'+'
name|'server'
op|'+'
string|"'/root/virtualization'"
op|')'
newline|'\n'
name|'conn_cimv2'
op|'='
name|'wmi'
op|'.'
name|'WMI'
op|'('
name|'moniker'
op|'='
string|"'//'"
op|'+'
name|'server'
op|'+'
string|"'/root/cimv2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_remove_vm'
op|'('
name|'vm_name'
op|','
name|'conn'
op|','
name|'conn_cimv2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|remove_vm
dedent|''
name|'def'
name|'remove_vm'
op|'('
name|'self'
op|','
name|'vm_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_remove_vm'
op|'('
name|'vm_name'
op|','
name|'self'
op|'.'
name|'_conn'
op|','
name|'self'
op|'.'
name|'_conn_cimv2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_remove_vm
dedent|''
name|'def'
name|'_remove_vm'
op|'('
name|'self'
op|','
name|'vm_name'
op|','
name|'conn'
op|','
name|'conn_cimv2'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vm'
op|'='
name|'self'
op|'.'
name|'_get_vm'
op|'('
name|'vm_name'
op|','
name|'conn'
op|')'
newline|'\n'
name|'vs_man_svc'
op|'='
name|'conn'
op|'.'
name|'Msvm_VirtualSystemManagementService'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
comment|'#Stop the VM first.'
nl|'\n'
name|'self'
op|'.'
name|'_set_vm_state'
op|'('
name|'conn'
op|','
name|'vm_name'
op|','
number|'3'
op|')'
newline|'\n'
nl|'\n'
op|'('
name|'disk_files'
op|','
name|'volume_drives'
op|','
name|'dvd_files'
op|')'
op|'='
name|'self'
op|'.'
name|'_get_vm_disks'
op|'('
name|'conn'
op|','
nl|'\n'
name|'vm_name'
op|')'
newline|'\n'
nl|'\n'
op|'('
name|'job'
op|','
name|'ret_val'
op|')'
op|'='
name|'vs_man_svc'
op|'.'
name|'DestroyVirtualSystem'
op|'('
name|'vm'
op|'.'
name|'path_'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'ret_val'
op|'=='
name|'constants'
op|'.'
name|'WMI_JOB_STATUS_STARTED'
op|':'
newline|'\n'
indent|'            '
name|'success'
op|'='
name|'self'
op|'.'
name|'_check_job_status'
op|'('
name|'job'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'ret_val'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'success'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'success'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
name|'_'
op|'('
string|"'Failed to destroy vm %s'"
op|')'
op|'%'
name|'vm_name'
op|')'
newline|'\n'
nl|'\n'
comment|'#Delete associated vhd disk files.'
nl|'\n'
dedent|''
name|'for'
name|'disk'
name|'in'
name|'disk_files'
op|'+'
name|'dvd_files'
op|':'
newline|'\n'
indent|'            '
name|'vhd_file'
op|'='
name|'conn_cimv2'
op|'.'
name|'query'
op|'('
nl|'\n'
string|'"Select * from CIM_DataFile where Name = \'"'
op|'+'
nl|'\n'
name|'disk'
op|'.'
name|'replace'
op|'('
string|'"\'"'
op|','
string|'"\'\'"'
op|')'
op|'+'
string|'"\'"'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'vhd_file'
op|'.'
name|'Delete'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_target_iqn
dedent|''
dedent|''
name|'def'
name|'_get_target_iqn'
op|'('
name|'self'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'iqn.2010-10.org.openstack:volume-'"
op|'+'
name|'volume_id'
newline|'\n'
nl|'\n'
DECL|member|logout_iscsi_volume_sessions
dedent|''
name|'def'
name|'logout_iscsi_volume_sessions'
op|'('
name|'self'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'target_iqn'
op|'='
name|'self'
op|'.'
name|'_get_target_iqn'
op|'('
name|'volume_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_volumeutils'
op|'.'
name|'logout_storage_target'
op|'('
name|'self'
op|'.'
name|'_conn_wmi'
op|','
name|'target_iqn'
op|')'
newline|'\n'
nl|'\n'
DECL|member|iscsi_volume_sessions_exist
dedent|''
name|'def'
name|'iscsi_volume_sessions_exist'
op|'('
name|'self'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'target_iqn'
op|'='
name|'self'
op|'.'
name|'_get_target_iqn'
op|'('
name|'volume_id'
op|')'
newline|'\n'
name|'return'
name|'len'
op|'('
name|'self'
op|'.'
name|'_conn_wmi'
op|'.'
name|'query'
op|'('
nl|'\n'
string|'"SELECT * FROM MSiSCSIInitiator_SessionClass \\\n                    WHERE TargetName=\'"'
op|'+'
name|'target_iqn'
op|'+'
string|'"\'"'
op|')'
op|')'
op|'>'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|get_vm_count
dedent|''
name|'def'
name|'get_vm_count'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'len'
op|'('
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'query'
op|'('
nl|'\n'
string|'"Select * from Msvm_ComputerSystem where Description "'
nl|'\n'
string|'"<> \'Microsoft Hosting Computer System\'"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_vm_snapshots_count
dedent|''
name|'def'
name|'get_vm_snapshots_count'
op|'('
name|'self'
op|','
name|'vm_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'len'
op|'('
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'query'
op|'('
nl|'\n'
string|'"Select * from Msvm_VirtualSystemSettingData where \\\n                SettingType = 5 and SystemName = \'"'
op|'+'
name|'vm_name'
op|'+'
string|'"\'"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_vhd_parent_path
dedent|''
name|'def'
name|'get_vhd_parent_path'
op|'('
name|'self'
op|','
name|'vhd_path'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'image_man_svc'
op|'='
name|'self'
op|'.'
name|'_conn'
op|'.'
name|'Msvm_ImageManagementService'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
op|'('
name|'vhd_info'
op|','
name|'job_path'
op|','
name|'ret_val'
op|')'
op|'='
name|'image_man_svc'
op|'.'
name|'GetVirtualHardDiskInfo'
op|'('
name|'vhd_path'
op|')'
newline|'\n'
name|'if'
name|'ret_val'
op|'=='
name|'constants'
op|'.'
name|'WMI_JOB_STATUS_STARTED'
op|':'
newline|'\n'
indent|'            '
name|'success'
op|'='
name|'self'
op|'.'
name|'_check_job_status'
op|'('
name|'job_path'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'success'
op|'='
op|'('
name|'ret_val'
op|'=='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'success'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
name|'_'
op|'('
string|'"Failed to get info for disk %s"'
op|')'
op|'%'
nl|'\n'
op|'('
name|'vhd_path'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'base_disk_path'
op|'='
name|'None'
newline|'\n'
name|'et'
op|'='
name|'ElementTree'
op|'.'
name|'fromstring'
op|'('
name|'vhd_info'
op|')'
newline|'\n'
name|'for'
name|'item'
name|'in'
name|'et'
op|'.'
name|'findall'
op|'('
string|'"PROPERTY"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'item'
op|'.'
name|'attrib'
op|'['
string|'"NAME"'
op|']'
op|'=='
string|'"ParentPath"'
op|':'
newline|'\n'
indent|'                '
name|'base_disk_path'
op|'='
name|'item'
op|'.'
name|'find'
op|'('
string|'"VALUE"'
op|')'
op|'.'
name|'text'
newline|'\n'
name|'break'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'base_disk_path'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
