begin_unit
comment|'# Copyright 2016 NTT Corporation.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'# not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'# a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#      http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'# License for the specific language governing permissions and limitations'
nl|'\n'
comment|'# under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fixtures'
name|'as'
name|'nova_fixtures'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'functional'
name|'import'
name|'integrated_helpers'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'policy_fixture'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'uuidsentinel'
name|'as'
name|'uuids'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|create_request_body
name|'def'
name|'create_request_body'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'{'
nl|'\n'
string|'"interfaceAttachment"'
op|':'
op|'{'
nl|'\n'
string|'"port_id"'
op|':'
name|'uuids'
op|'.'
name|'port'
op|','
nl|'\n'
string|'"net_id"'
op|':'
name|'uuids'
op|'.'
name|'net'
op|','
nl|'\n'
string|'"fixed_ips"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"ip_address"'
op|':'
string|'"192.168.1.3"'
op|','
nl|'\n'
string|'"subnet_id"'
op|':'
name|'uuids'
op|'.'
name|'subnet'
nl|'\n'
op|'}'
nl|'\n'
op|']'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InterfaceFullstack
dedent|''
name|'class'
name|'InterfaceFullstack'
op|'('
name|'integrated_helpers'
op|'.'
name|'_IntegratedTestBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Tests for port interfaces command.\n\n    Extension: os-interface\n\n    os-interface adds a set of functions to the port interfaces\n    for the creation and deletion of port interfaces.\n\n    POST /v2.1/{tenant_id}/servers/{server_id}/os-interface\n    DELETE /v2.1/{tenant_id}/servers/{server_id}/os-interface/{attachment_id}\n\n    Functional Test Scope:\n\n    This test starts the wsgi stack for the nova api services, uses an\n    in memory database to ensure the path through the wsgi layer to\n    the database.\n\n    """'
newline|'\n'
DECL|variable|api_major_version
name|'api_major_version'
op|'='
string|"'v2.1'"
newline|'\n'
DECL|variable|_image_ref_parameter
name|'_image_ref_parameter'
op|'='
string|"'imageRef'"
newline|'\n'
DECL|variable|_flavor_ref_parameter
name|'_flavor_ref_parameter'
op|'='
string|"'flavorRef'"
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'InterfaceFullstack'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'policy_fixture'
op|'.'
name|'RealPolicyFixture'
op|'('
op|')'
op|')'
newline|'\n'
name|'api_fixture'
op|'='
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'nova_fixtures'
op|'.'
name|'OSAPIFixture'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'api'
op|'='
name|'api_fixture'
op|'.'
name|'api'
newline|'\n'
nl|'\n'
DECL|member|test_interface_func_negative
dedent|''
name|'def'
name|'test_interface_func_negative'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test port interface edge conditions.\n\n        - Bogus body is a 400\n        """'
newline|'\n'
comment|'# Create a server'
nl|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'_build_minimal_create_server_request'
op|'('
op|')'
newline|'\n'
name|'created_server'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server'
op|'('
op|'{'
string|'"server"'
op|':'
name|'server'
op|'}'
op|')'
newline|'\n'
name|'created_server_id'
op|'='
name|'created_server'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
comment|'# Test for API failure conditions'
nl|'\n'
comment|'# bad body is 400'
nl|'\n'
name|'os_interface_url'
op|'='
string|"'/servers/%s/os-interface'"
op|'%'
name|'created_server_id'
newline|'\n'
nl|'\n'
comment|'# Check in the case that both net_id and port_id are specified.'
nl|'\n'
name|'body'
op|'='
name|'create_request_body'
op|'('
op|')'
newline|'\n'
name|'del'
name|'body'
op|'['
string|"'interfaceAttachment'"
op|']'
op|'['
string|"'fixed_ips'"
op|']'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'api_post'
op|'('
name|'os_interface_url'
op|','
name|'body'
op|','
nl|'\n'
name|'check_response_status'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'400'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
newline|'\n'
nl|'\n'
comment|'# Check in the case that fixed_ips is specified,'
nl|'\n'
comment|'# but net_id is not specifed.'
nl|'\n'
name|'body'
op|'='
name|'create_request_body'
op|'('
op|')'
newline|'\n'
name|'del'
name|'body'
op|'['
string|"'interfaceAttachment'"
op|']'
op|'['
string|"'port_id'"
op|']'
newline|'\n'
name|'del'
name|'body'
op|'['
string|"'interfaceAttachment'"
op|']'
op|'['
string|"'net_id'"
op|']'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'api_post'
op|'('
name|'os_interface_url'
op|','
name|'body'
op|','
nl|'\n'
name|'check_response_status'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'400'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
