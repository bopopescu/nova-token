begin_unit
comment|'# Copyright (C) 2015 Red Hat, Inc'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'import'
name|'fixtures'
newline|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'oslo_log'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'functional'
op|'.'
name|'api'
name|'import'
name|'client'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'functional'
op|'.'
name|'test_servers'
name|'import'
name|'ServersTestBase'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_network'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'fake_libvirt_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'virt'
op|'.'
name|'libvirt'
name|'import'
name|'fakelibvirt'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NumaHostInfo
name|'class'
name|'NumaHostInfo'
op|'('
name|'fakelibvirt'
op|'.'
name|'HostInfo'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'NumaHostInfo'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'numa_mempages_list'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_numa_topology
dedent|''
name|'def'
name|'get_numa_topology'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'numa_topology'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'numa_topology'
newline|'\n'
nl|'\n'
dedent|''
name|'topology'
op|'='
name|'self'
op|'.'
name|'_gen_numa_topology'
op|'('
name|'self'
op|'.'
name|'cpu_nodes'
op|','
name|'self'
op|'.'
name|'cpu_sockets'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cpu_cores'
op|','
name|'self'
op|'.'
name|'cpu_threads'
op|','
nl|'\n'
name|'self'
op|'.'
name|'kB_mem'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'numa_topology'
op|'='
name|'topology'
newline|'\n'
nl|'\n'
comment|'# update number of active cpus'
nl|'\n'
name|'cpu_count'
op|'='
name|'len'
op|'('
name|'topology'
op|'.'
name|'cells'
op|')'
op|'*'
name|'len'
op|'('
name|'topology'
op|'.'
name|'cells'
op|'['
number|'0'
op|']'
op|'.'
name|'cpus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cpus'
op|'='
name|'cpu_count'
op|'-'
name|'len'
op|'('
name|'self'
op|'.'
name|'disabled_cpus_list'
op|')'
newline|'\n'
name|'return'
name|'topology'
newline|'\n'
nl|'\n'
DECL|member|set_custom_numa_toplogy
dedent|''
name|'def'
name|'set_custom_numa_toplogy'
op|'('
name|'self'
op|','
name|'topology'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'numa_topology'
op|'='
name|'topology'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RealTimeServersTest
dedent|''
dedent|''
name|'class'
name|'RealTimeServersTest'
op|'('
name|'ServersTestBase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'RealTimeServersTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Replace libvirt with fakelibvirt'
nl|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
nl|'\n'
string|"'nova.virt.libvirt.driver.libvirt_utils'"
op|','
nl|'\n'
name|'fake_libvirt_utils'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
nl|'\n'
string|"'nova.virt.libvirt.driver.libvirt'"
op|','
nl|'\n'
name|'fakelibvirt'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
nl|'\n'
string|"'nova.virt.libvirt.host.libvirt'"
op|','
nl|'\n'
name|'fakelibvirt'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'MonkeyPatch'
op|'('
nl|'\n'
string|"'nova.virt.libvirt.guest.libvirt'"
op|','
nl|'\n'
name|'fakelibvirt'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fakelibvirt'
op|'.'
name|'FakeLibvirtFixture'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setup_compute_service
dedent|''
name|'def'
name|'_setup_compute_service'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'compute_driver'
op|'='
string|"'nova.virt.libvirt.LibvirtDriver'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_no_dedicated_cpu
dedent|''
name|'def'
name|'test_no_dedicated_cpu'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flavor'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
name|'extra_spec'
op|'='
op|'{'
string|"'hw:cpu_realtime'"
op|':'
string|"'yes'"
op|'}'
op|')'
newline|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'_build_server'
op|'('
name|'flavor'
op|')'
newline|'\n'
nl|'\n'
comment|'# Cannot set realtime policy in a non dedicated cpu pinning policy'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'client'
op|'.'
name|'OpenStackApiException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server'
op|','
op|'{'
string|"'server'"
op|':'
name|'server'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.LibvirtDriver._create_image'"
op|')'
newline|'\n'
DECL|member|test_invalid_libvirt_version
name|'def'
name|'test_invalid_libvirt_version'
op|'('
name|'self'
op|','
name|'img_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host_info'
op|'='
name|'NumaHostInfo'
op|'('
name|'cpu_nodes'
op|'='
number|'2'
op|','
name|'cpu_sockets'
op|'='
number|'1'
op|','
name|'cpu_cores'
op|'='
number|'2'
op|','
nl|'\n'
name|'cpu_threads'
op|'='
number|'2'
op|','
name|'kB_mem'
op|'='
number|'15740000'
op|')'
newline|'\n'
name|'fake_connection'
op|'='
name|'fakelibvirt'
op|'.'
name|'Connection'
op|'('
string|"'qemu:///system'"
op|','
nl|'\n'
name|'version'
op|'='
number|'1002007'
op|','
nl|'\n'
name|'hv_version'
op|'='
number|'2001000'
op|','
nl|'\n'
name|'host_info'
op|'='
name|'host_info'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.host.Host.get_connection'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'fake_connection'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|','
name|'host'
op|'='
string|"'test_compute0'"
op|')'
newline|'\n'
name|'fake_network'
op|'.'
name|'set_stub_network_methods'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
name|'extra_spec'
op|'='
op|'{'
nl|'\n'
string|"'hw:cpu_realtime'"
op|':'
string|"'yes'"
op|','
string|"'hw:cpu_policy'"
op|':'
string|"'dedicated'"
op|'}'
op|')'
newline|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'_build_server'
op|'('
name|'flavor'
op|')'
newline|'\n'
name|'created'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server'
op|'('
op|'{'
string|"'server'"
op|':'
name|'server'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_server'
op|'('
name|'created'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_wait_for_state_change'
op|'('
name|'instance'
op|','
string|"'BUILD'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Realtime policy not supported by hypervisor'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'ERROR'"
op|','
name|'instance'
op|'['
string|"'status'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_delete_server'
op|'('
name|'instance'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.LibvirtDriver._create_image'"
op|')'
newline|'\n'
DECL|member|test_success
name|'def'
name|'test_success'
op|'('
name|'self'
op|','
name|'img_mock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host_info'
op|'='
name|'NumaHostInfo'
op|'('
name|'cpu_nodes'
op|'='
number|'2'
op|','
name|'cpu_sockets'
op|'='
number|'1'
op|','
name|'cpu_cores'
op|'='
number|'2'
op|','
nl|'\n'
name|'cpu_threads'
op|'='
number|'2'
op|','
name|'kB_mem'
op|'='
number|'15740000'
op|')'
newline|'\n'
name|'fake_connection'
op|'='
name|'fakelibvirt'
op|'.'
name|'Connection'
op|'('
string|"'qemu:///system'"
op|','
nl|'\n'
name|'version'
op|'='
number|'1002013'
op|','
nl|'\n'
name|'hv_version'
op|'='
number|'2001000'
op|','
nl|'\n'
name|'host_info'
op|'='
name|'host_info'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.virt.libvirt.host.Host.get_connection'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'fake_connection'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|','
name|'host'
op|'='
string|"'test_compute0'"
op|')'
newline|'\n'
name|'fake_network'
op|'.'
name|'set_stub_network_methods'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'_create_flavor'
op|'('
name|'extra_spec'
op|'='
op|'{'
nl|'\n'
string|"'hw:cpu_realtime'"
op|':'
string|"'yes'"
op|','
nl|'\n'
string|"'hw:cpu_policy'"
op|':'
string|"'dedicated'"
op|','
nl|'\n'
string|"'hw:cpu_realtime_mask'"
op|':'
string|"'^1'"
op|'}'
op|')'
newline|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'_build_server'
op|'('
name|'flavor'
op|')'
newline|'\n'
name|'created'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server'
op|'('
op|'{'
string|"'server'"
op|':'
name|'server'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_server'
op|'('
name|'created'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_wait_for_state_change'
op|'('
name|'instance'
op|','
string|"'BUILD'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'ACTIVE'"
op|','
name|'instance'
op|'['
string|"'status'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_delete_server'
op|'('
name|'instance'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
