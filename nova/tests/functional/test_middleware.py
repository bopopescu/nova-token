begin_unit
comment|'# -*- encoding: utf-8 -*-'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nTests to assert that various incorporated middleware works as expected.\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'functional'
op|'.'
name|'api_sample_tests'
name|'import'
name|'api_sample_base'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestCORSMiddleware
name|'class'
name|'TestCORSMiddleware'
op|'('
name|'api_sample_base'
op|'.'
name|'ApiSampleTestBaseV21'
op|')'
op|':'
newline|'\n'
indent|'    '
string|"'''Provide a basic smoke test to ensure CORS middleware is active.\n\n    The tests below provide minimal confirmation that the CORS middleware\n    is active, and may be configured. For comprehensive tests, please consult\n    the test suite in oslo_middleware.\n    '''"
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Here we monkeypatch GroupAttr.__getattr__, necessary because the'
nl|'\n'
comment|'# paste.ini method of initializing this middleware creates its own'
nl|'\n'
comment|'# ConfigOpts instance, bypassing the regular config fixture.'
nl|'\n'
comment|'# Mocking also does not work, as accessing an attribute on a mock'
nl|'\n'
comment|'# object will return a MagicMock instance, which will fail'
nl|'\n'
comment|'# configuration type checks.'
nl|'\n'
DECL|function|_mock_getattr
indent|'        '
name|'def'
name|'_mock_getattr'
op|'('
name|'instance'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'key'
op|'!='
string|"'allowed_origin'"
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'_original_call_method'
op|'('
name|'instance'
op|','
name|'key'
op|')'
newline|'\n'
dedent|''
name|'return'
string|'"http://valid.example.com"'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_original_call_method'
op|'='
name|'cfg'
op|'.'
name|'ConfigOpts'
op|'.'
name|'GroupAttr'
op|'.'
name|'__getattr__'
newline|'\n'
name|'cfg'
op|'.'
name|'ConfigOpts'
op|'.'
name|'GroupAttr'
op|'.'
name|'__getattr__'
op|'='
name|'_mock_getattr'
newline|'\n'
nl|'\n'
comment|'# Initialize the application after all the config overrides are in'
nl|'\n'
comment|'# place.'
nl|'\n'
name|'super'
op|'('
name|'TestCORSMiddleware'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestCORSMiddleware'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Reset the configuration overrides.'
nl|'\n'
name|'cfg'
op|'.'
name|'ConfigOpts'
op|'.'
name|'GroupAttr'
op|'.'
name|'__getattr__'
op|'='
name|'self'
op|'.'
name|'_original_call_method'
newline|'\n'
nl|'\n'
DECL|member|test_valid_cors_options_request
dedent|''
name|'def'
name|'test_valid_cors_options_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_options'
op|'('
string|"'servers'"
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'Origin'"
op|':'
string|"'http://valid.example.com'"
op|','
nl|'\n'
string|"'Access-Control-Request-Method'"
op|':'
string|"'GET'"
nl|'\n'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'.'
name|'status_code'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'Access-Control-Allow-Origin'"
op|','
name|'response'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'http://valid.example.com'"
op|','
nl|'\n'
name|'response'
op|'.'
name|'headers'
op|'['
string|"'Access-Control-Allow-Origin'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_invalid_cors_options_request
dedent|''
name|'def'
name|'test_invalid_cors_options_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_options'
op|'('
string|"'servers'"
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'Origin'"
op|':'
string|"'http://invalid.example.com'"
op|','
nl|'\n'
string|"'Access-Control-Request-Method'"
op|':'
string|"'GET'"
nl|'\n'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'.'
name|'status_code'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'Access-Control-Allow-Origin'"
op|','
name|'response'
op|'.'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_valid_cors_get_request
dedent|''
name|'def'
name|'test_valid_cors_get_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_get'
op|'('
string|"'servers'"
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'Origin'"
op|':'
string|"'http://valid.example.com'"
op|','
nl|'\n'
string|"'Access-Control-Request-Method'"
op|':'
string|"'GET'"
nl|'\n'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'.'
name|'status_code'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'Access-Control-Allow-Origin'"
op|','
name|'response'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'http://valid.example.com'"
op|','
nl|'\n'
name|'response'
op|'.'
name|'headers'
op|'['
string|"'Access-Control-Allow-Origin'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_invalid_cors_get_request
dedent|''
name|'def'
name|'test_invalid_cors_get_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_get'
op|'('
string|"'servers'"
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'Origin'"
op|':'
string|"'http://invalid.example.com'"
op|','
nl|'\n'
string|"'Access-Control-Request-Method'"
op|':'
string|"'GET'"
nl|'\n'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'.'
name|'status_code'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'Access-Control-Allow-Origin'"
op|','
name|'response'
op|'.'
name|'headers'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
