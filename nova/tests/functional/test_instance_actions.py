begin_unit
comment|'# Copyright 2016 IBM Corp.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'functional'
op|'.'
name|'api'
name|'import'
name|'client'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'functional'
name|'import'
name|'test_servers'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_network'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceActionsTestV2
name|'class'
name|'InstanceActionsTestV2'
op|'('
name|'test_servers'
op|'.'
name|'ServersTestBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Tests Instance Actions API"""'
newline|'\n'
nl|'\n'
DECL|member|_create_server
name|'def'
name|'_create_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates a minimal test server via the compute API\n\n        Ensures the server is created and can be retrieved from the compute API\n        and waits for it to be ACTIVE.\n\n        :returns: created server (dict)\n        """'
newline|'\n'
comment|'# TODO(mriedem): We should pull this up into the parent class so we'
nl|'\n'
comment|"# don't have so much copy/paste in these functional tests."
nl|'\n'
name|'fake_network'
op|'.'
name|'set_stub_network_methods'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
comment|'# Create a server'
nl|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'_build_minimal_create_server_request'
op|'('
op|')'
newline|'\n'
name|'created_server'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server'
op|'('
op|'{'
string|"'server'"
op|':'
name|'server'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'created_server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'created_server_id'
op|'='
name|'created_server'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
comment|"# Check it's there"
nl|'\n'
name|'found_server'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_server'
op|'('
name|'created_server_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'created_server_id'
op|','
name|'found_server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'found_server'
op|'='
name|'self'
op|'.'
name|'_wait_for_state_change'
op|'('
name|'found_server'
op|','
string|"'BUILD'"
op|')'
newline|'\n'
comment|'# It should be available...'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'ACTIVE'"
op|','
name|'found_server'
op|'['
string|"'status'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'found_server'
newline|'\n'
nl|'\n'
DECL|member|test_get_instance_actions
dedent|''
name|'def'
name|'test_get_instance_actions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
name|'self'
op|'.'
name|'_create_server'
op|'('
op|')'
newline|'\n'
name|'actions'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_instance_actions'
op|'('
name|'server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'create'"
op|','
name|'actions'
op|'['
number|'0'
op|']'
op|'['
string|"'action'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instance_actions_deleted
dedent|''
name|'def'
name|'test_get_instance_actions_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
name|'self'
op|'.'
name|'_create_server'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_delete_server'
op|'('
name|'server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'client'
op|'.'
name|'OpenStackApiNotFoundException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_instance_actions'
op|','
nl|'\n'
name|'server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceActionsTestV21
dedent|''
dedent|''
name|'class'
name|'InstanceActionsTestV21'
op|'('
name|'InstanceActionsTestV2'
op|')'
op|':'
newline|'\n'
DECL|variable|api_major_version
indent|'    '
name|'api_major_version'
op|'='
string|"'v2.1'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceActionsTestV221
dedent|''
name|'class'
name|'InstanceActionsTestV221'
op|'('
name|'InstanceActionsTestV21'
op|')'
op|':'
newline|'\n'
DECL|variable|microversion
indent|'    '
name|'microversion'
op|'='
string|"'2.21'"
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'InstanceActionsTestV221'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'api'
op|'.'
name|'microversion'
op|'='
name|'self'
op|'.'
name|'microversion'
newline|'\n'
nl|'\n'
DECL|member|test_get_instance_actions_deleted
dedent|''
name|'def'
name|'test_get_instance_actions_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
name|'self'
op|'.'
name|'_create_server'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_delete_server'
op|'('
name|'server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'actions'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_instance_actions'
op|'('
name|'server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'delete'"
op|','
name|'actions'
op|'['
number|'0'
op|']'
op|'['
string|"'action'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'create'"
op|','
name|'actions'
op|'['
number|'1'
op|']'
op|'['
string|"'action'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
