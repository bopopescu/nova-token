begin_unit
comment|'# Copyright 2015 IBM Corp.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'dialects'
name|'import'
name|'sqlite'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'api'
name|'as'
name|'sqlalchemy_api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'functional'
name|'import'
name|'test_servers'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_network'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestDatabaseArchive
name|'class'
name|'TestDatabaseArchive'
op|'('
name|'test_servers'
op|'.'
name|'ServersTestBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Tests DB API for archiving (soft) deleted records"""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestDatabaseArchive'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
comment|'# TODO(mriedem): pull this out so we can re-use it in'
nl|'\n'
comment|'# test_archive_deleted_rows_fk_constraint'
nl|'\n'
comment|"# SQLite doesn't enforce foreign key constraints without a pragma."
nl|'\n'
name|'engine'
op|'='
name|'sqlalchemy_api'
op|'.'
name|'get_engine'
op|'('
op|')'
newline|'\n'
name|'dialect'
op|'='
name|'engine'
op|'.'
name|'url'
op|'.'
name|'get_dialect'
op|'('
op|')'
newline|'\n'
name|'if'
name|'dialect'
op|'=='
name|'sqlite'
op|'.'
name|'dialect'
op|':'
newline|'\n'
comment|"# We're seeing issues with foreign key support in SQLite 3.6.20"
nl|'\n'
comment|"# SQLAlchemy doesn't support it at all with < SQLite 3.6.19"
nl|'\n'
comment|'# It works fine in SQLite 3.7.'
nl|'\n'
comment|'# So return early to skip this test if running SQLite < 3.7'
nl|'\n'
indent|'            '
name|'import'
name|'sqlite3'
newline|'\n'
name|'tup'
op|'='
name|'sqlite3'
op|'.'
name|'sqlite_version_info'
newline|'\n'
name|'if'
name|'tup'
op|'['
number|'0'
op|']'
op|'<'
number|'3'
name|'or'
op|'('
name|'tup'
op|'['
number|'0'
op|']'
op|'=='
number|'3'
name|'and'
name|'tup'
op|'['
number|'1'
op|']'
op|'<'
number|'7'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'skipTest'
op|'('
nl|'\n'
string|"'sqlite version too old for reliable SQLA foreign_keys'"
op|')'
newline|'\n'
dedent|''
name|'engine'
op|'.'
name|'connect'
op|'('
op|')'
op|'.'
name|'execute'
op|'('
string|'"PRAGMA foreign_keys = ON"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_server
dedent|''
dedent|''
name|'def'
name|'_create_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates a minimal test server via the compute API\n\n        Ensures the server is created and can be retrieved from the compute API\n        and waits for it to be ACTIVE.\n\n        :returns: created server (dict)\n        """'
newline|'\n'
comment|'# TODO(mriedem): We should pull this up into the parent class so we'
nl|'\n'
comment|"# don't have so much copy/paste in these functional tests."
nl|'\n'
name|'fake_network'
op|'.'
name|'set_stub_network_methods'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
comment|'# Create a server'
nl|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'_build_minimal_create_server_request'
op|'('
op|')'
newline|'\n'
name|'created_server'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server'
op|'('
op|'{'
string|"'server'"
op|':'
name|'server'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'created_server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'created_server_id'
op|'='
name|'created_server'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
comment|"# Check it's there"
nl|'\n'
name|'found_server'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_server'
op|'('
name|'created_server_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'created_server_id'
op|','
name|'found_server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'found_server'
op|'='
name|'self'
op|'.'
name|'_wait_for_state_change'
op|'('
name|'found_server'
op|','
string|"'BUILD'"
op|')'
newline|'\n'
comment|'# It should be available...'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'ACTIVE'"
op|','
name|'found_server'
op|'['
string|"'status'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'found_server'
newline|'\n'
nl|'\n'
DECL|member|test_archive_deleted_rows
dedent|''
name|'def'
name|'test_archive_deleted_rows'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Boots a server, deletes it, and then tries to archive it.'
nl|'\n'
indent|'        '
name|'server'
op|'='
name|'self'
op|'.'
name|'_create_server'
op|'('
op|')'
newline|'\n'
name|'server_id'
op|'='
name|'server'
op|'['
string|"'id'"
op|']'
newline|'\n'
comment|'# Assert that there are instance_actions. instance_actions are'
nl|'\n'
comment|"# interesting since we don't soft delete them but they have a foreign"
nl|'\n'
comment|'# key back to the instances table.'
nl|'\n'
name|'actions'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_instance_actions'
op|'('
name|'server_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'actions'
op|')'
op|','
nl|'\n'
string|"'No instance actions for server: %s'"
op|'%'
name|'server_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_delete_server'
op|'('
name|'server_id'
op|')'
newline|'\n'
comment|'# Verify we have the soft deleted instance in the database.'
nl|'\n'
name|'admin_context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
name|'read_deleted'
op|'='
string|"'yes'"
op|')'
newline|'\n'
comment|"# This will raise InstanceNotFound if it's not found."
nl|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'admin_context'
op|','
name|'server_id'
op|')'
newline|'\n'
comment|"# Make sure it's soft deleted."
nl|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
number|'0'
op|','
name|'instance'
op|'.'
name|'deleted'
op|')'
newline|'\n'
comment|"# Verify we have some system_metadata since we'll check that later."
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'instance'
op|'.'
name|'system_metadata'
op|')'
op|','
nl|'\n'
string|"'No system_metadata for instance: %s'"
op|'%'
name|'server_id'
op|')'
newline|'\n'
comment|'# Now try and archive the soft deleted records.'
nl|'\n'
name|'results'
op|'='
name|'db'
op|'.'
name|'archive_deleted_rows'
op|'('
name|'max_rows'
op|'='
number|'100'
op|')'
newline|'\n'
comment|'# verify system_metadata was dropped'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'instance_system_metadata'"
op|','
name|'results'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'instance'
op|'.'
name|'system_metadata'
op|')'
op|','
nl|'\n'
name|'results'
op|'['
string|"'instance_system_metadata'"
op|']'
op|')'
newline|'\n'
comment|'# FIXME(mriedem): we fail to archive instances because of a fkey'
nl|'\n'
comment|'# referential constraint error with instance_actions not being deleted'
nl|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'instances'"
op|','
name|'results'
op|')'
newline|'\n'
comment|"# FIXME(mriedem): instance_actions aren't soft deleted so they aren't"
nl|'\n'
comment|'# archived, which we need to fix.'
nl|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'instance_actions'"
op|','
name|'results'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
