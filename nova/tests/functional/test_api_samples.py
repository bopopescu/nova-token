begin_unit
comment|'# Copyright 2012 Nebula, Inc.'
nl|'\n'
comment|'# Copyright 2013 IBM Corp.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
nl|'\n'
name|'import'
name|'inspect'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
nl|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'oslo_log'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'oslo_serialization'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'importutils'
newline|'\n'
name|'import'
name|'testtools'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'metadata'
name|'import'
name|'password'
newline|'\n'
comment|'# Import extensions to pull in osapi_compute_extension CONF option used below.'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'console'
name|'import'
name|'manager'
name|'as'
name|'console_manager'
comment|'# noqa - only for cfg'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
op|'.'
name|'neutronv2'
name|'import'
name|'api'
name|'as'
name|'neutron_api'
comment|'# noqa - only for cfg'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'functional'
name|'import'
name|'api_samples_test_base'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'functional'
name|'import'
name|'integrated_helpers'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'fakes'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_network'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'image'
name|'import'
name|'fake'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'volume'
name|'import'
name|'cinder'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'allow_resize_to_same_host'"
op|','
string|"'nova.compute.api'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'shelved_offload_time'"
op|','
string|"'nova.compute.manager'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'enable_network_quota'"
op|','
nl|'\n'
string|"'nova.api.openstack.compute.contrib.os_tenant_networks'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'osapi_compute_extension'"
op|','
nl|'\n'
string|"'nova.api.openstack.compute.extensions'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'osapi_compute_link_prefix'"
op|','
string|"'nova.api.openstack.common'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'osapi_glance_link_prefix'"
op|','
string|"'nova.api.openstack.common'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'enable'"
op|','
string|"'nova.cells.opts'"
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'cell_type'"
op|','
string|"'nova.cells.opts'"
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'db_check_interval'"
op|','
string|"'nova.cells.state'"
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ApiSampleTestBaseV2
name|'class'
name|'ApiSampleTestBaseV2'
op|'('
name|'api_samples_test_base'
op|'.'
name|'ApiSampleTestBase'
op|')'
op|':'
newline|'\n'
DECL|variable|_api_version
indent|'    '
name|'_api_version'
op|'='
string|"'v2'"
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'extends'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_ipv6'
op|'='
name|'False'
op|','
nl|'\n'
name|'osapi_compute_link_prefix'
op|'='
name|'self'
op|'.'
name|'_get_host'
op|'('
op|')'
op|','
nl|'\n'
name|'osapi_glance_link_prefix'
op|'='
name|'self'
op|'.'
name|'_get_glance_host'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'all_extensions'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'hasattr'
op|'('
name|'self'
op|','
string|"'extends_name'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'extends'
op|'='
op|'['
name|'self'
op|'.'
name|'extends_name'
op|']'
newline|'\n'
dedent|''
name|'ext'
op|'='
op|'['
name|'self'
op|'.'
name|'extension_name'
op|']'
name|'if'
name|'self'
op|'.'
name|'extension_name'
name|'else'
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'osapi_compute_extension'
op|'='
name|'ext'
op|'+'
name|'extends'
op|')'
newline|'\n'
dedent|''
name|'super'
op|'('
name|'ApiSampleTestBaseV2'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'test'
op|'.'
name|'SampleNetworks'
op|'('
name|'host'
op|'='
name|'self'
op|'.'
name|'network'
op|'.'
name|'host'
op|')'
op|')'
newline|'\n'
name|'fake_network'
op|'.'
name|'stub_compute_with_ips'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'fake_utils'
op|'.'
name|'stub_out_utils_spawn_n'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'generate_samples'
op|'='
name|'os'
op|'.'
name|'getenv'
op|'('
string|"'GENERATE_SAMPLES'"
op|')'
name|'is'
name|'not'
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ApiSamplesTrap
dedent|''
dedent|''
name|'class'
name|'ApiSamplesTrap'
op|'('
name|'ApiSampleTestBaseV2'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Make sure extensions don\'t get added without tests."""'
newline|'\n'
nl|'\n'
DECL|variable|all_extensions
name|'all_extensions'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|_get_extensions_tested
name|'def'
name|'_get_extensions_tested'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tests'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'attr'
name|'in'
name|'globals'
op|'('
op|')'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'inspect'
op|'.'
name|'isclass'
op|'('
name|'attr'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'continue'
comment|'# Skip non-class objects'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'issubclass'
op|'('
name|'attr'
op|','
name|'integrated_helpers'
op|'.'
name|'_IntegratedTestBase'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'continue'
comment|'# Skip non-test classes'
newline|'\n'
dedent|''
name|'if'
name|'attr'
op|'.'
name|'extension_name'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'continue'
comment|'# Skip base tests'
newline|'\n'
dedent|''
name|'cls'
op|'='
name|'importutils'
op|'.'
name|'import_class'
op|'('
name|'attr'
op|'.'
name|'extension_name'
op|')'
newline|'\n'
name|'tests'
op|'.'
name|'append'
op|'('
name|'cls'
op|'.'
name|'alias'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'tests'
newline|'\n'
nl|'\n'
DECL|member|_get_extensions
dedent|''
name|'def'
name|'_get_extensions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'extensions'
op|'='
op|'['
op|']'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_get'
op|'('
string|"'extensions'"
op|')'
newline|'\n'
name|'for'
name|'extension'
name|'in'
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'response'
op|'.'
name|'content'
op|')'
op|'['
string|"'extensions'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'extensions'
op|'.'
name|'append'
op|'('
name|'str'
op|'('
name|'extension'
op|'['
string|"'alias'"
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'extensions'
newline|'\n'
nl|'\n'
DECL|member|test_all_extensions_have_samples
dedent|''
name|'def'
name|'test_all_extensions_have_samples'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(danms): This is a list of extensions which are currently'
nl|'\n'
comment|"# in the tree but that don't (yet) have tests. This list should"
nl|'\n'
comment|'# NOT be allowed to grow, and should shrink to zero (and be'
nl|'\n'
comment|'# removed) soon.'
nl|'\n'
nl|'\n'
comment|'# TODO(gmann): skip this tests as merging of sample tests for v2'
nl|'\n'
comment|'# and v2.1 are in progress. After merging all tests, this tests'
nl|'\n'
comment|'# need to implement in different way.'
nl|'\n'
indent|'        '
name|'raise'
name|'testtools'
op|'.'
name|'TestCase'
op|'.'
name|'skipException'
op|'('
string|"'Merging of v2 and v2.1 '"
nl|'\n'
string|"'sample tests is in progress. '"
nl|'\n'
string|"'This test will be enabled '"
nl|'\n'
string|"'after all tests gets merged.'"
op|')'
newline|'\n'
name|'do_not_approve_additions'
op|'='
op|'['
op|']'
newline|'\n'
name|'do_not_approve_additions'
op|'.'
name|'append'
op|'('
string|"'os-create-server-ext'"
op|')'
newline|'\n'
name|'do_not_approve_additions'
op|'.'
name|'append'
op|'('
string|"'os-baremetal-ext-status'"
op|')'
newline|'\n'
nl|'\n'
name|'tests'
op|'='
name|'self'
op|'.'
name|'_get_extensions_tested'
op|'('
op|')'
newline|'\n'
name|'extensions'
op|'='
name|'self'
op|'.'
name|'_get_extensions'
op|'('
op|')'
newline|'\n'
name|'missing_tests'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'extension'
name|'in'
name|'extensions'
op|':'
newline|'\n'
comment|'# NOTE(danms): if you add tests, remove it from the'
nl|'\n'
comment|'# exclusions list'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'extension'
name|'in'
name|'do_not_approve_additions'
name|'and'
nl|'\n'
name|'extension'
name|'in'
name|'tests'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(danms): if you add an extension, it must come with'
nl|'\n'
comment|'# api_samples tests!'
nl|'\n'
name|'if'
op|'('
name|'extension'
name|'not'
name|'in'
name|'tests'
name|'and'
nl|'\n'
name|'extension'
name|'not'
name|'in'
name|'do_not_approve_additions'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'missing_tests'
op|'.'
name|'append'
op|'('
name|'extension'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'missing_tests'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'error'
op|'('
string|'"Extensions are missing tests: %s"'
op|'%'
name|'missing_tests'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'missing_tests'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VersionsSampleJsonTest
dedent|''
dedent|''
name|'class'
name|'VersionsSampleJsonTest'
op|'('
name|'ApiSampleTestBaseV2'
op|')'
op|':'
newline|'\n'
DECL|variable|sample_dir
indent|'    '
name|'sample_dir'
op|'='
string|"'versions'"
newline|'\n'
nl|'\n'
DECL|member|test_versions_get
name|'def'
name|'test_versions_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_get'
op|'('
string|"''"
op|','
name|'strip_version'
op|'='
name|'True'
op|')'
newline|'\n'
name|'subs'
op|'='
name|'self'
op|'.'
name|'_get_regexes'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_response'
op|'('
string|"'versions-get-resp'"
op|','
name|'subs'
op|','
name|'response'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersSampleBase
dedent|''
dedent|''
name|'class'
name|'ServersSampleBase'
op|'('
name|'ApiSampleTestBaseV2'
op|')'
op|':'
newline|'\n'
DECL|member|_post_server
indent|'    '
name|'def'
name|'_post_server'
op|'('
name|'self'
op|','
name|'use_common_server_api_samples'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
comment|'# param use_common_server_api_samples: Boolean to set whether tests use'
nl|'\n'
comment|'# common sample files for server post request and response.'
nl|'\n'
comment|'# Default is True which means _get_sample_path method will fetch the'
nl|'\n'
comment|'# common server sample files.'
nl|'\n'
comment|'# Set False if tests need to use extension specific sample files'
nl|'\n'
indent|'        '
name|'subs'
op|'='
op|'{'
nl|'\n'
string|"'image_id'"
op|':'
name|'fake'
op|'.'
name|'get_valid_image_id'
op|'('
op|')'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'self'
op|'.'
name|'_get_host'
op|'('
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'orig_value'
op|'='
name|'self'
op|'.'
name|'__class__'
op|'.'
name|'_use_common_server_api_samples'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'__class__'
op|'.'
name|'_use_common_server_api_samples'
op|'='
op|'('
nl|'\n'
name|'use_common_server_api_samples'
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_post'
op|'('
string|"'servers'"
op|','
string|"'server-post-req'"
op|','
name|'subs'
op|')'
newline|'\n'
name|'subs'
op|'='
name|'self'
op|'.'
name|'_get_regexes'
op|'('
op|')'
newline|'\n'
name|'status'
op|'='
name|'self'
op|'.'
name|'_verify_response'
op|'('
string|"'server-post-resp'"
op|','
name|'subs'
op|','
nl|'\n'
name|'response'
op|','
number|'202'
op|')'
newline|'\n'
name|'return'
name|'status'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'__class__'
op|'.'
name|'_use_common_server_api_samples'
op|'='
name|'orig_value'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersSampleMultiStatusJsonTest
dedent|''
dedent|''
dedent|''
name|'class'
name|'ServersSampleMultiStatusJsonTest'
op|'('
name|'ServersSampleBase'
op|')'
op|':'
newline|'\n'
DECL|variable|extension_name
indent|'    '
name|'extension_name'
op|'='
string|"'.'"
op|'.'
name|'join'
op|'('
op|'('
string|"'nova.api.openstack.compute.contrib'"
op|','
nl|'\n'
string|"'server_list_multi_status'"
op|','
nl|'\n'
string|"'Server_list_multi_status'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_servers_list
name|'def'
name|'test_servers_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
name|'self'
op|'.'
name|'_post_server'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_get'
op|'('
string|"'servers?status=active&status=error'"
op|')'
newline|'\n'
name|'subs'
op|'='
name|'self'
op|'.'
name|'_get_regexes'
op|'('
op|')'
newline|'\n'
name|'subs'
op|'['
string|"'id'"
op|']'
op|'='
name|'uuid'
newline|'\n'
name|'self'
op|'.'
name|'_verify_response'
op|'('
string|"'servers-list-resp'"
op|','
name|'subs'
op|','
name|'response'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FlavorsSampleJsonTest
dedent|''
dedent|''
name|'class'
name|'FlavorsSampleJsonTest'
op|'('
name|'ApiSampleTestBaseV2'
op|')'
op|':'
newline|'\n'
DECL|variable|sample_dir
indent|'    '
name|'sample_dir'
op|'='
string|"'flavors'"
newline|'\n'
nl|'\n'
DECL|member|test_flavors_get
name|'def'
name|'test_flavors_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_get'
op|'('
string|"'flavors/1'"
op|')'
newline|'\n'
name|'subs'
op|'='
name|'self'
op|'.'
name|'_get_regexes'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_response'
op|'('
string|"'flavor-get-resp'"
op|','
name|'subs'
op|','
name|'response'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flavors_list
dedent|''
name|'def'
name|'test_flavors_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_get'
op|'('
string|"'flavors'"
op|')'
newline|'\n'
name|'subs'
op|'='
name|'self'
op|'.'
name|'_get_regexes'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_response'
op|'('
string|"'flavors-list-resp'"
op|','
name|'subs'
op|','
name|'response'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FlavorsSampleAllExtensionJsonTest
dedent|''
dedent|''
name|'class'
name|'FlavorsSampleAllExtensionJsonTest'
op|'('
name|'FlavorsSampleJsonTest'
op|')'
op|':'
newline|'\n'
DECL|variable|all_extensions
indent|'    '
name|'all_extensions'
op|'='
name|'True'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LimitsSampleJsonTest
dedent|''
name|'class'
name|'LimitsSampleJsonTest'
op|'('
name|'ApiSampleTestBaseV2'
op|')'
op|':'
newline|'\n'
DECL|variable|sample_dir
indent|'    '
name|'sample_dir'
op|'='
string|"'limits'"
newline|'\n'
nl|'\n'
DECL|member|test_limits_get
name|'def'
name|'test_limits_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_get'
op|'('
string|"'limits'"
op|')'
newline|'\n'
name|'subs'
op|'='
name|'self'
op|'.'
name|'_get_regexes'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_response'
op|'('
string|"'limit-get-resp'"
op|','
name|'subs'
op|','
name|'response'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VirtualInterfacesJsonTest
dedent|''
dedent|''
name|'class'
name|'VirtualInterfacesJsonTest'
op|'('
name|'ServersSampleBase'
op|')'
op|':'
newline|'\n'
DECL|variable|extension_name
indent|'    '
name|'extension_name'
op|'='
op|'('
string|'"nova.api.openstack.compute.contrib"'
nl|'\n'
string|'".virtual_interfaces.Virtual_interfaces"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_vifs_list
name|'def'
name|'test_vifs_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
name|'self'
op|'.'
name|'_post_server'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_get'
op|'('
string|"'servers/%s/os-virtual-interfaces'"
op|'%'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
name|'subs'
op|'='
name|'self'
op|'.'
name|'_get_regexes'
op|'('
op|')'
newline|'\n'
name|'subs'
op|'['
string|"'mac_addr'"
op|']'
op|'='
string|"'(?:[a-f0-9]{2}:){5}[a-f0-9]{2}'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_verify_response'
op|'('
string|"'vifs-list-resp'"
op|','
name|'subs'
op|','
name|'response'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|UsedLimitsSamplesJsonTest
dedent|''
dedent|''
name|'class'
name|'UsedLimitsSamplesJsonTest'
op|'('
name|'ApiSampleTestBaseV2'
op|')'
op|':'
newline|'\n'
DECL|variable|extension_name
indent|'    '
name|'extension_name'
op|'='
op|'('
string|'"nova.api.openstack.compute.contrib.used_limits."'
nl|'\n'
string|'"Used_limits"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_used_limits
name|'def'
name|'test_get_used_limits'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Get api sample to used limits.'
nl|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_get'
op|'('
string|"'limits'"
op|')'
newline|'\n'
name|'subs'
op|'='
name|'self'
op|'.'
name|'_get_regexes'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_response'
op|'('
string|"'usedlimits-get-resp'"
op|','
name|'subs'
op|','
name|'response'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|UsedLimitsForAdminSamplesJsonTest
dedent|''
dedent|''
name|'class'
name|'UsedLimitsForAdminSamplesJsonTest'
op|'('
name|'ApiSampleTestBaseV2'
op|')'
op|':'
newline|'\n'
DECL|variable|ADMIN_API
indent|'    '
name|'ADMIN_API'
op|'='
name|'True'
newline|'\n'
DECL|variable|extends_name
name|'extends_name'
op|'='
op|'('
string|'"nova.api.openstack.compute.contrib.used_limits."'
nl|'\n'
string|'"Used_limits"'
op|')'
newline|'\n'
DECL|variable|extension_name
name|'extension_name'
op|'='
op|'('
nl|'\n'
string|'"nova.api.openstack.compute.contrib.used_limits_for_admin."'
nl|'\n'
string|'"Used_limits_for_admin"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_used_limits_for_admin
name|'def'
name|'test_get_used_limits_for_admin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tenant_id'
op|'='
string|"'openstack'"
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_get'
op|'('
string|"'limits?tenant_id=%s'"
op|'%'
name|'tenant_id'
op|')'
newline|'\n'
name|'subs'
op|'='
name|'self'
op|'.'
name|'_get_regexes'
op|'('
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_verify_response'
op|'('
string|"'usedlimitsforadmin-get-resp'"
op|','
name|'subs'
op|','
nl|'\n'
name|'response'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ExtendedIpsSampleJsonTests
dedent|''
dedent|''
name|'class'
name|'ExtendedIpsSampleJsonTests'
op|'('
name|'ServersSampleBase'
op|')'
op|':'
newline|'\n'
DECL|variable|extension_name
indent|'    '
name|'extension_name'
op|'='
op|'('
string|'"nova.api.openstack.compute.contrib"'
nl|'\n'
string|'".extended_ips.Extended_ips"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_show
name|'def'
name|'test_show'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
name|'self'
op|'.'
name|'_post_server'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_get'
op|'('
string|"'servers/%s'"
op|'%'
name|'uuid'
op|')'
newline|'\n'
name|'subs'
op|'='
name|'self'
op|'.'
name|'_get_regexes'
op|'('
op|')'
newline|'\n'
name|'subs'
op|'['
string|"'hostid'"
op|']'
op|'='
string|"'[a-f0-9]+'"
newline|'\n'
name|'subs'
op|'['
string|"'id'"
op|']'
op|'='
name|'uuid'
newline|'\n'
name|'subs'
op|'['
string|"'hypervisor_hostname'"
op|']'
op|'='
string|"r'[\\w\\.\\-]+'"
newline|'\n'
name|'self'
op|'.'
name|'_verify_response'
op|'('
string|"'server-get-resp'"
op|','
name|'subs'
op|','
name|'response'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detail
dedent|''
name|'def'
name|'test_detail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
name|'self'
op|'.'
name|'_post_server'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_get'
op|'('
string|"'servers/detail'"
op|')'
newline|'\n'
name|'subs'
op|'='
name|'self'
op|'.'
name|'_get_regexes'
op|'('
op|')'
newline|'\n'
name|'subs'
op|'['
string|"'id'"
op|']'
op|'='
name|'uuid'
newline|'\n'
name|'subs'
op|'['
string|"'hostid'"
op|']'
op|'='
string|"'[a-f0-9]+'"
newline|'\n'
name|'self'
op|'.'
name|'_verify_response'
op|'('
string|"'servers-detail-resp'"
op|','
name|'subs'
op|','
name|'response'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ExtendedIpsMacSampleJsonTests
dedent|''
dedent|''
name|'class'
name|'ExtendedIpsMacSampleJsonTests'
op|'('
name|'ServersSampleBase'
op|')'
op|':'
newline|'\n'
DECL|variable|extension_name
indent|'    '
name|'extension_name'
op|'='
op|'('
string|'"nova.api.openstack.compute.contrib"'
nl|'\n'
string|'".extended_ips_mac.Extended_ips_mac"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_show
name|'def'
name|'test_show'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
name|'self'
op|'.'
name|'_post_server'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_get'
op|'('
string|"'servers/%s'"
op|'%'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'.'
name|'status_code'
op|','
number|'200'
op|')'
newline|'\n'
name|'subs'
op|'='
name|'self'
op|'.'
name|'_get_regexes'
op|'('
op|')'
newline|'\n'
name|'subs'
op|'['
string|"'hostid'"
op|']'
op|'='
string|"'[a-f0-9]+'"
newline|'\n'
name|'subs'
op|'['
string|"'id'"
op|']'
op|'='
name|'uuid'
newline|'\n'
name|'subs'
op|'['
string|"'hypervisor_hostname'"
op|']'
op|'='
string|"r'[\\w\\.\\-]+'"
newline|'\n'
name|'subs'
op|'['
string|"'mac_addr'"
op|']'
op|'='
string|"'(?:[a-f0-9]{2}:){5}[a-f0-9]{2}'"
newline|'\n'
name|'self'
op|'.'
name|'_verify_response'
op|'('
string|"'server-get-resp'"
op|','
name|'subs'
op|','
name|'response'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detail
dedent|''
name|'def'
name|'test_detail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
name|'self'
op|'.'
name|'_post_server'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_get'
op|'('
string|"'servers/detail'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'.'
name|'status_code'
op|','
number|'200'
op|')'
newline|'\n'
name|'subs'
op|'='
name|'self'
op|'.'
name|'_get_regexes'
op|'('
op|')'
newline|'\n'
name|'subs'
op|'['
string|"'id'"
op|']'
op|'='
name|'uuid'
newline|'\n'
name|'subs'
op|'['
string|"'hostid'"
op|']'
op|'='
string|"'[a-f0-9]+'"
newline|'\n'
name|'subs'
op|'['
string|"'mac_addr'"
op|']'
op|'='
string|"'(?:[a-f0-9]{2}:){5}[a-f0-9]{2}'"
newline|'\n'
name|'self'
op|'.'
name|'_verify_response'
op|'('
string|"'servers-detail-resp'"
op|','
name|'subs'
op|','
name|'response'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ExtendedVIFNetSampleJsonTests
dedent|''
dedent|''
name|'class'
name|'ExtendedVIFNetSampleJsonTests'
op|'('
name|'ServersSampleBase'
op|')'
op|':'
newline|'\n'
DECL|variable|extension_name
indent|'    '
name|'extension_name'
op|'='
op|'('
string|'"nova.api.openstack.compute.contrib"'
nl|'\n'
string|'".extended_virtual_interfaces_net.Extended_virtual_interfaces_net"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_flags
name|'def'
name|'_get_flags'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'f'
op|'='
name|'super'
op|'('
name|'ExtendedVIFNetSampleJsonTests'
op|','
name|'self'
op|')'
op|'.'
name|'_get_flags'
op|'('
op|')'
newline|'\n'
name|'f'
op|'['
string|"'osapi_compute_extension'"
op|']'
op|'='
name|'CONF'
op|'.'
name|'osapi_compute_extension'
op|'['
op|':'
op|']'
newline|'\n'
comment|'# extended_virtual_interfaces_net_update also'
nl|'\n'
comment|'# needs virtual_interfaces to be loaded'
nl|'\n'
name|'f'
op|'['
string|"'osapi_compute_extension'"
op|']'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
string|"'nova.api.openstack.compute.contrib'"
nl|'\n'
string|"'.virtual_interfaces.Virtual_interfaces'"
op|')'
op|')'
newline|'\n'
name|'return'
name|'f'
newline|'\n'
nl|'\n'
DECL|member|test_vifs_list
dedent|''
name|'def'
name|'test_vifs_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
name|'self'
op|'.'
name|'_post_server'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_get'
op|'('
string|"'servers/%s/os-virtual-interfaces'"
op|'%'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'.'
name|'status_code'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
name|'subs'
op|'='
name|'self'
op|'.'
name|'_get_regexes'
op|'('
op|')'
newline|'\n'
name|'subs'
op|'['
string|"'mac_addr'"
op|']'
op|'='
string|"'(?:[a-f0-9]{2}:){5}[a-f0-9]{2}'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_verify_response'
op|'('
string|"'vifs-list-resp'"
op|','
name|'subs'
op|','
name|'response'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerPasswordSampleJsonTests
dedent|''
dedent|''
name|'class'
name|'ServerPasswordSampleJsonTests'
op|'('
name|'ServersSampleBase'
op|')'
op|':'
newline|'\n'
DECL|variable|extension_name
indent|'    '
name|'extension_name'
op|'='
op|'('
string|'"nova.api.openstack.compute.contrib.server_password."'
nl|'\n'
string|'"Server_password"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_password
name|'def'
name|'test_get_password'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
comment|'# Mock password since there is no api to set it'
nl|'\n'
DECL|function|fake_ext_password
indent|'        '
name|'def'
name|'fake_ext_password'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
string|'"xlozO3wLCBRWAa2yDjCCVx8vwNPypxnypmRYDa/zErlQ+EzPe1S/"'
nl|'\n'
string|'"Gz6nfmC52mOlOSCRuUOmG7kqqgejPof6M7bOezS387zjq4LSvvwp"'
nl|'\n'
string|'"28zUknzy4YzfFGhnHAdai3TxUJ26pfQCYrq8UTzmKF2Bq8ioSEtV"'
nl|'\n'
string|'"VzM0A96pDh8W2i7BOz6MdoiVyiev/I1K2LsuipfxSJR7Wdke4zNX"'
nl|'\n'
string|'"JjHHP2RfYsVbZ/k9ANu+Nz4iIH8/7Cacud/pphH7EjrY6a4RZNrj"'
nl|'\n'
string|'"QskrhKYed0YERpotyjYk1eDtRe72GrSiXteqCM4biaQ5w3ruS+Ac"'
nl|'\n'
string|'"X//PXk3uJ5kC7d67fPXaVz4WaQRYMg=="'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'password'
op|','
string|'"extract_password"'
op|','
name|'fake_ext_password'
op|')'
newline|'\n'
name|'uuid'
op|'='
name|'self'
op|'.'
name|'_post_server'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_get'
op|'('
string|"'servers/%s/os-server-password'"
op|'%'
name|'uuid'
op|')'
newline|'\n'
name|'subs'
op|'='
name|'self'
op|'.'
name|'_get_regexes'
op|'('
op|')'
newline|'\n'
name|'subs'
op|'['
string|"'encrypted_password'"
op|']'
op|'='
name|'fake_ext_password'
op|'('
op|')'
op|'.'
name|'replace'
op|'('
string|"'+'"
op|','
string|"'\\\\+'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_response'
op|'('
string|"'get-password-resp'"
op|','
name|'subs'
op|','
name|'response'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reset_password
dedent|''
name|'def'
name|'test_reset_password'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
name|'self'
op|'.'
name|'_post_server'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_delete'
op|'('
string|"'servers/%s/os-server-password'"
op|'%'
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'.'
name|'status_code'
op|','
number|'204'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BlockDeviceMappingV2BootJsonTest
dedent|''
dedent|''
name|'class'
name|'BlockDeviceMappingV2BootJsonTest'
op|'('
name|'ServersSampleBase'
op|')'
op|':'
newline|'\n'
DECL|variable|extension_name
indent|'    '
name|'extension_name'
op|'='
op|'('
string|"'nova.api.openstack.compute.contrib.'"
nl|'\n'
string|"'block_device_mapping_v2_boot.'"
nl|'\n'
string|"'Block_device_mapping_v2_boot'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_flags
name|'def'
name|'_get_flags'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'f'
op|'='
name|'super'
op|'('
name|'BlockDeviceMappingV2BootJsonTest'
op|','
name|'self'
op|')'
op|'.'
name|'_get_flags'
op|'('
op|')'
newline|'\n'
name|'f'
op|'['
string|"'osapi_compute_extension'"
op|']'
op|'='
name|'CONF'
op|'.'
name|'osapi_compute_extension'
op|'['
op|':'
op|']'
newline|'\n'
comment|'# We need the volumes extension as well'
nl|'\n'
name|'f'
op|'['
string|"'osapi_compute_extension'"
op|']'
op|'.'
name|'append'
op|'('
nl|'\n'
string|"'nova.api.openstack.compute.contrib.volumes.Volumes'"
op|')'
newline|'\n'
name|'return'
name|'f'
newline|'\n'
nl|'\n'
DECL|member|test_servers_post_with_bdm_v2
dedent|''
name|'def'
name|'test_servers_post_with_bdm_v2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'cinder'
op|'.'
name|'API'
op|','
string|"'get'"
op|','
name|'fakes'
op|'.'
name|'stub_volume_get'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'cinder'
op|'.'
name|'API'
op|','
string|"'check_attach'"
op|','
nl|'\n'
name|'fakes'
op|'.'
name|'stub_volume_check_attach'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_post_server'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerGroupQuotas_LimitsSampleJsonTest
dedent|''
dedent|''
name|'class'
name|'ServerGroupQuotas_LimitsSampleJsonTest'
op|'('
name|'LimitsSampleJsonTest'
op|')'
op|':'
newline|'\n'
DECL|variable|sample_dir
indent|'    '
name|'sample_dir'
op|'='
name|'None'
newline|'\n'
DECL|variable|extension_name
name|'extension_name'
op|'='
op|'('
string|'"nova.api.openstack.compute.contrib."'
nl|'\n'
string|'"server_group_quotas.Server_group_quotas"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerGroupQuotas_UsedLimitsSamplesJsonTest
dedent|''
name|'class'
name|'ServerGroupQuotas_UsedLimitsSamplesJsonTest'
op|'('
name|'UsedLimitsSamplesJsonTest'
op|')'
op|':'
newline|'\n'
DECL|variable|extension_name
indent|'    '
name|'extension_name'
op|'='
op|'('
string|'"nova.api.openstack.compute.contrib."'
nl|'\n'
string|'"server_group_quotas.Server_group_quotas"'
op|')'
newline|'\n'
DECL|variable|extends_name
name|'extends_name'
op|'='
op|'('
string|'"nova.api.openstack.compute.contrib.used_limits."'
nl|'\n'
string|'"Used_limits"'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
