begin_unit
comment|'# Copyright 2015 Ericsson AB'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'api'
name|'as'
name|'db_api'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fixtures'
name|'as'
name|'nova_fixtures'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'functional'
op|'.'
name|'api'
name|'import'
name|'client'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'functional'
name|'import'
name|'api_paste_fixture'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'fake_network'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'policy_fixture'
newline|'\n'
nl|'\n'
name|'import'
name|'nova'
op|'.'
name|'scheduler'
op|'.'
name|'utils'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'servicegroup'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'image'
op|'.'
name|'fake'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
nl|'\n'
comment|'# An alternate project id'
nl|'\n'
DECL|variable|PROJECT_ID_ALT
name|'PROJECT_ID_ALT'
op|'='
string|'"616c6c796f7572626173656172656f73"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerGroupTestBase
name|'class'
name|'ServerGroupTestBase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|REQUIRES_LOCKING
indent|'    '
name|'REQUIRES_LOCKING'
op|'='
name|'True'
newline|'\n'
DECL|variable|api_major_version
name|'api_major_version'
op|'='
string|"'v2'"
newline|'\n'
DECL|variable|microversion
name|'microversion'
op|'='
name|'None'
newline|'\n'
DECL|variable|_image_ref_parameter
name|'_image_ref_parameter'
op|'='
string|"'imageRef'"
newline|'\n'
DECL|variable|_flavor_ref_parameter
name|'_flavor_ref_parameter'
op|'='
string|"'flavorRef'"
newline|'\n'
nl|'\n'
comment|'# Note(gibi): RamFilter is needed to ensure that'
nl|'\n'
comment|'# test_boot_servers_with_affinity_no_valid_host behaves as expected'
nl|'\n'
DECL|variable|_scheduler_default_filters
name|'_scheduler_default_filters'
op|'='
op|'('
string|"'ServerGroupAntiAffinityFilter'"
op|','
nl|'\n'
string|"'ServerGroupAffinityFilter'"
op|','
nl|'\n'
string|"'RamFilter'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Override servicegroup parameters to make the tests run faster'
nl|'\n'
DECL|variable|_service_down_time
name|'_service_down_time'
op|'='
number|'2'
newline|'\n'
DECL|variable|_report_interval
name|'_report_interval'
op|'='
number|'1'
newline|'\n'
nl|'\n'
DECL|variable|anti_affinity
name|'anti_affinity'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake-name-1'"
op|','
string|"'policies'"
op|':'
op|'['
string|"'anti-affinity'"
op|']'
op|'}'
newline|'\n'
DECL|variable|affinity
name|'affinity'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake-name-2'"
op|','
string|"'policies'"
op|':'
op|'['
string|"'affinity'"
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_get_weight_classes
name|'def'
name|'_get_weight_classes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ServerGroupTestBase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'scheduler_default_filters'
op|'='
name|'self'
op|'.'
name|'_scheduler_default_filters'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'scheduler_weight_classes'
op|'='
name|'self'
op|'.'
name|'_get_weight_classes'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'service_down_time'
op|'='
name|'self'
op|'.'
name|'_service_down_time'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'report_interval'
op|'='
name|'self'
op|'.'
name|'_report_interval'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'policy_fixture'
op|'.'
name|'RealPolicyFixture'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'api_major_version'
op|'=='
string|"'v2.1'"
op|':'
newline|'\n'
indent|'            '
name|'api_fixture'
op|'='
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'nova_fixtures'
op|'.'
name|'OSAPIFixture'
op|'('
nl|'\n'
name|'api_version'
op|'='
string|"'v2.1'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'api_paste_fixture'
op|'.'
name|'ApiPasteLegacyV2Fixture'
op|'('
op|')'
op|')'
newline|'\n'
name|'api_fixture'
op|'='
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'nova_fixtures'
op|'.'
name|'OSAPIFixture'
op|'('
nl|'\n'
name|'api_version'
op|'='
string|"'v2'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'api'
op|'='
name|'api_fixture'
op|'.'
name|'api'
newline|'\n'
name|'self'
op|'.'
name|'api'
op|'.'
name|'microversion'
op|'='
name|'self'
op|'.'
name|'microversion'
newline|'\n'
name|'self'
op|'.'
name|'admin_api'
op|'='
name|'api_fixture'
op|'.'
name|'admin_api'
newline|'\n'
name|'self'
op|'.'
name|'admin_api'
op|'.'
name|'microversion'
op|'='
name|'self'
op|'.'
name|'microversion'
newline|'\n'
nl|'\n'
comment|'# the image fake backend needed for image discovery'
nl|'\n'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'stub_out_image_service'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'conductor'"
op|','
name|'manager'
op|'='
name|'CONF'
op|'.'
name|'conductor'
op|'.'
name|'manager'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'scheduler'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'image'
op|'.'
name|'fake'
op|'.'
name|'FakeImageService_reset'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_wait_for_state_change
dedent|''
name|'def'
name|'_wait_for_state_change'
op|'('
name|'self'
op|','
name|'server'
op|','
name|'expected_status'
op|','
name|'max_retries'
op|'='
number|'10'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'retry_count'
op|'='
number|'0'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'='
name|'self'
op|'.'
name|'admin_api'
op|'.'
name|'get_server'
op|'('
name|'server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'server'
op|'['
string|"'status'"
op|']'
op|'=='
name|'expected_status'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'retry_count'
op|'+='
number|'1'
newline|'\n'
name|'if'
name|'retry_count'
op|'=='
name|'max_retries'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'Wait for state change failed, '"
nl|'\n'
string|"'expected_status=%s, actual_status=%s'"
nl|'\n'
op|'%'
op|'('
name|'expected_status'
op|','
name|'server'
op|'['
string|"'status'"
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'time'
op|'.'
name|'sleep'
op|'('
number|'0.5'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'server'
newline|'\n'
nl|'\n'
DECL|member|_boot_a_server_to_group
dedent|''
name|'def'
name|'_boot_a_server_to_group'
op|'('
name|'self'
op|','
name|'group'
op|','
nl|'\n'
name|'expected_status'
op|'='
string|"'ACTIVE'"
op|','
name|'flavor'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
name|'self'
op|'.'
name|'_build_minimal_create_server_request'
op|'('
string|"'some-server'"
op|')'
newline|'\n'
name|'if'
name|'flavor'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'['
name|'self'
op|'.'
name|'_flavor_ref_parameter'
op|']'
op|'='
op|'('
string|"'http://fake.server/%s'"
nl|'\n'
op|'%'
name|'flavor'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'post'
op|'='
op|'{'
string|"'server'"
op|':'
name|'server'
op|','
nl|'\n'
string|"'os:scheduler_hints'"
op|':'
op|'{'
string|"'group'"
op|':'
name|'group'
op|'['
string|"'id'"
op|']'
op|'}'
op|'}'
newline|'\n'
name|'created_server'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server'
op|'('
name|'post'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'created_server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Wait for it to finish being created'
nl|'\n'
name|'found_server'
op|'='
name|'self'
op|'.'
name|'_wait_for_state_change'
op|'('
name|'created_server'
op|','
nl|'\n'
name|'expected_status'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'found_server'
newline|'\n'
nl|'\n'
DECL|member|_build_minimal_create_server_request
dedent|''
name|'def'
name|'_build_minimal_create_server_request'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'image'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_images'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'_image_ref_parameter'
name|'in'
name|'image'
op|':'
newline|'\n'
indent|'            '
name|'image_href'
op|'='
name|'image'
op|'['
name|'self'
op|'.'
name|'_image_ref_parameter'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'image_href'
op|'='
name|'image'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'image_href'
op|'='
string|"'http://fake.server/%s'"
op|'%'
name|'image_href'
newline|'\n'
nl|'\n'
comment|'# We now have a valid imageId'
nl|'\n'
dedent|''
name|'server'
op|'['
name|'self'
op|'.'
name|'_image_ref_parameter'
op|']'
op|'='
name|'image_href'
newline|'\n'
nl|'\n'
comment|'# Set a valid flavorId'
nl|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_flavors'
op|'('
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'server'
op|'['
name|'self'
op|'.'
name|'_flavor_ref_parameter'
op|']'
op|'='
op|'('
string|"'http://fake.server/%s'"
nl|'\n'
op|'%'
name|'flavor'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'server'
op|'['
string|"'name'"
op|']'
op|'='
name|'name'
newline|'\n'
name|'return'
name|'server'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerGroupTestV2
dedent|''
dedent|''
name|'class'
name|'ServerGroupTestV2'
op|'('
name|'ServerGroupTestBase'
op|')'
op|':'
newline|'\n'
DECL|variable|api_major_version
indent|'    '
name|'api_major_version'
op|'='
string|"'v2'"
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ServerGroupTestV2'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'network'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(gibi): start a second compute host to be able to test affinity'
nl|'\n'
name|'self'
op|'.'
name|'compute2'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|','
name|'host'
op|'='
string|"'host2'"
op|')'
newline|'\n'
name|'fake_network'
op|'.'
name|'set_stub_network_methods'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_no_groups
dedent|''
name|'def'
name|'test_get_no_groups'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'groups'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_server_groups'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'groups'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_and_delete_groups
dedent|''
name|'def'
name|'test_create_and_delete_groups'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'groups'
op|'='
op|'['
name|'self'
op|'.'
name|'anti_affinity'
op|','
nl|'\n'
name|'self'
op|'.'
name|'affinity'
op|']'
newline|'\n'
name|'created_groups'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'group'
name|'in'
name|'groups'
op|':'
newline|'\n'
indent|'            '
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'group'
op|')'
newline|'\n'
name|'created_groups'
op|'.'
name|'append'
op|'('
name|'created_group'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'group'
op|'['
string|"'name'"
op|']'
op|','
name|'created_group'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'group'
op|'['
string|"'policies'"
op|']'
op|','
name|'created_group'
op|'['
string|"'policies'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'created_group'
op|'['
string|"'members'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
op|'}'
op|','
name|'created_group'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'id'"
op|','
name|'created_group'
op|')'
newline|'\n'
nl|'\n'
name|'group_details'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_server_group'
op|'('
name|'created_group'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'created_group'
op|','
name|'group_details'
op|')'
newline|'\n'
nl|'\n'
name|'existing_groups'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_server_groups'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'created_group'
op|','
name|'existing_groups'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'existing_groups'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_server_groups'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'groups'
op|')'
op|','
name|'len'
op|'('
name|'existing_groups'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'group'
name|'in'
name|'created_groups'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'api'
op|'.'
name|'delete_server_group'
op|'('
name|'group'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'existing_groups'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_server_groups'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
name|'group'
op|','
name|'existing_groups'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_wrong_policy
dedent|''
dedent|''
name|'def'
name|'test_create_wrong_policy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ex'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'client'
op|'.'
name|'OpenStackApiException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'fake-name-1'"
op|','
nl|'\n'
string|"'policies'"
op|':'
op|'['
string|"'wrong-policy'"
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'400'
op|','
name|'ex'
op|'.'
name|'response'
op|'.'
name|'status_code'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'Invalid input'"
op|','
name|'ex'
op|'.'
name|'response'
op|'.'
name|'text'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'wrong-policy'"
op|','
name|'ex'
op|'.'
name|'response'
op|'.'
name|'text'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_groups_all_projects
dedent|''
name|'def'
name|'test_get_groups_all_projects'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# This test requires APIs using two projects.'
nl|'\n'
nl|'\n'
comment|"# Create an API using project 'openstack1'."
nl|'\n'
comment|'# This is a non-admin API.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# NOTE(sdague): this is actually very much *not* how this'
nl|'\n'
comment|'# fixture should be used. This actually spawns a whole'
nl|'\n'
comment|'# additional API server. Should be addressed in the future.'
nl|'\n'
indent|'        '
name|'api_openstack1'
op|'='
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'nova_fixtures'
op|'.'
name|'OSAPIFixture'
op|'('
nl|'\n'
name|'api_version'
op|'='
name|'self'
op|'.'
name|'api_major_version'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'PROJECT_ID_ALT'
op|')'
op|')'
op|'.'
name|'api'
newline|'\n'
name|'api_openstack1'
op|'.'
name|'microversion'
op|'='
name|'self'
op|'.'
name|'microversion'
newline|'\n'
nl|'\n'
comment|"# Create a server group in project 'openstack'"
nl|'\n'
comment|"# Project 'openstack' is used by self.api"
nl|'\n'
name|'group1'
op|'='
name|'self'
op|'.'
name|'anti_affinity'
newline|'\n'
name|'openstack_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'group1'
op|')'
newline|'\n'
nl|'\n'
comment|"# Create a server group in project 'openstack1'"
nl|'\n'
name|'group2'
op|'='
name|'self'
op|'.'
name|'affinity'
newline|'\n'
name|'openstack1_group'
op|'='
name|'api_openstack1'
op|'.'
name|'post_server_groups'
op|'('
name|'group2'
op|')'
newline|'\n'
nl|'\n'
comment|'# The admin should be able to get server groups in all projects.'
nl|'\n'
name|'all_projects_admin'
op|'='
name|'self'
op|'.'
name|'admin_api'
op|'.'
name|'get_server_groups'
op|'('
nl|'\n'
name|'all_projects'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'openstack_group'
op|','
name|'all_projects_admin'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'openstack1_group'
op|','
name|'all_projects_admin'
op|')'
newline|'\n'
nl|'\n'
comment|'# The non-admin should only be able to get server groups'
nl|'\n'
comment|'# in his project.'
nl|'\n'
comment|'# The all_projects parameter is ignored for non-admin clients.'
nl|'\n'
name|'all_projects_non_admin'
op|'='
name|'api_openstack1'
op|'.'
name|'get_server_groups'
op|'('
nl|'\n'
name|'all_projects'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
name|'openstack_group'
op|','
name|'all_projects_non_admin'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'openstack1_group'
op|','
name|'all_projects_non_admin'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_duplicated_policy
dedent|''
name|'def'
name|'test_create_duplicated_policy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ex'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'client'
op|'.'
name|'OpenStackApiException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|','
nl|'\n'
op|'{'
string|'"name"'
op|':'
string|'"fake-name-1"'
op|','
nl|'\n'
string|'"policies"'
op|':'
op|'['
string|'"affinity"'
op|','
string|'"affinity"'
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'400'
op|','
name|'ex'
op|'.'
name|'response'
op|'.'
name|'status_code'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'Invalid input'"
op|','
name|'ex'
op|'.'
name|'response'
op|'.'
name|'text'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_multiple_policies
dedent|''
name|'def'
name|'test_create_multiple_policies'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ex'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'client'
op|'.'
name|'OpenStackApiException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|','
nl|'\n'
op|'{'
string|'"name"'
op|':'
string|'"fake-name-1"'
op|','
nl|'\n'
string|'"policies"'
op|':'
op|'['
string|'"anti-affinity"'
op|','
string|'"affinity"'
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'400'
op|','
name|'ex'
op|'.'
name|'response'
op|'.'
name|'status_code'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_boot_servers_to_group
dedent|''
name|'def'
name|'_boot_servers_to_group'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'flavor'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'servers'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'_'
name|'in'
name|'range'
op|'('
number|'0'
op|','
number|'2'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'='
name|'self'
op|'.'
name|'_boot_a_server_to_group'
op|'('
name|'group'
op|','
nl|'\n'
name|'flavor'
op|'='
name|'flavor'
op|')'
newline|'\n'
name|'servers'
op|'.'
name|'append'
op|'('
name|'server'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'servers'
newline|'\n'
nl|'\n'
DECL|member|test_boot_servers_with_affinity
dedent|''
name|'def'
name|'test_boot_servers_with_affinity'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'self'
op|'.'
name|'affinity'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'_boot_servers_to_group'
op|'('
name|'created_group'
op|')'
newline|'\n'
nl|'\n'
name|'members'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_server_group'
op|'('
name|'created_group'
op|'['
string|"'id'"
op|']'
op|')'
op|'['
string|"'members'"
op|']'
newline|'\n'
name|'host'
op|'='
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'servers'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'server'
op|'['
string|"'id'"
op|']'
op|','
name|'members'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'host'
op|','
name|'server'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_boot_servers_with_affinity_overquota
dedent|''
dedent|''
name|'def'
name|'test_boot_servers_with_affinity_overquota'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Tests that we check server group member quotas and cleanup created'
nl|'\n'
comment|'# resources when we fail with OverQuota.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'quota_server_group_members'
op|'='
number|'1'
op|')'
newline|'\n'
comment|'# make sure we start with 0 servers'
nl|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_servers'
op|'('
name|'detail'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'servers'
op|')'
op|')'
newline|'\n'
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'self'
op|'.'
name|'affinity'
op|')'
newline|'\n'
name|'ex'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'client'
op|'.'
name|'OpenStackApiException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_boot_servers_to_group'
op|','
nl|'\n'
name|'created_group'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'403'
op|','
name|'ex'
op|'.'
name|'response'
op|'.'
name|'status_code'
op|')'
newline|'\n'
comment|'# _boot_servers_to_group creates 2 instances in the group in order, not'
nl|'\n'
comment|'# multiple servers in a single request. Since our quota is 1, the first'
nl|'\n'
comment|'# server create would pass, the second should fail, and we should be'
nl|'\n'
comment|"# left with 1 server and it's 1 block device mapping."
nl|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_servers'
op|'('
name|'detail'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'servers'
op|')'
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'servers'
op|'='
name|'db'
op|'.'
name|'instance_get_all'
op|'('
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'servers'
op|')'
op|')'
newline|'\n'
name|'ctxt_mgr'
op|'='
name|'db_api'
op|'.'
name|'get_context_manager'
op|'('
name|'ctxt'
op|')'
newline|'\n'
name|'with'
name|'ctxt_mgr'
op|'.'
name|'reader'
op|'.'
name|'using'
op|'('
name|'ctxt'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'bdms'
op|'='
name|'db_api'
op|'.'
name|'_block_device_mapping_get_query'
op|'('
name|'ctxt'
op|')'
op|'.'
name|'all'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'bdms'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'uuid'"
op|']'
op|','
name|'bdms'
op|'['
number|'0'
op|']'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_boot_servers_with_affinity_no_valid_host
dedent|''
name|'def'
name|'test_boot_servers_with_affinity_no_valid_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'self'
op|'.'
name|'affinity'
op|')'
newline|'\n'
comment|'# Using big enough flavor to use up the resources on the host'
nl|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_flavors'
op|'('
op|')'
op|'['
number|'2'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_boot_servers_to_group'
op|'('
name|'created_group'
op|','
name|'flavor'
op|'='
name|'flavor'
op|')'
newline|'\n'
nl|'\n'
comment|'# The third server cannot be booted as there is not enough resource'
nl|'\n'
comment|'# on the host where the first two server was booted'
nl|'\n'
name|'failed_server'
op|'='
name|'self'
op|'.'
name|'_boot_a_server_to_group'
op|'('
name|'created_group'
op|','
nl|'\n'
name|'flavor'
op|'='
name|'flavor'
op|','
nl|'\n'
name|'expected_status'
op|'='
string|"'ERROR'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'No valid host was found. '"
nl|'\n'
string|"'There are not enough hosts available.'"
op|','
nl|'\n'
name|'failed_server'
op|'['
string|"'fault'"
op|']'
op|'['
string|"'message'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_boot_servers_with_anti_affinity
dedent|''
name|'def'
name|'test_boot_servers_with_anti_affinity'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'self'
op|'.'
name|'anti_affinity'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'_boot_servers_to_group'
op|'('
name|'created_group'
op|')'
newline|'\n'
nl|'\n'
name|'members'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_server_group'
op|'('
name|'created_group'
op|'['
string|"'id'"
op|']'
op|')'
op|'['
string|"'members'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|','
nl|'\n'
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'servers'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'server'
op|'['
string|"'id'"
op|']'
op|','
name|'members'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_boot_server_with_anti_affinity_no_valid_host
dedent|''
dedent|''
name|'def'
name|'test_boot_server_with_anti_affinity_no_valid_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'self'
op|'.'
name|'anti_affinity'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_boot_servers_to_group'
op|'('
name|'created_group'
op|')'
newline|'\n'
nl|'\n'
comment|"# We have 2 computes so the third server won't fit into the same group"
nl|'\n'
name|'failed_server'
op|'='
name|'self'
op|'.'
name|'_boot_a_server_to_group'
op|'('
name|'created_group'
op|','
nl|'\n'
name|'expected_status'
op|'='
string|"'ERROR'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'No valid host was found. '"
nl|'\n'
string|"'There are not enough hosts available.'"
op|','
nl|'\n'
name|'failed_server'
op|'['
string|"'fault'"
op|']'
op|'['
string|"'message'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_rebuild_with_group
dedent|''
name|'def'
name|'_rebuild_with_group'
op|'('
name|'self'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'group'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'_boot_servers_to_group'
op|'('
name|'created_group'
op|')'
newline|'\n'
nl|'\n'
name|'post'
op|'='
op|'{'
string|"'rebuild'"
op|':'
op|'{'
name|'self'
op|'.'
name|'_image_ref_parameter'
op|':'
nl|'\n'
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_action'
op|'('
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'post'
op|')'
newline|'\n'
nl|'\n'
name|'rebuilt_server'
op|'='
name|'self'
op|'.'
name|'_wait_for_state_change'
op|'('
name|'servers'
op|'['
number|'1'
op|']'
op|','
string|"'ACTIVE'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'post'
op|'['
string|"'rebuild'"
op|']'
op|'['
name|'self'
op|'.'
name|'_image_ref_parameter'
op|']'
op|','
nl|'\n'
name|'rebuilt_server'
op|'.'
name|'get'
op|'('
string|"'image'"
op|')'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'return'
op|'['
name|'servers'
op|'['
number|'0'
op|']'
op|','
name|'rebuilt_server'
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_with_affinity
dedent|''
name|'def'
name|'test_rebuild_with_affinity'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'untouched_server'
op|','
name|'rebuilt_server'
op|'='
name|'self'
op|'.'
name|'_rebuild_with_group'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'affinity'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'untouched_server'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|','
nl|'\n'
name|'rebuilt_server'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_with_anti_affinity
dedent|''
name|'def'
name|'test_rebuild_with_anti_affinity'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'untouched_server'
op|','
name|'rebuilt_server'
op|'='
name|'self'
op|'.'
name|'_rebuild_with_group'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'anti_affinity'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'untouched_server'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|','
nl|'\n'
name|'rebuilt_server'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_migrate_with_group_no_valid_host
dedent|''
name|'def'
name|'_migrate_with_group_no_valid_host'
op|'('
name|'self'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'group'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'_boot_servers_to_group'
op|'('
name|'created_group'
op|')'
newline|'\n'
nl|'\n'
name|'post'
op|'='
op|'{'
string|"'migrate'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'ex'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'client'
op|'.'
name|'OpenStackApiException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'admin_api'
op|'.'
name|'post_server_action'
op|','
nl|'\n'
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'post'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'400'
op|','
name|'ex'
op|'.'
name|'response'
op|'.'
name|'status_code'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'No valid host found for cold migrate'"
op|','
name|'ex'
op|'.'
name|'response'
op|'.'
name|'text'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_with_group_no_valid_host
dedent|''
name|'def'
name|'test_migrate_with_group_no_valid_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'group'
name|'in'
op|'['
name|'self'
op|'.'
name|'affinity'
op|','
name|'self'
op|'.'
name|'anti_affinity'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_migrate_with_group_no_valid_host'
op|'('
name|'group'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_with_anti_affinity
dedent|''
dedent|''
name|'def'
name|'test_migrate_with_anti_affinity'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Start additional host to test migration with anti-affinity'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|','
name|'host'
op|'='
string|"'host3'"
op|')'
newline|'\n'
nl|'\n'
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'self'
op|'.'
name|'anti_affinity'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'_boot_servers_to_group'
op|'('
name|'created_group'
op|')'
newline|'\n'
nl|'\n'
name|'post'
op|'='
op|'{'
string|"'migrate'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'admin_api'
op|'.'
name|'post_server_action'
op|'('
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'post'
op|')'
newline|'\n'
name|'migrated_server'
op|'='
name|'self'
op|'.'
name|'_wait_for_state_change'
op|'('
name|'servers'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'VERIFY_RESIZE'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|','
nl|'\n'
name|'migrated_server'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_compute_service_by_host_name
dedent|''
name|'def'
name|'_get_compute_service_by_host_name'
op|'('
name|'self'
op|','
name|'host_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|'=='
name|'host_name'
op|':'
newline|'\n'
indent|'            '
name|'host'
op|'='
name|'self'
op|'.'
name|'compute'
newline|'\n'
dedent|''
name|'elif'
name|'self'
op|'.'
name|'compute2'
op|'.'
name|'host'
op|'=='
name|'host_name'
op|':'
newline|'\n'
indent|'            '
name|'host'
op|'='
name|'self'
op|'.'
name|'compute2'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'AssertionError'
op|'('
string|"'host = %s does not found in '"
nl|'\n'
string|"'existing hosts %s'"
op|'%'
nl|'\n'
op|'('
name|'host_name'
op|','
name|'str'
op|'('
op|'['
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|','
nl|'\n'
name|'self'
op|'.'
name|'compute2'
op|'.'
name|'host'
op|']'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'host'
newline|'\n'
nl|'\n'
DECL|member|test_evacuate_with_anti_affinity
dedent|''
name|'def'
name|'test_evacuate_with_anti_affinity'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'self'
op|'.'
name|'anti_affinity'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'_boot_servers_to_group'
op|'('
name|'created_group'
op|')'
newline|'\n'
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'_get_compute_service_by_host_name'
op|'('
nl|'\n'
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|')'
newline|'\n'
name|'host'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
comment|'# Need to wait service_down_time amount of seconds to ensure'
nl|'\n'
comment|'# nova considers the host down'
nl|'\n'
name|'time'
op|'.'
name|'sleep'
op|'('
name|'self'
op|'.'
name|'_service_down_time'
op|')'
newline|'\n'
nl|'\n'
comment|'# Start additional host to test evacuation'
nl|'\n'
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|','
name|'host'
op|'='
string|"'host3'"
op|')'
newline|'\n'
nl|'\n'
name|'post'
op|'='
op|'{'
string|"'evacuate'"
op|':'
op|'{'
string|"'onSharedStorage'"
op|':'
name|'False'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'admin_api'
op|'.'
name|'post_server_action'
op|'('
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'post'
op|')'
newline|'\n'
name|'evacuated_server'
op|'='
name|'self'
op|'.'
name|'_wait_for_state_change'
op|'('
name|'servers'
op|'['
number|'1'
op|']'
op|','
string|"'ACTIVE'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'evacuated_server'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|','
nl|'\n'
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'host'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_evacuate_with_anti_affinity_no_valid_host
dedent|''
name|'def'
name|'test_evacuate_with_anti_affinity_no_valid_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'self'
op|'.'
name|'anti_affinity'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'_boot_servers_to_group'
op|'('
name|'created_group'
op|')'
newline|'\n'
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'_get_compute_service_by_host_name'
op|'('
nl|'\n'
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|')'
newline|'\n'
name|'host'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
comment|'# Need to wait service_down_time amount of seconds to ensure'
nl|'\n'
comment|'# nova considers the host down'
nl|'\n'
name|'time'
op|'.'
name|'sleep'
op|'('
name|'self'
op|'.'
name|'_service_down_time'
op|')'
newline|'\n'
nl|'\n'
name|'post'
op|'='
op|'{'
string|"'evacuate'"
op|':'
op|'{'
string|"'onSharedStorage'"
op|':'
name|'False'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'admin_api'
op|'.'
name|'post_server_action'
op|'('
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'post'
op|')'
newline|'\n'
nl|'\n'
name|'server_after_failed_evac'
op|'='
name|'self'
op|'.'
name|'_wait_for_state_change'
op|'('
name|'servers'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'ACTIVE'"
op|')'
newline|'\n'
nl|'\n'
comment|'# assert that after a failed evac the server active on the same host'
nl|'\n'
comment|'# as before'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'server_after_failed_evac'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|','
nl|'\n'
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'host'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_evacuate_with_affinity_no_valid_host
dedent|''
name|'def'
name|'test_evacuate_with_affinity_no_valid_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'self'
op|'.'
name|'affinity'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'_boot_servers_to_group'
op|'('
name|'created_group'
op|')'
newline|'\n'
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'_get_compute_service_by_host_name'
op|'('
nl|'\n'
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|')'
newline|'\n'
name|'host'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
comment|'# Need to wait service_down_time amount of seconds to ensure'
nl|'\n'
comment|'# nova considers the host down'
nl|'\n'
name|'time'
op|'.'
name|'sleep'
op|'('
name|'self'
op|'.'
name|'_service_down_time'
op|')'
newline|'\n'
nl|'\n'
name|'post'
op|'='
op|'{'
string|"'evacuate'"
op|':'
op|'{'
string|"'onSharedStorage'"
op|':'
name|'False'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'admin_api'
op|'.'
name|'post_server_action'
op|'('
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'post'
op|')'
newline|'\n'
nl|'\n'
name|'server_after_failed_evac'
op|'='
name|'self'
op|'.'
name|'_wait_for_state_change'
op|'('
name|'servers'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'ACTIVE'"
op|')'
newline|'\n'
nl|'\n'
comment|'# assert that after a failed evac the server active on the same host'
nl|'\n'
comment|'# as before'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'server_after_failed_evac'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|','
nl|'\n'
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'host'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerGroupAffinityConfTest
dedent|''
dedent|''
name|'class'
name|'ServerGroupAffinityConfTest'
op|'('
name|'ServerGroupTestBase'
op|')'
op|':'
newline|'\n'
DECL|variable|api_major_version
indent|'    '
name|'api_major_version'
op|'='
string|"'v2.1'"
newline|'\n'
comment|'# Load only anti-affinity filter so affinity will be missing'
nl|'\n'
DECL|variable|_scheduler_default_filters
name|'_scheduler_default_filters'
op|'='
string|"'ServerGroupAntiAffinityFilter'"
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.scheduler.utils._SUPPORTS_AFFINITY'"
op|','
name|'None'
op|')'
newline|'\n'
DECL|member|test_affinity_no_filter
name|'def'
name|'test_affinity_no_filter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'self'
op|'.'
name|'affinity'
op|')'
newline|'\n'
nl|'\n'
name|'failed_server'
op|'='
name|'self'
op|'.'
name|'_boot_a_server_to_group'
op|'('
name|'created_group'
op|','
nl|'\n'
name|'expected_status'
op|'='
string|"'ERROR'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'ServerGroup policy is not supported: '"
nl|'\n'
string|"'ServerGroupAffinityFilter not configured'"
op|','
nl|'\n'
name|'failed_server'
op|'['
string|"'fault'"
op|']'
op|'['
string|"'message'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'400'
op|','
name|'failed_server'
op|'['
string|"'fault'"
op|']'
op|'['
string|"'code'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerGroupAntiAffinityConfTest
dedent|''
dedent|''
name|'class'
name|'ServerGroupAntiAffinityConfTest'
op|'('
name|'ServerGroupTestBase'
op|')'
op|':'
newline|'\n'
DECL|variable|api_major_version
indent|'    '
name|'api_major_version'
op|'='
string|"'v2.1'"
newline|'\n'
comment|'# Load only affinity filter so anti-affinity will be missing'
nl|'\n'
DECL|variable|_scheduler_default_filters
name|'_scheduler_default_filters'
op|'='
string|"'ServerGroupAffinityFilter'"
newline|'\n'
nl|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.scheduler.utils._SUPPORTS_ANTI_AFFINITY'"
op|','
name|'None'
op|')'
newline|'\n'
DECL|member|test_anti_affinity_no_filter
name|'def'
name|'test_anti_affinity_no_filter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'self'
op|'.'
name|'anti_affinity'
op|')'
newline|'\n'
nl|'\n'
name|'failed_server'
op|'='
name|'self'
op|'.'
name|'_boot_a_server_to_group'
op|'('
name|'created_group'
op|','
nl|'\n'
name|'expected_status'
op|'='
string|"'ERROR'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'ServerGroup policy is not supported: '"
nl|'\n'
string|"'ServerGroupAntiAffinityFilter not configured'"
op|','
nl|'\n'
name|'failed_server'
op|'['
string|"'fault'"
op|']'
op|'['
string|"'message'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'400'
op|','
name|'failed_server'
op|'['
string|"'fault'"
op|']'
op|'['
string|"'code'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerGroupSoftAffinityConfTest
dedent|''
dedent|''
name|'class'
name|'ServerGroupSoftAffinityConfTest'
op|'('
name|'ServerGroupTestBase'
op|')'
op|':'
newline|'\n'
DECL|variable|api_major_version
indent|'    '
name|'api_major_version'
op|'='
string|"'v2.1'"
newline|'\n'
DECL|variable|microversion
name|'microversion'
op|'='
string|"'2.15'"
newline|'\n'
DECL|variable|soft_affinity
name|'soft_affinity'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake-name-4'"
op|','
nl|'\n'
string|"'policies'"
op|':'
op|'['
string|"'soft-affinity'"
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_get_weight_classes
name|'def'
name|'_get_weight_classes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Load only soft-anti-affinity weigher so affinity will be missing'
nl|'\n'
indent|'        '
name|'return'
op|'['
string|"'nova.scheduler.weights.affinity.'"
nl|'\n'
string|"'ServerGroupSoftAntiAffinityWeigher'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.scheduler.utils._SUPPORTS_SOFT_AFFINITY'"
op|','
name|'None'
op|')'
newline|'\n'
DECL|member|test_soft_affinity_no_filter
name|'def'
name|'test_soft_affinity_no_filter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'self'
op|'.'
name|'soft_affinity'
op|')'
newline|'\n'
nl|'\n'
name|'failed_server'
op|'='
name|'self'
op|'.'
name|'_boot_a_server_to_group'
op|'('
name|'created_group'
op|','
nl|'\n'
name|'expected_status'
op|'='
string|"'ERROR'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'ServerGroup policy is not supported: '"
nl|'\n'
string|"'ServerGroupSoftAffinityWeigher not configured'"
op|','
nl|'\n'
name|'failed_server'
op|'['
string|"'fault'"
op|']'
op|'['
string|"'message'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'400'
op|','
name|'failed_server'
op|'['
string|"'fault'"
op|']'
op|'['
string|"'code'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerGroupSoftAntiAffinityConfTest
dedent|''
dedent|''
name|'class'
name|'ServerGroupSoftAntiAffinityConfTest'
op|'('
name|'ServerGroupTestBase'
op|')'
op|':'
newline|'\n'
DECL|variable|api_major_version
indent|'    '
name|'api_major_version'
op|'='
string|"'v2.1'"
newline|'\n'
DECL|variable|microversion
name|'microversion'
op|'='
string|"'2.15'"
newline|'\n'
DECL|variable|soft_anti_affinity
name|'soft_anti_affinity'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake-name-3'"
op|','
nl|'\n'
string|"'policies'"
op|':'
op|'['
string|"'soft-anti-affinity'"
op|']'
op|'}'
newline|'\n'
nl|'\n'
comment|'# Load only soft affinity filter so anti-affinity will be missing'
nl|'\n'
DECL|variable|_scheduler_weight_classes
name|'_scheduler_weight_classes'
op|'='
op|'['
string|"'nova.scheduler.weights.affinity.'"
nl|'\n'
string|"'ServerGroupSoftAffinityWeigher'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|_get_weight_classes
name|'def'
name|'_get_weight_classes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Load only soft affinity filter so anti-affinity will be missing'
nl|'\n'
indent|'        '
name|'return'
op|'['
string|"'nova.scheduler.weights.affinity.'"
nl|'\n'
string|"'ServerGroupSoftAffinityWeigher'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.scheduler.utils._SUPPORTS_SOFT_ANTI_AFFINITY'"
op|','
name|'None'
op|')'
newline|'\n'
DECL|member|test_soft_anti_affinity_no_filter
name|'def'
name|'test_soft_anti_affinity_no_filter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'self'
op|'.'
name|'soft_anti_affinity'
op|')'
newline|'\n'
nl|'\n'
name|'failed_server'
op|'='
name|'self'
op|'.'
name|'_boot_a_server_to_group'
op|'('
name|'created_group'
op|','
nl|'\n'
name|'expected_status'
op|'='
string|"'ERROR'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'ServerGroup policy is not supported: '"
nl|'\n'
string|"'ServerGroupSoftAntiAffinityWeigher not configured'"
op|','
nl|'\n'
name|'failed_server'
op|'['
string|"'fault'"
op|']'
op|'['
string|"'message'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'400'
op|','
name|'failed_server'
op|'['
string|"'fault'"
op|']'
op|'['
string|"'code'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerGroupTestV21
dedent|''
dedent|''
name|'class'
name|'ServerGroupTestV21'
op|'('
name|'ServerGroupTestV2'
op|')'
op|':'
newline|'\n'
DECL|variable|api_major_version
indent|'    '
name|'api_major_version'
op|'='
string|"'v2.1'"
newline|'\n'
nl|'\n'
DECL|member|test_soft_affinity_not_supported
name|'def'
name|'test_soft_affinity_not_supported'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ex'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'client'
op|'.'
name|'OpenStackApiException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'fake-name-1'"
op|','
nl|'\n'
string|"'policies'"
op|':'
op|'['
string|"'soft-affinity'"
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'400'
op|','
name|'ex'
op|'.'
name|'response'
op|'.'
name|'status_code'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'Invalid input'"
op|','
name|'ex'
op|'.'
name|'response'
op|'.'
name|'text'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'soft-affinity'"
op|','
name|'ex'
op|'.'
name|'response'
op|'.'
name|'text'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerGroupTestV215
dedent|''
dedent|''
name|'class'
name|'ServerGroupTestV215'
op|'('
name|'ServerGroupTestV2'
op|')'
op|':'
newline|'\n'
DECL|variable|api_major_version
indent|'    '
name|'api_major_version'
op|'='
string|"'v2.1'"
newline|'\n'
DECL|variable|microversion
name|'microversion'
op|'='
string|"'2.15'"
newline|'\n'
nl|'\n'
DECL|variable|soft_anti_affinity
name|'soft_anti_affinity'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake-name-3'"
op|','
nl|'\n'
string|"'policies'"
op|':'
op|'['
string|"'soft-anti-affinity'"
op|']'
op|'}'
newline|'\n'
DECL|variable|soft_affinity
name|'soft_affinity'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'fake-name-4'"
op|','
nl|'\n'
string|"'policies'"
op|':'
op|'['
string|"'soft-affinity'"
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ServerGroupTestV215'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'soft_affinity_patcher'
op|'='
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
string|"'nova.scheduler.utils._SUPPORTS_SOFT_AFFINITY'"
op|')'
newline|'\n'
name|'soft_anti_affinity_patcher'
op|'='
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
string|"'nova.scheduler.utils._SUPPORTS_SOFT_ANTI_AFFINITY'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'soft_affinity_patcher'
op|'.'
name|'stop'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'soft_anti_affinity_patcher'
op|'.'
name|'stop'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_soft_affinity'
op|'='
name|'soft_affinity_patcher'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_soft_anti_affinity'
op|'='
name|'soft_anti_affinity_patcher'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_soft_affinity'
op|'.'
name|'return_value'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'mock_soft_anti_affinity'
op|'.'
name|'return_value'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_get_weight_classes
dedent|''
name|'def'
name|'_get_weight_classes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
string|"'nova.scheduler.weights.affinity.'"
nl|'\n'
string|"'ServerGroupSoftAffinityWeigher'"
op|','
nl|'\n'
string|"'nova.scheduler.weights.affinity.'"
nl|'\n'
string|"'ServerGroupSoftAntiAffinityWeigher'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_evacuate_with_anti_affinity
dedent|''
name|'def'
name|'test_evacuate_with_anti_affinity'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'self'
op|'.'
name|'anti_affinity'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'_boot_servers_to_group'
op|'('
name|'created_group'
op|')'
newline|'\n'
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'_get_compute_service_by_host_name'
op|'('
nl|'\n'
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|')'
newline|'\n'
name|'host'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
comment|'# Need to wait service_down_time amount of seconds to ensure'
nl|'\n'
comment|'# nova considers the host down'
nl|'\n'
name|'time'
op|'.'
name|'sleep'
op|'('
name|'self'
op|'.'
name|'_service_down_time'
op|')'
newline|'\n'
nl|'\n'
comment|'# Start additional host to test evacuation'
nl|'\n'
name|'compute3'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|','
name|'host'
op|'='
string|"'host3'"
op|')'
newline|'\n'
nl|'\n'
name|'post'
op|'='
op|'{'
string|"'evacuate'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'admin_api'
op|'.'
name|'post_server_action'
op|'('
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'post'
op|')'
newline|'\n'
name|'evacuated_server'
op|'='
name|'self'
op|'.'
name|'_wait_for_state_change'
op|'('
name|'servers'
op|'['
number|'1'
op|']'
op|','
string|"'ACTIVE'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'evacuated_server'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|','
nl|'\n'
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'compute3'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'host'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_evacuate_with_anti_affinity_no_valid_host
dedent|''
name|'def'
name|'test_evacuate_with_anti_affinity_no_valid_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'self'
op|'.'
name|'anti_affinity'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'_boot_servers_to_group'
op|'('
name|'created_group'
op|')'
newline|'\n'
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'_get_compute_service_by_host_name'
op|'('
nl|'\n'
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|')'
newline|'\n'
name|'host'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
comment|'# Need to wait service_down_time amount of seconds to ensure'
nl|'\n'
comment|'# nova considers the host down'
nl|'\n'
name|'time'
op|'.'
name|'sleep'
op|'('
name|'self'
op|'.'
name|'_service_down_time'
op|')'
newline|'\n'
nl|'\n'
name|'post'
op|'='
op|'{'
string|"'evacuate'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'admin_api'
op|'.'
name|'post_server_action'
op|'('
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'post'
op|')'
newline|'\n'
nl|'\n'
name|'server_after_failed_evac'
op|'='
name|'self'
op|'.'
name|'_wait_for_state_change'
op|'('
name|'servers'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'ACTIVE'"
op|')'
newline|'\n'
nl|'\n'
comment|'# assert that after a failed evac the server active on the same host'
nl|'\n'
comment|'# as before'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'server_after_failed_evac'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|','
nl|'\n'
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'host'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_evacuate_with_affinity_no_valid_host
dedent|''
name|'def'
name|'test_evacuate_with_affinity_no_valid_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'self'
op|'.'
name|'affinity'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'_boot_servers_to_group'
op|'('
name|'created_group'
op|')'
newline|'\n'
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'_get_compute_service_by_host_name'
op|'('
nl|'\n'
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|')'
newline|'\n'
name|'host'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
comment|'# Need to wait service_down_time amount of seconds to ensure'
nl|'\n'
comment|'# nova considers the host down'
nl|'\n'
name|'time'
op|'.'
name|'sleep'
op|'('
name|'self'
op|'.'
name|'_service_down_time'
op|')'
newline|'\n'
nl|'\n'
name|'post'
op|'='
op|'{'
string|"'evacuate'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'admin_api'
op|'.'
name|'post_server_action'
op|'('
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'post'
op|')'
newline|'\n'
nl|'\n'
name|'server_after_failed_evac'
op|'='
name|'self'
op|'.'
name|'_wait_for_state_change'
op|'('
name|'servers'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'ACTIVE'"
op|')'
newline|'\n'
nl|'\n'
comment|'# assert that after a failed evac the server active on the same host'
nl|'\n'
comment|'# as before'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'server_after_failed_evac'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|','
nl|'\n'
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'host'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_and_delete_groups
dedent|''
name|'def'
name|'test_create_and_delete_groups'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'groups'
op|'='
op|'['
name|'self'
op|'.'
name|'anti_affinity'
op|','
nl|'\n'
name|'self'
op|'.'
name|'affinity'
op|','
nl|'\n'
name|'self'
op|'.'
name|'soft_affinity'
op|','
nl|'\n'
name|'self'
op|'.'
name|'soft_anti_affinity'
op|']'
newline|'\n'
nl|'\n'
name|'created_groups'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'group'
name|'in'
name|'groups'
op|':'
newline|'\n'
indent|'            '
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'group'
op|')'
newline|'\n'
name|'created_groups'
op|'.'
name|'append'
op|'('
name|'created_group'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'group'
op|'['
string|"'name'"
op|']'
op|','
name|'created_group'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'group'
op|'['
string|"'policies'"
op|']'
op|','
name|'created_group'
op|'['
string|"'policies'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'created_group'
op|'['
string|"'members'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
op|'}'
op|','
name|'created_group'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'id'"
op|','
name|'created_group'
op|')'
newline|'\n'
nl|'\n'
name|'group_details'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_server_group'
op|'('
name|'created_group'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'created_group'
op|','
name|'group_details'
op|')'
newline|'\n'
nl|'\n'
name|'existing_groups'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_server_groups'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'created_group'
op|','
name|'existing_groups'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'existing_groups'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_server_groups'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'groups'
op|')'
op|','
name|'len'
op|'('
name|'existing_groups'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'group'
name|'in'
name|'created_groups'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'api'
op|'.'
name|'delete_server_group'
op|'('
name|'group'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'existing_groups'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_server_groups'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
name|'group'
op|','
name|'existing_groups'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_boot_servers_with_soft_affinity
dedent|''
dedent|''
name|'def'
name|'test_boot_servers_with_soft_affinity'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'self'
op|'.'
name|'soft_affinity'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'_boot_servers_to_group'
op|'('
name|'created_group'
op|')'
newline|'\n'
name|'members'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_server_group'
op|'('
name|'created_group'
op|'['
string|"'id'"
op|']'
op|')'
op|'['
string|"'members'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'servers'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'members'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'members'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|','
nl|'\n'
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_boot_servers_with_soft_affinity_no_resource_on_first_host
dedent|''
name|'def'
name|'test_boot_servers_with_soft_affinity_no_resource_on_first_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'self'
op|'.'
name|'soft_affinity'
op|')'
newline|'\n'
nl|'\n'
comment|'# Using big enough flavor to use up the resources on the first host'
nl|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_flavors'
op|'('
op|')'
op|'['
number|'2'
op|']'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'_boot_servers_to_group'
op|'('
name|'created_group'
op|','
name|'flavor'
op|')'
newline|'\n'
nl|'\n'
comment|'# The third server cannot be booted on the first host as there'
nl|'\n'
comment|'# is not enough resource there, but as opposed to the affinity policy'
nl|'\n'
comment|'# it will be booted on the other host, which has enough resources.'
nl|'\n'
name|'third_server'
op|'='
name|'self'
op|'.'
name|'_boot_a_server_to_group'
op|'('
name|'created_group'
op|','
nl|'\n'
name|'flavor'
op|'='
name|'flavor'
op|')'
newline|'\n'
name|'members'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_server_group'
op|'('
name|'created_group'
op|'['
string|"'id'"
op|']'
op|')'
op|'['
string|"'members'"
op|']'
newline|'\n'
name|'hosts'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'servers'
op|':'
newline|'\n'
indent|'            '
name|'hosts'
op|'.'
name|'append'
op|'('
name|'server'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'third_server'
op|'['
string|"'id'"
op|']'
op|','
name|'members'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
name|'third_server'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|','
name|'hosts'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_boot_servers_with_soft_anti_affinity
dedent|''
name|'def'
name|'test_boot_servers_with_soft_anti_affinity'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'self'
op|'.'
name|'soft_anti_affinity'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'_boot_servers_to_group'
op|'('
name|'created_group'
op|')'
newline|'\n'
name|'members'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_server_group'
op|'('
name|'created_group'
op|'['
string|"'id'"
op|']'
op|')'
op|'['
string|"'members'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'servers'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'members'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'members'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|','
nl|'\n'
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_boot_servers_with_soft_anti_affinity_one_available_host
dedent|''
name|'def'
name|'test_boot_servers_with_soft_anti_affinity_one_available_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'compute2'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'self'
op|'.'
name|'soft_anti_affinity'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'_boot_servers_to_group'
op|'('
name|'created_group'
op|')'
newline|'\n'
nl|'\n'
name|'members'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'get_server_group'
op|'('
name|'created_group'
op|'['
string|"'id'"
op|']'
op|')'
op|'['
string|"'members'"
op|']'
newline|'\n'
name|'host'
op|'='
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'servers'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'server'
op|'['
string|"'id'"
op|']'
op|','
name|'members'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'host'
op|','
name|'server'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_with_soft_affinity
dedent|''
dedent|''
name|'def'
name|'test_rebuild_with_soft_affinity'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'untouched_server'
op|','
name|'rebuilt_server'
op|'='
name|'self'
op|'.'
name|'_rebuild_with_group'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'soft_affinity'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'untouched_server'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|','
nl|'\n'
name|'rebuilt_server'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_with_soft_anti_affinity
dedent|''
name|'def'
name|'test_rebuild_with_soft_anti_affinity'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'untouched_server'
op|','
name|'rebuilt_server'
op|'='
name|'self'
op|'.'
name|'_rebuild_with_group'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'soft_anti_affinity'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'untouched_server'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|','
nl|'\n'
name|'rebuilt_server'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_migrate_with_soft_affinity_policies
dedent|''
name|'def'
name|'_migrate_with_soft_affinity_policies'
op|'('
name|'self'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'group'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'_boot_servers_to_group'
op|'('
name|'created_group'
op|')'
newline|'\n'
nl|'\n'
name|'post'
op|'='
op|'{'
string|"'migrate'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'admin_api'
op|'.'
name|'post_server_action'
op|'('
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'post'
op|')'
newline|'\n'
name|'migrated_server'
op|'='
name|'self'
op|'.'
name|'_wait_for_state_change'
op|'('
name|'servers'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'VERIFY_RESIZE'"
op|')'
newline|'\n'
nl|'\n'
name|'return'
op|'['
name|'migrated_server'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|','
nl|'\n'
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_with_soft_affinity
dedent|''
name|'def'
name|'test_migrate_with_soft_affinity'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'migrated_server'
op|','
name|'other_server'
op|'='
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_migrate_with_soft_affinity_policies'
op|'('
name|'self'
op|'.'
name|'soft_affinity'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'migrated_server'
op|','
name|'other_server'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_migrate_with_soft_anti_affinity
dedent|''
name|'def'
name|'test_migrate_with_soft_anti_affinity'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'migrated_server'
op|','
name|'other_server'
op|'='
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_migrate_with_soft_affinity_policies'
op|'('
name|'self'
op|'.'
name|'soft_anti_affinity'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'migrated_server'
op|','
name|'other_server'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_evacuate_with_soft_anti_affinity_policies
dedent|''
name|'def'
name|'_evacuate_with_soft_anti_affinity_policies'
op|'('
name|'self'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'created_group'
op|'='
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_server_groups'
op|'('
name|'group'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'_boot_servers_to_group'
op|'('
name|'created_group'
op|')'
newline|'\n'
nl|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'_get_compute_service_by_host_name'
op|'('
nl|'\n'
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|')'
newline|'\n'
name|'host'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
comment|'# Need to wait service_down_time amount of seconds to ensure'
nl|'\n'
comment|'# nova considers the host down'
nl|'\n'
name|'time'
op|'.'
name|'sleep'
op|'('
name|'self'
op|'.'
name|'_service_down_time'
op|')'
newline|'\n'
nl|'\n'
name|'post'
op|'='
op|'{'
string|"'evacuate'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'admin_api'
op|'.'
name|'post_server_action'
op|'('
name|'servers'
op|'['
number|'1'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'post'
op|')'
newline|'\n'
name|'evacuated_server'
op|'='
name|'self'
op|'.'
name|'_wait_for_state_change'
op|'('
name|'servers'
op|'['
number|'1'
op|']'
op|','
string|"'ACTIVE'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Note(gibi): need to get the server again as the state of the instance'
nl|'\n'
comment|'# goes to ACTIVE first then the host of the instance changes to the'
nl|'\n'
comment|'# new host later'
nl|'\n'
name|'evacuated_server'
op|'='
name|'self'
op|'.'
name|'admin_api'
op|'.'
name|'get_server'
op|'('
name|'evacuated_server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'host'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'return'
op|'['
name|'evacuated_server'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|','
nl|'\n'
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'OS-EXT-SRV-ATTR:host'"
op|']'
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_evacuate_with_soft_affinity
dedent|''
name|'def'
name|'test_evacuate_with_soft_affinity'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'evacuated_server'
op|','
name|'other_server'
op|'='
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_evacuate_with_soft_anti_affinity_policies'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'soft_affinity'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'evacuated_server'
op|','
name|'other_server'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_evacuate_with_soft_anti_affinity
dedent|''
name|'def'
name|'test_evacuate_with_soft_anti_affinity'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'evacuated_server'
op|','
name|'other_server'
op|'='
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_evacuate_with_soft_anti_affinity_policies'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'soft_anti_affinity'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'evacuated_server'
op|','
name|'other_server'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
