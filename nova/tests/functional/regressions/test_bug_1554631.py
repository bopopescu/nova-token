begin_unit
comment|'# Copyright 2016 IBM Corp.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'# not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'# a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#      http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'# License for the specific language governing permissions and limitations'
nl|'\n'
comment|'# under the License.'
nl|'\n'
name|'from'
name|'cinderclient'
name|'import'
name|'exceptions'
name|'as'
name|'cinder_exceptions'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fixtures'
name|'as'
name|'nova_fixtures'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'functional'
op|'.'
name|'api'
name|'import'
name|'client'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'policy_fixture'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestCinderForbidden
name|'class'
name|'TestCinderForbidden'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestCinderForbidden'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'policy_fixture'
op|'.'
name|'RealPolicyFixture'
op|'('
op|')'
op|')'
newline|'\n'
name|'api_fixture'
op|'='
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'nova_fixtures'
op|'.'
name|'OSAPIFixture'
op|'('
nl|'\n'
name|'api_version'
op|'='
string|"'v2.1'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'api'
op|'='
name|'api_fixture'
op|'.'
name|'api'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.volume.cinder.cinderclient'"
op|')'
newline|'\n'
DECL|member|test_forbidden_cinder_operation_returns_403
name|'def'
name|'test_forbidden_cinder_operation_returns_403'
op|'('
name|'self'
op|','
name|'mock_cinder'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Regression test for bug #1554631.\n\n        When the Cinder client returns a 403 Forbidden on any operation,\n        the Nova API should forward on the 403 instead of returning 500.\n        """'
newline|'\n'
name|'cinder_client'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'mock_cinder'
op|'.'
name|'return_value'
op|'='
name|'cinder_client'
newline|'\n'
name|'exc'
op|'='
name|'cinder_exceptions'
op|'.'
name|'Forbidden'
op|'('
string|"''"
op|')'
newline|'\n'
name|'cinder_client'
op|'.'
name|'volumes'
op|'.'
name|'create'
op|'.'
name|'side_effect'
op|'='
name|'exc'
newline|'\n'
nl|'\n'
name|'volume'
op|'='
op|'{'
string|"'display_name'"
op|':'
string|"'vol1'"
op|','
string|"'size'"
op|':'
number|'3'
op|'}'
newline|'\n'
name|'e'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'client'
op|'.'
name|'OpenStackApiException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_volume'
op|','
op|'{'
string|"'volume'"
op|':'
name|'volume'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'403'
op|','
name|'e'
op|'.'
name|'response'
op|'.'
name|'status_code'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestCinderOverLimit
dedent|''
dedent|''
name|'class'
name|'TestCinderOverLimit'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestCinderOverLimit'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'policy_fixture'
op|'.'
name|'RealPolicyFixture'
op|'('
op|')'
op|')'
newline|'\n'
name|'api_fixture'
op|'='
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'nova_fixtures'
op|'.'
name|'OSAPIFixture'
op|'('
nl|'\n'
name|'api_version'
op|'='
string|"'v2.1'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'api'
op|'='
name|'api_fixture'
op|'.'
name|'api'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.volume.cinder.cinderclient'"
op|')'
newline|'\n'
DECL|member|test_over_limit_volumes
name|'def'
name|'test_over_limit_volumes'
op|'('
name|'self'
op|','
name|'mock_cinder'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Regression test for bug #1554631.\n\n        When the Cinder client returns OverLimit when trying to create\n        a volume, an OverQuota exception should be raised with the value being\n        volumes.\n        """'
newline|'\n'
name|'cinder_client'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'mock_cinder'
op|'.'
name|'return_value'
op|'='
name|'cinder_client'
newline|'\n'
name|'exc'
op|'='
name|'cinder_exceptions'
op|'.'
name|'OverLimit'
op|'('
string|"''"
op|')'
newline|'\n'
name|'cinder_client'
op|'.'
name|'volumes'
op|'.'
name|'create'
op|'.'
name|'side_effect'
op|'='
name|'exc'
newline|'\n'
nl|'\n'
name|'volume'
op|'='
op|'{'
string|"'display_name'"
op|':'
string|"'vol1'"
op|','
string|"'size'"
op|':'
number|'3'
op|'}'
newline|'\n'
name|'e'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'client'
op|'.'
name|'OpenStackApiException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_volume'
op|','
op|'{'
string|"'volume'"
op|':'
name|'volume'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'403'
op|','
name|'e'
op|'.'
name|'response'
op|'.'
name|'status_code'
op|')'
newline|'\n'
comment|'# Make sure we went over on volumes'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'volumes'"
op|','
name|'e'
op|'.'
name|'response'
op|'.'
name|'content'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.volume.cinder.cinderclient'"
op|')'
newline|'\n'
DECL|member|test_over_limit_snapshots
name|'def'
name|'test_over_limit_snapshots'
op|'('
name|'self'
op|','
name|'mock_cinder'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Regression test for bug #1554631.\n\n        When the Cinder client returns OverLimit when trying to create a\n        snapshot, an OverQuota exception should be raised with the value being\n        snapshots.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_do_snapshot_over_test'
op|'('
name|'mock_cinder'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.volume.cinder.cinderclient'"
op|')'
newline|'\n'
DECL|member|test_over_limit_snapshots_force
name|'def'
name|'test_over_limit_snapshots_force'
op|'('
name|'self'
op|','
name|'mock_cinder'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Regression test for bug #1554631.\n\n        When the Cinder client returns OverLimit when trying to create a\n        snapshot, an OverQuota exception should be raised with the value being\n        snapshots. (create_snapshot_force version)\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_do_snapshot_over_test'
op|'('
name|'mock_cinder'
op|','
name|'force'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_do_snapshot_over_test
dedent|''
name|'def'
name|'_do_snapshot_over_test'
op|'('
name|'self'
op|','
name|'mock_cinder'
op|','
name|'force'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cinder_client'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'mock_cinder'
op|'.'
name|'return_value'
op|'='
name|'cinder_client'
newline|'\n'
name|'exc'
op|'='
name|'cinder_exceptions'
op|'.'
name|'OverLimit'
op|'('
string|"''"
op|')'
newline|'\n'
name|'cinder_client'
op|'.'
name|'volume_snapshots'
op|'.'
name|'create'
op|'.'
name|'side_effect'
op|'='
name|'exc'
newline|'\n'
nl|'\n'
name|'snap'
op|'='
op|'{'
string|"'display_name'"
op|':'
string|"'snap1'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'521752a6-acf6-4b2d-bc7a-119f9148cd8c'"
op|','
nl|'\n'
string|"'force'"
op|':'
name|'force'
op|'}'
newline|'\n'
name|'e'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'client'
op|'.'
name|'OpenStackApiException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'api'
op|'.'
name|'post_snapshot'
op|','
op|'{'
string|"'snapshot'"
op|':'
name|'snap'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'403'
op|','
name|'e'
op|'.'
name|'response'
op|'.'
name|'status_code'
op|')'
newline|'\n'
comment|'# Make sure we went over on snapshots'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'snapshots'"
op|','
name|'e'
op|'.'
name|'response'
op|'.'
name|'content'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
