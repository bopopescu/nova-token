begin_unit
comment|'# Copyright 2012 Nebula, Inc.'
nl|'\n'
comment|'# Copyright 2013 IBM Corp.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'functional'
op|'.'
name|'api_sample_tests'
name|'import'
name|'test_servers'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'osapi_compute_extension'"
op|','
nl|'\n'
string|"'nova.api.openstack.compute.legacy_v2.extensions'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VirtualInterfacesJsonTest
name|'class'
name|'VirtualInterfacesJsonTest'
op|'('
name|'test_servers'
op|'.'
name|'ServersSampleBase'
op|')'
op|':'
newline|'\n'
DECL|variable|extension_name
indent|'    '
name|'extension_name'
op|'='
string|'"os-virtual-interfaces"'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VirtualInterfacesJsonTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'template'
op|'='
string|"'vifs-list-resp'"
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'api_major_version'
op|'=='
string|"'v2'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'template'
op|'='
string|"'vifs-list-resp-v2'"
newline|'\n'
nl|'\n'
DECL|member|_get_flags
dedent|''
dedent|''
name|'def'
name|'_get_flags'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'f'
op|'='
name|'super'
op|'('
name|'VirtualInterfacesJsonTest'
op|','
name|'self'
op|')'
op|'.'
name|'_get_flags'
op|'('
op|')'
newline|'\n'
name|'f'
op|'['
string|"'osapi_compute_extension'"
op|']'
op|'='
name|'CONF'
op|'.'
name|'osapi_compute_extension'
op|'['
op|':'
op|']'
newline|'\n'
name|'f'
op|'['
string|"'osapi_compute_extension'"
op|']'
op|'.'
name|'append'
op|'('
nl|'\n'
string|"'nova.api.openstack.compute.legacy_v2.contrib.'"
nl|'\n'
string|"'virtual_interfaces.Virtual_interfaces'"
op|')'
newline|'\n'
name|'f'
op|'['
string|"'osapi_compute_extension'"
op|']'
op|'.'
name|'append'
op|'('
nl|'\n'
string|"'nova.api.openstack.compute.legacy_v2.contrib.'"
nl|'\n'
string|"'extended_virtual_interfaces_net.Extended_virtual_interfaces_net'"
op|')'
newline|'\n'
name|'return'
name|'f'
newline|'\n'
nl|'\n'
DECL|member|test_vifs_list
dedent|''
name|'def'
name|'test_vifs_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
name|'self'
op|'.'
name|'_post_server'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_get'
op|'('
string|"'servers/%s/os-virtual-interfaces'"
op|'%'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
name|'subs'
op|'='
op|'{'
string|"'mac_addr'"
op|':'
string|"'(?:[a-f0-9]{2}:){5}[a-f0-9]{2}'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_verify_response'
op|'('
name|'self'
op|'.'
name|'template'
op|','
name|'subs'
op|','
name|'response'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VirtualInterfacesJsonV212Test
dedent|''
dedent|''
name|'class'
name|'VirtualInterfacesJsonV212Test'
op|'('
name|'VirtualInterfacesJsonTest'
op|')'
op|':'
newline|'\n'
DECL|variable|microversion
indent|'    '
name|'microversion'
op|'='
string|"'2.12'"
newline|'\n'
comment|'# NOTE(gmann): microversion tests do not need to run for v2 API'
nl|'\n'
comment|'# so defining scenarios only for v2.12 which will run the original tests'
nl|'\n'
comment|"# by appending '(v2_12)' in test_id."
nl|'\n'
DECL|variable|scenarios
name|'scenarios'
op|'='
op|'['
op|'('
string|"'v2_12'"
op|','
op|'{'
string|"'api_major_version'"
op|':'
string|"'v2.1'"
op|'}'
op|')'
op|']'
newline|'\n'
dedent|''
endmarker|''
end_unit
