begin_unit
comment|'# Copyright 2014 IBM Corp.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'functional'
op|'.'
name|'api_sample_tests'
name|'import'
name|'test_servers'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
op|'.'
name|'objects'
name|'import'
name|'test_network'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'unit'
name|'import'
name|'utils'
name|'as'
name|'test_utils'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'osapi_compute_extension'"
op|','
nl|'\n'
string|"'nova.api.openstack.compute.legacy_v2.extensions'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FixedIpTest
name|'class'
name|'FixedIpTest'
op|'('
name|'test_servers'
op|'.'
name|'ServersSampleBase'
op|')'
op|':'
newline|'\n'
DECL|variable|extension_name
indent|'    '
name|'extension_name'
op|'='
string|'"os-fixed-ips"'
newline|'\n'
nl|'\n'
DECL|variable|microversion
name|'microversion'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_get_flags
name|'def'
name|'_get_flags'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'f'
op|'='
name|'super'
op|'('
name|'FixedIpTest'
op|','
name|'self'
op|')'
op|'.'
name|'_get_flags'
op|'('
op|')'
newline|'\n'
name|'f'
op|'['
string|"'osapi_compute_extension'"
op|']'
op|'='
name|'CONF'
op|'.'
name|'osapi_compute_extension'
op|'['
op|':'
op|']'
newline|'\n'
name|'f'
op|'['
string|"'osapi_compute_extension'"
op|']'
op|'.'
name|'append'
op|'('
nl|'\n'
string|"'nova.api.openstack.compute.contrib.fixed_ips.Fixed_ips'"
op|')'
newline|'\n'
name|'return'
name|'f'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'FixedIpTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'dict'
op|'('
name|'test_utils'
op|'.'
name|'get_test_instance'
op|'('
op|')'
op|','
nl|'\n'
name|'hostname'
op|'='
string|"'openstack'"
op|','
name|'host'
op|'='
string|"'host'"
op|')'
newline|'\n'
name|'fake_fixed_ips'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.1.1'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'leased'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'reserved'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'instance'"
op|':'
name|'instance'
op|','
nl|'\n'
string|"'network'"
op|':'
name|'test_network'
op|'.'
name|'fake_network'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'None'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.1.2'"
op|','
nl|'\n'
string|"'network_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'virtual_interface_id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'2'"
op|','
nl|'\n'
string|"'allocated'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'leased'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'reserved'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'updated_at'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'deleted'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'instance'"
op|':'
name|'instance'
op|','
nl|'\n'
string|"'network'"
op|':'
name|'test_network'
op|'.'
name|'fake_network'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'None'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_fixed_ip_get_by_address
name|'def'
name|'fake_fixed_ip_get_by_address'
op|'('
name|'context'
op|','
name|'address'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'fixed_ip'
name|'in'
name|'fake_fixed_ips'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'fixed_ip'
op|'['
string|"'address'"
op|']'
op|'=='
name|'address'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'fixed_ip'
newline|'\n'
dedent|''
dedent|''
name|'raise'
name|'exception'
op|'.'
name|'FixedIpNotFoundForAddress'
op|'('
name|'address'
op|'='
name|'address'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_fixed_ip_update
dedent|''
name|'def'
name|'fake_fixed_ip_update'
op|'('
name|'context'
op|','
name|'address'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fixed_ip'
op|'='
name|'fake_fixed_ip_get_by_address'
op|'('
name|'context'
op|','
name|'address'
op|')'
newline|'\n'
name|'if'
name|'fixed_ip'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'FixedIpNotFoundForAddress'
op|'('
name|'address'
op|'='
name|'address'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'key'
name|'in'
name|'values'
op|':'
newline|'\n'
indent|'                    '
name|'fixed_ip'
op|'['
name|'key'
op|']'
op|'='
name|'values'
op|'['
name|'key'
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|'"fixed_ip_get_by_address"'
op|','
nl|'\n'
name|'fake_fixed_ip_get_by_address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|'"fixed_ip_update"'
op|','
name|'fake_fixed_ip_update'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fixed_ip_reserve
dedent|''
name|'def'
name|'test_fixed_ip_reserve'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Reserve a Fixed IP.'
nl|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_post'
op|'('
string|"'os-fixed-ips/192.168.1.1/action'"
op|','
nl|'\n'
string|"'fixedip-post-req'"
op|','
op|'{'
op|'}'
op|','
nl|'\n'
name|'api_version'
op|'='
name|'self'
op|'.'
name|'microversion'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'202'
op|','
name|'response'
op|'.'
name|'status_code'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'""'
op|','
name|'response'
op|'.'
name|'content'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_get_fixed_ip
dedent|''
name|'def'
name|'_test_get_fixed_ip'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# Return data about the given fixed ip.'
nl|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_do_get'
op|'('
string|"'os-fixed-ips/192.168.1.1'"
op|','
nl|'\n'
name|'api_version'
op|'='
name|'self'
op|'.'
name|'microversion'
op|')'
newline|'\n'
name|'project'
op|'='
op|'{'
string|"'cidr'"
op|':'
string|"'192.168.1.0/24'"
op|','
nl|'\n'
string|"'hostname'"
op|':'
string|"'openstack'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'host'"
op|','
nl|'\n'
string|"'address'"
op|':'
string|"'192.168.1.1'"
op|'}'
newline|'\n'
name|'project'
op|'.'
name|'update'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_response'
op|'('
string|"'fixedips-get-resp'"
op|','
name|'project'
op|','
name|'response'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_fixed_ip
dedent|''
name|'def'
name|'test_get_fixed_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_get_fixed_ip'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FixedIpV24Test
dedent|''
dedent|''
name|'class'
name|'FixedIpV24Test'
op|'('
name|'FixedIpTest'
op|')'
op|':'
newline|'\n'
DECL|variable|microversion
indent|'    '
name|'microversion'
op|'='
string|"'2.4'"
newline|'\n'
comment|'# NOTE(gmann): microversion tests do not need to run for v2 API'
nl|'\n'
comment|'# so defining scenarios only for v2.4 which will run the original tests'
nl|'\n'
comment|"# by appending '(v2_4)' in test_id."
nl|'\n'
DECL|variable|scenarios
name|'scenarios'
op|'='
op|'['
op|'('
string|"'v2_4'"
op|','
op|'{'
string|"'api_major_version'"
op|':'
string|"'v2.1'"
op|'}'
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_get_fixed_ip
name|'def'
name|'test_get_fixed_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_get_fixed_ip'
op|'('
name|'reserved'
op|'='
name|'False'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
