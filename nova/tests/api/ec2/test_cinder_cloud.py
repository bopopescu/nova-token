begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2011 X.commerce, a business unit of eBay Inc.'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'copy'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
nl|'\n'
name|'import'
name|'fixtures'
newline|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'ec2'
name|'import'
name|'cloud'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'ec2'
name|'import'
name|'ec2utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'api'
name|'as'
name|'compute_api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'utils'
name|'as'
name|'compute_utils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fake_network'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
name|'import'
name|'fake'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'matchers'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'volume'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'compute_driver'"
op|','
string|"'nova.virt.driver'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'default_instance_type'"
op|','
string|"'nova.compute.instance_types'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'use_ipv6'"
op|','
string|"'nova.netconf'"
op|')'
newline|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_fake_cache
name|'def'
name|'get_fake_cache'
op|'('
op|')'
op|':'
newline|'\n'
DECL|function|_ip
indent|'    '
name|'def'
name|'_ip'
op|'('
name|'ip'
op|','
name|'fixed'
op|'='
name|'True'
op|','
name|'floats'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ip_dict'
op|'='
op|'{'
string|"'address'"
op|':'
name|'ip'
op|','
string|"'type'"
op|':'
string|"'fixed'"
op|'}'
newline|'\n'
name|'if'
name|'not'
name|'fixed'
op|':'
newline|'\n'
indent|'            '
name|'ip_dict'
op|'['
string|"'type'"
op|']'
op|'='
string|"'floating'"
newline|'\n'
dedent|''
name|'if'
name|'fixed'
name|'and'
name|'floats'
op|':'
newline|'\n'
indent|'            '
name|'ip_dict'
op|'['
string|"'floating_ips'"
op|']'
op|'='
op|'['
name|'_ip'
op|'('
name|'f'
op|','
name|'fixed'
op|'='
name|'False'
op|')'
name|'for'
name|'f'
name|'in'
name|'floats'
op|']'
newline|'\n'
dedent|''
name|'return'
name|'ip_dict'
newline|'\n'
nl|'\n'
dedent|''
name|'info'
op|'='
op|'['
op|'{'
string|"'address'"
op|':'
string|"'aa:bb:cc:dd:ee:ff'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'bridge'"
op|':'
string|"'br0'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'private'"
op|','
nl|'\n'
string|"'subnets'"
op|':'
op|'['
op|'{'
string|"'cidr'"
op|':'
string|"'192.168.0.0/24'"
op|','
nl|'\n'
string|"'ips'"
op|':'
op|'['
name|'_ip'
op|'('
string|"'192.168.0.3'"
op|','
nl|'\n'
name|'floats'
op|'='
op|'['
string|"'1.2.3.4'"
op|','
nl|'\n'
string|"'5.6.7.8'"
op|']'
op|')'
op|','
nl|'\n'
name|'_ip'
op|'('
string|"'192.168.0.4'"
op|')'
op|']'
op|'}'
op|']'
op|'}'
op|'}'
op|']'
newline|'\n'
name|'if'
name|'CONF'
op|'.'
name|'use_ipv6'
op|':'
newline|'\n'
indent|'        '
name|'ipv6_addr'
op|'='
string|"'fe80:b33f::a8bb:ccff:fedd:eeff'"
newline|'\n'
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'network'"
op|']'
op|'['
string|"'subnets'"
op|']'
op|'.'
name|'append'
op|'('
op|'{'
string|"'cidr'"
op|':'
string|"'fe80:b33f::/64'"
op|','
nl|'\n'
string|"'ips'"
op|':'
op|'['
name|'_ip'
op|'('
name|'ipv6_addr'
op|')'
op|']'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'info'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_instances_with_cached_ips
dedent|''
name|'def'
name|'get_instances_with_cached_ips'
op|'('
name|'orig_func'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Kludge the cache into instance(s) without having to create DB\n    entries\n    """'
newline|'\n'
name|'instances'
op|'='
name|'orig_func'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'instances'
op|','
name|'list'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'instance'
name|'in'
name|'instances'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'['
string|"'info_cache'"
op|']'
op|'='
op|'{'
string|"'network_info'"
op|':'
name|'get_fake_cache'
op|'('
op|')'
op|'}'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'instances'
op|'['
string|"'info_cache'"
op|']'
op|'='
op|'{'
string|"'network_info'"
op|':'
name|'get_fake_cache'
op|'('
op|')'
op|'}'
newline|'\n'
dedent|''
name|'return'
name|'instances'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CinderCloudTestCase
dedent|''
name|'class'
name|'CinderCloudTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CinderCloudTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'vol_tmpdir'
op|'='
name|'self'
op|'.'
name|'useFixture'
op|'('
name|'fixtures'
op|'.'
name|'TempDir'
op|'('
op|')'
op|')'
op|'.'
name|'path'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'compute_driver'
op|'='
string|"'nova.virt.fake.FakeDriver'"
op|','
nl|'\n'
name|'volume_api_class'
op|'='
string|"'nova.tests.fake_volume.API'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_show
name|'def'
name|'fake_show'
op|'('
name|'meh'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'id'"
op|':'
name|'id'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'fake_name'"
op|','
nl|'\n'
string|"'container_format'"
op|':'
string|"'ami'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'active'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'kernel_id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|','
nl|'\n'
string|"'image_state'"
op|':'
string|"'available'"
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_detail
dedent|''
name|'def'
name|'fake_detail'
op|'('
name|'_self'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'image'
op|'='
name|'fake_show'
op|'('
name|'None'
op|','
name|'context'
op|','
name|'None'
op|')'
newline|'\n'
name|'image'
op|'['
string|"'name'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'filters'"
op|','
op|'{'
op|'}'
op|')'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
newline|'\n'
name|'return'
op|'['
name|'image'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'detail'"
op|','
name|'fake_detail'
op|')'
newline|'\n'
name|'fake'
op|'.'
name|'stub_out_image_service'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
DECL|function|dumb
name|'def'
name|'dumb'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_utils'
op|','
string|"'notify_about_instance_usage'"
op|','
name|'dumb'
op|')'
newline|'\n'
name|'fake_network'
op|'.'
name|'set_stub_network_methods'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
comment|'# set up our cloud'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'='
name|'cloud'
op|'.'
name|'CloudController'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'scheduler_driver'
op|'='
string|"'nova.scheduler.chance.ChanceScheduler'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Short-circuit the conductor service'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_local'
op|'='
name|'True'
op|','
name|'group'
op|'='
string|"'conductor'"
op|')'
newline|'\n'
nl|'\n'
comment|'# set up services'
nl|'\n'
name|'self'
op|'.'
name|'conductor'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'conductor'"
op|','
nl|'\n'
name|'manager'
op|'='
name|'CONF'
op|'.'
name|'conductor'
op|'.'
name|'manager'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'scheduler'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'network'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'project_id'
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume_api'
op|'='
name|'volume'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'reset_fake_api'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
comment|"# NOTE(comstud): Make 'cast' behave like a 'call' which will"
nl|'\n'
comment|'# ensure that operations complete'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'rpc'
op|','
string|"'cast'"
op|','
name|'rpc'
op|'.'
name|'call'
op|')'
newline|'\n'
nl|'\n'
comment|'# make sure we can map ami-00000001/2 to a uuid in FakeImageService'
nl|'\n'
name|'db'
op|'.'
name|'api'
op|'.'
name|'s3_image_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'api'
op|'.'
name|'s3_image_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'reset_fake_api'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'super'
op|'('
name|'CinderCloudTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
name|'fake'
op|'.'
name|'FakeImageService_reset'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_stub_instance_get_with_fixed_ips
dedent|''
name|'def'
name|'_stub_instance_get_with_fixed_ips'
op|'('
name|'self'
op|','
name|'func_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig_func'
op|'='
name|'getattr'
op|'('
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'compute_api'
op|','
name|'func_name'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get
name|'def'
name|'fake_get'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'get_instances_with_cached_ips'
op|'('
name|'orig_func'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'compute_api'
op|','
name|'func_name'
op|','
name|'fake_get'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_key
dedent|''
name|'def'
name|'_create_key'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(vish): create depends on pool, so just call helper directly'
nl|'\n'
indent|'        '
name|'keypair_api'
op|'='
name|'compute_api'
op|'.'
name|'KeypairAPI'
op|'('
op|')'
newline|'\n'
name|'return'
name|'keypair_api'
op|'.'
name|'create_key_pair'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|','
nl|'\n'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_volumes
dedent|''
name|'def'
name|'test_describe_volumes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Makes sure describe_volumes works and filters results.'
nl|'\n'
nl|'\n'
indent|'        '
name|'vol1'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'size'
op|'='
number|'1'
op|','
nl|'\n'
name|'name'
op|'='
string|"'test-1'"
op|','
nl|'\n'
name|'description'
op|'='
string|"'test volume 1'"
op|')'
newline|'\n'
name|'vol2'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'size'
op|'='
number|'1'
op|','
nl|'\n'
name|'name'
op|'='
string|"'test-2'"
op|','
nl|'\n'
name|'description'
op|'='
string|"'test volume 2'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_volumes'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'volumeSet'"
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_volumes'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'['
name|'vol1'
op|'['
string|"'volumeId'"
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'volumeSet'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol1'
op|'['
string|"'volumeId'"
op|']'
op|','
name|'result'
op|'['
string|"'volumeSet'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'volumeId'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1'
op|'['
string|"'volumeId'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol2'
op|'['
string|"'volumeId'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_volume_in_availability_zone
dedent|''
name|'def'
name|'test_create_volume_in_availability_zone'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure create_volume works when we specify an availability\n        zone\n        """'
newline|'\n'
name|'availability_zone'
op|'='
string|"'zone1:host1'"
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'size'
op|'='
number|'1'
op|','
nl|'\n'
name|'availability_zone'
op|'='
name|'availability_zone'
op|')'
newline|'\n'
name|'volume_id'
op|'='
name|'result'
op|'['
string|"'volumeId'"
op|']'
newline|'\n'
name|'availabilityZone'
op|'='
name|'result'
op|'['
string|"'availabilityZone'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'availabilityZone'
op|','
name|'availability_zone'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_volumes'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'volumeSet'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'volumeSet'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'volumeId'"
op|']'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'volumeSet'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'availabilityZone'"
op|']'
op|','
nl|'\n'
name|'availabilityZone'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_volume_from_snapshot
dedent|''
name|'def'
name|'test_create_volume_from_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Makes sure create_volume works when we specify a snapshot.'
nl|'\n'
indent|'        '
name|'availability_zone'
op|'='
string|"'zone1:host1'"
newline|'\n'
name|'vol1'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'size'
op|'='
number|'1'
op|','
nl|'\n'
name|'availability_zone'
op|'='
name|'availability_zone'
op|')'
newline|'\n'
name|'snap'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'vol1'
op|'['
string|"'volumeId'"
op|']'
op|','
nl|'\n'
name|'name'
op|'='
string|"'snap-1'"
op|','
nl|'\n'
name|'description'
op|'='
string|"'test snap of vol %s'"
nl|'\n'
op|'%'
name|'vol1'
op|'['
string|"'volumeId'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'vol2'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'snapshot_id'
op|'='
name|'snap'
op|'['
string|"'snapshotId'"
op|']'
op|')'
newline|'\n'
name|'volume1_id'
op|'='
name|'vol1'
op|'['
string|"'volumeId'"
op|']'
newline|'\n'
name|'volume2_id'
op|'='
name|'vol2'
op|'['
string|"'volumeId'"
op|']'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_volumes'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'volumeSet'"
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'volumeSet'"
op|']'
op|'['
number|'1'
op|']'
op|'['
string|"'volumeId'"
op|']'
op|','
name|'volume2_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume2_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snap'
op|'['
string|"'snapshotId'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'volume1_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_snapshots
dedent|''
name|'def'
name|'test_describe_snapshots'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Makes sure describe_snapshots works and filters results.'
nl|'\n'
indent|'        '
name|'availability_zone'
op|'='
string|"'zone1:host1'"
newline|'\n'
name|'vol1'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'size'
op|'='
number|'1'
op|','
nl|'\n'
name|'availability_zone'
op|'='
name|'availability_zone'
op|')'
newline|'\n'
name|'snap1'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'vol1'
op|'['
string|"'volumeId'"
op|']'
op|','
nl|'\n'
name|'name'
op|'='
string|"'snap-1'"
op|','
nl|'\n'
name|'description'
op|'='
string|"'test snap1 of vol %s'"
op|'%'
nl|'\n'
name|'vol1'
op|'['
string|"'volumeId'"
op|']'
op|')'
newline|'\n'
name|'snap2'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'vol1'
op|'['
string|"'volumeId'"
op|']'
op|','
nl|'\n'
name|'name'
op|'='
string|"'snap-1'"
op|','
nl|'\n'
name|'description'
op|'='
string|"'test snap2 of vol %s'"
op|'%'
nl|'\n'
name|'vol1'
op|'['
string|"'volumeId'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_snapshots'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'snapshotSet'"
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_snapshots'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'snapshot_id'
op|'='
op|'['
name|'snap2'
op|'['
string|"'snapshotId'"
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'snapshotSet'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snap1'
op|'['
string|"'snapshotId'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snap2'
op|'['
string|"'snapshotId'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1'
op|'['
string|"'volumeId'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_format_snapshot_maps_status
dedent|''
name|'def'
name|'test_format_snapshot_maps_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_snapshot'
op|'='
op|'{'
string|"'status'"
op|':'
string|"'new'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'volume_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'created_at'"
op|':'
number|'1353560191.08117'
op|','
nl|'\n'
string|"'progress'"
op|':'
number|'90'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'volume_size'"
op|':'
number|'10000'
op|','
nl|'\n'
string|"'display_description'"
op|':'
string|"'desc'"
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'_format_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_snapshot'
op|')'
op|'['
string|"'status'"
op|']'
op|','
nl|'\n'
string|"'pending'"
op|')'
newline|'\n'
nl|'\n'
name|'fake_snapshot'
op|'['
string|"'status'"
op|']'
op|'='
string|"'creating'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'_format_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_snapshot'
op|')'
op|'['
string|"'status'"
op|']'
op|','
nl|'\n'
string|"'pending'"
op|')'
newline|'\n'
nl|'\n'
name|'fake_snapshot'
op|'['
string|"'status'"
op|']'
op|'='
string|"'available'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'_format_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_snapshot'
op|')'
op|'['
string|"'status'"
op|']'
op|','
nl|'\n'
string|"'completed'"
op|')'
newline|'\n'
nl|'\n'
name|'fake_snapshot'
op|'['
string|"'status'"
op|']'
op|'='
string|"'active'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'_format_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_snapshot'
op|')'
op|'['
string|"'status'"
op|']'
op|','
nl|'\n'
string|"'completed'"
op|')'
newline|'\n'
nl|'\n'
name|'fake_snapshot'
op|'['
string|"'status'"
op|']'
op|'='
string|"'deleting'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'_format_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_snapshot'
op|')'
op|'['
string|"'status'"
op|']'
op|','
nl|'\n'
string|"'pending'"
op|')'
newline|'\n'
nl|'\n'
name|'fake_snapshot'
op|'['
string|"'status'"
op|']'
op|'='
string|"'deleted'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'_format_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_snapshot'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'fake_snapshot'
op|'['
string|"'status'"
op|']'
op|'='
string|"'error'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'_format_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_snapshot'
op|')'
op|'['
string|"'status'"
op|']'
op|','
nl|'\n'
string|"'error'"
op|')'
newline|'\n'
nl|'\n'
name|'fake_snapshot'
op|'['
string|"'status'"
op|']'
op|'='
string|"'banana'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'_format_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'fake_snapshot'
op|')'
op|'['
string|"'status'"
op|']'
op|','
nl|'\n'
string|"'banana'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_snapshot
dedent|''
name|'def'
name|'test_create_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Makes sure create_snapshot works.'
nl|'\n'
indent|'        '
name|'availability_zone'
op|'='
string|"'zone1:host1'"
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_snapshots'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'vol1'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'size'
op|'='
number|'1'
op|','
nl|'\n'
name|'availability_zone'
op|'='
name|'availability_zone'
op|')'
newline|'\n'
name|'snap1'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'vol1'
op|'['
string|"'volumeId'"
op|']'
op|','
nl|'\n'
name|'name'
op|'='
string|"'snap-1'"
op|','
nl|'\n'
name|'description'
op|'='
string|"'test snap1 of vol %s'"
op|'%'
nl|'\n'
name|'vol1'
op|'['
string|"'volumeId'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'snapshot_id'
op|'='
name|'snap1'
op|'['
string|"'snapshotId'"
op|']'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_snapshots'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'snapshotSet'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'snapshotSet'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'snapshotId'"
op|']'
op|','
name|'snapshot_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snap1'
op|'['
string|"'snapshotId'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1'
op|'['
string|"'volumeId'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_snapshot
dedent|''
name|'def'
name|'test_delete_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Makes sure delete_snapshot works.'
nl|'\n'
indent|'        '
name|'availability_zone'
op|'='
string|"'zone1:host1'"
newline|'\n'
name|'vol1'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'size'
op|'='
number|'1'
op|','
nl|'\n'
name|'availability_zone'
op|'='
name|'availability_zone'
op|')'
newline|'\n'
name|'snap1'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'vol1'
op|'['
string|"'volumeId'"
op|']'
op|','
nl|'\n'
name|'name'
op|'='
string|"'snap-1'"
op|','
nl|'\n'
name|'description'
op|'='
string|"'test snap1 of vol %s'"
op|'%'
nl|'\n'
name|'vol1'
op|'['
string|"'volumeId'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'snapshot_id'
op|'='
name|'snap1'
op|'['
string|"'snapshotId'"
op|']'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'snapshot_id'
op|'='
name|'snapshot_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1'
op|'['
string|"'volumeId'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_block_device_mapping_create
dedent|''
name|'def'
name|'_block_device_mapping_create'
op|'('
name|'self'
op|','
name|'instance_uuid'
op|','
name|'mappings'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'volumes'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'bdm'
name|'in'
name|'mappings'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'block_device_mapping_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'bdm'
op|')'
newline|'\n'
name|'if'
string|"'volume_id'"
name|'in'
name|'bdm'
op|':'
newline|'\n'
indent|'                '
name|'values'
op|'='
op|'{'
string|"'id'"
op|':'
name|'bdm'
op|'['
string|"'volume_id'"
op|']'
op|'}'
newline|'\n'
name|'for'
name|'bdm_key'
op|','
name|'vol_key'
name|'in'
op|'['
op|'('
string|"'snapshot_id'"
op|','
string|"'snapshot_id'"
op|')'
op|','
nl|'\n'
op|'('
string|"'snapshot_size'"
op|','
string|"'volume_size'"
op|')'
op|','
nl|'\n'
op|'('
string|"'delete_on_termination'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|')'
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'bdm_key'
name|'in'
name|'bdm'
op|':'
newline|'\n'
indent|'                        '
name|'values'
op|'['
name|'vol_key'
op|']'
op|'='
name|'bdm'
op|'['
name|'bdm_key'
op|']'
newline|'\n'
dedent|''
name|'kwargs'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'bdmtest-volume'"
op|','
nl|'\n'
string|"'description'"
op|':'
string|"'bdm test volume description'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'available'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'size'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'attach_status'"
op|':'
string|"'detached'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
name|'values'
op|'['
string|"'id'"
op|']'
op|'}'
newline|'\n'
dedent|''
name|'vol'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'create_with_kwargs'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'if'
string|"'snapshot_id'"
name|'in'
name|'values'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'create_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'vol'
op|','
nl|'\n'
string|"'snapshot-bdm'"
op|','
nl|'\n'
string|"'fake snap for bdm tests'"
op|','
nl|'\n'
name|'values'
op|'['
string|"'snapshot_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'attach'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|','
nl|'\n'
name|'instance_uuid'
op|','
name|'bdm'
op|'['
string|"'device_name'"
op|']'
op|')'
newline|'\n'
name|'volumes'
op|'.'
name|'append'
op|'('
name|'vol'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'volumes'
newline|'\n'
nl|'\n'
DECL|member|_setUpBlockDeviceMapping
dedent|''
name|'def'
name|'_setUpBlockDeviceMapping'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_uuid'
op|'='
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
newline|'\n'
name|'inst1'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'image_ref'"
op|':'
name|'image_uuid'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'root_device_name'"
op|':'
string|"'/dev/sdb1'"
op|'}'
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'image_ref'"
op|':'
name|'image_uuid'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'root_device_name'"
op|':'
string|"'/dev/sdc1'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'instance_uuid'
op|'='
name|'inst1'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'mappings0'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb1'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'2'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb2'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'3'"
op|','
nl|'\n'
string|"'volume_size'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb3'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
string|"'4'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'5'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb4'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
string|"'6'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'7'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb5'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
string|"'8'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'9'"
op|','
nl|'\n'
string|"'volume_size'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb6'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
string|"'10'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'11'"
op|','
nl|'\n'
string|"'volume_size'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb7'"
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb8'"
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
string|"'swap'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb9'"
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
string|"'ephemeral3'"
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'volumes'
op|'='
name|'self'
op|'.'
name|'_block_device_mapping_create'
op|'('
name|'instance_uuid'
op|','
name|'mappings0'
op|')'
newline|'\n'
name|'return'
op|'('
name|'inst1'
op|','
name|'inst2'
op|','
name|'volumes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_tearDownBlockDeviceMapping
dedent|''
name|'def'
name|'_tearDownBlockDeviceMapping'
op|'('
name|'self'
op|','
name|'inst1'
op|','
name|'inst2'
op|','
name|'volumes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'vol'
name|'in'
name|'volumes'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'uuid'
name|'in'
op|'('
name|'inst1'
op|'['
string|"'uuid'"
op|']'
op|','
name|'inst2'
op|'['
string|"'uuid'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'bdm'
name|'in'
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'db'
op|'.'
name|'block_device_mapping_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'bdm'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst2'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst1'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|_expected_instance_bdm1
dedent|''
name|'_expected_instance_bdm1'
op|'='
op|'{'
nl|'\n'
string|"'instanceId'"
op|':'
string|"'i-00000001'"
op|','
nl|'\n'
string|"'rootDeviceName'"
op|':'
string|"'/dev/sdb1'"
op|','
nl|'\n'
string|"'rootDeviceType'"
op|':'
string|"'ebs'"
op|'}'
newline|'\n'
nl|'\n'
DECL|variable|_expected_block_device_mapping0
name|'_expected_block_device_mapping0'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb1'"
op|','
nl|'\n'
string|"'ebs'"
op|':'
op|'{'
string|"'status'"
op|':'
string|"'in-use'"
op|','
nl|'\n'
string|"'deleteOnTermination'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'volumeId'"
op|':'
string|"'2'"
op|','
nl|'\n'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb2'"
op|','
nl|'\n'
string|"'ebs'"
op|':'
op|'{'
string|"'status'"
op|':'
string|"'in-use'"
op|','
nl|'\n'
string|"'deleteOnTermination'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'volumeId'"
op|':'
string|"'3'"
op|','
nl|'\n'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb3'"
op|','
nl|'\n'
string|"'ebs'"
op|':'
op|'{'
string|"'status'"
op|':'
string|"'in-use'"
op|','
nl|'\n'
string|"'deleteOnTermination'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'volumeId'"
op|':'
string|"'5'"
op|','
nl|'\n'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb4'"
op|','
nl|'\n'
string|"'ebs'"
op|':'
op|'{'
string|"'status'"
op|':'
string|"'in-use'"
op|','
nl|'\n'
string|"'deleteOnTermination'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'volumeId'"
op|':'
string|"'7'"
op|','
nl|'\n'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb5'"
op|','
nl|'\n'
string|"'ebs'"
op|':'
op|'{'
string|"'status'"
op|':'
string|"'in-use'"
op|','
nl|'\n'
string|"'deleteOnTermination'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'volumeId'"
op|':'
string|"'9'"
op|','
nl|'\n'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb6'"
op|','
nl|'\n'
string|"'ebs'"
op|':'
op|'{'
string|"'status'"
op|':'
string|"'in-use'"
op|','
nl|'\n'
string|"'deleteOnTermination'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'volumeId'"
op|':'
string|"'11'"
op|','
op|'}'
op|'}'
op|']'
newline|'\n'
comment|"# NOTE(yamahata): swap/ephemeral device case isn't supported yet."
nl|'\n'
nl|'\n'
DECL|variable|_expected_instance_bdm2
name|'_expected_instance_bdm2'
op|'='
op|'{'
nl|'\n'
string|"'instanceId'"
op|':'
string|"'i-00000002'"
op|','
nl|'\n'
string|"'rootDeviceName'"
op|':'
string|"'/dev/sdc1'"
op|','
nl|'\n'
string|"'rootDeviceType'"
op|':'
string|"'instance-store'"
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_format_instance_bdm
name|'def'
name|'test_format_instance_bdm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
op|'('
name|'inst1'
op|','
name|'inst2'
op|','
name|'volumes'
op|')'
op|'='
name|'self'
op|'.'
name|'_setUpBlockDeviceMapping'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'_format_instance_bdm'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst1'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
string|"'/dev/sdb1'"
op|','
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
nl|'\n'
op|'{'
string|"'rootDeviceType'"
op|':'
name|'self'
op|'.'
name|'_expected_instance_bdm1'
op|'['
string|"'rootDeviceType'"
op|']'
op|'}'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'IsSubDictOf'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualBlockDeviceMapping'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_expected_block_device_mapping0'
op|','
name|'result'
op|'['
string|"'blockDeviceMapping'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'_format_instance_bdm'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst2'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
string|"'/dev/sdc1'"
op|','
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
nl|'\n'
op|'{'
string|"'rootDeviceType'"
op|':'
name|'self'
op|'.'
name|'_expected_instance_bdm2'
op|'['
string|"'rootDeviceType'"
op|']'
op|'}'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'IsSubDictOf'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_tearDownBlockDeviceMapping'
op|'('
name|'inst1'
op|','
name|'inst2'
op|','
name|'volumes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assertInstance
dedent|''
name|'def'
name|'_assertInstance'
op|'('
name|'self'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ec2_instance_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_id'
op|'('
name|'instance_id'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'result'
op|'['
string|"'reservationSet'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'instancesSet'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'result'
op|'='
name|'result'
op|'['
string|"'instancesSet'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'instanceId'"
op|']'
op|','
name|'ec2_instance_id'
op|')'
newline|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|member|_assertEqualBlockDeviceMapping
dedent|''
name|'def'
name|'_assertEqualBlockDeviceMapping'
op|'('
name|'self'
op|','
name|'expected'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'expected'
op|')'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'expected'
op|':'
newline|'\n'
indent|'            '
name|'found'
op|'='
name|'False'
newline|'\n'
name|'for'
name|'y'
name|'in'
name|'result'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'x'
op|'['
string|"'deviceName'"
op|']'
op|'=='
name|'y'
op|'['
string|"'deviceName'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'x'
op|','
name|'matchers'
op|'.'
name|'IsSubDictOf'
op|'('
name|'y'
op|')'
op|')'
newline|'\n'
name|'found'
op|'='
name|'True'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'found'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_instances_bdm
dedent|''
dedent|''
name|'def'
name|'test_describe_instances_bdm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure describe_instances works with root_device_name and\n        block device mappings\n        """'
newline|'\n'
op|'('
name|'inst1'
op|','
name|'inst2'
op|','
name|'volumes'
op|')'
op|'='
name|'self'
op|'.'
name|'_setUpBlockDeviceMapping'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_assertInstance'
op|'('
name|'inst1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_expected_instance_bdm1'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'IsSubDictOf'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualBlockDeviceMapping'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_expected_block_device_mapping0'
op|','
name|'result'
op|'['
string|"'blockDeviceMapping'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_assertInstance'
op|'('
name|'inst2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_expected_instance_bdm2'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'IsSubDictOf'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_tearDownBlockDeviceMapping'
op|'('
name|'inst1'
op|','
name|'inst2'
op|','
name|'volumes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setUpImageSet
dedent|''
name|'def'
name|'_setUpImageSet'
op|'('
name|'self'
op|','
name|'create_volumes_and_snapshots'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mappings1'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'/dev/sda1'"
op|','
string|"'virtual'"
op|':'
string|"'root'"
op|'}'
op|','
nl|'\n'
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdb0'"
op|','
string|"'virtual'"
op|':'
string|"'ephemeral0'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdb1'"
op|','
string|"'virtual'"
op|':'
string|"'ephemeral1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdb2'"
op|','
string|"'virtual'"
op|':'
string|"'ephemeral2'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdb3'"
op|','
string|"'virtual'"
op|':'
string|"'ephemeral3'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdb4'"
op|','
string|"'virtual'"
op|':'
string|"'ephemeral4'"
op|'}'
op|','
nl|'\n'
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdc0'"
op|','
string|"'virtual'"
op|':'
string|"'swap'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdc1'"
op|','
string|"'virtual'"
op|':'
string|"'swap'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdc2'"
op|','
string|"'virtual'"
op|':'
string|"'swap'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdc3'"
op|','
string|"'virtual'"
op|':'
string|"'swap'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdc4'"
op|','
string|"'virtual'"
op|':'
string|"'swap'"
op|'}'
op|']'
newline|'\n'
name|'block_device_mapping1'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdb1'"
op|','
string|"'snapshot_id'"
op|':'
number|'01234567'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdb2'"
op|','
string|"'volume_id'"
op|':'
number|'01234567'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdb3'"
op|','
string|"'virtual_name'"
op|':'
string|"'ephemeral5'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdb4'"
op|','
string|"'no_device'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdc1'"
op|','
string|"'snapshot_id'"
op|':'
number|'12345678'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdc2'"
op|','
string|"'volume_id'"
op|':'
number|'12345678'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdc3'"
op|','
string|"'virtual_name'"
op|':'
string|"'ephemeral6'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdc4'"
op|','
string|"'no_device'"
op|':'
name|'True'
op|'}'
op|']'
newline|'\n'
name|'image1'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'fake_name'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'active'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'kernel_id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|','
nl|'\n'
string|"'image_state'"
op|':'
string|"'available'"
op|','
nl|'\n'
string|"'mappings'"
op|':'
name|'mappings1'
op|','
nl|'\n'
string|"'block_device_mapping'"
op|':'
name|'block_device_mapping1'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'mappings2'
op|'='
op|'['
op|'{'
string|"'device'"
op|':'
string|"'/dev/sda1'"
op|','
string|"'virtual'"
op|':'
string|"'root'"
op|'}'
op|']'
newline|'\n'
name|'block_device_mapping2'
op|'='
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdb1'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
number|'01234567'
op|'}'
op|']'
newline|'\n'
name|'image2'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'fake_name'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'active'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'kernel_id'"
op|':'
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|','
nl|'\n'
string|"'root_device_name'"
op|':'
string|"'/dev/sdb1'"
op|','
nl|'\n'
string|"'mappings'"
op|':'
name|'mappings2'
op|','
nl|'\n'
string|"'block_device_mapping'"
op|':'
name|'block_device_mapping2'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_show
name|'def'
name|'fake_show'
op|'('
name|'meh'
op|','
name|'context'
op|','
name|'image_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'_images'
op|'='
op|'['
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'image1'
op|')'
op|','
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'image2'
op|')'
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'_images'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'str'
op|'('
name|'i'
op|'['
string|"'id'"
op|']'
op|')'
op|'=='
name|'str'
op|'('
name|'image_id'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'i'
newline|'\n'
dedent|''
dedent|''
name|'raise'
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
name|'image_id'
op|'='
name|'image_id'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_detail
dedent|''
name|'def'
name|'fake_detail'
op|'('
name|'meh'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'image1'
op|')'
op|','
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'image2'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'detail'"
op|','
name|'fake_detail'
op|')'
newline|'\n'
nl|'\n'
name|'volumes'
op|'='
op|'['
op|']'
newline|'\n'
name|'snapshots'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'create_volumes_and_snapshots'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'bdm'
name|'in'
name|'block_device_mapping1'
op|':'
newline|'\n'
indent|'                '
name|'if'
string|"'volume_id'"
name|'in'
name|'bdm'
op|':'
newline|'\n'
indent|'                    '
name|'vol'
op|'='
name|'self'
op|'.'
name|'_volume_create'
op|'('
name|'bdm'
op|'['
string|"'volume_id'"
op|']'
op|')'
newline|'\n'
name|'volumes'
op|'.'
name|'append'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'if'
string|"'snapshot_id'"
name|'in'
name|'bdm'
op|':'
newline|'\n'
indent|'                    '
name|'kwargs'
op|'='
op|'{'
string|"'volume_id'"
op|':'
number|'76543210'
op|','
nl|'\n'
string|"'volume_size'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'test-snap'"
op|','
nl|'\n'
string|"'description'"
op|':'
string|"'test snap desc'"
op|','
nl|'\n'
string|"'snap_id'"
op|':'
name|'bdm'
op|'['
string|"'snapshot_id'"
op|']'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'available'"
op|'}'
newline|'\n'
name|'snap'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'create_snapshot_with_kwargs'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'snapshots'
op|'.'
name|'append'
op|'('
name|'snap'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
op|'('
name|'volumes'
op|','
name|'snapshots'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assertImageSet
dedent|''
name|'def'
name|'_assertImageSet'
op|'('
name|'self'
op|','
name|'result'
op|','
name|'root_device_type'
op|','
name|'root_device_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'result'
op|'['
string|"'imagesSet'"
op|']'
op|')'
op|')'
newline|'\n'
name|'result'
op|'='
name|'result'
op|'['
string|"'imagesSet'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'rootDeviceType'"
name|'in'
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'rootDeviceType'"
op|']'
op|','
name|'root_device_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'rootDeviceName'"
name|'in'
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'rootDeviceName'"
op|']'
op|','
name|'root_device_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'blockDeviceMapping'"
name|'in'
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|variable|_expected_root_device_name1
dedent|''
name|'_expected_root_device_name1'
op|'='
string|"'/dev/sda1'"
newline|'\n'
comment|"# NOTE(yamahata): noDevice doesn't make sense when returning mapping"
nl|'\n'
comment|'#                 It makes sense only when user overriding existing'
nl|'\n'
comment|'#                 mapping.'
nl|'\n'
DECL|variable|_expected_bdms1
name|'_expected_bdms1'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb0'"
op|','
string|"'virtualName'"
op|':'
string|"'ephemeral0'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb1'"
op|','
string|"'ebs'"
op|':'
op|'{'
string|"'snapshotId'"
op|':'
nl|'\n'
string|"'snap-00053977'"
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb2'"
op|','
string|"'ebs'"
op|':'
op|'{'
string|"'snapshotId'"
op|':'
nl|'\n'
string|"'vol-00053977'"
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb3'"
op|','
string|"'virtualName'"
op|':'
string|"'ephemeral5'"
op|'}'
op|','
nl|'\n'
comment|"# {'deviceName': '/dev/sdb4', 'noDevice': True},"
nl|'\n'
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdc0'"
op|','
string|"'virtualName'"
op|':'
string|"'swap'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdc1'"
op|','
string|"'ebs'"
op|':'
op|'{'
string|"'snapshotId'"
op|':'
nl|'\n'
string|"'snap-00bc614e'"
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdc2'"
op|','
string|"'ebs'"
op|':'
op|'{'
string|"'snapshotId'"
op|':'
nl|'\n'
string|"'vol-00bc614e'"
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdc3'"
op|','
string|"'virtualName'"
op|':'
string|"'ephemeral6'"
op|'}'
op|','
nl|'\n'
comment|"# {'deviceName': '/dev/sdc4', 'noDevice': True}"
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|_expected_root_device_name2
name|'_expected_root_device_name2'
op|'='
string|"'/dev/sdb1'"
newline|'\n'
DECL|variable|_expected_bdms2
name|'_expected_bdms2'
op|'='
op|'['
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb1'"
op|','
nl|'\n'
string|"'ebs'"
op|':'
op|'{'
string|"'snapshotId'"
op|':'
string|"'snap-00053977'"
op|'}'
op|'}'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_run_instance
name|'def'
name|'_run_instance'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rv'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'run_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'instance_id'
op|'='
name|'rv'
op|'['
string|"'instancesSet'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'instanceId'"
op|']'
newline|'\n'
name|'return'
name|'instance_id'
newline|'\n'
nl|'\n'
DECL|member|_restart_compute_service
dedent|''
name|'def'
name|'_restart_compute_service'
op|'('
name|'self'
op|','
name|'periodic_interval_max'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""restart compute service. NOTE: fake driver forgets all instances."""'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'if'
name|'periodic_interval_max'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
nl|'\n'
string|"'compute'"
op|','
name|'periodic_interval_max'
op|'='
name|'periodic_interval_max'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_volume_create
dedent|''
dedent|''
name|'def'
name|'_volume_create'
op|'('
name|'self'
op|','
name|'volume_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'test-volume'"
op|','
nl|'\n'
string|"'description'"
op|':'
string|"'test volume description'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'available'"
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'size'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'attach_status'"
op|':'
string|"'detached'"
op|'}'
newline|'\n'
name|'if'
name|'volume_id'
op|':'
newline|'\n'
indent|'            '
name|'kwargs'
op|'['
string|"'volume_id'"
op|']'
op|'='
name|'volume_id'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'create_with_kwargs'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assert_volume_attached
dedent|''
name|'def'
name|'_assert_volume_attached'
op|'('
name|'self'
op|','
name|'vol'
op|','
name|'instance_uuid'
op|','
name|'mountpoint'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'instance_uuid'"
op|']'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'mountpoint'"
op|']'
op|','
name|'mountpoint'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'status'"
op|']'
op|','
string|'"in-use"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'attach_status'"
op|']'
op|','
string|'"attached"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assert_volume_detached
dedent|''
name|'def'
name|'_assert_volume_detached'
op|'('
name|'self'
op|','
name|'vol'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'instance_uuid'"
op|']'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'mountpoint'"
op|']'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'status'"
op|']'
op|','
string|'"available"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'attach_status'"
op|']'
op|','
string|'"detached"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_start_with_volume
dedent|''
name|'def'
name|'test_stop_start_with_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Make sure run instance with block device mapping works.'
nl|'\n'
indent|'        '
name|'availability_zone'
op|'='
string|"'zone1:host1'"
newline|'\n'
name|'vol1'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'size'
op|'='
number|'1'
op|','
nl|'\n'
name|'availability_zone'
op|'='
name|'availability_zone'
op|')'
newline|'\n'
name|'vol2'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'size'
op|'='
number|'1'
op|','
nl|'\n'
name|'availability_zone'
op|'='
name|'availability_zone'
op|')'
newline|'\n'
name|'vol1_uuid'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_vol_id_to_uuid'
op|'('
name|'vol1'
op|'['
string|"'volumeId'"
op|']'
op|')'
newline|'\n'
name|'vol2_uuid'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_vol_id_to_uuid'
op|'('
name|'vol2'
op|'['
string|"'volumeId'"
op|']'
op|')'
newline|'\n'
comment|'# enforce periodic tasks run in short time to avoid wait for 60s.'
nl|'\n'
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
name|'periodic_interval_max'
op|'='
number|'0.3'
op|')'
newline|'\n'
nl|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-1'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'CONF'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'block_device_mapping'"
op|':'
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdb'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
name|'vol1_uuid'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdc'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
name|'vol2_uuid'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
op|']'
op|'}'
newline|'\n'
name|'ec2_instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'instance_uuid'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_inst_id_to_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'ec2_instance_id'
op|')'
newline|'\n'
name|'vols'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'vols'
op|'='
op|'['
name|'v'
name|'for'
name|'v'
name|'in'
name|'vols'
name|'if'
name|'v'
op|'['
string|"'instance_uuid'"
op|']'
op|'=='
name|'instance_uuid'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'vols'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'vol'
name|'in'
name|'vols'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'str'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
op|'=='
name|'str'
op|'('
name|'vol1_uuid'
op|')'
name|'or'
nl|'\n'
name|'str'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
op|'=='
name|'str'
op|'('
name|'vol2_uuid'
op|')'
op|')'
newline|'\n'
name|'if'
op|'('
name|'str'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
op|'=='
name|'str'
op|'('
name|'vol1_uuid'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'attach'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|','
nl|'\n'
name|'instance_uuid'
op|','
string|"'/dev/sdb'"
op|')'
newline|'\n'
dedent|''
name|'elif'
op|'('
name|'str'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
op|'=='
name|'str'
op|'('
name|'vol2_uuid'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'attach'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|','
nl|'\n'
name|'instance_uuid'
op|','
string|"'/dev/sdc'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'vol'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol'
op|','
name|'instance_uuid'
op|','
string|"'/dev/sdb'"
op|')'
newline|'\n'
nl|'\n'
name|'vol'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol2_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol'
op|','
name|'instance_uuid'
op|','
string|"'/dev/sdc'"
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'stop_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'vol'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol'
op|','
name|'instance_uuid'
op|','
string|"'/dev/sdb'"
op|')'
newline|'\n'
nl|'\n'
name|'vol'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol'
op|','
name|'instance_uuid'
op|','
string|"'/dev/sdb'"
op|')'
newline|'\n'
nl|'\n'
name|'vol'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol2_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol'
op|','
name|'instance_uuid'
op|','
string|"'/dev/sdc'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'start_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
name|'vols'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'vols'
op|'='
op|'['
name|'v'
name|'for'
name|'v'
name|'in'
name|'vols'
name|'if'
name|'v'
op|'['
string|"'instance_uuid'"
op|']'
op|'=='
name|'instance_uuid'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'vols'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'vol'
name|'in'
name|'vols'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'str'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
op|'=='
name|'str'
op|'('
name|'vol1_uuid'
op|')'
name|'or'
nl|'\n'
name|'str'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
op|'=='
name|'str'
op|'('
name|'vol2_uuid'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vol'
op|'['
string|"'mountpoint'"
op|']'
op|'=='
string|"'/dev/sdb'"
name|'or'
nl|'\n'
name|'vol'
op|'['
string|"'mountpoint'"
op|']'
op|'=='
string|"'/dev/sdc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'instance_uuid'"
op|']'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'status'"
op|']'
op|','
string|'"in-use"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'attach_status'"
op|']'
op|','
string|'"attached"'
op|')'
newline|'\n'
nl|'\n'
comment|'#Here we puke...'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'admin_ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
name|'read_deleted'
op|'='
string|'"no"'
op|')'
newline|'\n'
name|'vol'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get'
op|'('
name|'admin_ctxt'
op|','
name|'vol2_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'vol'
op|'['
string|"'deleted'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1'
op|'['
string|"'volumeId'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_with_attached_volume
dedent|''
name|'def'
name|'test_stop_with_attached_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Make sure attach info is reflected to block device mapping.'
nl|'\n'
nl|'\n'
indent|'        '
name|'availability_zone'
op|'='
string|"'zone1:host1'"
newline|'\n'
name|'vol1'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'size'
op|'='
number|'1'
op|','
nl|'\n'
name|'availability_zone'
op|'='
name|'availability_zone'
op|')'
newline|'\n'
name|'vol2'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'size'
op|'='
number|'1'
op|','
nl|'\n'
name|'availability_zone'
op|'='
name|'availability_zone'
op|')'
newline|'\n'
name|'vol1_uuid'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_vol_id_to_uuid'
op|'('
name|'vol1'
op|'['
string|"'volumeId'"
op|']'
op|')'
newline|'\n'
name|'vol2_uuid'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_vol_id_to_uuid'
op|'('
name|'vol2'
op|'['
string|"'volumeId'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# enforce periodic tasks run in short time to avoid wait for 60s.'
nl|'\n'
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
name|'periodic_interval_max'
op|'='
number|'0.3'
op|')'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-1'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'CONF'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'block_device_mapping'"
op|':'
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdb'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
name|'vol1_uuid'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'ec2_instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'instance_uuid'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_inst_id_to_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'ec2_instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'vols'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'vols'
op|'='
op|'['
name|'v'
name|'for'
name|'v'
name|'in'
name|'vols'
name|'if'
name|'v'
op|'['
string|"'instance_uuid'"
op|']'
op|'=='
name|'instance_uuid'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'vols'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'for'
name|'vol'
name|'in'
name|'vols'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|','
name|'vol1_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol'
op|','
name|'instance_uuid'
op|','
string|"'/dev/sdb'"
op|')'
newline|'\n'
dedent|''
name|'vol'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol2_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_detached'
op|'('
name|'vol'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'compute_api'
op|'.'
name|'attach_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'volume_id'
op|'='
name|'vol2_uuid'
op|','
nl|'\n'
name|'device'
op|'='
string|"'/dev/sdc'"
op|')'
newline|'\n'
nl|'\n'
name|'vol1'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol1'
op|','
name|'instance_uuid'
op|','
string|"'/dev/sdb'"
op|')'
newline|'\n'
nl|'\n'
name|'vol2'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol2_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol2'
op|','
name|'instance_uuid'
op|','
string|"'/dev/sdc'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'compute_api'
op|'.'
name|'detach_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|'='
name|'vol1_uuid'
op|')'
newline|'\n'
nl|'\n'
name|'vol1'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_detached'
op|'('
name|'vol1'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'stop_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'vol2'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol2_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol2'
op|','
name|'instance_uuid'
op|','
string|"'/dev/sdc'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'start_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
name|'vols'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'vols'
op|'='
op|'['
name|'v'
name|'for'
name|'v'
name|'in'
name|'vols'
name|'if'
name|'v'
op|'['
string|"'instance_uuid'"
op|']'
op|'=='
name|'instance_uuid'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'vols'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert_volume_detached'
op|'('
name|'vol1'
op|')'
newline|'\n'
nl|'\n'
name|'vol1'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_detached'
op|'('
name|'vol1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_snapshot
dedent|''
name|'def'
name|'_create_snapshot'
op|'('
name|'self'
op|','
name|'ec2_volume_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|'='
name|'ec2_volume_id'
op|')'
newline|'\n'
name|'return'
name|'result'
op|'['
string|"'snapshotId'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_run_with_snapshot
dedent|''
name|'def'
name|'test_run_with_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Makes sure run/stop/start instance with snapshot works.'
nl|'\n'
indent|'        '
name|'availability_zone'
op|'='
string|"'zone1:host1'"
newline|'\n'
name|'vol1'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'size'
op|'='
number|'1'
op|','
nl|'\n'
name|'availability_zone'
op|'='
name|'availability_zone'
op|')'
newline|'\n'
nl|'\n'
name|'snap1'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'vol1'
op|'['
string|"'volumeId'"
op|']'
op|','
nl|'\n'
name|'name'
op|'='
string|"'snap-1'"
op|','
nl|'\n'
name|'description'
op|'='
string|"'test snap of vol %s'"
op|'%'
nl|'\n'
name|'vol1'
op|'['
string|"'volumeId'"
op|']'
op|')'
newline|'\n'
name|'snap1_uuid'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_snap_id_to_uuid'
op|'('
name|'snap1'
op|'['
string|"'snapshotId'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'snap2'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'vol1'
op|'['
string|"'volumeId'"
op|']'
op|','
nl|'\n'
name|'name'
op|'='
string|"'snap-2'"
op|','
nl|'\n'
name|'description'
op|'='
string|"'test snap of vol %s'"
op|'%'
nl|'\n'
name|'vol1'
op|'['
string|"'volumeId'"
op|']'
op|')'
newline|'\n'
name|'snap2_uuid'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_snap_id_to_uuid'
op|'('
name|'snap2'
op|'['
string|"'snapshotId'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-1'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'CONF'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'block_device_mapping'"
op|':'
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/vdb'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
name|'snap1_uuid'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|','
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/vdc'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
name|'snap2_uuid'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'ec2_instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'instance_uuid'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_inst_id_to_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'ec2_instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'vols'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'vols'
op|'='
op|'['
name|'v'
name|'for'
name|'v'
name|'in'
name|'vols'
name|'if'
name|'v'
op|'['
string|"'instance_uuid'"
op|']'
op|'=='
name|'instance_uuid'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'vols'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
name|'vol1_id'
op|'='
name|'None'
newline|'\n'
name|'vol2_id'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'vol'
name|'in'
name|'vols'
op|':'
newline|'\n'
indent|'            '
name|'snapshot_uuid'
op|'='
name|'vol'
op|'['
string|"'snapshot_id'"
op|']'
newline|'\n'
name|'if'
name|'snapshot_uuid'
op|'=='
name|'snap1_uuid'
op|':'
newline|'\n'
indent|'                '
name|'vol1_id'
op|'='
name|'vol'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'mountpoint'
op|'='
string|"'/dev/vdb'"
newline|'\n'
dedent|''
name|'elif'
name|'snapshot_uuid'
op|'=='
name|'snap2_uuid'
op|':'
newline|'\n'
indent|'                '
name|'vol2_id'
op|'='
name|'vol'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'mountpoint'
op|'='
string|"'/dev/vdc'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol'
op|','
name|'instance_uuid'
op|','
name|'mountpoint'
op|')'
newline|'\n'
nl|'\n'
comment|'#Just make sure we found them'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vol1_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vol2_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'admin_ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
name|'read_deleted'
op|'='
string|'"no"'
op|')'
newline|'\n'
name|'vol'
op|'='
name|'self'
op|'.'
name|'volume_api'
op|'.'
name|'get'
op|'('
name|'admin_ctxt'
op|','
name|'vol1_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_detached'
op|'('
name|'vol'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'vol'
op|'['
string|"'deleted'"
op|']'
op|')'
newline|'\n'
comment|'#db.volume_destroy(self.context, vol1_id)'
nl|'\n'
nl|'\n'
comment|'##admin_ctxt = context.get_admin_context(read_deleted="only")'
nl|'\n'
comment|'##vol = db.volume_get(admin_ctxt, vol2_id)'
nl|'\n'
comment|"##self.assertTrue(vol['deleted'])"
nl|'\n'
nl|'\n'
comment|'#for snapshot_id in (ec2_snapshot1_id, ec2_snapshot2_id):'
nl|'\n'
comment|'#    self.cloud.delete_snapshot(self.context, snapshot_id)'
nl|'\n'
nl|'\n'
DECL|member|test_create_image
dedent|''
name|'def'
name|'test_create_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Make sure that CreateImage works.'
nl|'\n'
comment|'# enforce periodic tasks run in short time to avoid wait for 60s.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
name|'periodic_interval_max'
op|'='
number|'0.3'
op|')'
newline|'\n'
nl|'\n'
op|'('
name|'volumes'
op|','
name|'snapshots'
op|')'
op|'='
name|'self'
op|'.'
name|'_setUpImageSet'
op|'('
nl|'\n'
name|'create_volumes_and_snapshots'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-1'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'CONF'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'ec2_instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_fake_bdm_get
name|'def'
name|'_fake_bdm_get'
op|'('
name|'ctxt'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|'{'
string|"'volume_id'"
op|':'
number|'87654321'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdh'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
number|'98765432'
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdi'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'device_name'"
op|':'
name|'None'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
string|"'ephemeral0'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
string|"'swap'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdc'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
string|"'ephemeral1'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdd'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
string|"'ephemeral2'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sd3'"
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
