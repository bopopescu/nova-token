begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2011 X.commerce, a business unit of eBay Inc.'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'base64'
newline|'\n'
name|'import'
name|'copy'
newline|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'functools'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'string'
newline|'\n'
name|'import'
name|'tempfile'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'ec2'
name|'import'
name|'cloud'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'ec2'
name|'import'
name|'ec2utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'ec2'
name|'import'
name|'inst_state'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'api'
name|'as'
name|'compute_api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'power_state'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'utils'
name|'as'
name|'compute_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'image'
name|'import'
name|'s3'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'api'
name|'as'
name|'network_api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
name|'import'
name|'fake'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_fake_cache
name|'def'
name|'get_fake_cache'
op|'('
op|')'
op|':'
newline|'\n'
DECL|function|_ip
indent|'    '
name|'def'
name|'_ip'
op|'('
name|'ip'
op|','
name|'fixed'
op|'='
name|'True'
op|','
name|'floats'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ip_dict'
op|'='
op|'{'
string|"'address'"
op|':'
name|'ip'
op|','
string|"'type'"
op|':'
string|"'fixed'"
op|'}'
newline|'\n'
name|'if'
name|'not'
name|'fixed'
op|':'
newline|'\n'
indent|'            '
name|'ip_dict'
op|'['
string|"'type'"
op|']'
op|'='
string|"'floating'"
newline|'\n'
dedent|''
name|'if'
name|'fixed'
name|'and'
name|'floats'
op|':'
newline|'\n'
indent|'            '
name|'ip_dict'
op|'['
string|"'floating_ips'"
op|']'
op|'='
op|'['
name|'_ip'
op|'('
name|'f'
op|','
name|'fixed'
op|'='
name|'False'
op|')'
name|'for'
name|'f'
name|'in'
name|'floats'
op|']'
newline|'\n'
dedent|''
name|'return'
name|'ip_dict'
newline|'\n'
nl|'\n'
dedent|''
name|'info'
op|'='
op|'['
op|'{'
string|"'address'"
op|':'
string|"'aa:bb:cc:dd:ee:ff'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'bridge'"
op|':'
string|"'br0'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'private'"
op|','
nl|'\n'
string|"'subnets'"
op|':'
op|'['
op|'{'
string|"'cidr'"
op|':'
string|"'192.168.0.0/24'"
op|','
nl|'\n'
string|"'ips'"
op|':'
op|'['
name|'_ip'
op|'('
string|"'192.168.0.3'"
op|','
nl|'\n'
name|'floats'
op|'='
op|'['
string|"'1.2.3.4'"
op|','
nl|'\n'
string|"'5.6.7.8'"
op|']'
op|')'
op|','
nl|'\n'
name|'_ip'
op|'('
string|"'192.168.0.4'"
op|')'
op|']'
op|'}'
op|']'
op|'}'
op|'}'
op|']'
newline|'\n'
name|'if'
name|'FLAGS'
op|'.'
name|'use_ipv6'
op|':'
newline|'\n'
indent|'        '
name|'ipv6_addr'
op|'='
string|"'fe80:b33f::a8bb:ccff:fedd:eeff'"
newline|'\n'
name|'info'
op|'['
number|'0'
op|']'
op|'['
string|"'network'"
op|']'
op|'['
string|"'subnets'"
op|']'
op|'.'
name|'append'
op|'('
op|'{'
string|"'cidr'"
op|':'
string|"'fe80:b33f::/64'"
op|','
nl|'\n'
string|"'ips'"
op|':'
op|'['
name|'_ip'
op|'('
name|'ipv6_addr'
op|')'
op|']'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'info'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_instances_with_cached_ips
dedent|''
name|'def'
name|'get_instances_with_cached_ips'
op|'('
name|'orig_func'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Kludge the cache into instance(s) without having to create DB\n    entries\n    """'
newline|'\n'
name|'instances'
op|'='
name|'orig_func'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'instances'
op|','
name|'list'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'instance'
name|'in'
name|'instances'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'['
string|"'info_cache'"
op|']'
op|'='
op|'{'
string|"'network_info'"
op|':'
name|'get_fake_cache'
op|'('
op|')'
op|'}'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'instances'
op|'['
string|"'info_cache'"
op|']'
op|'='
op|'{'
string|"'network_info'"
op|':'
name|'get_fake_cache'
op|'('
op|')'
op|'}'
newline|'\n'
dedent|''
name|'return'
name|'instances'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CloudTestCase
dedent|''
name|'class'
name|'CloudTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CloudTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'compute_driver'
op|'='
string|"'nova.virt.fake.FakeDriver'"
op|','
nl|'\n'
name|'stub_network'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_show
name|'def'
name|'fake_show'
op|'('
name|'meh'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'id'"
op|':'
name|'id'
op|','
nl|'\n'
string|"'container_format'"
op|':'
string|"'ami'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'kernel_id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|','
nl|'\n'
string|"'image_state'"
op|':'
string|"'available'"
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_detail
dedent|''
name|'def'
name|'fake_detail'
op|'('
name|'_self'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'image'
op|'='
name|'fake_show'
op|'('
name|'None'
op|','
name|'context'
op|','
name|'None'
op|')'
newline|'\n'
name|'image'
op|'['
string|"'name'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'filters'"
op|','
op|'{'
op|'}'
op|')'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
newline|'\n'
name|'return'
op|'['
name|'image'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'detail'"
op|','
name|'fake_detail'
op|')'
newline|'\n'
name|'fake'
op|'.'
name|'stub_out_image_service'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
DECL|function|dumb
name|'def'
name|'dumb'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_utils'
op|','
string|"'notify_about_instance_usage'"
op|','
name|'dumb'
op|')'
newline|'\n'
comment|'# set up our cloud'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'='
name|'cloud'
op|'.'
name|'CloudController'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'compute_scheduler_driver'
op|'='
string|"'nova.scheduler.'"
nl|'\n'
string|"'chance.ChanceScheduler'"
op|')'
newline|'\n'
nl|'\n'
comment|'# set up services'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'scheduler'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'network'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'volume'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'project_id'
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
comment|"# NOTE(comstud): Make 'cast' behave like a 'call' which will"
nl|'\n'
comment|'# ensure that operations complete'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'rpc'
op|','
string|"'cast'"
op|','
name|'rpc'
op|'.'
name|'call'
op|')'
newline|'\n'
nl|'\n'
comment|'# make sure we can map ami-00000001/2 to a uuid in FakeImageService'
nl|'\n'
name|'db'
op|'.'
name|'api'
op|'.'
name|'s3_image_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'api'
op|'.'
name|'s3_image_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CloudTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
name|'fake'
op|'.'
name|'FakeImageService_reset'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_stub_instance_get_with_fixed_ips
dedent|''
name|'def'
name|'_stub_instance_get_with_fixed_ips'
op|'('
name|'self'
op|','
name|'func_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig_func'
op|'='
name|'getattr'
op|'('
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'compute_api'
op|','
name|'func_name'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get
name|'def'
name|'fake_get'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'get_instances_with_cached_ips'
op|'('
name|'orig_func'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'compute_api'
op|','
name|'func_name'
op|','
name|'fake_get'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_key
dedent|''
name|'def'
name|'_create_key'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(vish): create depends on pool, so just call helper directly'
nl|'\n'
indent|'        '
name|'keypair_api'
op|'='
name|'compute_api'
op|'.'
name|'KeypairAPI'
op|'('
op|')'
newline|'\n'
name|'return'
name|'keypair_api'
op|'.'
name|'create_key_pair'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|','
nl|'\n'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_regions
dedent|''
name|'def'
name|'test_describe_regions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure describe regions runs without raising an exception"""'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_regions'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'regionInfo'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'region_list'
op|'='
op|'['
string|'"one=test_host1"'
op|','
string|'"two=test_host2"'
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_regions'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'regionInfo'"
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_addresses
dedent|''
name|'def'
name|'test_describe_addresses'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure describe addresses runs without raising an exception"""'
newline|'\n'
name|'address'
op|'='
string|'"10.10.10.10"'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
name|'address'
op|','
nl|'\n'
string|"'pool'"
op|':'
string|"'nova'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'allocate_address'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_addresses'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'release_address'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'public_ip'
op|'='
name|'address'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'address'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_specific_address
dedent|''
name|'def'
name|'test_describe_specific_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure describe specific address works"""'
newline|'\n'
name|'addresses'
op|'='
op|'['
string|'"10.10.10.10"'
op|','
string|'"10.10.10.11"'
op|']'
newline|'\n'
name|'for'
name|'address'
name|'in'
name|'addresses'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'floating_ip_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
name|'address'
op|','
nl|'\n'
string|"'pool'"
op|':'
string|"'nova'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'allocate_address'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
dedent|''
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_addresses'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'addressesSet'"
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_addresses'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'public_ip'
op|'='
op|'['
string|"'10.10.10.10'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'addressesSet'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'for'
name|'address'
name|'in'
name|'addresses'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'release_address'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'public_ip'
op|'='
name|'address'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'address'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_allocate_address
dedent|''
dedent|''
name|'def'
name|'test_allocate_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'address'
op|'='
string|'"10.10.10.10"'
newline|'\n'
name|'allocate'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'allocate_address'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
name|'address'
op|','
nl|'\n'
string|"'pool'"
op|':'
string|"'nova'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'allocate'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
op|'['
string|"'publicIp'"
op|']'
op|','
name|'address'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NoMoreFloatingIps'
op|','
nl|'\n'
name|'allocate'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_release_address
dedent|''
name|'def'
name|'test_release_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'address'
op|'='
string|'"10.10.10.10"'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
name|'address'
op|','
nl|'\n'
string|"'pool'"
op|':'
string|"'nova'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'project_id'
op|'}'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'release_address'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'.'
name|'get'
op|'('
string|"'return'"
op|','
name|'None'
op|')'
op|','
string|"'true'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_associate_disassociate_address
dedent|''
name|'def'
name|'test_associate_disassociate_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Verifies associate runs cleanly without raising an exception"""'
newline|'\n'
name|'address'
op|'='
string|'"10.10.10.10"'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
name|'address'
op|','
nl|'\n'
string|"'pool'"
op|':'
string|"'nova'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'allocate_address'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
comment|'# TODO(jkoelker) Probably need to query for instance_type_id and'
nl|'\n'
comment|'#                make sure we get a valid one'
nl|'\n'
name|'inst'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'host'"
op|':'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'host'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'networks'
op|'='
name|'db'
op|'.'
name|'network_get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'for'
name|'network'
name|'in'
name|'networks'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'network_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'network'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
name|'self'
op|'.'
name|'network'
op|'.'
name|'host'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'project_id'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
newline|'\n'
name|'nw_info'
op|'='
name|'self'
op|'.'
name|'network'
op|'.'
name|'allocate_for_instance'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
name|'inst'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'instance_uuid'
op|'='
string|"''"
op|','
nl|'\n'
name|'host'
op|'='
name|'inst'
op|'['
string|"'host'"
op|']'
op|','
nl|'\n'
name|'vpn'
op|'='
name|'None'
op|','
nl|'\n'
name|'rxtx_factor'
op|'='
number|'3'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
name|'fixed_ips'
op|'='
name|'nw_info'
op|'.'
name|'fixed_ips'
op|'('
op|')'
newline|'\n'
name|'ec2_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_inst_id'
op|'('
name|'inst'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'ec2utils'
op|','
string|"'get_ip_info_for_instance'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'args'
op|':'
op|'{'
string|"'fixed_ips'"
op|':'
op|'['
string|"'10.0.0.1'"
op|']'
op|','
nl|'\n'
string|"'fixed_ip6s'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|"'floating_ips'"
op|':'
op|'['
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'network_api'
op|'.'
name|'API'
op|','
string|"'get_instance_id_by_floating_address'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'args'
op|':'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'associate_address'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
name|'ec2_id'
op|','
nl|'\n'
name|'public_ip'
op|'='
name|'address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'disassociate_address'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'public_ip'
op|'='
name|'address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'release_address'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'public_ip'
op|'='
name|'address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'.'
name|'deallocate_fixed_ip'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'fixed_ips'
op|'['
number|'0'
op|']'
op|'['
string|"'address'"
op|']'
op|','
nl|'\n'
name|'inst'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'address'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_security_groups
dedent|''
name|'def'
name|'test_describe_security_groups'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure describe_security_groups works and filters results."""'
newline|'\n'
name|'sec'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'test'"
op|'}'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_security_groups'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
comment|'# NOTE(vish): should have the default group as well'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'securityGroupInfo'"
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_security_groups'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'group_name'
op|'='
op|'['
name|'sec'
op|'['
string|"'name'"
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'securityGroupInfo'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'result'
op|'['
string|"'securityGroupInfo'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'groupName'"
op|']'
op|','
nl|'\n'
name|'sec'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'security_group_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'sec'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_security_groups_by_id
dedent|''
name|'def'
name|'test_describe_security_groups_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sec'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'test'"
op|'}'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_security_groups'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'group_id'
op|'='
op|'['
name|'sec'
op|'['
string|"'id'"
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'securityGroupInfo'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'result'
op|'['
string|"'securityGroupInfo'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'groupName'"
op|']'
op|','
nl|'\n'
name|'sec'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'default'
op|'='
name|'db'
op|'.'
name|'security_group_get_by_name'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'default'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_security_groups'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'group_id'
op|'='
op|'['
name|'default'
op|'['
string|"'id'"
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'securityGroupInfo'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'result'
op|'['
string|"'securityGroupInfo'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'groupName'"
op|']'
op|','
nl|'\n'
string|"'default'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'security_group_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'sec'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_delete_security_group
dedent|''
name|'def'
name|'test_create_delete_security_group'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'descript'
op|'='
string|"'test description'"
newline|'\n'
name|'create'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_security_group'
newline|'\n'
name|'result'
op|'='
name|'create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'testgrp'"
op|','
name|'descript'
op|')'
newline|'\n'
name|'group_descript'
op|'='
name|'result'
op|'['
string|"'securityGroupSet'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'groupDescription'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'descript'
op|','
name|'group_descript'
op|')'
newline|'\n'
name|'delete'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_security_group'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'testgrp'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_quota_limit
dedent|''
name|'def'
name|'test_security_group_quota_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'quota_security_groups'
op|'='
number|'10'
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'1'
op|','
name|'FLAGS'
op|'.'
name|'quota_security_groups'
op|'+'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'name'
op|'='
string|"'test name %i'"
op|'%'
name|'i'
newline|'\n'
name|'descript'
op|'='
string|"'test description %i'"
op|'%'
name|'i'
newline|'\n'
name|'create'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_security_group'
newline|'\n'
name|'result'
op|'='
name|'create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'name'
op|','
name|'descript'
op|')'
newline|'\n'
nl|'\n'
comment|"# 11'th group should fail"
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'EC2APIError'
op|','
nl|'\n'
name|'create'
op|','
name|'self'
op|'.'
name|'context'
op|','
string|"'foo'"
op|','
string|"'bar'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_security_group_by_id
dedent|''
name|'def'
name|'test_delete_security_group_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sec'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'test'"
op|'}'
op|')'
newline|'\n'
name|'delete'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_security_group'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'delete'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group_id'
op|'='
name|'sec'
op|'['
string|"'id'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_security_group_with_bad_name
dedent|''
name|'def'
name|'test_delete_security_group_with_bad_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'delete'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_security_group'
newline|'\n'
name|'notfound'
op|'='
name|'exception'
op|'.'
name|'SecurityGroupNotFound'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'notfound'
op|','
name|'delete'
op|','
name|'self'
op|'.'
name|'context'
op|','
string|"'badname'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_security_group_with_bad_group_id
dedent|''
name|'def'
name|'test_delete_security_group_with_bad_group_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'delete'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_security_group'
newline|'\n'
name|'notfound'
op|'='
name|'exception'
op|'.'
name|'SecurityGroupNotFound'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'notfound'
op|','
name|'delete'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'group_id'
op|'='
number|'999'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_security_group_no_params
dedent|''
name|'def'
name|'test_delete_security_group_no_params'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'delete'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_security_group'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'EC2APIError'
op|','
name|'delete'
op|','
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_authorize_security_group_ingress
dedent|''
name|'def'
name|'test_authorize_security_group_ingress'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
string|"'name'"
op|':'
string|"'test'"
op|'}'
newline|'\n'
name|'sec'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'kwargs'
op|')'
newline|'\n'
name|'authz'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'authorize_security_group_ingress'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'to_port'"
op|':'
string|"'999'"
op|','
string|"'from_port'"
op|':'
string|"'999'"
op|','
string|"'ip_protocol'"
op|':'
string|"'tcp'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'authz'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group_name'
op|'='
name|'sec'
op|'['
string|"'name'"
op|']'
op|','
op|'**'
name|'kwargs'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_authorize_security_group_ingress_ip_permissions_ip_ranges
dedent|''
name|'def'
name|'test_authorize_security_group_ingress_ip_permissions_ip_ranges'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
string|"'name'"
op|':'
string|"'test'"
op|'}'
newline|'\n'
name|'sec'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'kwargs'
op|')'
newline|'\n'
name|'authz'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'authorize_security_group_ingress'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'ip_permissions'"
op|':'
op|'['
op|'{'
string|"'to_port'"
op|':'
number|'81'
op|','
string|"'from_port'"
op|':'
number|'81'
op|','
nl|'\n'
string|"'ip_ranges'"
op|':'
nl|'\n'
op|'{'
string|"'1'"
op|':'
op|'{'
string|"'cidr_ip'"
op|':'
string|"u'0.0.0.0/0'"
op|'}'
op|','
nl|'\n'
string|"'2'"
op|':'
op|'{'
string|"'cidr_ip'"
op|':'
string|"u'10.10.10.10/32'"
op|'}'
op|'}'
op|','
nl|'\n'
string|"'ip_protocol'"
op|':'
string|"u'tcp'"
op|'}'
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'authz'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group_name'
op|'='
name|'sec'
op|'['
string|"'name'"
op|']'
op|','
op|'**'
name|'kwargs'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_authorize_security_group_fail_missing_source_group
dedent|''
name|'def'
name|'test_authorize_security_group_fail_missing_source_group'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
string|"'name'"
op|':'
string|"'test'"
op|'}'
newline|'\n'
name|'sec'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'kwargs'
op|')'
newline|'\n'
name|'authz'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'authorize_security_group_ingress'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'ip_permissions'"
op|':'
op|'['
op|'{'
string|"'to_port'"
op|':'
number|'81'
op|','
string|"'from_port'"
op|':'
number|'81'
op|','
nl|'\n'
string|"'ip_ranges'"
op|':'
op|'{'
string|"'1'"
op|':'
op|'{'
string|"'cidr_ip'"
op|':'
string|"u'0.0.0.0/0'"
op|'}'
op|','
nl|'\n'
string|"'2'"
op|':'
op|'{'
string|"'cidr_ip'"
op|':'
string|"u'10.10.10.10/32'"
op|'}'
op|'}'
op|','
nl|'\n'
string|"'groups'"
op|':'
op|'{'
string|"'1'"
op|':'
op|'{'
string|"'user_id'"
op|':'
string|"u'someuser'"
op|','
nl|'\n'
string|"'group_name'"
op|':'
string|"u'somegroup1'"
op|'}'
op|'}'
op|','
nl|'\n'
string|"'ip_protocol'"
op|':'
string|"u'tcp'"
op|'}'
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'SecurityGroupNotFound'
op|','
name|'authz'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'group_name'
op|'='
name|'sec'
op|'['
string|"'name'"
op|']'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_authorize_security_group_ingress_ip_permissions_groups
dedent|''
name|'def'
name|'test_authorize_security_group_ingress_ip_permissions_groups'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
string|"'name'"
op|':'
string|"'test'"
op|'}'
newline|'\n'
name|'sec'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
string|"'someuser'"
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'somegroup1'"
op|'}'
op|')'
newline|'\n'
name|'sec'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
string|"'someuser'"
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'othergroup2'"
op|'}'
op|')'
newline|'\n'
name|'sec'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'kwargs'
op|')'
newline|'\n'
name|'authz'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'authorize_security_group_ingress'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'ip_permissions'"
op|':'
op|'['
op|'{'
string|"'to_port'"
op|':'
number|'81'
op|','
string|"'from_port'"
op|':'
number|'81'
op|','
nl|'\n'
string|"'groups'"
op|':'
op|'{'
string|"'1'"
op|':'
op|'{'
string|"'user_id'"
op|':'
string|"u'someuser'"
op|','
nl|'\n'
string|"'group_name'"
op|':'
string|"u'somegroup1'"
op|'}'
op|','
nl|'\n'
string|"'2'"
op|':'
op|'{'
string|"'user_id'"
op|':'
string|"u'someuser'"
op|','
nl|'\n'
string|"'group_name'"
op|':'
string|"u'othergroup2'"
op|'}'
op|'}'
op|','
nl|'\n'
string|"'ip_protocol'"
op|':'
string|"u'tcp'"
op|'}'
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'authz'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group_name'
op|'='
name|'sec'
op|'['
string|"'name'"
op|']'
op|','
op|'**'
name|'kwargs'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_security_group_ingress_groups
dedent|''
name|'def'
name|'test_describe_security_group_ingress_groups'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
string|"'name'"
op|':'
string|"'test'"
op|'}'
newline|'\n'
name|'sec1'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'kwargs'
op|')'
newline|'\n'
name|'sec2'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
string|"'someuser'"
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'somegroup1'"
op|'}'
op|')'
newline|'\n'
name|'sec3'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
string|"'someuser'"
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'othergroup2'"
op|'}'
op|')'
newline|'\n'
name|'authz'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'authorize_security_group_ingress'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'ip_permissions'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'groups'"
op|':'
op|'{'
string|"'1'"
op|':'
op|'{'
string|"'user_id'"
op|':'
string|"u'someuser'"
op|','
nl|'\n'
string|"'group_name'"
op|':'
string|"u'somegroup1'"
op|'}'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'ip_protocol'"
op|':'
string|"'tcp'"
op|','
nl|'\n'
string|"'from_port'"
op|':'
number|'80'
op|','
nl|'\n'
string|"'to_port'"
op|':'
number|'80'
op|','
nl|'\n'
string|"'groups'"
op|':'
op|'{'
string|"'1'"
op|':'
op|'{'
string|"'user_id'"
op|':'
string|"u'someuser'"
op|','
nl|'\n'
string|"'group_name'"
op|':'
string|"u'othergroup2'"
op|'}'
op|'}'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'authz'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group_name'
op|'='
name|'sec1'
op|'['
string|"'name'"
op|']'
op|','
op|'**'
name|'kwargs'
op|')'
op|')'
newline|'\n'
name|'describe'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_security_groups'
newline|'\n'
name|'groups'
op|'='
name|'describe'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group_name'
op|'='
op|'['
string|"'test'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'groups'
op|'['
string|"'securityGroupInfo'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'actual_rules'
op|'='
name|'groups'
op|'['
string|"'securityGroupInfo'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'ipPermissions'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'actual_rules'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'expected_rules'
op|'='
op|'['
op|'{'
string|"'fromPort'"
op|':'
op|'-'
number|'1'
op|','
nl|'\n'
string|"'groups'"
op|':'
op|'['
op|'{'
string|"'groupName'"
op|':'
string|"'somegroup1'"
op|','
nl|'\n'
string|"'userId'"
op|':'
string|"'someuser'"
op|'}'
op|']'
op|','
nl|'\n'
string|"'ipProtocol'"
op|':'
string|"'icmp'"
op|','
nl|'\n'
string|"'ipRanges'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|"'toPort'"
op|':'
op|'-'
number|'1'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'fromPort'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'groups'"
op|':'
op|'['
op|'{'
string|"'groupName'"
op|':'
string|"u'somegroup1'"
op|','
nl|'\n'
string|"'userId'"
op|':'
string|"u'someuser'"
op|'}'
op|']'
op|','
nl|'\n'
string|"'ipProtocol'"
op|':'
string|"'tcp'"
op|','
nl|'\n'
string|"'ipRanges'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|"'toPort'"
op|':'
number|'65535'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'fromPort'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'groups'"
op|':'
op|'['
op|'{'
string|"'groupName'"
op|':'
string|"u'somegroup1'"
op|','
nl|'\n'
string|"'userId'"
op|':'
string|"u'someuser'"
op|'}'
op|']'
op|','
nl|'\n'
string|"'ipProtocol'"
op|':'
string|"'udp'"
op|','
nl|'\n'
string|"'ipRanges'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|"'toPort'"
op|':'
number|'65535'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'fromPort'"
op|':'
number|'80'
op|','
nl|'\n'
string|"'groups'"
op|':'
op|'['
op|'{'
string|"'groupName'"
op|':'
string|"u'othergroup2'"
op|','
nl|'\n'
string|"'userId'"
op|':'
string|"u'someuser'"
op|'}'
op|']'
op|','
nl|'\n'
string|"'ipProtocol'"
op|':'
string|"u'tcp'"
op|','
nl|'\n'
string|"'ipRanges'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|"'toPort'"
op|':'
number|'80'
op|'}'
op|']'
newline|'\n'
name|'for'
name|'rule'
name|'in'
name|'expected_rules'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'rule'
name|'in'
name|'actual_rules'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'db'
op|'.'
name|'security_group_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'sec3'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'security_group_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'sec2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'security_group_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'sec1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_revoke_security_group_ingress
dedent|''
name|'def'
name|'test_revoke_security_group_ingress'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
string|"'name'"
op|':'
string|"'test'"
op|'}'
newline|'\n'
name|'sec'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'kwargs'
op|')'
newline|'\n'
name|'authz'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'authorize_security_group_ingress'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'to_port'"
op|':'
string|"'999'"
op|','
string|"'from_port'"
op|':'
string|"'999'"
op|','
string|"'ip_protocol'"
op|':'
string|"'tcp'"
op|'}'
newline|'\n'
name|'authz'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group_id'
op|'='
name|'sec'
op|'['
string|"'id'"
op|']'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'revoke'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'revoke_security_group_ingress'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'revoke'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group_name'
op|'='
name|'sec'
op|'['
string|"'name'"
op|']'
op|','
op|'**'
name|'kwargs'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_authorize_revoke_security_group_ingress_by_id
dedent|''
name|'def'
name|'test_authorize_revoke_security_group_ingress_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sec'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'test'"
op|'}'
op|')'
newline|'\n'
name|'authz'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'authorize_security_group_ingress'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'to_port'"
op|':'
string|"'999'"
op|','
string|"'from_port'"
op|':'
string|"'999'"
op|','
string|"'ip_protocol'"
op|':'
string|"'tcp'"
op|'}'
newline|'\n'
name|'authz'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group_id'
op|'='
name|'sec'
op|'['
string|"'id'"
op|']'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'revoke'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'revoke_security_group_ingress'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'revoke'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group_id'
op|'='
name|'sec'
op|'['
string|"'id'"
op|']'
op|','
op|'**'
name|'kwargs'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_authorize_security_group_ingress_missing_protocol_params
dedent|''
name|'def'
name|'test_authorize_security_group_ingress_missing_protocol_params'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sec'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'test'"
op|'}'
op|')'
newline|'\n'
name|'authz'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'authorize_security_group_ingress'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'EC2APIError'
op|','
name|'authz'
op|','
name|'self'
op|'.'
name|'context'
op|','
string|"'test'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_authorize_security_group_ingress_missing_group_name_or_id
dedent|''
name|'def'
name|'test_authorize_security_group_ingress_missing_group_name_or_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
string|"'name'"
op|':'
string|"'test'"
op|'}'
newline|'\n'
name|'authz'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'authorize_security_group_ingress'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'EC2APIError'
op|','
name|'authz'
op|','
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_authorize_security_group_ingress_already_exists
dedent|''
name|'def'
name|'test_authorize_security_group_ingress_already_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
string|"'name'"
op|':'
string|"'test'"
op|'}'
newline|'\n'
name|'sec'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'kwargs'
op|')'
newline|'\n'
name|'authz'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'authorize_security_group_ingress'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'to_port'"
op|':'
string|"'999'"
op|','
string|"'from_port'"
op|':'
string|"'999'"
op|','
string|"'ip_protocol'"
op|':'
string|"'tcp'"
op|'}'
newline|'\n'
name|'authz'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group_name'
op|'='
name|'sec'
op|'['
string|"'name'"
op|']'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'EC2APIError'
op|','
name|'authz'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'group_name'
op|'='
name|'sec'
op|'['
string|"'name'"
op|']'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_security_group_ingress_quota_limit
dedent|''
name|'def'
name|'test_security_group_ingress_quota_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'quota_security_group_rules'
op|'='
number|'20'
op|')'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
string|"'name'"
op|':'
string|"'test'"
op|'}'
newline|'\n'
name|'sec_group'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'kwargs'
op|')'
newline|'\n'
name|'authz'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'authorize_security_group_ingress'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'100'
op|','
number|'120'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'kwargs'
op|'='
op|'{'
string|"'to_port'"
op|':'
name|'i'
op|','
string|"'from_port'"
op|':'
name|'i'
op|','
string|"'ip_protocol'"
op|':'
string|"'tcp'"
op|'}'
newline|'\n'
name|'authz'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group_id'
op|'='
name|'sec_group'
op|'['
string|"'id'"
op|']'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'kwargs'
op|'='
op|'{'
string|"'to_port'"
op|':'
number|'121'
op|','
string|"'from_port'"
op|':'
number|'121'
op|','
string|"'ip_protocol'"
op|':'
string|"'tcp'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'EC2APIError'
op|','
name|'authz'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'group_id'
op|'='
name|'sec_group'
op|'['
string|"'id'"
op|']'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_authorize_security_group_no_ports_with_source_group
dedent|''
name|'def'
name|'_test_authorize_security_group_no_ports_with_source_group'
op|'('
name|'self'
op|','
name|'proto'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
string|"'name'"
op|':'
string|"'test'"
op|'}'
newline|'\n'
name|'sec'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'authz'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'authorize_security_group_ingress'
newline|'\n'
name|'auth_kwargs'
op|'='
op|'{'
string|"'ip_protocol'"
op|':'
name|'proto'
op|','
nl|'\n'
string|"'groups'"
op|':'
op|'{'
string|"'1'"
op|':'
op|'{'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'group_name'"
op|':'
string|"u'test'"
op|'}'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'authz'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group_name'
op|'='
name|'sec'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
op|'**'
name|'auth_kwargs'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'describe'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_security_groups'
newline|'\n'
name|'groups'
op|'='
name|'describe'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group_name'
op|'='
op|'['
string|"'test'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'groups'
op|'['
string|"'securityGroupInfo'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'actual_rules'
op|'='
name|'groups'
op|'['
string|"'securityGroupInfo'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'ipPermissions'"
op|']'
newline|'\n'
name|'expected_rules'
op|'='
op|'['
op|'{'
string|"'groups'"
op|':'
op|'['
op|'{'
string|"'groupName'"
op|':'
string|"'test'"
op|','
nl|'\n'
string|"'userId'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|'}'
op|']'
op|','
nl|'\n'
string|"'ipProtocol'"
op|':'
name|'proto'
op|','
nl|'\n'
string|"'ipRanges'"
op|':'
op|'['
op|']'
op|'}'
op|']'
newline|'\n'
name|'if'
name|'proto'
op|'=='
string|"'icmp'"
op|':'
newline|'\n'
indent|'            '
name|'expected_rules'
op|'['
number|'0'
op|']'
op|'['
string|"'fromPort'"
op|']'
op|'='
op|'-'
number|'1'
newline|'\n'
name|'expected_rules'
op|'['
number|'0'
op|']'
op|'['
string|"'toPort'"
op|']'
op|'='
op|'-'
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'expected_rules'
op|'['
number|'0'
op|']'
op|'['
string|"'fromPort'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'expected_rules'
op|'['
number|'0'
op|']'
op|'['
string|"'toPort'"
op|']'
op|'='
number|'65535'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'expected_rules'
op|'=='
name|'actual_rules'
op|')'
newline|'\n'
name|'describe'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_security_groups'
newline|'\n'
name|'groups'
op|'='
name|'describe'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group_name'
op|'='
op|'['
string|"'test'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'security_group_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'sec'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_authorize_security_group_no_ports_no_source_group
dedent|''
name|'def'
name|'_test_authorize_security_group_no_ports_no_source_group'
op|'('
name|'self'
op|','
name|'proto'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
string|"'name'"
op|':'
string|"'test'"
op|'}'
newline|'\n'
name|'sec'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'authz'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'authorize_security_group_ingress'
newline|'\n'
name|'auth_kwargs'
op|'='
op|'{'
string|"'ip_protocol'"
op|':'
name|'proto'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'EC2APIError'
op|','
name|'authz'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'group_name'
op|'='
name|'sec'
op|'['
string|"'name'"
op|']'
op|','
op|'**'
name|'auth_kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'security_group_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'sec'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_authorize_security_group_no_ports_icmp
dedent|''
name|'def'
name|'test_authorize_security_group_no_ports_icmp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_authorize_security_group_no_ports_with_source_group'
op|'('
string|"'icmp'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_authorize_security_group_no_ports_no_source_group'
op|'('
string|"'icmp'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_authorize_security_group_no_ports_tcp
dedent|''
name|'def'
name|'test_authorize_security_group_no_ports_tcp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_authorize_security_group_no_ports_with_source_group'
op|'('
string|"'tcp'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_authorize_security_group_no_ports_no_source_group'
op|'('
string|"'tcp'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_authorize_security_group_no_ports_udp
dedent|''
name|'def'
name|'test_authorize_security_group_no_ports_udp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_authorize_security_group_no_ports_with_source_group'
op|'('
string|"'udp'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_authorize_security_group_no_ports_no_source_group'
op|'('
string|"'udp'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_revoke_security_group_ingress_missing_group_name_or_id
dedent|''
name|'def'
name|'test_revoke_security_group_ingress_missing_group_name_or_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'to_port'"
op|':'
string|"'999'"
op|','
string|"'from_port'"
op|':'
string|"'999'"
op|','
string|"'ip_protocol'"
op|':'
string|"'tcp'"
op|'}'
newline|'\n'
name|'revoke'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'revoke_security_group_ingress'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'EC2APIError'
op|','
name|'revoke'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_security_group_in_use_by_group
dedent|''
name|'def'
name|'test_delete_security_group_in_use_by_group'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'group1'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_security_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'testgrp1'"
op|','
nl|'\n'
string|'"test group 1"'
op|')'
newline|'\n'
name|'group2'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_security_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'testgrp2'"
op|','
nl|'\n'
string|'"test group 2"'
op|')'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'groups'"
op|':'
op|'{'
string|"'1'"
op|':'
op|'{'
string|"'user_id'"
op|':'
string|"u'%s'"
op|'%'
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'group_name'"
op|':'
string|"u'testgrp2'"
op|'}'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'authorize_security_group_ingress'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'group_name'
op|'='
string|"'testgrp1'"
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'group1'
op|'='
name|'db'
op|'.'
name|'security_group_get_by_name'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'project_id'
op|','
string|"'testgrp1'"
op|')'
newline|'\n'
name|'get_rules'
op|'='
name|'db'
op|'.'
name|'security_group_rule_get_by_security_group'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'get_rules'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group1'
op|'.'
name|'id'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_security_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'testgrp2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'get_rules'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'group1'
op|'.'
name|'id'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_security_group_in_use_by_instance
dedent|''
name|'def'
name|'test_delete_security_group_in_use_by_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure that a group can not be deleted if in use by an instance."""'
newline|'\n'
name|'image_uuid'
op|'='
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
newline|'\n'
name|'args'
op|'='
op|'{'
string|"'reservation_id'"
op|':'
string|"'a'"
op|','
nl|'\n'
string|"'image_ref'"
op|':'
name|'image_uuid'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'host1'"
op|','
nl|'\n'
string|"'vm_state'"
op|':'
string|"'active'"
op|'}'
newline|'\n'
name|'inst'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'args'
op|')'
newline|'\n'
nl|'\n'
name|'args'
op|'='
op|'{'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'context'
op|'.'
name|'project_id'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'testgrp'"
op|','
nl|'\n'
string|"'description'"
op|':'
string|"'Test group'"
op|'}'
newline|'\n'
name|'group'
op|'='
name|'db'
op|'.'
name|'security_group_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'args'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_add_security_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'.'
name|'uuid'
op|','
name|'group'
op|'.'
name|'id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidGroup'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_security_group'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'testgrp'"
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_security_group'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'testgrp'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_volumes
dedent|''
name|'def'
name|'test_describe_volumes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure describe_volumes works and filters results."""'
newline|'\n'
name|'vol1'
op|'='
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'vol2'
op|'='
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_volumes'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'volumeSet'"
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'volume_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_vol_id'
op|'('
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_volumes'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|'='
op|'['
name|'volume_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'volumeSet'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'ec2utils'
op|'.'
name|'ec2_vol_id_to_uuid'
op|'('
nl|'\n'
name|'result'
op|'['
string|"'volumeSet'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'volumeId'"
op|']'
op|')'
op|','
nl|'\n'
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_volume_in_availability_zone
dedent|''
name|'def'
name|'test_create_volume_in_availability_zone'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure create_volume works when we specify an availability\n        zone\n        """'
newline|'\n'
name|'availability_zone'
op|'='
string|"'zone1:host1'"
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'size'
op|'='
number|'1'
op|','
nl|'\n'
name|'availability_zone'
op|'='
name|'availability_zone'
op|')'
newline|'\n'
name|'volume_id'
op|'='
name|'result'
op|'['
string|"'volumeId'"
op|']'
newline|'\n'
name|'availabilityZone'
op|'='
name|'result'
op|'['
string|"'availabilityZone'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'availabilityZone'
op|','
name|'availability_zone'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_volumes'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'volumeSet'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'volumeSet'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'volumeId'"
op|']'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'volumeSet'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'availabilityZone'"
op|']'
op|','
nl|'\n'
name|'availabilityZone'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'ec2utils'
op|'.'
name|'ec2_vol_id_to_uuid'
op|'('
name|'volume_id'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_volume_from_snapshot
dedent|''
name|'def'
name|'test_create_volume_from_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure create_volume works when we specify a snapshot."""'
newline|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'size'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'snap'
op|'='
name|'db'
op|'.'
name|'snapshot_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'volume_id'"
op|':'
name|'vol'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'volume_size'"
op|':'
name|'vol'
op|'['
string|"'size'"
op|']'
op|','
nl|'\n'
string|"'status'"
op|':'
string|'"available"'
op|'}'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_snap_id'
op|'('
name|'snap'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'snapshot_id'
op|'='
name|'snapshot_id'
op|')'
newline|'\n'
name|'volume_id'
op|'='
name|'result'
op|'['
string|"'volumeId'"
op|']'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_volumes'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'volumeSet'"
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'volumeSet'"
op|']'
op|'['
number|'1'
op|']'
op|'['
string|"'volumeId'"
op|']'
op|','
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'ec2utils'
op|'.'
name|'ec2_vol_id_to_uuid'
op|'('
name|'volume_id'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'snapshot_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snap'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_availability_zones
dedent|''
name|'def'
name|'test_describe_availability_zones'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure describe_availability_zones works and filters results."""'
newline|'\n'
name|'service1'
op|'='
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'host'"
op|':'
string|"'host1_zones'"
op|','
nl|'\n'
string|"'binary'"
op|':'
string|'"nova-compute"'
op|','
nl|'\n'
string|"'topic'"
op|':'
string|"'compute'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|'"zone1"'
op|'}'
op|')'
newline|'\n'
name|'service2'
op|'='
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'host'"
op|':'
string|"'host2_zones'"
op|','
nl|'\n'
string|"'binary'"
op|':'
string|'"nova-compute"'
op|','
nl|'\n'
string|"'topic'"
op|':'
string|"'compute'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|'"zone2"'
op|'}'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_availability_zones'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'availabilityZoneInfo'"
op|']'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'service1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'service2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_snapshots
dedent|''
name|'def'
name|'test_describe_snapshots'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure describe_snapshots works and filters results."""'
newline|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'snap1'
op|'='
name|'db'
op|'.'
name|'snapshot_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'volume_id'"
op|':'
name|'vol'
op|'['
string|"'id'"
op|']'
op|'}'
op|')'
newline|'\n'
name|'snap2'
op|'='
name|'db'
op|'.'
name|'snapshot_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'volume_id'"
op|':'
name|'vol'
op|'['
string|"'id'"
op|']'
op|'}'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_snapshots'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'snapshotSet'"
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_snap_id'
op|'('
name|'snap2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_snapshots'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'snapshot_id'
op|'='
op|'['
name|'snapshot_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'snapshotSet'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'ec2utils'
op|'.'
name|'ec2_snap_id_to_uuid'
op|'('
nl|'\n'
name|'result'
op|'['
string|"'snapshotSet'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'snapshotId'"
op|']'
op|')'
op|','
nl|'\n'
name|'snap2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'snapshot_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snap1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'snapshot_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snap2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_snapshot
dedent|''
name|'def'
name|'test_create_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure create_snapshot works."""'
newline|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'status'"
op|':'
string|'"available"'
op|','
string|"'size'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
name|'volume_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_vol_id'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|'='
name|'volume_id'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
name|'result'
op|'['
string|"'snapshotId'"
op|']'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_snapshots'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'snapshotSet'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'snapshotSet'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'snapshotId'"
op|']'
op|','
name|'snapshot_id'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'snapshot_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'snapshot_id'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_snapshot
dedent|''
name|'def'
name|'test_delete_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure delete_snapshot works."""'
newline|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'status'"
op|':'
string|'"available"'
op|','
string|"'size'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
name|'snap'
op|'='
name|'db'
op|'.'
name|'snapshot_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
name|'vol'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'status'"
op|':'
string|'"available"'
op|','
nl|'\n'
string|"'volume_size'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_snap_id'
op|'('
name|'snap'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'snapshot_id'
op|'='
name|'snapshot_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_instances
dedent|''
name|'def'
name|'test_describe_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure describe_instances works and filters results."""'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_ipv6'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_stub_instance_get_with_fixed_ips'
op|'('
string|"'get_all'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_stub_instance_get_with_fixed_ips'
op|'('
string|"'get'"
op|')'
newline|'\n'
nl|'\n'
name|'image_uuid'
op|'='
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
newline|'\n'
name|'inst1'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'reservation_id'"
op|':'
string|"'a'"
op|','
nl|'\n'
string|"'image_ref'"
op|':'
name|'image_uuid'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'host1'"
op|','
nl|'\n'
string|"'hostname'"
op|':'
string|"'server-1234'"
op|','
nl|'\n'
string|"'vm_state'"
op|':'
string|"'active'"
op|'}'
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'reservation_id'"
op|':'
string|"'a'"
op|','
nl|'\n'
string|"'image_ref'"
op|':'
name|'image_uuid'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'host2'"
op|','
nl|'\n'
string|"'hostname'"
op|':'
string|"'server-4321'"
op|','
nl|'\n'
string|"'vm_state'"
op|':'
string|"'active'"
op|'}'
op|')'
newline|'\n'
name|'comp1'
op|'='
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'host'"
op|':'
string|"'host1'"
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|"'zone1'"
op|','
nl|'\n'
string|"'topic'"
op|':'
string|'"compute"'
op|'}'
op|')'
newline|'\n'
name|'comp2'
op|'='
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'host'"
op|':'
string|"'host2'"
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|"'zone2'"
op|','
nl|'\n'
string|"'topic'"
op|':'
string|'"compute"'
op|'}'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'result'
op|'='
name|'result'
op|'['
string|"'reservationSet'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'instancesSet'"
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
comment|'# Now try filtering.'
nl|'\n'
name|'instance_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_inst_id'
op|'('
name|'inst2'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'result'
op|'['
string|"'reservationSet'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'instancesSet'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'result'
op|'['
string|"'instancesSet'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'instanceId'"
op|']'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'placement'"
op|']'
op|'['
string|"'availabilityZone'"
op|']'
op|','
nl|'\n'
string|"'zone2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'publicDnsName'"
op|']'
op|','
string|"'1.2.3.4'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'ipAddress'"
op|']'
op|','
string|"'1.2.3.4'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'dnsName'"
op|']'
op|','
string|"'1.2.3.4'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'privateDnsName'"
op|']'
op|','
string|"'server-4321'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'privateIpAddress'"
op|']'
op|','
string|"'192.168.0.3'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'dnsNameV6'"
op|']'
op|','
nl|'\n'
string|"'fe80:b33f::a8bb:ccff:fedd:eeff'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst1'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst2'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'comp1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'comp2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_instances_sorting
dedent|''
name|'def'
name|'test_describe_instances_sorting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure describe_instances works and is sorted as expected."""'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_ipv6'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_stub_instance_get_with_fixed_ips'
op|'('
string|"'get_all'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_stub_instance_get_with_fixed_ips'
op|'('
string|"'get'"
op|')'
newline|'\n'
nl|'\n'
name|'image_uuid'
op|'='
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
newline|'\n'
name|'inst_base'
op|'='
op|'{'
nl|'\n'
string|"'reservation_id'"
op|':'
string|"'a'"
op|','
nl|'\n'
string|"'image_ref'"
op|':'
name|'image_uuid'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'vm_state'"
op|':'
string|"'active'"
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'inst1_kwargs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'inst1_kwargs'
op|'.'
name|'update'
op|'('
name|'inst_base'
op|')'
newline|'\n'
name|'inst1_kwargs'
op|'['
string|"'host'"
op|']'
op|'='
string|"'host1'"
newline|'\n'
name|'inst1_kwargs'
op|'['
string|"'hostname'"
op|']'
op|'='
string|"'server-1111'"
newline|'\n'
name|'inst1_kwargs'
op|'['
string|"'created_at'"
op|']'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2012'
op|','
number|'5'
op|','
number|'1'
op|','
number|'1'
op|','
number|'1'
op|','
number|'1'
op|')'
newline|'\n'
name|'inst1'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst1_kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'inst2_kwargs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'inst2_kwargs'
op|'.'
name|'update'
op|'('
name|'inst_base'
op|')'
newline|'\n'
name|'inst2_kwargs'
op|'['
string|"'host'"
op|']'
op|'='
string|"'host2'"
newline|'\n'
name|'inst2_kwargs'
op|'['
string|"'hostname'"
op|']'
op|'='
string|"'server-2222'"
newline|'\n'
name|'inst2_kwargs'
op|'['
string|"'created_at'"
op|']'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2012'
op|','
number|'2'
op|','
number|'1'
op|','
number|'1'
op|','
number|'1'
op|','
number|'1'
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst2_kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'inst3_kwargs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'inst3_kwargs'
op|'.'
name|'update'
op|'('
name|'inst_base'
op|')'
newline|'\n'
name|'inst3_kwargs'
op|'['
string|"'host'"
op|']'
op|'='
string|"'host3'"
newline|'\n'
name|'inst3_kwargs'
op|'['
string|"'hostname'"
op|']'
op|'='
string|"'server-3333'"
newline|'\n'
name|'inst3_kwargs'
op|'['
string|"'created_at'"
op|']'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2012'
op|','
number|'2'
op|','
number|'5'
op|','
number|'1'
op|','
number|'1'
op|','
number|'1'
op|')'
newline|'\n'
name|'inst3'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst3_kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'comp1'
op|'='
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'host'"
op|':'
string|"'host1'"
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|"'zone1'"
op|','
nl|'\n'
string|"'topic'"
op|':'
string|'"compute"'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'comp2'
op|'='
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'host'"
op|':'
string|"'host2'"
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|"'zone2'"
op|','
nl|'\n'
string|"'topic'"
op|':'
string|'"compute"'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'result'
op|'='
name|'result'
op|'['
string|"'reservationSet'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'instancesSet'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
number|'0'
op|']'
op|'['
string|"'launchTime'"
op|']'
op|','
name|'inst2_kwargs'
op|'['
string|"'created_at'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
number|'1'
op|']'
op|'['
string|"'launchTime'"
op|']'
op|','
name|'inst3_kwargs'
op|'['
string|"'created_at'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
number|'2'
op|']'
op|'['
string|"'launchTime'"
op|']'
op|','
name|'inst1_kwargs'
op|'['
string|"'created_at'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst1'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst2'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst3'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'comp1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'comp2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_instance_state
dedent|''
name|'def'
name|'test_describe_instance_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure describe_instances for instanceState works."""'
newline|'\n'
nl|'\n'
DECL|function|test_instance_state
name|'def'
name|'test_instance_state'
op|'('
name|'expected_code'
op|','
name|'expected_name'
op|','
nl|'\n'
name|'power_state_'
op|','
name|'vm_state_'
op|','
name|'values'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'image_uuid'
op|'='
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
newline|'\n'
name|'values'
op|'='
name|'values'
name|'or'
op|'{'
op|'}'
newline|'\n'
name|'values'
op|'.'
name|'update'
op|'('
op|'{'
string|"'image_ref'"
op|':'
name|'image_uuid'
op|','
string|"'instance_type_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'power_state'"
op|':'
name|'power_state_'
op|','
string|"'vm_state'"
op|':'
name|'vm_state_'
op|'}'
op|')'
newline|'\n'
name|'inst'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
name|'instance_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_inst_id'
op|'('
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'result'
op|'['
string|"'reservationSet'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'result'
op|'='
name|'result'
op|'['
string|"'instancesSet'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'instanceState'"
op|']'
newline|'\n'
nl|'\n'
name|'name'
op|'='
name|'result'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'code'
op|'='
name|'result'
op|'['
string|"'code'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'code'
op|','
name|'expected_code'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'name'
op|','
name|'expected_name'
op|')'
newline|'\n'
nl|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'test_instance_state'
op|'('
name|'inst_state'
op|'.'
name|'RUNNING_CODE'
op|','
name|'inst_state'
op|'.'
name|'RUNNING'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'test_instance_state'
op|'('
name|'inst_state'
op|'.'
name|'STOPPED_CODE'
op|','
name|'inst_state'
op|'.'
name|'STOPPED'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'NOSTATE'
op|','
name|'vm_states'
op|'.'
name|'STOPPED'
op|','
nl|'\n'
op|'{'
string|"'shutdown_terminate'"
op|':'
name|'False'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_instances_no_ipv6
dedent|''
name|'def'
name|'test_describe_instances_no_ipv6'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure describe_instances w/ no ipv6 works."""'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_ipv6'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_stub_instance_get_with_fixed_ips'
op|'('
string|"'get_all'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_stub_instance_get_with_fixed_ips'
op|'('
string|"'get'"
op|')'
newline|'\n'
nl|'\n'
name|'image_uuid'
op|'='
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
newline|'\n'
name|'inst1'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'reservation_id'"
op|':'
string|"'a'"
op|','
nl|'\n'
string|"'image_ref'"
op|':'
name|'image_uuid'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'hostname'"
op|':'
string|"'server-1234'"
op|','
nl|'\n'
string|"'vm_state'"
op|':'
string|"'active'"
op|'}'
op|')'
newline|'\n'
name|'comp1'
op|'='
name|'db'
op|'.'
name|'service_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'{'
string|"'host'"
op|':'
string|"'host1'"
op|','
nl|'\n'
string|"'topic'"
op|':'
string|'"compute"'
op|'}'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'result'
op|'='
name|'result'
op|'['
string|"'reservationSet'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'instancesSet'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'result'
op|'['
string|"'instancesSet'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'instance_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_inst_id'
op|'('
name|'inst1'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'instanceId'"
op|']'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'publicDnsName'"
op|']'
op|','
string|"'1.2.3.4'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'ipAddress'"
op|']'
op|','
string|"'1.2.3.4'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'dnsName'"
op|']'
op|','
string|"'1.2.3.4'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'privateDnsName'"
op|']'
op|','
string|"'server-1234'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'privateIpAddress'"
op|']'
op|','
string|"'192.168.0.3'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'dnsNameV6'"
op|','
name|'instance'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst1'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'comp1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_instances_deleted
dedent|''
name|'def'
name|'test_describe_instances_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_uuid'
op|'='
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
newline|'\n'
name|'args1'
op|'='
op|'{'
string|"'reservation_id'"
op|':'
string|"'a'"
op|','
nl|'\n'
string|"'image_ref'"
op|':'
name|'image_uuid'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'host1'"
op|','
nl|'\n'
string|"'vm_state'"
op|':'
string|"'active'"
op|'}'
newline|'\n'
name|'inst1'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'args1'
op|')'
newline|'\n'
name|'args2'
op|'='
op|'{'
string|"'reservation_id'"
op|':'
string|"'b'"
op|','
nl|'\n'
string|"'image_ref'"
op|':'
name|'image_uuid'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'host1'"
op|','
nl|'\n'
string|"'vm_state'"
op|':'
string|"'active'"
op|'}'
newline|'\n'
name|'inst2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'args2'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst1'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'reservationSet'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'result1'
op|'='
name|'result'
op|'['
string|"'reservationSet'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'instancesSet'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result1'
op|'['
number|'0'
op|']'
op|'['
string|"'instanceId'"
op|']'
op|','
nl|'\n'
name|'ec2utils'
op|'.'
name|'id_to_ec2_inst_id'
op|'('
name|'inst2'
op|'['
string|"'uuid'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_instances_with_image_deleted
dedent|''
name|'def'
name|'test_describe_instances_with_image_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_uuid'
op|'='
string|"'aebef54a-ed67-4d10-912f-14455edce176'"
newline|'\n'
name|'args1'
op|'='
op|'{'
string|"'reservation_id'"
op|':'
string|"'a'"
op|','
nl|'\n'
string|"'image_ref'"
op|':'
name|'image_uuid'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'host1'"
op|','
nl|'\n'
string|"'vm_state'"
op|':'
string|"'active'"
op|'}'
newline|'\n'
name|'inst1'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'args1'
op|')'
newline|'\n'
name|'args2'
op|'='
op|'{'
string|"'reservation_id'"
op|':'
string|"'b'"
op|','
nl|'\n'
string|"'image_ref'"
op|':'
name|'image_uuid'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'host'"
op|':'
string|"'host1'"
op|','
nl|'\n'
string|"'vm_state'"
op|':'
string|"'active'"
op|'}'
newline|'\n'
name|'inst2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'args2'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'reservationSet'"
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_block_device_mapping_create
dedent|''
name|'def'
name|'_block_device_mapping_create'
op|'('
name|'self'
op|','
name|'instance_uuid'
op|','
name|'mappings'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'volumes'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'bdm'
name|'in'
name|'mappings'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'block_device_mapping_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'bdm'
op|')'
newline|'\n'
name|'if'
string|"'volume_id'"
name|'in'
name|'bdm'
op|':'
newline|'\n'
indent|'                '
name|'values'
op|'='
op|'{'
string|"'id'"
op|':'
name|'bdm'
op|'['
string|"'volume_id'"
op|']'
op|'}'
newline|'\n'
name|'for'
name|'bdm_key'
op|','
name|'vol_key'
name|'in'
op|'['
op|'('
string|"'snapshot_id'"
op|','
string|"'snapshot_id'"
op|')'
op|','
nl|'\n'
op|'('
string|"'snapshot_size'"
op|','
string|"'volume_size'"
op|')'
op|','
nl|'\n'
op|'('
string|"'delete_on_termination'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|')'
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'bdm_key'
name|'in'
name|'bdm'
op|':'
newline|'\n'
indent|'                        '
name|'values'
op|'['
name|'vol_key'
op|']'
op|'='
name|'bdm'
op|'['
name|'bdm_key'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_attached'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'instance_uuid'
op|','
name|'bdm'
op|'['
string|"'device_name'"
op|']'
op|')'
newline|'\n'
name|'volumes'
op|'.'
name|'append'
op|'('
name|'vol'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'volumes'
newline|'\n'
nl|'\n'
DECL|member|_setUpBlockDeviceMapping
dedent|''
name|'def'
name|'_setUpBlockDeviceMapping'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_uuid'
op|'='
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
newline|'\n'
name|'inst1'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'image_ref'"
op|':'
name|'image_uuid'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'root_device_name'"
op|':'
string|"'/dev/sdb1'"
op|'}'
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'db'
op|'.'
name|'instance_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'image_ref'"
op|':'
name|'image_uuid'
op|','
nl|'\n'
string|"'instance_type_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'root_device_name'"
op|':'
string|"'/dev/sdc1'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'instance_id'
op|'='
name|'inst1'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'instance_uuid'
op|'='
name|'inst1'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'mappings0'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb1'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'2'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb2'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'3'"
op|','
nl|'\n'
string|"'volume_size'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb3'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
string|"'4'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'5'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb4'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
string|"'6'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'7'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb5'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
string|"'8'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'9'"
op|','
nl|'\n'
string|"'volume_size'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb6'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
string|"'10'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'11'"
op|','
nl|'\n'
string|"'volume_size'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb7'"
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb8'"
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
string|"'swap'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb9'"
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
string|"'ephemeral3'"
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'volumes'
op|'='
name|'self'
op|'.'
name|'_block_device_mapping_create'
op|'('
name|'instance_uuid'
op|','
name|'mappings0'
op|')'
newline|'\n'
name|'return'
op|'('
name|'inst1'
op|','
name|'inst2'
op|','
name|'volumes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_tearDownBlockDeviceMapping
dedent|''
name|'def'
name|'_tearDownBlockDeviceMapping'
op|'('
name|'self'
op|','
name|'inst1'
op|','
name|'inst2'
op|','
name|'volumes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'vol'
name|'in'
name|'volumes'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'uuid'
name|'in'
op|'('
name|'inst1'
op|'['
string|"'uuid'"
op|']'
op|','
name|'inst2'
op|'['
string|"'uuid'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'bdm'
name|'in'
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'db'
op|'.'
name|'block_device_mapping_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'bdm'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst2'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst1'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|_expected_instance_bdm1
dedent|''
name|'_expected_instance_bdm1'
op|'='
op|'{'
nl|'\n'
string|"'instanceId'"
op|':'
string|"'i-00000001'"
op|','
nl|'\n'
string|"'rootDeviceName'"
op|':'
string|"'/dev/sdb1'"
op|','
nl|'\n'
string|"'rootDeviceType'"
op|':'
string|"'ebs'"
op|'}'
newline|'\n'
nl|'\n'
DECL|variable|_expected_block_device_mapping0
name|'_expected_block_device_mapping0'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb1'"
op|','
nl|'\n'
string|"'ebs'"
op|':'
op|'{'
string|"'status'"
op|':'
string|"'in-use'"
op|','
nl|'\n'
string|"'deleteOnTermination'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'volumeId'"
op|':'
string|"'2'"
op|','
nl|'\n'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb2'"
op|','
nl|'\n'
string|"'ebs'"
op|':'
op|'{'
string|"'status'"
op|':'
string|"'in-use'"
op|','
nl|'\n'
string|"'deleteOnTermination'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'volumeId'"
op|':'
string|"'3'"
op|','
nl|'\n'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb3'"
op|','
nl|'\n'
string|"'ebs'"
op|':'
op|'{'
string|"'status'"
op|':'
string|"'in-use'"
op|','
nl|'\n'
string|"'deleteOnTermination'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'volumeId'"
op|':'
string|"'5'"
op|','
nl|'\n'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb4'"
op|','
nl|'\n'
string|"'ebs'"
op|':'
op|'{'
string|"'status'"
op|':'
string|"'in-use'"
op|','
nl|'\n'
string|"'deleteOnTermination'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'volumeId'"
op|':'
string|"'7'"
op|','
nl|'\n'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb5'"
op|','
nl|'\n'
string|"'ebs'"
op|':'
op|'{'
string|"'status'"
op|':'
string|"'in-use'"
op|','
nl|'\n'
string|"'deleteOnTermination'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'volumeId'"
op|':'
string|"'9'"
op|','
nl|'\n'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb6'"
op|','
nl|'\n'
string|"'ebs'"
op|':'
op|'{'
string|"'status'"
op|':'
string|"'in-use'"
op|','
nl|'\n'
string|"'deleteOnTermination'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'volumeId'"
op|':'
string|"'11'"
op|','
op|'}'
op|'}'
op|']'
newline|'\n'
comment|"# NOTE(yamahata): swap/ephemeral device case isn't supported yet."
nl|'\n'
nl|'\n'
DECL|variable|_expected_instance_bdm2
name|'_expected_instance_bdm2'
op|'='
op|'{'
nl|'\n'
string|"'instanceId'"
op|':'
string|"'i-00000002'"
op|','
nl|'\n'
string|"'rootDeviceName'"
op|':'
string|"'/dev/sdc1'"
op|','
nl|'\n'
string|"'rootDeviceType'"
op|':'
string|"'instance-store'"
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_format_instance_bdm
name|'def'
name|'test_format_instance_bdm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
op|'('
name|'inst1'
op|','
name|'inst2'
op|','
name|'volumes'
op|')'
op|'='
name|'self'
op|'.'
name|'_setUpBlockDeviceMapping'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'_format_instance_bdm'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst1'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
string|"'/dev/sdb1'"
op|','
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertSubDictMatch'
op|'('
nl|'\n'
op|'{'
string|"'rootDeviceType'"
op|':'
name|'self'
op|'.'
name|'_expected_instance_bdm1'
op|'['
string|"'rootDeviceType'"
op|']'
op|'}'
op|','
nl|'\n'
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualBlockDeviceMapping'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_expected_block_device_mapping0'
op|','
name|'result'
op|'['
string|"'blockDeviceMapping'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'_format_instance_bdm'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inst2'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
string|"'/dev/sdc1'"
op|','
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertSubDictMatch'
op|'('
nl|'\n'
op|'{'
string|"'rootDeviceType'"
op|':'
name|'self'
op|'.'
name|'_expected_instance_bdm2'
op|'['
string|"'rootDeviceType'"
op|']'
op|'}'
op|','
nl|'\n'
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_tearDownBlockDeviceMapping'
op|'('
name|'inst1'
op|','
name|'inst2'
op|','
name|'volumes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assertInstance
dedent|''
name|'def'
name|'_assertInstance'
op|'('
name|'self'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ec2_instance_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_inst_id'
op|'('
name|'instance_id'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'result'
op|'['
string|"'reservationSet'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'instancesSet'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'result'
op|'='
name|'result'
op|'['
string|"'instancesSet'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'instanceId'"
op|']'
op|','
name|'ec2_instance_id'
op|')'
newline|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|member|_assertEqualBlockDeviceMapping
dedent|''
name|'def'
name|'_assertEqualBlockDeviceMapping'
op|'('
name|'self'
op|','
name|'expected'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'expected'
op|')'
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'expected'
op|':'
newline|'\n'
indent|'            '
name|'found'
op|'='
name|'False'
newline|'\n'
name|'for'
name|'y'
name|'in'
name|'result'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'x'
op|'['
string|"'deviceName'"
op|']'
op|'=='
name|'y'
op|'['
string|"'deviceName'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertSubDictMatch'
op|'('
name|'x'
op|','
name|'y'
op|')'
newline|'\n'
name|'found'
op|'='
name|'True'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'found'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_instances_bdm
dedent|''
dedent|''
name|'def'
name|'test_describe_instances_bdm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure describe_instances works with root_device_name and\n        block device mappings\n        """'
newline|'\n'
op|'('
name|'inst1'
op|','
name|'inst2'
op|','
name|'volumes'
op|')'
op|'='
name|'self'
op|'.'
name|'_setUpBlockDeviceMapping'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_assertInstance'
op|'('
name|'inst1'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertSubDictMatch'
op|'('
name|'self'
op|'.'
name|'_expected_instance_bdm1'
op|','
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assertEqualBlockDeviceMapping'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_expected_block_device_mapping0'
op|','
name|'result'
op|'['
string|"'blockDeviceMapping'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_assertInstance'
op|'('
name|'inst2'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertSubDictMatch'
op|'('
name|'self'
op|'.'
name|'_expected_instance_bdm2'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_tearDownBlockDeviceMapping'
op|'('
name|'inst1'
op|','
name|'inst2'
op|','
name|'volumes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_images
dedent|''
name|'def'
name|'test_describe_images'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'describe_images'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_images'
newline|'\n'
nl|'\n'
DECL|function|fake_detail
name|'def'
name|'fake_detail'
op|'('
name|'meh'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|'{'
string|"'id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'container_format'"
op|':'
string|"'ami'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'kernel_id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|'}'
op|'}'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_show_none
dedent|''
name|'def'
name|'fake_show_none'
op|'('
name|'meh'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
name|'image_id'
op|'='
string|"'bad_image_id'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_detail_none
dedent|''
name|'def'
name|'fake_detail_none'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'detail'"
op|','
name|'fake_detail'
op|')'
newline|'\n'
comment|'# list all'
nl|'\n'
name|'result1'
op|'='
name|'describe_images'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'result1'
op|'='
name|'result1'
op|'['
string|"'imagesSet'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result1'
op|'['
string|"'imageId'"
op|']'
op|','
string|"'ami-00000001'"
op|')'
newline|'\n'
comment|'# provided a valid image_id'
nl|'\n'
name|'result2'
op|'='
name|'describe_images'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
string|"'ami-00000001'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'result2'
op|'['
string|"'imagesSet'"
op|']'
op|')'
op|')'
newline|'\n'
comment|'# provide more than 1 valid image_id'
nl|'\n'
name|'result3'
op|'='
name|'describe_images'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
string|"'ami-00000001'"
op|','
nl|'\n'
string|"'ami-00000002'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'result3'
op|'['
string|"'imagesSet'"
op|']'
op|')'
op|')'
newline|'\n'
comment|'# provide a non-existing image_id'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'UnsetAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'detail'"
op|','
name|'fake_detail_none'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ImageNotFound'
op|','
name|'describe_images'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'['
string|"'ami-fake'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|assertDictListUnorderedMatch
dedent|''
name|'def'
name|'assertDictListUnorderedMatch'
op|'('
name|'self'
op|','
name|'L1'
op|','
name|'L2'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'L1'
op|')'
op|','
name|'len'
op|'('
name|'L2'
op|')'
op|')'
newline|'\n'
name|'for'
name|'d1'
name|'in'
name|'L1'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'key'
name|'in'
name|'d1'
op|')'
newline|'\n'
name|'for'
name|'d2'
name|'in'
name|'L2'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'key'
name|'in'
name|'d2'
op|')'
newline|'\n'
name|'if'
name|'d1'
op|'['
name|'key'
op|']'
op|'=='
name|'d2'
op|'['
name|'key'
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'d1'
op|','
name|'d2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setUpImageSet
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'_setUpImageSet'
op|'('
name|'self'
op|','
name|'create_volumes_and_snapshots'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mappings1'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'/dev/sda1'"
op|','
string|"'virtual'"
op|':'
string|"'root'"
op|'}'
op|','
nl|'\n'
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdb0'"
op|','
string|"'virtual'"
op|':'
string|"'ephemeral0'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdb1'"
op|','
string|"'virtual'"
op|':'
string|"'ephemeral1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdb2'"
op|','
string|"'virtual'"
op|':'
string|"'ephemeral2'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdb3'"
op|','
string|"'virtual'"
op|':'
string|"'ephemeral3'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdb4'"
op|','
string|"'virtual'"
op|':'
string|"'ephemeral4'"
op|'}'
op|','
nl|'\n'
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdc0'"
op|','
string|"'virtual'"
op|':'
string|"'swap'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdc1'"
op|','
string|"'virtual'"
op|':'
string|"'swap'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdc2'"
op|','
string|"'virtual'"
op|':'
string|"'swap'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdc3'"
op|','
string|"'virtual'"
op|':'
string|"'swap'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'sdc4'"
op|','
string|"'virtual'"
op|':'
string|"'swap'"
op|'}'
op|']'
newline|'\n'
name|'block_device_mapping1'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdb1'"
op|','
string|"'snapshot_id'"
op|':'
number|'01234567'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdb2'"
op|','
string|"'volume_id'"
op|':'
number|'01234567'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdb3'"
op|','
string|"'virtual_name'"
op|':'
string|"'ephemeral5'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdb4'"
op|','
string|"'no_device'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdc1'"
op|','
string|"'snapshot_id'"
op|':'
number|'12345678'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdc2'"
op|','
string|"'volume_id'"
op|':'
number|'12345678'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdc3'"
op|','
string|"'virtual_name'"
op|':'
string|"'ephemeral6'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdc4'"
op|','
string|"'no_device'"
op|':'
name|'True'
op|'}'
op|']'
newline|'\n'
name|'image1'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'kernel_id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|','
nl|'\n'
string|"'image_state'"
op|':'
string|"'available'"
op|','
nl|'\n'
string|"'mappings'"
op|':'
name|'mappings1'
op|','
nl|'\n'
string|"'block_device_mapping'"
op|':'
name|'block_device_mapping1'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'mappings2'
op|'='
op|'['
op|'{'
string|"'device'"
op|':'
string|"'/dev/sda1'"
op|','
string|"'virtual'"
op|':'
string|"'root'"
op|'}'
op|']'
newline|'\n'
name|'block_device_mapping2'
op|'='
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdb1'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
number|'01234567'
op|'}'
op|']'
newline|'\n'
name|'image2'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'kernel_id'"
op|':'
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|','
nl|'\n'
string|"'root_device_name'"
op|':'
string|"'/dev/sdb1'"
op|','
nl|'\n'
string|"'mappings'"
op|':'
name|'mappings2'
op|','
nl|'\n'
string|"'block_device_mapping'"
op|':'
name|'block_device_mapping2'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_show
name|'def'
name|'fake_show'
op|'('
name|'meh'
op|','
name|'context'
op|','
name|'image_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'_images'
op|'='
op|'['
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'image1'
op|')'
op|','
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'image2'
op|')'
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'_images'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'str'
op|'('
name|'i'
op|'['
string|"'id'"
op|']'
op|')'
op|'=='
name|'str'
op|'('
name|'image_id'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'i'
newline|'\n'
dedent|''
dedent|''
name|'raise'
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
name|'image_id'
op|'='
name|'image_id'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_detail
dedent|''
name|'def'
name|'fake_detail'
op|'('
name|'meh'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'image1'
op|')'
op|','
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'image2'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'detail'"
op|','
name|'fake_detail'
op|')'
newline|'\n'
nl|'\n'
name|'volumes'
op|'='
op|'['
op|']'
newline|'\n'
name|'snapshots'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'create_volumes_and_snapshots'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'bdm'
name|'in'
name|'block_device_mapping1'
op|':'
newline|'\n'
indent|'                '
name|'if'
string|"'volume_id'"
name|'in'
name|'bdm'
op|':'
newline|'\n'
indent|'                    '
name|'vol'
op|'='
name|'self'
op|'.'
name|'_volume_create'
op|'('
name|'bdm'
op|'['
string|"'volume_id'"
op|']'
op|')'
newline|'\n'
name|'volumes'
op|'.'
name|'append'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'if'
string|"'snapshot_id'"
name|'in'
name|'bdm'
op|':'
newline|'\n'
indent|'                    '
name|'snap'
op|'='
name|'db'
op|'.'
name|'snapshot_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
name|'bdm'
op|'['
string|"'snapshot_id'"
op|']'
op|','
nl|'\n'
string|"'volume_id'"
op|':'
number|'76543210'
op|','
nl|'\n'
string|"'status'"
op|':'
string|'"available"'
op|','
nl|'\n'
string|"'volume_size'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'snapshots'
op|'.'
name|'append'
op|'('
name|'snap'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
op|'('
name|'volumes'
op|','
name|'snapshots'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assertImageSet
dedent|''
name|'def'
name|'_assertImageSet'
op|'('
name|'self'
op|','
name|'result'
op|','
name|'root_device_type'
op|','
name|'root_device_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'result'
op|'['
string|"'imagesSet'"
op|']'
op|')'
op|')'
newline|'\n'
name|'result'
op|'='
name|'result'
op|'['
string|"'imagesSet'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'rootDeviceType'"
name|'in'
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'rootDeviceType'"
op|']'
op|','
name|'root_device_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'rootDeviceName'"
name|'in'
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'rootDeviceName'"
op|']'
op|','
name|'root_device_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'blockDeviceMapping'"
name|'in'
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|variable|_expected_root_device_name1
dedent|''
name|'_expected_root_device_name1'
op|'='
string|"'/dev/sda1'"
newline|'\n'
comment|"# NOTE(yamahata): noDevice doesn't make sense when returning mapping"
nl|'\n'
comment|'#                 It makes sense only when user overriding existing'
nl|'\n'
comment|'#                 mapping.'
nl|'\n'
DECL|variable|_expected_bdms1
name|'_expected_bdms1'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb0'"
op|','
string|"'virtualName'"
op|':'
string|"'ephemeral0'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb1'"
op|','
string|"'ebs'"
op|':'
op|'{'
string|"'snapshotId'"
op|':'
nl|'\n'
string|"'snap-00053977'"
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb2'"
op|','
string|"'ebs'"
op|':'
op|'{'
string|"'snapshotId'"
op|':'
nl|'\n'
string|"'vol-00053977'"
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb3'"
op|','
string|"'virtualName'"
op|':'
string|"'ephemeral5'"
op|'}'
op|','
nl|'\n'
comment|"# {'deviceName': '/dev/sdb4', 'noDevice': True},"
nl|'\n'
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdc0'"
op|','
string|"'virtualName'"
op|':'
string|"'swap'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdc1'"
op|','
string|"'ebs'"
op|':'
op|'{'
string|"'snapshotId'"
op|':'
nl|'\n'
string|"'snap-00bc614e'"
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdc2'"
op|','
string|"'ebs'"
op|':'
op|'{'
string|"'snapshotId'"
op|':'
nl|'\n'
string|"'vol-00bc614e'"
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdc3'"
op|','
string|"'virtualName'"
op|':'
string|"'ephemeral6'"
op|'}'
op|','
nl|'\n'
comment|"# {'deviceName': '/dev/sdc4', 'noDevice': True}"
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|_expected_root_device_name2
name|'_expected_root_device_name2'
op|'='
string|"'/dev/sdb1'"
newline|'\n'
DECL|variable|_expected_bdms2
name|'_expected_bdms2'
op|'='
op|'['
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdb1'"
op|','
nl|'\n'
string|"'ebs'"
op|':'
op|'{'
string|"'snapshotId'"
op|':'
string|"'snap-00053977'"
op|'}'
op|'}'
op|']'
newline|'\n'
nl|'\n'
comment|'# NOTE(yamahata):'
nl|'\n'
comment|'# InstanceBlockDeviceMappingItemType'
nl|'\n'
comment|'# rootDeviceType'
nl|'\n'
comment|'# rootDeviceName'
nl|'\n'
comment|'# blockDeviceMapping'
nl|'\n'
comment|'#  deviceName'
nl|'\n'
comment|'#  virtualName'
nl|'\n'
comment|'#  ebs'
nl|'\n'
comment|'#    snapshotId'
nl|'\n'
comment|'#    volumeSize'
nl|'\n'
comment|'#    deleteOnTermination'
nl|'\n'
comment|'#  noDevice'
nl|'\n'
DECL|member|test_describe_image_mapping
name|'def'
name|'test_describe_image_mapping'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""test for rootDeviceName and blockDeiceMapping"""'
newline|'\n'
name|'describe_images'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_images'
newline|'\n'
name|'self'
op|'.'
name|'_setUpImageSet'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'describe_images'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
string|"'ami-00000001'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_assertImageSet'
op|'('
name|'result'
op|','
string|"'instance-store'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_expected_root_device_name1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertDictListUnorderedMatch'
op|'('
name|'result'
op|'['
string|"'blockDeviceMapping'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_expected_bdms1'
op|','
string|"'deviceName'"
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'describe_images'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
string|"'ami-00000002'"
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_assertImageSet'
op|'('
name|'result'
op|','
string|"'ebs'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_expected_root_device_name2'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertDictListUnorderedMatch'
op|'('
name|'result'
op|'['
string|"'blockDeviceMapping'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_expected_bdms2'
op|','
string|"'deviceName'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_image_attribute
dedent|''
name|'def'
name|'test_describe_image_attribute'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'describe_image_attribute'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_image_attribute'
newline|'\n'
nl|'\n'
DECL|function|fake_show
name|'def'
name|'fake_show'
op|'('
name|'meh'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'kernel_id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|'}'
op|','
nl|'\n'
string|"'container_format'"
op|':'
string|"'ami'"
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'True'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_detail
dedent|''
name|'def'
name|'fake_detail'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'image'
op|'='
name|'fake_show'
op|'('
name|'None'
op|','
name|'context'
op|','
name|'None'
op|')'
newline|'\n'
name|'image'
op|'['
string|"'name'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'filters'"
op|','
op|'{'
op|'}'
op|')'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
newline|'\n'
name|'return'
op|'['
name|'image'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'detail'"
op|','
name|'fake_detail'
op|')'
newline|'\n'
name|'result'
op|'='
name|'describe_image_attribute'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'ami-00000001'"
op|','
nl|'\n'
string|"'launchPermission'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|'{'
string|"'group'"
op|':'
string|"'all'"
op|'}'
op|']'
op|','
name|'result'
op|'['
string|"'launchPermission'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_image_attribute_root_device_name
dedent|''
name|'def'
name|'test_describe_image_attribute_root_device_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'describe_image_attribute'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_image_attribute'
newline|'\n'
name|'self'
op|'.'
name|'_setUpImageSet'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'describe_image_attribute'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'ami-00000001'"
op|','
nl|'\n'
string|"'rootDeviceName'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'rootDeviceName'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_expected_root_device_name1'
op|')'
newline|'\n'
name|'result'
op|'='
name|'describe_image_attribute'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'ami-00000002'"
op|','
nl|'\n'
string|"'rootDeviceName'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'rootDeviceName'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_expected_root_device_name2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_image_attribute_block_device_mapping
dedent|''
name|'def'
name|'test_describe_image_attribute_block_device_mapping'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'describe_image_attribute'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_image_attribute'
newline|'\n'
name|'self'
op|'.'
name|'_setUpImageSet'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'describe_image_attribute'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'ami-00000001'"
op|','
nl|'\n'
string|"'blockDeviceMapping'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictListUnorderedMatch'
op|'('
name|'result'
op|'['
string|"'blockDeviceMapping'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_expected_bdms1'
op|','
string|"'deviceName'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'describe_image_attribute'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'ami-00000002'"
op|','
nl|'\n'
string|"'blockDeviceMapping'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictListUnorderedMatch'
op|'('
name|'result'
op|'['
string|"'blockDeviceMapping'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_expected_bdms2'
op|','
string|"'deviceName'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_modify_image_attribute
dedent|''
name|'def'
name|'test_modify_image_attribute'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'modify_image_attribute'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'modify_image_attribute'
newline|'\n'
nl|'\n'
name|'fake_metadata'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'container_format'"
op|':'
string|"'ami'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'kernel_id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|'}'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'False'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_show
name|'def'
name|'fake_show'
op|'('
name|'meh'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'fake_metadata'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_detail
dedent|''
name|'def'
name|'fake_detail'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'image'
op|'='
name|'fake_show'
op|'('
name|'None'
op|','
name|'context'
op|','
name|'None'
op|')'
newline|'\n'
name|'image'
op|'['
string|"'name'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'filters'"
op|','
op|'{'
op|'}'
op|')'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
newline|'\n'
name|'return'
op|'['
name|'image'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_update
dedent|''
name|'def'
name|'fake_update'
op|'('
name|'meh'
op|','
name|'context'
op|','
name|'image_id'
op|','
name|'metadata'
op|','
name|'data'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'kernel_id'"
op|']'
op|','
nl|'\n'
name|'fake_metadata'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'kernel_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'ramdisk_id'"
op|']'
op|','
nl|'\n'
name|'fake_metadata'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'ramdisk_id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'metadata'
op|'['
string|"'is_public'"
op|']'
op|')'
newline|'\n'
name|'image'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'fake_metadata'
op|')'
newline|'\n'
name|'image'
op|'.'
name|'update'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'return'
name|'image'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'detail'"
op|','
name|'fake_detail'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'update'"
op|','
name|'fake_update'
op|')'
newline|'\n'
name|'result'
op|'='
name|'modify_image_attribute'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'ami-00000001'"
op|','
nl|'\n'
string|"'launchPermission'"
op|','
string|"'add'"
op|','
nl|'\n'
name|'user_group'
op|'='
op|'['
string|"'all'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|'['
string|"'is_public'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_register_image
dedent|''
name|'def'
name|'test_register_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'register_image'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'register_image'
newline|'\n'
nl|'\n'
DECL|function|fake_create
name|'def'
name|'fake_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(vish): We are mocking s3 so make sure we have converted'
nl|'\n'
comment|'#             to ids instead of uuids.'
nl|'\n'
indent|'            '
name|'return'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'container_format'"
op|':'
string|"'ami'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'kernel_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|'}'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'False'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'s3'
op|'.'
name|'S3ImageService'
op|','
string|"'create'"
op|','
name|'fake_create'
op|')'
newline|'\n'
name|'image_location'
op|'='
string|"'fake_bucket/fake.img.manifest.xml'"
newline|'\n'
name|'result'
op|'='
name|'register_image'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'image_location'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'imageId'"
op|']'
op|','
string|"'ami-00000001'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_register_image_empty
dedent|''
name|'def'
name|'test_register_image_empty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'register_image'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'register_image'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'EC2APIError'
op|','
name|'register_image'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'image_location'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_register_image_name
dedent|''
name|'def'
name|'test_register_image_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'register_image'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'register_image'
newline|'\n'
nl|'\n'
DECL|function|fake_create
name|'def'
name|'fake_create'
op|'('
name|'_self'
op|','
name|'context'
op|','
name|'metadata'
op|','
name|'data'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
string|"'name'"
op|']'
op|','
name|'self'
op|'.'
name|'expected_name'
op|')'
newline|'\n'
name|'metadata'
op|'['
string|"'id'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'metadata'
op|'['
string|"'container_format'"
op|']'
op|'='
string|"'ami'"
newline|'\n'
name|'metadata'
op|'['
string|"'is_public'"
op|']'
op|'='
name|'False'
newline|'\n'
name|'return'
name|'metadata'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'s3'
op|'.'
name|'S3ImageService'
op|','
string|"'create'"
op|','
name|'fake_create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'expected_name'
op|'='
string|"'fake_bucket/fake.img.manifest.xml'"
newline|'\n'
name|'result'
op|'='
name|'register_image'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'image_location'
op|'='
name|'self'
op|'.'
name|'expected_name'
op|','
nl|'\n'
name|'name'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'expected_name'
op|'='
string|"'an image name'"
newline|'\n'
name|'result'
op|'='
name|'register_image'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'image_location'
op|'='
string|"'some_location'"
op|','
nl|'\n'
name|'name'
op|'='
name|'self'
op|'.'
name|'expected_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_format_image
dedent|''
name|'def'
name|'test_format_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image'
op|'='
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'container_format'"
op|':'
string|"'ami'"
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'name'"
op|','
nl|'\n'
string|"'owner'"
op|':'
string|"'someone'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'image_location'"
op|':'
string|"'location'"
op|','
nl|'\n'
string|"'kernel_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|'}'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'False'
op|'}'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'name'"
op|','
nl|'\n'
string|"'imageOwnerId'"
op|':'
string|"'someone'"
op|','
nl|'\n'
string|"'isPublic'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'imageId'"
op|':'
string|"'ami-00000001'"
op|','
nl|'\n'
string|"'imageState'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'rootDeviceType'"
op|':'
string|"'instance-store'"
op|','
nl|'\n'
string|"'architecture'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'imageLocation'"
op|':'
string|"'location'"
op|','
nl|'\n'
string|"'kernelId'"
op|':'
string|"'aki-00000001'"
op|','
nl|'\n'
string|"'ramdiskId'"
op|':'
string|"'ari-00000001'"
op|','
nl|'\n'
string|"'rootDeviceName'"
op|':'
string|"'/dev/sda1'"
op|','
nl|'\n'
string|"'imageType'"
op|':'
string|"'machine'"
op|','
nl|'\n'
string|"'description'"
op|':'
name|'None'
op|'}'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'_format_image'
op|'('
name|'image'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
name|'image'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'image_location'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'expected'
op|'['
string|"'imageLocation'"
op|']'
op|'='
string|"'None (name)'"
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'_format_image'
op|'('
name|'image'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
name|'image'
op|'['
string|"'name'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'image'
op|'['
string|"'properties'"
op|']'
op|'['
string|"'image_location'"
op|']'
op|'='
string|"'location'"
newline|'\n'
name|'expected'
op|'['
string|"'imageLocation'"
op|']'
op|'='
string|"'location'"
newline|'\n'
name|'expected'
op|'['
string|"'name'"
op|']'
op|'='
string|"'location'"
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'_format_image'
op|'('
name|'image'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_deregister_image
dedent|''
name|'def'
name|'test_deregister_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'deregister_image'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'deregister_image'
newline|'\n'
nl|'\n'
DECL|function|fake_delete
name|'def'
name|'fake_delete'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'delete'"
op|','
name|'fake_delete'
op|')'
newline|'\n'
comment|'# valid image'
nl|'\n'
name|'result'
op|'='
name|'deregister_image'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'ami-00000001'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'imageId'"
op|']'
op|','
string|"'ami-00000001'"
op|')'
newline|'\n'
comment|'# invalid image'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'UnsetAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_detail_empty
name|'def'
name|'fake_detail_empty'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'detail'"
op|','
name|'fake_detail_empty'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'ImageNotFound'
op|','
name|'deregister_image'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'ami-bad001'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_deregister_image_wrong_container_type
dedent|''
name|'def'
name|'test_deregister_image_wrong_container_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'deregister_image'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'deregister_image'
newline|'\n'
nl|'\n'
DECL|function|fake_delete
name|'def'
name|'fake_delete'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'delete'"
op|','
name|'fake_delete'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
name|'deregister_image'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'aki-00000001'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_run_instance
dedent|''
name|'def'
name|'_run_instance'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rv'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'run_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'instance_id'
op|'='
name|'rv'
op|'['
string|"'instancesSet'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'instanceId'"
op|']'
newline|'\n'
name|'return'
name|'instance_id'
newline|'\n'
nl|'\n'
DECL|member|test_console_output
dedent|''
name|'def'
name|'test_console_output'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance'
op|'('
nl|'\n'
name|'image_id'
op|'='
string|"'ami-1'"
op|','
nl|'\n'
name|'instance_type'
op|'='
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
name|'max_count'
op|'='
number|'1'
op|')'
newline|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'get_console_output'
op|'('
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'base64'
op|'.'
name|'b64decode'
op|'('
name|'output'
op|'['
string|"'output'"
op|']'
op|')'
op|','
nl|'\n'
string|"'FAKE CONSOLE OUTPUT\\nANOTHER\\nLAST LINE'"
op|')'
newline|'\n'
comment|'# TODO(soren): We need this until we can stop polling in the rpc code'
nl|'\n'
comment|'#              for unit tests.'
nl|'\n'
name|'rv'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_key_generation
dedent|''
name|'def'
name|'test_key_generation'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'self'
op|'.'
name|'_create_key'
op|'('
string|"'test'"
op|')'
newline|'\n'
name|'private_key'
op|'='
name|'result'
op|'['
string|"'private_key'"
op|']'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
name|'db'
op|'.'
name|'key_pair_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'test'"
op|')'
op|'['
string|"'public_key'"
op|']'
newline|'\n'
nl|'\n'
op|'('
name|'fd'
op|','
name|'fname'
op|')'
op|'='
name|'tempfile'
op|'.'
name|'mkstemp'
op|'('
op|')'
newline|'\n'
name|'os'
op|'.'
name|'write'
op|'('
name|'fd'
op|','
name|'private_key'
op|')'
newline|'\n'
nl|'\n'
name|'public_key'
op|','
name|'err'
op|'='
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'ssh-keygen'"
op|','
string|"'-e'"
op|','
string|"'-f'"
op|','
name|'fname'
op|')'
newline|'\n'
nl|'\n'
name|'os'
op|'.'
name|'unlink'
op|'('
name|'fname'
op|')'
newline|'\n'
nl|'\n'
comment|'# assert key fields are equal'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"''"
op|'.'
name|'join'
op|'('
name|'public_key'
op|'.'
name|'split'
op|'('
string|'"\\n"'
op|')'
op|'['
number|'2'
op|':'
op|'-'
number|'2'
op|']'
op|')'
op|','
nl|'\n'
name|'expected'
op|'.'
name|'split'
op|'('
string|'" "'
op|')'
op|'['
number|'1'
op|']'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_key_pairs
dedent|''
name|'def'
name|'test_describe_key_pairs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_key'
op|'('
string|"'test1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_key'
op|'('
string|"'test2'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_key_pairs'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'keys'
op|'='
name|'result'
op|'['
string|'"keySet"'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filter'
op|'('
name|'lambda'
name|'k'
op|':'
name|'k'
op|'['
string|"'keyName'"
op|']'
op|'=='
string|"'test1'"
op|','
name|'keys'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filter'
op|'('
name|'lambda'
name|'k'
op|':'
name|'k'
op|'['
string|"'keyName'"
op|']'
op|'=='
string|"'test2'"
op|','
name|'keys'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_bad_key_pairs
dedent|''
name|'def'
name|'test_describe_bad_key_pairs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'EC2APIError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_key_pairs'
op|','
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'key_name'
op|'='
op|'['
string|"'DoesNotExist'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_import_key_pair
dedent|''
name|'def'
name|'test_import_key_pair'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pubkey_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'__file__'
op|')'
op|','
string|"'public_key'"
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'pubkey_path'
op|'+'
string|"'/dummy.pub'"
op|','
string|"'r'"
op|')'
newline|'\n'
name|'dummypub'
op|'='
name|'f'
op|'.'
name|'readline'
op|'('
op|')'
op|'.'
name|'rstrip'
op|'('
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'pubkey_path'
op|'+'
string|"'/dummy.fingerprint'"
op|','
string|"'r'"
op|')'
newline|'\n'
name|'dummyfprint'
op|'='
name|'f'
op|'.'
name|'readline'
op|'('
op|')'
op|'.'
name|'rstrip'
op|'('
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
newline|'\n'
name|'key_name'
op|'='
string|"'testimportkey'"
newline|'\n'
name|'public_key_material'
op|'='
name|'base64'
op|'.'
name|'b64encode'
op|'('
name|'dummypub'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'import_key_pair'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'key_name'
op|','
nl|'\n'
name|'public_key_material'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'keyName'"
op|']'
op|','
name|'key_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'keyFingerprint'"
op|']'
op|','
name|'dummyfprint'
op|')'
newline|'\n'
name|'keydata'
op|'='
name|'db'
op|'.'
name|'key_pair_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'user_id'
op|','
nl|'\n'
name|'key_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dummypub'
op|','
name|'keydata'
op|'['
string|"'public_key'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dummyfprint'
op|','
name|'keydata'
op|'['
string|"'fingerprint'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_import_key_pair_quota_limit
dedent|''
name|'def'
name|'test_import_key_pair_quota_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'quota_key_pairs'
op|'='
number|'0'
op|')'
newline|'\n'
name|'pubkey_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'__file__'
op|')'
op|','
string|"'public_key'"
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'pubkey_path'
op|'+'
string|"'/dummy.pub'"
op|','
string|"'r'"
op|')'
newline|'\n'
name|'dummypub'
op|'='
name|'f'
op|'.'
name|'readline'
op|'('
op|')'
op|'.'
name|'rstrip'
op|'('
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'pubkey_path'
op|'+'
string|"'/dummy.fingerprint'"
op|','
string|"'r'"
op|')'
newline|'\n'
name|'dummyfprint'
op|'='
name|'f'
op|'.'
name|'readline'
op|'('
op|')'
op|'.'
name|'rstrip'
op|'('
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
newline|'\n'
name|'key_name'
op|'='
string|"'testimportkey'"
newline|'\n'
name|'public_key_material'
op|'='
name|'base64'
op|'.'
name|'b64encode'
op|'('
name|'dummypub'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'EC2APIError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'import_key_pair'
op|','
name|'self'
op|'.'
name|'context'
op|','
name|'key_name'
op|','
nl|'\n'
name|'public_key_material'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_key_pair
dedent|''
name|'def'
name|'test_create_key_pair'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'good_names'
op|'='
op|'('
string|"'a'"
op|','
string|"'a'"
op|'*'
number|'255'
op|','
name|'string'
op|'.'
name|'ascii_letters'
op|'+'
string|"' -_'"
op|')'
newline|'\n'
name|'bad_names'
op|'='
op|'('
string|"''"
op|','
string|"'a'"
op|'*'
number|'256'
op|','
string|"'*'"
op|','
string|"'/'"
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'key_name'
name|'in'
name|'good_names'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_key_pair'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'key_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'keyName'"
op|']'
op|','
name|'key_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'key_name'
name|'in'
name|'bad_names'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'EC2APIError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_key_pair'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'key_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_key_pair_quota_limit
dedent|''
dedent|''
name|'def'
name|'test_create_key_pair_quota_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'quota_key_pairs'
op|'='
number|'10'
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'key_name'
op|'='
string|"'key_%i'"
op|'%'
name|'i'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_key_pair'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'key_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'keyName'"
op|']'
op|','
name|'key_name'
op|')'
newline|'\n'
nl|'\n'
comment|"# 11'th group should fail"
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'EC2APIError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_key_pair'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'foo'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_key_pair
dedent|''
name|'def'
name|'test_delete_key_pair'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_key'
op|'('
string|"'test'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_key_pair'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'test'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_instances
dedent|''
name|'def'
name|'test_run_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-00000001'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'run_instances'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'run_instances'
newline|'\n'
nl|'\n'
DECL|function|fake_show
name|'def'
name|'fake_show'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'kernel_id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|'}'
op|','
nl|'\n'
string|"'container_format'"
op|':'
string|"'ami'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'active'"
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show'
op|')'
newline|'\n'
nl|'\n'
DECL|function|dumb
name|'def'
name|'dumb'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_utils'
op|','
string|"'notify_about_instance_usage'"
op|','
name|'dumb'
op|')'
newline|'\n'
comment|"# NOTE(comstud): Make 'cast' behave like a 'call' which will"
nl|'\n'
comment|'# ensure that operations complete'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'rpc'
op|','
string|"'cast'"
op|','
name|'rpc'
op|'.'
name|'call'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'run_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'result'
op|'['
string|"'instancesSet'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'imageId'"
op|']'
op|','
string|"'ami-00000001'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'instanceId'"
op|']'
op|','
string|"'i-00000001'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'instanceState'"
op|']'
op|'['
string|"'name'"
op|']'
op|','
string|"'running'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'instanceType'"
op|']'
op|','
string|"'m1.small'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_instances_availability_zone
dedent|''
name|'def'
name|'test_run_instances_availability_zone'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-00000001'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'placement'"
op|':'
op|'{'
string|"'availability_zone'"
op|':'
string|"'fake'"
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'run_instances'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'run_instances'
newline|'\n'
nl|'\n'
DECL|function|fake_show
name|'def'
name|'fake_show'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'kernel_id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|'}'
op|','
nl|'\n'
string|"'container_format'"
op|':'
string|"'ami'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'active'"
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show'
op|')'
newline|'\n'
comment|"# NOTE(comstud): Make 'cast' behave like a 'call' which will"
nl|'\n'
comment|'# ensure that operations complete'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'rpc'
op|','
string|"'cast'"
op|','
name|'rpc'
op|'.'
name|'call'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_format
name|'def'
name|'fake_format'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'cloud'
op|','
string|"'_format_run_instances'"
op|','
name|'fake_format'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_create
name|'def'
name|'fake_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'availability_zone'"
op|']'
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'return'
op|'('
op|'{'
string|"'id'"
op|':'
string|"'fake-instance'"
op|'}'
op|','
string|"'fake-res-id'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'compute_api'
op|','
string|"'create'"
op|','
name|'fake_create'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(vish) the assert for this call is in the fake_create method.'
nl|'\n'
name|'run_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_instances_image_state_none
dedent|''
name|'def'
name|'test_run_instances_image_state_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-00000001'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'run_instances'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'run_instances'
newline|'\n'
nl|'\n'
DECL|function|fake_show_no_state
name|'def'
name|'fake_show_no_state'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'kernel_id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|'}'
op|','
string|"'container_format'"
op|':'
string|"'ami'"
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'UnsetAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show_no_state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'EC2APIError'
op|','
name|'run_instances'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_instances_image_state_invalid
dedent|''
name|'def'
name|'test_run_instances_image_state_invalid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-00000001'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'run_instances'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'run_instances'
newline|'\n'
nl|'\n'
DECL|function|fake_show_decrypt
name|'def'
name|'fake_show_decrypt'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'container_format'"
op|':'
string|"'ami'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'kernel_id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|','
string|"'image_state'"
op|':'
string|"'decrypting'"
op|'}'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'UnsetAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show_decrypt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'EC2APIError'
op|','
name|'run_instances'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_instances_image_status_active
dedent|''
name|'def'
name|'test_run_instances_image_status_active'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
name|'FLAGS'
op|'.'
name|'default_image'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'run_instances'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'run_instances'
newline|'\n'
nl|'\n'
DECL|function|fake_show_stat_active
name|'def'
name|'fake_show_stat_active'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'container_format'"
op|':'
string|"'ami'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'kernel_id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|'}'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'active'"
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_id_to_glance_id
dedent|''
name|'def'
name|'fake_id_to_glance_id'
op|'('
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show_stat_active'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'ec2utils'
op|','
string|"'id_to_glance_id'"
op|','
name|'fake_id_to_glance_id'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'run_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'result'
op|'['
string|"'instancesSet'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_restart_compute_service
dedent|''
name|'def'
name|'_restart_compute_service'
op|'('
name|'self'
op|','
name|'periodic_interval'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""restart compute service. NOTE: fake driver forgets all instances."""'
newline|'\n'
name|'self'
op|'.'
name|'compute'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'if'
name|'periodic_interval'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
nl|'\n'
string|"'compute'"
op|','
name|'periodic_interval'
op|'='
name|'periodic_interval'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'compute'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_start_instance
dedent|''
dedent|''
name|'def'
name|'test_stop_start_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure stop/start instance works"""'
newline|'\n'
comment|'# enforce periodic tasks run in short time to avoid wait for 60s.'
nl|'\n'
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
name|'periodic_interval'
op|'='
number|'0.3'
op|')'
newline|'\n'
nl|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-1'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|','
op|'}'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
comment|"# a running instance can't be started."
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'start_instances'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'stop_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'start_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'stop_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'{'
string|"'instancesSet'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'instanceId'"
op|':'
string|"'i-00000001'"
op|','
nl|'\n'
string|"'previousState'"
op|':'
op|'{'
string|"'code'"
op|':'
number|'80'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'stopped'"
op|'}'
op|','
nl|'\n'
string|"'shutdownState'"
op|':'
op|'{'
string|"'code'"
op|':'
number|'48'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'terminated'"
op|'}'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_start_instances
dedent|''
name|'def'
name|'test_start_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-1'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|','
op|'}'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'stop_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'start_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'{'
string|"'instancesSet'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'instanceId'"
op|':'
string|"'i-00000001'"
op|','
nl|'\n'
string|"'previousState'"
op|':'
op|'{'
string|"'code'"
op|':'
number|'16'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'running'"
op|'}'
op|','
nl|'\n'
string|"'shutdownState'"
op|':'
op|'{'
string|"'code'"
op|':'
number|'48'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'terminated'"
op|'}'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_instances
dedent|''
name|'def'
name|'test_stop_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-1'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|','
op|'}'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'stop_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'{'
string|"'instancesSet'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'instanceId'"
op|':'
string|"'i-00000001'"
op|','
nl|'\n'
string|"'previousState'"
op|':'
op|'{'
string|"'code'"
op|':'
number|'80'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'stopped'"
op|'}'
op|','
nl|'\n'
string|"'shutdownState'"
op|':'
op|'{'
string|"'code'"
op|':'
number|'48'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'terminated'"
op|'}'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_terminate_instances
dedent|''
name|'def'
name|'test_terminate_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-1'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|','
op|'}'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
comment|"# a running instance can't be started."
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'start_instances'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'{'
string|"'instancesSet'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'instanceId'"
op|':'
string|"'i-00000001'"
op|','
nl|'\n'
string|"'previousState'"
op|':'
op|'{'
string|"'code'"
op|':'
number|'16'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'running'"
op|'}'
op|','
nl|'\n'
string|"'shutdownState'"
op|':'
op|'{'
string|"'code'"
op|':'
number|'48'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'terminated'"
op|'}'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_terminate_instances_invalid_instance_id
dedent|''
name|'def'
name|'test_terminate_instances_invalid_instance_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-1'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|','
op|'}'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'['
string|"'i-2'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_terminate_instances_disable_terminate
dedent|''
name|'def'
name|'test_terminate_instances_disable_terminate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-1'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|','
op|'}'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'internal_uuid'
op|'='
name|'db'
op|'.'
name|'get_instance_uuid_by_ec2_id'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'instance_id'
op|')'
op|')'
newline|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'internal_uuid'
op|','
nl|'\n'
op|'{'
string|"'disable_terminate'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'{'
string|"'instancesSet'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'instanceId'"
op|':'
string|"'i-00000001'"
op|','
nl|'\n'
string|"'previousState'"
op|':'
op|'{'
string|"'code'"
op|':'
number|'16'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'running'"
op|'}'
op|','
nl|'\n'
string|"'shutdownState'"
op|':'
op|'{'
string|"'code'"
op|':'
number|'16'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'running'"
op|'}'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'internal_uuid'
op|','
nl|'\n'
op|'{'
string|"'disable_terminate'"
op|':'
name|'False'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'{'
string|"'instancesSet'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'instanceId'"
op|':'
string|"'i-00000001'"
op|','
nl|'\n'
string|"'previousState'"
op|':'
op|'{'
string|"'code'"
op|':'
number|'16'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'running'"
op|'}'
op|','
nl|'\n'
string|"'shutdownState'"
op|':'
op|'{'
string|"'code'"
op|':'
number|'48'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'terminated'"
op|'}'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_terminate_instances_two_instances
dedent|''
name|'def'
name|'test_terminate_instances_two_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-1'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|','
op|'}'
newline|'\n'
name|'inst1'
op|'='
name|'self'
op|'.'
name|'_run_instance'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'inst2'
op|'='
name|'self'
op|'.'
name|'_run_instance'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'stop_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'inst1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'{'
string|"'instancesSet'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'instanceId'"
op|':'
string|"'i-00000001'"
op|','
nl|'\n'
string|"'previousState'"
op|':'
op|'{'
string|"'code'"
op|':'
number|'80'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'stopped'"
op|'}'
op|','
nl|'\n'
string|"'shutdownState'"
op|':'
op|'{'
string|"'code'"
op|':'
number|'48'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'terminated'"
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'instanceId'"
op|':'
string|"'i-00000002'"
op|','
nl|'\n'
string|"'previousState'"
op|':'
op|'{'
string|"'code'"
op|':'
number|'16'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'running'"
op|'}'
op|','
nl|'\n'
string|"'shutdownState'"
op|':'
op|'{'
string|"'code'"
op|':'
number|'48'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'terminated'"
op|'}'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'inst1'
op|','
name|'inst2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_instances
dedent|''
name|'def'
name|'test_reboot_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-1'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|','
op|'}'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
comment|"# a running instance can't be started."
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'start_instances'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'reboot_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_volume_create
dedent|''
name|'def'
name|'_volume_create'
op|'('
name|'self'
op|','
name|'volume_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
op|'{'
string|"'status'"
op|':'
string|"'available'"
op|','
nl|'\n'
string|"'host'"
op|':'
name|'self'
op|'.'
name|'volume'
op|'.'
name|'host'
op|','
nl|'\n'
string|"'size'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'attach_status'"
op|':'
string|"'detached'"
op|','
op|'}'
newline|'\n'
name|'if'
name|'volume_id'
op|':'
newline|'\n'
indent|'            '
name|'kwargs'
op|'['
string|"'id'"
op|']'
op|'='
name|'volume_id'
newline|'\n'
dedent|''
name|'return'
name|'db'
op|'.'
name|'volume_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assert_volume_attached
dedent|''
name|'def'
name|'_assert_volume_attached'
op|'('
name|'self'
op|','
name|'vol'
op|','
name|'instance_uuid'
op|','
name|'mountpoint'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'instance_uuid'"
op|']'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'mountpoint'"
op|']'
op|','
name|'mountpoint'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'status'"
op|']'
op|','
string|'"in-use"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'attach_status'"
op|']'
op|','
string|'"attached"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assert_volume_detached
dedent|''
name|'def'
name|'_assert_volume_detached'
op|'('
name|'self'
op|','
name|'vol'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'instance_uuid'"
op|']'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'mountpoint'"
op|']'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'status'"
op|']'
op|','
string|'"available"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'attach_status'"
op|']'
op|','
string|'"detached"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_start_with_volume
dedent|''
name|'def'
name|'test_stop_start_with_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure run instance with block device mapping works"""'
newline|'\n'
nl|'\n'
comment|'# enforce periodic tasks run in short time to avoid wait for 60s.'
nl|'\n'
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
name|'periodic_interval'
op|'='
number|'0.3'
op|')'
newline|'\n'
nl|'\n'
name|'vol1'
op|'='
name|'self'
op|'.'
name|'_volume_create'
op|'('
op|')'
newline|'\n'
name|'vol2'
op|'='
name|'self'
op|'.'
name|'_volume_create'
op|'('
op|')'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-1'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'block_device_mapping'"
op|':'
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/vdb'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
name|'vol1'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/vdc'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
name|'vol2'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
op|']'
op|'}'
newline|'\n'
name|'ec2_instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'instance_uuid'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_instance_id_to_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'ec2_instance_id'
op|')'
newline|'\n'
name|'instance_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'ec2_instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'vols'
op|'='
name|'db'
op|'.'
name|'volume_get_all_by_instance_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'vols'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'vol'
name|'in'
name|'vols'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|'=='
name|'vol1'
op|'['
string|"'id'"
op|']'
name|'or'
name|'vol'
op|'['
string|"'id'"
op|']'
op|'=='
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol'
op|','
name|'instance_uuid'
op|','
string|"'/dev/vdb'"
op|')'
newline|'\n'
nl|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol'
op|','
name|'instance_uuid'
op|','
string|"'/dev/vdc'"
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'stop_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol'
op|','
name|'instance_uuid'
op|','
string|"'/dev/vdb'"
op|')'
newline|'\n'
nl|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol'
op|','
name|'instance_uuid'
op|','
string|"'/dev/vdc'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'start_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
name|'vols'
op|'='
name|'db'
op|'.'
name|'volume_get_all_by_instance_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'vols'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'vol'
name|'in'
name|'vols'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|'=='
name|'vol1'
op|'['
string|"'id'"
op|']'
name|'or'
name|'vol'
op|'['
string|"'id'"
op|']'
op|'=='
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vol'
op|'['
string|"'mountpoint'"
op|']'
op|'=='
string|"'/dev/vdb'"
name|'or'
nl|'\n'
name|'vol'
op|'['
string|"'mountpoint'"
op|']'
op|'=='
string|"'/dev/vdc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'instance_uuid'"
op|']'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'status'"
op|']'
op|','
string|'"in-use"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'attach_status'"
op|']'
op|','
string|'"attached"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'admin_ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
name|'read_deleted'
op|'='
string|'"no"'
op|')'
newline|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'admin_ctxt'
op|','
name|'vol1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'vol'
op|'['
string|"'deleted'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'admin_ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
name|'read_deleted'
op|'='
string|'"only"'
op|')'
newline|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'admin_ctxt'
op|','
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vol'
op|'['
string|"'deleted'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_with_attached_volume
dedent|''
name|'def'
name|'test_stop_with_attached_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure attach info is reflected to block device mapping"""'
newline|'\n'
comment|'# enforce periodic tasks run in short time to avoid wait for 60s.'
nl|'\n'
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
name|'periodic_interval'
op|'='
number|'0.3'
op|')'
newline|'\n'
nl|'\n'
name|'vol1'
op|'='
name|'self'
op|'.'
name|'_volume_create'
op|'('
op|')'
newline|'\n'
name|'vol2'
op|'='
name|'self'
op|'.'
name|'_volume_create'
op|'('
op|')'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-1'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'block_device_mapping'"
op|':'
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/vdb'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
name|'vol1'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'ec2_instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'instance_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_id_to_id'
op|'('
name|'ec2_instance_id'
op|')'
newline|'\n'
name|'instance_uuid'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_instance_id_to_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'ec2_instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'vols'
op|'='
name|'db'
op|'.'
name|'volume_get_all_by_instance_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'vols'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'for'
name|'vol'
name|'in'
name|'vols'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|','
name|'vol1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol'
op|','
name|'instance_uuid'
op|','
string|"'/dev/vdb'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_detached'
op|'('
name|'vol'
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'compute_api'
op|'.'
name|'attach_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'volume_id'
op|'='
name|'vol2'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'device'
op|'='
string|"'/dev/vdc'"
op|')'
newline|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol'
op|','
name|'instance_uuid'
op|','
string|"'/dev/vdc'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'compute_api'
op|'.'
name|'detach_volume'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|'='
name|'vol1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_detached'
op|'('
name|'vol'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'stop_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol'
op|','
name|'instance_uuid'
op|','
string|"'/dev/vdc'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'start_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
name|'vols'
op|'='
name|'db'
op|'.'
name|'volume_get_all_by_instance_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'vols'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'for'
name|'vol'
name|'in'
name|'vols'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|','
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol'
op|','
name|'instance_uuid'
op|','
string|"'/dev/vdc'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_detached'
op|'('
name|'vol'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'vol_id'
name|'in'
op|'('
name|'vol1'
op|'['
string|"'id'"
op|']'
op|','
name|'vol2'
op|'['
string|"'id'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|','
name|'vol_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_detached'
op|'('
name|'vol'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_snapshot
dedent|''
name|'def'
name|'_create_snapshot'
op|'('
name|'self'
op|','
name|'ec2_volume_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|'='
name|'ec2_volume_id'
op|')'
newline|'\n'
name|'return'
name|'result'
op|'['
string|"'snapshotId'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_run_with_snapshot
dedent|''
name|'def'
name|'test_run_with_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure run/stop/start instance with snapshot works."""'
newline|'\n'
name|'vol'
op|'='
name|'self'
op|'.'
name|'_volume_create'
op|'('
op|')'
newline|'\n'
name|'ec2_volume_id'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_vol_id'
op|'('
name|'vol'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'ec2_snapshot1_id'
op|'='
name|'self'
op|'.'
name|'_create_snapshot'
op|'('
name|'ec2_volume_id'
op|')'
newline|'\n'
name|'snapshot1_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_snap_id_to_uuid'
op|'('
name|'ec2_snapshot1_id'
op|')'
newline|'\n'
name|'ec2_snapshot2_id'
op|'='
name|'self'
op|'.'
name|'_create_snapshot'
op|'('
name|'ec2_volume_id'
op|')'
newline|'\n'
name|'snapshot2_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_snap_id_to_uuid'
op|'('
name|'ec2_snapshot2_id'
op|')'
newline|'\n'
nl|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-1'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'block_device_mapping'"
op|':'
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/vdb'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
name|'snapshot1_id'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|','
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/vdc'"
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
name|'snapshot2_id'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'ec2_instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'instance_id'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_vol_id_to_uuid'
op|'('
name|'ec2_instance_id'
op|')'
newline|'\n'
name|'instance_uuid'
op|'='
name|'ec2utils'
op|'.'
name|'ec2_instance_id_to_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'ec2_instance_id'
op|')'
newline|'\n'
nl|'\n'
name|'vols'
op|'='
name|'db'
op|'.'
name|'volume_get_all_by_instance_uuid'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'vols'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'vol1_id'
op|'='
name|'None'
newline|'\n'
name|'vol2_id'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'vol'
name|'in'
name|'vols'
op|':'
newline|'\n'
indent|'            '
name|'snapshot_id'
op|'='
name|'vol'
op|'['
string|"'snapshot_id'"
op|']'
newline|'\n'
name|'if'
name|'snapshot_id'
op|'=='
name|'snapshot1_id'
op|':'
newline|'\n'
indent|'                '
name|'vol1_id'
op|'='
name|'vol'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'mountpoint'
op|'='
string|"'/dev/vdb'"
newline|'\n'
dedent|''
name|'elif'
name|'snapshot_id'
op|'=='
name|'snapshot2_id'
op|':'
newline|'\n'
indent|'                '
name|'vol2_id'
op|'='
name|'vol'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'mountpoint'
op|'='
string|"'/dev/vdc'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_assert_volume_attached'
op|'('
name|'vol'
op|','
name|'instance_uuid'
op|','
name|'mountpoint'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vol1_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vol2_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'admin_ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
name|'read_deleted'
op|'='
string|'"no"'
op|')'
newline|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'admin_ctxt'
op|','
name|'vol1_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_volume_detached'
op|'('
name|'vol'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'vol'
op|'['
string|"'deleted'"
op|']'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol1_id'
op|')'
newline|'\n'
nl|'\n'
name|'admin_ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
name|'read_deleted'
op|'='
string|'"only"'
op|')'
newline|'\n'
name|'vol'
op|'='
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'admin_ctxt'
op|','
name|'vol2_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'vol'
op|'['
string|"'deleted'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'snapshot_id'
name|'in'
op|'('
name|'ec2_snapshot1_id'
op|','
name|'ec2_snapshot2_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_snapshot'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snapshot_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image
dedent|''
dedent|''
name|'def'
name|'test_create_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure that CreateImage works"""'
newline|'\n'
comment|'# enforce periodic tasks run in short time to avoid wait for 60s.'
nl|'\n'
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
name|'periodic_interval'
op|'='
number|'0.3'
op|')'
newline|'\n'
nl|'\n'
op|'('
name|'volumes'
op|','
name|'snapshots'
op|')'
op|'='
name|'self'
op|'.'
name|'_setUpImageSet'
op|'('
nl|'\n'
name|'create_volumes_and_snapshots'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-1'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'ec2_instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_show
name|'def'
name|'fake_show'
op|'('
name|'meh'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'bdm'
op|'='
op|'['
name|'dict'
op|'('
name|'snapshot_id'
op|'='
name|'snapshots'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'volume_size'
op|'='
number|'1'
op|','
nl|'\n'
name|'device_name'
op|'='
string|"'sda1'"
op|','
nl|'\n'
name|'delete_on_termination'
op|'='
name|'False'
op|')'
op|']'
newline|'\n'
name|'props'
op|'='
name|'dict'
op|'('
name|'kernel_id'
op|'='
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
name|'ramdisk_id'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
op|','
nl|'\n'
name|'root_device_name'
op|'='
string|"'/dev/sda1'"
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
name|'bdm'
op|')'
newline|'\n'
name|'return'
name|'dict'
op|'('
name|'id'
op|'='
name|'id'
op|','
nl|'\n'
name|'properties'
op|'='
name|'props'
op|','
nl|'\n'
name|'container_format'
op|'='
string|"'ami'"
op|','
nl|'\n'
name|'status'
op|'='
string|"'active'"
op|','
nl|'\n'
name|'is_public'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_block_device_mapping_get_all_by_instance
name|'def'
name|'fake_block_device_mapping_get_all_by_instance'
op|'('
name|'context'
op|','
name|'inst_id'
op|')'
op|':'
newline|'\n'
DECL|class|BDM
indent|'            '
name|'class'
name|'BDM'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'                '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'no_device'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'values'
op|'='
name|'dict'
op|'('
name|'snapshot_id'
op|'='
name|'snapshots'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'volume_id'
op|'='
name|'volumes'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'virtual_name'
op|'='
name|'None'
op|','
nl|'\n'
name|'volume_size'
op|'='
number|'1'
op|','
nl|'\n'
name|'device_name'
op|'='
string|"'sda1'"
op|','
nl|'\n'
name|'delete_on_termination'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__getattr__
dedent|''
name|'def'
name|'__getattr__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'self'
op|'.'
name|'values'
op|'.'
name|'get'
op|'('
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__getitem__
dedent|''
name|'def'
name|'__getitem__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'self'
op|'.'
name|'values'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
op|'['
name|'BDM'
op|'('
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'block_device_mapping_get_all_by_instance'"
op|','
nl|'\n'
name|'fake_block_device_mapping_get_all_by_instance'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_image'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'ec2_instance_id'
op|','
nl|'\n'
name|'no_reboot'
op|'='
name|'True'
op|')'
newline|'\n'
name|'ec2_ids'
op|'='
op|'['
name|'result'
op|'['
string|"'imageId'"
op|']'
op|']'
newline|'\n'
name|'created_image'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_images'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'ec2_ids'
op|')'
op|'['
string|"'imagesSet'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'blockDeviceMapping'"
name|'in'
name|'created_image'
op|')'
newline|'\n'
name|'bdm'
op|'='
name|'created_image'
op|'['
string|"'blockDeviceMapping'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'bdm'
op|'.'
name|'get'
op|'('
string|"'deviceName'"
op|')'
op|','
string|"'sda1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'ebs'"
name|'in'
name|'bdm'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'bdm'
op|'['
string|"'ebs'"
op|']'
op|'.'
name|'get'
op|'('
string|"'snapshotId'"
op|')'
op|','
nl|'\n'
string|"'snap-%08x'"
op|'%'
name|'snapshots'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'created_image'
op|'.'
name|'get'
op|'('
string|"'kernelId'"
op|')'
op|','
string|"'aki-00000001'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'created_image'
op|'.'
name|'get'
op|'('
string|"'ramdiskId'"
op|')'
op|','
string|"'ari-00000002'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'created_image'
op|'.'
name|'get'
op|'('
string|"'rootDeviceType'"
op|')'
op|','
string|"'ebs'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
op|'['
name|'ec2_instance_id'
op|']'
op|')'
newline|'\n'
name|'for'
name|'vol'
name|'in'
name|'volumes'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'volume_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'vol'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'snap'
name|'in'
name|'snapshots'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'snapshot_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'snap'
op|')'
newline|'\n'
comment|'# TODO(yamahata): clean up snapshot created by CreateImage.'
nl|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image_instance_store
dedent|''
name|'def'
name|'test_create_image_instance_store'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Ensure CreateImage fails as expected for an instance-store-backed\n        instance\n        """'
newline|'\n'
comment|'# enforce periodic tasks run in short time to avoid wait for 60s.'
nl|'\n'
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
name|'periodic_interval'
op|'='
number|'0.3'
op|')'
newline|'\n'
nl|'\n'
op|'('
name|'volumes'
op|','
name|'snapshots'
op|')'
op|'='
name|'self'
op|'.'
name|'_setUpImageSet'
op|'('
nl|'\n'
name|'create_volumes_and_snapshots'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'image_id'"
op|':'
string|"'ami-1'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'ec2_instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_block_device_mapping_get_all_by_instance
name|'def'
name|'fake_block_device_mapping_get_all_by_instance'
op|'('
name|'context'
op|','
name|'inst_id'
op|')'
op|':'
newline|'\n'
DECL|class|BDM
indent|'            '
name|'class'
name|'BDM'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'                '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'no_device'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'values'
op|'='
name|'dict'
op|'('
name|'snapshot_id'
op|'='
name|'snapshots'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'volume_id'
op|'='
name|'volumes'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'virtual_name'
op|'='
name|'None'
op|','
nl|'\n'
name|'volume_size'
op|'='
number|'1'
op|','
nl|'\n'
name|'device_name'
op|'='
string|"'vda'"
op|','
nl|'\n'
name|'delete_on_termination'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__getattr__
dedent|''
name|'def'
name|'__getattr__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'self'
op|'.'
name|'values'
op|'.'
name|'get'
op|'('
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__getitem__
dedent|''
name|'def'
name|'__getitem__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'self'
op|'.'
name|'values'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
op|'['
name|'BDM'
op|'('
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'block_device_mapping_get_all_by_instance'"
op|','
nl|'\n'
name|'fake_block_device_mapping_get_all_by_instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InvalidParameterValue'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_image'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'ec2_instance_id'
op|','
nl|'\n'
name|'no_reboot'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_fake_bdm_get
name|'def'
name|'_fake_bdm_get'
op|'('
name|'ctxt'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|'{'
string|"'volume_id'"
op|':'
number|'87654321'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdh'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
number|'98765432'
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdi'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'device_name'"
op|':'
name|'None'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
string|"'ephemeral0'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdb'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
string|"'swap'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdc'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
string|"'ephemeral1'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sdd'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'volume_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
string|"'ephemeral2'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'/dev/sd3'"
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_describe_instance_attribute
dedent|''
name|'def'
name|'test_describe_instance_attribute'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure that describe_instance_attribute works"""'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'block_device_mapping_get_all_by_instance'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_fake_bdm_get'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get
name|'def'
name|'fake_get'
op|'('
name|'ctxt'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'e5fe5518-0288-4fa3-b0c4-c79764101b85'"
op|','
nl|'\n'
string|"'root_device_name'"
op|':'
string|"'/dev/sdh'"
op|','
nl|'\n'
string|"'security_groups'"
op|':'
op|'['
op|'{'
string|"'name'"
op|':'
string|"'fake0'"
op|'}'
op|','
op|'{'
string|"'name'"
op|':'
string|"'fake1'"
op|'}'
op|']'
op|','
nl|'\n'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'STOPPED'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
op|'{'
string|"'name'"
op|':'
string|"'fake_type'"
op|'}'
op|','
nl|'\n'
string|"'kernel_id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
op|','
nl|'\n'
string|"'user_data'"
op|':'
string|"'fake-user data'"
op|','
nl|'\n'
string|"'shutdown_terminate'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'disable_terminate'"
op|':'
name|'False'
op|','
nl|'\n'
op|'}'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'compute_api'
op|','
string|"'get'"
op|','
name|'fake_get'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_volume_get
name|'def'
name|'fake_volume_get'
op|'('
name|'ctxt'
op|','
name|'volume_id'
op|','
name|'session'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'volume_id'
op|'=='
number|'87654321'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'id'"
op|':'
name|'volume_id'
op|','
nl|'\n'
string|"'attach_time'"
op|':'
string|"'13:56:24'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'in-use'"
op|'}'
newline|'\n'
dedent|''
name|'raise'
name|'exception'
op|'.'
name|'VolumeNotFound'
op|'('
name|'volume_id'
op|'='
name|'volume_id'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'volume_get'"
op|','
name|'fake_volume_get'
op|')'
newline|'\n'
nl|'\n'
name|'get_attribute'
op|'='
name|'functools'
op|'.'
name|'partial'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_instance_attribute'
op|','
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
string|"'i-12345678'"
op|')'
newline|'\n'
nl|'\n'
name|'bdm'
op|'='
name|'get_attribute'
op|'('
string|"'blockDeviceMapping'"
op|')'
newline|'\n'
name|'bdm'
op|'['
string|"'blockDeviceMapping'"
op|']'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'expected_bdm'
op|'='
op|'{'
string|"'instance_id'"
op|':'
string|"'i-12345678'"
op|','
nl|'\n'
string|"'rootDeviceType'"
op|':'
string|"'ebs'"
op|','
nl|'\n'
string|"'blockDeviceMapping'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'deviceName'"
op|':'
string|"'/dev/sdh'"
op|','
nl|'\n'
string|"'ebs'"
op|':'
op|'{'
string|"'status'"
op|':'
string|"'in-use'"
op|','
nl|'\n'
string|"'deleteOnTermination'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'volumeId'"
op|':'
number|'87654321'
op|','
nl|'\n'
string|"'attachTime'"
op|':'
string|"'13:56:24'"
op|'}'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'expected_bdm'
op|'['
string|"'blockDeviceMapping'"
op|']'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bdm'
op|','
name|'expected_bdm'
op|')'
newline|'\n'
name|'groupSet'
op|'='
name|'get_attribute'
op|'('
string|"'groupSet'"
op|')'
newline|'\n'
name|'groupSet'
op|'['
string|"'groupSet'"
op|']'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'expected_groupSet'
op|'='
op|'{'
string|"'instance_id'"
op|':'
string|"'i-12345678'"
op|','
nl|'\n'
string|"'groupSet'"
op|':'
op|'['
op|'{'
string|"'groupId'"
op|':'
string|"'fake0'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'groupId'"
op|':'
string|"'fake1'"
op|'}'
op|']'
op|'}'
newline|'\n'
name|'expected_groupSet'
op|'['
string|"'groupSet'"
op|']'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'groupSet'
op|','
name|'expected_groupSet'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'get_attribute'
op|'('
string|"'instanceInitiatedShutdownBehavior'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'instance_id'"
op|':'
string|"'i-12345678'"
op|','
nl|'\n'
string|"'instanceInitiatedShutdownBehavior'"
op|':'
string|"'stop'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'get_attribute'
op|'('
string|"'disableApiTermination'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'instance_id'"
op|':'
string|"'i-12345678'"
op|','
nl|'\n'
string|"'disableApiTermination'"
op|':'
name|'False'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'get_attribute'
op|'('
string|"'instanceType'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'instance_id'"
op|':'
string|"'i-12345678'"
op|','
nl|'\n'
string|"'instanceType'"
op|':'
string|"'fake_type'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'get_attribute'
op|'('
string|"'kernel'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'instance_id'"
op|':'
string|"'i-12345678'"
op|','
nl|'\n'
string|"'kernel'"
op|':'
string|"'aki-00000001'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'get_attribute'
op|'('
string|"'ramdisk'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'instance_id'"
op|':'
string|"'i-12345678'"
op|','
nl|'\n'
string|"'ramdisk'"
op|':'
string|"'ari-00000002'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'get_attribute'
op|'('
string|"'rootDeviceName'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'instance_id'"
op|':'
string|"'i-12345678'"
op|','
nl|'\n'
string|"'rootDeviceName'"
op|':'
string|"'/dev/sdh'"
op|'}'
op|')'
newline|'\n'
comment|"# NOTE(yamahata): this isn't supported"
nl|'\n'
comment|"# get_attribute('sourceDestCheck')"
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'get_attribute'
op|'('
string|"'userData'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'instance_id'"
op|':'
string|"'i-12345678'"
op|','
nl|'\n'
string|"'userData'"
op|':'
string|"'}\\xa9\\x1e\\xba\\xc7\\xabu\\xabZ'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_initiated_shutdown_behavior
dedent|''
name|'def'
name|'test_instance_initiated_shutdown_behavior'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|test_dia_iisb
indent|'        '
name|'def'
name|'test_dia_iisb'
op|'('
name|'expected_result'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""test describe_instance_attribute\n            attribute instance_initiated_shutdown_behavior"""'
newline|'\n'
name|'kwargs'
op|'.'
name|'update'
op|'('
op|'{'
string|"'instance_type'"
op|':'
name|'FLAGS'
op|'.'
name|'default_instance_type'
op|','
nl|'\n'
string|"'max_count'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'instance_id'
op|'='
name|'self'
op|'.'
name|'_run_instance'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_instance_attribute'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|','
string|"'instanceInitiatedShutdownBehavior'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'instanceInitiatedShutdownBehavior'"
op|']'
op|','
nl|'\n'
name|'expected_result'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'{'
string|"'instancesSet'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'instanceId'"
op|':'
name|'instance_id'
op|','
nl|'\n'
string|"'previousState'"
op|':'
op|'{'
string|"'code'"
op|':'
number|'16'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'running'"
op|'}'
op|','
nl|'\n'
string|"'shutdownState'"
op|':'
op|'{'
string|"'code'"
op|':'
number|'48'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'terminated'"
op|'}'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
op|'['
name|'instance_id'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_restart_compute_service'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'test_dia_iisb'
op|'('
string|"'stop'"
op|','
name|'image_id'
op|'='
string|"'ami-1'"
op|')'
newline|'\n'
nl|'\n'
name|'block_device_mapping'
op|'='
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/vdb'"
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
string|"'ephemeral0'"
op|'}'
op|']'
newline|'\n'
name|'test_dia_iisb'
op|'('
string|"'stop'"
op|','
name|'image_id'
op|'='
string|"'ami-2'"
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
name|'block_device_mapping'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_show
name|'def'
name|'fake_show'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'id_'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"id_ %s"'
op|','
name|'id_'
op|')'
newline|'\n'
name|'print'
name|'id_'
newline|'\n'
nl|'\n'
name|'prop'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'id_'
op|'=='
string|"'ami-3'"
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'elif'
name|'id_'
op|'=='
string|"'ami-4'"
op|':'
newline|'\n'
indent|'                '
name|'prop'
op|'='
op|'{'
string|"'mappings'"
op|':'
op|'['
op|'{'
string|"'device'"
op|':'
string|"'sdb0'"
op|','
nl|'\n'
string|"'virtual'"
op|':'
string|"'ephemeral0'"
op|'}'
op|']'
op|'}'
newline|'\n'
dedent|''
name|'elif'
name|'id_'
op|'=='
string|"'ami-5'"
op|':'
newline|'\n'
indent|'                '
name|'prop'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
nl|'\n'
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdb0'"
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
string|"'ephemeral0'"
op|'}'
op|']'
op|'}'
newline|'\n'
dedent|''
name|'elif'
name|'id_'
op|'=='
string|"'ami-6'"
op|':'
newline|'\n'
indent|'                '
name|'prop'
op|'='
op|'{'
string|"'mappings'"
op|':'
op|'['
op|'{'
string|"'device'"
op|':'
string|"'sdb0'"
op|','
nl|'\n'
string|"'virtual'"
op|':'
string|"'ephemeral0'"
op|'}'
op|']'
op|','
nl|'\n'
string|"'block_device_mapping'"
op|':'
nl|'\n'
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'/dev/sdb0'"
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
string|"'ephemeral0'"
op|'}'
op|']'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'prop_base'
op|'='
op|'{'
string|"'kernel_id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|'}'
newline|'\n'
name|'prop_base'
op|'.'
name|'update'
op|'('
name|'prop'
op|')'
newline|'\n'
nl|'\n'
name|'return'
op|'{'
nl|'\n'
string|"'id'"
op|':'
name|'id_'
op|','
nl|'\n'
string|"'properties'"
op|':'
name|'prop_base'
op|','
nl|'\n'
string|"'container_format'"
op|':'
string|"'ami'"
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'active'"
op|'}'
newline|'\n'
nl|'\n'
comment|'# NOTE(yamahata): create ami-3 ... ami-6'
nl|'\n'
comment|'# ami-1 and ami-2 is already created by setUp()'
nl|'\n'
dedent|''
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'3'
op|','
number|'7'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'api'
op|'.'
name|'s3_image_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
string|"'ami-%d'"
op|'%'
name|'i'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show'
op|')'
newline|'\n'
nl|'\n'
name|'test_dia_iisb'
op|'('
string|"'stop'"
op|','
name|'image_id'
op|'='
string|"'ami-3'"
op|')'
newline|'\n'
name|'test_dia_iisb'
op|'('
string|"'stop'"
op|','
name|'image_id'
op|'='
string|"'ami-4'"
op|')'
newline|'\n'
name|'test_dia_iisb'
op|'('
string|"'stop'"
op|','
name|'image_id'
op|'='
string|"'ami-5'"
op|')'
newline|'\n'
name|'test_dia_iisb'
op|'('
string|"'stop'"
op|','
name|'image_id'
op|'='
string|"'ami-6'"
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
