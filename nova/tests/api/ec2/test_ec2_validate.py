begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2012 Cloudscaling, Inc.'
nl|'\n'
comment|'# Author: Joe Gordon <jogo@cloudscaling.com>'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'webob'
op|'.'
name|'exc'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'ec2'
name|'import'
name|'cloud'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'ec2'
name|'import'
name|'ec2utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'ec2'
name|'import'
name|'inst_state'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'power_state'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'utils'
name|'as'
name|'compute_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'image'
name|'import'
name|'fake'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|"'nova.tests.ec2_validate'"
op|')'
newline|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|EC2ValidateTestCase
name|'class'
name|'EC2ValidateTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'EC2ValidateTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'connection_type'
op|'='
string|"'fake'"
op|','
nl|'\n'
name|'stub_network'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|function|dumb
name|'def'
name|'dumb'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_utils'
op|','
string|"'notify_about_instance_usage'"
op|','
name|'dumb'
op|')'
newline|'\n'
comment|'# set up our cloud'
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'='
name|'cloud'
op|'.'
name|'CloudController'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# set up services'
nl|'\n'
name|'self'
op|'.'
name|'compute'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'compute'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduter'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'scheduler'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'network'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume'
op|'='
name|'self'
op|'.'
name|'start_service'
op|'('
string|"'volume'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'image_service'
op|'='
name|'utils'
op|'.'
name|'import_object'
op|'('
name|'FLAGS'
op|'.'
name|'image_service'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'project_id'
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'EC2_MALFORMED_IDS'
op|'='
op|'['
string|"'foobar'"
op|','
string|"''"
op|','
number|'123'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'EC2_VALID__IDS'
op|'='
op|'['
string|"'i-284f3a41'"
op|','
string|"'i-001'"
op|','
string|"'i-deadbeef'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'ec2_id_exception_map'
op|'='
op|'['
op|'('
name|'x'
op|','
name|'exception'
op|'.'
name|'InvalidInstanceIDMalformed'
op|')'
nl|'\n'
name|'for'
name|'x'
name|'in'
name|'self'
op|'.'
name|'EC2_MALFORMED_IDS'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'ec2_id_exception_map'
op|'.'
name|'extend'
op|'('
op|'['
op|'('
name|'x'
op|','
name|'exception'
op|'.'
name|'InstanceNotFound'
op|')'
nl|'\n'
name|'for'
name|'x'
name|'in'
name|'self'
op|'.'
name|'EC2_VALID__IDS'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'volume_id_exception_map'
op|'='
op|'['
op|'('
name|'x'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InvalidInstanceIDMalformed'
op|')'
nl|'\n'
name|'for'
name|'x'
name|'in'
name|'self'
op|'.'
name|'EC2_MALFORMED_IDS'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'volume_id_exception_map'
op|'.'
name|'extend'
op|'('
op|'['
op|'('
name|'x'
op|','
name|'exception'
op|'.'
name|'VolumeNotFound'
op|')'
nl|'\n'
name|'for'
name|'x'
name|'in'
name|'self'
op|'.'
name|'EC2_VALID__IDS'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_show
name|'def'
name|'fake_show'
op|'('
name|'meh'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'id'"
op|':'
name|'id'
op|','
nl|'\n'
string|"'container_format'"
op|':'
string|"'ami'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
nl|'\n'
string|"'kernel_id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'ramdisk_id'"
op|':'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'machine'"
op|','
nl|'\n'
string|"'image_state'"
op|':'
string|"'available'"
op|'}'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_show'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show_by_name'"
op|','
name|'fake_show'
op|')'
newline|'\n'
nl|'\n'
comment|"# NOTE(comstud): Make 'cast' behave like a 'call' which will"
nl|'\n'
comment|'# ensure that operations complete'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'rpc'
op|','
string|"'cast'"
op|','
name|'rpc'
op|'.'
name|'call'
op|')'
newline|'\n'
nl|'\n'
comment|'# make sure we can map ami-00000001/2 to a uuid in FakeImageService'
nl|'\n'
name|'db'
op|'.'
name|'api'
op|'.'
name|'s3_image_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'cedef40a-ed67-4d10-800e-17455edce175'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'api'
op|'.'
name|'s3_image_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
op|')'
newline|'\n'
nl|'\n'
comment|'#EC2_API tests (InvalidInstanceID.Malformed)'
nl|'\n'
DECL|member|test_console_output
dedent|''
name|'def'
name|'test_console_output'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'ec2_id'
op|','
name|'e'
name|'in'
name|'self'
op|'.'
name|'ec2_id_exception_map'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'e'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'get_console_output'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
op|'['
name|'ec2_id'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_attach_volume
dedent|''
dedent|''
name|'def'
name|'test_attach_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'ec2_id'
op|','
name|'e'
name|'in'
name|'self'
op|'.'
name|'ec2_id_exception_map'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'e'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'attach_volume'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|'='
string|"'i-1234'"
op|','
nl|'\n'
name|'instance_id'
op|'='
name|'ec2_id'
op|','
nl|'\n'
name|'device'
op|'='
string|"'/dev/vdc'"
op|')'
newline|'\n'
comment|'#missing instance error gets priority'
nl|'\n'
dedent|''
name|'for'
name|'ec2_id'
op|','
name|'e'
name|'in'
name|'self'
op|'.'
name|'ec2_id_exception_map'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'e'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'attach_volume'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|'='
name|'ec2_id'
op|','
nl|'\n'
name|'instance_id'
op|'='
string|"'i-1234'"
op|','
nl|'\n'
name|'device'
op|'='
string|"'/dev/vdc'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_instance_attribute
dedent|''
dedent|''
name|'def'
name|'test_describe_instance_attribute'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'ec2_id'
op|','
name|'e'
name|'in'
name|'self'
op|'.'
name|'ec2_id_exception_map'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'e'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_instance_attribute'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
name|'ec2_id'
op|','
nl|'\n'
name|'attribute'
op|'='
string|"'kernel'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_lifecycle
dedent|''
dedent|''
name|'def'
name|'test_instance_lifecycle'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'lifecycle'
op|'='
op|'['
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'terminate_instances'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'reboot_instances'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'stop_instances'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'start_instances'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'for'
name|'cmd'
name|'in'
name|'lifecycle'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'ec2_id'
op|','
name|'e'
name|'in'
name|'self'
op|'.'
name|'ec2_id_exception_map'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'e'
op|','
nl|'\n'
name|'cmd'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
op|'['
name|'ec2_id'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_image
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_create_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'ec2_id'
op|','
name|'e'
name|'in'
name|'self'
op|'.'
name|'ec2_id_exception_map'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'e'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_image'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|'='
name|'ec2_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_snapshot
dedent|''
dedent|''
name|'def'
name|'test_create_snapshot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'ec2_id'
op|','
name|'e'
name|'in'
name|'self'
op|'.'
name|'volume_id_exception_map'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'e'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'create_snapshot'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|'='
name|'ec2_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_describe_volumes
dedent|''
dedent|''
name|'def'
name|'test_describe_volumes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'ec2_id'
op|','
name|'e'
name|'in'
name|'self'
op|'.'
name|'volume_id_exception_map'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'e'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'describe_volumes'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|'='
op|'['
name|'ec2_id'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_volume
dedent|''
dedent|''
name|'def'
name|'test_delete_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'ec2_id'
op|','
name|'e'
name|'in'
name|'self'
op|'.'
name|'volume_id_exception_map'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'e'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'delete_volume'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|'='
name|'ec2_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detach_volume
dedent|''
dedent|''
name|'def'
name|'test_detach_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'ec2_id'
op|','
name|'e'
name|'in'
name|'self'
op|'.'
name|'volume_id_exception_map'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'e'
op|','
nl|'\n'
name|'self'
op|'.'
name|'cloud'
op|'.'
name|'detach_volume'
op|','
nl|'\n'
name|'context'
op|'='
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|'='
name|'ec2_id'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
