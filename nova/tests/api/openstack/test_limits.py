begin_unit
comment|'# Copyright 2011 OpenStack LLC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nTests dealing with HTTP rate-limiting.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'httplib'
newline|'\n'
name|'import'
name|'json'
newline|'\n'
name|'from'
name|'lxml'
name|'import'
name|'etree'
newline|'\n'
name|'import'
name|'StringIO'
newline|'\n'
name|'import'
name|'stubout'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'import'
name|'webob'
newline|'\n'
name|'from'
name|'xml'
op|'.'
name|'dom'
name|'import'
name|'minidom'
newline|'\n'
nl|'\n'
name|'import'
name|'nova'
op|'.'
name|'context'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'limits'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'views'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'wsgi'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'xmlutil'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|TEST_LIMITS
name|'TEST_LIMITS'
op|'='
op|'['
nl|'\n'
name|'limits'
op|'.'
name|'Limit'
op|'('
string|'"GET"'
op|','
string|'"/delayed"'
op|','
string|'"^/delayed"'
op|','
number|'1'
op|','
name|'limits'
op|'.'
name|'PER_MINUTE'
op|')'
op|','
nl|'\n'
name|'limits'
op|'.'
name|'Limit'
op|'('
string|'"POST"'
op|','
string|'"*"'
op|','
string|'".*"'
op|','
number|'7'
op|','
name|'limits'
op|'.'
name|'PER_MINUTE'
op|')'
op|','
nl|'\n'
name|'limits'
op|'.'
name|'Limit'
op|'('
string|'"POST"'
op|','
string|'"/servers"'
op|','
string|'"^/servers"'
op|','
number|'3'
op|','
name|'limits'
op|'.'
name|'PER_MINUTE'
op|')'
op|','
nl|'\n'
name|'limits'
op|'.'
name|'Limit'
op|'('
string|'"PUT"'
op|','
string|'"*"'
op|','
string|'""'
op|','
number|'10'
op|','
name|'limits'
op|'.'
name|'PER_MINUTE'
op|')'
op|','
nl|'\n'
name|'limits'
op|'.'
name|'Limit'
op|'('
string|'"PUT"'
op|','
string|'"/servers"'
op|','
string|'"^/servers"'
op|','
number|'5'
op|','
name|'limits'
op|'.'
name|'PER_MINUTE'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
DECL|variable|NS
name|'NS'
op|'='
op|'{'
nl|'\n'
string|"'atom'"
op|':'
string|"'http://www.w3.org/2005/Atom'"
op|','
nl|'\n'
string|"'ns'"
op|':'
string|"'http://docs.openstack.org/compute/api/v1.1'"
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BaseLimitTestSuite
name|'class'
name|'BaseLimitTestSuite'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Base test suite which provides relevant stubs and time abstraction."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Run before each test."""'
newline|'\n'
name|'self'
op|'.'
name|'time'
op|'='
number|'0.0'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'='
name|'stubout'
op|'.'
name|'StubOutForTesting'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'limits'
op|'.'
name|'Limit'
op|','
string|'"_get_time"'
op|','
name|'self'
op|'.'
name|'_get_time'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'absolute_limits'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|stub_get_project_quotas
name|'def'
name|'stub_get_project_quotas'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'absolute_limits'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'quota'
op|','
string|'"get_project_quotas"'
op|','
nl|'\n'
name|'stub_get_project_quotas'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Run after each test."""'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'UnsetAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_time
dedent|''
name|'def'
name|'_get_time'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return the "time" according to this test suite."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'time'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LimitsControllerTest
dedent|''
dedent|''
name|'class'
name|'LimitsControllerTest'
op|'('
name|'BaseLimitTestSuite'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Tests for `limits.LimitsController` class.\n    """'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Run before each test."""'
newline|'\n'
name|'BaseLimitTestSuite'
op|'.'
name|'setUp'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'wsgi'
op|'.'
name|'LazySerializationMiddleware'
op|'('
nl|'\n'
name|'limits'
op|'.'
name|'create_resource'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'maxDiff'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_get_index_request
dedent|''
name|'def'
name|'_get_index_request'
op|'('
name|'self'
op|','
name|'accept_header'
op|'='
string|'"application/json"'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Helper to set routing arguments."""'
newline|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/"'
op|')'
newline|'\n'
name|'request'
op|'.'
name|'accept'
op|'='
name|'accept_header'
newline|'\n'
name|'request'
op|'.'
name|'environ'
op|'['
string|'"wsgiorg.routing_args"'
op|']'
op|'='
op|'('
name|'None'
op|','
op|'{'
nl|'\n'
string|'"action"'
op|':'
string|'"index"'
op|','
nl|'\n'
string|'"controller"'
op|':'
string|'""'
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
name|'context'
op|'='
name|'nova'
op|'.'
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'testuser'"
op|','
string|"'testproject'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'environ'
op|'['
string|'"nova.context"'
op|']'
op|'='
name|'context'
newline|'\n'
name|'return'
name|'request'
newline|'\n'
nl|'\n'
DECL|member|_populate_limits
dedent|''
name|'def'
name|'_populate_limits'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Put limit info into a request."""'
newline|'\n'
name|'_limits'
op|'='
op|'['
nl|'\n'
name|'limits'
op|'.'
name|'Limit'
op|'('
string|'"GET"'
op|','
string|'"*"'
op|','
string|'".*"'
op|','
number|'10'
op|','
number|'60'
op|')'
op|'.'
name|'display'
op|'('
op|')'
op|','
nl|'\n'
name|'limits'
op|'.'
name|'Limit'
op|'('
string|'"POST"'
op|','
string|'"*"'
op|','
string|'".*"'
op|','
number|'5'
op|','
number|'60'
op|'*'
number|'60'
op|')'
op|'.'
name|'display'
op|'('
op|')'
op|','
nl|'\n'
name|'limits'
op|'.'
name|'Limit'
op|'('
string|'"GET"'
op|','
string|'"changes-since*"'
op|','
string|'"changes-since"'
op|','
nl|'\n'
number|'5'
op|','
number|'60'
op|')'
op|'.'
name|'display'
op|'('
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'request'
op|'.'
name|'environ'
op|'['
string|'"nova.limits"'
op|']'
op|'='
name|'_limits'
newline|'\n'
name|'return'
name|'request'
newline|'\n'
nl|'\n'
DECL|member|test_empty_index_json
dedent|''
name|'def'
name|'test_empty_index_json'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test getting empty limit details in JSON."""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'_get_index_request'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'controller'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"limits"'
op|':'
op|'{'
nl|'\n'
string|'"rate"'
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|'"absolute"'
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'body'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_index_json
dedent|''
name|'def'
name|'test_index_json'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test getting limit details in JSON."""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'_get_index_request'
op|'('
op|')'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'_populate_limits'
op|'('
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'absolute_limits'
op|'='
op|'{'
nl|'\n'
string|"'ram'"
op|':'
number|'512'
op|','
nl|'\n'
string|"'instances'"
op|':'
number|'5'
op|','
nl|'\n'
string|"'cores'"
op|':'
number|'21'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'controller'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"limits"'
op|':'
op|'{'
nl|'\n'
string|'"rate"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"regex"'
op|':'
string|'".*"'
op|','
nl|'\n'
string|'"uri"'
op|':'
string|'"*"'
op|','
nl|'\n'
string|'"limit"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"verb"'
op|':'
string|'"GET"'
op|','
nl|'\n'
string|'"next-available"'
op|':'
string|'"1970-01-01T00:00:00Z"'
op|','
nl|'\n'
string|'"unit"'
op|':'
string|'"MINUTE"'
op|','
nl|'\n'
string|'"value"'
op|':'
number|'10'
op|','
nl|'\n'
string|'"remaining"'
op|':'
number|'10'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"verb"'
op|':'
string|'"POST"'
op|','
nl|'\n'
string|'"next-available"'
op|':'
string|'"1970-01-01T00:00:00Z"'
op|','
nl|'\n'
string|'"unit"'
op|':'
string|'"HOUR"'
op|','
nl|'\n'
string|'"value"'
op|':'
number|'5'
op|','
nl|'\n'
string|'"remaining"'
op|':'
number|'5'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"regex"'
op|':'
string|'"changes-since"'
op|','
nl|'\n'
string|'"uri"'
op|':'
string|'"changes-since*"'
op|','
nl|'\n'
string|'"limit"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"verb"'
op|':'
string|'"GET"'
op|','
nl|'\n'
string|'"next-available"'
op|':'
string|'"1970-01-01T00:00:00Z"'
op|','
nl|'\n'
string|'"unit"'
op|':'
string|'"MINUTE"'
op|','
nl|'\n'
string|'"value"'
op|':'
number|'5'
op|','
nl|'\n'
string|'"remaining"'
op|':'
number|'5'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
nl|'\n'
op|']'
op|','
nl|'\n'
string|'"absolute"'
op|':'
op|'{'
nl|'\n'
string|'"maxTotalRAMSize"'
op|':'
number|'512'
op|','
nl|'\n'
string|'"maxTotalInstances"'
op|':'
number|'5'
op|','
nl|'\n'
string|'"maxTotalCores"'
op|':'
number|'21'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'body'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_populate_limits_diff_regex
dedent|''
name|'def'
name|'_populate_limits_diff_regex'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Put limit info into a request."""'
newline|'\n'
name|'_limits'
op|'='
op|'['
nl|'\n'
name|'limits'
op|'.'
name|'Limit'
op|'('
string|'"GET"'
op|','
string|'"*"'
op|','
string|'".*"'
op|','
number|'10'
op|','
number|'60'
op|')'
op|'.'
name|'display'
op|'('
op|')'
op|','
nl|'\n'
name|'limits'
op|'.'
name|'Limit'
op|'('
string|'"GET"'
op|','
string|'"*"'
op|','
string|'"*.*"'
op|','
number|'10'
op|','
number|'60'
op|')'
op|'.'
name|'display'
op|'('
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'request'
op|'.'
name|'environ'
op|'['
string|'"nova.limits"'
op|']'
op|'='
name|'_limits'
newline|'\n'
name|'return'
name|'request'
newline|'\n'
nl|'\n'
DECL|member|test_index_diff_regex
dedent|''
name|'def'
name|'test_index_diff_regex'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test getting limit details in JSON."""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'_get_index_request'
op|'('
op|')'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'_populate_limits_diff_regex'
op|'('
name|'request'
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'controller'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"limits"'
op|':'
op|'{'
nl|'\n'
string|'"rate"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"regex"'
op|':'
string|'".*"'
op|','
nl|'\n'
string|'"uri"'
op|':'
string|'"*"'
op|','
nl|'\n'
string|'"limit"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"verb"'
op|':'
string|'"GET"'
op|','
nl|'\n'
string|'"next-available"'
op|':'
string|'"1970-01-01T00:00:00Z"'
op|','
nl|'\n'
string|'"unit"'
op|':'
string|'"MINUTE"'
op|','
nl|'\n'
string|'"value"'
op|':'
number|'10'
op|','
nl|'\n'
string|'"remaining"'
op|':'
number|'10'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"regex"'
op|':'
string|'"*.*"'
op|','
nl|'\n'
string|'"uri"'
op|':'
string|'"*"'
op|','
nl|'\n'
string|'"limit"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"verb"'
op|':'
string|'"GET"'
op|','
nl|'\n'
string|'"next-available"'
op|':'
string|'"1970-01-01T00:00:00Z"'
op|','
nl|'\n'
string|'"unit"'
op|':'
string|'"MINUTE"'
op|','
nl|'\n'
string|'"value"'
op|':'
number|'10'
op|','
nl|'\n'
string|'"remaining"'
op|':'
number|'10'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
nl|'\n'
op|']'
op|','
nl|'\n'
string|'"absolute"'
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'body'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_index_absolute_limits_json
dedent|''
name|'def'
name|'_test_index_absolute_limits_json'
op|'('
name|'self'
op|','
name|'expected'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'request'
op|'='
name|'self'
op|'.'
name|'_get_index_request'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'controller'
op|')'
newline|'\n'
name|'body'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'body'
op|'['
string|"'limits'"
op|']'
op|'['
string|"'absolute'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_index_ignores_extra_absolute_limits_json
dedent|''
name|'def'
name|'test_index_ignores_extra_absolute_limits_json'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'absolute_limits'
op|'='
op|'{'
string|"'unknown_limit'"
op|':'
number|'9001'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_test_index_absolute_limits_json'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_index_absolute_ram_json
dedent|''
name|'def'
name|'test_index_absolute_ram_json'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'absolute_limits'
op|'='
op|'{'
string|"'ram'"
op|':'
number|'1024'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_test_index_absolute_limits_json'
op|'('
op|'{'
string|"'maxTotalRAMSize'"
op|':'
number|'1024'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_index_absolute_cores_json
dedent|''
name|'def'
name|'test_index_absolute_cores_json'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'absolute_limits'
op|'='
op|'{'
string|"'cores'"
op|':'
number|'17'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_test_index_absolute_limits_json'
op|'('
op|'{'
string|"'maxTotalCores'"
op|':'
number|'17'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_index_absolute_instances_json
dedent|''
name|'def'
name|'test_index_absolute_instances_json'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'absolute_limits'
op|'='
op|'{'
string|"'instances'"
op|':'
number|'19'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_test_index_absolute_limits_json'
op|'('
op|'{'
string|"'maxTotalInstances'"
op|':'
number|'19'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_index_absolute_metadata_json
dedent|''
name|'def'
name|'test_index_absolute_metadata_json'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# NOTE: both server metadata and image metadata are overloaded'
nl|'\n'
comment|'# into metadata_items'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'absolute_limits'
op|'='
op|'{'
string|"'metadata_items'"
op|':'
number|'23'
op|'}'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'maxServerMeta'"
op|':'
number|'23'
op|','
nl|'\n'
string|"'maxImageMeta'"
op|':'
number|'23'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_test_index_absolute_limits_json'
op|'('
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_index_absolute_injected_files
dedent|''
name|'def'
name|'test_index_absolute_injected_files'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'absolute_limits'
op|'='
op|'{'
nl|'\n'
string|"'injected_files'"
op|':'
number|'17'
op|','
nl|'\n'
string|"'injected_file_content_bytes'"
op|':'
number|'86753'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'maxPersonality'"
op|':'
number|'17'
op|','
nl|'\n'
string|"'maxPersonalitySize'"
op|':'
number|'86753'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_test_index_absolute_limits_json'
op|'('
name|'expected'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestLimiter
dedent|''
dedent|''
name|'class'
name|'TestLimiter'
op|'('
name|'limits'
op|'.'
name|'Limiter'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LimitMiddlewareTest
dedent|''
name|'class'
name|'LimitMiddlewareTest'
op|'('
name|'BaseLimitTestSuite'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Tests for the `limits.RateLimitingMiddleware` class.\n    """'
newline|'\n'
nl|'\n'
op|'@'
name|'webob'
op|'.'
name|'dec'
op|'.'
name|'wsgify'
newline|'\n'
DECL|member|_empty_app
name|'def'
name|'_empty_app'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Do-nothing WSGI app."""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Prepare middleware for use through fake WSGI app."""'
newline|'\n'
name|'BaseLimitTestSuite'
op|'.'
name|'setUp'
op|'('
name|'self'
op|')'
newline|'\n'
name|'_limits'
op|'='
string|"'(GET, *, .*, 1, MINUTE)'"
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'='
name|'limits'
op|'.'
name|'RateLimitingMiddleware'
op|'('
name|'self'
op|'.'
name|'_empty_app'
op|','
name|'_limits'
op|','
nl|'\n'
string|'"%s.TestLimiter"'
op|'%'
nl|'\n'
name|'self'
op|'.'
name|'__class__'
op|'.'
name|'__module__'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_limit_class
dedent|''
name|'def'
name|'test_limit_class'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test that middleware selected correct limiter class."""'
newline|'\n'
name|'assert'
name|'isinstance'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'_limiter'
op|','
name|'TestLimiter'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_good_request
dedent|''
name|'def'
name|'test_good_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test successful GET request through middleware."""'
newline|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/"'
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_limited_request_json
dedent|''
name|'def'
name|'test_limited_request_json'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test a rate-limited (413) GET request through middleware."""'
newline|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/"'
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/"'
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'.'
name|'status_int'
op|','
number|'413'
op|')'
newline|'\n'
nl|'\n'
name|'body'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'expected'
op|'='
string|'"Only 1 GET request(s) can be made to * every minute."'
newline|'\n'
name|'value'
op|'='
name|'body'
op|'['
string|'"overLimitFault"'
op|']'
op|'['
string|'"details"'
op|']'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'value'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_limited_request_xml
dedent|''
name|'def'
name|'test_limited_request_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test a rate-limited (413) response as XML"""'
newline|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/"'
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/"'
op|')'
newline|'\n'
name|'request'
op|'.'
name|'accept'
op|'='
string|'"application/xml"'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'.'
name|'status_int'
op|','
number|'413'
op|')'
newline|'\n'
nl|'\n'
name|'root'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
name|'response'
op|'.'
name|'body'
op|')'
op|'.'
name|'childNodes'
op|'['
number|'0'
op|']'
newline|'\n'
name|'expected'
op|'='
string|'"Only 1 GET request(s) can be made to * every minute."'
newline|'\n'
nl|'\n'
name|'details'
op|'='
name|'root'
op|'.'
name|'getElementsByTagName'
op|'('
string|'"details"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'details'
op|'.'
name|'length'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'value'
op|'='
name|'details'
op|'.'
name|'item'
op|'('
number|'0'
op|')'
op|'.'
name|'firstChild'
op|'.'
name|'data'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'value'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LimitTest
dedent|''
dedent|''
name|'class'
name|'LimitTest'
op|'('
name|'BaseLimitTestSuite'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Tests for the `limits.Limit` class.\n    """'
newline|'\n'
nl|'\n'
DECL|member|test_GET_no_delay
name|'def'
name|'test_GET_no_delay'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test a limit handles 1 GET per second."""'
newline|'\n'
name|'limit'
op|'='
name|'limits'
op|'.'
name|'Limit'
op|'('
string|'"GET"'
op|','
string|'"*"'
op|','
string|'".*"'
op|','
number|'1'
op|','
number|'1'
op|')'
newline|'\n'
name|'delay'
op|'='
name|'limit'
op|'('
string|'"GET"'
op|','
string|'"/anything"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'None'
op|','
name|'delay'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'limit'
op|'.'
name|'next_request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'limit'
op|'.'
name|'last_request'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_GET_delay
dedent|''
name|'def'
name|'test_GET_delay'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test two calls to 1 GET per second limit."""'
newline|'\n'
name|'limit'
op|'='
name|'limits'
op|'.'
name|'Limit'
op|'('
string|'"GET"'
op|','
string|'"*"'
op|','
string|'".*"'
op|','
number|'1'
op|','
number|'1'
op|')'
newline|'\n'
name|'delay'
op|'='
name|'limit'
op|'('
string|'"GET"'
op|','
string|'"/anything"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'None'
op|','
name|'delay'
op|')'
newline|'\n'
nl|'\n'
name|'delay'
op|'='
name|'limit'
op|'('
string|'"GET"'
op|','
string|'"/anything"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'delay'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'limit'
op|'.'
name|'next_request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'limit'
op|'.'
name|'last_request'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'time'
op|'+='
number|'4'
newline|'\n'
nl|'\n'
name|'delay'
op|'='
name|'limit'
op|'('
string|'"GET"'
op|','
string|'"/anything"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'None'
op|','
name|'delay'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4'
op|','
name|'limit'
op|'.'
name|'next_request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4'
op|','
name|'limit'
op|'.'
name|'last_request'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ParseLimitsTest
dedent|''
dedent|''
name|'class'
name|'ParseLimitsTest'
op|'('
name|'BaseLimitTestSuite'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Tests for the default limits parser in the in-memory\n    `limits.Limiter` class.\n    """'
newline|'\n'
nl|'\n'
DECL|member|test_invalid
name|'def'
name|'test_invalid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test that parse_limits() handles invalid input correctly."""'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'limits'
op|'.'
name|'Limiter'
op|'.'
name|'parse_limits'
op|','
nl|'\n'
string|"';;;;;'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bad_rule
dedent|''
name|'def'
name|'test_bad_rule'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test that parse_limits() handles bad rules correctly."""'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'limits'
op|'.'
name|'Limiter'
op|'.'
name|'parse_limits'
op|','
nl|'\n'
string|"'GET, *, .*, 20, minute'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_missing_arg
dedent|''
name|'def'
name|'test_missing_arg'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test that parse_limits() handles missing args correctly."""'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'limits'
op|'.'
name|'Limiter'
op|'.'
name|'parse_limits'
op|','
nl|'\n'
string|"'(GET, *, .*, 20)'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bad_value
dedent|''
name|'def'
name|'test_bad_value'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test that parse_limits() handles bad values correctly."""'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'limits'
op|'.'
name|'Limiter'
op|'.'
name|'parse_limits'
op|','
nl|'\n'
string|"'(GET, *, .*, foo, minute)'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bad_unit
dedent|''
name|'def'
name|'test_bad_unit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test that parse_limits() handles bad units correctly."""'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'limits'
op|'.'
name|'Limiter'
op|'.'
name|'parse_limits'
op|','
nl|'\n'
string|"'(GET, *, .*, 20, lightyears)'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_multiple_rules
dedent|''
name|'def'
name|'test_multiple_rules'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test that parse_limits() handles multiple rules correctly."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'l'
op|'='
name|'limits'
op|'.'
name|'Limiter'
op|'.'
name|'parse_limits'
op|'('
string|"'(get, *, .*, 20, minute);'"
nl|'\n'
string|"'(PUT, /foo*, /foo.*, 10, hour);'"
nl|'\n'
string|"'(POST, /bar*, /bar.*, 5, second);'"
nl|'\n'
string|"'(Say, /derp*, /derp.*, 1, day)'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'assert'
name|'False'
op|','
name|'str'
op|'('
name|'e'
op|')'
newline|'\n'
nl|'\n'
comment|'# Make sure the number of returned limits are correct'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'l'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
nl|'\n'
comment|'# Check all the verbs...'
nl|'\n'
name|'expected'
op|'='
op|'['
string|"'GET'"
op|','
string|"'PUT'"
op|','
string|"'POST'"
op|','
string|"'SAY'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'t'
op|'.'
name|'verb'
name|'for'
name|'t'
name|'in'
name|'l'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
comment|'# ...the URIs...'
nl|'\n'
name|'expected'
op|'='
op|'['
string|"'*'"
op|','
string|"'/foo*'"
op|','
string|"'/bar*'"
op|','
string|"'/derp*'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'t'
op|'.'
name|'uri'
name|'for'
name|'t'
name|'in'
name|'l'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
comment|'# ...the regexes...'
nl|'\n'
name|'expected'
op|'='
op|'['
string|"'.*'"
op|','
string|"'/foo.*'"
op|','
string|"'/bar.*'"
op|','
string|"'/derp.*'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'t'
op|'.'
name|'regex'
name|'for'
name|'t'
name|'in'
name|'l'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
comment|'# ...the values...'
nl|'\n'
name|'expected'
op|'='
op|'['
number|'20'
op|','
number|'10'
op|','
number|'5'
op|','
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'t'
op|'.'
name|'value'
name|'for'
name|'t'
name|'in'
name|'l'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
comment|'# ...and the units...'
nl|'\n'
name|'expected'
op|'='
op|'['
name|'limits'
op|'.'
name|'PER_MINUTE'
op|','
name|'limits'
op|'.'
name|'PER_HOUR'
op|','
nl|'\n'
name|'limits'
op|'.'
name|'PER_SECOND'
op|','
name|'limits'
op|'.'
name|'PER_DAY'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'t'
op|'.'
name|'unit'
name|'for'
name|'t'
name|'in'
name|'l'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LimiterTest
dedent|''
dedent|''
name|'class'
name|'LimiterTest'
op|'('
name|'BaseLimitTestSuite'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Tests for the in-memory `limits.Limiter` class.\n    """'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Run before each test."""'
newline|'\n'
name|'BaseLimitTestSuite'
op|'.'
name|'setUp'
op|'('
name|'self'
op|')'
newline|'\n'
name|'userlimits'
op|'='
op|'{'
string|"'user:user3'"
op|':'
string|"''"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'limiter'
op|'='
name|'limits'
op|'.'
name|'Limiter'
op|'('
name|'TEST_LIMITS'
op|','
op|'**'
name|'userlimits'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check
dedent|''
name|'def'
name|'_check'
op|'('
name|'self'
op|','
name|'num'
op|','
name|'verb'
op|','
name|'url'
op|','
name|'username'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Check and yield results from checks."""'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'xrange'
op|'('
name|'num'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'yield'
name|'self'
op|'.'
name|'limiter'
op|'.'
name|'check_for_delay'
op|'('
name|'verb'
op|','
name|'url'
op|','
name|'username'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_check_sum
dedent|''
dedent|''
name|'def'
name|'_check_sum'
op|'('
name|'self'
op|','
name|'num'
op|','
name|'verb'
op|','
name|'url'
op|','
name|'username'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Check and sum results from checks."""'
newline|'\n'
name|'results'
op|'='
name|'self'
op|'.'
name|'_check'
op|'('
name|'num'
op|','
name|'verb'
op|','
name|'url'
op|','
name|'username'
op|')'
newline|'\n'
name|'return'
name|'sum'
op|'('
name|'item'
name|'for'
name|'item'
name|'in'
name|'results'
name|'if'
name|'item'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_no_delay_GET
dedent|''
name|'def'
name|'test_no_delay_GET'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Simple test to ensure no delay on a single call for a limit verb we\n        didn"t set.\n        """'
newline|'\n'
name|'delay'
op|'='
name|'self'
op|'.'
name|'limiter'
op|'.'
name|'check_for_delay'
op|'('
string|'"GET"'
op|','
string|'"/anything"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'delay'
op|','
op|'('
name|'None'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_no_delay_PUT
dedent|''
name|'def'
name|'test_no_delay_PUT'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Simple test to ensure no delay on a single call for a known limit.\n        """'
newline|'\n'
name|'delay'
op|'='
name|'self'
op|'.'
name|'limiter'
op|'.'
name|'check_for_delay'
op|'('
string|'"PUT"'
op|','
string|'"/anything"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'delay'
op|','
op|'('
name|'None'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delay_PUT
dedent|''
name|'def'
name|'test_delay_PUT'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Ensure the 11th PUT will result in a delay of 6.0 seconds until\n        the next request will be granced.\n        """'
newline|'\n'
name|'expected'
op|'='
op|'['
name|'None'
op|']'
op|'*'
number|'10'
op|'+'
op|'['
number|'6.0'
op|']'
newline|'\n'
name|'results'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'_check'
op|'('
number|'11'
op|','
string|'"PUT"'
op|','
string|'"/anything"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'results'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delay_POST
dedent|''
name|'def'
name|'test_delay_POST'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Ensure the 8th POST will result in a delay of 6.0 seconds until\n        the next request will be granced.\n        """'
newline|'\n'
name|'expected'
op|'='
op|'['
name|'None'
op|']'
op|'*'
number|'7'
newline|'\n'
name|'results'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'_check'
op|'('
number|'7'
op|','
string|'"POST"'
op|','
string|'"/anything"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'results'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
number|'60.0'
op|'/'
number|'7.0'
newline|'\n'
name|'results'
op|'='
name|'self'
op|'.'
name|'_check_sum'
op|'('
number|'1'
op|','
string|'"POST"'
op|','
string|'"/anything"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnlessAlmostEqual'
op|'('
name|'expected'
op|','
name|'results'
op|','
number|'8'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delay_GET
dedent|''
name|'def'
name|'test_delay_GET'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Ensure the 11th GET will result in NO delay.\n        """'
newline|'\n'
name|'expected'
op|'='
op|'['
name|'None'
op|']'
op|'*'
number|'11'
newline|'\n'
name|'results'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'_check'
op|'('
number|'11'
op|','
string|'"GET"'
op|','
string|'"/anything"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'results'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delay_PUT_servers
dedent|''
name|'def'
name|'test_delay_PUT_servers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Ensure PUT on /servers limits at 5 requests, and PUT elsewhere is still\n        OK after 5 requests...but then after 11 total requests, PUT limiting\n        kicks in.\n        """'
newline|'\n'
comment|'# First 6 requests on PUT /servers'
nl|'\n'
name|'expected'
op|'='
op|'['
name|'None'
op|']'
op|'*'
number|'5'
op|'+'
op|'['
number|'12.0'
op|']'
newline|'\n'
name|'results'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'_check'
op|'('
number|'6'
op|','
string|'"PUT"'
op|','
string|'"/servers"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'results'
op|')'
newline|'\n'
nl|'\n'
comment|'# Next 5 request on PUT /anything'
nl|'\n'
name|'expected'
op|'='
op|'['
name|'None'
op|']'
op|'*'
number|'4'
op|'+'
op|'['
number|'6.0'
op|']'
newline|'\n'
name|'results'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'_check'
op|'('
number|'5'
op|','
string|'"PUT"'
op|','
string|'"/anything"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'results'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delay_PUT_wait
dedent|''
name|'def'
name|'test_delay_PUT_wait'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Ensure after hitting the limit and then waiting for the correct\n        amount of time, the limit will be lifted.\n        """'
newline|'\n'
name|'expected'
op|'='
op|'['
name|'None'
op|']'
op|'*'
number|'10'
op|'+'
op|'['
number|'6.0'
op|']'
newline|'\n'
name|'results'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'_check'
op|'('
number|'11'
op|','
string|'"PUT"'
op|','
string|'"/anything"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'results'
op|')'
newline|'\n'
nl|'\n'
comment|'# Advance time'
nl|'\n'
name|'self'
op|'.'
name|'time'
op|'+='
number|'6.0'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'['
name|'None'
op|','
number|'6.0'
op|']'
newline|'\n'
name|'results'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'_check'
op|'('
number|'2'
op|','
string|'"PUT"'
op|','
string|'"/anything"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'results'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_multiple_delays
dedent|''
name|'def'
name|'test_multiple_delays'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Ensure multiple requests still get a delay.\n        """'
newline|'\n'
name|'expected'
op|'='
op|'['
name|'None'
op|']'
op|'*'
number|'10'
op|'+'
op|'['
number|'6.0'
op|']'
op|'*'
number|'10'
newline|'\n'
name|'results'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'_check'
op|'('
number|'20'
op|','
string|'"PUT"'
op|','
string|'"/anything"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'results'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'time'
op|'+='
number|'1.0'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'['
number|'5.0'
op|']'
op|'*'
number|'10'
newline|'\n'
name|'results'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'_check'
op|'('
number|'10'
op|','
string|'"PUT"'
op|','
string|'"/anything"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'results'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_user_limit
dedent|''
name|'def'
name|'test_user_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test user-specific limits.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'limiter'
op|'.'
name|'levels'
op|'['
string|"'user3'"
op|']'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_multiple_users
dedent|''
name|'def'
name|'test_multiple_users'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Tests involving multiple users.\n        """'
newline|'\n'
comment|'# User1'
nl|'\n'
name|'expected'
op|'='
op|'['
name|'None'
op|']'
op|'*'
number|'10'
op|'+'
op|'['
number|'6.0'
op|']'
op|'*'
number|'10'
newline|'\n'
name|'results'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'_check'
op|'('
number|'20'
op|','
string|'"PUT"'
op|','
string|'"/anything"'
op|','
string|'"user1"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'results'
op|')'
newline|'\n'
nl|'\n'
comment|'# User2'
nl|'\n'
name|'expected'
op|'='
op|'['
name|'None'
op|']'
op|'*'
number|'10'
op|'+'
op|'['
number|'6.0'
op|']'
op|'*'
number|'5'
newline|'\n'
name|'results'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'_check'
op|'('
number|'15'
op|','
string|'"PUT"'
op|','
string|'"/anything"'
op|','
string|'"user2"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'results'
op|')'
newline|'\n'
nl|'\n'
comment|'# User3'
nl|'\n'
name|'expected'
op|'='
op|'['
name|'None'
op|']'
op|'*'
number|'20'
newline|'\n'
name|'results'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'_check'
op|'('
number|'20'
op|','
string|'"PUT"'
op|','
string|'"/anything"'
op|','
string|'"user3"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'results'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'time'
op|'+='
number|'1.0'
newline|'\n'
nl|'\n'
comment|'# User1 again'
nl|'\n'
name|'expected'
op|'='
op|'['
number|'5.0'
op|']'
op|'*'
number|'10'
newline|'\n'
name|'results'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'_check'
op|'('
number|'10'
op|','
string|'"PUT"'
op|','
string|'"/anything"'
op|','
string|'"user1"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'results'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'time'
op|'+='
number|'1.0'
newline|'\n'
nl|'\n'
comment|'# User1 again'
nl|'\n'
name|'expected'
op|'='
op|'['
number|'4.0'
op|']'
op|'*'
number|'5'
newline|'\n'
name|'results'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'_check'
op|'('
number|'5'
op|','
string|'"PUT"'
op|','
string|'"/anything"'
op|','
string|'"user2"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'results'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|WsgiLimiterTest
dedent|''
dedent|''
name|'class'
name|'WsgiLimiterTest'
op|'('
name|'BaseLimitTestSuite'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Tests for `limits.WsgiLimiter` class.\n    """'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Run before each test."""'
newline|'\n'
name|'BaseLimitTestSuite'
op|'.'
name|'setUp'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'='
name|'limits'
op|'.'
name|'WsgiLimiter'
op|'('
name|'TEST_LIMITS'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_request_data
dedent|''
name|'def'
name|'_request_data'
op|'('
name|'self'
op|','
name|'verb'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get data decribing a limit request verb/path."""'
newline|'\n'
name|'return'
name|'json'
op|'.'
name|'dumps'
op|'('
op|'{'
string|'"verb"'
op|':'
name|'verb'
op|','
string|'"path"'
op|':'
name|'path'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_request
dedent|''
name|'def'
name|'_request'
op|'('
name|'self'
op|','
name|'verb'
op|','
name|'url'
op|','
name|'username'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure that POSTing to the given url causes the given username\n        to perform the given action.  Make the internal rate limiter return\n        delay and make sure that the WSGI app returns the correct response.\n        """'
newline|'\n'
name|'if'
name|'username'
op|':'
newline|'\n'
indent|'            '
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/%s"'
op|'%'
name|'username'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'request'
op|'.'
name|'method'
op|'='
string|'"POST"'
newline|'\n'
name|'request'
op|'.'
name|'body'
op|'='
name|'self'
op|'.'
name|'_request_data'
op|'('
name|'verb'
op|','
name|'url'
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
nl|'\n'
name|'if'
string|'"X-Wait-Seconds"'
name|'in'
name|'response'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'.'
name|'status_int'
op|','
number|'403'
op|')'
newline|'\n'
name|'return'
name|'response'
op|'.'
name|'headers'
op|'['
string|'"X-Wait-Seconds"'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'.'
name|'status_int'
op|','
number|'204'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_invalid_methods
dedent|''
name|'def'
name|'test_invalid_methods'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Only POSTs should work."""'
newline|'\n'
name|'requests'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'method'
name|'in'
op|'['
string|'"GET"'
op|','
string|'"PUT"'
op|','
string|'"DELETE"'
op|','
string|'"HEAD"'
op|','
string|'"OPTIONS"'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/"'
op|','
name|'method'
op|'='
name|'method'
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'.'
name|'status_int'
op|','
number|'405'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_good_url
dedent|''
dedent|''
name|'def'
name|'test_good_url'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'delay'
op|'='
name|'self'
op|'.'
name|'_request'
op|'('
string|'"GET"'
op|','
string|'"/something"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'delay'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_escaping
dedent|''
name|'def'
name|'test_escaping'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'delay'
op|'='
name|'self'
op|'.'
name|'_request'
op|'('
string|'"GET"'
op|','
string|'"/something/jump%20up"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'delay'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_response_to_delays
dedent|''
name|'def'
name|'test_response_to_delays'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'delay'
op|'='
name|'self'
op|'.'
name|'_request'
op|'('
string|'"GET"'
op|','
string|'"/delayed"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'delay'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'delay'
op|'='
name|'self'
op|'.'
name|'_request'
op|'('
string|'"GET"'
op|','
string|'"/delayed"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'delay'
op|','
string|"'60.00'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_response_to_delays_usernames
dedent|''
name|'def'
name|'test_response_to_delays_usernames'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'delay'
op|'='
name|'self'
op|'.'
name|'_request'
op|'('
string|'"GET"'
op|','
string|'"/delayed"'
op|','
string|'"user1"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'delay'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'delay'
op|'='
name|'self'
op|'.'
name|'_request'
op|'('
string|'"GET"'
op|','
string|'"/delayed"'
op|','
string|'"user2"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'delay'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'delay'
op|'='
name|'self'
op|'.'
name|'_request'
op|'('
string|'"GET"'
op|','
string|'"/delayed"'
op|','
string|'"user1"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'delay'
op|','
string|"'60.00'"
op|')'
newline|'\n'
nl|'\n'
name|'delay'
op|'='
name|'self'
op|'.'
name|'_request'
op|'('
string|'"GET"'
op|','
string|'"/delayed"'
op|','
string|'"user2"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'delay'
op|','
string|"'60.00'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeHttplibSocket
dedent|''
dedent|''
name|'class'
name|'FakeHttplibSocket'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Fake `httplib.HTTPResponse` replacement.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'response_string'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Initialize new `FakeHttplibSocket`."""'
newline|'\n'
name|'self'
op|'.'
name|'_buffer'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
name|'response_string'
op|')'
newline|'\n'
nl|'\n'
DECL|member|makefile
dedent|''
name|'def'
name|'makefile'
op|'('
name|'self'
op|','
name|'_mode'
op|','
name|'_other'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns the socket\'s internal buffer."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_buffer'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeHttplibConnection
dedent|''
dedent|''
name|'class'
name|'FakeHttplibConnection'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Fake `httplib.HTTPConnection`.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'app'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Initialize `FakeHttplibConnection`.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'='
name|'app'
newline|'\n'
name|'self'
op|'.'
name|'host'
op|'='
name|'host'
newline|'\n'
nl|'\n'
DECL|member|request
dedent|''
name|'def'
name|'request'
op|'('
name|'self'
op|','
name|'method'
op|','
name|'path'
op|','
name|'body'
op|'='
string|'""'
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Requests made via this connection actually get translated and routed\n        into our WSGI app, we then wait for the response and turn it back into\n        an `httplib.HTTPResponse`.\n        """'
newline|'\n'
name|'if'
name|'not'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
name|'path'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
name|'method'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'='
name|'headers'
newline|'\n'
name|'req'
op|'.'
name|'host'
op|'='
name|'self'
op|'.'
name|'host'
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'body'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'str'
op|'('
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
string|'"HTTP/1.0 %s"'
op|'%'
name|'resp'
newline|'\n'
name|'sock'
op|'='
name|'FakeHttplibSocket'
op|'('
name|'resp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'http_response'
op|'='
name|'httplib'
op|'.'
name|'HTTPResponse'
op|'('
name|'sock'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'http_response'
op|'.'
name|'begin'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|getresponse
dedent|''
name|'def'
name|'getresponse'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return our generated response from the request."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'http_response'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|wire_HTTPConnection_to_WSGI
dedent|''
dedent|''
name|'def'
name|'wire_HTTPConnection_to_WSGI'
op|'('
name|'host'
op|','
name|'app'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Monkeypatches HTTPConnection so that if you try to connect to host, you\n    are instead routed straight to the given WSGI app.\n\n    After calling this method, when any code calls\n\n    httplib.HTTPConnection(host)\n\n    the connection object will be a fake.  Its requests will be sent directly\n    to the given WSGI app rather than through a socket.\n\n    Code connecting to hosts other than host will not be affected.\n\n    This method may be called multiple times to map different hosts to\n    different apps.\n    """'
newline|'\n'
DECL|class|HTTPConnectionDecorator
name|'class'
name|'HTTPConnectionDecorator'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Wraps the real HTTPConnection class so that when you instantiate\n        the class you might instead get a fake instance."""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'wrapped'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'wrapped'
op|'='
name|'wrapped'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'connection_host'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'connection_host'
op|'=='
name|'host'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'FakeHttplibConnection'
op|'('
name|'app'
op|','
name|'host'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'wrapped'
op|'('
name|'connection_host'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'httplib'
op|'.'
name|'HTTPConnection'
op|'='
name|'HTTPConnectionDecorator'
op|'('
name|'httplib'
op|'.'
name|'HTTPConnection'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|WsgiLimiterProxyTest
dedent|''
name|'class'
name|'WsgiLimiterProxyTest'
op|'('
name|'BaseLimitTestSuite'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Tests for the `limits.WsgiLimiterProxy` class.\n    """'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Do some nifty HTTP/WSGI magic which allows for WSGI to be called\n        directly by something like the `httplib` library.\n        """'
newline|'\n'
name|'BaseLimitTestSuite'
op|'.'
name|'setUp'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'='
name|'limits'
op|'.'
name|'WsgiLimiter'
op|'('
name|'TEST_LIMITS'
op|')'
newline|'\n'
name|'wire_HTTPConnection_to_WSGI'
op|'('
string|'"169.254.0.1:80"'
op|','
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'='
name|'limits'
op|'.'
name|'WsgiLimiterProxy'
op|'('
string|'"169.254.0.1:80"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_200
dedent|''
name|'def'
name|'test_200'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Successful request test."""'
newline|'\n'
name|'delay'
op|'='
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'check_for_delay'
op|'('
string|'"GET"'
op|','
string|'"/anything"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'delay'
op|','
op|'('
name|'None'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_403
dedent|''
name|'def'
name|'test_403'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Forbidden request test."""'
newline|'\n'
name|'delay'
op|'='
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'check_for_delay'
op|'('
string|'"GET"'
op|','
string|'"/delayed"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'delay'
op|','
op|'('
name|'None'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'delay'
op|','
name|'error'
op|'='
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'check_for_delay'
op|'('
string|'"GET"'
op|','
string|'"/delayed"'
op|')'
newline|'\n'
name|'error'
op|'='
name|'error'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'('
string|'"60.00"'
op|','
string|'"403 Forbidden\\n\\nOnly 1 GET request(s) can be "'
string|'"made to /delayed every minute."'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'('
name|'delay'
op|','
name|'error'
op|')'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LimitsViewBuilderTest
dedent|''
dedent|''
name|'class'
name|'LimitsViewBuilderTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'view_builder'
op|'='
name|'views'
op|'.'
name|'limits'
op|'.'
name|'ViewBuilder'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'rate_limits'
op|'='
op|'['
op|'{'
string|'"URI"'
op|':'
string|'"*"'
op|','
nl|'\n'
string|'"regex"'
op|':'
string|'".*"'
op|','
nl|'\n'
string|'"value"'
op|':'
number|'10'
op|','
nl|'\n'
string|'"verb"'
op|':'
string|'"POST"'
op|','
nl|'\n'
string|'"remaining"'
op|':'
number|'2'
op|','
nl|'\n'
string|'"unit"'
op|':'
string|'"MINUTE"'
op|','
nl|'\n'
string|'"resetTime"'
op|':'
number|'1311272226'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"URI"'
op|':'
string|'"*/servers"'
op|','
nl|'\n'
string|'"regex"'
op|':'
string|'"^/servers"'
op|','
nl|'\n'
string|'"value"'
op|':'
number|'50'
op|','
nl|'\n'
string|'"verb"'
op|':'
string|'"POST"'
op|','
nl|'\n'
string|'"remaining"'
op|':'
number|'10'
op|','
nl|'\n'
string|'"unit"'
op|':'
string|'"DAY"'
op|','
nl|'\n'
string|'"resetTime"'
op|':'
number|'1311272226'
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'absolute_limits'
op|'='
op|'{'
string|'"metadata_items"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"injected_files"'
op|':'
number|'5'
op|','
nl|'\n'
string|'"injected_file_content_bytes"'
op|':'
number|'5'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_build_limits
dedent|''
name|'def'
name|'test_build_limits'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_limits'
op|'='
op|'{'
string|'"limits"'
op|':'
op|'{'
nl|'\n'
string|'"rate"'
op|':'
op|'['
op|'{'
nl|'\n'
string|'"uri"'
op|':'
string|'"*"'
op|','
nl|'\n'
string|'"regex"'
op|':'
string|'".*"'
op|','
nl|'\n'
string|'"limit"'
op|':'
op|'['
op|'{'
string|'"value"'
op|':'
number|'10'
op|','
nl|'\n'
string|'"verb"'
op|':'
string|'"POST"'
op|','
nl|'\n'
string|'"remaining"'
op|':'
number|'2'
op|','
nl|'\n'
string|'"unit"'
op|':'
string|'"MINUTE"'
op|','
nl|'\n'
string|'"next-available"'
op|':'
string|'"2011-07-21T18:17:06Z"'
op|'}'
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"uri"'
op|':'
string|'"*/servers"'
op|','
nl|'\n'
string|'"regex"'
op|':'
string|'"^/servers"'
op|','
nl|'\n'
string|'"limit"'
op|':'
op|'['
op|'{'
string|'"value"'
op|':'
number|'50'
op|','
nl|'\n'
string|'"verb"'
op|':'
string|'"POST"'
op|','
nl|'\n'
string|'"remaining"'
op|':'
number|'10'
op|','
nl|'\n'
string|'"unit"'
op|':'
string|'"DAY"'
op|','
nl|'\n'
string|'"next-available"'
op|':'
string|'"2011-07-21T18:17:06Z"'
op|'}'
op|']'
op|'}'
op|']'
op|','
nl|'\n'
string|'"absolute"'
op|':'
op|'{'
string|'"maxServerMeta"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"maxImageMeta"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"maxPersonality"'
op|':'
number|'5'
op|','
nl|'\n'
string|'"maxPersonalitySize"'
op|':'
number|'5'
op|'}'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'build'
op|'('
name|'self'
op|'.'
name|'rate_limits'
op|','
nl|'\n'
name|'self'
op|'.'
name|'absolute_limits'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'output'
op|','
name|'expected_limits'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_limits_empty_limits
dedent|''
name|'def'
name|'test_build_limits_empty_limits'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_limits'
op|'='
op|'{'
string|'"limits"'
op|':'
op|'{'
string|'"rate"'
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|'"absolute"'
op|':'
op|'{'
op|'}'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'abs_limits'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'rate_limits'
op|'='
op|'['
op|']'
newline|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'build'
op|'('
name|'rate_limits'
op|','
name|'abs_limits'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'output'
op|','
name|'expected_limits'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LimitsXMLSerializationTest
dedent|''
dedent|''
name|'class'
name|'LimitsXMLSerializationTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'maxDiff'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_xml_declaration
dedent|''
name|'def'
name|'test_xml_declaration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'limits'
op|'.'
name|'LimitsXMLSerializer'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'fixture'
op|'='
op|'{'
string|'"limits"'
op|':'
op|'{'
nl|'\n'
string|'"rate"'
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|'"absolute"'
op|':'
op|'{'
op|'}'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'fixture'
op|','
string|"'index'"
op|')'
newline|'\n'
name|'print'
name|'output'
newline|'\n'
name|'has_dec'
op|'='
name|'output'
op|'.'
name|'startswith'
op|'('
string|'"<?xml version=\'1.0\' encoding=\'UTF-8\'?>"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'has_dec'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_index
dedent|''
name|'def'
name|'test_index'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'limits'
op|'.'
name|'LimitsXMLSerializer'
op|'('
op|')'
newline|'\n'
name|'fixture'
op|'='
op|'{'
nl|'\n'
string|'"limits"'
op|':'
op|'{'
nl|'\n'
string|'"rate"'
op|':'
op|'['
op|'{'
nl|'\n'
string|'"uri"'
op|':'
string|'"*"'
op|','
nl|'\n'
string|'"regex"'
op|':'
string|'".*"'
op|','
nl|'\n'
string|'"limit"'
op|':'
op|'['
op|'{'
nl|'\n'
string|'"value"'
op|':'
number|'10'
op|','
nl|'\n'
string|'"verb"'
op|':'
string|'"POST"'
op|','
nl|'\n'
string|'"remaining"'
op|':'
number|'2'
op|','
nl|'\n'
string|'"unit"'
op|':'
string|'"MINUTE"'
op|','
nl|'\n'
string|'"next-available"'
op|':'
string|'"2011-12-15T22:42:45Z"'
op|'}'
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"uri"'
op|':'
string|'"*/servers"'
op|','
nl|'\n'
string|'"regex"'
op|':'
string|'"^/servers"'
op|','
nl|'\n'
string|'"limit"'
op|':'
op|'['
op|'{'
nl|'\n'
string|'"value"'
op|':'
number|'50'
op|','
nl|'\n'
string|'"verb"'
op|':'
string|'"POST"'
op|','
nl|'\n'
string|'"remaining"'
op|':'
number|'10'
op|','
nl|'\n'
string|'"unit"'
op|':'
string|'"DAY"'
op|','
nl|'\n'
string|'"next-available"'
op|':'
string|'"2011-12-15T22:42:45Z"'
op|'}'
op|']'
op|'}'
op|']'
op|','
nl|'\n'
string|'"absolute"'
op|':'
op|'{'
string|'"maxServerMeta"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"maxImageMeta"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"maxPersonality"'
op|':'
number|'5'
op|','
nl|'\n'
string|'"maxPersonalitySize"'
op|':'
number|'10240'
op|'}'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'fixture'
op|','
string|"'index'"
op|')'
newline|'\n'
name|'print'
name|'output'
newline|'\n'
name|'root'
op|'='
name|'etree'
op|'.'
name|'XML'
op|'('
name|'output'
op|')'
newline|'\n'
name|'xmlutil'
op|'.'
name|'validate_schema'
op|'('
name|'root'
op|','
string|"'limits'"
op|')'
newline|'\n'
nl|'\n'
comment|'#verify absolute limits'
nl|'\n'
name|'absolutes'
op|'='
name|'root'
op|'.'
name|'xpath'
op|'('
string|"'ns:absolute/ns:limit'"
op|','
name|'namespaces'
op|'='
name|'NS'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'absolutes'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'for'
name|'limit'
name|'in'
name|'absolutes'
op|':'
newline|'\n'
indent|'            '
name|'name'
op|'='
name|'limit'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
newline|'\n'
name|'value'
op|'='
name|'limit'
op|'.'
name|'get'
op|'('
string|"'value'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'value'
op|','
name|'str'
op|'('
name|'fixture'
op|'['
string|"'limits'"
op|']'
op|'['
string|"'absolute'"
op|']'
op|'['
name|'name'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'#verify rate limits'
nl|'\n'
dedent|''
name|'rates'
op|'='
name|'root'
op|'.'
name|'xpath'
op|'('
string|"'ns:rates/ns:rate'"
op|','
name|'namespaces'
op|'='
name|'NS'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rates'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'rate'
name|'in'
name|'enumerate'
op|'('
name|'rates'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
name|'in'
op|'['
string|"'uri'"
op|','
string|"'regex'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'rate'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|','
nl|'\n'
name|'str'
op|'('
name|'fixture'
op|'['
string|"'limits'"
op|']'
op|'['
string|"'rate'"
op|']'
op|'['
name|'i'
op|']'
op|'['
name|'key'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'rate_limits'
op|'='
name|'rate'
op|'.'
name|'xpath'
op|'('
string|"'ns:limit'"
op|','
name|'namespaces'
op|'='
name|'NS'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rate_limits'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'for'
name|'j'
op|','
name|'limit'
name|'in'
name|'enumerate'
op|'('
name|'rate_limits'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'key'
name|'in'
op|'['
string|"'verb'"
op|','
string|"'value'"
op|','
string|"'remaining'"
op|','
string|"'unit'"
op|','
nl|'\n'
string|"'next-available'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'limit'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|','
nl|'\n'
name|'str'
op|'('
name|'fixture'
op|'['
string|"'limits'"
op|']'
op|'['
string|"'rate'"
op|']'
op|'['
name|'i'
op|']'
op|'['
string|"'limit'"
op|']'
op|'['
name|'j'
op|']'
op|'['
name|'key'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_index_no_limits
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_index_no_limits'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'limits'
op|'.'
name|'LimitsXMLSerializer'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'fixture'
op|'='
op|'{'
string|'"limits"'
op|':'
op|'{'
nl|'\n'
string|'"rate"'
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|'"absolute"'
op|':'
op|'{'
op|'}'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'fixture'
op|','
string|"'index'"
op|')'
newline|'\n'
name|'print'
name|'output'
newline|'\n'
name|'root'
op|'='
name|'etree'
op|'.'
name|'XML'
op|'('
name|'output'
op|')'
newline|'\n'
name|'xmlutil'
op|'.'
name|'validate_schema'
op|'('
name|'root'
op|','
string|"'limits'"
op|')'
newline|'\n'
nl|'\n'
comment|'#verify absolute limits'
nl|'\n'
name|'absolutes'
op|'='
name|'root'
op|'.'
name|'xpath'
op|'('
string|"'ns:absolute/ns:limit'"
op|','
name|'namespaces'
op|'='
name|'NS'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'absolutes'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
comment|'#verify rate limits'
nl|'\n'
name|'rates'
op|'='
name|'root'
op|'.'
name|'xpath'
op|'('
string|"'ns:rates/ns:rate'"
op|','
name|'namespaces'
op|'='
name|'NS'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'rates'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
