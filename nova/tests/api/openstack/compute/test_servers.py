begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010-2011 OpenStack Foundation'
nl|'\n'
comment|'# Copyright 2011 Piston Cloud Computing, Inc.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'# Copyright 2013 Red Hat, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'base64'
newline|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'testtools'
newline|'\n'
name|'import'
name|'urlparse'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
nl|'\n'
name|'import'
name|'iso8601'
newline|'\n'
name|'from'
name|'lxml'
name|'import'
name|'etree'
newline|'\n'
name|'import'
name|'mox'
newline|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
name|'import'
name|'webob'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'compute'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
name|'import'
name|'ips'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
name|'import'
name|'servers'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
name|'import'
name|'views'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'extensions'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'xmlutil'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'block_device'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'api'
name|'as'
name|'compute_api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'flavors'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'models'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'image'
name|'import'
name|'glance'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'manager'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
op|'.'
name|'neutronv2'
name|'import'
name|'api'
name|'as'
name|'neutron_api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'instance'
name|'as'
name|'instance_obj'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'gettextutils'
name|'import'
name|'_'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'policy'
name|'as'
name|'common_policy'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'policy'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'fakes'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fake_instance'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fake_network'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'image'
name|'import'
name|'fake'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'matchers'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'objects'
name|'import'
name|'test_keypair'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
name|'as'
name|'nova_utils'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'password_length'"
op|','
string|"'nova.utils'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|FAKE_UUID
name|'FAKE_UUID'
op|'='
name|'fakes'
op|'.'
name|'FAKE_UUID'
newline|'\n'
DECL|variable|NS
name|'NS'
op|'='
string|'"{http://docs.openstack.org/compute/api/v1.1}"'
newline|'\n'
DECL|variable|ATOMNS
name|'ATOMNS'
op|'='
string|'"{http://www.w3.org/2005/Atom}"'
newline|'\n'
DECL|variable|XPATH_NS
name|'XPATH_NS'
op|'='
op|'{'
nl|'\n'
string|"'atom'"
op|':'
string|"'http://www.w3.org/2005/Atom'"
op|','
nl|'\n'
string|"'ns'"
op|':'
string|"'http://docs.openstack.org/compute/api/v1.1'"
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|variable|INSTANCE_IDS
name|'INSTANCE_IDS'
op|'='
op|'{'
name|'FAKE_UUID'
op|':'
number|'1'
op|'}'
newline|'\n'
nl|'\n'
DECL|variable|FIELDS
name|'FIELDS'
op|'='
name|'instance_obj'
op|'.'
name|'INSTANCE_DEFAULT_FIELDS'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_gen_uuid
name|'def'
name|'fake_gen_uuid'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'FAKE_UUID'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|return_servers_empty
dedent|''
name|'def'
name|'return_servers_empty'
op|'('
name|'context'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|return_security_group
dedent|''
name|'def'
name|'return_security_group'
op|'('
name|'context'
op|','
name|'instance_id'
op|','
name|'security_group_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_update_and_get_original
dedent|''
name|'def'
name|'instance_update_and_get_original'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'values'
op|','
nl|'\n'
name|'update_cells'
op|'='
name|'True'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|','
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'inst'
op|'='
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
name|'INSTANCE_IDS'
op|'.'
name|'get'
op|'('
name|'instance_uuid'
op|')'
op|','
nl|'\n'
name|'name'
op|'='
name|'values'
op|'.'
name|'get'
op|'('
string|"'display_name'"
op|')'
op|')'
newline|'\n'
name|'inst'
op|'='
name|'dict'
op|'('
name|'inst'
op|','
op|'**'
name|'values'
op|')'
newline|'\n'
name|'return'
op|'('
name|'inst'
op|','
name|'inst'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_update
dedent|''
name|'def'
name|'instance_update'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'values'
op|','
name|'update_cells'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'inst'
op|'='
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
name|'INSTANCE_IDS'
op|'.'
name|'get'
op|'('
name|'instance_uuid'
op|')'
op|','
nl|'\n'
name|'name'
op|'='
name|'values'
op|'.'
name|'get'
op|'('
string|"'display_name'"
op|')'
op|')'
newline|'\n'
name|'inst'
op|'='
name|'dict'
op|'('
name|'inst'
op|','
op|'**'
name|'values'
op|')'
newline|'\n'
name|'return'
name|'inst'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_compute_api
dedent|''
name|'def'
name|'fake_compute_api'
op|'('
name|'cls'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MockSetAdminPassword
dedent|''
name|'class'
name|'MockSetAdminPassword'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance_id'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'password'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
name|'password'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance_id'
op|'='
name|'instance_id'
newline|'\n'
name|'self'
op|'.'
name|'password'
op|'='
name|'password'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Base64ValidationTest
dedent|''
dedent|''
name|'class'
name|'Base64ValidationTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'Base64ValidationTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ext_mgr'
op|'='
name|'extensions'
op|'.'
name|'ExtensionManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'servers'
op|'.'
name|'Controller'
op|'('
name|'self'
op|'.'
name|'ext_mgr'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_decode_base64
dedent|''
name|'def'
name|'test_decode_base64'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'value'
op|'='
string|'"A random string"'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_decode_base64'
op|'('
name|'base64'
op|'.'
name|'b64encode'
op|'('
name|'value'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_decode_base64_binary
dedent|''
name|'def'
name|'test_decode_base64_binary'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'value'
op|'='
string|'"\\x00\\x12\\x75\\x99"'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_decode_base64'
op|'('
name|'base64'
op|'.'
name|'b64encode'
op|'('
name|'value'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_decode_base64_whitespace
dedent|''
name|'def'
name|'test_decode_base64_whitespace'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'value'
op|'='
string|'"A random string"'
newline|'\n'
name|'encoded'
op|'='
name|'base64'
op|'.'
name|'b64encode'
op|'('
name|'value'
op|')'
newline|'\n'
name|'white'
op|'='
string|'"\\n \\n%s\\t%s\\n"'
op|'%'
op|'('
name|'encoded'
op|'['
op|':'
number|'2'
op|']'
op|','
name|'encoded'
op|'['
number|'2'
op|':'
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_decode_base64'
op|'('
name|'white'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_decode_base64_invalid
dedent|''
name|'def'
name|'test_decode_base64_invalid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'invalid'
op|'='
string|'"A random string"'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_decode_base64'
op|'('
name|'invalid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_decode_base64_illegal_bytes
dedent|''
name|'def'
name|'test_decode_base64_illegal_bytes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'value'
op|'='
string|'"A random string"'
newline|'\n'
name|'encoded'
op|'='
name|'base64'
op|'.'
name|'b64encode'
op|'('
name|'value'
op|')'
newline|'\n'
name|'white'
op|'='
string|'">\\x01%s*%s()"'
op|'%'
op|'('
name|'encoded'
op|'['
op|':'
number|'2'
op|']'
op|','
name|'encoded'
op|'['
number|'2'
op|':'
op|']'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_decode_base64'
op|'('
name|'white'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NeutronV2Subclass
dedent|''
dedent|''
name|'class'
name|'NeutronV2Subclass'
op|'('
name|'neutron_api'
op|'.'
name|'API'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Used to ensure that API handles subclasses properly."""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ControllerTest
dedent|''
name|'class'
name|'ControllerTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ControllerTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'verbose'
op|'='
name|'True'
op|','
name|'use_ipv6'
op|'='
name|'False'
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_out_rate_limiting'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_out_key_pair_funcs'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'fake'
op|'.'
name|'stub_out_image_service'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'return_server'
op|'='
name|'fakes'
op|'.'
name|'fake_instance_get'
op|'('
op|')'
newline|'\n'
name|'return_servers'
op|'='
name|'fakes'
op|'.'
name|'fake_instance_get_all_by_filters'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|','
nl|'\n'
name|'return_servers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
nl|'\n'
name|'return_server'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_add_security_group'"
op|','
nl|'\n'
name|'return_security_group'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_update_and_get_original'"
op|','
nl|'\n'
name|'instance_update_and_get_original'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'ext_mgr'
op|'='
name|'extensions'
op|'.'
name|'ExtensionManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'servers'
op|'.'
name|'Controller'
op|'('
name|'self'
op|'.'
name|'ext_mgr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ips_controller'
op|'='
name|'ips'
op|'.'
name|'Controller'
op|'('
op|')'
newline|'\n'
name|'policy'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'policy'
op|'.'
name|'init'
op|'('
op|')'
newline|'\n'
name|'fake_network'
op|'.'
name|'stub_out_nw_api_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersControllerTest
dedent|''
dedent|''
name|'class'
name|'ServersControllerTest'
op|'('
name|'ControllerTest'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ServersControllerTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'nova_utils'
op|'.'
name|'reset_is_neutron'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_can_check_loaded_extensions
dedent|''
name|'def'
name|'test_can_check_loaded_extensions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-fake'"
op|':'
name|'None'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'ext_mgr'
op|'.'
name|'is_loaded'
op|'('
string|"'os-fake'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'ext_mgr'
op|'.'
name|'is_loaded'
op|'('
string|"'os-not-loaded'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_requested_networks_prefix
dedent|''
name|'def'
name|'test_requested_networks_prefix'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uuid'
op|'='
string|"'br-00000000-0000-0000-0000-000000000000'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'uuid'
op|'}'
op|']'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_get_requested_networks'
op|'('
name|'requested_networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
op|'('
name|'uuid'
op|','
name|'None'
op|')'
op|','
name|'res'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_requested_networks_neutronv2_enabled_with_port
dedent|''
name|'def'
name|'test_requested_networks_neutronv2_enabled_with_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
string|"'nova.network.neutronv2.api.API'"
op|')'
newline|'\n'
name|'port'
op|'='
string|"'eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'port'"
op|':'
name|'port'
op|'}'
op|']'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_get_requested_networks'
op|'('
name|'requested_networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|','
op|'['
op|'('
name|'None'
op|','
name|'None'
op|','
name|'port'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_requested_networks_neutronv2_enabled_with_network
dedent|''
name|'def'
name|'test_requested_networks_neutronv2_enabled_with_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
string|"'nova.network.neutronv2.api.API'"
op|')'
newline|'\n'
name|'network'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|'}'
op|']'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_get_requested_networks'
op|'('
name|'requested_networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|','
op|'['
op|'('
name|'network'
op|','
name|'None'
op|','
name|'None'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_requested_networks_neutronv2_enabled_with_network_and_port
dedent|''
name|'def'
name|'test_requested_networks_neutronv2_enabled_with_network_and_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
string|"'nova.network.neutronv2.api.API'"
op|')'
newline|'\n'
name|'network'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'port'
op|'='
string|"'eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|','
string|"'port'"
op|':'
name|'port'
op|'}'
op|']'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_get_requested_networks'
op|'('
name|'requested_networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|','
op|'['
op|'('
name|'None'
op|','
name|'None'
op|','
name|'port'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_requested_networks_neutronv2_disabled_with_port
dedent|''
name|'def'
name|'test_requested_networks_neutronv2_disabled_with_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'port'
op|'='
string|"'eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'port'"
op|':'
name|'port'
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_get_requested_networks'
op|','
nl|'\n'
name|'requested_networks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_requested_networks_api_enabled_with_v2_subclass
dedent|''
name|'def'
name|'test_requested_networks_api_enabled_with_v2_subclass'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
string|"'nova.network.neutronv2.api.API'"
op|')'
newline|'\n'
name|'network'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'port'
op|'='
string|"'eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|','
string|"'port'"
op|':'
name|'port'
op|'}'
op|']'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_get_requested_networks'
op|'('
name|'requested_networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|','
op|'['
op|'('
name|'None'
op|','
name|'None'
op|','
name|'port'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_requested_networks_neutronv2_subclass_with_port
dedent|''
name|'def'
name|'test_requested_networks_neutronv2_subclass_with_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cls'
op|'='
string|"'nova.tests.api.openstack.compute.test_servers.NeutronV2Subclass'"
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
name|'cls'
op|')'
newline|'\n'
name|'port'
op|'='
string|"'eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'port'"
op|':'
name|'port'
op|'}'
op|']'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_get_requested_networks'
op|'('
name|'requested_networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|','
op|'['
op|'('
name|'None'
op|','
name|'None'
op|','
name|'port'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_by_uuid
dedent|''
name|'def'
name|'test_get_server_by_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unique_host_id
dedent|''
name|'def'
name|'test_unique_host_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create two servers with the same host and different\n           project_ids and check that the hostId\'s are unique.\n        """'
newline|'\n'
DECL|function|return_instance_with_host
name|'def'
name|'return_instance_with_host'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'project_id'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'return'
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
name|'id'
op|'='
number|'1'
op|','
name|'uuid'
op|'='
name|'FAKE_UUID'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'project_id'
op|','
nl|'\n'
name|'host'
op|'='
string|"'fake_host'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
nl|'\n'
name|'return_instance_with_host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get'"
op|','
nl|'\n'
name|'return_instance_with_host'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'server1'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'server2'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'server1'
op|'['
string|"'server'"
op|']'
op|'['
string|"'hostId'"
op|']'
op|','
nl|'\n'
name|'server2'
op|'['
string|"'server'"
op|']'
op|'['
string|"'hostId'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_server_data_dict
dedent|''
name|'def'
name|'_get_server_data_dict'
op|'('
name|'self'
op|','
name|'uuid'
op|','
name|'image_bookmark'
op|','
name|'flavor_bookmark'
op|','
nl|'\n'
name|'status'
op|'='
string|'"ACTIVE"'
op|','
name|'progress'
op|'='
number|'100'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
name|'uuid'
op|','
nl|'\n'
string|'"user_id"'
op|':'
string|'"fake_user"'
op|','
nl|'\n'
string|'"tenant_id"'
op|':'
string|'"fake_project"'
op|','
nl|'\n'
string|'"updated"'
op|':'
string|'"2010-11-11T11:00:00Z"'
op|','
nl|'\n'
string|'"created"'
op|':'
string|'"2010-10-10T12:00:00Z"'
op|','
nl|'\n'
string|'"progress"'
op|':'
name|'progress'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"server1"'
op|','
nl|'\n'
string|'"status"'
op|':'
name|'status'
op|','
nl|'\n'
string|'"accessIPv4"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"accessIPv6"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"hostId"'
op|':'
string|"''"
op|','
nl|'\n'
string|'"image"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"10"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'image_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'flavor_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"addresses"'
op|':'
op|'{'
nl|'\n'
string|"'test1'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'192.168.1.100'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'6'
op|','
string|"'addr'"
op|':'
string|"'2001:db8:0:1::1'"
op|'}'
nl|'\n'
op|']'
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
nl|'\n'
string|'"seq"'
op|':'
string|'"1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v2/fake/servers/%s"'
op|'%'
name|'uuid'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/servers/%s"'
op|'%'
name|'uuid'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_by_id
dedent|''
name|'def'
name|'test_get_server_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_ipv6'
op|'='
name|'True'
op|')'
newline|'\n'
name|'image_bookmark'
op|'='
string|'"http://localhost/fake/images/10"'
newline|'\n'
name|'flavor_bookmark'
op|'='
string|'"http://localhost/fake/flavors/1"'
newline|'\n'
nl|'\n'
name|'uuid'
op|'='
name|'FAKE_UUID'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/%s'"
op|'%'
name|'uuid'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|'('
name|'req'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
name|'expected_server'
op|'='
name|'self'
op|'.'
name|'_get_server_data_dict'
op|'('
name|'uuid'
op|','
nl|'\n'
name|'image_bookmark'
op|','
nl|'\n'
name|'flavor_bookmark'
op|','
nl|'\n'
name|'status'
op|'='
string|'"BUILD"'
op|','
nl|'\n'
name|'progress'
op|'='
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'res_dict'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected_server'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_with_active_status_by_id
dedent|''
name|'def'
name|'test_get_server_with_active_status_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_bookmark'
op|'='
string|'"http://localhost/fake/images/10"'
newline|'\n'
name|'flavor_bookmark'
op|'='
string|'"http://localhost/fake/flavors/1"'
newline|'\n'
nl|'\n'
name|'new_return_server'
op|'='
name|'fakes'
op|'.'
name|'fake_instance_get'
op|'('
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'progress'
op|'='
number|'100'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
name|'new_return_server'
op|')'
newline|'\n'
nl|'\n'
name|'uuid'
op|'='
name|'FAKE_UUID'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s'"
op|'%'
name|'uuid'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|'('
name|'req'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'expected_server'
op|'='
name|'self'
op|'.'
name|'_get_server_data_dict'
op|'('
name|'uuid'
op|','
nl|'\n'
name|'image_bookmark'
op|','
nl|'\n'
name|'flavor_bookmark'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'res_dict'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected_server'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_with_id_image_ref_by_id
dedent|''
name|'def'
name|'test_get_server_with_id_image_ref_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_ref'
op|'='
string|'"10"'
newline|'\n'
name|'image_bookmark'
op|'='
string|'"http://localhost/fake/images/10"'
newline|'\n'
name|'flavor_id'
op|'='
string|'"1"'
newline|'\n'
name|'flavor_bookmark'
op|'='
string|'"http://localhost/fake/flavors/1"'
newline|'\n'
nl|'\n'
name|'new_return_server'
op|'='
name|'fakes'
op|'.'
name|'fake_instance_get'
op|'('
nl|'\n'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'image_ref'
op|'='
name|'image_ref'
op|','
nl|'\n'
name|'flavor_id'
op|'='
name|'flavor_id'
op|','
name|'progress'
op|'='
number|'100'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
name|'new_return_server'
op|')'
newline|'\n'
nl|'\n'
name|'uuid'
op|'='
name|'FAKE_UUID'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s'"
op|'%'
name|'uuid'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|'('
name|'req'
op|','
name|'uuid'
op|')'
newline|'\n'
name|'expected_server'
op|'='
name|'self'
op|'.'
name|'_get_server_data_dict'
op|'('
name|'uuid'
op|','
nl|'\n'
name|'image_bookmark'
op|','
nl|'\n'
name|'flavor_bookmark'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'res_dict'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected_server'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_addresses_from_cache
dedent|''
name|'def'
name|'test_get_server_addresses_from_cache'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pub0'
op|'='
op|'('
string|"'172.19.0.1'"
op|','
string|"'172.19.0.2'"
op|','
op|')'
newline|'\n'
name|'pub1'
op|'='
op|'('
string|"'1.2.3.4'"
op|','
op|')'
newline|'\n'
name|'pub2'
op|'='
op|'('
string|"'b33f::fdee:ddff:fecc:bbaa'"
op|','
op|')'
newline|'\n'
name|'priv0'
op|'='
op|'('
string|"'192.168.0.3'"
op|','
string|"'192.168.0.4'"
op|','
op|')'
newline|'\n'
nl|'\n'
DECL|function|_ip
name|'def'
name|'_ip'
op|'('
name|'ip'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'address'"
op|':'
name|'ip'
op|','
string|"'type'"
op|':'
string|"'fixed'"
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'nw_cache'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'aa:aa:aa:aa:aa:aa'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'bridge'"
op|':'
string|"'br0'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'public'"
op|','
nl|'\n'
string|"'subnets'"
op|':'
op|'['
op|'{'
string|"'cidr'"
op|':'
string|"'172.19.0.0/24'"
op|','
nl|'\n'
string|"'ips'"
op|':'
op|'['
name|'_ip'
op|'('
name|'ip'
op|')'
name|'for'
name|'ip'
name|'in'
name|'pub0'
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'cidr'"
op|':'
string|"'1.2.3.0/16'"
op|','
nl|'\n'
string|"'ips'"
op|':'
op|'['
name|'_ip'
op|'('
name|'ip'
op|')'
name|'for'
name|'ip'
name|'in'
name|'pub1'
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'cidr'"
op|':'
string|"'b33f::/64'"
op|','
nl|'\n'
string|"'ips'"
op|':'
op|'['
name|'_ip'
op|'('
name|'ip'
op|')'
name|'for'
name|'ip'
name|'in'
name|'pub2'
op|']'
op|'}'
op|']'
op|'}'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'bb:bb:bb:bb:bb:bb'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'bridge'"
op|':'
string|"'br1'"
op|','
nl|'\n'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'label'"
op|':'
string|"'private'"
op|','
nl|'\n'
string|"'subnets'"
op|':'
op|'['
op|'{'
string|"'cidr'"
op|':'
string|"'192.168.0.0/24'"
op|','
nl|'\n'
string|"'ips'"
op|':'
op|'['
name|'_ip'
op|'('
name|'ip'
op|')'
name|'for'
name|'ip'
name|'in'
name|'priv0'
op|']'
op|'}'
op|']'
op|'}'
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'return_server'
op|'='
name|'fakes'
op|'.'
name|'fake_instance_get'
op|'('
name|'nw_cache'
op|'='
name|'nw_cache'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
name|'return_server'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s/ips'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'ips_controller'
op|'.'
name|'index'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'addresses'"
op|':'
op|'{'
nl|'\n'
string|"'private'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'192.168.0.3'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'192.168.0.4'"
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'public'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'172.19.0.1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'172.19.0.2'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'1.2.3.4'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'6'
op|','
string|"'addr'"
op|':'
string|"'b33f::fdee:ddff:fecc:bbaa'"
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'res_dict'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_addresses_nonexistent_network
dedent|''
name|'def'
name|'test_get_server_addresses_nonexistent_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'url'
op|'='
string|"'/fake/servers/%s/ips/network_0'"
op|'%'
name|'FAKE_UUID'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
name|'url'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
name|'self'
op|'.'
name|'ips_controller'
op|'.'
name|'show'
op|','
nl|'\n'
name|'req'
op|','
name|'FAKE_UUID'
op|','
string|"'network_0'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_addresses_nonexistent_server
dedent|''
name|'def'
name|'test_get_server_addresses_nonexistent_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_instance_get
indent|'        '
name|'def'
name|'fake_instance_get'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
name|'fake_instance_get'
op|')'
newline|'\n'
nl|'\n'
name|'server_id'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s/ips'"
op|'%'
name|'server_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ips_controller'
op|'.'
name|'index'
op|','
name|'req'
op|','
name|'server_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_list_empty
dedent|''
name|'def'
name|'test_get_server_list_empty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|','
nl|'\n'
name|'return_servers_empty'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'num_servers'
op|'='
name|'len'
op|'('
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'num_servers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_list_with_reservation_id
dedent|''
name|'def'
name|'test_get_server_list_with_reservation_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?reservation_id=foo'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'i'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'s'
name|'in'
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
string|"'server%d'"
op|'%'
op|'('
name|'i'
op|'+'
number|'1'
op|')'
op|')'
newline|'\n'
name|'i'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_list_with_reservation_id_empty
dedent|''
dedent|''
name|'def'
name|'test_get_server_list_with_reservation_id_empty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/detail?'"
nl|'\n'
string|"'reservation_id=foo'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'i'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'s'
name|'in'
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
string|"'server%d'"
op|'%'
op|'('
name|'i'
op|'+'
number|'1'
op|')'
op|')'
newline|'\n'
name|'i'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_list_with_reservation_id_details
dedent|''
dedent|''
name|'def'
name|'test_get_server_list_with_reservation_id_details'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/detail?'"
nl|'\n'
string|"'reservation_id=foo'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'i'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'s'
name|'in'
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
string|"'server%d'"
op|'%'
op|'('
name|'i'
op|'+'
number|'1'
op|')'
op|')'
newline|'\n'
name|'i'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_list
dedent|''
dedent|''
name|'def'
name|'test_get_server_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|')'
op|','
number|'5'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'s'
name|'in'
name|'enumerate'
op|'('
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'id'"
op|']'
op|','
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
name|'i'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'name'"
op|']'
op|','
string|"'server%d'"
op|'%'
op|'('
name|'i'
op|'+'
number|'1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'s'
op|'.'
name|'get'
op|'('
string|"'image'"
op|','
name|'None'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'expected_links'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v2/fake/servers/%s"'
op|'%'
name|'s'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/servers/%s"'
op|'%'
name|'s'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'links'"
op|']'
op|','
name|'expected_links'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_limit
dedent|''
dedent|''
name|'def'
name|'test_get_servers_with_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?limit=3'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'servers'
op|'='
name|'res_dict'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'s'
op|'['
string|"'id'"
op|']'
name|'for'
name|'s'
name|'in'
name|'servers'
op|']'
op|','
nl|'\n'
op|'['
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
name|'i'
op|')'
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'servers_links'
op|'='
name|'res_dict'
op|'['
string|"'servers_links'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers_links'
op|'['
number|'0'
op|']'
op|'['
string|"'rel'"
op|']'
op|','
string|"'next'"
op|')'
newline|'\n'
name|'href_parts'
op|'='
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'servers_links'
op|'['
number|'0'
op|']'
op|'['
string|"'href'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/v2/fake/servers'"
op|','
name|'href_parts'
op|'.'
name|'path'
op|')'
newline|'\n'
name|'params'
op|'='
name|'urlparse'
op|'.'
name|'parse_qs'
op|'('
name|'href_parts'
op|'.'
name|'query'
op|')'
newline|'\n'
name|'expected_params'
op|'='
op|'{'
string|"'limit'"
op|':'
op|'['
string|"'3'"
op|']'
op|','
nl|'\n'
string|"'marker'"
op|':'
op|'['
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
number|'2'
op|')'
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'params'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected_params'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_limit_bad_value
dedent|''
name|'def'
name|'test_get_servers_with_limit_bad_value'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?limit=aaa'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_details_empty
dedent|''
name|'def'
name|'test_get_server_details_empty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|','
nl|'\n'
name|'return_servers_empty'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/detail'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'num_servers'
op|'='
name|'len'
op|'('
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'num_servers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_details_with_limit
dedent|''
name|'def'
name|'test_get_server_details_with_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/detail?limit=3'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'servers'
op|'='
name|'res'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'s'
op|'['
string|"'id'"
op|']'
name|'for'
name|'s'
name|'in'
name|'servers'
op|']'
op|','
nl|'\n'
op|'['
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
name|'i'
op|')'
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'servers_links'
op|'='
name|'res'
op|'['
string|"'servers_links'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers_links'
op|'['
number|'0'
op|']'
op|'['
string|"'rel'"
op|']'
op|','
string|"'next'"
op|')'
newline|'\n'
nl|'\n'
name|'href_parts'
op|'='
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'servers_links'
op|'['
number|'0'
op|']'
op|'['
string|"'href'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/v2/fake/servers'"
op|','
name|'href_parts'
op|'.'
name|'path'
op|')'
newline|'\n'
name|'params'
op|'='
name|'urlparse'
op|'.'
name|'parse_qs'
op|'('
name|'href_parts'
op|'.'
name|'query'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'limit'"
op|':'
op|'['
string|"'3'"
op|']'
op|','
string|"'marker'"
op|':'
op|'['
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
number|'2'
op|')'
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'params'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_details_with_limit_bad_value
dedent|''
name|'def'
name|'test_get_server_details_with_limit_bad_value'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/detail?limit=aaa'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_details_with_limit_and_other_params
dedent|''
name|'def'
name|'test_get_server_details_with_limit_and_other_params'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/detail'"
nl|'\n'
string|"'?limit=3&blah=2:t'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'servers'
op|'='
name|'res'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'s'
op|'['
string|"'id'"
op|']'
name|'for'
name|'s'
name|'in'
name|'servers'
op|']'
op|','
nl|'\n'
op|'['
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
name|'i'
op|')'
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'servers_links'
op|'='
name|'res'
op|'['
string|"'servers_links'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers_links'
op|'['
number|'0'
op|']'
op|'['
string|"'rel'"
op|']'
op|','
string|"'next'"
op|')'
newline|'\n'
nl|'\n'
name|'href_parts'
op|'='
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'servers_links'
op|'['
number|'0'
op|']'
op|'['
string|"'href'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/v2/fake/servers'"
op|','
name|'href_parts'
op|'.'
name|'path'
op|')'
newline|'\n'
name|'params'
op|'='
name|'urlparse'
op|'.'
name|'parse_qs'
op|'('
name|'href_parts'
op|'.'
name|'query'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'limit'"
op|':'
op|'['
string|"'3'"
op|']'
op|','
string|"'blah'"
op|':'
op|'['
string|"'2:t'"
op|']'
op|','
nl|'\n'
string|"'marker'"
op|':'
op|'['
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
number|'2'
op|')'
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'params'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_too_big_limit
dedent|''
name|'def'
name|'test_get_servers_with_too_big_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?limit=30'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'servers_links'"
op|','
name|'res_dict'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_bad_limit
dedent|''
name|'def'
name|'test_get_servers_with_bad_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?limit=asdf'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_marker
dedent|''
name|'def'
name|'test_get_servers_with_marker'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'url'
op|'='
string|"'/v2/fake/servers?marker=%s'"
op|'%'
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
number|'2'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
name|'url'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'s'
op|'['
string|"'name'"
op|']'
name|'for'
name|'s'
name|'in'
name|'servers'
op|']'
op|','
op|'['
string|'"server4"'
op|','
string|'"server5"'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_limit_and_marker
dedent|''
name|'def'
name|'test_get_servers_with_limit_and_marker'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'url'
op|'='
string|"'/v2/fake/servers?limit=2&marker=%s'"
op|'%'
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
number|'1'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
name|'url'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'s'
op|'['
string|"'name'"
op|']'
name|'for'
name|'s'
name|'in'
name|'servers'
op|']'
op|','
op|'['
string|"'server3'"
op|','
string|"'server4'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_bad_marker
dedent|''
name|'def'
name|'test_get_servers_with_bad_marker'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?limit=2&marker=asdf'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_bad_option
dedent|''
name|'def'
name|'test_get_servers_with_bad_option'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'sort_key'
op|'='
name|'None'
op|','
name|'sort_dir'
op|'='
string|"'desc'"
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'db_list'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
newline|'\n'
name|'return'
name|'instance_obj'
op|'.'
name|'_make_instance_list'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance_obj'
op|'.'
name|'InstanceList'
op|'('
op|')'
op|','
name|'db_list'
op|','
name|'FIELDS'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?unknownoption=whee'"
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_allows_image
dedent|''
name|'def'
name|'test_get_servers_allows_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'sort_key'
op|'='
name|'None'
op|','
name|'sort_dir'
op|'='
string|"'desc'"
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'image'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'image'"
op|']'
op|','
string|"'12345'"
op|')'
newline|'\n'
name|'db_list'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
newline|'\n'
name|'return'
name|'instance_obj'
op|'.'
name|'_make_instance_list'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance_obj'
op|'.'
name|'InstanceList'
op|'('
op|')'
op|','
name|'db_list'
op|','
name|'FIELDS'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?image=12345'"
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_tenant_id_filter_converts_to_project_id_for_admin
dedent|''
name|'def'
name|'test_tenant_id_filter_converts_to_project_id_for_admin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'context'
op|','
name|'filters'
op|'='
name|'None'
op|','
name|'sort_key'
op|'='
name|'None'
op|','
nl|'\n'
name|'sort_dir'
op|'='
string|"'desc'"
op|','
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'filters'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'filters'
op|'['
string|"'project_id'"
op|']'
op|','
string|"'newfake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'filters'
op|'.'
name|'get'
op|'('
string|"'tenant_id'"
op|')'
op|')'
newline|'\n'
name|'return'
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|','
nl|'\n'
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers'"
nl|'\n'
string|"'?all_tenants=1&tenant_id=newfake'"
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'servers'"
op|','
name|'res'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_all_tenants_param_normal
dedent|''
name|'def'
name|'test_all_tenants_param_normal'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'context'
op|','
name|'filters'
op|'='
name|'None'
op|','
name|'sort_key'
op|'='
name|'None'
op|','
nl|'\n'
name|'sort_dir'
op|'='
string|"'desc'"
op|','
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'project_id'"
op|','
name|'filters'
op|')'
newline|'\n'
name|'return'
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|','
nl|'\n'
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?all_tenants'"
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'servers'"
op|','
name|'res'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_all_tenants_param_one
dedent|''
name|'def'
name|'test_all_tenants_param_one'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'context'
op|','
name|'filters'
op|'='
name|'None'
op|','
name|'sort_key'
op|'='
name|'None'
op|','
nl|'\n'
name|'sort_dir'
op|'='
string|"'desc'"
op|','
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'project_id'"
op|','
name|'filters'
op|')'
newline|'\n'
name|'return'
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|','
nl|'\n'
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?all_tenants=1'"
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'servers'"
op|','
name|'res'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_all_tenants_param_zero
dedent|''
name|'def'
name|'test_all_tenants_param_zero'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'context'
op|','
name|'filters'
op|'='
name|'None'
op|','
name|'sort_key'
op|'='
name|'None'
op|','
nl|'\n'
name|'sort_dir'
op|'='
string|"'desc'"
op|','
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'all_tenants'"
op|','
name|'filters'
op|')'
newline|'\n'
name|'return'
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|','
nl|'\n'
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?all_tenants=0'"
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'servers'"
op|','
name|'res'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_all_tenants_param_false
dedent|''
name|'def'
name|'test_all_tenants_param_false'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'context'
op|','
name|'filters'
op|'='
name|'None'
op|','
name|'sort_key'
op|'='
name|'None'
op|','
nl|'\n'
name|'sort_dir'
op|'='
string|"'desc'"
op|','
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'all_tenants'"
op|','
name|'filters'
op|')'
newline|'\n'
name|'return'
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|','
nl|'\n'
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?all_tenants=false'"
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'servers'"
op|','
name|'res'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_all_tenants_param_invalid
dedent|''
name|'def'
name|'test_all_tenants_param_invalid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'context'
op|','
name|'filters'
op|'='
name|'None'
op|','
name|'sort_key'
op|'='
name|'None'
op|','
nl|'\n'
name|'sort_dir'
op|'='
string|"'desc'"
op|','
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'all_tenants'"
op|','
name|'filters'
op|')'
newline|'\n'
name|'return'
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|','
nl|'\n'
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?all_tenants=xxx'"
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_admin_restricted_tenant
dedent|''
name|'def'
name|'test_admin_restricted_tenant'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'context'
op|','
name|'filters'
op|'='
name|'None'
op|','
name|'sort_key'
op|'='
name|'None'
op|','
nl|'\n'
name|'sort_dir'
op|'='
string|"'desc'"
op|','
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'filters'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'filters'
op|'['
string|"'project_id'"
op|']'
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'return'
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|','
nl|'\n'
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers'"
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'servers'"
op|','
name|'res'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_all_tenants_pass_policy
dedent|''
name|'def'
name|'test_all_tenants_pass_policy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'context'
op|','
name|'filters'
op|'='
name|'None'
op|','
name|'sort_key'
op|'='
name|'None'
op|','
nl|'\n'
name|'sort_dir'
op|'='
string|"'desc'"
op|','
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'filters'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'project_id'"
op|','
name|'filters'
op|')'
newline|'\n'
name|'return'
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|','
nl|'\n'
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'rules'
op|'='
op|'{'
nl|'\n'
string|'"compute:get_all_tenants"'
op|':'
nl|'\n'
name|'common_policy'
op|'.'
name|'parse_rule'
op|'('
string|'"project_id:fake"'
op|')'
op|','
nl|'\n'
string|'"compute:get_all"'
op|':'
nl|'\n'
name|'common_policy'
op|'.'
name|'parse_rule'
op|'('
string|'"project_id:fake"'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'common_policy'
op|'.'
name|'set_rules'
op|'('
name|'common_policy'
op|'.'
name|'Rules'
op|'('
name|'rules'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?all_tenants=1'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'servers'"
op|','
name|'res'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_all_tenants_fail_policy
dedent|''
name|'def'
name|'test_all_tenants_fail_policy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'context'
op|','
name|'filters'
op|'='
name|'None'
op|','
name|'sort_key'
op|'='
name|'None'
op|','
nl|'\n'
name|'sort_dir'
op|'='
string|"'desc'"
op|','
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'filters'
op|')'
newline|'\n'
name|'return'
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'rules'
op|'='
op|'{'
nl|'\n'
string|'"compute:get_all_tenants"'
op|':'
nl|'\n'
name|'common_policy'
op|'.'
name|'parse_rule'
op|'('
string|'"project_id:non_fake"'
op|')'
op|','
nl|'\n'
string|'"compute:get_all"'
op|':'
nl|'\n'
name|'common_policy'
op|'.'
name|'parse_rule'
op|'('
string|'"project_id:fake"'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'common_policy'
op|'.'
name|'set_rules'
op|'('
name|'common_policy'
op|'.'
name|'Rules'
op|'('
name|'rules'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|','
nl|'\n'
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?all_tenants=1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_allows_flavor
dedent|''
name|'def'
name|'test_get_servers_allows_flavor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'sort_key'
op|'='
name|'None'
op|','
name|'sort_dir'
op|'='
string|"'desc'"
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'flavor'"
op|','
name|'search_opts'
op|')'
newline|'\n'
comment|'# flavor is an integer ID'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'flavor'"
op|']'
op|','
string|"'12345'"
op|')'
newline|'\n'
name|'db_list'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
newline|'\n'
name|'return'
name|'instance_obj'
op|'.'
name|'_make_instance_list'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance_obj'
op|'.'
name|'InstanceList'
op|'('
op|')'
op|','
name|'db_list'
op|','
name|'FIELDS'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?flavor=12345'"
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_bad_flavor
dedent|''
name|'def'
name|'test_get_servers_with_bad_flavor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?flavor=abcde'"
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_allows_status
dedent|''
name|'def'
name|'test_get_servers_allows_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'sort_key'
op|'='
name|'None'
op|','
name|'sort_dir'
op|'='
string|"'desc'"
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'vm_state'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'vm_state'"
op|']'
op|','
op|'['
name|'vm_states'
op|'.'
name|'ACTIVE'
op|']'
op|')'
newline|'\n'
name|'db_list'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
newline|'\n'
name|'return'
name|'instance_obj'
op|'.'
name|'_make_instance_list'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance_obj'
op|'.'
name|'InstanceList'
op|'('
op|')'
op|','
name|'db_list'
op|','
name|'FIELDS'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?status=active'"
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_allows_task_status
dedent|''
name|'def'
name|'test_get_servers_allows_task_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'REBOOTING'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'sort_key'
op|'='
name|'None'
op|','
name|'sort_dir'
op|'='
string|"'desc'"
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'task_state'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'task_state'"
op|']'
op|','
op|'['
name|'task_state'
op|']'
op|')'
newline|'\n'
name|'db_list'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_state'
op|')'
op|']'
newline|'\n'
name|'return'
name|'instance_obj'
op|'.'
name|'_make_instance_list'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance_obj'
op|'.'
name|'InstanceList'
op|'('
op|')'
op|','
name|'db_list'
op|','
name|'FIELDS'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/servers?status=reboot'"
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_resize_status
dedent|''
name|'def'
name|'test_get_servers_resize_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test when resize status, it maps list of vm states.'
nl|'\n'
indent|'        '
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'sort_key'
op|'='
name|'None'
op|','
name|'sort_dir'
op|'='
string|"'desc'"
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'vm_state'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'vm_state'"
op|']'
op|','
nl|'\n'
op|'['
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
name|'vm_states'
op|'.'
name|'STOPPED'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'db_list'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
newline|'\n'
name|'return'
name|'instance_obj'
op|'.'
name|'_make_instance_list'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance_obj'
op|'.'
name|'InstanceList'
op|'('
op|')'
op|','
name|'db_list'
op|','
name|'FIELDS'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?status=resize'"
op|')'
newline|'\n'
nl|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_invalid_status
dedent|''
name|'def'
name|'test_get_servers_invalid_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test getting servers by invalid status.'
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?status=baloney'"
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'False'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_deleted_status_as_user
dedent|''
name|'def'
name|'test_get_servers_deleted_status_as_user'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?status=deleted'"
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_deleted_status_as_admin
dedent|''
name|'def'
name|'test_get_servers_deleted_status_as_admin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'sort_key'
op|'='
name|'None'
op|','
name|'sort_dir'
op|'='
string|"'desc'"
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'vm_state'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'vm_state'"
op|']'
op|','
op|'['
string|"'deleted'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'db_list'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
newline|'\n'
name|'return'
name|'instance_obj'
op|'.'
name|'_make_instance_list'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance_obj'
op|'.'
name|'InstanceList'
op|'('
op|')'
op|','
name|'db_list'
op|','
name|'FIELDS'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?status=deleted'"
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_allows_name
dedent|''
name|'def'
name|'test_get_servers_allows_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'sort_key'
op|'='
name|'None'
op|','
name|'sort_dir'
op|'='
string|"'desc'"
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'name'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'name'"
op|']'
op|','
string|"'whee.*'"
op|')'
newline|'\n'
name|'db_list'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
newline|'\n'
name|'return'
name|'instance_obj'
op|'.'
name|'_make_instance_list'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance_obj'
op|'.'
name|'InstanceList'
op|'('
op|')'
op|','
name|'db_list'
op|','
name|'FIELDS'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?name=whee.*'"
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_allows_changes_since
dedent|''
name|'def'
name|'test_get_servers_allows_changes_since'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'sort_key'
op|'='
name|'None'
op|','
name|'sort_dir'
op|'='
string|"'desc'"
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'changes-since'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'changes_since'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2011'
op|','
number|'1'
op|','
number|'24'
op|','
number|'17'
op|','
number|'8'
op|','
number|'1'
op|','
nl|'\n'
name|'tzinfo'
op|'='
name|'iso8601'
op|'.'
name|'iso8601'
op|'.'
name|'UTC'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'changes-since'"
op|']'
op|','
name|'changes_since'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'deleted'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'db_list'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
newline|'\n'
name|'return'
name|'instance_obj'
op|'.'
name|'_make_instance_list'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance_obj'
op|'.'
name|'InstanceList'
op|'('
op|')'
op|','
name|'db_list'
op|','
name|'FIELDS'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'params'
op|'='
string|"'changes-since=2011-01-24T17:08:01Z'"
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?%s'"
op|'%'
name|'params'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_allows_changes_since_bad_value
dedent|''
name|'def'
name|'test_get_servers_allows_changes_since_bad_value'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
string|"'changes-since=asdf'"
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?%s'"
op|'%'
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_admin_filters_as_user
dedent|''
name|'def'
name|'test_get_servers_admin_filters_as_user'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test getting servers by admin-only or unknown options when\n        context is not admin. Make sure the admin and unknown options\n        are stripped before they get to compute_api.get_all()\n        """'
newline|'\n'
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'sort_key'
op|'='
name|'None'
op|','
name|'sort_dir'
op|'='
string|"'desc'"
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'search_opts'
op|')'
newline|'\n'
comment|'# Allowed by user'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'name'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'ip'"
op|','
name|'search_opts'
op|')'
newline|'\n'
comment|'# OSAPI converts status to vm_state'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'vm_state'"
op|','
name|'search_opts'
op|')'
newline|'\n'
comment|'# Allowed only by admins with admin API on'
nl|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'unknown_option'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'db_list'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
newline|'\n'
name|'return'
name|'instance_obj'
op|'.'
name|'_make_instance_list'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance_obj'
op|'.'
name|'InstanceList'
op|'('
op|')'
op|','
name|'db_list'
op|','
name|'FIELDS'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'query_str'
op|'='
string|'"name=foo&ip=10.*&status=active&unknown_option=meow"'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?%s'"
op|'%'
name|'query_str'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'servers'
op|'='
name|'res'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_admin_options_as_admin
dedent|''
name|'def'
name|'test_get_servers_admin_options_as_admin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test getting servers by admin-only or unknown options when\n        context is admin. All options should be passed\n        """'
newline|'\n'
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'sort_key'
op|'='
name|'None'
op|','
name|'sort_dir'
op|'='
string|"'desc'"
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'search_opts'
op|')'
newline|'\n'
comment|'# Allowed by user'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'name'"
op|','
name|'search_opts'
op|')'
newline|'\n'
comment|'# OSAPI converts status to vm_state'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'vm_state'"
op|','
name|'search_opts'
op|')'
newline|'\n'
comment|'# Allowed only by admins with admin API on'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'ip'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'unknown_option'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'db_list'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
newline|'\n'
name|'return'
name|'instance_obj'
op|'.'
name|'_make_instance_list'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance_obj'
op|'.'
name|'InstanceList'
op|'('
op|')'
op|','
name|'db_list'
op|','
name|'FIELDS'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'query_str'
op|'='
string|'"name=foo&ip=10.*&status=active&unknown_option=meow"'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?%s'"
op|'%'
name|'query_str'
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_allows_ip
dedent|''
name|'def'
name|'test_get_servers_allows_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test getting servers by ip."""'
newline|'\n'
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'sort_key'
op|'='
name|'None'
op|','
name|'sort_dir'
op|'='
string|"'desc'"
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'ip'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'ip'"
op|']'
op|','
string|"'10\\..*'"
op|')'
newline|'\n'
name|'db_list'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
newline|'\n'
name|'return'
name|'instance_obj'
op|'.'
name|'_make_instance_list'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance_obj'
op|'.'
name|'InstanceList'
op|'('
op|')'
op|','
name|'db_list'
op|','
name|'FIELDS'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?ip=10\\..*'"
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_admin_allows_ip6
dedent|''
name|'def'
name|'test_get_servers_admin_allows_ip6'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test getting servers by ip6 with admin_api enabled and\n        admin context\n        """'
newline|'\n'
name|'server_uuid'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|','
nl|'\n'
name|'sort_key'
op|'='
name|'None'
op|','
name|'sort_dir'
op|'='
string|"'desc'"
op|','
nl|'\n'
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'want_objects'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'ip6'"
op|','
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'ip6'"
op|']'
op|','
string|"'ffff.*'"
op|')'
newline|'\n'
name|'db_list'
op|'='
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'100'
op|','
name|'uuid'
op|'='
name|'server_uuid'
op|')'
op|']'
newline|'\n'
name|'return'
name|'instance_obj'
op|'.'
name|'_make_instance_list'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance_obj'
op|'.'
name|'InstanceList'
op|'('
op|')'
op|','
name|'db_list'
op|','
name|'FIELDS'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers?ip6=ffff.*'"
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'server_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_server_details
dedent|''
name|'def'
name|'test_get_all_server_details'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_flavor'
op|'='
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|"'http://localhost/fake/flavors/1'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'expected_image'
op|'='
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"10"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|"'http://localhost/fake/images/10'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/detail'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
op|','
name|'s'
name|'in'
name|'enumerate'
op|'('
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'id'"
op|']'
op|','
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
name|'i'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'hostId'"
op|']'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'name'"
op|']'
op|','
string|"'server%d'"
op|'%'
op|'('
name|'i'
op|'+'
number|'1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'image'"
op|']'
op|','
name|'expected_image'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'flavor'"
op|']'
op|','
name|'expected_flavor'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'status'"
op|']'
op|','
string|"'BUILD'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'metadata'"
op|']'
op|'['
string|"'seq'"
op|']'
op|','
name|'str'
op|'('
name|'i'
op|'+'
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_server_details_with_host
dedent|''
dedent|''
name|'def'
name|'test_get_all_server_details_with_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|"'''\n        We want to make sure that if two instances are on the same host, then\n        they return the same hostId. If two instances are on different hosts,\n        they should return different hostId's. In this test, there are 5\n        instances - 2 on one host and 3 on another.\n        '''"
newline|'\n'
nl|'\n'
DECL|function|return_servers_with_host
name|'def'
name|'return_servers_with_host'
op|'('
name|'context'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
name|'i'
op|'+'
number|'1'
op|','
string|"'fake'"
op|','
string|"'fake'"
op|','
name|'host'
op|'='
name|'i'
op|'%'
number|'2'
op|','
nl|'\n'
name|'uuid'
op|'='
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
name|'i'
op|')'
op|')'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
number|'5'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_all_by_filters'"
op|','
nl|'\n'
name|'return_servers_with_host'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/detail'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'server_list'
op|'='
name|'res_dict'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'host_ids'
op|'='
op|'['
name|'server_list'
op|'['
number|'0'
op|']'
op|'['
string|"'hostId'"
op|']'
op|','
name|'server_list'
op|'['
number|'1'
op|']'
op|'['
string|"'hostId'"
op|']'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'host_ids'
op|'['
number|'0'
op|']'
name|'and'
name|'host_ids'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'host_ids'
op|'['
number|'0'
op|']'
op|','
name|'host_ids'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
op|','
name|'s'
name|'in'
name|'enumerate'
op|'('
name|'server_list'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'id'"
op|']'
op|','
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
name|'i'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'hostId'"
op|']'
op|','
name|'host_ids'
op|'['
name|'i'
op|'%'
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'name'"
op|']'
op|','
string|"'server%d'"
op|'%'
op|'('
name|'i'
op|'+'
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersControllerUpdateTest
dedent|''
dedent|''
dedent|''
name|'class'
name|'ServersControllerUpdateTest'
op|'('
name|'ControllerTest'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|_get_request
indent|'    '
name|'def'
name|'_get_request'
op|'('
name|'self'
op|','
name|'body'
op|'='
name|'None'
op|','
name|'content_type'
op|'='
string|"'json'"
op|','
name|'options'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'options'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get'"
op|','
nl|'\n'
name|'fakes'
op|'.'
name|'fake_instance_get'
op|'('
op|'**'
name|'options'
op|')'
op|')'
newline|'\n'
dedent|''
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|"'application/%s'"
op|'%'
name|'content_type'
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'return'
name|'req'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_all_attributes
dedent|''
name|'def'
name|'test_update_server_all_attributes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'server_test'"
op|','
nl|'\n'
string|"'accessIPv4'"
op|':'
string|"'0.0.0.0'"
op|','
nl|'\n'
string|"'accessIPv6'"
op|':'
string|"'beef::0123'"
op|','
nl|'\n'
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'_get_request'
op|'('
name|'body'
op|','
op|'{'
string|"'name'"
op|':'
string|"'server_test'"
op|','
nl|'\n'
string|"'access_ipv4'"
op|':'
string|"'0.0.0.0'"
op|','
nl|'\n'
string|"'access_ipv6'"
op|':'
string|"'beef::0123'"
op|'}'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'name'"
op|']'
op|','
string|"'server_test'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'accessIPv4'"
op|']'
op|','
string|"'0.0.0.0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'accessIPv6'"
op|']'
op|','
string|"'beef::123'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_invalid_xml_raises_lookup
dedent|''
name|'def'
name|'test_update_server_invalid_xml_raises_lookup'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
string|'"""<?xml version="1.0" encoding="TF-8"?>\n            <metadata\n            xmlns="http://docs.openstack.org/compute/api/v1.1"\n            key="Label"></meta>"""'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'_get_request'
op|'('
name|'body'
op|','
name|'content_type'
op|'='
string|"'xml'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_invalid_xml_raises_expat
dedent|''
name|'def'
name|'test_update_server_invalid_xml_raises_expat'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
string|'"""<?xml version="1.0" encoding="UTF-8"?>\n            <metadata\n            xmlns="http://docs.openstack.org/compute/api/v1.1"\n            key="Label"></meta>"""'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'_get_request'
op|'('
name|'body'
op|','
name|'content_type'
op|'='
string|"'xml'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_name
dedent|''
name|'def'
name|'test_update_server_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'name'"
op|':'
string|"'server_test'"
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'_get_request'
op|'('
name|'body'
op|','
op|'{'
string|"'name'"
op|':'
string|"'server_test'"
op|'}'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'name'"
op|']'
op|','
string|"'server_test'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_name_too_long
dedent|''
name|'def'
name|'test_update_server_name_too_long'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'name'"
op|':'
string|"'x'"
op|'*'
number|'256'
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'_get_request'
op|'('
name|'body'
op|','
op|'{'
string|"'name'"
op|':'
string|"'server_test'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|','
nl|'\n'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_name_all_blank_spaces
dedent|''
name|'def'
name|'test_update_server_name_all_blank_spaces'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'name'"
op|':'
string|"' '"
op|'*'
number|'64'
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'_get_request'
op|'('
name|'body'
op|','
op|'{'
string|"'name'"
op|':'
string|"'server_test'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|','
nl|'\n'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_access_ipv4
dedent|''
name|'def'
name|'test_update_server_access_ipv4'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'accessIPv4'"
op|':'
string|"'0.0.0.0'"
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'_get_request'
op|'('
name|'body'
op|','
op|'{'
string|"'access_ipv4'"
op|':'
string|"'0.0.0.0'"
op|'}'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'accessIPv4'"
op|']'
op|','
string|"'0.0.0.0'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_access_ipv4_bad_format
dedent|''
name|'def'
name|'test_update_server_access_ipv4_bad_format'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'accessIPv4'"
op|':'
string|"'bad_format'"
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'_get_request'
op|'('
name|'body'
op|','
op|'{'
string|"'access_ipv4'"
op|':'
string|"'0.0.0.0'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|','
nl|'\n'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_access_ipv4_none
dedent|''
name|'def'
name|'test_update_server_access_ipv4_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'accessIPv4'"
op|':'
name|'None'
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'_get_request'
op|'('
name|'body'
op|','
op|'{'
string|"'access_ipv4'"
op|':'
string|"'0.0.0.0'"
op|'}'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'accessIPv4'"
op|']'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_access_ipv4_blank
dedent|''
name|'def'
name|'test_update_server_access_ipv4_blank'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'accessIPv4'"
op|':'
string|"''"
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'_get_request'
op|'('
name|'body'
op|','
op|'{'
string|"'access_ipv4'"
op|':'
string|"'0.0.0.0'"
op|'}'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'accessIPv4'"
op|']'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_access_ipv6
dedent|''
name|'def'
name|'test_update_server_access_ipv6'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'accessIPv6'"
op|':'
string|"'beef::0123'"
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'_get_request'
op|'('
name|'body'
op|','
op|'{'
string|"'access_ipv6'"
op|':'
string|"'beef::0123'"
op|'}'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'accessIPv6'"
op|']'
op|','
string|"'beef::123'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_access_ipv6_bad_format
dedent|''
name|'def'
name|'test_update_server_access_ipv6_bad_format'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'accessIPv6'"
op|':'
string|"'bad_format'"
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'_get_request'
op|'('
name|'body'
op|','
op|'{'
string|"'access_ipv6'"
op|':'
string|"'beef::0123'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|','
nl|'\n'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_access_ipv6_none
dedent|''
name|'def'
name|'test_update_server_access_ipv6_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'accessIPv6'"
op|':'
name|'None'
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'_get_request'
op|'('
name|'body'
op|','
op|'{'
string|"'access_ipv6'"
op|':'
string|"'beef::0123'"
op|'}'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'accessIPv6'"
op|']'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_access_ipv6_blank
dedent|''
name|'def'
name|'test_update_server_access_ipv6_blank'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'accessIPv6'"
op|':'
string|"''"
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'_get_request'
op|'('
name|'body'
op|','
op|'{'
string|"'access_ipv6'"
op|':'
string|"'beef::0123'"
op|'}'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'accessIPv6'"
op|']'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_personality
dedent|''
name|'def'
name|'test_update_server_personality'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
nl|'\n'
string|"'server'"
op|':'
op|'{'
nl|'\n'
string|"'personality'"
op|':'
op|'['
op|']'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'_get_request'
op|'('
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|','
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_adminPass_ignored
dedent|''
name|'def'
name|'test_update_server_adminPass_ignored'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_dict'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"'server_test'"
op|','
name|'adminPass'
op|'='
string|"'bacon'"
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'server'
op|'='
name|'inst_dict'
op|')'
newline|'\n'
nl|'\n'
DECL|function|server_update
name|'def'
name|'server_update'
op|'('
name|'context'
op|','
name|'id'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'filtered_dict'
op|'='
op|'{'
nl|'\n'
string|"'display_name'"
op|':'
string|"'server_test'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'params'
op|','
name|'filtered_dict'
op|')'
newline|'\n'
name|'filtered_dict'
op|'['
string|"'uuid'"
op|']'
op|'='
name|'id'
newline|'\n'
name|'return'
name|'filtered_dict'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_update'"
op|','
name|'server_update'
op|')'
newline|'\n'
comment|'# FIXME (comstud)'
nl|'\n'
comment|"#        self.stubs.Set(db, 'instance_get',"
nl|'\n'
comment|"#                return_server_with_attributes(name='server_test'))"
nl|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|'"application/json"'
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'name'"
op|']'
op|','
string|"'server_test'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_not_found
dedent|''
name|'def'
name|'test_update_server_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get
indent|'        '
name|'def'
name|'fake_get'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'get'"
op|','
name|'fake_get'
op|')'
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'name'"
op|':'
string|"'server_test'"
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'_get_request'
op|'('
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|','
nl|'\n'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_not_found_on_update
dedent|''
name|'def'
name|'test_update_server_not_found_on_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_update
indent|'        '
name|'def'
name|'fake_update'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_update_and_get_original'"
op|','
name|'fake_update'
op|')'
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'name'"
op|':'
string|"'server_test'"
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'_get_request'
op|'('
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|','
nl|'\n'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_policy_fail
dedent|''
name|'def'
name|'test_update_server_policy_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
op|'{'
string|"'compute:update'"
op|':'
name|'common_policy'
op|'.'
name|'parse_rule'
op|'('
string|"'role:admin'"
op|')'
op|'}'
newline|'\n'
name|'common_policy'
op|'.'
name|'set_rules'
op|'('
name|'common_policy'
op|'.'
name|'Rules'
op|'('
name|'rule'
op|')'
op|')'
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'name'"
op|':'
string|"'server_test'"
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'_get_request'
op|'('
name|'body'
op|','
op|'{'
string|"'name'"
op|':'
string|"'server_test'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|','
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersControllerDeleteTest
dedent|''
dedent|''
name|'class'
name|'ServersControllerDeleteTest'
op|'('
name|'ControllerTest'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ServersControllerDeleteTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'server_delete_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|instance_destroy_mock
name|'def'
name|'instance_destroy_mock'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'server_delete_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_destroy'"
op|','
name|'instance_destroy_mock'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_delete_request
dedent|''
name|'def'
name|'_create_delete_request'
op|'('
name|'self'
op|','
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fakes'
op|'.'
name|'stub_out_instance_quota'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'0'
op|','
number|'10'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/%s'"
op|'%'
name|'uuid'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'DELETE'"
newline|'\n'
name|'return'
name|'req'
newline|'\n'
nl|'\n'
DECL|member|_delete_server_instance
dedent|''
name|'def'
name|'_delete_server_instance'
op|'('
name|'self'
op|','
name|'uuid'
op|'='
name|'FAKE_UUID'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'_create_delete_request'
op|'('
name|'uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
nl|'\n'
name|'fakes'
op|'.'
name|'fake_instance_get'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'delete'
op|'('
name|'req'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_server_instance
dedent|''
name|'def'
name|'test_delete_server_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_delete_server_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'server_delete_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_server_instance_not_found
dedent|''
name|'def'
name|'test_delete_server_instance_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_delete_server_instance'
op|','
nl|'\n'
name|'uuid'
op|'='
string|"'non-existent-uuid'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_server_instance_while_building
dedent|''
name|'def'
name|'test_delete_server_instance_while_building'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fakes'
op|'.'
name|'stub_out_instance_quota'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
number|'0'
op|','
number|'10'
op|')'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'_create_delete_request'
op|'('
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'delete'
op|'('
name|'request'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'server_delete_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_server_instance_while_resize
dedent|''
name|'def'
name|'test_delete_server_instance_while_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'_create_delete_request'
op|'('
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
nl|'\n'
name|'fakes'
op|'.'
name|'fake_instance_get'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'RESIZE_PREP'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'delete'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
comment|'# Delete shoud be allowed in any case, even during resizing,'
nl|'\n'
comment|'# because it may get stuck.'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'server_delete_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_server_instance_if_not_launched
dedent|''
name|'def'
name|'test_delete_server_instance_if_not_launched'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'reclaim_instance_interval'
op|'='
number|'3600'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'DELETE'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'server_delete_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
nl|'\n'
name|'fakes'
op|'.'
name|'fake_instance_get'
op|'('
name|'launched_at'
op|'='
name|'None'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|instance_destroy_mock
name|'def'
name|'instance_destroy_mock'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'server_delete_called'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_destroy'"
op|','
name|'instance_destroy_mock'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'delete'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
comment|'# delete() should be called for instance which has never been active,'
nl|'\n'
comment|'# even if reclaim_instance_interval has been set.'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'server_delete_called'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersControllerRebuildInstanceTest
dedent|''
dedent|''
name|'class'
name|'ServersControllerRebuildInstanceTest'
op|'('
name|'ControllerTest'
op|')'
op|':'
newline|'\n'
DECL|variable|image_uuid
indent|'    '
name|'image_uuid'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
newline|'\n'
DECL|variable|image_href
name|'image_href'
op|'='
string|"'http://localhost/v2/fake/images/%s'"
op|'%'
name|'image_uuid'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ServersControllerRebuildInstanceTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
nl|'\n'
name|'fakes'
op|'.'
name|'fake_instance_get'
op|'('
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'='
op|'{'
nl|'\n'
string|"'rebuild'"
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'new_name'"
op|','
nl|'\n'
string|"'imageRef'"
op|':'
name|'self'
op|'.'
name|'image_href'
op|','
nl|'\n'
string|"'metadata'"
op|':'
op|'{'
nl|'\n'
string|"'open'"
op|':'
string|"'stack'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'personality'"
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"path"'
op|':'
string|'"/etc/banner.txt"'
op|','
nl|'\n'
string|'"contents"'
op|':'
string|'"MQ=="'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/a/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'headers'
op|'['
string|'"content-type"'
op|']'
op|'='
string|'"application/json"'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_instance_with_access_ipv4_bad_format
dedent|''
name|'def'
name|'test_rebuild_instance_with_access_ipv4_bad_format'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# proper local hrefs must start with 'http://localhost/v2/'"
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'['
string|"'rebuild'"
op|']'
op|'['
string|"'accessIPv4'"
op|']'
op|'='
string|"'bad_format'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'rebuild'"
op|']'
op|'['
string|"'accessIPv6'"
op|']'
op|'='
string|"'fead::1234'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'rebuild'"
op|']'
op|'['
string|"'metadata'"
op|']'
op|'['
string|"'hello'"
op|']'
op|'='
string|"'world'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_rebuild'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_instance_with_blank_metadata_key
dedent|''
name|'def'
name|'test_rebuild_instance_with_blank_metadata_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'['
string|"'rebuild'"
op|']'
op|'['
string|"'accessIPv4'"
op|']'
op|'='
string|"'0.0.0.0'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'rebuild'"
op|']'
op|'['
string|"'accessIPv6'"
op|']'
op|'='
string|"'fead::1234'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'rebuild'"
op|']'
op|'['
string|"'metadata'"
op|']'
op|'['
string|"''"
op|']'
op|'='
string|"'world'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_rebuild'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_instance_with_metadata_key_too_long
dedent|''
name|'def'
name|'test_rebuild_instance_with_metadata_key_too_long'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'['
string|"'rebuild'"
op|']'
op|'['
string|"'accessIPv4'"
op|']'
op|'='
string|"'0.0.0.0'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'rebuild'"
op|']'
op|'['
string|"'accessIPv6'"
op|']'
op|'='
string|"'fead::1234'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'rebuild'"
op|']'
op|'['
string|"'metadata'"
op|']'
op|'['
op|'('
string|"'a'"
op|'*'
number|'260'
op|')'
op|']'
op|'='
string|"'world'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPRequestEntityTooLarge'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_rebuild'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_instance_with_metadata_value_too_long
dedent|''
name|'def'
name|'test_rebuild_instance_with_metadata_value_too_long'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'['
string|"'rebuild'"
op|']'
op|'['
string|"'accessIPv4'"
op|']'
op|'='
string|"'0.0.0.0'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'rebuild'"
op|']'
op|'['
string|"'accessIPv6'"
op|']'
op|'='
string|"'fead::1234'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'rebuild'"
op|']'
op|'['
string|"'metadata'"
op|']'
op|'['
string|"'key1'"
op|']'
op|'='
op|'('
string|"'a'"
op|'*'
number|'260'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPRequestEntityTooLarge'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_rebuild'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_instance_fails_when_min_ram_too_small
dedent|''
name|'def'
name|'test_rebuild_instance_fails_when_min_ram_too_small'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# make min_ram larger than our instance ram size'
nl|'\n'
DECL|function|fake_get_image
indent|'        '
name|'def'
name|'fake_get_image'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_href'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'dict'
op|'('
name|'id'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
op|','
nl|'\n'
name|'name'
op|'='
string|"'public image'"
op|','
name|'is_public'
op|'='
name|'True'
op|','
nl|'\n'
name|'status'
op|'='
string|"'active'"
op|','
name|'properties'
op|'='
op|'{'
string|"'key1'"
op|':'
string|"'value1'"
op|'}'
op|','
nl|'\n'
name|'min_ram'
op|'='
string|'"4096"'
op|','
name|'min_disk'
op|'='
string|'"10"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_get_image'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_rebuild'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_instance_fails_when_min_disk_too_small
dedent|''
name|'def'
name|'test_rebuild_instance_fails_when_min_disk_too_small'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# make min_disk larger than our instance disk size'
nl|'\n'
DECL|function|fake_get_image
indent|'        '
name|'def'
name|'fake_get_image'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_href'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'dict'
op|'('
name|'id'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
op|','
nl|'\n'
name|'name'
op|'='
string|"'public image'"
op|','
name|'is_public'
op|'='
name|'True'
op|','
nl|'\n'
name|'status'
op|'='
string|"'active'"
op|','
name|'properties'
op|'='
op|'{'
string|"'key1'"
op|':'
string|"'value1'"
op|'}'
op|','
nl|'\n'
name|'min_ram'
op|'='
string|'"128"'
op|','
name|'min_disk'
op|'='
string|'"100000"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_get_image'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_rebuild'
op|','
name|'self'
op|'.'
name|'req'
op|','
nl|'\n'
name|'FAKE_UUID'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_instance_image_too_large
dedent|''
name|'def'
name|'test_rebuild_instance_image_too_large'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# make image size larger than our instance disk size'
nl|'\n'
indent|'        '
name|'size'
op|'='
name|'str'
op|'('
number|'1000'
op|'*'
op|'('
number|'1024'
op|'**'
number|'3'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_image
name|'def'
name|'fake_get_image'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_href'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'dict'
op|'('
name|'id'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
op|','
nl|'\n'
name|'name'
op|'='
string|"'public image'"
op|','
name|'is_public'
op|'='
name|'True'
op|','
nl|'\n'
name|'status'
op|'='
string|"'active'"
op|','
name|'size'
op|'='
name|'size'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_get_image'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_rebuild'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_instance_with_deleted_image
dedent|''
name|'def'
name|'test_rebuild_instance_with_deleted_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_image
indent|'        '
name|'def'
name|'fake_get_image'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_href'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'dict'
op|'('
name|'id'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
op|','
nl|'\n'
name|'name'
op|'='
string|"'public image'"
op|','
name|'is_public'
op|'='
name|'True'
op|','
nl|'\n'
name|'status'
op|'='
string|"'DELETED'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'fake'
op|'.'
name|'_FakeImageService'
op|','
string|"'show'"
op|','
name|'fake_get_image'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_rebuild'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_instance_with_access_ipv6_bad_format
dedent|''
name|'def'
name|'test_rebuild_instance_with_access_ipv6_bad_format'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# proper local hrefs must start with 'http://localhost/v2/'"
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'['
string|"'rebuild'"
op|']'
op|'['
string|"'accessIPv4'"
op|']'
op|'='
string|"'1.2.3.4'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'rebuild'"
op|']'
op|'['
string|"'accessIPv6'"
op|']'
op|'='
string|"'bad_format'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'rebuild'"
op|']'
op|'['
string|"'metadata'"
op|']'
op|'['
string|"'hello'"
op|']'
op|'='
string|"'world'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'headers'
op|'['
string|'"content-type"'
op|']'
op|'='
string|'"application/json"'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_rebuild'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerStatusTest
dedent|''
dedent|''
name|'class'
name|'ServerStatusTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ServerStatusTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_out_nw_api'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'ext_mgr'
op|'='
name|'extensions'
op|'.'
name|'ExtensionManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'servers'
op|'.'
name|'Controller'
op|'('
name|'self'
op|'.'
name|'ext_mgr'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_fake_get_server
name|'def'
name|'_fake_get_server'
op|'('
name|'context'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
name|'id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'controller'
op|','
string|"'_get_server'"
op|','
name|'_fake_get_server'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_with_state
dedent|''
name|'def'
name|'_get_with_state'
op|'('
name|'self'
op|','
name|'vm_state'
op|','
name|'task_state'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
nl|'\n'
name|'fakes'
op|'.'
name|'fake_instance_get'
op|'('
name|'vm_state'
op|'='
name|'vm_state'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_state'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'request'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|'('
name|'request'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_req_with_policy_fail
dedent|''
name|'def'
name|'_req_with_policy_fail'
op|'('
name|'self'
op|','
name|'policy_rule_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
op|'{'
string|"'compute:%s'"
op|'%'
name|'policy_rule_name'
op|':'
nl|'\n'
name|'common_policy'
op|'.'
name|'parse_rule'
op|'('
string|"'role:admin'"
op|')'
op|'}'
newline|'\n'
name|'common_policy'
op|'.'
name|'set_rules'
op|'('
name|'common_policy'
op|'.'
name|'Rules'
op|'('
name|'rule'
op|')'
op|')'
newline|'\n'
name|'return'
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/1234/action'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_active
dedent|''
name|'def'
name|'test_active'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_get_with_state'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'['
string|"'server'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'ACTIVE'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot
dedent|''
name|'def'
name|'test_reboot'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_get_with_state'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'REBOOTING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'['
string|"'server'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'REBOOT'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_hard
dedent|''
name|'def'
name|'test_reboot_hard'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_get_with_state'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'REBOOTING_HARD'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'['
string|"'server'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'HARD_REBOOT'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_resize_policy_fail
dedent|''
name|'def'
name|'test_reboot_resize_policy_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'_req_with_policy_fail'
op|'('
string|"'reboot'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_reboot'
op|','
name|'req'
op|','
string|"'1234'"
op|','
nl|'\n'
op|'{'
string|"'reboot'"
op|':'
op|'{'
string|"'type'"
op|':'
string|"'HARD'"
op|'}'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild
dedent|''
name|'def'
name|'test_rebuild'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_get_with_state'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'REBUILDING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'['
string|"'server'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'REBUILD'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rebuild_error
dedent|''
name|'def'
name|'test_rebuild_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_get_with_state'
op|'('
name|'vm_states'
op|'.'
name|'ERROR'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'['
string|"'server'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'ERROR'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize
dedent|''
name|'def'
name|'test_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_get_with_state'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'RESIZE_PREP'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'['
string|"'server'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'RESIZE'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_confirm_resize_policy_fail
dedent|''
name|'def'
name|'test_confirm_resize_policy_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'_req_with_policy_fail'
op|'('
string|"'confirm_resize'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_confirm_resize'
op|','
name|'req'
op|','
string|"'1234'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_verify_resize
dedent|''
name|'def'
name|'test_verify_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_get_with_state'
op|'('
name|'vm_states'
op|'.'
name|'RESIZED'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'['
string|"'server'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'VERIFY_RESIZE'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_revert_resize
dedent|''
name|'def'
name|'test_revert_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_get_with_state'
op|'('
name|'vm_states'
op|'.'
name|'RESIZED'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'RESIZE_REVERTING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'['
string|"'server'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'REVERT_RESIZE'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_revert_resize_policy_fail
dedent|''
name|'def'
name|'test_revert_resize_policy_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'_req_with_policy_fail'
op|'('
string|"'revert_resize'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'PolicyNotAuthorized'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_action_revert_resize'
op|','
name|'req'
op|','
string|"'1234'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_password_update
dedent|''
name|'def'
name|'test_password_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_get_with_state'
op|'('
name|'vm_states'
op|'.'
name|'ACTIVE'
op|','
nl|'\n'
name|'task_states'
op|'.'
name|'UPDATING_PASSWORD'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'['
string|"'server'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'PASSWORD'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stopped
dedent|''
name|'def'
name|'test_stopped'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'_get_with_state'
op|'('
name|'vm_states'
op|'.'
name|'STOPPED'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response'
op|'['
string|"'server'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'SHUTOFF'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersControllerCreateTest
dedent|''
dedent|''
name|'class'
name|'ServersControllerCreateTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|image_uuid
indent|'    '
name|'image_uuid'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
newline|'\n'
DECL|variable|flavor_ref
name|'flavor_ref'
op|'='
string|"'http://localhost/123/flavors/3'"
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Shared implementation for tests below that create instance."""'
newline|'\n'
name|'super'
op|'('
name|'ServersControllerCreateTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'verbose'
op|'='
name|'True'
op|','
nl|'\n'
name|'enable_instance_password'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance_cache_num'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'instance_cache_by_id'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'instance_cache_by_uuid'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'fakes'
op|'.'
name|'stub_out_nw_api'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'ext_mgr'
op|'='
name|'extensions'
op|'.'
name|'ExtensionManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'servers'
op|'.'
name|'Controller'
op|'('
name|'self'
op|'.'
name|'ext_mgr'
op|')'
newline|'\n'
name|'nova_utils'
op|'.'
name|'reset_is_neutron'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'volume_id'
op|'='
string|"'fake'"
newline|'\n'
nl|'\n'
DECL|function|instance_create
name|'def'
name|'instance_create'
op|'('
name|'context'
op|','
name|'inst'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'inst_type'
op|'='
name|'flavors'
op|'.'
name|'get_flavor_by_flavor_id'
op|'('
number|'3'
op|')'
newline|'\n'
name|'image_uuid'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
newline|'\n'
name|'def_image_ref'
op|'='
string|"'http://localhost/images/%s'"
op|'%'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'instance_cache_num'
op|'+='
number|'1'
newline|'\n'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_db_instance'
op|'('
op|'**'
op|'{'
nl|'\n'
string|"'id'"
op|':'
name|'self'
op|'.'
name|'instance_cache_num'
op|','
nl|'\n'
string|"'display_name'"
op|':'
name|'inst'
op|'['
string|"'display_name'"
op|']'
name|'or'
string|"'test'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
name|'FAKE_UUID'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'dict'
op|'('
name|'inst_type'
op|')'
op|','
nl|'\n'
string|"'access_ip_v4'"
op|':'
string|"'1.2.3.4'"
op|','
nl|'\n'
string|"'access_ip_v6'"
op|':'
string|"'fead::1234'"
op|','
nl|'\n'
string|"'image_ref'"
op|':'
name|'inst'
op|'.'
name|'get'
op|'('
string|"'image_ref'"
op|','
name|'def_image_ref'
op|')'
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'project_id'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'reservation_id'"
op|':'
name|'inst'
op|'['
string|"'reservation_id'"
op|']'
op|','
nl|'\n'
string|'"created_at"'
op|':'
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2010'
op|','
number|'10'
op|','
number|'10'
op|','
number|'12'
op|','
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
string|'"updated_at"'
op|':'
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2010'
op|','
number|'11'
op|','
number|'11'
op|','
number|'11'
op|','
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
string|'"config_drive"'
op|':'
name|'None'
op|','
nl|'\n'
string|'"progress"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"fixed_ips"'
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|'"task_state"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"vm_state"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"root_device_name"'
op|':'
name|'inst'
op|'.'
name|'get'
op|'('
string|"'root_device_name'"
op|','
string|"'vda'"
op|')'
op|','
nl|'\n'
string|'"security_groups"'
op|':'
name|'inst'
op|'['
string|"'security_groups'"
op|']'
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'instance_cache_by_id'
op|'['
name|'instance'
op|'['
string|"'id'"
op|']'
op|']'
op|'='
name|'instance'
newline|'\n'
name|'self'
op|'.'
name|'instance_cache_by_uuid'
op|'['
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|']'
op|'='
name|'instance'
newline|'\n'
name|'return'
name|'instance'
newline|'\n'
nl|'\n'
DECL|function|instance_get
dedent|''
name|'def'
name|'instance_get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Stub for compute/api create() pulling in instance after\n            scheduling\n            """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'instance_cache_by_id'
op|'['
name|'instance_id'
op|']'
newline|'\n'
nl|'\n'
DECL|function|instance_update
dedent|''
name|'def'
name|'instance_update'
op|'('
name|'context'
op|','
name|'uuid'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'self'
op|'.'
name|'instance_cache_by_uuid'
op|'['
name|'uuid'
op|']'
newline|'\n'
name|'instance'
op|'.'
name|'update'
op|'('
name|'values'
op|')'
newline|'\n'
name|'return'
name|'instance'
newline|'\n'
nl|'\n'
DECL|function|server_update
dedent|''
name|'def'
name|'server_update'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
name|'params'
op|','
name|'update_cells'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'inst'
op|'='
name|'self'
op|'.'
name|'instance_cache_by_uuid'
op|'['
name|'instance_uuid'
op|']'
newline|'\n'
name|'inst'
op|'.'
name|'update'
op|'('
name|'params'
op|')'
newline|'\n'
name|'return'
name|'inst'
newline|'\n'
nl|'\n'
DECL|function|server_update_and_get_original
dedent|''
name|'def'
name|'server_update_and_get_original'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance_uuid'
op|','
name|'params'
op|','
name|'update_cells'
op|'='
name|'False'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'inst'
op|'='
name|'self'
op|'.'
name|'instance_cache_by_uuid'
op|'['
name|'instance_uuid'
op|']'
newline|'\n'
name|'inst'
op|'.'
name|'update'
op|'('
name|'params'
op|')'
newline|'\n'
name|'return'
op|'('
name|'inst'
op|','
name|'inst'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_method
dedent|''
name|'def'
name|'fake_method'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|project_get_networks
dedent|''
name|'def'
name|'project_get_networks'
op|'('
name|'context'
op|','
name|'user_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'dict'
op|'('
name|'id'
op|'='
string|"'1'"
op|','
name|'host'
op|'='
string|"'localhost'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|queue_get_for
dedent|''
name|'def'
name|'queue_get_for'
op|'('
name|'context'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'network_topic'"
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_out_rate_limiting'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_out_key_pair_funcs'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'fake'
op|'.'
name|'stub_out_image_service'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'uuid'
op|','
string|"'uuid4'"
op|','
name|'fake_gen_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_add_security_group'"
op|','
nl|'\n'
name|'return_security_group'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'project_get_networks'"
op|','
nl|'\n'
name|'project_get_networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_create'"
op|','
name|'instance_create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_system_metadata_update'"
op|','
nl|'\n'
name|'fake_method'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_get'"
op|','
name|'instance_get'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_update'"
op|','
name|'instance_update'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_update_and_get_original'"
op|','
nl|'\n'
name|'server_update_and_get_original'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'manager'
op|'.'
name|'VlanManager'
op|','
string|"'allocate_fixed_ip'"
op|','
nl|'\n'
name|'fake_method'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'='
op|'{'
nl|'\n'
string|"'server'"
op|':'
op|'{'
nl|'\n'
string|"'min_count'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'server_test'"
op|','
nl|'\n'
string|"'imageRef'"
op|':'
name|'self'
op|'.'
name|'image_uuid'
op|','
nl|'\n'
string|"'flavorRef'"
op|':'
name|'self'
op|'.'
name|'flavor_ref'
op|','
nl|'\n'
string|"'metadata'"
op|':'
op|'{'
nl|'\n'
string|"'hello'"
op|':'
string|"'world'"
op|','
nl|'\n'
string|"'open'"
op|':'
string|"'stack'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'personality'"
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"path"'
op|':'
string|'"/etc/banner.txt"'
op|','
nl|'\n'
string|'"contents"'
op|':'
string|'"MQ=="'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'bdm'
op|'='
op|'['
op|'{'
string|"'delete_on_termination'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'device_name'"
op|':'
number|'123'
op|','
nl|'\n'
string|"'volume_size'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'11111111-1111-1111-1111-111111111111'"
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'headers'
op|'['
string|'"content-type"'
op|']'
op|'='
string|'"application/json"'
newline|'\n'
nl|'\n'
DECL|member|_check_admin_pass_len
dedent|''
name|'def'
name|'_check_admin_pass_len'
op|'('
name|'self'
op|','
name|'server_dict'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""utility function - check server_dict for adminPass length."""'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'CONF'
op|'.'
name|'password_length'
op|','
nl|'\n'
name|'len'
op|'('
name|'server_dict'
op|'['
string|'"adminPass"'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_admin_pass_missing
dedent|''
name|'def'
name|'_check_admin_pass_missing'
op|'('
name|'self'
op|','
name|'server_dict'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""utility function - check server_dict for absence of adminPass."""'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|'"adminPass"'
op|','
name|'server_dict'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_create_instance
dedent|''
name|'def'
name|'_test_create_instance'
op|'('
name|'self'
op|','
name|'flavor'
op|'='
number|'2'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_uuid'
op|'='
string|"'c905cedb-7281-47e4-8a62-f26bc5fc4c77'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
name|'flavor'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_check_admin_pass_len'
op|'('
name|'server'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'FAKE_UUID'
op|','
name|'server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_private_flavor
dedent|''
name|'def'
name|'test_create_instance_private_flavor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'values'
op|'='
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'fake_name'"
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'512'
op|','
nl|'\n'
string|"'vcpus'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'flavorid'"
op|':'
string|"'1324'"
op|','
nl|'\n'
string|"'swap'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rxtx_factor'"
op|':'
number|'0.5'
op|','
nl|'\n'
string|"'vcpu_weight'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'disabled'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'is_public'"
op|':'
name|'False'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'flavor_create'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'values'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'_test_create_instance'
op|','
nl|'\n'
name|'flavor'
op|'='
number|'1324'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_server_bad_image_href
dedent|''
name|'def'
name|'test_create_server_bad_image_href'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_href'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
op|','
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_server_with_invalid_networks_parameter
dedent|''
name|'def'
name|'test_create_server_with_invalid_networks_parameter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-networks'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'networks'"
op|']'
op|'='
op|'{'
nl|'\n'
string|"'uuid'"
op|':'
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
nl|'\n'
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_server_with_deleted_image
dedent|''
name|'def'
name|'test_create_server_with_deleted_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_uuid'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
newline|'\n'
comment|'# Get the fake image service so we can set the status to deleted'
nl|'\n'
op|'('
name|'image_service'
op|','
name|'image_id'
op|')'
op|'='
name|'glance'
op|'.'
name|'get_remote_image_service'
op|'('
nl|'\n'
name|'context'
op|','
string|"''"
op|')'
newline|'\n'
name|'image_service'
op|'.'
name|'update'
op|'('
name|'context'
op|','
name|'image_uuid'
op|','
op|'{'
string|"'status'"
op|':'
string|"'DELETED'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'image_service'
op|'.'
name|'update'
op|','
name|'context'
op|','
name|'image_uuid'
op|','
nl|'\n'
op|'{'
string|"'status'"
op|':'
string|"'active'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
number|'2'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'with'
name|'testtools'
op|'.'
name|'ExpectedException'
op|'('
nl|'\n'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
string|"'Image 76fa36fc-c930-4bf3-8c8a-ea2a2420deb6 is not active.'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_server_image_too_large
dedent|''
dedent|''
name|'def'
name|'test_create_server_image_too_large'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_uuid'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
newline|'\n'
comment|'# Get the fake image service so we can set the status to deleted'
nl|'\n'
op|'('
name|'image_service'
op|','
name|'image_id'
op|')'
op|'='
name|'glance'
op|'.'
name|'get_remote_image_service'
op|'('
name|'context'
op|','
nl|'\n'
name|'image_uuid'
op|')'
newline|'\n'
name|'image'
op|'='
name|'image_service'
op|'.'
name|'show'
op|'('
name|'context'
op|','
name|'image_id'
op|')'
newline|'\n'
name|'orig_size'
op|'='
name|'image'
op|'['
string|"'size'"
op|']'
newline|'\n'
name|'new_size'
op|'='
name|'str'
op|'('
number|'1000'
op|'*'
op|'('
number|'1024'
op|'**'
number|'3'
op|')'
op|')'
newline|'\n'
name|'image_service'
op|'.'
name|'update'
op|'('
name|'context'
op|','
name|'image_uuid'
op|','
op|'{'
string|"'size'"
op|':'
name|'new_size'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'image_service'
op|'.'
name|'update'
op|','
name|'context'
op|','
name|'image_uuid'
op|','
nl|'\n'
op|'{'
string|"'size'"
op|':'
name|'orig_size'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
number|'2'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'with'
name|'testtools'
op|'.'
name|'ExpectedException'
op|'('
nl|'\n'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
string|'"Flavor\'s disk is too small for requested image."'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_invalid_negative_min
dedent|''
dedent|''
name|'def'
name|'test_create_instance_invalid_negative_min'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-multiple-create'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'min_count'"
op|']'
op|'='
op|'-'
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
nl|'\n'
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_invalid_negative_max
dedent|''
name|'def'
name|'test_create_instance_invalid_negative_max'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-multiple-create'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'max_count'"
op|']'
op|'='
op|'-'
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
nl|'\n'
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_invalid_alpha_min
dedent|''
name|'def'
name|'test_create_instance_invalid_alpha_min'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-multiple-create'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'min_count'"
op|']'
op|'='
string|"'abcd'"
op|','
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
nl|'\n'
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_invalid_alpha_max
dedent|''
name|'def'
name|'test_create_instance_invalid_alpha_max'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-multiple-create'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'max_count'"
op|']'
op|'='
string|"'abcd'"
op|','
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
nl|'\n'
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_multiple_instances
dedent|''
name|'def'
name|'test_create_multiple_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test creating multiple instances but not asking for\n        reservation_id\n        """'
newline|'\n'
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-multiple-create'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'FAKE_UUID'
op|','
name|'res'
op|'['
string|'"server"'
op|']'
op|'['
string|'"id"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_admin_pass_len'
op|'('
name|'res'
op|'['
string|'"server"'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_multiple_instances_pass_disabled
dedent|''
name|'def'
name|'test_create_multiple_instances_pass_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test creating multiple instances but not asking for\n        reservation_id\n        """'
newline|'\n'
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-multiple-create'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'enable_instance_password'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'FAKE_UUID'
op|','
name|'res'
op|'['
string|'"server"'
op|']'
op|'['
string|'"id"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_admin_pass_missing'
op|'('
name|'res'
op|'['
string|'"server"'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_multiple_instances_resv_id_return
dedent|''
name|'def'
name|'test_create_multiple_instances_resv_id_return'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test creating multiple instances with asking for\n        reservation_id\n        """'
newline|'\n'
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-multiple-create'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'return_reservation_id'"
op|']'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'reservation_id'
op|'='
name|'res'
op|'.'
name|'obj'
op|'.'
name|'get'
op|'('
string|"'reservation_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'reservation_id'
op|','
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsNotNone'
op|'('
name|'reservation_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'reservation_id'
op|')'
op|'>'
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_multiple_instances_with_multiple_volume_bdm
dedent|''
name|'def'
name|'test_create_multiple_instances_with_multiple_volume_bdm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test that a BadRequest is raised if multiple instances\n        are requested with a list of block device mappings for volumes.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-multiple-create'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'min_count'
op|'='
number|'2'
newline|'\n'
name|'bdm'
op|'='
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'foo1'"
op|','
string|"'volume_id'"
op|':'
string|"'vol-xxxx'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'foo2'"
op|','
string|"'volume_id'"
op|':'
string|"'vol-yyyy'"
op|'}'
nl|'\n'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
nl|'\n'
string|"'block_device_mapping'"
op|':'
name|'bdm'
op|','
nl|'\n'
string|"'min_count'"
op|':'
name|'min_count'
nl|'\n'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'min_count'"
op|']'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'kwargs'
op|'['
string|"'block_device_mapping'"
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|','
name|'no_image'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_multiple_instances_with_single_volume_bdm
dedent|''
name|'def'
name|'test_create_multiple_instances_with_single_volume_bdm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test that a BadRequest is raised if multiple instances\n        are requested to boot from a single volume.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-multiple-create'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'min_count'
op|'='
number|'2'
newline|'\n'
name|'bdm'
op|'='
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'foo1'"
op|','
string|"'volume_id'"
op|':'
string|"'vol-xxxx'"
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
nl|'\n'
string|"'block_device_mapping'"
op|':'
name|'bdm'
op|','
nl|'\n'
string|"'min_count'"
op|':'
name|'min_count'
nl|'\n'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'min_count'"
op|']'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'block_device_mapping'"
op|']'
op|'['
string|"'volume_id'"
op|']'
op|','
nl|'\n'
string|"'vol-xxxx'"
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|','
name|'no_image'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_multiple_instance_with_non_integer_max_count
dedent|''
name|'def'
name|'test_create_multiple_instance_with_non_integer_max_count'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-multiple-create'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'max_count'"
op|']'
op|'='
number|'2.5'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_multiple_instance_with_non_integer_min_count
dedent|''
name|'def'
name|'test_create_multiple_instance_with_non_integer_min_count'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-multiple-create'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'min_count'"
op|']'
op|'='
number|'2.5'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_image_ref_is_bookmark
dedent|''
name|'def'
name|'test_create_instance_image_ref_is_bookmark'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_href'
op|'='
string|"'http://localhost/fake/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
newline|'\n'
name|'server'
op|'='
name|'res'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'FAKE_UUID'
op|','
name|'server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_image_ref_is_invalid
dedent|''
name|'def'
name|'test_create_instance_image_ref_is_invalid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_uuid'
op|'='
string|"'this_is_not_a_valid_uuid'"
newline|'\n'
name|'image_href'
op|'='
string|"'http://localhost/fake/images/%s'"
op|'%'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_no_key_pair
dedent|''
name|'def'
name|'test_create_instance_no_key_pair'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fakes'
op|'.'
name|'stub_out_key_pair_funcs'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'have_key_pair'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_create_extra
dedent|''
name|'def'
name|'_test_create_extra'
op|'('
name|'self'
op|','
name|'params'
op|','
name|'no_image'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
number|'2'
newline|'\n'
name|'if'
name|'no_image'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'.'
name|'pop'
op|'('
string|"'imageRef'"
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'.'
name|'update'
op|'('
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
op|'['
string|"'server'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_security_group_enabled
dedent|''
name|'def'
name|'test_create_instance_with_security_group_enabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-security-groups'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'group'
op|'='
string|"'foo'"
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|sec_group_get
name|'def'
name|'sec_group_get'
op|'('
name|'ctx'
op|','
name|'proj'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'name'
op|'=='
name|'group'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'SecurityGroupNotFoundForProject'
op|'('
nl|'\n'
name|'project_id'
op|'='
name|'proj'
op|','
name|'security_group_id'
op|'='
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|function|create
dedent|''
dedent|''
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'security_group'"
op|']'
op|','
op|'['
name|'group'
op|']'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'security_group_get_by_name'"
op|','
name|'sec_group_get'
op|')'
newline|'\n'
comment|'# negative test'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
nl|'\n'
op|'{'
string|"'security_groups'"
op|':'
op|'['
op|'{'
string|"'name'"
op|':'
string|"'bogus'"
op|'}'
op|']'
op|'}'
op|')'
newline|'\n'
comment|'# positive test - extra assert in create path'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
op|'{'
string|"'security_groups'"
op|':'
op|'['
op|'{'
string|"'name'"
op|':'
name|'group'
op|'}'
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_non_unique_secgroup_name
dedent|''
name|'def'
name|'test_create_instance_with_non_unique_secgroup_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
string|"'nova.network.neutronv2.api.API'"
op|')'
newline|'\n'
name|'network'
op|'='
string|"'eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'networks'"
op|':'
name|'requested_networks'
op|','
nl|'\n'
string|"'security_groups'"
op|':'
op|'['
op|'{'
string|"'name'"
op|':'
string|"'dup'"
op|'}'
op|','
op|'{'
string|"'name'"
op|':'
string|"'dup'"
op|'}'
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_create
name|'def'
name|'fake_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'NoUniqueMatch'
op|'('
string|'"No Unique match found for ..."'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'fake_create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPConflict'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_access_ip
dedent|''
name|'def'
name|'test_create_instance_with_access_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# proper local hrefs must start with 'http://localhost/v2/'"
nl|'\n'
indent|'        '
name|'image_href'
op|'='
string|"'http://localhost/v2/fake/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'accessIPv4'"
op|']'
op|'='
string|"'1.2.3.4'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'accessIPv6'"
op|']'
op|'='
string|"'fead::1234'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
newline|'\n'
name|'server'
op|'='
name|'res'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_check_admin_pass_len'
op|'('
name|'server'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'FAKE_UUID'
op|','
name|'server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_access_ip_pass_disabled
dedent|''
name|'def'
name|'test_create_instance_with_access_ip_pass_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# test with admin passwords disabled See lp bug 921814'
nl|'\n'
comment|"# proper local hrefs must start with 'http://localhost/v2/'"
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enable_instance_password'
op|'='
name|'False'
op|')'
newline|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v2/fake/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'accessIPv4'"
op|']'
op|'='
string|"'1.2.3.4'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'accessIPv6'"
op|']'
op|'='
string|"'fead::1234'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
newline|'\n'
nl|'\n'
name|'server'
op|'='
name|'res'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_check_admin_pass_missing'
op|'('
name|'server'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'FAKE_UUID'
op|','
name|'server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_bad_format_access_ip_v4
dedent|''
name|'def'
name|'test_create_instance_bad_format_access_ip_v4'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# proper local hrefs must start with 'http://localhost/v2/'"
nl|'\n'
indent|'        '
name|'image_href'
op|'='
string|"'http://localhost/v2/fake/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'accessIPv4'"
op|']'
op|'='
string|"'bad_format'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'accessIPv6'"
op|']'
op|'='
string|"'fead::1234'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_bad_format_access_ip_v6
dedent|''
name|'def'
name|'test_create_instance_bad_format_access_ip_v6'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# proper local hrefs must start with 'http://localhost/v2/'"
nl|'\n'
indent|'        '
name|'image_href'
op|'='
string|"'http://localhost/v2/fake/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'accessIPv4'"
op|']'
op|'='
string|"'1.2.3.4'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'accessIPv6'"
op|']'
op|'='
string|"'bad_format'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_name_all_blank_spaces
dedent|''
name|'def'
name|'test_create_instance_name_all_blank_spaces'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# proper local hrefs must start with 'http://localhost/v2/'"
nl|'\n'
indent|'        '
name|'image_href'
op|'='
string|"'http://localhost/v2/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'name'"
op|']'
op|'='
string|"' '"
op|'*'
number|'64'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_name_too_long
dedent|''
name|'def'
name|'test_create_instance_name_too_long'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# proper local hrefs must start with 'http://localhost/v2/'"
nl|'\n'
indent|'        '
name|'image_href'
op|'='
string|"'http://localhost/v2/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'name'"
op|']'
op|'='
string|"'X'"
op|'*'
number|'256'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance
dedent|''
name|'def'
name|'test_create_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# proper local hrefs must start with 'http://localhost/v2/'"
nl|'\n'
indent|'        '
name|'image_href'
op|'='
string|"'http://localhost/v2/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
newline|'\n'
nl|'\n'
name|'server'
op|'='
name|'res'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_check_admin_pass_len'
op|'('
name|'server'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'FAKE_UUID'
op|','
name|'server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_pass_disabled
dedent|''
name|'def'
name|'test_create_instance_pass_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# proper local hrefs must start with 'http://localhost/v2/'"
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enable_instance_password'
op|'='
name|'False'
op|')'
newline|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v2/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
newline|'\n'
nl|'\n'
name|'server'
op|'='
name|'res'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_check_admin_pass_missing'
op|'('
name|'server'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'FAKE_UUID'
op|','
name|'server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_too_much_metadata
dedent|''
name|'def'
name|'test_create_instance_too_much_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'quota_metadata_items'
op|'='
number|'1'
op|')'
newline|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v2/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'metadata'"
op|']'
op|'['
string|"'vote'"
op|']'
op|'='
string|"'fiddletown'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPRequestEntityTooLarge'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_metadata_key_too_long
dedent|''
name|'def'
name|'test_create_instance_metadata_key_too_long'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'quota_metadata_items'
op|'='
number|'1'
op|')'
newline|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v2/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'metadata'"
op|']'
op|'='
op|'{'
op|'('
string|"'a'"
op|'*'
number|'260'
op|')'
op|':'
string|"'12345'"
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPRequestEntityTooLarge'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_metadata_value_too_long
dedent|''
name|'def'
name|'test_create_instance_metadata_value_too_long'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'quota_metadata_items'
op|'='
number|'1'
op|')'
newline|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v2/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'metadata'"
op|']'
op|'='
op|'{'
string|"'key1'"
op|':'
op|'('
string|"'a'"
op|'*'
number|'260'
op|')'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPRequestEntityTooLarge'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_metadata_key_blank
dedent|''
name|'def'
name|'test_create_instance_metadata_key_blank'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'quota_metadata_items'
op|'='
number|'1'
op|')'
newline|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v2/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'metadata'"
op|']'
op|'='
op|'{'
string|"''"
op|':'
string|"'abcd'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_metadata_not_dict
dedent|''
name|'def'
name|'test_create_instance_metadata_not_dict'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'quota_metadata_items'
op|'='
number|'1'
op|')'
newline|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v2/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'metadata'"
op|']'
op|'='
string|"'string'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_invalid_key_name
dedent|''
name|'def'
name|'test_create_instance_invalid_key_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_href'
op|'='
string|"'http://localhost/v2/images/2'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'key_name'"
op|']'
op|'='
string|"'nonexistentkey'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_valid_key_name
dedent|''
name|'def'
name|'test_create_instance_valid_key_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'key_name'"
op|']'
op|'='
string|"'key'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'FAKE_UUID'
op|','
name|'res'
op|'['
string|'"server"'
op|']'
op|'['
string|'"id"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_admin_pass_len'
op|'('
name|'res'
op|'['
string|'"server"'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_invalid_flavor_href
dedent|''
name|'def'
name|'test_create_instance_invalid_flavor_href'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_href'
op|'='
string|"'http://localhost/v2/images/2'"
newline|'\n'
name|'flavor_ref'
op|'='
string|"'http://localhost/v2/flavors/asdf'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
name|'flavor_ref'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_invalid_flavor_id_int
dedent|''
name|'def'
name|'test_create_instance_invalid_flavor_id_int'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_href'
op|'='
string|"'http://localhost/v2/images/2'"
newline|'\n'
name|'flavor_ref'
op|'='
op|'-'
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
name|'flavor_ref'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_bad_flavor_href
dedent|''
name|'def'
name|'test_create_instance_bad_flavor_href'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_href'
op|'='
string|"'http://localhost/v2/images/2'"
newline|'\n'
name|'flavor_ref'
op|'='
string|"'http://localhost/v2/flavors/17'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
name|'flavor_ref'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_config_drive
dedent|''
name|'def'
name|'test_create_instance_with_config_drive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-config-drive'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'config_drive'"
op|']'
op|'='
string|'"true"'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
newline|'\n'
name|'server'
op|'='
name|'res'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'FAKE_UUID'
op|','
name|'server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_bad_config_drive
dedent|''
name|'def'
name|'test_create_instance_with_bad_config_drive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-config-drive'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'config_drive'"
op|']'
op|'='
string|"'adcd'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_without_config_drive
dedent|''
name|'def'
name|'test_create_instance_without_config_drive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-config-drive'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
newline|'\n'
name|'server'
op|'='
name|'res'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'FAKE_UUID'
op|','
name|'server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_config_drive_disabled
dedent|''
name|'def'
name|'test_create_instance_with_config_drive_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'config_drive'
op|'='
op|'['
op|'{'
string|"'config_drive'"
op|':'
string|"'foo'"
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'config_drive'"
op|':'
name|'config_drive'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'kwargs'
op|'['
string|"'config_drive'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_bad_href
dedent|''
name|'def'
name|'test_create_instance_bad_href'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_href'
op|'='
string|"'asdf'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_local_href
dedent|''
name|'def'
name|'test_create_instance_local_href'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
newline|'\n'
nl|'\n'
name|'server'
op|'='
name|'res'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'FAKE_UUID'
op|','
name|'server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_admin_pass
dedent|''
name|'def'
name|'test_create_instance_admin_pass'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
number|'3'
op|','
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'adminPass'"
op|']'
op|'='
string|"'testpass'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
newline|'\n'
nl|'\n'
name|'server'
op|'='
name|'res'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'server'
op|'['
string|"'adminPass'"
op|']'
op|','
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'adminPass'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_admin_pass_pass_disabled
dedent|''
name|'def'
name|'test_create_instance_admin_pass_pass_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'enable_instance_password'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
number|'3'
op|','
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'adminPass'"
op|']'
op|'='
string|"'testpass'"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
newline|'\n'
nl|'\n'
name|'server'
op|'='
name|'res'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'adminPass'"
op|','
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'adminPass'"
op|','
name|'server'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_admin_pass_empty
dedent|''
name|'def'
name|'test_create_instance_admin_pass_empty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
number|'3'
op|','
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'adminPass'"
op|']'
op|'='
string|"''"
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
comment|"# The fact that the action doesn't raise is enough validation"
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_do_test_create_instance_above_quota
dedent|''
name|'def'
name|'_do_test_create_instance_above_quota'
op|'('
name|'self'
op|','
name|'resource'
op|','
name|'allowed'
op|','
name|'quota'
op|','
nl|'\n'
name|'expected_msg'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fakes'
op|'.'
name|'stub_out_instance_quota'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'allowed'
op|','
name|'quota'
op|','
name|'resource'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
number|'3'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'fail'
op|'('
string|"'expected quota to be exceeded'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPRequestEntityTooLarge'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'e'
op|'.'
name|'explanation'
op|','
name|'expected_msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_security_group_disabled
dedent|''
dedent|''
name|'def'
name|'test_create_instance_with_security_group_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'group'
op|'='
string|"'foo'"
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'security_groups'"
op|':'
op|'['
op|'{'
string|"'name'"
op|':'
name|'group'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(vish): if the security groups extension is not'
nl|'\n'
comment|'#             enabled, then security groups passed in'
nl|'\n'
comment|'#             are ignored.'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'security_group'"
op|']'
op|','
op|'['
string|"'default'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_disk_config_enabled
dedent|''
name|'def'
name|'test_create_instance_with_disk_config_enabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'OS-DCF'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
comment|'# NOTE(vish): the extension converts OS-DCF:disk_config into'
nl|'\n'
comment|'#             auto_disk_config, so we are testing with'
nl|'\n'
comment|'#             the_internal_value'
nl|'\n'
name|'params'
op|'='
op|'{'
string|"'auto_disk_config'"
op|':'
string|"'AUTO'"
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'auto_disk_config'"
op|']'
op|','
string|"'AUTO'"
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_disk_config_disabled
dedent|''
name|'def'
name|'test_create_instance_with_disk_config_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
op|'{'
string|"'auto_disk_config'"
op|':'
name|'True'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'auto_disk_config'"
op|']'
op|','
name|'False'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_scheduler_hints_enabled
dedent|''
name|'def'
name|'test_create_instance_with_scheduler_hints_enabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'OS-SCH-HNT'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'hints'
op|'='
op|'{'
string|"'a'"
op|':'
string|"'b'"
op|'}'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'scheduler_hints'"
op|':'
name|'hints'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'scheduler_hints'"
op|']'
op|','
name|'hints'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_scheduler_hints_disabled
dedent|''
name|'def'
name|'test_create_instance_with_scheduler_hints_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'hints'
op|'='
op|'{'
string|"'a'"
op|':'
string|"'b'"
op|'}'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'scheduler_hints'"
op|':'
name|'hints'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'scheduler_hints'"
op|']'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_volumes_enabled
dedent|''
name|'def'
name|'test_create_instance_with_volumes_enabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-volumes'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'bdm'
op|'='
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'foo'"
op|','
string|"'volume_id'"
op|':'
string|"'fake_vol'"
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
name|'bdm'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'block_device_mapping'"
op|']'
op|','
name|'bdm'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_validate_bdm
dedent|''
name|'def'
name|'_validate_bdm'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_validate_bdm'"
op|','
name|'_validate_bdm'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_volumes_enabled_no_image
dedent|''
name|'def'
name|'test_create_instance_with_volumes_enabled_no_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test that the create will fail if there is no image\n        and no bdms supplied in the request\n        """'
newline|'\n'
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-volumes'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'imageRef'"
op|','
name|'kwargs'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
op|'{'
op|'}'
op|','
name|'no_image'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_bdm_v2_enabled_no_image
dedent|''
name|'def'
name|'test_create_instance_with_bdm_v2_enabled_no_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-block-device-mapping-v2-boot'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'imageRef'"
op|','
name|'kwargs'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
op|'{'
op|'}'
op|','
name|'no_image'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_volumes_enabled_and_bdms_no_image
dedent|''
name|'def'
name|'test_create_instance_with_volumes_enabled_and_bdms_no_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test that the create works if there is no image supplied but\n        os-volumes extension is enabled and bdms are supplied\n        """'
newline|'\n'
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-volumes'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_validate_bdm'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_get_bdm_image_metadata'"
op|')'
newline|'\n'
name|'bdm'
op|'='
op|'['
op|'{'
nl|'\n'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'no_device'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'virtual_name'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'snapshot_id'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'volume_id'"
op|':'
name|'self'
op|'.'
name|'volume_id'
op|','
nl|'\n'
string|"'status'"
op|':'
string|"'active'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'vda'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'volume_image_metadata'"
op|':'
nl|'\n'
op|'{'
string|"'test_key'"
op|':'
string|"'test_value'"
op|'}'
nl|'\n'
op|'}'
op|']'
newline|'\n'
name|'volume'
op|'='
name|'bdm'
op|'['
number|'0'
op|']'
newline|'\n'
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'_validate_bdm'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'_get_bdm_image_metadata'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'bdm'
op|','
name|'True'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'volume'
op|')'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
name|'bdm'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'block_device_mapping'"
op|']'
op|','
name|'bdm'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'imageRef'"
op|','
name|'kwargs'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_validate_bdm
dedent|''
name|'def'
name|'_validate_bdm'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|','
name|'no_image'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_bdm_v2_enabled_and_bdms_no_image
dedent|''
name|'def'
name|'test_create_instance_with_bdm_v2_enabled_and_bdms_no_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
nl|'\n'
string|"'os-volumes'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'os-block-device-mapping-v2-boot'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'bdm_v2'
op|'='
op|'['
op|'{'
nl|'\n'
string|"'no_device'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
name|'self'
op|'.'
name|'volume_id'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'vda'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|','
nl|'\n'
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'block_device_mapping_v2'"
op|':'
name|'bdm_v2'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'block_device'
op|'.'
name|'BlockDeviceDict'
op|'('
name|'bdm_v2'
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
nl|'\n'
name|'kwargs'
op|'['
string|"'block_device_mapping'"
op|']'
op|'['
number|'0'
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'imageRef'"
op|','
name|'kwargs'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_validate_bdm'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_get_bdm_image_metadata'"
op|')'
newline|'\n'
nl|'\n'
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'_validate_bdm'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'True'
op|')'
newline|'\n'
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'_get_bdm_image_metadata'
op|'('
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
name|'False'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|','
name|'no_image'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_volumes_disabled
dedent|''
name|'def'
name|'test_create_instance_with_volumes_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bdm'
op|'='
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'foo'"
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
name|'bdm'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'kwargs'
op|'['
string|"'block_device_mapping'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_device_name_not_string
dedent|''
name|'def'
name|'test_create_instance_with_device_name_not_string'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-volumes'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
name|'self'
op|'.'
name|'params'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
name|'self'
op|'.'
name|'bdm'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'block_device_mapping'"
op|']'
op|','
name|'self'
op|'.'
name|'bdm'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'self'
op|'.'
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_device_name_empty
dedent|''
name|'def'
name|'test_create_instance_with_device_name_empty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-volumes'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'bdm'
op|'['
number|'0'
op|']'
op|'['
string|"'device_name'"
op|']'
op|'='
string|"''"
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
name|'self'
op|'.'
name|'bdm'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'block_device_mapping'"
op|']'
op|','
name|'self'
op|'.'
name|'bdm'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_device_name_too_long
dedent|''
name|'def'
name|'test_create_instance_with_device_name_too_long'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-volumes'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'bdm'
op|'['
number|'0'
op|']'
op|'['
string|"'device_name'"
op|']'
op|'='
string|"'a'"
op|'*'
number|'256'
op|','
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
name|'self'
op|'.'
name|'bdm'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'block_device_mapping'"
op|']'
op|','
name|'self'
op|'.'
name|'bdm'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_space_in_device_name
dedent|''
name|'def'
name|'test_create_instance_with_space_in_device_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-volumes'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'bdm'
op|'['
number|'0'
op|']'
op|'['
string|"'device_name'"
op|']'
op|'='
string|"'vd a'"
op|','
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
name|'self'
op|'.'
name|'bdm'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'kwargs'
op|'['
string|"'legacy_bdm'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'block_device_mapping'"
op|']'
op|','
name|'self'
op|'.'
name|'bdm'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_invalid_size
dedent|''
name|'def'
name|'test_create_instance_with_invalid_size'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-volumes'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'bdm'
op|'='
op|'['
op|'{'
string|"'delete_on_termination'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'vda'"
op|','
nl|'\n'
string|"'volume_size'"
op|':'
string|'"hello world"'
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'11111111-1111-1111-1111-111111111111'"
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
name|'bdm'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'block_device_mapping'"
op|']'
op|','
name|'bdm'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_bdm_api_validation_fails
dedent|''
name|'def'
name|'test_create_instance_bdm_api_validation_fails'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-volumes'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'os-block-device-mapping-v2-boot'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'bdm'
op|'='
op|'{'
string|"'delete_on_termination'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'vda'"
op|','
nl|'\n'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'destination_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'volume_size'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'boot_index'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'11111111-1111-1111-1111-111111111111'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'validation_fail_test_validate_called'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'validation_fail_instance_destroy_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'bdm_exceptions'
op|'='
op|'('
op|'('
name|'exception'
op|'.'
name|'InvalidBDMSnapshot'
op|','
op|'{'
string|"'id'"
op|':'
string|"'fake'"
op|'}'
op|')'
op|','
nl|'\n'
op|'('
name|'exception'
op|'.'
name|'InvalidBDMVolume'
op|','
op|'{'
string|"'id'"
op|':'
string|"'fake'"
op|'}'
op|')'
op|','
nl|'\n'
op|'('
name|'exception'
op|'.'
name|'InvalidBDMImage'
op|','
op|'{'
string|"'id'"
op|':'
string|"'fake'"
op|'}'
op|')'
op|','
nl|'\n'
op|'('
name|'exception'
op|'.'
name|'InvalidBDMBootSequence'
op|','
op|'{'
op|'}'
op|')'
op|','
nl|'\n'
op|'('
name|'exception'
op|'.'
name|'InvalidBDMLocalsLimit'
op|','
op|'{'
op|'}'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'ex_iter'
op|'='
name|'iter'
op|'('
name|'bdm_exceptions'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_validate_bdm
name|'def'
name|'_validate_bdm'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'validation_fail_test_validate_called'
op|'='
name|'True'
newline|'\n'
name|'ex'
op|','
name|'kargs'
op|'='
name|'ex_iter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'raise'
name|'ex'
op|'('
op|'**'
name|'kargs'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_instance_destroy
dedent|''
name|'def'
name|'_instance_destroy'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'validation_fail_instance_destroy_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_validate_bdm'"
op|','
name|'_validate_bdm'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_destroy'"
op|','
name|'_instance_destroy'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'_'
name|'in'
name|'xrange'
op|'('
name|'len'
op|'('
name|'bdm_exceptions'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'='
op|'{'
string|"'block_device_mapping_v2'"
op|':'
op|'['
name|'bdm'
op|'.'
name|'copy'
op|'('
op|')'
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'validation_fail_test_validate_called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'validation_fail_test_validate_called'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'validation_fail_test_validate_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_bdm_delete_on_termination
dedent|''
dedent|''
name|'def'
name|'test_create_instance_with_bdm_delete_on_termination'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-volumes'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'bdm'
op|'='
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'foo1'"
op|','
string|"'volume_id'"
op|':'
string|"'fake_vol'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'foo2'"
op|','
string|"'volume_id'"
op|':'
string|"'fake_vol'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'foo3'"
op|','
string|"'volume_id'"
op|':'
string|"'fake_vol'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
string|"'invalid'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'foo4'"
op|','
string|"'volume_id'"
op|':'
string|"'fake_vol'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'foo5'"
op|','
string|"'volume_id'"
op|':'
string|"'fake_vol'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|'}'
op|']'
newline|'\n'
name|'expected_bdm'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'foo1'"
op|','
string|"'volume_id'"
op|':'
string|"'fake_vol'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'foo2'"
op|','
string|"'volume_id'"
op|':'
string|"'fake_vol'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'foo3'"
op|','
string|"'volume_id'"
op|':'
string|"'fake_vol'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'foo4'"
op|','
string|"'volume_id'"
op|':'
string|"'fake_vol'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device_name'"
op|':'
string|"'foo5'"
op|','
string|"'volume_id'"
op|':'
string|"'fake_vol'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
name|'False'
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
name|'bdm'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_bdm'
op|','
name|'kwargs'
op|'['
string|"'block_device_mapping'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_validate_bdm
dedent|''
name|'def'
name|'_validate_bdm'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_validate_bdm'"
op|','
name|'_validate_bdm'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_bdm_v2
dedent|''
name|'def'
name|'test_create_instance_bdm_v2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-volumes'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'os-block-device-mapping-v2-boot'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'bdm_v2'
op|'='
op|'['
op|'{'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'fake_dev'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'fake_vol'"
op|'}'
op|']'
newline|'\n'
name|'bdm_v2_expected'
op|'='
op|'['
op|'{'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'fake_dev'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'fake_vol'"
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'block_device_mapping_v2'"
op|':'
name|'bdm_v2'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'kwargs'
op|'['
string|"'legacy_bdm'"
op|']'
op|')'
newline|'\n'
name|'for'
name|'expected'
op|','
name|'received'
name|'in'
name|'zip'
op|'('
name|'bdm_v2_expected'
op|','
nl|'\n'
name|'kwargs'
op|'['
string|"'block_device_mapping'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'block_device'
op|'.'
name|'BlockDeviceDict'
op|'('
name|'expected'
op|')'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'received'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_validate_bdm
dedent|''
name|'def'
name|'_validate_bdm'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_validate_bdm'"
op|','
name|'_validate_bdm'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_decide_format_legacy
dedent|''
name|'def'
name|'test_create_instance_decide_format_legacy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-volumes'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'os-block-device-mapping-v2-boot'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'bdm'
op|'='
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'foo1'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'fake_vol'"
op|','
nl|'\n'
string|"'delete_on_termination'"
op|':'
number|'1'
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'expected_legacy_flag'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'legacy_bdm'"
op|']'
op|','
name|'expected_legacy_flag'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_validate_bdm
dedent|''
name|'def'
name|'_validate_bdm'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_validate_bdm'"
op|','
nl|'\n'
name|'_validate_bdm'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'params'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
name|'bdm'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_decide_format_new
dedent|''
name|'def'
name|'test_create_instance_decide_format_new'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-volumes'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'os-block-device-mapping-v2-boot'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
nl|'\n'
name|'bdm_v2'
op|'='
op|'['
op|'{'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'fake_dev'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'fake_vol'"
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
name|'expected_legacy_flag'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'legacy_bdm'"
op|']'
op|','
name|'expected_legacy_flag'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_validate_bdm
dedent|''
name|'def'
name|'_validate_bdm'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'_validate_bdm'"
op|','
nl|'\n'
name|'_validate_bdm'
op|')'
newline|'\n'
nl|'\n'
name|'params'
op|'='
op|'{'
string|"'block_device_mapping_v2'"
op|':'
name|'bdm_v2'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_both_bdm_formats
dedent|''
name|'def'
name|'test_create_instance_both_bdm_formats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-volumes'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'os-block-device-mapping-v2-boot'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'bdm'
op|'='
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'foo'"
op|'}'
op|']'
newline|'\n'
name|'bdm_v2'
op|'='
op|'['
op|'{'
string|"'source_type'"
op|':'
string|"'volume'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'fake_vol'"
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'block_device_mapping'"
op|':'
name|'bdm'
op|','
nl|'\n'
string|"'block_device_mapping_v2'"
op|':'
name|'bdm_v2'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_bdm_v2_validation_error
dedent|''
name|'def'
name|'test_create_instance_bdm_v2_validation_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-volumes'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'os-block-device-mapping-v2-boot'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'bdm_v2'
op|'='
op|'['
op|'{'
string|"'device_name'"
op|':'
string|"'bogus device'"
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'block_device_mapping_v2'"
op|':'
name|'bdm_v2'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|_validate
name|'def'
name|'_validate'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InvalidBDMFormat'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'block_device'
op|'.'
name|'BlockDeviceDict'
op|','
nl|'\n'
string|"'_validate'"
op|','
name|'_validate'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_user_data_enabled
dedent|''
name|'def'
name|'test_create_instance_with_user_data_enabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-user-data'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'user_data'
op|'='
string|"'fake'"
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'user_data'"
op|':'
name|'user_data'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'user_data'"
op|']'
op|','
name|'user_data'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_user_data_disabled
dedent|''
name|'def'
name|'test_create_instance_with_user_data_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'user_data'
op|'='
string|"'fake'"
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'user_data'"
op|':'
name|'user_data'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'kwargs'
op|'['
string|"'user_data'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_keypairs_enabled
dedent|''
name|'def'
name|'test_create_instance_with_keypairs_enabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-keypairs'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'key_name'
op|'='
string|"'green'"
newline|'\n'
nl|'\n'
name|'params'
op|'='
op|'{'
string|"'key_name'"
op|':'
name|'key_name'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
comment|'# NOTE(sdague): key pair goes back to the database,'
nl|'\n'
comment|'# so we need to stub it out for tests'
nl|'\n'
DECL|function|key_pair_get
name|'def'
name|'key_pair_get'
op|'('
name|'context'
op|','
name|'user_id'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'dict'
op|'('
name|'test_keypair'
op|'.'
name|'fake_keypair'
op|','
nl|'\n'
name|'public_key'
op|'='
string|"'FAKE_KEY'"
op|','
nl|'\n'
name|'fingerprint'
op|'='
string|"'FAKE_FINGERPRINT'"
op|','
nl|'\n'
name|'name'
op|'='
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|function|create
dedent|''
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'key_name'"
op|']'
op|','
name|'key_name'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'key_pair_get'"
op|','
name|'key_pair_get'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_keypairs_disabled
dedent|''
name|'def'
name|'test_create_instance_with_keypairs_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'key_name'
op|'='
string|"'green'"
newline|'\n'
nl|'\n'
name|'params'
op|'='
op|'{'
string|"'key_name'"
op|':'
name|'key_name'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'kwargs'
op|'['
string|"'key_name'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_availability_zone_enabled
dedent|''
name|'def'
name|'test_create_instance_with_availability_zone_enabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-availability-zone'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'availability_zone'
op|'='
string|"'fake'"
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'availability_zone'"
op|':'
name|'availability_zone'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'availability_zone'"
op|']'
op|','
name|'availability_zone'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'expected'
op|'='
string|"'The requested availability zone is not available'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'e'
op|'.'
name|'explanation'
op|','
name|'expected'
op|')'
newline|'\n'
dedent|''
name|'admin_context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'service1'
op|'='
name|'db'
op|'.'
name|'service_create'
op|'('
name|'admin_context'
op|','
op|'{'
string|"'host'"
op|':'
string|"'host1_zones'"
op|','
nl|'\n'
string|"'binary'"
op|':'
string|'"nova-compute"'
op|','
nl|'\n'
string|"'topic'"
op|':'
string|"'compute'"
op|','
nl|'\n'
string|"'report_count'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
name|'agg'
op|'='
name|'db'
op|'.'
name|'aggregate_create'
op|'('
name|'admin_context'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'agg1'"
op|'}'
op|','
op|'{'
string|"'availability_zone'"
op|':'
name|'availability_zone'
op|'}'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'aggregate_host_add'
op|'('
name|'admin_context'
op|','
name|'agg'
op|'['
string|"'id'"
op|']'
op|','
string|"'host1_zones'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_availability_zone_disabled
dedent|''
name|'def'
name|'test_create_instance_with_availability_zone_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'availability_zone'
op|'='
string|"'fake'"
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'availability_zone'"
op|':'
name|'availability_zone'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'kwargs'
op|'['
string|"'availability_zone'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_multiple_create_enabled
dedent|''
name|'def'
name|'test_create_instance_with_multiple_create_enabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-multiple-create'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'min_count'
op|'='
number|'2'
newline|'\n'
name|'max_count'
op|'='
number|'3'
newline|'\n'
name|'params'
op|'='
op|'{'
nl|'\n'
string|"'min_count'"
op|':'
name|'min_count'
op|','
nl|'\n'
string|"'max_count'"
op|':'
name|'max_count'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'min_count'"
op|']'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'max_count'"
op|']'
op|','
number|'3'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_multiple_create_disabled
dedent|''
name|'def'
name|'test_create_instance_with_multiple_create_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ret_res_id'
op|'='
name|'True'
newline|'\n'
name|'min_count'
op|'='
number|'2'
newline|'\n'
name|'max_count'
op|'='
number|'3'
newline|'\n'
name|'params'
op|'='
op|'{'
nl|'\n'
string|"'min_count'"
op|':'
name|'min_count'
op|','
nl|'\n'
string|"'max_count'"
op|':'
name|'max_count'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'min_count'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'max_count'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_networks_enabled
dedent|''
name|'def'
name|'test_create_instance_with_networks_enabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
string|"'os-networks'"
op|':'
string|"'fake'"
op|'}'
newline|'\n'
name|'net_uuid'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'net_uuid'
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'networks'"
op|':'
name|'requested_networks'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
op|'['
op|'('
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
op|','
name|'None'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'requested_networks'"
op|']'
op|','
name|'result'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_neutronv2_port_in_use
dedent|''
name|'def'
name|'test_create_instance_with_neutronv2_port_in_use'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
string|"'nova.network.neutronv2.api.API'"
op|')'
newline|'\n'
name|'network'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'port'
op|'='
string|"'eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|','
string|"'port'"
op|':'
name|'port'
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'networks'"
op|':'
name|'requested_networks'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_create
name|'def'
name|'fake_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'PortInUse'
op|'('
name|'port_id'
op|'='
name|'port'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'fake_create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPConflict'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_neturonv2_not_found_network
dedent|''
name|'def'
name|'test_create_instance_with_neturonv2_not_found_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
string|"'nova.network.neutronv2.api.API'"
op|')'
newline|'\n'
name|'network'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'networks'"
op|':'
name|'requested_networks'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_create
name|'def'
name|'fake_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'NetworkNotFound'
op|'('
name|'network_id'
op|'='
name|'network'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'fake_create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_neutronv2_port_not_found
dedent|''
name|'def'
name|'test_create_instance_with_neutronv2_port_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
string|"'nova.network.neutronv2.api.API'"
op|')'
newline|'\n'
name|'network'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'port'
op|'='
string|"'eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|','
string|"'port'"
op|':'
name|'port'
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'networks'"
op|':'
name|'requested_networks'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_create
name|'def'
name|'fake_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'PortNotFound'
op|'('
name|'port_id'
op|'='
name|'port'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'fake_create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_multiple_instance_with_neutronv2_port
dedent|''
name|'def'
name|'test_create_multiple_instance_with_neutronv2_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
string|"'nova.network.neutronv2.api.API'"
op|')'
newline|'\n'
name|'network'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
name|'port'
op|'='
string|"'eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee'"
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'max_count'"
op|']'
op|'='
number|'2'
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'network'
op|','
string|"'port'"
op|':'
name|'port'
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'networks'"
op|':'
name|'requested_networks'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_create
name|'def'
name|'fake_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"Unable to launch multiple instances with"'
nl|'\n'
string|'" a single configured port ID. Please launch your"'
nl|'\n'
string|'" instance one by one with different ports."'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'MultiplePortsNotApplicable'
op|'('
name|'reason'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'fake_create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_networks_disabled_neutronv2
dedent|''
name|'def'
name|'test_create_instance_with_networks_disabled_neutronv2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'network_api_class'
op|'='
string|"'nova.network.neutronv2.api.API'"
op|')'
newline|'\n'
name|'net_uuid'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'net_uuid'
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'networks'"
op|':'
name|'requested_networks'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
op|'['
op|'('
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'requested_networks'"
op|']'
op|','
name|'result'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_networks_disabled
dedent|''
name|'def'
name|'test_create_instance_with_networks_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'net_uuid'
op|'='
string|"'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'"
newline|'\n'
name|'requested_networks'
op|'='
op|'['
op|'{'
string|"'uuid'"
op|':'
name|'net_uuid'
op|'}'
op|']'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'networks'"
op|':'
name|'requested_networks'
op|'}'
newline|'\n'
name|'old_create'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'.'
name|'create'
newline|'\n'
nl|'\n'
DECL|function|create
name|'def'
name|'create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsNone'
op|'('
name|'kwargs'
op|'['
string|"'requested_networks'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'old_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_extra'
op|'('
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_invalid_personality
dedent|''
name|'def'
name|'test_create_instance_invalid_personality'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_create
indent|'        '
name|'def'
name|'fake_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'codec'
op|'='
string|"'utf8'"
newline|'\n'
name|'content'
op|'='
string|"'b25zLiINCg0KLVJpY2hhcmQgQ$$%QQmFjaA=='"
newline|'\n'
name|'start_position'
op|'='
number|'19'
newline|'\n'
name|'end_position'
op|'='
number|'20'
newline|'\n'
name|'msg'
op|'='
string|"'invalid start byte'"
newline|'\n'
name|'raise'
name|'UnicodeDecodeError'
op|'('
name|'codec'
op|','
name|'content'
op|','
name|'start_position'
op|','
nl|'\n'
name|'end_position'
op|','
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'fake_create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'personality'"
op|']'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"path"'
op|':'
string|'"/etc/banner.txt"'
op|','
nl|'\n'
string|'"contents"'
op|':'
string|'"b25zLiINCg0KLVJpY2hhcmQgQ$$%QQmFjaA=="'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_location
dedent|''
name|'def'
name|'test_create_location'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'selfhref'
op|'='
string|"'http://localhost/v2/fake/servers/%s'"
op|'%'
name|'FAKE_UUID'
newline|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v2/images/%s'"
op|'%'
name|'self'
op|'.'
name|'image_uuid'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'imageRef'"
op|']'
op|'='
name|'image_href'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'robj'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'robj'
op|'['
string|"'Location'"
op|']'
op|','
name|'selfhref'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_do_test_create_instance_above_quota
dedent|''
name|'def'
name|'_do_test_create_instance_above_quota'
op|'('
name|'self'
op|','
name|'resource'
op|','
name|'allowed'
op|','
name|'quota'
op|','
nl|'\n'
name|'expected_msg'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fakes'
op|'.'
name|'stub_out_instance_quota'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'allowed'
op|','
name|'quota'
op|','
name|'resource'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'flavorRef'"
op|']'
op|'='
number|'3'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'obj'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'fail'
op|'('
string|"'expected quota to be exceeded'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPRequestEntityTooLarge'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'e'
op|'.'
name|'explanation'
op|','
name|'expected_msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_above_quota_instances
dedent|''
dedent|''
name|'def'
name|'test_create_instance_above_quota_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'msg'
op|'='
name|'_'
op|'('
string|"'Quota exceeded for instances: Requested 1, but'"
nl|'\n'
string|"' already used 10 of 10 instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_test_create_instance_above_quota'
op|'('
string|"'instances'"
op|','
number|'0'
op|','
number|'10'
op|','
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_above_quota_ram
dedent|''
name|'def'
name|'test_create_instance_above_quota_ram'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'msg'
op|'='
name|'_'
op|'('
string|"'Quota exceeded for ram: Requested 4096, but'"
nl|'\n'
string|"' already used 8192 of 10240 ram'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_test_create_instance_above_quota'
op|'('
string|"'ram'"
op|','
number|'2048'
op|','
number|'10'
op|'*'
number|'1024'
op|','
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_above_quota_cores
dedent|''
name|'def'
name|'test_create_instance_above_quota_cores'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'msg'
op|'='
name|'_'
op|'('
string|"'Quota exceeded for cores: Requested 2, but'"
nl|'\n'
string|"' already used 9 of 10 cores'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_do_test_create_instance_above_quota'
op|'('
string|"'cores'"
op|','
number|'1'
op|','
number|'10'
op|','
name|'msg'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestServerCreateRequestXMLDeserializer
dedent|''
dedent|''
name|'class'
name|'TestServerCreateRequestXMLDeserializer'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestServerCreateRequestXMLDeserializer'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'deserializer'
op|'='
name|'servers'
op|'.'
name|'CreateDeserializer'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_minimal_request
dedent|''
name|'def'
name|'test_minimal_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v2"\n        name="new-server-test"\n        imageRef="1"\n        flavorRef="2"/>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"2"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_alternate_namespace_prefix
dedent|''
name|'def'
name|'test_request_with_alternate_namespace_prefix'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<ns2:server xmlns:ns2="http://docs.openstack.org/compute/api/v2"\n        name="new-server-test"\n        imageRef="1"\n        flavorRef="2">\n        <ns2:metadata><ns2:meta key="hello">world</ns2:meta></ns2:metadata>\n        </ns2:server>\n        """'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"2"'
op|','
nl|'\n'
string|"'metadata'"
op|':'
op|'{'
string|'"hello"'
op|':'
string|'"world"'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_scheduler_hints_and_alternate_namespace_prefix
dedent|''
name|'def'
name|'test_request_with_scheduler_hints_and_alternate_namespace_prefix'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<ns2:server xmlns:ns2="http://docs.openstack.org/compute/api/v2"\n     name="new-server-test"\n     imageRef="1"\n     flavorRef="2">\n     <ns2:metadata><ns2:meta key="hello">world</ns2:meta></ns2:metadata>\n     <os:scheduler_hints\n     xmlns:os="http://docs.openstack.org/compute/ext/scheduler-hints/api/v2">\n             <hypervisor>xen</hypervisor>\n             <near>eb999657-dd6b-464e-8713-95c532ac3b18</near>\n     </os:scheduler_hints>\n     </ns2:server>\n        """'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|"'OS-SCH-HNT:scheduler_hints'"
op|':'
op|'{'
nl|'\n'
string|"'hypervisor'"
op|':'
op|'['
string|"'xen'"
op|']'
op|','
nl|'\n'
string|"'near'"
op|':'
op|'['
string|"'eb999657-dd6b-464e-8713-95c532ac3b18'"
op|']'
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"2"'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
nl|'\n'
string|'"hello"'
op|':'
string|'"world"'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_access_ipv4
dedent|''
name|'def'
name|'test_access_ipv4'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v2"\n        name="new-server-test"\n        imageRef="1"\n        flavorRef="2"\n        accessIPv4="1.2.3.4"/>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"2"'
op|','
nl|'\n'
string|'"accessIPv4"'
op|':'
string|'"1.2.3.4"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_access_ipv6
dedent|''
name|'def'
name|'test_access_ipv6'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v2"\n        name="new-server-test"\n        imageRef="1"\n        flavorRef="2"\n        accessIPv6="fead::1234"/>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"2"'
op|','
nl|'\n'
string|'"accessIPv6"'
op|':'
string|'"fead::1234"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_access_ip
dedent|''
name|'def'
name|'test_access_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v2"\n        name="new-server-test"\n        imageRef="1"\n        flavorRef="2"\n        accessIPv4="1.2.3.4"\n        accessIPv6="fead::1234"/>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"2"'
op|','
nl|'\n'
string|'"accessIPv4"'
op|':'
string|'"1.2.3.4"'
op|','
nl|'\n'
string|'"accessIPv6"'
op|':'
string|'"fead::1234"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_admin_pass
dedent|''
name|'def'
name|'test_admin_pass'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v2"\n        name="new-server-test"\n        imageRef="1"\n        flavorRef="2"\n        adminPass="1234"/>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"2"'
op|','
nl|'\n'
string|'"adminPass"'
op|':'
string|'"1234"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_image_link
dedent|''
name|'def'
name|'test_image_link'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v2"\n        name="new-server-test"\n        imageRef="http://localhost:8774/v2/images/2"\n        flavorRef="3"/>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"http://localhost:8774/v2/images/2"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"3"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_flavor_link
dedent|''
name|'def'
name|'test_flavor_link'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v2"\n        name="new-server-test"\n        imageRef="1"\n        flavorRef="http://localhost:8774/v2/flavors/3"/>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"http://localhost:8774/v2/flavors/3"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_empty_metadata_personality
dedent|''
name|'def'
name|'test_empty_metadata_personality'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v2"\n        name="new-server-test"\n        imageRef="1"\n        flavorRef="2">\n    <metadata/>\n    <personality/>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"2"'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|'"personality"'
op|':'
op|'['
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_multiple_metadata_items
dedent|''
name|'def'
name|'test_multiple_metadata_items'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v2"\n        name="new-server-test"\n        imageRef="1"\n        flavorRef="2">\n    <metadata>\n        <meta key="one">two</meta>\n        <meta key="open">snack</meta>\n    </metadata>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"2"'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
string|'"one"'
op|':'
string|'"two"'
op|','
string|'"open"'
op|':'
string|'"snack"'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_multiple_personality_files
dedent|''
name|'def'
name|'test_multiple_personality_files'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v2"\n        name="new-server-test"\n        imageRef="1"\n        flavorRef="2">\n    <personality>\n        <file path="/etc/banner.txt">MQ==</file>\n        <file path="/etc/hosts">Mg==</file>\n    </personality>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"2"'
op|','
nl|'\n'
string|'"personality"'
op|':'
op|'['
nl|'\n'
op|'{'
string|'"path"'
op|':'
string|'"/etc/banner.txt"'
op|','
string|'"contents"'
op|':'
string|'"MQ=="'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"path"'
op|':'
string|'"/etc/hosts"'
op|','
string|'"contents"'
op|':'
string|'"Mg=="'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_spec_request
dedent|''
name|'def'
name|'test_spec_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_bookmark_link'
op|'='
op|'('
string|'"http://servers.api.openstack.org/1234/"'
nl|'\n'
string|'"images/52415800-8b69-11e0-9b19-734f6f006e54"'
op|')'
newline|'\n'
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v2"\n        imageRef="%s"\n        flavorRef="52415800-8b69-11e0-9b19-734f1195ff37"\n        name="new-server-test">\n  <metadata>\n    <meta key="My Server Name">Apache1</meta>\n  </metadata>\n  <personality>\n    <file path="/etc/banner.txt">Mg==</file>\n  </personality>\n</server>"""'
op|'%'
op|'('
name|'image_bookmark_link'
op|')'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
op|'('
string|'"http://servers.api.openstack.org/1234/"'
nl|'\n'
string|'"images/52415800-8b69-11e0-9b19-734f6f006e54"'
op|')'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"52415800-8b69-11e0-9b19-734f1195ff37"'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
string|'"My Server Name"'
op|':'
string|'"Apache1"'
op|'}'
op|','
nl|'\n'
string|'"personality"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"path"'
op|':'
string|'"/etc/banner.txt"'
op|','
nl|'\n'
string|'"contents"'
op|':'
string|'"Mg=="'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_empty_networks
dedent|''
name|'def'
name|'test_request_with_empty_networks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v2"\n name="new-server-test" imageRef="1" flavorRef="1">\n    <networks/>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"networks"'
op|':'
op|'['
op|']'
op|','
nl|'\n'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_one_network
dedent|''
name|'def'
name|'test_request_with_one_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v2"\n name="new-server-test" imageRef="1" flavorRef="1">\n    <networks>\n       <network uuid="1" fixed_ip="10.0.1.12"/>\n    </networks>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"networks"'
op|':'
op|'['
op|'{'
string|'"uuid"'
op|':'
string|'"1"'
op|','
string|'"fixed_ip"'
op|':'
string|'"10.0.1.12"'
op|'}'
op|']'
op|','
nl|'\n'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_two_networks
dedent|''
name|'def'
name|'test_request_with_two_networks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v2"\n name="new-server-test" imageRef="1" flavorRef="1">\n    <networks>\n       <network uuid="1" fixed_ip="10.0.1.12"/>\n       <network uuid="2" fixed_ip="10.0.2.12"/>\n    </networks>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"networks"'
op|':'
op|'['
op|'{'
string|'"uuid"'
op|':'
string|'"1"'
op|','
string|'"fixed_ip"'
op|':'
string|'"10.0.1.12"'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"uuid"'
op|':'
string|'"2"'
op|','
string|'"fixed_ip"'
op|':'
string|'"10.0.2.12"'
op|'}'
op|']'
op|','
nl|'\n'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_second_network_node_ignored
dedent|''
name|'def'
name|'test_request_with_second_network_node_ignored'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v2"\n name="new-server-test" imageRef="1" flavorRef="1">\n    <networks>\n       <network uuid="1" fixed_ip="10.0.1.12"/>\n    </networks>\n    <networks>\n       <network uuid="2" fixed_ip="10.0.2.12"/>\n    </networks>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"networks"'
op|':'
op|'['
op|'{'
string|'"uuid"'
op|':'
string|'"1"'
op|','
string|'"fixed_ip"'
op|':'
string|'"10.0.1.12"'
op|'}'
op|']'
op|','
nl|'\n'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_one_network_missing_id
dedent|''
name|'def'
name|'test_request_with_one_network_missing_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v2"\n name="new-server-test" imageRef="1" flavorRef="1">\n    <networks>\n       <network fixed_ip="10.0.1.12"/>\n    </networks>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"networks"'
op|':'
op|'['
op|'{'
string|'"fixed_ip"'
op|':'
string|'"10.0.1.12"'
op|'}'
op|']'
op|','
nl|'\n'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_one_network_missing_fixed_ip
dedent|''
name|'def'
name|'test_request_with_one_network_missing_fixed_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v2"\n name="new-server-test" imageRef="1" flavorRef="1">\n    <networks>\n       <network uuid="1"/>\n    </networks>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"networks"'
op|':'
op|'['
op|'{'
string|'"uuid"'
op|':'
string|'"1"'
op|'}'
op|']'
op|','
nl|'\n'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_one_network_empty_id
dedent|''
name|'def'
name|'test_request_with_one_network_empty_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n    <server xmlns="http://docs.openstack.org/compute/api/v2"\n     name="new-server-test" imageRef="1" flavorRef="1">\n        <networks>\n           <network uuid="" fixed_ip="10.0.1.12"/>\n        </networks>\n    </server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"networks"'
op|':'
op|'['
op|'{'
string|'"uuid"'
op|':'
string|'""'
op|','
string|'"fixed_ip"'
op|':'
string|'"10.0.1.12"'
op|'}'
op|']'
op|','
nl|'\n'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_one_network_empty_fixed_ip
dedent|''
name|'def'
name|'test_request_with_one_network_empty_fixed_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n    <server xmlns="http://docs.openstack.org/compute/api/v2"\n     name="new-server-test" imageRef="1" flavorRef="1">\n        <networks>\n           <network uuid="1" fixed_ip=""/>\n        </networks>\n    </server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"networks"'
op|':'
op|'['
op|'{'
string|'"uuid"'
op|':'
string|'"1"'
op|','
string|'"fixed_ip"'
op|':'
string|'""'
op|'}'
op|']'
op|','
nl|'\n'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_networks_duplicate_ids
dedent|''
name|'def'
name|'test_request_with_networks_duplicate_ids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n    <server xmlns="http://docs.openstack.org/compute/api/v2"\n     name="new-server-test" imageRef="1" flavorRef="1">\n        <networks>\n           <network uuid="1" fixed_ip="10.0.1.12"/>\n           <network uuid="1" fixed_ip="10.0.2.12"/>\n        </networks>\n    </server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"networks"'
op|':'
op|'['
op|'{'
string|'"uuid"'
op|':'
string|'"1"'
op|','
string|'"fixed_ip"'
op|':'
string|'"10.0.1.12"'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"uuid"'
op|':'
string|'"1"'
op|','
string|'"fixed_ip"'
op|':'
string|'"10.0.2.12"'
op|'}'
op|']'
op|','
nl|'\n'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_availability_zone
dedent|''
name|'def'
name|'test_request_with_availability_zone'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n    <server xmlns="http://docs.openstack.org/compute/api/v2"\n     name="new-server-test" imageRef="1" flavorRef="1"\n     availability_zone="some_zone:some_host">\n    </server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"availability_zone"'
op|':'
string|'"some_zone:some_host"'
op|','
nl|'\n'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_multiple_create_args
dedent|''
name|'def'
name|'test_request_with_multiple_create_args'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n    <server xmlns="http://docs.openstack.org/compute/api/v2"\n     name="new-server-test" imageRef="1" flavorRef="1"\n     min_count="1" max_count="3" return_reservation_id="True">\n    </server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"min_count"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"max_count"'
op|':'
string|'"3"'
op|','
nl|'\n'
string|'"return_reservation_id"'
op|':'
name|'True'
op|','
nl|'\n'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_disk_config
dedent|''
name|'def'
name|'test_request_with_disk_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n    <server xmlns="http://docs.openstack.org/compute/api/v2"\n     xmlns:OS-DCF="http://docs.openstack.org/compute/ext/disk_config/api/v1.1"\n     name="new-server-test" imageRef="1" flavorRef="1"\n     OS-DCF:diskConfig="AUTO">\n    </server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"OS-DCF:diskConfig"'
op|':'
string|'"AUTO"'
op|','
nl|'\n'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_scheduler_hints
dedent|''
name|'def'
name|'test_request_with_scheduler_hints'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n    <server xmlns="http://docs.openstack.org/compute/api/v2"\n     xmlns:OS-SCH-HNT=\n     "http://docs.openstack.org/compute/ext/scheduler-hints/api/v2"\n     name="new-server-test" imageRef="1" flavorRef="1">\n       <OS-SCH-HNT:scheduler_hints>\n         <different_host>\n           7329b667-50c7-46a6-b913-cb2a09dfeee0\n         </different_host>\n         <different_host>\n           f31efb24-34d2-43e1-8b44-316052956a39\n         </different_host>\n       </OS-SCH-HNT:scheduler_hints>\n    </server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"OS-SCH-HNT:scheduler_hints"'
op|':'
op|'{'
nl|'\n'
string|'"different_host"'
op|':'
op|'['
nl|'\n'
string|'"7329b667-50c7-46a6-b913-cb2a09dfeee0"'
op|','
nl|'\n'
string|'"f31efb24-34d2-43e1-8b44-316052956a39"'
op|','
nl|'\n'
op|']'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_block_device_mapping
dedent|''
name|'def'
name|'test_request_with_block_device_mapping'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n    <server xmlns="http://docs.openstack.org/compute/api/v2"\n     name="new-server-test" imageRef="1" flavorRef="1">\n       <block_device_mapping>\n         <mapping volume_id="7329b667-50c7-46a6-b913-cb2a09dfeee0"\n          device_name="/dev/vda" virtual_name="root"\n          delete_on_termination="False" />\n         <mapping snapshot_id="f31efb24-34d2-43e1-8b44-316052956a39"\n          device_name="/dev/vdb" virtual_name="ephemeral0"\n          delete_on_termination="False" />\n         <mapping device_name="/dev/vdc" no_device="True" />\n       </block_device_mapping>\n    </server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"block_device_mapping"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"volume_id"'
op|':'
string|'"7329b667-50c7-46a6-b913-cb2a09dfeee0"'
op|','
nl|'\n'
string|'"device_name"'
op|':'
string|'"/dev/vda"'
op|','
nl|'\n'
string|'"virtual_name"'
op|':'
string|'"root"'
op|','
nl|'\n'
string|'"delete_on_termination"'
op|':'
name|'False'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"snapshot_id"'
op|':'
string|'"f31efb24-34d2-43e1-8b44-316052956a39"'
op|','
nl|'\n'
string|'"device_name"'
op|':'
string|'"/dev/vdb"'
op|','
nl|'\n'
string|'"virtual_name"'
op|':'
string|'"ephemeral0"'
op|','
nl|'\n'
string|'"delete_on_termination"'
op|':'
name|'False'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"device_name"'
op|':'
string|'"/dev/vdc"'
op|','
nl|'\n'
string|'"no_device"'
op|':'
name|'True'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
nl|'\n'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_config_drive
dedent|''
name|'def'
name|'test_request_with_config_drive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n    <server xmlns="http://docs.openstack.org/compute/api/v2"\n        name="config_drive_test"\n        imageRef="1"\n        flavorRef="1"\n        config_drive="true"/>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"config_drive_test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"config_drive"'
op|':'
string|'"true"'
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_corrupt_xml
dedent|''
name|'def'
name|'test_corrupt_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Should throw a 400 error on corrupt xml."""'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'MalformedRequestBody'
op|','
nl|'\n'
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'killer_xml_body'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestServerActionRequestXMLDeserializer
dedent|''
dedent|''
name|'class'
name|'TestServerActionRequestXMLDeserializer'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestServerActionRequestXMLDeserializer'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'deserializer'
op|'='
name|'servers'
op|'.'
name|'ActionDeserializer'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_generate_request
dedent|''
name|'def'
name|'_generate_request'
op|'('
name|'self'
op|','
name|'action'
op|','
name|'disk_cfg'
op|','
name|'ref'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|'"""\n<%(action)s xmlns="http://docs.openstack.org/compute/api/v1.1"\n   xmlns:OS-DCF="http://docs.openstack.org/compute/ext/disk_config/api/v1.1"\n   %(disk_config)s="MANUAL" %(ref)s="1"/>"""'
op|'%'
op|'('
nl|'\n'
op|'{'
string|"'action'"
op|':'
name|'action'
op|','
string|"'disk_config'"
op|':'
name|'disk_cfg'
op|','
string|"'ref'"
op|':'
name|'ref'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_generate_expected
dedent|''
name|'def'
name|'_generate_expected'
op|'('
name|'self'
op|','
name|'action'
op|','
name|'ref'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|'"%s"'
op|'%'
name|'action'
op|':'
op|'{'
nl|'\n'
string|'"%s"'
op|'%'
name|'ref'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"OS-DCF:diskConfig"'
op|':'
string|'"MANUAL"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|test_rebuild_request
dedent|''
name|'def'
name|'test_rebuild_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
name|'self'
op|'.'
name|'_generate_request'
op|'('
string|'"rebuild"'
op|','
string|'"OS-DCF:diskConfig"'
op|','
nl|'\n'
string|'"imageRef"'
op|')'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'self'
op|'.'
name|'_generate_expected'
op|'('
string|'"rebuild"'
op|','
string|'"imageRef"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_rebuild_request_auto_disk_config_compat
dedent|''
name|'def'
name|'test_rebuild_request_auto_disk_config_compat'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
name|'self'
op|'.'
name|'_generate_request'
op|'('
string|'"rebuild"'
op|','
string|'"auto_disk_config"'
op|','
nl|'\n'
string|'"imageRef"'
op|')'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'self'
op|'.'
name|'_generate_expected'
op|'('
string|'"rebuild"'
op|','
string|'"imageRef"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_resize_request
dedent|''
name|'def'
name|'test_resize_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
name|'self'
op|'.'
name|'_generate_request'
op|'('
string|'"resize"'
op|','
string|'"OS-DCF:diskConfig"'
op|','
nl|'\n'
string|'"flavorRef"'
op|')'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'self'
op|'.'
name|'_generate_expected'
op|'('
string|'"resize"'
op|','
string|'"flavorRef"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_resize_request_auto_disk_config_compat
dedent|''
name|'def'
name|'test_resize_request_auto_disk_config_compat'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
name|'self'
op|'.'
name|'_generate_request'
op|'('
string|'"resize"'
op|','
string|'"auto_disk_config"'
op|','
nl|'\n'
string|'"flavorRef"'
op|')'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'self'
op|'.'
name|'_generate_expected'
op|'('
string|'"resize"'
op|','
string|'"flavorRef"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestAddressesXMLSerialization
dedent|''
dedent|''
name|'class'
name|'TestAddressesXMLSerialization'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|index_serializer
indent|'    '
name|'index_serializer'
op|'='
name|'ips'
op|'.'
name|'AddressesTemplate'
op|'('
op|')'
newline|'\n'
DECL|variable|show_serializer
name|'show_serializer'
op|'='
name|'ips'
op|'.'
name|'NetworkTemplate'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_serializer_test_data
name|'def'
name|'_serializer_test_data'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|"'network_2'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'addr'"
op|':'
string|"'192.168.0.1'"
op|','
string|"'version'"
op|':'
number|'4'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'addr'"
op|':'
string|"'fe80::beef'"
op|','
string|"'version'"
op|':'
number|'6'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_xml_declaration
dedent|''
name|'def'
name|'test_xml_declaration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'output'
op|'='
name|'self'
op|'.'
name|'show_serializer'
op|'.'
name|'serialize'
op|'('
name|'self'
op|'.'
name|'_serializer_test_data'
op|'('
op|')'
op|')'
newline|'\n'
name|'has_dec'
op|'='
name|'output'
op|'.'
name|'startswith'
op|'('
string|'"<?xml version=\'1.0\' encoding=\'UTF-8\'?>"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'has_dec'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_show
dedent|''
name|'def'
name|'test_show'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'output'
op|'='
name|'self'
op|'.'
name|'show_serializer'
op|'.'
name|'serialize'
op|'('
name|'self'
op|'.'
name|'_serializer_test_data'
op|'('
op|')'
op|')'
newline|'\n'
name|'root'
op|'='
name|'etree'
op|'.'
name|'XML'
op|'('
name|'output'
op|')'
newline|'\n'
name|'network'
op|'='
name|'self'
op|'.'
name|'_serializer_test_data'
op|'('
op|')'
op|'['
string|"'network_2'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'root'
op|'.'
name|'get'
op|'('
string|"'id'"
op|')'
op|')'
op|','
string|"'network_2'"
op|')'
newline|'\n'
name|'ip_elems'
op|'='
name|'root'
op|'.'
name|'findall'
op|'('
string|"'{0}ip'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
newline|'\n'
name|'for'
name|'z'
op|','
name|'ip_elem'
name|'in'
name|'enumerate'
op|'('
name|'ip_elems'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ip'
op|'='
name|'network'
op|'['
name|'z'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'ip_elem'
op|'.'
name|'get'
op|'('
string|"'version'"
op|')'
op|')'
op|','
nl|'\n'
name|'str'
op|'('
name|'ip'
op|'['
string|"'version'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'ip_elem'
op|'.'
name|'get'
op|'('
string|"'addr'"
op|')'
op|')'
op|','
nl|'\n'
name|'str'
op|'('
name|'ip'
op|'['
string|"'addr'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_index
dedent|''
dedent|''
name|'def'
name|'test_index'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fixture'
op|'='
op|'{'
nl|'\n'
string|"'addresses'"
op|':'
op|'{'
nl|'\n'
string|"'network_1'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'addr'"
op|':'
string|"'192.168.0.3'"
op|','
string|"'version'"
op|':'
number|'4'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'addr'"
op|':'
string|"'192.168.0.5'"
op|','
string|"'version'"
op|':'
number|'4'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'network_2'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'addr'"
op|':'
string|"'192.168.0.1'"
op|','
string|"'version'"
op|':'
number|'4'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'addr'"
op|':'
string|"'fe80::beef'"
op|','
string|"'version'"
op|':'
number|'6'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'index_serializer'
op|'.'
name|'serialize'
op|'('
name|'fixture'
op|')'
newline|'\n'
name|'root'
op|'='
name|'etree'
op|'.'
name|'XML'
op|'('
name|'output'
op|')'
newline|'\n'
name|'xmlutil'
op|'.'
name|'validate_schema'
op|'('
name|'root'
op|','
string|"'addresses'"
op|')'
newline|'\n'
name|'addresses_dict'
op|'='
name|'fixture'
op|'['
string|"'addresses'"
op|']'
newline|'\n'
name|'network_elems'
op|'='
name|'root'
op|'.'
name|'findall'
op|'('
string|"'{0}network'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'network_elems'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'network_elem'
name|'in'
name|'enumerate'
op|'('
name|'network_elems'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'network'
op|'='
name|'addresses_dict'
op|'.'
name|'items'
op|'('
op|')'
op|'['
name|'i'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'network_elem'
op|'.'
name|'get'
op|'('
string|"'id'"
op|')'
op|')'
op|','
name|'str'
op|'('
name|'network'
op|'['
number|'0'
op|']'
op|')'
op|')'
newline|'\n'
name|'ip_elems'
op|'='
name|'network_elem'
op|'.'
name|'findall'
op|'('
string|"'{0}ip'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
newline|'\n'
name|'for'
name|'z'
op|','
name|'ip_elem'
name|'in'
name|'enumerate'
op|'('
name|'ip_elems'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'ip'
op|'='
name|'network'
op|'['
number|'1'
op|']'
op|'['
name|'z'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'ip_elem'
op|'.'
name|'get'
op|'('
string|"'version'"
op|')'
op|')'
op|','
nl|'\n'
name|'str'
op|'('
name|'ip'
op|'['
string|"'version'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'ip_elem'
op|'.'
name|'get'
op|'('
string|"'addr'"
op|')'
op|')'
op|','
nl|'\n'
name|'str'
op|'('
name|'ip'
op|'['
string|"'addr'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersViewBuilderTest
dedent|''
dedent|''
dedent|''
dedent|''
name|'class'
name|'ServersViewBuilderTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|image_bookmark
indent|'    '
name|'image_bookmark'
op|'='
string|'"http://localhost/fake/images/5"'
newline|'\n'
DECL|variable|flavor_bookmark
name|'flavor_bookmark'
op|'='
string|'"http://localhost/fake/flavors/1"'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ServersViewBuilderTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_ipv6'
op|'='
name|'True'
op|')'
newline|'\n'
name|'db_inst'
op|'='
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
nl|'\n'
name|'id'
op|'='
number|'1'
op|','
nl|'\n'
name|'image_ref'
op|'='
string|'"5"'
op|','
nl|'\n'
name|'uuid'
op|'='
string|'"deadbeef-feed-edee-beef-d0ea7beefedd"'
op|','
nl|'\n'
name|'display_name'
op|'='
string|'"test_server"'
op|','
nl|'\n'
name|'include_fake_metadata'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'privates'
op|'='
op|'['
string|"'172.19.0.1'"
op|']'
newline|'\n'
name|'publics'
op|'='
op|'['
string|"'192.168.0.3'"
op|']'
newline|'\n'
name|'public6s'
op|'='
op|'['
string|"'b33f::fdee:ddff:fecc:bbaa'"
op|']'
newline|'\n'
nl|'\n'
DECL|function|nw_info
name|'def'
name|'nw_info'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|'('
name|'None'
op|','
op|'{'
string|"'label'"
op|':'
string|"'public'"
op|','
nl|'\n'
string|"'ips'"
op|':'
op|'['
name|'dict'
op|'('
name|'ip'
op|'='
name|'ip'
op|')'
name|'for'
name|'ip'
name|'in'
name|'publics'
op|']'
op|','
nl|'\n'
string|"'ip6s'"
op|':'
op|'['
name|'dict'
op|'('
name|'ip'
op|'='
name|'ip'
op|')'
name|'for'
name|'ip'
name|'in'
name|'public6s'
op|']'
op|'}'
op|')'
op|','
nl|'\n'
op|'('
name|'None'
op|','
op|'{'
string|"'label'"
op|':'
string|"'private'"
op|','
nl|'\n'
string|"'ips'"
op|':'
op|'['
name|'dict'
op|'('
name|'ip'
op|'='
name|'ip'
op|')'
name|'for'
name|'ip'
name|'in'
name|'privates'
op|']'
op|'}'
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|function|floaters
dedent|''
name|'def'
name|'floaters'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_out_nw_api_get_instance_nw_info'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'nw_info'
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_out_nw_api_get_floating_ips_by_fixed_address'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
nl|'\n'
name|'floaters'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'uuid'
op|'='
name|'db_inst'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'view_builder'
op|'='
name|'views'
op|'.'
name|'servers'
op|'.'
name|'ViewBuilder'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'request'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|'"/v2/fake"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'='
name|'fake_instance'
op|'.'
name|'fake_instance_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'context'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
name|'instance_obj'
op|'.'
name|'INSTANCE_DEFAULT_FIELDS'
op|','
nl|'\n'
op|'**'
name|'db_inst'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'self_link'
op|'='
string|'"http://localhost/v2/fake/servers/%s"'
op|'%'
name|'self'
op|'.'
name|'uuid'
newline|'\n'
name|'self'
op|'.'
name|'bookmark_link'
op|'='
string|'"http://localhost/fake/servers/%s"'
op|'%'
name|'self'
op|'.'
name|'uuid'
newline|'\n'
name|'self'
op|'.'
name|'expected_detailed_server'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|'"user_id"'
op|':'
string|'"fake_user"'
op|','
nl|'\n'
string|'"tenant_id"'
op|':'
string|'"fake_project"'
op|','
nl|'\n'
string|'"updated"'
op|':'
string|'"2010-11-11T11:00:00Z"'
op|','
nl|'\n'
string|'"created"'
op|':'
string|'"2010-10-10T12:00:00Z"'
op|','
nl|'\n'
string|'"progress"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server"'
op|','
nl|'\n'
string|'"status"'
op|':'
string|'"BUILD"'
op|','
nl|'\n'
string|'"accessIPv4"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"accessIPv6"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"hostId"'
op|':'
string|"''"
op|','
nl|'\n'
string|'"image"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"5"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'image_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'flavor_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"addresses"'
op|':'
op|'{'
nl|'\n'
string|"'test1'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'192.168.1.100'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'6'
op|','
string|"'addr'"
op|':'
string|"'2001:db8:0:1::1'"
op|'}'
nl|'\n'
op|']'
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'self_link'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'bookmark_link'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'expected_server'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'self_link'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'bookmark_link'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_get_flavor_valid_flavor
dedent|''
name|'def'
name|'test_get_flavor_valid_flavor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
op|'{'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
op|'{'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'flavor_bookmark'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'_get_flavor'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server
dedent|''
name|'def'
name|'test_build_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'basic'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'output'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'self'
op|'.'
name|'expected_server'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_with_project_id
dedent|''
name|'def'
name|'test_build_server_with_project_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'basic'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'output'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'self'
op|'.'
name|'expected_server'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_detail
dedent|''
name|'def'
name|'test_build_server_detail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'output'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'self'
op|'.'
name|'expected_detailed_server'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_no_image
dedent|''
name|'def'
name|'test_build_server_no_image'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance'
op|'['
string|'"image_ref"'
op|']'
op|'='
string|'""'
newline|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'output'
op|'['
string|"'server'"
op|']'
op|'['
string|"'image'"
op|']'
op|','
string|'""'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_detail_with_fault
dedent|''
name|'def'
name|'test_build_server_detail_with_fault'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'fault'"
op|']'
op|'='
name|'fake_instance'
op|'.'
name|'fake_fault_obj'
op|'('
name|'self'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'expected_detailed_server'
op|'['
string|'"server"'
op|']'
op|'['
string|'"status"'
op|']'
op|'='
string|'"ERROR"'
newline|'\n'
name|'self'
op|'.'
name|'expected_detailed_server'
op|'['
string|'"server"'
op|']'
op|'['
string|'"fault"'
op|']'
op|'='
op|'{'
nl|'\n'
string|'"code"'
op|':'
number|'404'
op|','
nl|'\n'
string|'"created"'
op|':'
string|'"2010-10-10T12:00:00Z"'
op|','
nl|'\n'
string|'"message"'
op|':'
string|'"HTTPNotFound"'
op|','
nl|'\n'
string|'"details"'
op|':'
string|'"Stock details for test"'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'expected_detailed_server'
op|'['
string|'"server"'
op|']'
op|'['
string|'"progress"'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'output'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'self'
op|'.'
name|'expected_detailed_server'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_detail_with_fault_that_has_been_deleted
dedent|''
name|'def'
name|'test_build_server_detail_with_fault_that_has_been_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance'
op|'['
string|"'deleted'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
newline|'\n'
name|'fault'
op|'='
name|'fake_instance'
op|'.'
name|'fake_fault_obj'
op|'('
name|'self'
op|'.'
name|'uuid'
op|','
name|'code'
op|'='
number|'500'
op|','
nl|'\n'
name|'message'
op|'='
string|'"No valid host was found"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'fault'"
op|']'
op|'='
name|'fault'
newline|'\n'
nl|'\n'
comment|'# Regardless of the vm_state deleted servers sholud have DELETED status'
nl|'\n'
name|'self'
op|'.'
name|'expected_detailed_server'
op|'['
string|'"server"'
op|']'
op|'['
string|'"status"'
op|']'
op|'='
string|'"DELETED"'
newline|'\n'
name|'self'
op|'.'
name|'expected_detailed_server'
op|'['
string|'"server"'
op|']'
op|'['
string|'"fault"'
op|']'
op|'='
op|'{'
nl|'\n'
string|'"code"'
op|':'
number|'500'
op|','
nl|'\n'
string|'"created"'
op|':'
string|'"2010-10-10T12:00:00Z"'
op|','
nl|'\n'
string|'"message"'
op|':'
string|'"No valid host was found"'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'expected_detailed_server'
op|'['
string|'"server"'
op|']'
op|'['
string|'"progress"'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'output'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'self'
op|'.'
name|'expected_detailed_server'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_detail_with_fault_no_details_not_admin
dedent|''
name|'def'
name|'test_build_server_detail_with_fault_no_details_not_admin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'fault'"
op|']'
op|'='
name|'fake_instance'
op|'.'
name|'fake_fault_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'code'
op|'='
number|'500'
op|','
nl|'\n'
name|'message'
op|'='
string|"'Error'"
op|')'
newline|'\n'
nl|'\n'
name|'expected_fault'
op|'='
op|'{'
string|'"code"'
op|':'
number|'500'
op|','
nl|'\n'
string|'"created"'
op|':'
string|'"2010-10-10T12:00:00Z"'
op|','
nl|'\n'
string|'"message"'
op|':'
string|'"Error"'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'output'
op|'['
string|"'server'"
op|']'
op|'['
string|"'fault'"
op|']'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected_fault'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_detail_with_fault_admin
dedent|''
name|'def'
name|'test_build_server_detail_with_fault_admin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'fault'"
op|']'
op|'='
name|'fake_instance'
op|'.'
name|'fake_fault_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'code'
op|'='
number|'500'
op|','
nl|'\n'
name|'message'
op|'='
string|"'Error'"
op|')'
newline|'\n'
nl|'\n'
name|'expected_fault'
op|'='
op|'{'
string|'"code"'
op|':'
number|'500'
op|','
nl|'\n'
string|'"created"'
op|':'
string|'"2010-10-10T12:00:00Z"'
op|','
nl|'\n'
string|'"message"'
op|':'
string|'"Error"'
op|','
nl|'\n'
string|"'details'"
op|':'
string|"'Stock details for test'"
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|'.'
name|'is_admin'
op|'='
name|'True'
newline|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'output'
op|'['
string|"'server'"
op|']'
op|'['
string|"'fault'"
op|']'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected_fault'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_detail_with_fault_no_details_admin
dedent|''
name|'def'
name|'test_build_server_detail_with_fault_no_details_admin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'fault'"
op|']'
op|'='
name|'fake_instance'
op|'.'
name|'fake_fault_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'uuid'
op|','
nl|'\n'
name|'code'
op|'='
number|'500'
op|','
nl|'\n'
name|'message'
op|'='
string|"'Error'"
op|','
nl|'\n'
name|'details'
op|'='
string|"''"
op|')'
newline|'\n'
nl|'\n'
name|'expected_fault'
op|'='
op|'{'
string|'"code"'
op|':'
number|'500'
op|','
nl|'\n'
string|'"created"'
op|':'
string|'"2010-10-10T12:00:00Z"'
op|','
nl|'\n'
string|'"message"'
op|':'
string|'"Error"'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|'.'
name|'is_admin'
op|'='
name|'True'
newline|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'output'
op|'['
string|"'server'"
op|']'
op|'['
string|"'fault'"
op|']'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected_fault'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_detail_with_fault_but_active
dedent|''
name|'def'
name|'test_build_server_detail_with_fault_but_active'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'progress'"
op|']'
op|'='
number|'100'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'fault'"
op|']'
op|'='
name|'fake_instance'
op|'.'
name|'fake_fault_obj'
op|'('
name|'self'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'fault'"
op|','
name|'output'
op|'['
string|"'server'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_detail_active_status
dedent|''
name|'def'
name|'test_build_server_detail_active_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'#set the power state of the instance to running'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'progress'"
op|']'
op|'='
number|'100'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'expected_detailed_server'
op|'['
string|'"server"'
op|']'
op|'['
string|'"status"'
op|']'
op|'='
string|'"ACTIVE"'
newline|'\n'
name|'self'
op|'.'
name|'expected_detailed_server'
op|'['
string|'"server"'
op|']'
op|'['
string|'"progress"'
op|']'
op|'='
number|'100'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'output'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'self'
op|'.'
name|'expected_detailed_server'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_detail_with_accessipv4
dedent|''
name|'def'
name|'test_build_server_detail_with_accessipv4'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'access_ip_v4'
op|'='
string|"'1.2.3.4'"
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'access_ip_v4'"
op|']'
op|'='
name|'access_ip_v4'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'expected_detailed_server'
op|'['
string|'"server"'
op|']'
op|'['
string|'"accessIPv4"'
op|']'
op|'='
name|'access_ip_v4'
newline|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'output'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'self'
op|'.'
name|'expected_detailed_server'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_detail_with_accessipv6
dedent|''
name|'def'
name|'test_build_server_detail_with_accessipv6'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'access_ip_v6'
op|'='
string|"'fead::1234'"
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'access_ip_v6'"
op|']'
op|'='
name|'access_ip_v6'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'expected_detailed_server'
op|'['
string|'"server"'
op|']'
op|'['
string|'"accessIPv6"'
op|']'
op|'='
name|'access_ip_v6'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'output'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'self'
op|'.'
name|'expected_detailed_server'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_detail_with_metadata
dedent|''
name|'def'
name|'test_build_server_detail_with_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'metadata'
op|'='
op|'['
op|']'
newline|'\n'
name|'metadata'
op|'.'
name|'append'
op|'('
name|'models'
op|'.'
name|'InstanceMetadata'
op|'('
name|'key'
op|'='
string|'"Open"'
op|','
name|'value'
op|'='
string|'"Stack"'
op|')'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'nova_utils'
op|'.'
name|'metadata_to_dict'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'metadata'"
op|']'
op|'='
name|'metadata'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'expected_detailed_server'
op|'['
string|'"server"'
op|']'
op|'['
string|'"metadata"'
op|']'
op|'='
op|'{'
string|'"Open"'
op|':'
string|'"Stack"'
op|'}'
newline|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'self'
op|'.'
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'output'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'self'
op|'.'
name|'expected_detailed_server'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerXMLSerializationTest
dedent|''
dedent|''
name|'class'
name|'ServerXMLSerializationTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|TIMESTAMP
indent|'    '
name|'TIMESTAMP'
op|'='
string|'"2010-10-11T10:30:22Z"'
newline|'\n'
DECL|variable|SERVER_HREF
name|'SERVER_HREF'
op|'='
string|"'http://localhost/v2/servers/%s'"
op|'%'
name|'FAKE_UUID'
newline|'\n'
name|'SERVER_NEXT'
op|'='
string|"'http://localhost/v2/servers?limit=%s&marker=%s'"
newline|'\n'
DECL|variable|SERVER_BOOKMARK
name|'SERVER_BOOKMARK'
op|'='
string|"'http://localhost/servers/%s'"
op|'%'
name|'FAKE_UUID'
newline|'\n'
DECL|variable|IMAGE_BOOKMARK
name|'IMAGE_BOOKMARK'
op|'='
string|"'http://localhost/images/5'"
newline|'\n'
DECL|variable|FLAVOR_BOOKMARK
name|'FLAVOR_BOOKMARK'
op|'='
string|"'http://localhost/flavors/1'"
newline|'\n'
DECL|variable|USERS_ATTRIBUTES
name|'USERS_ATTRIBUTES'
op|'='
op|'['
string|"'name'"
op|','
string|"'id'"
op|','
string|"'created'"
op|','
string|"'accessIPv4'"
op|','
nl|'\n'
string|"'updated'"
op|','
string|"'progress'"
op|','
string|"'status'"
op|','
string|"'hostId'"
op|','
nl|'\n'
string|"'accessIPv6'"
op|']'
newline|'\n'
DECL|variable|ADMINS_ATTRIBUTES
name|'ADMINS_ATTRIBUTES'
op|'='
name|'USERS_ATTRIBUTES'
op|'+'
op|'['
string|"'adminPass'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ServerXMLSerializationTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|"'id'"
op|':'
name|'FAKE_UUID'
op|','
nl|'\n'
string|"'user_id'"
op|':'
string|"'fake_user_id'"
op|','
nl|'\n'
string|"'tenant_id'"
op|':'
string|"'fake_tenant_id'"
op|','
nl|'\n'
string|"'created'"
op|':'
name|'self'
op|'.'
name|'TIMESTAMP'
op|','
nl|'\n'
string|"'updated'"
op|':'
name|'self'
op|'.'
name|'TIMESTAMP'
op|','
nl|'\n'
string|'"progress"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server"'
op|','
nl|'\n'
string|'"status"'
op|':'
string|'"BUILD"'
op|','
nl|'\n'
string|'"hostId"'
op|':'
string|"'e4d909c290d0fb1ca068ffaddf22cbd0'"
op|','
nl|'\n'
string|'"accessIPv4"'
op|':'
string|'"1.2.3.4"'
op|','
nl|'\n'
string|'"accessIPv6"'
op|':'
string|'"fead::1234"'
op|','
nl|'\n'
string|'"image"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"5"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'IMAGE_BOOKMARK'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'FLAVOR_BOOKMARK'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"addresses"'
op|':'
op|'{'
nl|'\n'
string|'"network_one"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'4'
op|','
nl|'\n'
string|'"addr"'
op|':'
string|'"67.23.10.138"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'6'
op|','
nl|'\n'
string|'"addr"'
op|':'
string|'"::babe:67.23.10.138"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|'"network_two"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'4'
op|','
nl|'\n'
string|'"addr"'
op|':'
string|'"67.23.10.139"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'6'
op|','
nl|'\n'
string|'"addr"'
op|':'
string|'"::babe:67.23.10.139"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
nl|'\n'
string|'"Open"'
op|':'
string|'"Stack"'
op|','
nl|'\n'
string|'"Number"'
op|':'
string|'"1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'links'"
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'href'"
op|':'
name|'self'
op|'.'
name|'SERVER_HREF'
op|','
nl|'\n'
string|"'rel'"
op|':'
string|"'self'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'href'"
op|':'
name|'self'
op|'.'
name|'SERVER_BOOKMARK'
op|','
nl|'\n'
string|"'rel'"
op|':'
string|"'bookmark'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_validate_xml
dedent|''
name|'def'
name|'_validate_xml'
op|'('
name|'self'
op|','
name|'root'
op|','
name|'server_dict'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'link_nodes'
op|'='
name|'root'
op|'.'
name|'findall'
op|'('
string|"'{0}link'"
op|'.'
name|'format'
op|'('
name|'ATOMNS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'link_nodes'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'link'
name|'in'
name|'enumerate'
op|'('
name|'server_dict'
op|'['
string|"'links'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'link'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'link_nodes'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'metadata_root'
op|'='
name|'root'
op|'.'
name|'find'
op|'('
string|"'{0}metadata'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
newline|'\n'
name|'metadata_elems'
op|'='
name|'metadata_root'
op|'.'
name|'findall'
op|'('
string|"'{0}meta'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'metadata_elems'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'metadata_elem'
name|'in'
name|'enumerate'
op|'('
name|'metadata_elems'
op|')'
op|':'
newline|'\n'
indent|'            '
op|'('
name|'meta_key'
op|','
name|'meta_value'
op|')'
op|'='
name|'server_dict'
op|'['
string|"'metadata'"
op|']'
op|'.'
name|'items'
op|'('
op|')'
op|'['
name|'i'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'metadata_elem'
op|'.'
name|'get'
op|'('
string|"'key'"
op|')'
op|')'
op|','
name|'str'
op|'('
name|'meta_key'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'metadata_elem'
op|'.'
name|'text'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
op|','
name|'str'
op|'('
name|'meta_value'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'image_root'
op|'='
name|'root'
op|'.'
name|'find'
op|'('
string|"'{0}image'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'image_root'
op|'.'
name|'get'
op|'('
string|"'id'"
op|')'
op|','
name|'server_dict'
op|'['
string|"'image'"
op|']'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'link_nodes'
op|'='
name|'image_root'
op|'.'
name|'findall'
op|'('
string|"'{0}link'"
op|'.'
name|'format'
op|'('
name|'ATOMNS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'link_nodes'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'link'
name|'in'
name|'enumerate'
op|'('
name|'server_dict'
op|'['
string|"'image'"
op|']'
op|'['
string|"'links'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'link'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'link_nodes'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'flavor_root'
op|'='
name|'root'
op|'.'
name|'find'
op|'('
string|"'{0}flavor'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'flavor_root'
op|'.'
name|'get'
op|'('
string|"'id'"
op|')'
op|','
name|'server_dict'
op|'['
string|"'flavor'"
op|']'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'link_nodes'
op|'='
name|'flavor_root'
op|'.'
name|'findall'
op|'('
string|"'{0}link'"
op|'.'
name|'format'
op|'('
name|'ATOMNS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'link_nodes'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'link'
name|'in'
name|'enumerate'
op|'('
name|'server_dict'
op|'['
string|"'flavor'"
op|']'
op|'['
string|"'links'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'link'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'link_nodes'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'addresses_root'
op|'='
name|'root'
op|'.'
name|'find'
op|'('
string|"'{0}addresses'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
newline|'\n'
name|'addresses_dict'
op|'='
name|'server_dict'
op|'['
string|"'addresses'"
op|']'
newline|'\n'
name|'network_elems'
op|'='
name|'addresses_root'
op|'.'
name|'findall'
op|'('
string|"'{0}network'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'network_elems'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'network_elem'
name|'in'
name|'enumerate'
op|'('
name|'network_elems'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'network'
op|'='
name|'addresses_dict'
op|'.'
name|'items'
op|'('
op|')'
op|'['
name|'i'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'network_elem'
op|'.'
name|'get'
op|'('
string|"'id'"
op|')'
op|')'
op|','
name|'str'
op|'('
name|'network'
op|'['
number|'0'
op|']'
op|')'
op|')'
newline|'\n'
name|'ip_elems'
op|'='
name|'network_elem'
op|'.'
name|'findall'
op|'('
string|"'{0}ip'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
newline|'\n'
name|'for'
name|'z'
op|','
name|'ip_elem'
name|'in'
name|'enumerate'
op|'('
name|'ip_elems'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'ip'
op|'='
name|'network'
op|'['
number|'1'
op|']'
op|'['
name|'z'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'ip_elem'
op|'.'
name|'get'
op|'('
string|"'version'"
op|')'
op|')'
op|','
nl|'\n'
name|'str'
op|'('
name|'ip'
op|'['
string|"'version'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'ip_elem'
op|'.'
name|'get'
op|'('
string|"'addr'"
op|')'
op|')'
op|','
nl|'\n'
name|'str'
op|'('
name|'ip'
op|'['
string|"'addr'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_validate_required_attributes
dedent|''
dedent|''
dedent|''
name|'def'
name|'_validate_required_attributes'
op|'('
name|'self'
op|','
name|'root'
op|','
name|'server_dict'
op|','
name|'attributes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'key'
name|'in'
name|'attributes'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'root'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|','
name|'str'
op|'('
name|'server_dict'
op|'['
name|'key'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_xml_declaration
dedent|''
dedent|''
name|'def'
name|'test_xml_declaration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'servers'
op|'.'
name|'ServerTemplate'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'has_dec'
op|'='
name|'output'
op|'.'
name|'startswith'
op|'('
string|'"<?xml version=\'1.0\' encoding=\'UTF-8\'?>"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'has_dec'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_show
dedent|''
name|'def'
name|'test_show'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'servers'
op|'.'
name|'ServerTemplate'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'root'
op|'='
name|'etree'
op|'.'
name|'XML'
op|'('
name|'output'
op|')'
newline|'\n'
name|'xmlutil'
op|'.'
name|'validate_schema'
op|'('
name|'root'
op|','
string|"'server'"
op|')'
newline|'\n'
nl|'\n'
name|'server_dict'
op|'='
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_validate_required_attributes'
op|'('
name|'root'
op|','
name|'server_dict'
op|','
nl|'\n'
name|'self'
op|'.'
name|'USERS_ATTRIBUTES'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_validate_xml'
op|'('
name|'root'
op|','
name|'server_dict'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create
dedent|''
name|'def'
name|'test_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'servers'
op|'.'
name|'FullServerTemplate'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|'"server"'
op|']'
op|'['
string|'"adminPass"'
op|']'
op|'='
string|'"test_password"'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'root'
op|'='
name|'etree'
op|'.'
name|'XML'
op|'('
name|'output'
op|')'
newline|'\n'
name|'xmlutil'
op|'.'
name|'validate_schema'
op|'('
name|'root'
op|','
string|"'server'"
op|')'
newline|'\n'
nl|'\n'
name|'server_dict'
op|'='
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_validate_required_attributes'
op|'('
name|'root'
op|','
name|'server_dict'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ADMINS_ATTRIBUTES'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_validate_xml'
op|'('
name|'root'
op|','
name|'server_dict'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_index
dedent|''
name|'def'
name|'test_index'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'servers'
op|'.'
name|'MinimalServersTemplate'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'uuid1'
op|'='
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
number|'1'
op|')'
newline|'\n'
name|'uuid2'
op|'='
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
number|'2'
op|')'
newline|'\n'
name|'expected_server_href'
op|'='
string|"'http://localhost/v2/servers/%s'"
op|'%'
name|'uuid1'
newline|'\n'
name|'expected_server_bookmark'
op|'='
string|"'http://localhost/servers/%s'"
op|'%'
name|'uuid1'
newline|'\n'
name|'expected_server_href_2'
op|'='
string|"'http://localhost/v2/servers/%s'"
op|'%'
name|'uuid2'
newline|'\n'
name|'expected_server_bookmark_2'
op|'='
string|"'http://localhost/servers/%s'"
op|'%'
name|'uuid2'
newline|'\n'
name|'fixture'
op|'='
op|'{'
string|'"servers"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
number|'1'
op|')'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server"'
op|','
nl|'\n'
string|"'links'"
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'href'"
op|':'
name|'expected_server_href'
op|','
nl|'\n'
string|"'rel'"
op|':'
string|"'self'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'href'"
op|':'
name|'expected_server_bookmark'
op|','
nl|'\n'
string|"'rel'"
op|':'
string|"'bookmark'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
number|'2'
op|')'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server_2"'
op|','
nl|'\n'
string|"'links'"
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'href'"
op|':'
name|'expected_server_href_2'
op|','
nl|'\n'
string|"'rel'"
op|':'
string|"'self'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'href'"
op|':'
name|'expected_server_bookmark_2'
op|','
nl|'\n'
string|"'rel'"
op|':'
string|"'bookmark'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'fixture'
op|')'
newline|'\n'
name|'root'
op|'='
name|'etree'
op|'.'
name|'XML'
op|'('
name|'output'
op|')'
newline|'\n'
name|'xmlutil'
op|'.'
name|'validate_schema'
op|'('
name|'root'
op|','
string|"'servers_index'"
op|')'
newline|'\n'
name|'server_elems'
op|'='
name|'root'
op|'.'
name|'findall'
op|'('
string|"'{0}server'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'server_elems'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'server_elem'
name|'in'
name|'enumerate'
op|'('
name|'server_elems'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'server_dict'
op|'='
name|'fixture'
op|'['
string|"'servers'"
op|']'
op|'['
name|'i'
op|']'
newline|'\n'
name|'for'
name|'key'
name|'in'
op|'['
string|"'name'"
op|','
string|"'id'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'server_elem'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|','
name|'str'
op|'('
name|'server_dict'
op|'['
name|'key'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'link_nodes'
op|'='
name|'server_elem'
op|'.'
name|'findall'
op|'('
string|"'{0}link'"
op|'.'
name|'format'
op|'('
name|'ATOMNS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'link_nodes'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'link'
name|'in'
name|'enumerate'
op|'('
name|'server_dict'
op|'['
string|"'links'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'link'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'link_nodes'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_index_with_servers_links
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_index_with_servers_links'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'servers'
op|'.'
name|'MinimalServersTemplate'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'uuid1'
op|'='
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
number|'1'
op|')'
newline|'\n'
name|'uuid2'
op|'='
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
number|'2'
op|')'
newline|'\n'
name|'expected_server_href'
op|'='
string|"'http://localhost/v2/servers/%s'"
op|'%'
name|'uuid1'
newline|'\n'
name|'expected_server_next'
op|'='
name|'self'
op|'.'
name|'SERVER_NEXT'
op|'%'
op|'('
number|'2'
op|','
number|'2'
op|')'
newline|'\n'
name|'expected_server_bookmark'
op|'='
string|"'http://localhost/servers/%s'"
op|'%'
name|'uuid1'
newline|'\n'
name|'expected_server_href_2'
op|'='
string|"'http://localhost/v2/servers/%s'"
op|'%'
name|'uuid2'
newline|'\n'
name|'expected_server_bookmark_2'
op|'='
string|"'http://localhost/servers/%s'"
op|'%'
name|'uuid2'
newline|'\n'
name|'fixture'
op|'='
op|'{'
string|'"servers"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
number|'1'
op|')'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server"'
op|','
nl|'\n'
string|"'links'"
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'href'"
op|':'
name|'expected_server_href'
op|','
nl|'\n'
string|"'rel'"
op|':'
string|"'self'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'href'"
op|':'
name|'expected_server_bookmark'
op|','
nl|'\n'
string|"'rel'"
op|':'
string|"'bookmark'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
number|'2'
op|')'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server_2"'
op|','
nl|'\n'
string|"'links'"
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'href'"
op|':'
name|'expected_server_href_2'
op|','
nl|'\n'
string|"'rel'"
op|':'
string|"'self'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'href'"
op|':'
name|'expected_server_bookmark_2'
op|','
nl|'\n'
string|"'rel'"
op|':'
string|"'bookmark'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|'"servers_links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'rel'"
op|':'
string|"'next'"
op|','
nl|'\n'
string|"'href'"
op|':'
name|'expected_server_next'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'fixture'
op|')'
newline|'\n'
name|'root'
op|'='
name|'etree'
op|'.'
name|'XML'
op|'('
name|'output'
op|')'
newline|'\n'
name|'xmlutil'
op|'.'
name|'validate_schema'
op|'('
name|'root'
op|','
string|"'servers_index'"
op|')'
newline|'\n'
name|'server_elems'
op|'='
name|'root'
op|'.'
name|'findall'
op|'('
string|"'{0}server'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'server_elems'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'server_elem'
name|'in'
name|'enumerate'
op|'('
name|'server_elems'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'server_dict'
op|'='
name|'fixture'
op|'['
string|"'servers'"
op|']'
op|'['
name|'i'
op|']'
newline|'\n'
name|'for'
name|'key'
name|'in'
op|'['
string|"'name'"
op|','
string|"'id'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'server_elem'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|','
name|'str'
op|'('
name|'server_dict'
op|'['
name|'key'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'link_nodes'
op|'='
name|'server_elem'
op|'.'
name|'findall'
op|'('
string|"'{0}link'"
op|'.'
name|'format'
op|'('
name|'ATOMNS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'link_nodes'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'link'
name|'in'
name|'enumerate'
op|'('
name|'server_dict'
op|'['
string|"'links'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'link'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'link_nodes'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
comment|'# Check servers_links'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'servers_links'
op|'='
name|'root'
op|'.'
name|'findall'
op|'('
string|"'{0}link'"
op|'.'
name|'format'
op|'('
name|'ATOMNS'
op|')'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'link'
name|'in'
name|'enumerate'
op|'('
name|'fixture'
op|'['
string|"'servers_links'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'link'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers_links'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detail
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_detail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'servers'
op|'.'
name|'ServersTemplate'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'uuid1'
op|'='
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
number|'1'
op|')'
newline|'\n'
name|'expected_server_href'
op|'='
string|"'http://localhost/v2/servers/%s'"
op|'%'
name|'uuid1'
newline|'\n'
name|'expected_server_bookmark'
op|'='
string|"'http://localhost/servers/%s'"
op|'%'
name|'uuid1'
newline|'\n'
name|'expected_image_bookmark'
op|'='
name|'self'
op|'.'
name|'IMAGE_BOOKMARK'
newline|'\n'
name|'expected_flavor_bookmark'
op|'='
name|'self'
op|'.'
name|'FLAVOR_BOOKMARK'
newline|'\n'
nl|'\n'
name|'uuid2'
op|'='
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
number|'2'
op|')'
newline|'\n'
name|'expected_server_href_2'
op|'='
string|"'http://localhost/v2/servers/%s'"
op|'%'
name|'uuid2'
newline|'\n'
name|'expected_server_bookmark_2'
op|'='
string|"'http://localhost/servers/%s'"
op|'%'
name|'uuid2'
newline|'\n'
name|'fixture'
op|'='
op|'{'
string|'"servers"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
number|'1'
op|')'
op|','
nl|'\n'
string|'"user_id"'
op|':'
string|'"fake"'
op|','
nl|'\n'
string|'"tenant_id"'
op|':'
string|'"fake"'
op|','
nl|'\n'
string|"'created'"
op|':'
name|'self'
op|'.'
name|'TIMESTAMP'
op|','
nl|'\n'
string|"'updated'"
op|':'
name|'self'
op|'.'
name|'TIMESTAMP'
op|','
nl|'\n'
string|'"progress"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server"'
op|','
nl|'\n'
string|'"status"'
op|':'
string|'"BUILD"'
op|','
nl|'\n'
string|'"accessIPv4"'
op|':'
string|'"1.2.3.4"'
op|','
nl|'\n'
string|'"accessIPv6"'
op|':'
string|'"fead::1234"'
op|','
nl|'\n'
string|'"hostId"'
op|':'
string|"'e4d909c290d0fb1ca068ffaddf22cbd0'"
op|','
nl|'\n'
string|'"image"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"5"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'expected_image_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'expected_flavor_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"addresses"'
op|':'
op|'{'
nl|'\n'
string|'"network_one"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'4'
op|','
nl|'\n'
string|'"addr"'
op|':'
string|'"67.23.10.138"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'6'
op|','
nl|'\n'
string|'"addr"'
op|':'
string|'"::babe:67.23.10.138"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|'"network_two"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'4'
op|','
nl|'\n'
string|'"addr"'
op|':'
string|'"67.23.10.139"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'6'
op|','
nl|'\n'
string|'"addr"'
op|':'
string|'"::babe:67.23.10.139"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
nl|'\n'
string|'"Open"'
op|':'
string|'"Stack"'
op|','
nl|'\n'
string|'"Number"'
op|':'
string|'"1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"href"'
op|':'
name|'expected_server_href'
op|','
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"href"'
op|':'
name|'expected_server_bookmark'
op|','
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
name|'fakes'
op|'.'
name|'get_fake_uuid'
op|'('
number|'2'
op|')'
op|','
nl|'\n'
string|'"user_id"'
op|':'
string|"'fake'"
op|','
nl|'\n'
string|'"tenant_id"'
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'created'"
op|':'
name|'self'
op|'.'
name|'TIMESTAMP'
op|','
nl|'\n'
string|"'updated'"
op|':'
name|'self'
op|'.'
name|'TIMESTAMP'
op|','
nl|'\n'
string|'"progress"'
op|':'
number|'100'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server_2"'
op|','
nl|'\n'
string|'"status"'
op|':'
string|'"ACTIVE"'
op|','
nl|'\n'
string|'"accessIPv4"'
op|':'
string|'"1.2.3.4"'
op|','
nl|'\n'
string|'"accessIPv6"'
op|':'
string|'"fead::1234"'
op|','
nl|'\n'
string|'"hostId"'
op|':'
string|"'e4d909c290d0fb1ca068ffaddf22cbd0'"
op|','
nl|'\n'
string|'"image"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"5"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'expected_image_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'expected_flavor_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"addresses"'
op|':'
op|'{'
nl|'\n'
string|'"network_one"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'4'
op|','
nl|'\n'
string|'"addr"'
op|':'
string|'"67.23.10.138"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'6'
op|','
nl|'\n'
string|'"addr"'
op|':'
string|'"::babe:67.23.10.138"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|'"network_two"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'4'
op|','
nl|'\n'
string|'"addr"'
op|':'
string|'"67.23.10.139"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'6'
op|','
nl|'\n'
string|'"addr"'
op|':'
string|'"::babe:67.23.10.139"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
nl|'\n'
string|'"Open"'
op|':'
string|'"Stack"'
op|','
nl|'\n'
string|'"Number"'
op|':'
string|'"2"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"href"'
op|':'
name|'expected_server_href_2'
op|','
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"href"'
op|':'
name|'expected_server_bookmark_2'
op|','
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'fixture'
op|')'
newline|'\n'
name|'root'
op|'='
name|'etree'
op|'.'
name|'XML'
op|'('
name|'output'
op|')'
newline|'\n'
name|'xmlutil'
op|'.'
name|'validate_schema'
op|'('
name|'root'
op|','
string|"'servers'"
op|')'
newline|'\n'
name|'server_elems'
op|'='
name|'root'
op|'.'
name|'findall'
op|'('
string|"'{0}server'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'server_elems'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'server_elem'
name|'in'
name|'enumerate'
op|'('
name|'server_elems'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'server_dict'
op|'='
name|'fixture'
op|'['
string|"'servers'"
op|']'
op|'['
name|'i'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_validate_required_attributes'
op|'('
name|'server_elem'
op|','
name|'server_dict'
op|','
nl|'\n'
name|'self'
op|'.'
name|'USERS_ATTRIBUTES'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_validate_xml'
op|'('
name|'server_elem'
op|','
name|'server_dict'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update
dedent|''
dedent|''
name|'def'
name|'test_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'servers'
op|'.'
name|'ServerTemplate'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|'"server"'
op|']'
op|'['
string|'"fault"'
op|']'
op|'='
op|'{'
nl|'\n'
string|'"code"'
op|':'
number|'500'
op|','
nl|'\n'
string|'"created"'
op|':'
name|'self'
op|'.'
name|'TIMESTAMP'
op|','
nl|'\n'
string|'"message"'
op|':'
string|'"Error Message"'
op|','
nl|'\n'
string|'"details"'
op|':'
string|'"Fault details"'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'output'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'root'
op|'='
name|'etree'
op|'.'
name|'XML'
op|'('
name|'output'
op|')'
newline|'\n'
name|'xmlutil'
op|'.'
name|'validate_schema'
op|'('
name|'root'
op|','
string|"'server'"
op|')'
newline|'\n'
nl|'\n'
name|'server_dict'
op|'='
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_validate_required_attributes'
op|'('
name|'root'
op|','
name|'server_dict'
op|','
nl|'\n'
name|'self'
op|'.'
name|'USERS_ATTRIBUTES'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_validate_xml'
op|'('
name|'root'
op|','
name|'server_dict'
op|')'
newline|'\n'
name|'fault_root'
op|'='
name|'root'
op|'.'
name|'find'
op|'('
string|"'{0}fault'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
newline|'\n'
name|'fault_dict'
op|'='
name|'server_dict'
op|'['
string|"'fault'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fault_root'
op|'.'
name|'get'
op|'('
string|'"code"'
op|')'
op|','
name|'str'
op|'('
name|'fault_dict'
op|'['
string|'"code"'
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fault_root'
op|'.'
name|'get'
op|'('
string|'"created"'
op|')'
op|','
name|'fault_dict'
op|'['
string|'"created"'
op|']'
op|')'
newline|'\n'
name|'msg_elem'
op|'='
name|'fault_root'
op|'.'
name|'find'
op|'('
string|"'{0}message'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'msg_elem'
op|'.'
name|'text'
op|','
name|'fault_dict'
op|'['
string|'"message"'
op|']'
op|')'
newline|'\n'
name|'det_elem'
op|'='
name|'fault_root'
op|'.'
name|'find'
op|'('
string|"'{0}details'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'det_elem'
op|'.'
name|'text'
op|','
name|'fault_dict'
op|'['
string|'"details"'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_action
dedent|''
name|'def'
name|'test_action'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'servers'
op|'.'
name|'FullServerTemplate'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'body'
op|'['
string|'"server"'
op|']'
op|'['
string|'"adminPass"'
op|']'
op|'='
string|'"test_password"'
newline|'\n'
name|'output'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'root'
op|'='
name|'etree'
op|'.'
name|'XML'
op|'('
name|'output'
op|')'
newline|'\n'
name|'xmlutil'
op|'.'
name|'validate_schema'
op|'('
name|'root'
op|','
string|"'server'"
op|')'
newline|'\n'
nl|'\n'
name|'server_dict'
op|'='
name|'self'
op|'.'
name|'body'
op|'['
string|"'server'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_validate_required_attributes'
op|'('
name|'root'
op|','
name|'server_dict'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ADMINS_ATTRIBUTES'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_validate_xml'
op|'('
name|'root'
op|','
name|'server_dict'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersAllExtensionsTestCase
dedent|''
dedent|''
name|'class'
name|'ServersAllExtensionsTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Servers tests using default API router with all extensions enabled.\n\n    The intent here is to catch cases where extensions end up throwing\n    an exception because of a malformed request before the core API\n    gets a chance to validate the request and return a 422 response.\n\n    For example, ServerDiskConfigController extends servers.Controller:\n\n      @wsgi.extends\n      def create(self, req, body):\n          if \'server\' in body:\n                self._set_disk_config(body[\'server\'])\n          resp_obj = (yield)\n          self._show(req, resp_obj)\n\n    we want to ensure that the extension isn\'t barfing on an invalid\n    body.\n    """'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ServersAllExtensionsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'='
name|'compute'
op|'.'
name|'APIRouter'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_missing_server
dedent|''
name|'def'
name|'test_create_missing_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test create with malformed body.'
nl|'\n'
nl|'\n'
DECL|function|fake_create
indent|'        '
name|'def'
name|'fake_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
string|'"Should not reach the compute API."'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'fake_create'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|"'application/json'"
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
op|'{'
string|"'a'"
op|':'
string|"'b'"
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'422'
op|','
name|'res'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_missing_server
dedent|''
name|'def'
name|'test_update_missing_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test create with malformed body.'
nl|'\n'
nl|'\n'
DECL|function|fake_update
indent|'        '
name|'def'
name|'fake_update'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
string|'"Should not reach the compute API."'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute_api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'fake_update'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/1'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|"'application/json'"
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
op|'{'
string|"'a'"
op|':'
string|"'b'"
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'422'
op|','
name|'res'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersUnprocessableEntityTestCase
dedent|''
dedent|''
name|'class'
name|'ServersUnprocessableEntityTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Tests of places we throw 422 Unprocessable Entity from\n    """'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ServersUnprocessableEntityTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ext_mgr'
op|'='
name|'extensions'
op|'.'
name|'ExtensionManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ext_mgr'
op|'.'
name|'extensions'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'servers'
op|'.'
name|'Controller'
op|'('
name|'self'
op|'.'
name|'ext_mgr'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_unprocessable_server_create
dedent|''
name|'def'
name|'_unprocessable_server_create'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPUnprocessableEntity'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'req'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_server_no_body
dedent|''
name|'def'
name|'test_create_server_no_body'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_unprocessable_server_create'
op|'('
name|'body'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_server_missing_server
dedent|''
name|'def'
name|'test_create_server_missing_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
op|'{'
string|"'a'"
op|':'
string|"'b'"
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_unprocessable_server_create'
op|'('
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_server_malformed_entity
dedent|''
name|'def'
name|'test_create_server_malformed_entity'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
string|"'string'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_unprocessable_server_create'
op|'('
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_unprocessable_server_update
dedent|''
name|'def'
name|'_unprocessable_server_update'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/fake/servers/%s'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPUnprocessableEntity'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'update'
op|','
name|'req'
op|','
name|'FAKE_UUID'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_no_body
dedent|''
name|'def'
name|'test_update_server_no_body'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_unprocessable_server_update'
op|'('
name|'body'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_missing_server
dedent|''
name|'def'
name|'test_update_server_missing_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'foo'"
op|':'
op|'{'
string|"'a'"
op|':'
string|"'b'"
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_unprocessable_server_update'
op|'('
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_update_malformed_entity
dedent|''
name|'def'
name|'test_create_update_malformed_entity'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'server'"
op|':'
string|"'string'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_unprocessable_server_update'
op|'('
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
