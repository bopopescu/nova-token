begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2011 X.commerce, a business unit of eBay Inc.'
nl|'\n'
comment|'# Copyright 2011 OpenStack LLC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'iso8601'
newline|'\n'
name|'from'
name|'lxml'
name|'import'
name|'etree'
newline|'\n'
name|'import'
name|'webob'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'compute'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
name|'import'
name|'extensions'
name|'as'
name|'compute_extensions'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'extensions'
name|'as'
name|'base_extensions'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'wsgi'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'xmlutil'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'fakes'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
nl|'\n'
DECL|variable|NS
name|'NS'
op|'='
string|'"{http://docs.openstack.org/common/api/v1.0}"'
newline|'\n'
DECL|variable|ATOMNS
name|'ATOMNS'
op|'='
string|'"{http://www.w3.org/2005/Atom}"'
newline|'\n'
DECL|variable|response_body
name|'response_body'
op|'='
string|'"Try to say this Mr. Knox, sir..."'
newline|'\n'
DECL|variable|extension_body
name|'extension_body'
op|'='
string|'"I am not a fox!"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|StubController
name|'class'
name|'StubController'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'='
name|'body'
newline|'\n'
nl|'\n'
DECL|member|index
dedent|''
name|'def'
name|'index'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'body'
newline|'\n'
nl|'\n'
DECL|member|create
dedent|''
name|'def'
name|'create'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'msg'
op|'='
string|"'All aboard the fail train!'"
newline|'\n'
name|'raise'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|'('
name|'explanation'
op|'='
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|show
dedent|''
name|'def'
name|'show'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|StubActionController
dedent|''
dedent|''
name|'class'
name|'StubActionController'
op|'('
name|'wsgi'
op|'.'
name|'Controller'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'='
name|'body'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'wsgi'
op|'.'
name|'action'
op|'('
string|"'fooAction'"
op|')'
newline|'\n'
DECL|member|_action_foo
name|'def'
name|'_action_foo'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'body'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|StubControllerExtension
dedent|''
dedent|''
name|'class'
name|'StubControllerExtension'
op|'('
name|'base_extensions'
op|'.'
name|'ExtensionDescriptor'
op|')'
op|':'
newline|'\n'
DECL|variable|name
indent|'    '
name|'name'
op|'='
string|"'twaadle'"
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|StubEarlyExtensionController
dedent|''
dedent|''
name|'class'
name|'StubEarlyExtensionController'
op|'('
name|'wsgi'
op|'.'
name|'Controller'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'='
name|'body'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'wsgi'
op|'.'
name|'extends'
newline|'\n'
DECL|member|index
name|'def'
name|'index'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'yield'
name|'self'
op|'.'
name|'body'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'wsgi'
op|'.'
name|'extends'
op|'('
name|'action'
op|'='
string|"'fooAction'"
op|')'
newline|'\n'
DECL|member|_action_foo
name|'def'
name|'_action_foo'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'id'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'yield'
name|'self'
op|'.'
name|'body'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|StubLateExtensionController
dedent|''
dedent|''
name|'class'
name|'StubLateExtensionController'
op|'('
name|'wsgi'
op|'.'
name|'Controller'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'='
name|'body'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'wsgi'
op|'.'
name|'extends'
newline|'\n'
DECL|member|index
name|'def'
name|'index'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'resp_obj'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'body'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'wsgi'
op|'.'
name|'extends'
op|'('
name|'action'
op|'='
string|"'fooAction'"
op|')'
newline|'\n'
DECL|member|_action_foo
name|'def'
name|'_action_foo'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'resp_obj'
op|','
name|'id'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'body'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|StubExtensionManager
dedent|''
dedent|''
name|'class'
name|'StubExtensionManager'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Provides access to Tweedle Beetles"""'
newline|'\n'
nl|'\n'
DECL|variable|name
name|'name'
op|'='
string|'"Tweedle Beetle Extension"'
newline|'\n'
DECL|variable|alias
name|'alias'
op|'='
string|'"TWDLBETL"'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'resource_ext'
op|'='
name|'None'
op|','
name|'action_ext'
op|'='
name|'None'
op|','
name|'request_ext'
op|'='
name|'None'
op|','
nl|'\n'
name|'controller_ext'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'resource_ext'
op|'='
name|'resource_ext'
newline|'\n'
name|'self'
op|'.'
name|'action_ext'
op|'='
name|'action_ext'
newline|'\n'
name|'self'
op|'.'
name|'request_ext'
op|'='
name|'request_ext'
newline|'\n'
name|'self'
op|'.'
name|'controller_ext'
op|'='
name|'controller_ext'
newline|'\n'
name|'self'
op|'.'
name|'extra_resource_ext'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|get_resources
dedent|''
name|'def'
name|'get_resources'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resource_exts'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'resource_ext'
op|':'
newline|'\n'
indent|'            '
name|'resource_exts'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'resource_ext'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'extra_resource_ext'
op|':'
newline|'\n'
indent|'            '
name|'resource_exts'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'extra_resource_ext'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'resource_exts'
newline|'\n'
nl|'\n'
DECL|member|get_actions
dedent|''
name|'def'
name|'get_actions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'action_exts'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'action_ext'
op|':'
newline|'\n'
indent|'            '
name|'action_exts'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'action_ext'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'action_exts'
newline|'\n'
nl|'\n'
DECL|member|get_request_extensions
dedent|''
name|'def'
name|'get_request_extensions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'request_extensions'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'request_ext'
op|':'
newline|'\n'
indent|'            '
name|'request_extensions'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'request_ext'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'request_extensions'
newline|'\n'
nl|'\n'
DECL|member|get_controller_extensions
dedent|''
name|'def'
name|'get_controller_extensions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'controller_extensions'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'controller_ext'
op|':'
newline|'\n'
indent|'            '
name|'controller_extensions'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'controller_ext'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'controller_extensions'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ExtensionTestCase
dedent|''
dedent|''
name|'class'
name|'ExtensionTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ExtensionTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'ext_list'
op|'='
name|'FLAGS'
op|'.'
name|'osapi_compute_extension'
op|'['
op|':'
op|']'
newline|'\n'
name|'fox'
op|'='
op|'('
string|"'nova.tests.api.openstack.compute.extensions.'"
nl|'\n'
string|"'foxinsocks.Foxinsocks'"
op|')'
newline|'\n'
name|'if'
name|'fox'
name|'not'
name|'in'
name|'ext_list'
op|':'
newline|'\n'
indent|'            '
name|'ext_list'
op|'.'
name|'append'
op|'('
name|'fox'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'osapi_compute_extension'
op|'='
name|'ext_list'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ExtensionControllerTest
dedent|''
dedent|''
dedent|''
name|'class'
name|'ExtensionControllerTest'
op|'('
name|'ExtensionTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ExtensionControllerTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ext_list'
op|'='
op|'['
nl|'\n'
string|'"AdminActions"'
op|','
nl|'\n'
string|'"Aggregates"'
op|','
nl|'\n'
string|'"Certificates"'
op|','
nl|'\n'
string|'"Cloudpipe"'
op|','
nl|'\n'
string|'"Console_output"'
op|','
nl|'\n'
string|'"Consoles"'
op|','
nl|'\n'
string|'"Createserverext"'
op|','
nl|'\n'
string|'"DeferredDelete"'
op|','
nl|'\n'
string|'"DiskConfig"'
op|','
nl|'\n'
string|'"ExtendedStatus"'
op|','
nl|'\n'
string|'"ExtendedServerAttributes"'
op|','
nl|'\n'
string|'"FlavorExtraSpecs"'
op|','
nl|'\n'
string|'"FlavorExtraData"'
op|','
nl|'\n'
string|'"FlavorManage"'
op|','
nl|'\n'
string|'"Floating_ips"'
op|','
nl|'\n'
string|'"Floating_ip_dns"'
op|','
nl|'\n'
string|'"Floating_ip_pools"'
op|','
nl|'\n'
string|'"Fox In Socks"'
op|','
nl|'\n'
string|'"Hosts"'
op|','
nl|'\n'
string|'"Keypairs"'
op|','
nl|'\n'
string|'"Multinic"'
op|','
nl|'\n'
string|'"Networks"'
op|','
nl|'\n'
string|'"QuotaClasses"'
op|','
nl|'\n'
string|'"Quotas"'
op|','
nl|'\n'
string|'"Rescue"'
op|','
nl|'\n'
string|'"SchedulerHints"'
op|','
nl|'\n'
string|'"SecurityGroups"'
op|','
nl|'\n'
string|'"ServerDiagnostics"'
op|','
nl|'\n'
string|'"ServerStartStop"'
op|','
nl|'\n'
string|'"SimpleTenantUsage"'
op|','
nl|'\n'
string|'"UserData"'
op|','
nl|'\n'
string|'"VirtualInterfaces"'
op|','
nl|'\n'
string|'"Volumes"'
op|','
nl|'\n'
string|'"VolumeTypes"'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'ext_list'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_extensions_json
dedent|''
name|'def'
name|'test_list_extensions_json'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'compute'
op|'.'
name|'APIRouter'
op|'('
op|')'
newline|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/fake/extensions"'
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
comment|'# Make sure we have all the extensions, extra extensions being OK.'
nl|'\n'
name|'data'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'names'
op|'='
op|'['
name|'str'
op|'('
name|'x'
op|'['
string|"'name'"
op|']'
op|')'
name|'for'
name|'x'
name|'in'
name|'data'
op|'['
string|"'extensions'"
op|']'
nl|'\n'
name|'if'
name|'str'
op|'('
name|'x'
op|'['
string|"'name'"
op|']'
op|')'
name|'in'
name|'self'
op|'.'
name|'ext_list'
op|']'
newline|'\n'
name|'names'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'names'
op|','
name|'self'
op|'.'
name|'ext_list'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure all the timestamps are valid according to iso8601'
nl|'\n'
name|'for'
name|'ext'
name|'in'
name|'data'
op|'['
string|"'extensions'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'iso8601'
op|'.'
name|'parse_date'
op|'('
name|'ext'
op|'['
string|"'updated'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Make sure that at least Fox in Sox is correct.'
nl|'\n'
dedent|''
op|'('
name|'fox_ext'
op|','
op|')'
op|'='
op|'['
nl|'\n'
name|'x'
name|'for'
name|'x'
name|'in'
name|'data'
op|'['
string|"'extensions'"
op|']'
name|'if'
name|'x'
op|'['
string|"'alias'"
op|']'
op|'=='
string|"'FOXNSOX'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fox_ext'
op|','
op|'{'
nl|'\n'
string|"'namespace'"
op|':'
string|"'http://www.fox.in.socks/api/ext/pie/v1.0'"
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'Fox In Socks'"
op|','
nl|'\n'
string|"'updated'"
op|':'
string|"'2011-01-22T13:25:27-06:00'"
op|','
nl|'\n'
string|"'description'"
op|':'
string|"'The Fox In Socks Extension'"
op|','
nl|'\n'
string|"'alias'"
op|':'
string|"'FOXNSOX'"
op|','
nl|'\n'
string|"'links'"
op|':'
op|'['
op|']'
nl|'\n'
op|'}'
op|','
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'ext'
name|'in'
name|'data'
op|'['
string|"'extensions'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'url'
op|'='
string|"'/fake/extensions/%s'"
op|'%'
name|'ext'
op|'['
string|"'alias'"
op|']'
newline|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
name|'url'
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'app'
op|')'
newline|'\n'
name|'output'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'output'
op|'['
string|"'extension'"
op|']'
op|'['
string|"'alias'"
op|']'
op|','
name|'ext'
op|'['
string|"'alias'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_extension_json
dedent|''
dedent|''
name|'def'
name|'test_get_extension_json'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'compute'
op|'.'
name|'APIRouter'
op|'('
op|')'
newline|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/fake/extensions/FOXNSOX"'
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
name|'data'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'data'
op|'['
string|"'extension'"
op|']'
op|','
op|'{'
nl|'\n'
string|'"namespace"'
op|':'
string|'"http://www.fox.in.socks/api/ext/pie/v1.0"'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"Fox In Socks"'
op|','
nl|'\n'
string|'"updated"'
op|':'
string|'"2011-01-22T13:25:27-06:00"'
op|','
nl|'\n'
string|'"description"'
op|':'
string|'"The Fox In Socks Extension"'
op|','
nl|'\n'
string|'"alias"'
op|':'
string|'"FOXNSOX"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_non_existing_extension_json
dedent|''
name|'def'
name|'test_get_non_existing_extension_json'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'compute'
op|'.'
name|'APIRouter'
op|'('
op|')'
newline|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/fake/extensions/4"'
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'404'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_extensions_xml
dedent|''
name|'def'
name|'test_list_extensions_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'compute'
op|'.'
name|'APIRouter'
op|'('
op|')'
newline|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/fake/extensions"'
op|')'
newline|'\n'
name|'request'
op|'.'
name|'accept'
op|'='
string|'"application/xml"'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
name|'root'
op|'='
name|'etree'
op|'.'
name|'XML'
op|'('
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'root'
op|'.'
name|'tag'
op|'.'
name|'split'
op|'('
string|"'extensions'"
op|')'
op|'['
number|'0'
op|']'
op|','
name|'NS'
op|')'
newline|'\n'
nl|'\n'
comment|'# Make sure we have all the extensions, extras extensions being OK.'
nl|'\n'
name|'exts'
op|'='
name|'root'
op|'.'
name|'findall'
op|'('
string|"'{0}extension'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'len'
op|'('
name|'exts'
op|')'
op|'>='
name|'len'
op|'('
name|'self'
op|'.'
name|'ext_list'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Make sure that at least Fox in Sox is correct.'
nl|'\n'
op|'('
name|'fox_ext'
op|','
op|')'
op|'='
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'exts'
name|'if'
name|'x'
op|'.'
name|'get'
op|'('
string|"'alias'"
op|')'
op|'=='
string|"'FOXNSOX'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fox_ext'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
string|"'Fox In Socks'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fox_ext'
op|'.'
name|'get'
op|'('
string|"'namespace'"
op|')'
op|','
nl|'\n'
string|"'http://www.fox.in.socks/api/ext/pie/v1.0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fox_ext'
op|'.'
name|'get'
op|'('
string|"'updated'"
op|')'
op|','
string|"'2011-01-22T13:25:27-06:00'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fox_ext'
op|'.'
name|'findtext'
op|'('
string|"'{0}description'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
op|','
nl|'\n'
string|"'The Fox In Socks Extension'"
op|')'
newline|'\n'
nl|'\n'
name|'xmlutil'
op|'.'
name|'validate_schema'
op|'('
name|'root'
op|','
string|"'extensions'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_extension_xml
dedent|''
name|'def'
name|'test_get_extension_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'compute'
op|'.'
name|'APIRouter'
op|'('
op|')'
newline|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/fake/extensions/FOXNSOX"'
op|')'
newline|'\n'
name|'request'
op|'.'
name|'accept'
op|'='
string|'"application/xml"'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'xml'
op|'='
name|'response'
op|'.'
name|'body'
newline|'\n'
nl|'\n'
name|'root'
op|'='
name|'etree'
op|'.'
name|'XML'
op|'('
name|'xml'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'root'
op|'.'
name|'tag'
op|'.'
name|'split'
op|'('
string|"'extension'"
op|')'
op|'['
number|'0'
op|']'
op|','
name|'NS'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'root'
op|'.'
name|'get'
op|'('
string|"'alias'"
op|')'
op|','
string|"'FOXNSOX'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'root'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
string|"'Fox In Socks'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'root'
op|'.'
name|'get'
op|'('
string|"'namespace'"
op|')'
op|','
nl|'\n'
string|"'http://www.fox.in.socks/api/ext/pie/v1.0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'root'
op|'.'
name|'get'
op|'('
string|"'updated'"
op|')'
op|','
string|"'2011-01-22T13:25:27-06:00'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'root'
op|'.'
name|'findtext'
op|'('
string|"'{0}description'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
op|','
nl|'\n'
string|"'The Fox In Socks Extension'"
op|')'
newline|'\n'
nl|'\n'
name|'xmlutil'
op|'.'
name|'validate_schema'
op|'('
name|'root'
op|','
string|"'extension'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ResourceExtensionTest
dedent|''
dedent|''
name|'class'
name|'ResourceExtensionTest'
op|'('
name|'ExtensionTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_no_extension_present
indent|'    '
name|'def'
name|'test_no_extension_present'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manager'
op|'='
name|'StubExtensionManager'
op|'('
name|'None'
op|')'
newline|'\n'
name|'app'
op|'='
name|'compute'
op|'.'
name|'APIRouter'
op|'('
name|'manager'
op|')'
newline|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/blah"'
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'404'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_resources
dedent|''
name|'def'
name|'test_get_resources'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'res_ext'
op|'='
name|'base_extensions'
op|'.'
name|'ResourceExtension'
op|'('
string|"'tweedles'"
op|','
nl|'\n'
name|'StubController'
op|'('
name|'response_body'
op|')'
op|')'
newline|'\n'
name|'manager'
op|'='
name|'StubExtensionManager'
op|'('
name|'res_ext'
op|')'
newline|'\n'
name|'app'
op|'='
name|'compute'
op|'.'
name|'APIRouter'
op|'('
name|'manager'
op|')'
newline|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/fake/tweedles"'
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response_body'
op|','
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_resources_with_controller
dedent|''
name|'def'
name|'test_get_resources_with_controller'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'res_ext'
op|'='
name|'base_extensions'
op|'.'
name|'ResourceExtension'
op|'('
string|"'tweedles'"
op|','
nl|'\n'
name|'StubController'
op|'('
name|'response_body'
op|')'
op|')'
newline|'\n'
name|'manager'
op|'='
name|'StubExtensionManager'
op|'('
name|'res_ext'
op|')'
newline|'\n'
name|'app'
op|'='
name|'compute'
op|'.'
name|'APIRouter'
op|'('
name|'manager'
op|')'
newline|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/fake/tweedles"'
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response_body'
op|','
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bad_request
dedent|''
name|'def'
name|'test_bad_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'res_ext'
op|'='
name|'base_extensions'
op|'.'
name|'ResourceExtension'
op|'('
string|"'tweedles'"
op|','
nl|'\n'
name|'StubController'
op|'('
name|'response_body'
op|')'
op|')'
newline|'\n'
name|'manager'
op|'='
name|'StubExtensionManager'
op|'('
name|'res_ext'
op|')'
newline|'\n'
name|'app'
op|'='
name|'compute'
op|'.'
name|'APIRouter'
op|'('
name|'manager'
op|')'
newline|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/fake/tweedles"'
op|')'
newline|'\n'
name|'request'
op|'.'
name|'method'
op|'='
string|'"POST"'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'400'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'application/json'"
op|','
name|'response'
op|'.'
name|'content_type'
op|')'
newline|'\n'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"badRequest"'
op|':'
op|'{'
nl|'\n'
string|'"message"'
op|':'
string|'"All aboard the fail train!"'
op|','
nl|'\n'
string|'"code"'
op|':'
number|'400'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'expected'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_non_exist_resource
dedent|''
name|'def'
name|'test_non_exist_resource'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'res_ext'
op|'='
name|'base_extensions'
op|'.'
name|'ResourceExtension'
op|'('
string|"'tweedles'"
op|','
nl|'\n'
name|'StubController'
op|'('
name|'response_body'
op|')'
op|')'
newline|'\n'
name|'manager'
op|'='
name|'StubExtensionManager'
op|'('
name|'res_ext'
op|')'
newline|'\n'
name|'app'
op|'='
name|'compute'
op|'.'
name|'APIRouter'
op|'('
name|'manager'
op|')'
newline|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/fake/tweedles/1"'
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'404'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'application/json'"
op|','
name|'response'
op|'.'
name|'content_type'
op|')'
newline|'\n'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"itemNotFound"'
op|':'
op|'{'
nl|'\n'
string|'"message"'
op|':'
string|'"The resource could not be found."'
op|','
nl|'\n'
string|'"code"'
op|':'
number|'404'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'expected'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InvalidExtension
dedent|''
dedent|''
name|'class'
name|'InvalidExtension'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|alias
indent|'    '
name|'alias'
op|'='
string|'"THIRD"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ExtensionManagerTest
dedent|''
name|'class'
name|'ExtensionManagerTest'
op|'('
name|'ExtensionTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|response_body
indent|'    '
name|'response_body'
op|'='
string|'"Try to say this Mr. Knox, sir..."'
newline|'\n'
nl|'\n'
DECL|member|test_get_resources
name|'def'
name|'test_get_resources'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'compute'
op|'.'
name|'APIRouter'
op|'('
op|')'
newline|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/fake/foxnsocks"'
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response_body'
op|','
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_invalid_extensions
dedent|''
name|'def'
name|'test_invalid_extensions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Don't need the serialization middleware here because we're"
nl|'\n'
comment|'# not testing any serialization'
nl|'\n'
indent|'        '
name|'app'
op|'='
name|'compute'
op|'.'
name|'APIRouter'
op|'('
op|')'
newline|'\n'
name|'ext_mgr'
op|'='
name|'compute_extensions'
op|'.'
name|'ExtensionManager'
op|'('
op|')'
newline|'\n'
name|'ext_mgr'
op|'.'
name|'register'
op|'('
name|'InvalidExtension'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'ext_mgr'
op|'.'
name|'is_loaded'
op|'('
string|"'FOXNSOX'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'ext_mgr'
op|'.'
name|'is_loaded'
op|'('
string|"'THIRD'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ActionExtensionTest
dedent|''
dedent|''
name|'class'
name|'ActionExtensionTest'
op|'('
name|'ExtensionTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|_send_server_action_request
indent|'    '
name|'def'
name|'_send_server_action_request'
op|'('
name|'self'
op|','
name|'url'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'compute'
op|'.'
name|'APIRouter'
op|'('
op|')'
newline|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
name|'url'
op|')'
newline|'\n'
name|'request'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'request'
op|'.'
name|'content_type'
op|'='
string|"'application/json'"
newline|'\n'
name|'request'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'app'
op|')'
newline|'\n'
name|'return'
name|'response'
newline|'\n'
nl|'\n'
DECL|member|test_extended_action
dedent|''
name|'def'
name|'test_extended_action'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
name|'dict'
op|'('
name|'add_tweedle'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|'"test"'
op|')'
op|')'
newline|'\n'
name|'url'
op|'='
string|'"/fake/servers/abcd/action"'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'_send_server_action_request'
op|'('
name|'url'
op|','
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"Tweedle Beetle Added."'
op|','
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'delete_tweedle'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|'"test"'
op|')'
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'_send_server_action_request'
op|'('
name|'url'
op|','
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"Tweedle Beetle Deleted."'
op|','
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_invalid_action
dedent|''
name|'def'
name|'test_invalid_action'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
name|'dict'
op|'('
name|'blah'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|'"test"'
op|')'
op|')'
comment|"# Doesn't exist"
newline|'\n'
name|'url'
op|'='
string|'"/fake/servers/abcd/action"'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'_send_server_action_request'
op|'('
name|'url'
op|','
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'400'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'application/json'"
op|','
name|'response'
op|'.'
name|'content_type'
op|')'
newline|'\n'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"badRequest"'
op|':'
op|'{'
nl|'\n'
string|'"message"'
op|':'
string|'"There is no such action: blah"'
op|','
nl|'\n'
string|'"code"'
op|':'
number|'400'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'expected'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_non_exist_action
dedent|''
name|'def'
name|'test_non_exist_action'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
name|'dict'
op|'('
name|'blah'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|'"test"'
op|')'
op|')'
newline|'\n'
name|'url'
op|'='
string|'"/fake/fdsa/1/action"'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'_send_server_action_request'
op|'('
name|'url'
op|','
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'404'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_failed_action
dedent|''
name|'def'
name|'test_failed_action'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
name|'dict'
op|'('
name|'fail'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|'"test"'
op|')'
op|')'
newline|'\n'
name|'url'
op|'='
string|'"/fake/servers/abcd/action"'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'_send_server_action_request'
op|'('
name|'url'
op|','
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'400'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'application/json'"
op|','
name|'response'
op|'.'
name|'content_type'
op|')'
newline|'\n'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"badRequest"'
op|':'
op|'{'
nl|'\n'
string|'"message"'
op|':'
string|'"Tweedle fail"'
op|','
nl|'\n'
string|'"code"'
op|':'
number|'400'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'expected'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RequestExtensionTest
dedent|''
dedent|''
name|'class'
name|'RequestExtensionTest'
op|'('
name|'ExtensionTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_get_resources_with_stub_mgr
indent|'    '
name|'def'
name|'test_get_resources_with_stub_mgr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|GooGoose
indent|'        '
name|'class'
name|'GooGoose'
op|'('
name|'wsgi'
op|'.'
name|'Controller'
op|')'
op|':'
newline|'\n'
indent|'            '
op|'@'
name|'wsgi'
op|'.'
name|'extends'
newline|'\n'
DECL|member|show
name|'def'
name|'show'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'resp_obj'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
comment|'# only handle JSON responses'
nl|'\n'
indent|'                '
name|'resp_obj'
op|'.'
name|'obj'
op|'['
string|"'flavor'"
op|']'
op|'['
string|"'googoose'"
op|']'
op|'='
name|'req'
op|'.'
name|'GET'
op|'.'
name|'get'
op|'('
string|"'chewing'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'req_ext'
op|'='
name|'base_extensions'
op|'.'
name|'ControllerExtension'
op|'('
nl|'\n'
name|'StubControllerExtension'
op|'('
op|')'
op|','
string|"'flavors'"
op|','
name|'GooGoose'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'manager'
op|'='
name|'StubExtensionManager'
op|'('
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'req_ext'
op|')'
newline|'\n'
name|'app'
op|'='
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
name|'ext_mgr'
op|'='
name|'manager'
op|')'
newline|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/v2/fake/flavors/1?chewing=bluegoo"'
op|')'
newline|'\n'
name|'request'
op|'.'
name|'environ'
op|'['
string|"'api.version'"
op|']'
op|'='
string|"'2'"
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'response_data'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'bluegoo'"
op|','
name|'response_data'
op|'['
string|"'flavor'"
op|']'
op|'['
string|"'googoose'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_resources_with_mgr
dedent|''
name|'def'
name|'test_get_resources_with_mgr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'app'
op|'='
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
newline|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/v2/fake/flavors/1?chewing=newblue"'
op|')'
newline|'\n'
name|'request'
op|'.'
name|'environ'
op|'['
string|"'api.version'"
op|']'
op|'='
string|"'2'"
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'response_data'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'newblue'"
op|','
name|'response_data'
op|'['
string|"'flavor'"
op|']'
op|'['
string|"'googoose'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"Pig Bands!"'
op|','
name|'response_data'
op|'['
string|"'big_bands'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ControllerExtensionTest
dedent|''
dedent|''
name|'class'
name|'ControllerExtensionTest'
op|'('
name|'ExtensionTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_controller_extension_early
indent|'    '
name|'def'
name|'test_controller_extension_early'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'controller'
op|'='
name|'StubController'
op|'('
name|'response_body'
op|')'
newline|'\n'
name|'res_ext'
op|'='
name|'base_extensions'
op|'.'
name|'ResourceExtension'
op|'('
string|"'tweedles'"
op|','
name|'controller'
op|')'
newline|'\n'
name|'ext_controller'
op|'='
name|'StubEarlyExtensionController'
op|'('
name|'extension_body'
op|')'
newline|'\n'
name|'extension'
op|'='
name|'StubControllerExtension'
op|'('
op|')'
newline|'\n'
name|'cont_ext'
op|'='
name|'base_extensions'
op|'.'
name|'ControllerExtension'
op|'('
name|'extension'
op|','
string|"'tweedles'"
op|','
nl|'\n'
name|'ext_controller'
op|')'
newline|'\n'
name|'manager'
op|'='
name|'StubExtensionManager'
op|'('
name|'resource_ext'
op|'='
name|'res_ext'
op|','
nl|'\n'
name|'controller_ext'
op|'='
name|'cont_ext'
op|')'
newline|'\n'
name|'app'
op|'='
name|'compute'
op|'.'
name|'APIRouter'
op|'('
name|'manager'
op|')'
newline|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/fake/tweedles"'
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'extension_body'
op|','
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_controller_extension_late
dedent|''
name|'def'
name|'test_controller_extension_late'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Need a dict for the body to convert to a ResponseObject'
nl|'\n'
indent|'        '
name|'controller'
op|'='
name|'StubController'
op|'('
name|'dict'
op|'('
name|'foo'
op|'='
name|'response_body'
op|')'
op|')'
newline|'\n'
name|'res_ext'
op|'='
name|'base_extensions'
op|'.'
name|'ResourceExtension'
op|'('
string|"'tweedles'"
op|','
name|'controller'
op|')'
newline|'\n'
nl|'\n'
name|'ext_controller'
op|'='
name|'StubLateExtensionController'
op|'('
name|'extension_body'
op|')'
newline|'\n'
name|'extension'
op|'='
name|'StubControllerExtension'
op|'('
op|')'
newline|'\n'
name|'cont_ext'
op|'='
name|'base_extensions'
op|'.'
name|'ControllerExtension'
op|'('
name|'extension'
op|','
string|"'tweedles'"
op|','
nl|'\n'
name|'ext_controller'
op|')'
newline|'\n'
nl|'\n'
name|'manager'
op|'='
name|'StubExtensionManager'
op|'('
name|'resource_ext'
op|'='
name|'res_ext'
op|','
nl|'\n'
name|'controller_ext'
op|'='
name|'cont_ext'
op|')'
newline|'\n'
name|'app'
op|'='
name|'compute'
op|'.'
name|'APIRouter'
op|'('
name|'manager'
op|')'
newline|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/fake/tweedles"'
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'extension_body'
op|','
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_controller_extension_late_inherited_resource
dedent|''
name|'def'
name|'test_controller_extension_late_inherited_resource'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Need a dict for the body to convert to a ResponseObject'
nl|'\n'
indent|'        '
name|'controller'
op|'='
name|'StubController'
op|'('
name|'dict'
op|'('
name|'foo'
op|'='
name|'response_body'
op|')'
op|')'
newline|'\n'
name|'parent_ext'
op|'='
name|'base_extensions'
op|'.'
name|'ResourceExtension'
op|'('
string|"'tweedles'"
op|','
name|'controller'
op|')'
newline|'\n'
nl|'\n'
name|'ext_controller'
op|'='
name|'StubLateExtensionController'
op|'('
name|'extension_body'
op|')'
newline|'\n'
name|'extension'
op|'='
name|'StubControllerExtension'
op|'('
op|')'
newline|'\n'
name|'cont_ext'
op|'='
name|'base_extensions'
op|'.'
name|'ControllerExtension'
op|'('
name|'extension'
op|','
string|"'tweedles'"
op|','
nl|'\n'
name|'ext_controller'
op|')'
newline|'\n'
nl|'\n'
name|'manager'
op|'='
name|'StubExtensionManager'
op|'('
name|'resource_ext'
op|'='
name|'parent_ext'
op|','
nl|'\n'
name|'controller_ext'
op|'='
name|'cont_ext'
op|')'
newline|'\n'
name|'child_ext'
op|'='
name|'base_extensions'
op|'.'
name|'ResourceExtension'
op|'('
string|"'beetles'"
op|','
name|'controller'
op|','
nl|'\n'
name|'inherits'
op|'='
string|"'tweedles'"
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'extra_resource_ext'
op|'='
name|'child_ext'
newline|'\n'
name|'app'
op|'='
name|'compute'
op|'.'
name|'APIRouter'
op|'('
name|'manager'
op|')'
newline|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/fake/beetles"'
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'extension_body'
op|','
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_controller_action_extension_early
dedent|''
name|'def'
name|'test_controller_action_extension_early'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'controller'
op|'='
name|'StubActionController'
op|'('
name|'response_body'
op|')'
newline|'\n'
name|'actions'
op|'='
name|'dict'
op|'('
name|'action'
op|'='
string|"'POST'"
op|')'
newline|'\n'
name|'res_ext'
op|'='
name|'base_extensions'
op|'.'
name|'ResourceExtension'
op|'('
string|"'tweedles'"
op|','
name|'controller'
op|','
nl|'\n'
name|'member_actions'
op|'='
name|'actions'
op|')'
newline|'\n'
name|'ext_controller'
op|'='
name|'StubEarlyExtensionController'
op|'('
name|'extension_body'
op|')'
newline|'\n'
name|'extension'
op|'='
name|'StubControllerExtension'
op|'('
op|')'
newline|'\n'
name|'cont_ext'
op|'='
name|'base_extensions'
op|'.'
name|'ControllerExtension'
op|'('
name|'extension'
op|','
string|"'tweedles'"
op|','
nl|'\n'
name|'ext_controller'
op|')'
newline|'\n'
name|'manager'
op|'='
name|'StubExtensionManager'
op|'('
name|'resource_ext'
op|'='
name|'res_ext'
op|','
nl|'\n'
name|'controller_ext'
op|'='
name|'cont_ext'
op|')'
newline|'\n'
name|'app'
op|'='
name|'compute'
op|'.'
name|'APIRouter'
op|'('
name|'manager'
op|')'
newline|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/fake/tweedles/foo/action"'
op|')'
newline|'\n'
name|'request'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'request'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|'='
string|"'application/json'"
newline|'\n'
name|'request'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'dict'
op|'('
name|'fooAction'
op|'='
name|'True'
op|')'
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'extension_body'
op|','
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_controller_action_extension_late
dedent|''
name|'def'
name|'test_controller_action_extension_late'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Need a dict for the body to convert to a ResponseObject'
nl|'\n'
indent|'        '
name|'controller'
op|'='
name|'StubActionController'
op|'('
name|'dict'
op|'('
name|'foo'
op|'='
name|'response_body'
op|')'
op|')'
newline|'\n'
name|'actions'
op|'='
name|'dict'
op|'('
name|'action'
op|'='
string|"'POST'"
op|')'
newline|'\n'
name|'res_ext'
op|'='
name|'base_extensions'
op|'.'
name|'ResourceExtension'
op|'('
string|"'tweedles'"
op|','
name|'controller'
op|','
nl|'\n'
name|'member_actions'
op|'='
name|'actions'
op|')'
newline|'\n'
nl|'\n'
name|'ext_controller'
op|'='
name|'StubLateExtensionController'
op|'('
name|'extension_body'
op|')'
newline|'\n'
name|'extension'
op|'='
name|'StubControllerExtension'
op|'('
op|')'
newline|'\n'
name|'cont_ext'
op|'='
name|'base_extensions'
op|'.'
name|'ControllerExtension'
op|'('
name|'extension'
op|','
string|"'tweedles'"
op|','
nl|'\n'
name|'ext_controller'
op|')'
newline|'\n'
nl|'\n'
name|'manager'
op|'='
name|'StubExtensionManager'
op|'('
name|'resource_ext'
op|'='
name|'res_ext'
op|','
nl|'\n'
name|'controller_ext'
op|'='
name|'cont_ext'
op|')'
newline|'\n'
name|'app'
op|'='
name|'compute'
op|'.'
name|'APIRouter'
op|'('
name|'manager'
op|')'
newline|'\n'
name|'request'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/fake/tweedles/foo/action"'
op|')'
newline|'\n'
name|'request'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'request'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|'='
string|"'application/json'"
newline|'\n'
name|'request'
op|'.'
name|'body'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'dict'
op|'('
name|'fooAction'
op|'='
name|'True'
op|')'
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'extension_body'
op|','
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ExtensionsXMLSerializerTest
dedent|''
dedent|''
name|'class'
name|'ExtensionsXMLSerializerTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_serialize_extension
indent|'    '
name|'def'
name|'test_serialize_extension'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'base_extensions'
op|'.'
name|'ExtensionTemplate'
op|'('
op|')'
newline|'\n'
name|'data'
op|'='
op|'{'
string|"'extension'"
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'ext1'"
op|','
nl|'\n'
string|"'namespace'"
op|':'
string|"'http://docs.rack.com/servers/api/ext/pie/v1.0'"
op|','
nl|'\n'
string|"'alias'"
op|':'
string|"'RS-PIE'"
op|','
nl|'\n'
string|"'updated'"
op|':'
string|"'2011-01-22T13:25:27-06:00'"
op|','
nl|'\n'
string|"'description'"
op|':'
string|"'Adds the capability to share an image.'"
op|','
nl|'\n'
string|"'links'"
op|':'
op|'['
op|'{'
string|"'rel'"
op|':'
string|"'describedby'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'application/pdf'"
op|','
nl|'\n'
string|"'href'"
op|':'
string|"'http://docs.rack.com/servers/api/ext/cs.pdf'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'rel'"
op|':'
string|"'describedby'"
op|','
nl|'\n'
string|"'type'"
op|':'
string|"'application/vnd.sun.wadl+xml'"
op|','
nl|'\n'
string|"'href'"
op|':'
string|"'http://docs.rack.com/servers/api/ext/cs.wadl'"
op|'}'
op|']'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'xml'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'data'
op|')'
newline|'\n'
name|'root'
op|'='
name|'etree'
op|'.'
name|'XML'
op|'('
name|'xml'
op|')'
newline|'\n'
name|'ext_dict'
op|'='
name|'data'
op|'['
string|"'extension'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'root'
op|'.'
name|'findtext'
op|'('
string|"'{0}description'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
op|','
nl|'\n'
name|'ext_dict'
op|'['
string|"'description'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'key'
name|'in'
op|'['
string|"'name'"
op|','
string|"'namespace'"
op|','
string|"'alias'"
op|','
string|"'updated'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'root'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|','
name|'ext_dict'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'link_nodes'
op|'='
name|'root'
op|'.'
name|'findall'
op|'('
string|"'{0}link'"
op|'.'
name|'format'
op|'('
name|'ATOMNS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'link_nodes'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'link'
name|'in'
name|'enumerate'
op|'('
name|'ext_dict'
op|'['
string|"'links'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'link'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'link_nodes'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'xmlutil'
op|'.'
name|'validate_schema'
op|'('
name|'root'
op|','
string|"'extension'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_serialize_extensions
dedent|''
name|'def'
name|'test_serialize_extensions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'base_extensions'
op|'.'
name|'ExtensionsTemplate'
op|'('
op|')'
newline|'\n'
name|'data'
op|'='
op|'{'
string|'"extensions"'
op|':'
op|'['
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"Public Image Extension"'
op|','
nl|'\n'
string|'"namespace"'
op|':'
string|'"http://foo.com/api/ext/pie/v1.0"'
op|','
nl|'\n'
string|'"alias"'
op|':'
string|'"RS-PIE"'
op|','
nl|'\n'
string|'"updated"'
op|':'
string|'"2011-01-22T13:25:27-06:00"'
op|','
nl|'\n'
string|'"description"'
op|':'
string|'"Adds the capability to share an image."'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
op|'{'
string|'"rel"'
op|':'
string|'"describedby"'
op|','
nl|'\n'
string|'"type"'
op|':'
string|'"application/pdf"'
op|','
nl|'\n'
string|'"type"'
op|':'
string|'"application/vnd.sun.wadl+xml"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://foo.com/api/ext/cs-pie.pdf"'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"rel"'
op|':'
string|'"describedby"'
op|','
nl|'\n'
string|'"type"'
op|':'
string|'"application/vnd.sun.wadl+xml"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://foo.com/api/ext/cs-pie.wadl"'
op|'}'
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"name"'
op|':'
string|'"Cloud Block Storage"'
op|','
nl|'\n'
string|'"namespace"'
op|':'
string|'"http://foo.com/api/ext/cbs/v1.0"'
op|','
nl|'\n'
string|'"alias"'
op|':'
string|'"RS-CBS"'
op|','
nl|'\n'
string|'"updated"'
op|':'
string|'"2011-01-12T11:22:33-06:00"'
op|','
nl|'\n'
string|'"description"'
op|':'
string|'"Allows mounting cloud block storage."'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
op|'{'
string|'"rel"'
op|':'
string|'"describedby"'
op|','
nl|'\n'
string|'"type"'
op|':'
string|'"application/pdf"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://foo.com/api/ext/cs-cbs.pdf"'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"rel"'
op|':'
string|'"describedby"'
op|','
nl|'\n'
string|'"type"'
op|':'
string|'"application/vnd.sun.wadl+xml"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://foo.com/api/ext/cs-cbs.wadl"'
op|'}'
op|']'
op|'}'
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'xml'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'data'
op|')'
newline|'\n'
name|'root'
op|'='
name|'etree'
op|'.'
name|'XML'
op|'('
name|'xml'
op|')'
newline|'\n'
name|'ext_elems'
op|'='
name|'root'
op|'.'
name|'findall'
op|'('
string|"'{0}extension'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'ext_elems'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'ext_elem'
name|'in'
name|'enumerate'
op|'('
name|'ext_elems'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ext_dict'
op|'='
name|'data'
op|'['
string|"'extensions'"
op|']'
op|'['
name|'i'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ext_elem'
op|'.'
name|'findtext'
op|'('
string|"'{0}description'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
op|','
nl|'\n'
name|'ext_dict'
op|'['
string|"'description'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'key'
name|'in'
op|'['
string|"'name'"
op|','
string|"'namespace'"
op|','
string|"'alias'"
op|','
string|"'updated'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ext_elem'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|','
name|'ext_dict'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'link_nodes'
op|'='
name|'ext_elem'
op|'.'
name|'findall'
op|'('
string|"'{0}link'"
op|'.'
name|'format'
op|'('
name|'ATOMNS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'link_nodes'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'link'
name|'in'
name|'enumerate'
op|'('
name|'ext_dict'
op|'['
string|"'links'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'link'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'link_nodes'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'xmlutil'
op|'.'
name|'validate_schema'
op|'('
name|'root'
op|','
string|"'extensions'"
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
