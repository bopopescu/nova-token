begin_unit
comment|'# Copyright 2012 OpenStack Foundation'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'lxml'
name|'import'
name|'etree'
newline|'\n'
name|'import'
name|'six'
op|'.'
name|'moves'
op|'.'
name|'urllib'
op|'.'
name|'parse'
name|'as'
name|'urlparse'
newline|'\n'
name|'import'
name|'webob'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
name|'import'
name|'flavors'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'xmlutil'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'flavors'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'fakes'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'matchers'
newline|'\n'
nl|'\n'
DECL|variable|NS
name|'NS'
op|'='
string|'"{http://docs.openstack.org/compute/api/v1.1}"'
newline|'\n'
DECL|variable|ATOMNS
name|'ATOMNS'
op|'='
string|'"{http://www.w3.org/2005/Atom}"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FAKE_FLAVORS
name|'FAKE_FLAVORS'
op|'='
op|'{'
nl|'\n'
string|"'flavor 1'"
op|':'
op|'{'
nl|'\n'
string|'"flavorid"'
op|':'
string|"'1'"
op|','
nl|'\n'
string|'"name"'
op|':'
string|"'flavor 1'"
op|','
nl|'\n'
string|'"memory_mb"'
op|':'
string|"'256'"
op|','
nl|'\n'
string|'"root_gb"'
op|':'
string|"'10'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'flavor 2'"
op|':'
op|'{'
nl|'\n'
string|'"flavorid"'
op|':'
string|"'2'"
op|','
nl|'\n'
string|'"name"'
op|':'
string|"'flavor 2'"
op|','
nl|'\n'
string|'"memory_mb"'
op|':'
string|"'512'"
op|','
nl|'\n'
string|'"root_gb"'
op|':'
string|"'20'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_flavor_get_by_flavor_id
name|'def'
name|'fake_flavor_get_by_flavor_id'
op|'('
name|'flavorid'
op|','
name|'ctxt'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'FAKE_FLAVORS'
op|'['
string|"'flavor %s'"
op|'%'
name|'flavorid'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_get_all_flavors_sorted_list
dedent|''
name|'def'
name|'fake_get_all_flavors_sorted_list'
op|'('
name|'context'
op|'='
name|'None'
op|','
name|'inactive'
op|'='
name|'False'
op|','
nl|'\n'
name|'filters'
op|'='
name|'None'
op|','
name|'sort_key'
op|'='
string|"'flavorid'"
op|','
nl|'\n'
name|'sort_dir'
op|'='
string|"'asc'"
op|','
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'marker'
name|'in'
op|'['
string|"'99999'"
op|']'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'MarkerNotFound'
op|'('
name|'marker'
op|')'
newline|'\n'
nl|'\n'
DECL|function|reject_min
dedent|''
name|'def'
name|'reject_min'
op|'('
name|'db_attr'
op|','
name|'filter_attr'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'('
name|'filter_attr'
name|'in'
name|'filters'
name|'and'
nl|'\n'
name|'int'
op|'('
name|'flavor'
op|'['
name|'db_attr'
op|']'
op|')'
op|'<'
name|'int'
op|'('
name|'filters'
op|'['
name|'filter_attr'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'filters'
op|'='
name|'filters'
name|'or'
op|'{'
op|'}'
newline|'\n'
name|'res'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
op|'('
name|'flavor_name'
op|','
name|'flavor'
op|')'
name|'in'
name|'FAKE_FLAVORS'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'reject_min'
op|'('
string|"'memory_mb'"
op|','
string|"'min_memory_mb'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
dedent|''
name|'elif'
name|'reject_min'
op|'('
string|"'root_gb'"
op|','
string|"'min_root_gb'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'res'
op|'.'
name|'append'
op|'('
name|'flavor'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'res'
op|'='
name|'sorted'
op|'('
name|'res'
op|','
name|'key'
op|'='
name|'lambda'
name|'item'
op|':'
name|'item'
op|'['
name|'sort_key'
op|']'
op|')'
newline|'\n'
name|'output'
op|'='
op|'['
op|']'
newline|'\n'
name|'marker_found'
op|'='
name|'True'
name|'if'
name|'marker'
name|'is'
name|'None'
name|'else'
name|'False'
newline|'\n'
name|'for'
name|'flavor'
name|'in'
name|'res'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'marker_found'
name|'and'
name|'marker'
op|'=='
name|'flavor'
op|'['
string|"'flavorid'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'marker_found'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'elif'
name|'marker_found'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'limit'
name|'is'
name|'None'
name|'or'
name|'len'
op|'('
name|'output'
op|')'
op|'<'
name|'int'
op|'('
name|'limit'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'output'
op|'.'
name|'append'
op|'('
name|'flavor'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'output'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|empty_get_all_flavors_sorted_list
dedent|''
name|'def'
name|'empty_get_all_flavors_sorted_list'
op|'('
name|'context'
op|'='
name|'None'
op|','
name|'inactive'
op|'='
name|'False'
op|','
nl|'\n'
name|'filters'
op|'='
name|'None'
op|','
name|'sort_key'
op|'='
string|"'flavorid'"
op|','
nl|'\n'
name|'sort_dir'
op|'='
string|"'asc'"
op|','
name|'limit'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|return_flavor_not_found
dedent|''
name|'def'
name|'return_flavor_not_found'
op|'('
name|'flavor_id'
op|','
name|'ctxt'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'raise'
name|'exception'
op|'.'
name|'FlavorNotFound'
op|'('
name|'flavor_id'
op|'='
name|'flavor_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FlavorsTest
dedent|''
name|'class'
name|'FlavorsTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'FlavorsTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'osapi_compute_extension'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_out_networking'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_out_rate_limiting'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'flavors'
op|','
string|'"get_all_flavors_sorted_list"'
op|','
nl|'\n'
name|'fake_get_all_flavors_sorted_list'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'flavors'
op|','
nl|'\n'
string|'"get_flavor_by_flavor_id"'
op|','
nl|'\n'
name|'fake_flavor_get_by_flavor_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'flavors'
op|'.'
name|'Controller'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_flavor_by_invalid_id
dedent|''
name|'def'
name|'test_get_flavor_by_invalid_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'flavors'
op|','
nl|'\n'
string|'"get_flavor_by_flavor_id"'
op|','
nl|'\n'
name|'return_flavor_not_found'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/flavors/asdf'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|','
name|'req'
op|','
string|"'asdf'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_flavor_by_id
dedent|''
name|'def'
name|'test_get_flavor_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/flavors/1'"
op|')'
newline|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|'('
name|'req'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"flavor 1"'
op|','
nl|'\n'
string|'"ram"'
op|':'
string|'"256"'
op|','
nl|'\n'
string|'"disk"'
op|':'
string|'"10"'
op|','
nl|'\n'
string|'"vcpus"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v2/fake/flavors/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/flavors/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'flavor'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_flavor_with_custom_link_prefix
dedent|''
name|'def'
name|'test_get_flavor_with_custom_link_prefix'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'osapi_compute_link_prefix'
op|'='
string|"'http://zoo.com:42'"
op|','
nl|'\n'
name|'osapi_glance_link_prefix'
op|'='
string|"'http://circus.com:34'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/flavors/1'"
op|')'
newline|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|'('
name|'req'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"flavor 1"'
op|','
nl|'\n'
string|'"ram"'
op|':'
string|'"256"'
op|','
nl|'\n'
string|'"disk"'
op|':'
string|'"10"'
op|','
nl|'\n'
string|'"vcpus"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://zoo.com:42/v2/fake/flavors/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://zoo.com:42/fake/flavors/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'flavor'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_flavor_list
dedent|''
name|'def'
name|'test_get_flavor_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/flavors'"
op|')'
newline|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"flavors"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"flavor 1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v2/fake/flavors/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/flavors/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"2"'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"flavor 2"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v2/fake/flavors/2"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/flavors/2"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'flavor'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_flavor_list_with_marker
dedent|''
name|'def'
name|'test_get_flavor_list_with_marker'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'maxDiff'
op|'='
name|'None'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/flavors?limit=1&marker=1'"
op|')'
newline|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"flavors"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"2"'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"flavor 2"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v2/fake/flavors/2"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/flavors/2"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'flavors_links'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'href'"
op|':'
string|"'http://localhost/v2/fake/flavors?limit=1&marker=2'"
op|','
nl|'\n'
string|"'rel'"
op|':'
string|"'next'"
op|'}'
nl|'\n'
op|']'
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
name|'flavor'
op|','
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_flavor_list_with_invalid_marker
dedent|''
name|'def'
name|'test_get_flavor_list_with_invalid_marker'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/flavors?marker=99999'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_flavor_detail_with_limit
dedent|''
name|'def'
name|'test_get_flavor_detail_with_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/flavors/detail?limit=1'"
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
name|'response_list'
op|'='
name|'response'
op|'['
string|'"flavors"'
op|']'
newline|'\n'
name|'response_links'
op|'='
name|'response'
op|'['
string|'"flavors_links"'
op|']'
newline|'\n'
nl|'\n'
name|'alternate'
op|'='
string|'"%s/fake/flavors/%s"'
newline|'\n'
nl|'\n'
name|'expected_flavors'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"flavor 1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v2/fake/flavors/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/flavors/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response_list'
op|','
name|'expected_flavors'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response_links'
op|'['
number|'0'
op|']'
op|'['
string|"'rel'"
op|']'
op|','
string|"'next'"
op|')'
newline|'\n'
nl|'\n'
name|'href_parts'
op|'='
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'response_links'
op|'['
number|'0'
op|']'
op|'['
string|"'href'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/v2/fake/flavors'"
op|','
name|'href_parts'
op|'.'
name|'path'
op|')'
newline|'\n'
name|'params'
op|'='
name|'urlparse'
op|'.'
name|'parse_qs'
op|'('
name|'href_parts'
op|'.'
name|'query'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
op|'{'
string|"'limit'"
op|':'
op|'['
string|"'1'"
op|']'
op|','
string|"'marker'"
op|':'
op|'['
string|"'1'"
op|']'
op|'}'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'params'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_flavor_with_limit
dedent|''
name|'def'
name|'test_get_flavor_with_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/flavors?limit=2'"
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
name|'response_list'
op|'='
name|'response'
op|'['
string|'"flavors"'
op|']'
newline|'\n'
name|'response_links'
op|'='
name|'response'
op|'['
string|'"flavors_links"'
op|']'
newline|'\n'
nl|'\n'
name|'alternate'
op|'='
string|'"%s/fake/flavors/%s"'
newline|'\n'
nl|'\n'
name|'expected_flavors'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"flavor 1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v2/fake/flavors/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/flavors/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"2"'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"flavor 2"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v2/fake/flavors/2"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/flavors/2"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response_list'
op|','
name|'expected_flavors'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'response_links'
op|'['
number|'0'
op|']'
op|'['
string|"'rel'"
op|']'
op|','
string|"'next'"
op|')'
newline|'\n'
nl|'\n'
name|'href_parts'
op|'='
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'response_links'
op|'['
number|'0'
op|']'
op|'['
string|"'href'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/v2/fake/flavors'"
op|','
name|'href_parts'
op|'.'
name|'path'
op|')'
newline|'\n'
name|'params'
op|'='
name|'urlparse'
op|'.'
name|'parse_qs'
op|'('
name|'href_parts'
op|'.'
name|'query'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertThat'
op|'('
op|'{'
string|"'limit'"
op|':'
op|'['
string|"'2'"
op|']'
op|','
string|"'marker'"
op|':'
op|'['
string|"'2'"
op|']'
op|'}'
op|','
nl|'\n'
name|'matchers'
op|'.'
name|'DictMatches'
op|'('
name|'params'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_flavor_list_detail
dedent|''
name|'def'
name|'test_get_flavor_list_detail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/flavors/detail'"
op|')'
newline|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|'('
name|'req'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"flavors"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"flavor 1"'
op|','
nl|'\n'
string|'"ram"'
op|':'
string|'"256"'
op|','
nl|'\n'
string|'"disk"'
op|':'
string|'"10"'
op|','
nl|'\n'
string|'"vcpus"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v2/fake/flavors/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/flavors/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"2"'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"flavor 2"'
op|','
nl|'\n'
string|'"ram"'
op|':'
string|'"512"'
op|','
nl|'\n'
string|'"disk"'
op|':'
string|'"20"'
op|','
nl|'\n'
string|'"vcpus"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v2/fake/flavors/2"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/flavors/2"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'flavor'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_empty_flavor_list
dedent|''
name|'def'
name|'test_get_empty_flavor_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'flavors'
op|','
string|'"get_all_flavors_sorted_list"'
op|','
nl|'\n'
name|'empty_get_all_flavors_sorted_list'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/flavors'"
op|')'
newline|'\n'
name|'flavors'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'flavors'"
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'flavors'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_flavor_list_filter_min_ram
dedent|''
name|'def'
name|'test_get_flavor_list_filter_min_ram'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Flavor lists may be filtered by minRam.'
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/flavors?minRam=512'"
op|')'
newline|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"flavors"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"2"'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"flavor 2"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v2/fake/flavors/2"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/flavors/2"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'flavor'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_flavor_list_filter_invalid_min_ram
dedent|''
name|'def'
name|'test_get_flavor_list_filter_invalid_min_ram'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensure you cannot list flavors with invalid minRam param.'
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/flavors?minRam=NaN'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_flavor_list_filter_min_disk
dedent|''
name|'def'
name|'test_get_flavor_list_filter_min_disk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Flavor lists may be filtered by minDisk.'
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/flavors?minDisk=20'"
op|')'
newline|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"flavors"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"2"'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"flavor 2"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v2/fake/flavors/2"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/flavors/2"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'flavor'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_flavor_list_filter_invalid_min_disk
dedent|''
name|'def'
name|'test_get_flavor_list_filter_invalid_min_disk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ensure you cannot list flavors with invalid minDisk param.'
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/flavors?minDisk=NaN'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_flavor_list_detail_min_ram_and_min_disk
dedent|''
name|'def'
name|'test_get_flavor_list_detail_min_ram_and_min_disk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Tests that filtering work on flavor details and that minRam and\n        minDisk filters can be combined\n        """'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/flavors/detail'"
nl|'\n'
string|"'?minRam=256&minDisk=20'"
op|')'
newline|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'detail'
op|'('
name|'req'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"flavors"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"2"'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"flavor 2"'
op|','
nl|'\n'
string|'"ram"'
op|':'
string|'"512"'
op|','
nl|'\n'
string|'"disk"'
op|':'
string|'"20"'
op|','
nl|'\n'
string|'"vcpus"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v2/fake/flavors/2"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/flavors/2"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'flavor'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FlavorsXMLSerializationTest
dedent|''
dedent|''
name|'class'
name|'FlavorsXMLSerializationTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_xml_declaration
indent|'    '
name|'def'
name|'test_xml_declaration'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'flavors'
op|'.'
name|'FlavorTemplate'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'fixture'
op|'='
op|'{'
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"12"'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"asdf"'
op|','
nl|'\n'
string|'"ram"'
op|':'
string|'"256"'
op|','
nl|'\n'
string|'"disk"'
op|':'
string|'"10"'
op|','
nl|'\n'
string|'"vcpus"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v2/fake/flavors/12"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/flavors/12"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'fixture'
op|')'
newline|'\n'
name|'has_dec'
op|'='
name|'output'
op|'.'
name|'startswith'
op|'('
string|'"<?xml version=\'1.0\' encoding=\'UTF-8\'?>"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'has_dec'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_show
dedent|''
name|'def'
name|'test_show'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'flavors'
op|'.'
name|'FlavorTemplate'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'fixture'
op|'='
op|'{'
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"12"'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"asdf"'
op|','
nl|'\n'
string|'"ram"'
op|':'
string|'"256"'
op|','
nl|'\n'
string|'"disk"'
op|':'
string|'"10"'
op|','
nl|'\n'
string|'"vcpus"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v2/fake/flavors/12"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/flavors/12"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'fixture'
op|')'
newline|'\n'
name|'root'
op|'='
name|'etree'
op|'.'
name|'XML'
op|'('
name|'output'
op|')'
newline|'\n'
name|'xmlutil'
op|'.'
name|'validate_schema'
op|'('
name|'root'
op|','
string|"'flavor'"
op|')'
newline|'\n'
name|'flavor_dict'
op|'='
name|'fixture'
op|'['
string|"'flavor'"
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'key'
name|'in'
op|'['
string|"'name'"
op|','
string|"'id'"
op|','
string|"'ram'"
op|','
string|"'disk'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'root'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|','
name|'str'
op|'('
name|'flavor_dict'
op|'['
name|'key'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'link_nodes'
op|'='
name|'root'
op|'.'
name|'findall'
op|'('
string|"'{0}link'"
op|'.'
name|'format'
op|'('
name|'ATOMNS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'link_nodes'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'link'
name|'in'
name|'enumerate'
op|'('
name|'flavor_dict'
op|'['
string|"'links'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'link'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'link_nodes'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_show_handles_integers
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_show_handles_integers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'flavors'
op|'.'
name|'FlavorTemplate'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'fixture'
op|'='
op|'{'
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
number|'12'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"asdf"'
op|','
nl|'\n'
string|'"ram"'
op|':'
number|'256'
op|','
nl|'\n'
string|'"disk"'
op|':'
number|'10'
op|','
nl|'\n'
string|'"vcpus"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v2/fake/flavors/12"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/flavors/12"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'fixture'
op|')'
newline|'\n'
name|'root'
op|'='
name|'etree'
op|'.'
name|'XML'
op|'('
name|'output'
op|')'
newline|'\n'
name|'xmlutil'
op|'.'
name|'validate_schema'
op|'('
name|'root'
op|','
string|"'flavor'"
op|')'
newline|'\n'
name|'flavor_dict'
op|'='
name|'fixture'
op|'['
string|"'flavor'"
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'key'
name|'in'
op|'['
string|"'name'"
op|','
string|"'id'"
op|','
string|"'ram'"
op|','
string|"'disk'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'root'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|','
name|'str'
op|'('
name|'flavor_dict'
op|'['
name|'key'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'link_nodes'
op|'='
name|'root'
op|'.'
name|'findall'
op|'('
string|"'{0}link'"
op|'.'
name|'format'
op|'('
name|'ATOMNS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'link_nodes'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'link'
name|'in'
name|'enumerate'
op|'('
name|'flavor_dict'
op|'['
string|"'links'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'link'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'link_nodes'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detail
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_detail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'flavors'
op|'.'
name|'FlavorsTemplate'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'fixture'
op|'='
op|'{'
nl|'\n'
string|'"flavors"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"23"'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"flavor 23"'
op|','
nl|'\n'
string|'"ram"'
op|':'
string|'"512"'
op|','
nl|'\n'
string|'"disk"'
op|':'
string|'"20"'
op|','
nl|'\n'
string|'"vcpus"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v2/fake/flavors/23"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/flavors/23"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"13"'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"flavor 13"'
op|','
nl|'\n'
string|'"ram"'
op|':'
string|'"256"'
op|','
nl|'\n'
string|'"disk"'
op|':'
string|'"10"'
op|','
nl|'\n'
string|'"vcpus"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v2/fake/flavors/13"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/flavors/13"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'fixture'
op|')'
newline|'\n'
name|'root'
op|'='
name|'etree'
op|'.'
name|'XML'
op|'('
name|'output'
op|')'
newline|'\n'
name|'xmlutil'
op|'.'
name|'validate_schema'
op|'('
name|'root'
op|','
string|"'flavors'"
op|')'
newline|'\n'
name|'flavor_elems'
op|'='
name|'root'
op|'.'
name|'findall'
op|'('
string|"'{0}flavor'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'flavor_elems'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'flavor_elem'
name|'in'
name|'enumerate'
op|'('
name|'flavor_elems'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'flavor_dict'
op|'='
name|'fixture'
op|'['
string|"'flavors'"
op|']'
op|'['
name|'i'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'key'
name|'in'
op|'['
string|"'name'"
op|','
string|"'id'"
op|','
string|"'ram'"
op|','
string|"'disk'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'flavor_elem'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|','
name|'str'
op|'('
name|'flavor_dict'
op|'['
name|'key'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'link_nodes'
op|'='
name|'flavor_elem'
op|'.'
name|'findall'
op|'('
string|"'{0}link'"
op|'.'
name|'format'
op|'('
name|'ATOMNS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'link_nodes'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'link'
name|'in'
name|'enumerate'
op|'('
name|'flavor_dict'
op|'['
string|"'links'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'link'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'link_nodes'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_index
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_index'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'flavors'
op|'.'
name|'MinimalFlavorsTemplate'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'fixture'
op|'='
op|'{'
nl|'\n'
string|'"flavors"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"23"'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"flavor 23"'
op|','
nl|'\n'
string|'"ram"'
op|':'
string|'"512"'
op|','
nl|'\n'
string|'"disk"'
op|':'
string|'"20"'
op|','
nl|'\n'
string|'"vcpus"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v2/fake/flavors/23"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/flavors/23"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"13"'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"flavor 13"'
op|','
nl|'\n'
string|'"ram"'
op|':'
string|'"256"'
op|','
nl|'\n'
string|'"disk"'
op|':'
string|'"10"'
op|','
nl|'\n'
string|'"vcpus"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v2/fake/flavors/13"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/flavors/13"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'fixture'
op|')'
newline|'\n'
name|'root'
op|'='
name|'etree'
op|'.'
name|'XML'
op|'('
name|'output'
op|')'
newline|'\n'
name|'xmlutil'
op|'.'
name|'validate_schema'
op|'('
name|'root'
op|','
string|"'flavors_index'"
op|')'
newline|'\n'
name|'flavor_elems'
op|'='
name|'root'
op|'.'
name|'findall'
op|'('
string|"'{0}flavor'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'flavor_elems'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'flavor_elem'
name|'in'
name|'enumerate'
op|'('
name|'flavor_elems'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'flavor_dict'
op|'='
name|'fixture'
op|'['
string|"'flavors'"
op|']'
op|'['
name|'i'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'key'
name|'in'
op|'['
string|"'name'"
op|','
string|"'id'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'flavor_elem'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|','
name|'str'
op|'('
name|'flavor_dict'
op|'['
name|'key'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'link_nodes'
op|'='
name|'flavor_elem'
op|'.'
name|'findall'
op|'('
string|"'{0}link'"
op|'.'
name|'format'
op|'('
name|'ATOMNS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'link_nodes'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'link'
name|'in'
name|'enumerate'
op|'('
name|'flavor_dict'
op|'['
string|"'links'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'link'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'link_nodes'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_index_empty
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_index_empty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'flavors'
op|'.'
name|'MinimalFlavorsTemplate'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'fixture'
op|'='
op|'{'
nl|'\n'
string|'"flavors"'
op|':'
op|'['
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'fixture'
op|')'
newline|'\n'
name|'root'
op|'='
name|'etree'
op|'.'
name|'XML'
op|'('
name|'output'
op|')'
newline|'\n'
name|'xmlutil'
op|'.'
name|'validate_schema'
op|'('
name|'root'
op|','
string|"'flavors_index'"
op|')'
newline|'\n'
name|'flavor_elems'
op|'='
name|'root'
op|'.'
name|'findall'
op|'('
string|"'{0}flavor'"
op|'.'
name|'format'
op|'('
name|'NS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'flavor_elems'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DisabledFlavorsWithRealDBTest
dedent|''
dedent|''
name|'class'
name|'DisabledFlavorsWithRealDBTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Tests that disabled flavors should not be shown nor listed."""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'DisabledFlavorsWithRealDBTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'flavors'
op|'.'
name|'Controller'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Add a new disabled type to the list of flavors'
nl|'\n'
name|'self'
op|'.'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/flavors'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'self'
op|'.'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'admin_context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'disabled_type'
op|'='
name|'self'
op|'.'
name|'_create_disabled_instance_type'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'inst_types'
op|'='
name|'db'
op|'.'
name|'flavor_get_all'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'admin_context'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'.'
name|'flavor_destroy'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'admin_context'
op|','
name|'self'
op|'.'
name|'disabled_type'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'super'
op|'('
name|'DisabledFlavorsWithRealDBTest'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_disabled_instance_type
dedent|''
name|'def'
name|'_create_disabled_instance_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_types'
op|'='
name|'db'
op|'.'
name|'flavor_get_all'
op|'('
name|'self'
op|'.'
name|'admin_context'
op|')'
newline|'\n'
nl|'\n'
name|'inst_type'
op|'='
name|'inst_types'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
name|'del'
name|'inst_type'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'inst_type'
op|'['
string|"'name'"
op|']'
op|'+='
string|"'.disabled'"
newline|'\n'
name|'inst_type'
op|'['
string|"'flavorid'"
op|']'
op|'='
name|'unicode'
op|'('
name|'max'
op|'('
nl|'\n'
op|'['
name|'int'
op|'('
name|'flavor'
op|'['
string|"'flavorid'"
op|']'
op|')'
name|'for'
name|'flavor'
name|'in'
name|'inst_types'
op|']'
op|')'
op|'+'
number|'1'
op|')'
newline|'\n'
name|'inst_type'
op|'['
string|"'disabled'"
op|']'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'disabled_type'
op|'='
name|'db'
op|'.'
name|'flavor_create'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'admin_context'
op|','
name|'inst_type'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'disabled_type'
newline|'\n'
nl|'\n'
DECL|member|test_index_should_not_list_disabled_flavors_to_user
dedent|''
name|'def'
name|'test_index_should_not_list_disabled_flavors_to_user'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'context'
op|'.'
name|'is_admin'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'flavor_list'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'self'
op|'.'
name|'req'
op|')'
op|'['
string|"'flavors'"
op|']'
newline|'\n'
name|'api_flavorids'
op|'='
name|'set'
op|'('
name|'f'
op|'['
string|"'id'"
op|']'
name|'for'
name|'f'
name|'in'
name|'flavor_list'
op|')'
newline|'\n'
nl|'\n'
name|'db_flavorids'
op|'='
name|'set'
op|'('
name|'i'
op|'['
string|"'flavorid'"
op|']'
name|'for'
name|'i'
name|'in'
name|'self'
op|'.'
name|'inst_types'
op|')'
newline|'\n'
name|'disabled_flavorid'
op|'='
name|'str'
op|'('
name|'self'
op|'.'
name|'disabled_type'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'disabled_flavorid'
op|','
name|'db_flavorids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'db_flavorids'
op|'-'
name|'set'
op|'('
op|'['
name|'disabled_flavorid'
op|']'
op|')'
op|','
nl|'\n'
name|'api_flavorids'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_index_should_list_disabled_flavors_to_admin
dedent|''
name|'def'
name|'test_index_should_list_disabled_flavors_to_admin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'context'
op|'.'
name|'is_admin'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'flavor_list'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'self'
op|'.'
name|'req'
op|')'
op|'['
string|"'flavors'"
op|']'
newline|'\n'
name|'api_flavorids'
op|'='
name|'set'
op|'('
name|'f'
op|'['
string|"'id'"
op|']'
name|'for'
name|'f'
name|'in'
name|'flavor_list'
op|')'
newline|'\n'
nl|'\n'
name|'db_flavorids'
op|'='
name|'set'
op|'('
name|'i'
op|'['
string|"'flavorid'"
op|']'
name|'for'
name|'i'
name|'in'
name|'self'
op|'.'
name|'inst_types'
op|')'
newline|'\n'
name|'disabled_flavorid'
op|'='
name|'str'
op|'('
name|'self'
op|'.'
name|'disabled_type'
op|'['
string|"'flavorid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'disabled_flavorid'
op|','
name|'db_flavorids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'db_flavorids'
op|','
name|'api_flavorids'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_show_should_include_disabled_flavor_for_user
dedent|''
name|'def'
name|'test_show_should_include_disabled_flavor_for_user'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Counterintuitively we should show disabled flavors to all users and\n        not just admins. The reason is that, when a user performs a server-show\n        request, we want to be able to display the pretty flavor name (\'512 MB\n        Instance\') and not just the flavor-id even if the flavor id has been\n        marked disabled.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'.'
name|'is_admin'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'disabled_type'
op|'['
string|"'flavorid'"
op|']'
op|')'
op|'['
string|"'flavor'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'flavor'
op|'['
string|"'name'"
op|']'
op|','
name|'self'
op|'.'
name|'disabled_type'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_show_should_include_disabled_flavor_for_admin
dedent|''
name|'def'
name|'test_show_should_include_disabled_flavor_for_admin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'context'
op|'.'
name|'is_admin'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'flavor'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'req'
op|','
name|'self'
op|'.'
name|'disabled_type'
op|'['
string|"'flavorid'"
op|']'
op|')'
op|'['
string|"'flavor'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'flavor'
op|'['
string|"'name'"
op|']'
op|','
name|'self'
op|'.'
name|'disabled_type'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ParseIsPublicTest
dedent|''
dedent|''
name|'class'
name|'ParseIsPublicTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ParseIsPublicTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'flavors'
op|'.'
name|'Controller'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|assertPublic
dedent|''
name|'def'
name|'assertPublic'
op|'('
name|'self'
op|','
name|'expected'
op|','
name|'is_public'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertIs'
op|'('
name|'expected'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_parse_is_public'
op|'('
name|'is_public'
op|')'
op|','
nl|'\n'
string|"'%s did not return %s'"
op|'%'
op|'('
name|'is_public'
op|','
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_None
dedent|''
name|'def'
name|'test_None'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertPublic'
op|'('
name|'True'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_truthy
dedent|''
name|'def'
name|'test_truthy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertPublic'
op|'('
name|'True'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertPublic'
op|'('
name|'True'
op|','
string|"'t'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertPublic'
op|'('
name|'True'
op|','
string|"'true'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertPublic'
op|'('
name|'True'
op|','
string|"'yes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertPublic'
op|'('
name|'True'
op|','
string|"'1'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_falsey
dedent|''
name|'def'
name|'test_falsey'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertPublic'
op|'('
name|'False'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertPublic'
op|'('
name|'False'
op|','
string|"'f'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertPublic'
op|'('
name|'False'
op|','
string|"'false'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertPublic'
op|'('
name|'False'
op|','
string|"'no'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertPublic'
op|'('
name|'False'
op|','
string|"'0'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_string_none
dedent|''
name|'def'
name|'test_string_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertPublic'
op|'('
name|'None'
op|','
string|"'none'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertPublic'
op|'('
name|'None'
op|','
string|"'None'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_other
dedent|''
name|'def'
name|'test_other'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'assertPublic'
op|','
name|'None'
op|','
string|"'other'"
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
