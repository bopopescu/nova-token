begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2013 Nicira, Inc.'
nl|'\n'
comment|'# All Rights Reserved'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# @author: Aaron Rosen, Nicira Networks, Inc.'
nl|'\n'
nl|'\n'
name|'import'
name|'uuid'
newline|'\n'
nl|'\n'
name|'from'
name|'lxml'
name|'import'
name|'etree'
newline|'\n'
name|'from'
name|'neutronclient'
op|'.'
name|'common'
name|'import'
name|'exceptions'
name|'as'
name|'n_exc'
newline|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
name|'import'
name|'webob'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
op|'.'
name|'contrib'
name|'import'
name|'security_groups'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'xmlutil'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'compute'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'neutronv2'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
op|'.'
name|'neutronv2'
name|'import'
name|'api'
name|'as'
name|'neutron_api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
op|'.'
name|'security_group'
name|'import'
name|'neutron_driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
op|'.'
name|'contrib'
name|'import'
name|'test_security_groups'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'fakes'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestNeutronSecurityGroupsTestCase
name|'class'
name|'TestNeutronSecurityGroupsTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestNeutronSecurityGroupsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'cfg'
op|'.'
name|'CONF'
op|'.'
name|'set_override'
op|'('
string|"'security_group_api'"
op|','
string|"'neutron'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'original_client'
op|'='
name|'neutronv2'
op|'.'
name|'get_client'
newline|'\n'
name|'neutronv2'
op|'.'
name|'get_client'
op|'='
name|'get_client'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'neutronv2'
op|'.'
name|'get_client'
op|'='
name|'self'
op|'.'
name|'original_client'
newline|'\n'
name|'get_client'
op|'('
op|')'
op|'.'
name|'_reset'
op|'('
op|')'
newline|'\n'
name|'super'
op|'('
name|'TestNeutronSecurityGroupsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'class'
name|'TestNeutronSecurityGroups'
op|'('
nl|'\n'
name|'test_security_groups'
op|'.'
name|'TestSecurityGroups'
op|','
nl|'\n'
DECL|class|TestNeutronSecurityGroups
name|'TestNeutronSecurityGroupsTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|_create_sg_template
indent|'    '
name|'def'
name|'_create_sg_template'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'test_security_groups'
op|'.'
name|'security_group_template'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups'"
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'req'
op|','
op|'{'
string|"'security_group'"
op|':'
name|'sg'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_network
dedent|''
name|'def'
name|'_create_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'network'"
op|':'
op|'{'
string|"'name'"
op|':'
string|"'net1'"
op|'}'
op|'}'
newline|'\n'
name|'neutron'
op|'='
name|'get_client'
op|'('
op|')'
newline|'\n'
name|'net'
op|'='
name|'neutron'
op|'.'
name|'create_network'
op|'('
name|'body'
op|')'
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'subnet'"
op|':'
op|'{'
string|"'network_id'"
op|':'
name|'net'
op|'['
string|"'network'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'cidr'"
op|':'
string|"'10.0.0.0/24'"
op|'}'
op|'}'
newline|'\n'
name|'neutron'
op|'.'
name|'create_subnet'
op|'('
name|'body'
op|')'
newline|'\n'
name|'return'
name|'net'
newline|'\n'
nl|'\n'
DECL|member|_create_port
dedent|''
name|'def'
name|'_create_port'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'port'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'fields'
op|'='
op|'['
string|"'security_groups'"
op|','
string|"'device_id'"
op|','
string|"'network_id'"
op|','
nl|'\n'
string|"'port_security_enabled'"
op|']'
newline|'\n'
name|'for'
name|'field'
name|'in'
name|'fields'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'field'
name|'in'
name|'kwargs'
op|':'
newline|'\n'
indent|'                '
name|'body'
op|'['
string|"'port'"
op|']'
op|'['
name|'field'
op|']'
op|'='
name|'kwargs'
op|'['
name|'field'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'neutron'
op|'='
name|'get_client'
op|'('
op|')'
newline|'\n'
name|'return'
name|'neutron'
op|'.'
name|'create_port'
op|'('
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_security_group_with_no_description
dedent|''
name|'def'
name|'test_create_security_group_with_no_description'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Neutron's security group descirption field is optional."
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_create_security_group_with_blank_name
dedent|''
name|'def'
name|'test_create_security_group_with_blank_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Neutron's security group name field is optional."
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_create_security_group_with_whitespace_name
dedent|''
name|'def'
name|'test_create_security_group_with_whitespace_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Neutron allows security group name to be whitespace.'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_create_security_group_with_blank_description
dedent|''
name|'def'
name|'test_create_security_group_with_blank_description'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Neutron's security group descirption field is optional."
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_create_security_group_with_whitespace_description
dedent|''
name|'def'
name|'test_create_security_group_with_whitespace_description'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Neutron allows description to be whitespace.'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_create_security_group_with_duplicate_name
dedent|''
name|'def'
name|'test_create_security_group_with_duplicate_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Neutron allows duplicate names for security groups.'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_create_security_group_non_string_name
dedent|''
name|'def'
name|'test_create_security_group_non_string_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Neutron allows security group name to be non string.'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_create_security_group_non_string_description
dedent|''
name|'def'
name|'test_create_security_group_non_string_description'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Neutron allows non string description.'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_create_security_group_quota_limit
dedent|''
name|'def'
name|'test_create_security_group_quota_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Enforced by Neutron server.'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_update_security_group
dedent|''
name|'def'
name|'test_update_security_group'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Enforced by Neutron server.'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_get_security_group_list
dedent|''
name|'def'
name|'test_get_security_group_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_sg_template'
op|'('
op|')'
op|'.'
name|'get'
op|'('
string|"'security_group'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups'"
op|')'
newline|'\n'
name|'list_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'list_dict'
op|'['
string|"'security_groups'"
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_security_group_list_all_tenants
dedent|''
name|'def'
name|'test_get_security_group_list_all_tenants'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_get_security_group_by_instance
dedent|''
name|'def'
name|'test_get_security_group_by_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'self'
op|'.'
name|'_create_sg_template'
op|'('
op|')'
op|'.'
name|'get'
op|'('
string|"'security_group'"
op|')'
newline|'\n'
name|'net'
op|'='
name|'self'
op|'.'
name|'_create_network'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_port'
op|'('
nl|'\n'
name|'network_id'
op|'='
name|'net'
op|'['
string|"'network'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'security_groups'
op|'='
op|'['
name|'sg'
op|'['
string|"'id'"
op|']'
op|']'
op|','
nl|'\n'
name|'device_id'
op|'='
name|'test_security_groups'
op|'.'
name|'FAKE_UUID1'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
op|'{'
string|"'rules'"
op|':'
op|'['
op|']'
op|','
string|"'tenant_id'"
op|':'
string|"'fake_tenant'"
op|','
string|"'id'"
op|':'
name|'sg'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'test'"
op|','
string|"'description'"
op|':'
string|"'test-description'"
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
nl|'\n'
name|'test_security_groups'
op|'.'
name|'return_server_by_uuid'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/%s/os-security-groups'"
nl|'\n'
op|'%'
name|'test_security_groups'
op|'.'
name|'FAKE_UUID1'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'server_controller'
op|'.'
name|'index'
op|'('
nl|'\n'
name|'req'
op|','
name|'test_security_groups'
op|'.'
name|'FAKE_UUID1'
op|')'
op|'['
string|"'security_groups'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'res_dict'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_security_group_by_id
dedent|''
name|'def'
name|'test_get_security_group_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'self'
op|'.'
name|'_create_sg_template'
op|'('
op|')'
op|'.'
name|'get'
op|'('
string|"'security_group'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups/%s'"
nl|'\n'
op|'%'
name|'sg'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|'('
name|'req'
op|','
name|'sg'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'security_group'"
op|':'
name|'sg'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_security_group_by_id
dedent|''
name|'def'
name|'test_delete_security_group_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'self'
op|'.'
name|'_create_sg_template'
op|'('
op|')'
op|'.'
name|'get'
op|'('
string|"'security_group'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups/%s'"
op|'%'
nl|'\n'
name|'sg'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'delete'
op|'('
name|'req'
op|','
name|'sg'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_security_group_in_use
dedent|''
name|'def'
name|'test_delete_security_group_in_use'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'self'
op|'.'
name|'_create_sg_template'
op|'('
op|')'
op|'.'
name|'get'
op|'('
string|"'security_group'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_network'
op|'('
op|')'
newline|'\n'
name|'fake_instance'
op|'='
op|'{'
string|"'project_id'"
op|':'
string|"'fake_tenant'"
op|','
nl|'\n'
string|"'availability_zone'"
op|':'
string|"'zone_one'"
op|','
nl|'\n'
string|"'info_cache'"
op|':'
op|'{'
string|"'network_info'"
op|':'
op|'['
op|']'
op|'}'
op|','
nl|'\n'
string|"'security_groups'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|"'uuid'"
op|':'
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'display_name'"
op|':'
string|"'test_instance'"
op|'}'
newline|'\n'
name|'neutron'
op|'='
name|'neutron_api'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
name|'neutron'
op|'.'
name|'allocate_for_instance'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'fake_instance'
op|','
nl|'\n'
name|'security_groups'
op|'='
op|'['
name|'sg'
op|'['
string|"'id'"
op|']'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups/%s'"
nl|'\n'
op|'%'
name|'sg'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'delete'
op|','
nl|'\n'
name|'req'
op|','
name|'sg'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_associate_non_running_instance
dedent|''
name|'def'
name|'test_associate_non_running_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Neutron does not care if the instance is running or not. When the'
nl|'\n'
comment|'# instances is detected by nuetron it will push down the security'
nl|'\n'
comment|'# group policy to it.'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_associate_already_associated_security_group_to_instance
dedent|''
name|'def'
name|'test_associate_already_associated_security_group_to_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Neutron security groups does not raise an error if you update a'
nl|'\n'
comment|'# port adding a security group to it that was already associated'
nl|'\n'
comment|'# to the port. This is because PUT semantics are used.'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_associate
dedent|''
name|'def'
name|'test_associate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'self'
op|'.'
name|'_create_sg_template'
op|'('
op|')'
op|'.'
name|'get'
op|'('
string|"'security_group'"
op|')'
newline|'\n'
name|'net'
op|'='
name|'self'
op|'.'
name|'_create_network'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_port'
op|'('
nl|'\n'
name|'network_id'
op|'='
name|'net'
op|'['
string|"'network'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'security_groups'
op|'='
op|'['
name|'sg'
op|'['
string|"'id'"
op|']'
op|']'
op|','
nl|'\n'
name|'device_id'
op|'='
name|'test_security_groups'
op|'.'
name|'FAKE_UUID1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get'"
op|','
nl|'\n'
name|'test_security_groups'
op|'.'
name|'return_server'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'addSecurityGroup'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|'"test"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/1/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'_addSecurityGroup'
op|'('
name|'req'
op|','
string|"'1'"
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_associate_port_security_enabled_true
dedent|''
name|'def'
name|'test_associate_port_security_enabled_true'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'self'
op|'.'
name|'_create_sg_template'
op|'('
op|')'
op|'.'
name|'get'
op|'('
string|"'security_group'"
op|')'
newline|'\n'
name|'net'
op|'='
name|'self'
op|'.'
name|'_create_network'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_port'
op|'('
nl|'\n'
name|'network_id'
op|'='
name|'net'
op|'['
string|"'network'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'security_groups'
op|'='
op|'['
name|'sg'
op|'['
string|"'id'"
op|']'
op|']'
op|','
nl|'\n'
name|'port_security_enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'device_id'
op|'='
name|'test_security_groups'
op|'.'
name|'FAKE_UUID1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get'"
op|','
nl|'\n'
name|'test_security_groups'
op|'.'
name|'return_server'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'addSecurityGroup'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|'"test"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/1/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'_addSecurityGroup'
op|'('
name|'req'
op|','
string|"'1'"
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_associate_port_security_enabled_false
dedent|''
name|'def'
name|'test_associate_port_security_enabled_false'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_create_sg_template'
op|'('
op|')'
op|'.'
name|'get'
op|'('
string|"'security_group'"
op|')'
newline|'\n'
name|'net'
op|'='
name|'self'
op|'.'
name|'_create_network'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_port'
op|'('
nl|'\n'
name|'network_id'
op|'='
name|'net'
op|'['
string|"'network'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'port_security_enabled'
op|'='
name|'False'
op|','
nl|'\n'
name|'device_id'
op|'='
name|'test_security_groups'
op|'.'
name|'FAKE_UUID1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get'"
op|','
nl|'\n'
name|'test_security_groups'
op|'.'
name|'return_server'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'addSecurityGroup'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|'"test"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/1/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'_addSecurityGroup'
op|','
nl|'\n'
name|'req'
op|','
string|"'1'"
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disassociate_by_non_existing_security_group_name
dedent|''
name|'def'
name|'test_disassociate_by_non_existing_security_group_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get'"
op|','
nl|'\n'
name|'test_security_groups'
op|'.'
name|'return_server'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'removeSecurityGroup'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"'non-existing'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/1/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'_removeSecurityGroup'
op|','
name|'req'
op|','
string|"'1'"
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disassociate_non_running_instance
dedent|''
name|'def'
name|'test_disassociate_non_running_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Neutron does not care if the instance is running or not. When the'
nl|'\n'
comment|'# instances is detected by neutron it will push down the security'
nl|'\n'
comment|'# group policy to it.'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_disassociate_already_associated_security_group_to_instance
dedent|''
name|'def'
name|'test_disassociate_already_associated_security_group_to_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Neutron security groups does not raise an error if you update a'
nl|'\n'
comment|'# port adding a security group to it that was already associated'
nl|'\n'
comment|'# to the port. This is because PUT semantics are used.'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_disassociate
dedent|''
name|'def'
name|'test_disassociate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'self'
op|'.'
name|'_create_sg_template'
op|'('
op|')'
op|'.'
name|'get'
op|'('
string|"'security_group'"
op|')'
newline|'\n'
name|'net'
op|'='
name|'self'
op|'.'
name|'_create_network'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_port'
op|'('
nl|'\n'
name|'network_id'
op|'='
name|'net'
op|'['
string|"'network'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'security_groups'
op|'='
op|'['
name|'sg'
op|'['
string|"'id'"
op|']'
op|']'
op|','
nl|'\n'
name|'device_id'
op|'='
name|'test_security_groups'
op|'.'
name|'FAKE_UUID1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get'"
op|','
nl|'\n'
name|'test_security_groups'
op|'.'
name|'return_server'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'removeSecurityGroup'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|'"test"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/1/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'_removeSecurityGroup'
op|'('
name|'req'
op|','
string|"'1'"
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instances_security_groups_bindings
dedent|''
name|'def'
name|'test_get_instances_security_groups_bindings'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg1'
op|'='
name|'self'
op|'.'
name|'_create_sg_template'
op|'('
name|'name'
op|'='
string|"'test1'"
op|')'
op|'.'
name|'get'
op|'('
string|"'security_group'"
op|')'
newline|'\n'
name|'sg2'
op|'='
name|'self'
op|'.'
name|'_create_sg_template'
op|'('
name|'name'
op|'='
string|"'test2'"
op|')'
op|'.'
name|'get'
op|'('
string|"'security_group'"
op|')'
newline|'\n'
comment|"# test name='' is replaced with id"
nl|'\n'
name|'sg3'
op|'='
name|'self'
op|'.'
name|'_create_sg_template'
op|'('
name|'name'
op|'='
string|"''"
op|')'
op|'.'
name|'get'
op|'('
string|"'security_group'"
op|')'
newline|'\n'
name|'net'
op|'='
name|'self'
op|'.'
name|'_create_network'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_port'
op|'('
nl|'\n'
name|'network_id'
op|'='
name|'net'
op|'['
string|"'network'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'security_groups'
op|'='
op|'['
name|'sg1'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'sg2'
op|'['
string|"'id'"
op|']'
op|']'
op|','
nl|'\n'
name|'device_id'
op|'='
name|'test_security_groups'
op|'.'
name|'FAKE_UUID1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_port'
op|'('
nl|'\n'
name|'network_id'
op|'='
name|'net'
op|'['
string|"'network'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'security_groups'
op|'='
op|'['
name|'sg2'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'sg3'
op|'['
string|"'id'"
op|']'
op|']'
op|','
nl|'\n'
name|'device_id'
op|'='
name|'test_security_groups'
op|'.'
name|'FAKE_UUID2'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
name|'test_security_groups'
op|'.'
name|'FAKE_UUID1'
op|':'
op|'['
op|'{'
string|"'name'"
op|':'
name|'sg1'
op|'['
string|"'name'"
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
name|'sg2'
op|'['
string|"'name'"
op|']'
op|'}'
op|']'
op|','
nl|'\n'
name|'test_security_groups'
op|'.'
name|'FAKE_UUID2'
op|':'
op|'['
op|'{'
string|"'name'"
op|':'
name|'sg2'
op|'['
string|"'name'"
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
name|'sg3'
op|'['
string|"'id'"
op|']'
op|'}'
op|']'
op|'}'
newline|'\n'
name|'security_group_api'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'security_group_api'
newline|'\n'
name|'bindings'
op|'='
op|'('
nl|'\n'
name|'security_group_api'
op|'.'
name|'get_instances_security_groups_bindings'
op|'('
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'bindings'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_instance_security_groups
dedent|''
name|'def'
name|'test_get_instance_security_groups'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg1'
op|'='
name|'self'
op|'.'
name|'_create_sg_template'
op|'('
name|'name'
op|'='
string|"'test1'"
op|')'
op|'.'
name|'get'
op|'('
string|"'security_group'"
op|')'
newline|'\n'
name|'sg2'
op|'='
name|'self'
op|'.'
name|'_create_sg_template'
op|'('
name|'name'
op|'='
string|"'test2'"
op|')'
op|'.'
name|'get'
op|'('
string|"'security_group'"
op|')'
newline|'\n'
comment|"# test name='' is replaced with id"
nl|'\n'
name|'sg3'
op|'='
name|'self'
op|'.'
name|'_create_sg_template'
op|'('
name|'name'
op|'='
string|"''"
op|')'
op|'.'
name|'get'
op|'('
string|"'security_group'"
op|')'
newline|'\n'
name|'net'
op|'='
name|'self'
op|'.'
name|'_create_network'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_port'
op|'('
nl|'\n'
name|'network_id'
op|'='
name|'net'
op|'['
string|"'network'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'security_groups'
op|'='
op|'['
name|'sg1'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'sg2'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'sg3'
op|'['
string|"'id'"
op|']'
op|']'
op|','
nl|'\n'
name|'device_id'
op|'='
name|'test_security_groups'
op|'.'
name|'FAKE_UUID1'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'['
op|'{'
string|"'name'"
op|':'
name|'sg1'
op|'['
string|"'name'"
op|']'
op|'}'
op|','
op|'{'
string|"'name'"
op|':'
name|'sg2'
op|'['
string|"'name'"
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
name|'sg3'
op|'['
string|"'id'"
op|']'
op|'}'
op|']'
newline|'\n'
name|'security_group_api'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'security_group_api'
newline|'\n'
name|'sgs'
op|'='
name|'security_group_api'
op|'.'
name|'get_instance_security_groups'
op|'('
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'test_security_groups'
op|'.'
name|'FAKE_UUID1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sgs'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_port_with_sg_and_port_security_enabled_true
dedent|''
name|'def'
name|'test_create_port_with_sg_and_port_security_enabled_true'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg1'
op|'='
name|'self'
op|'.'
name|'_create_sg_template'
op|'('
name|'name'
op|'='
string|"'test1'"
op|')'
op|'.'
name|'get'
op|'('
string|"'security_group'"
op|')'
newline|'\n'
name|'net'
op|'='
name|'self'
op|'.'
name|'_create_network'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_port'
op|'('
nl|'\n'
name|'network_id'
op|'='
name|'net'
op|'['
string|"'network'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
name|'security_groups'
op|'='
op|'['
name|'sg1'
op|'['
string|"'id'"
op|']'
op|']'
op|','
nl|'\n'
name|'port_security_enabled'
op|'='
name|'True'
op|','
nl|'\n'
name|'device_id'
op|'='
name|'test_security_groups'
op|'.'
name|'FAKE_UUID1'
op|')'
newline|'\n'
name|'security_group_api'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'security_group_api'
newline|'\n'
name|'sgs'
op|'='
name|'security_group_api'
op|'.'
name|'get_instance_security_groups'
op|'('
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'test_security_groups'
op|'.'
name|'FAKE_UUID1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sgs'
op|','
op|'['
op|'{'
string|"'name'"
op|':'
string|"'test1'"
op|'}'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_port_with_sg_and_port_security_enabled_false
dedent|''
name|'def'
name|'test_create_port_with_sg_and_port_security_enabled_false'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg1'
op|'='
name|'self'
op|'.'
name|'_create_sg_template'
op|'('
name|'name'
op|'='
string|"'test1'"
op|')'
op|'.'
name|'get'
op|'('
string|"'security_group'"
op|')'
newline|'\n'
name|'net'
op|'='
name|'self'
op|'.'
name|'_create_network'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'SecurityGroupCannotBeApplied'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_create_port'
op|','
nl|'\n'
name|'network_id'
op|'='
name|'net'
op|'['
string|"'network'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'security_groups'
op|'='
op|'['
name|'sg1'
op|'['
string|"'id'"
op|']'
op|']'
op|','
nl|'\n'
name|'port_security_enabled'
op|'='
name|'False'
op|','
nl|'\n'
name|'device_id'
op|'='
name|'test_security_groups'
op|'.'
name|'FAKE_UUID1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestNeutronSecurityGroupRulesTestCase
dedent|''
dedent|''
name|'class'
name|'TestNeutronSecurityGroupRulesTestCase'
op|'('
name|'TestNeutronSecurityGroupsTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestNeutronSecurityGroupRulesTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'id1'
op|'='
string|"'11111111-1111-1111-1111-111111111111'"
newline|'\n'
name|'sg_template1'
op|'='
name|'test_security_groups'
op|'.'
name|'security_group_template'
op|'('
nl|'\n'
name|'security_group_rules'
op|'='
op|'['
op|']'
op|','
name|'id'
op|'='
name|'id1'
op|')'
newline|'\n'
name|'id2'
op|'='
string|"'22222222-2222-2222-2222-222222222222'"
newline|'\n'
name|'sg_template2'
op|'='
name|'test_security_groups'
op|'.'
name|'security_group_template'
op|'('
nl|'\n'
name|'security_group_rules'
op|'='
op|'['
op|']'
op|','
name|'id'
op|'='
name|'id2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller_sg'
op|'='
name|'security_groups'
op|'.'
name|'SecurityGroupController'
op|'('
op|')'
newline|'\n'
name|'neutron'
op|'='
name|'get_client'
op|'('
op|')'
newline|'\n'
name|'neutron'
op|'.'
name|'_fake_security_groups'
op|'['
name|'id1'
op|']'
op|'='
name|'sg_template1'
newline|'\n'
name|'neutron'
op|'.'
name|'_fake_security_groups'
op|'['
name|'id2'
op|']'
op|'='
name|'sg_template2'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'neutronv2'
op|'.'
name|'get_client'
op|'='
name|'self'
op|'.'
name|'original_client'
newline|'\n'
name|'get_client'
op|'('
op|')'
op|'.'
name|'_reset'
op|'('
op|')'
newline|'\n'
name|'super'
op|'('
name|'TestNeutronSecurityGroupsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'class'
name|'TestNeutronSecurityGroupRules'
op|'('
nl|'\n'
name|'test_security_groups'
op|'.'
name|'TestSecurityGroupRules'
op|','
nl|'\n'
DECL|class|TestNeutronSecurityGroupRules
name|'TestNeutronSecurityGroupRulesTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_create_add_existing_rules_by_cidr
indent|'    '
name|'def'
name|'test_create_add_existing_rules_by_cidr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'test_security_groups'
op|'.'
name|'security_group_template'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller_sg'
op|'.'
name|'create'
op|'('
name|'req'
op|','
op|'{'
string|"'security_group'"
op|':'
name|'sg'
op|'}'
op|')'
newline|'\n'
name|'rule'
op|'='
name|'test_security_groups'
op|'.'
name|'security_group_rule_template'
op|'('
nl|'\n'
name|'cidr'
op|'='
string|"'15.0.0.0/8'"
op|','
name|'parent_group_id'
op|'='
name|'self'
op|'.'
name|'sg2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_add_existing_rules_by_group_id
dedent|''
name|'def'
name|'test_create_add_existing_rules_by_group_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'test_security_groups'
op|'.'
name|'security_group_template'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller_sg'
op|'.'
name|'create'
op|'('
name|'req'
op|','
op|'{'
string|"'security_group'"
op|':'
name|'sg'
op|'}'
op|')'
newline|'\n'
name|'rule'
op|'='
name|'test_security_groups'
op|'.'
name|'security_group_rule_template'
op|'('
nl|'\n'
name|'group'
op|'='
name|'self'
op|'.'
name|'sg1'
op|'['
string|"'id'"
op|']'
op|','
name|'parent_group_id'
op|'='
name|'self'
op|'.'
name|'sg2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete
dedent|''
name|'def'
name|'test_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
name|'test_security_groups'
op|'.'
name|'security_group_rule_template'
op|'('
nl|'\n'
name|'parent_group_id'
op|'='
name|'self'
op|'.'
name|'sg2'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
name|'security_group_rule'
op|'='
name|'res_dict'
op|'['
string|"'security_group_rule'"
op|']'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules/%s'"
nl|'\n'
op|'%'
name|'security_group_rule'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'delete'
op|'('
name|'req'
op|','
name|'security_group_rule'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_rule_quota_limit
dedent|''
name|'def'
name|'test_create_rule_quota_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Enforced by neutron'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'class'
name|'TestNeutronSecurityGroupsXMLDeserializer'
op|'('
nl|'\n'
name|'test_security_groups'
op|'.'
name|'TestSecurityGroupXMLDeserializer'
op|','
nl|'\n'
DECL|class|TestNeutronSecurityGroupsXMLDeserializer
name|'TestNeutronSecurityGroupsTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'class'
name|'TestNeutronSecurityGroupsXMLSerializer'
op|'('
nl|'\n'
name|'test_security_groups'
op|'.'
name|'TestSecurityGroupXMLSerializer'
op|','
nl|'\n'
DECL|class|TestNeutronSecurityGroupsXMLSerializer
name|'TestNeutronSecurityGroupsTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestNeutronSecurityGroupsOutputTest
dedent|''
name|'class'
name|'TestNeutronSecurityGroupsOutputTest'
op|'('
name|'TestNeutronSecurityGroupsTestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|content_type
indent|'    '
name|'content_type'
op|'='
string|"'application/json'"
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestNeutronSecurityGroupsOutputTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_out_nw_api'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'security_groups'
op|'.'
name|'SecurityGroupController'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute'
op|'.'
name|'api'
op|'.'
name|'API'
op|','
string|"'get'"
op|','
nl|'\n'
name|'test_security_groups'
op|'.'
name|'fake_compute_get'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute'
op|'.'
name|'api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
nl|'\n'
name|'test_security_groups'
op|'.'
name|'fake_compute_get_all'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute'
op|'.'
name|'api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
nl|'\n'
name|'test_security_groups'
op|'.'
name|'fake_compute_create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'neutron_driver'
op|'.'
name|'SecurityGroupAPI'
op|','
nl|'\n'
string|"'get_instances_security_groups_bindings'"
op|','
nl|'\n'
op|'('
name|'test_security_groups'
op|'.'
nl|'\n'
name|'fake_get_instances_security_groups_bindings'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
nl|'\n'
name|'osapi_compute_extension'
op|'='
op|'['
nl|'\n'
string|"'nova.api.openstack.compute.contrib.select_extensions'"
op|']'
op|','
nl|'\n'
name|'osapi_compute_ext_list'
op|'='
op|'['
string|"'Security_groups'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_make_request
dedent|''
name|'def'
name|'_make_request'
op|'('
name|'self'
op|','
name|'url'
op|','
name|'body'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
name|'url'
op|')'
newline|'\n'
name|'if'
name|'body'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'self'
op|'.'
name|'_encode_body'
op|'('
name|'body'
op|')'
newline|'\n'
dedent|''
name|'req'
op|'.'
name|'content_type'
op|'='
name|'self'
op|'.'
name|'content_type'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Accept'"
op|']'
op|'='
name|'self'
op|'.'
name|'content_type'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
name|'init_only'
op|'='
op|'('
string|"'servers'"
op|','
op|')'
op|')'
op|')'
newline|'\n'
name|'return'
name|'res'
newline|'\n'
nl|'\n'
DECL|member|_encode_body
dedent|''
name|'def'
name|'_encode_body'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_server
dedent|''
name|'def'
name|'_get_server'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'body'
op|')'
op|'.'
name|'get'
op|'('
string|"'server'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_servers
dedent|''
name|'def'
name|'_get_servers'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'body'
op|')'
op|'.'
name|'get'
op|'('
string|"'servers'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_groups
dedent|''
name|'def'
name|'_get_groups'
op|'('
name|'self'
op|','
name|'server'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'server'
op|'.'
name|'get'
op|'('
string|"'security_groups'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create
dedent|''
name|'def'
name|'test_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'url'
op|'='
string|"'/v2/fake/servers'"
newline|'\n'
name|'image_uuid'
op|'='
string|"'c905cedb-7281-47e4-8a62-f26bc5fc4c77'"
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups'"
op|')'
newline|'\n'
name|'security_groups'
op|'='
op|'['
op|'{'
string|"'name'"
op|':'
string|"'fake-2-0'"
op|'}'
op|','
op|'{'
string|"'name'"
op|':'
string|"'fake-2-1'"
op|'}'
op|']'
newline|'\n'
name|'for'
name|'security_group'
name|'in'
name|'security_groups'
op|':'
newline|'\n'
indent|'            '
name|'sg'
op|'='
name|'test_security_groups'
op|'.'
name|'security_group_template'
op|'('
nl|'\n'
name|'name'
op|'='
name|'security_group'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'req'
op|','
op|'{'
string|"'security_group'"
op|':'
name|'sg'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'server'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"'server_test'"
op|','
name|'imageRef'
op|'='
name|'image_uuid'
op|','
name|'flavorRef'
op|'='
number|'2'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'security_groups'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'_make_request'
op|'('
name|'url'
op|','
op|'{'
string|"'server'"
op|':'
name|'server'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'_get_server'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'group'
name|'in'
name|'enumerate'
op|'('
name|'self'
op|'.'
name|'_get_groups'
op|'('
name|'server'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'name'
op|'='
string|"'fake-2-%s'"
op|'%'
name|'i'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'group'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_server_get_default_security_group
dedent|''
dedent|''
name|'def'
name|'test_create_server_get_default_security_group'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'url'
op|'='
string|"'/v2/fake/servers'"
newline|'\n'
name|'image_uuid'
op|'='
string|"'c905cedb-7281-47e4-8a62-f26bc5fc4c77'"
newline|'\n'
name|'server'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"'server_test'"
op|','
name|'imageRef'
op|'='
name|'image_uuid'
op|','
name|'flavorRef'
op|'='
number|'2'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'_make_request'
op|'('
name|'url'
op|','
op|'{'
string|"'server'"
op|':'
name|'server'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'_get_server'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'group'
op|'='
name|'self'
op|'.'
name|'_get_groups'
op|'('
name|'server'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'group'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
string|"'default'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_show
dedent|''
name|'def'
name|'test_show'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_instance_security_groups
indent|'        '
name|'def'
name|'fake_get_instance_security_groups'
op|'('
name|'inst'
op|','
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|'{'
string|"'name'"
op|':'
string|"'fake-2-0'"
op|'}'
op|','
op|'{'
string|"'name'"
op|':'
string|"'fake-2-1'"
op|'}'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'neutron_driver'
op|'.'
name|'SecurityGroupAPI'
op|','
nl|'\n'
string|"'get_instance_security_groups'"
op|','
nl|'\n'
name|'fake_get_instance_security_groups'
op|')'
newline|'\n'
nl|'\n'
name|'url'
op|'='
string|"'/v2/fake/servers'"
newline|'\n'
name|'image_uuid'
op|'='
string|"'c905cedb-7281-47e4-8a62-f26bc5fc4c77'"
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups'"
op|')'
newline|'\n'
name|'security_groups'
op|'='
op|'['
op|'{'
string|"'name'"
op|':'
string|"'fake-2-0'"
op|'}'
op|','
op|'{'
string|"'name'"
op|':'
string|"'fake-2-1'"
op|'}'
op|']'
newline|'\n'
name|'for'
name|'security_group'
name|'in'
name|'security_groups'
op|':'
newline|'\n'
indent|'            '
name|'sg'
op|'='
name|'test_security_groups'
op|'.'
name|'security_group_template'
op|'('
nl|'\n'
name|'name'
op|'='
name|'security_group'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'req'
op|','
op|'{'
string|"'security_group'"
op|':'
name|'sg'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'server'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"'server_test'"
op|','
name|'imageRef'
op|'='
name|'image_uuid'
op|','
name|'flavorRef'
op|'='
number|'2'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'security_groups'
op|')'
newline|'\n'
nl|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'_make_request'
op|'('
name|'url'
op|','
op|'{'
string|"'server'"
op|':'
name|'server'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'_get_server'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'group'
name|'in'
name|'enumerate'
op|'('
name|'self'
op|'.'
name|'_get_groups'
op|'('
name|'server'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'name'
op|'='
string|"'fake-2-%s'"
op|'%'
name|'i'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'group'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
comment|'# Test that show (GET) returns the same information as create (POST)'
nl|'\n'
dedent|''
name|'url'
op|'='
string|"'/v2/fake/servers/'"
op|'+'
name|'test_security_groups'
op|'.'
name|'UUID3'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'_make_request'
op|'('
name|'url'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'_get_server'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
op|','
name|'group'
name|'in'
name|'enumerate'
op|'('
name|'self'
op|'.'
name|'_get_groups'
op|'('
name|'server'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'name'
op|'='
string|"'fake-2-%s'"
op|'%'
name|'i'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'group'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detail
dedent|''
dedent|''
name|'def'
name|'test_detail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'url'
op|'='
string|"'/v2/fake/servers/detail'"
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'_make_request'
op|'('
name|'url'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'server'
name|'in'
name|'enumerate'
op|'('
name|'self'
op|'.'
name|'_get_servers'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'j'
op|','
name|'group'
name|'in'
name|'enumerate'
op|'('
name|'self'
op|'.'
name|'_get_groups'
op|'('
name|'server'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'name'
op|'='
string|"'fake-%s-%s'"
op|'%'
op|'('
name|'i'
op|','
name|'j'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'group'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_no_instance_passthrough_404
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_no_instance_passthrough_404'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_compute_get
indent|'        '
name|'def'
name|'fake_compute_get'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute'
op|'.'
name|'api'
op|'.'
name|'API'
op|','
string|"'get'"
op|','
name|'fake_compute_get'
op|')'
newline|'\n'
name|'url'
op|'='
string|"'/v2/fake/servers/70f6db34-de8d-4fbd-aafb-4065bdfa6115'"
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'_make_request'
op|'('
name|'url'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'class'
name|'TestNeutronSecurityGroupsOutputXMLTest'
op|'('
nl|'\n'
DECL|class|TestNeutronSecurityGroupsOutputXMLTest
name|'TestNeutronSecurityGroupsOutputTest'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|content_type
indent|'    '
name|'content_type'
op|'='
string|"'application/xml'"
newline|'\n'
nl|'\n'
DECL|class|MinimalCreateServerTemplate
name|'class'
name|'MinimalCreateServerTemplate'
op|'('
name|'xmlutil'
op|'.'
name|'TemplateBuilder'
op|')'
op|':'
newline|'\n'
DECL|member|construct
indent|'        '
name|'def'
name|'construct'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'root'
op|'='
name|'xmlutil'
op|'.'
name|'TemplateElement'
op|'('
string|"'server'"
op|','
name|'selector'
op|'='
string|"'server'"
op|')'
newline|'\n'
name|'root'
op|'.'
name|'set'
op|'('
string|"'name'"
op|')'
newline|'\n'
name|'root'
op|'.'
name|'set'
op|'('
string|"'id'"
op|')'
newline|'\n'
name|'root'
op|'.'
name|'set'
op|'('
string|"'imageRef'"
op|')'
newline|'\n'
name|'root'
op|'.'
name|'set'
op|'('
string|"'flavorRef'"
op|')'
newline|'\n'
name|'elem'
op|'='
name|'xmlutil'
op|'.'
name|'SubTemplateElement'
op|'('
name|'root'
op|','
string|"'security_groups'"
op|')'
newline|'\n'
name|'sg'
op|'='
name|'xmlutil'
op|'.'
name|'SubTemplateElement'
op|'('
name|'elem'
op|','
string|"'security_group'"
op|','
nl|'\n'
name|'selector'
op|'='
string|"'security_groups'"
op|')'
newline|'\n'
name|'sg'
op|'.'
name|'set'
op|'('
string|"'name'"
op|')'
newline|'\n'
name|'return'
name|'xmlutil'
op|'.'
name|'MasterTemplate'
op|'('
name|'root'
op|','
number|'1'
op|','
nl|'\n'
name|'nsmap'
op|'='
op|'{'
name|'None'
op|':'
name|'xmlutil'
op|'.'
name|'XMLNS_V11'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_encode_body
dedent|''
dedent|''
name|'def'
name|'_encode_body'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'self'
op|'.'
name|'MinimalCreateServerTemplate'
op|'('
op|')'
newline|'\n'
name|'return'
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_server
dedent|''
name|'def'
name|'_get_server'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'etree'
op|'.'
name|'XML'
op|'('
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_servers
dedent|''
name|'def'
name|'_get_servers'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'etree'
op|'.'
name|'XML'
op|'('
name|'body'
op|')'
op|'.'
name|'getchildren'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_groups
dedent|''
name|'def'
name|'_get_groups'
op|'('
name|'self'
op|','
name|'server'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(vish): we are adding security groups without an extension'
nl|'\n'
comment|"#             namespace so we don't break people using the existing"
nl|'\n'
comment|'#             functionality, but that means we need to use find with'
nl|'\n'
comment|'#             the existing server namespace.'
nl|'\n'
indent|'        '
name|'namespace'
op|'='
name|'server'
op|'.'
name|'nsmap'
op|'['
name|'None'
op|']'
newline|'\n'
name|'return'
name|'server'
op|'.'
name|'find'
op|'('
string|"'{%s}security_groups'"
op|'%'
name|'namespace'
op|')'
op|'.'
name|'getchildren'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_client
dedent|''
dedent|''
name|'def'
name|'get_client'
op|'('
name|'context'
op|'='
name|'None'
op|','
name|'admin'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'MockClient'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MockClient
dedent|''
name|'class'
name|'MockClient'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
comment|'# Needs to be global to survive multiple calls to get_client.'
nl|'\n'
DECL|variable|_fake_security_groups
indent|'    '
name|'_fake_security_groups'
op|'='
op|'{'
op|'}'
newline|'\n'
DECL|variable|_fake_ports
name|'_fake_ports'
op|'='
op|'{'
op|'}'
newline|'\n'
DECL|variable|_fake_networks
name|'_fake_networks'
op|'='
op|'{'
op|'}'
newline|'\n'
DECL|variable|_fake_subnets
name|'_fake_subnets'
op|'='
op|'{'
op|'}'
newline|'\n'
DECL|variable|_fake_security_group_rules
name|'_fake_security_group_rules'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# add default security group'
nl|'\n'
indent|'        '
name|'if'
name|'not'
name|'len'
op|'('
name|'self'
op|'.'
name|'_fake_security_groups'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ret'
op|'='
op|'{'
string|"'name'"
op|':'
string|"'default'"
op|','
string|"'description'"
op|':'
string|"'default'"
op|','
nl|'\n'
string|"'tenant_id'"
op|':'
string|"'fake_tenant'"
op|','
string|"'security_group_rules'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|"'id'"
op|':'
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_fake_security_groups'
op|'['
name|'ret'
op|'['
string|"'id'"
op|']'
op|']'
op|'='
name|'ret'
newline|'\n'
nl|'\n'
DECL|member|_reset
dedent|''
dedent|''
name|'def'
name|'_reset'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_fake_security_groups'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_fake_ports'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_fake_networks'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_fake_subnets'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_fake_security_group_rules'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_security_group
dedent|''
name|'def'
name|'create_security_group'
op|'('
name|'self'
op|','
name|'body'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'s'
op|'='
name|'body'
op|'.'
name|'get'
op|'('
string|"'security_group'"
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'s'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|')'
op|'>'
number|'255'
name|'or'
name|'len'
op|'('
name|'s'
op|'.'
name|'get'
op|'('
string|"'description'"
op|')'
op|')'
op|'>'
number|'255'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
string|"'Security Group name great than 255'"
newline|'\n'
name|'raise'
name|'n_exc'
op|'.'
name|'NeutronClientException'
op|'('
name|'message'
op|'='
name|'msg'
op|','
name|'status_code'
op|'='
number|'401'
op|')'
newline|'\n'
dedent|''
name|'ret'
op|'='
op|'{'
string|"'name'"
op|':'
name|'s'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
string|"'description'"
op|':'
name|'s'
op|'.'
name|'get'
op|'('
string|"'description'"
op|')'
op|','
nl|'\n'
string|"'tenant_id'"
op|':'
string|"'fake_tenant'"
op|','
string|"'security_group_rules'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|"'id'"
op|':'
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_fake_security_groups'
op|'['
name|'ret'
op|'['
string|"'id'"
op|']'
op|']'
op|'='
name|'ret'
newline|'\n'
name|'return'
op|'{'
string|"'security_group'"
op|':'
name|'ret'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|create_network
dedent|''
name|'def'
name|'create_network'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'n'
op|'='
name|'body'
op|'.'
name|'get'
op|'('
string|"'network'"
op|')'
newline|'\n'
name|'ret'
op|'='
op|'{'
string|"'status'"
op|':'
string|"'ACTIVE'"
op|','
string|"'subnets'"
op|':'
op|'['
op|']'
op|','
string|"'name'"
op|':'
name|'n'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
nl|'\n'
string|"'admin_state_up'"
op|':'
name|'n'
op|'.'
name|'get'
op|'('
string|"'admin_state_up'"
op|','
name|'True'
op|')'
op|','
nl|'\n'
string|"'tenant_id'"
op|':'
string|"'fake_tenant'"
op|','
nl|'\n'
string|"'id'"
op|':'
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
op|'}'
newline|'\n'
name|'if'
string|"'port_security_enabled'"
name|'in'
name|'n'
op|':'
newline|'\n'
indent|'            '
name|'ret'
op|'['
string|"'port_security_enabled'"
op|']'
op|'='
name|'n'
op|'['
string|"'port_security_enabled'"
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_fake_networks'
op|'['
name|'ret'
op|'['
string|"'id'"
op|']'
op|']'
op|'='
name|'ret'
newline|'\n'
name|'return'
op|'{'
string|"'network'"
op|':'
name|'ret'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|create_subnet
dedent|''
name|'def'
name|'create_subnet'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'s'
op|'='
name|'body'
op|'.'
name|'get'
op|'('
string|"'subnet'"
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'net'
op|'='
name|'self'
op|'.'
name|'_fake_networks'
op|'['
name|'s'
op|'.'
name|'get'
op|'('
string|"'network_id'"
op|')'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
string|"'Network %s not found'"
op|'%'
name|'s'
op|'.'
name|'get'
op|'('
string|"'network_id'"
op|')'
newline|'\n'
name|'raise'
name|'n_exc'
op|'.'
name|'NeutronClientException'
op|'('
name|'message'
op|'='
name|'msg'
op|','
name|'status_code'
op|'='
number|'404'
op|')'
newline|'\n'
dedent|''
name|'ret'
op|'='
op|'{'
string|"'name'"
op|':'
name|'s'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
string|"'network_id'"
op|':'
name|'s'
op|'.'
name|'get'
op|'('
string|"'network_id'"
op|')'
op|','
nl|'\n'
string|"'tenant_id'"
op|':'
string|"'fake_tenant'"
op|','
string|"'cidr'"
op|':'
name|'s'
op|'.'
name|'get'
op|'('
string|"'cidr'"
op|')'
op|','
nl|'\n'
string|"'id'"
op|':'
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
op|','
string|"'gateway_ip'"
op|':'
string|"'10.0.0.1'"
op|'}'
newline|'\n'
name|'net'
op|'['
string|"'subnets'"
op|']'
op|'.'
name|'append'
op|'('
name|'ret'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_fake_networks'
op|'['
name|'net'
op|'['
string|"'id'"
op|']'
op|']'
op|'='
name|'net'
newline|'\n'
name|'self'
op|'.'
name|'_fake_subnets'
op|'['
name|'ret'
op|'['
string|"'id'"
op|']'
op|']'
op|'='
name|'ret'
newline|'\n'
name|'return'
op|'{'
string|"'subnet'"
op|':'
name|'ret'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|create_port
dedent|''
name|'def'
name|'create_port'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|'='
name|'body'
op|'.'
name|'get'
op|'('
string|"'port'"
op|')'
newline|'\n'
name|'ret'
op|'='
op|'{'
string|"'status'"
op|':'
string|"'ACTIVE'"
op|','
string|"'id'"
op|':'
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'mac_address'"
op|':'
name|'p'
op|'.'
name|'get'
op|'('
string|"'mac_address'"
op|','
string|"'fa:16:3e:b8:f5:fb'"
op|')'
op|','
nl|'\n'
string|"'device_id'"
op|':'
name|'p'
op|'.'
name|'get'
op|'('
string|"'device_id'"
op|','
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
op|')'
op|','
nl|'\n'
string|"'admin_state_up'"
op|':'
name|'p'
op|'.'
name|'get'
op|'('
string|"'admin_state_up'"
op|','
name|'True'
op|')'
op|','
nl|'\n'
string|"'security_groups'"
op|':'
name|'p'
op|'.'
name|'get'
op|'('
string|"'security_groups'"
op|','
op|'['
op|']'
op|')'
op|','
nl|'\n'
string|"'network_id'"
op|':'
name|'p'
op|'.'
name|'get'
op|'('
string|"'network_id'"
op|')'
op|'}'
newline|'\n'
nl|'\n'
name|'network'
op|'='
name|'self'
op|'.'
name|'_fake_networks'
op|'['
name|'p'
op|'['
string|"'network_id'"
op|']'
op|']'
newline|'\n'
name|'if'
string|"'port_security_enabled'"
name|'in'
name|'p'
op|':'
newline|'\n'
indent|'            '
name|'ret'
op|'['
string|"'port_security_enabled'"
op|']'
op|'='
name|'p'
op|'['
string|"'port_security_enabled'"
op|']'
newline|'\n'
dedent|''
name|'elif'
string|"'port_security_enabled'"
name|'in'
name|'network'
op|':'
newline|'\n'
indent|'            '
name|'ret'
op|'['
string|"'port_security_enabled'"
op|']'
op|'='
name|'network'
op|'['
string|"'port_security_enabled'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'port_security'
op|'='
name|'ret'
op|'.'
name|'get'
op|'('
string|"'port_security_enabled'"
op|','
name|'True'
op|')'
newline|'\n'
comment|'# port_security must be True if security groups are present'
nl|'\n'
name|'if'
name|'not'
name|'port_security'
name|'and'
name|'ret'
op|'['
string|"'security_groups'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'SecurityGroupCannotBeApplied'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'network'
op|'['
string|"'subnets'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'ret'
op|'['
string|"'fixed_ips'"
op|']'
op|'='
op|'['
op|'{'
string|"'subnet_id'"
op|':'
name|'network'
op|'['
string|"'subnets'"
op|']'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|"'ip_address'"
op|':'
string|"'10.0.0.1'"
op|'}'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'ret'
op|'['
string|"'security_groups'"
op|']'
name|'and'
op|'('
name|'port_security'
name|'is'
name|'None'
name|'or'
nl|'\n'
name|'port_security'
name|'is'
name|'True'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'security_group'
name|'in'
name|'self'
op|'.'
name|'_fake_security_groups'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'security_group'
op|'['
string|"'name'"
op|']'
op|'=='
string|"'default'"
op|':'
newline|'\n'
indent|'                    '
name|'ret'
op|'['
string|"'security_groups'"
op|']'
op|'='
op|'['
name|'security_group'
op|'['
string|"'id'"
op|']'
op|']'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'self'
op|'.'
name|'_fake_ports'
op|'['
name|'ret'
op|'['
string|"'id'"
op|']'
op|']'
op|'='
name|'ret'
newline|'\n'
name|'return'
op|'{'
string|"'port'"
op|':'
name|'ret'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|create_security_group_rule
dedent|''
name|'def'
name|'create_security_group_rule'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
comment|'# does not handle bulk case so just picks rule[0]'
nl|'\n'
indent|'        '
name|'r'
op|'='
name|'body'
op|'.'
name|'get'
op|'('
string|"'security_group_rules'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'fields'
op|'='
op|'['
string|"'direction'"
op|','
string|"'protocol'"
op|','
string|"'port_range_min'"
op|','
string|"'port_range_max'"
op|','
nl|'\n'
string|"'ethertype'"
op|','
string|"'remote_ip_prefix'"
op|','
string|"'tenant_id'"
op|','
nl|'\n'
string|"'security_group_id'"
op|','
string|"'remote_group_id'"
op|']'
newline|'\n'
name|'ret'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'field'
name|'in'
name|'fields'
op|':'
newline|'\n'
indent|'            '
name|'ret'
op|'['
name|'field'
op|']'
op|'='
name|'r'
op|'.'
name|'get'
op|'('
name|'field'
op|')'
newline|'\n'
dedent|''
name|'ret'
op|'['
string|"'id'"
op|']'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_fake_security_group_rules'
op|'['
name|'ret'
op|'['
string|"'id'"
op|']'
op|']'
op|'='
name|'ret'
newline|'\n'
name|'return'
op|'{'
string|"'security_group_rules'"
op|':'
op|'['
name|'ret'
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|show_security_group
dedent|''
name|'def'
name|'show_security_group'
op|'('
name|'self'
op|','
name|'security_group'
op|','
op|'**'
name|'_params'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'sg'
op|'='
name|'self'
op|'.'
name|'_fake_security_groups'
op|'['
name|'security_group'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
string|"'Security Group %s not found'"
op|'%'
name|'security_group'
newline|'\n'
name|'raise'
name|'n_exc'
op|'.'
name|'NeutronClientException'
op|'('
name|'message'
op|'='
name|'msg'
op|','
name|'status_code'
op|'='
number|'404'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'security_group_rule'
name|'in'
name|'self'
op|'.'
name|'_fake_security_group_rules'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'security_group_rule'
op|'['
string|"'security_group_id'"
op|']'
op|'=='
name|'sg'
op|'['
string|"'id'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'sg'
op|'['
string|"'security_group_rules'"
op|']'
op|'.'
name|'append'
op|'('
name|'security_group_rule'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
op|'{'
string|"'security_group'"
op|':'
name|'sg'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|show_security_group_rule
dedent|''
name|'def'
name|'show_security_group_rule'
op|'('
name|'self'
op|','
name|'security_group_rule'
op|','
op|'**'
name|'_params'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'security_group_rule'"
op|':'
nl|'\n'
name|'self'
op|'.'
name|'_fake_security_group_rules'
op|'['
name|'security_group_rule'
op|']'
op|'}'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
string|"'Security Group rule %s not found'"
op|'%'
name|'security_group_rule'
newline|'\n'
name|'raise'
name|'n_exc'
op|'.'
name|'NeutronClientException'
op|'('
name|'message'
op|'='
name|'msg'
op|','
name|'status_code'
op|'='
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|show_network
dedent|''
dedent|''
name|'def'
name|'show_network'
op|'('
name|'self'
op|','
name|'network'
op|','
op|'**'
name|'_params'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'network'"
op|':'
nl|'\n'
name|'self'
op|'.'
name|'_fake_networks'
op|'['
name|'network'
op|']'
op|'}'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
string|"'Network %s not found'"
op|'%'
name|'network'
newline|'\n'
name|'raise'
name|'n_exc'
op|'.'
name|'NeutronClientException'
op|'('
name|'message'
op|'='
name|'msg'
op|','
name|'status_code'
op|'='
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|show_port
dedent|''
dedent|''
name|'def'
name|'show_port'
op|'('
name|'self'
op|','
name|'port'
op|','
op|'**'
name|'_params'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'port'"
op|':'
nl|'\n'
name|'self'
op|'.'
name|'_fake_ports'
op|'['
name|'port'
op|']'
op|'}'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
string|"'Port %s not found'"
op|'%'
name|'port'
newline|'\n'
name|'raise'
name|'n_exc'
op|'.'
name|'NeutronClientException'
op|'('
name|'message'
op|'='
name|'msg'
op|','
name|'status_code'
op|'='
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|show_subnet
dedent|''
dedent|''
name|'def'
name|'show_subnet'
op|'('
name|'self'
op|','
name|'subnet'
op|','
op|'**'
name|'_params'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'subnet'"
op|':'
nl|'\n'
name|'self'
op|'.'
name|'_fake_subnets'
op|'['
name|'subnet'
op|']'
op|'}'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
string|"'Port %s not found'"
op|'%'
name|'subnet'
newline|'\n'
name|'raise'
name|'n_exc'
op|'.'
name|'NeutronClientException'
op|'('
name|'message'
op|'='
name|'msg'
op|','
name|'status_code'
op|'='
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|list_security_groups
dedent|''
dedent|''
name|'def'
name|'list_security_groups'
op|'('
name|'self'
op|','
op|'**'
name|'_params'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ret'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'security_group'
name|'in'
name|'self'
op|'.'
name|'_fake_security_groups'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'names'
op|'='
name|'_params'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
newline|'\n'
name|'if'
name|'names'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'names'
op|','
name|'list'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'names'
op|'='
op|'['
name|'names'
op|']'
newline|'\n'
dedent|''
name|'for'
name|'name'
name|'in'
name|'names'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'security_group'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|'=='
name|'name'
op|':'
newline|'\n'
indent|'                        '
name|'ret'
op|'.'
name|'append'
op|'('
name|'security_group'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'ids'
op|'='
name|'_params'
op|'.'
name|'get'
op|'('
string|"'id'"
op|')'
newline|'\n'
name|'if'
name|'ids'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'ids'
op|','
name|'list'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'ids'
op|'='
op|'['
name|'ids'
op|']'
newline|'\n'
dedent|''
name|'for'
name|'id'
name|'in'
name|'ids'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'security_group'
op|'.'
name|'get'
op|'('
string|"'id'"
op|')'
op|'=='
name|'id'
op|':'
newline|'\n'
indent|'                        '
name|'ret'
op|'.'
name|'append'
op|'('
name|'security_group'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'elif'
name|'not'
op|'('
name|'names'
name|'or'
name|'ids'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'ret'
op|'.'
name|'append'
op|'('
name|'security_group'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
op|'{'
string|"'security_groups'"
op|':'
name|'ret'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|list_networks
dedent|''
name|'def'
name|'list_networks'
op|'('
name|'self'
op|','
op|'**'
name|'_params'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'networks'"
op|':'
nl|'\n'
op|'['
name|'network'
name|'for'
name|'network'
name|'in'
name|'self'
op|'.'
name|'_fake_networks'
op|'.'
name|'values'
op|'('
op|')'
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|list_ports
dedent|''
name|'def'
name|'list_ports'
op|'('
name|'self'
op|','
op|'**'
name|'_params'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ret'
op|'='
op|'['
op|']'
newline|'\n'
name|'device_id'
op|'='
name|'_params'
op|'.'
name|'get'
op|'('
string|"'device_id'"
op|')'
newline|'\n'
name|'for'
name|'port'
name|'in'
name|'self'
op|'.'
name|'_fake_ports'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'device_id'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'device_id'
op|'=='
name|'port'
op|'['
string|"'device_id'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'ret'
op|'.'
name|'append'
op|'('
name|'port'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'ret'
op|'.'
name|'append'
op|'('
name|'port'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
op|'{'
string|"'ports'"
op|':'
name|'ret'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|list_subnets
dedent|''
name|'def'
name|'list_subnets'
op|'('
name|'self'
op|','
op|'**'
name|'_params'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'subnets'"
op|':'
nl|'\n'
op|'['
name|'subnet'
name|'for'
name|'subnet'
name|'in'
name|'self'
op|'.'
name|'_fake_subnets'
op|'.'
name|'values'
op|'('
op|')'
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|list_floatingips
dedent|''
name|'def'
name|'list_floatingips'
op|'('
name|'self'
op|','
op|'**'
name|'_params'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'floatingips'"
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|delete_security_group
dedent|''
name|'def'
name|'delete_security_group'
op|'('
name|'self'
op|','
name|'security_group'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'show_security_group'
op|'('
name|'security_group'
op|')'
newline|'\n'
name|'ports'
op|'='
name|'self'
op|'.'
name|'list_ports'
op|'('
op|')'
newline|'\n'
name|'for'
name|'port'
name|'in'
name|'ports'
op|'.'
name|'get'
op|'('
string|"'ports'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'sg_port'
name|'in'
name|'port'
op|'['
string|"'security_groups'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'sg_port'
op|'=='
name|'security_group'
op|':'
newline|'\n'
indent|'                    '
name|'msg'
op|'='
op|'('
string|"'Unable to delete Security group %s in use'"
nl|'\n'
op|'%'
name|'security_group'
op|')'
newline|'\n'
name|'raise'
name|'n_exc'
op|'.'
name|'NeutronClientException'
op|'('
name|'message'
op|'='
name|'msg'
op|','
nl|'\n'
name|'status_code'
op|'='
number|'409'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'del'
name|'self'
op|'.'
name|'_fake_security_groups'
op|'['
name|'security_group'
op|']'
newline|'\n'
nl|'\n'
DECL|member|delete_security_group_rule
dedent|''
name|'def'
name|'delete_security_group_rule'
op|'('
name|'self'
op|','
name|'security_group_rule'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'show_security_group_rule'
op|'('
name|'security_group_rule'
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'_fake_security_group_rules'
op|'['
name|'security_group_rule'
op|']'
newline|'\n'
nl|'\n'
DECL|member|delete_network
dedent|''
name|'def'
name|'delete_network'
op|'('
name|'self'
op|','
name|'network'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'show_network'
op|'('
name|'network'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_ports_on_network'
op|'('
name|'network'
op|')'
newline|'\n'
name|'for'
name|'subnet'
name|'in'
name|'self'
op|'.'
name|'_fake_subnets'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'subnet'
op|'['
string|"'network_id'"
op|']'
op|'=='
name|'network'
op|':'
newline|'\n'
indent|'                '
name|'del'
name|'self'
op|'.'
name|'_fake_subnets'
op|'['
name|'subnet'
op|'['
string|"'id'"
op|']'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'del'
name|'self'
op|'.'
name|'_fake_networks'
op|'['
name|'network'
op|']'
newline|'\n'
nl|'\n'
DECL|member|delete_subnet
dedent|''
name|'def'
name|'delete_subnet'
op|'('
name|'self'
op|','
name|'subnet'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'subnet'
op|'='
name|'self'
op|'.'
name|'show_subnet'
op|'('
name|'subnet'
op|')'
op|'.'
name|'get'
op|'('
string|"'subnet'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_ports_on_network'
op|'('
name|'subnet'
op|'['
string|"'network_id'"
op|']'
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'_fake_subnet'
op|'['
name|'subnet'
op|']'
newline|'\n'
nl|'\n'
DECL|member|delete_port
dedent|''
name|'def'
name|'delete_port'
op|'('
name|'self'
op|','
name|'port'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'show_port'
op|'('
name|'port'
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'_fake_ports'
op|'['
name|'port'
op|']'
newline|'\n'
nl|'\n'
DECL|member|update_port
dedent|''
name|'def'
name|'update_port'
op|'('
name|'self'
op|','
name|'port'
op|','
name|'body'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'show_port'
op|'('
name|'port'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_fake_ports'
op|'['
name|'port'
op|']'
op|'.'
name|'update'
op|'('
name|'body'
op|'['
string|"'port'"
op|']'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'port'"
op|':'
name|'self'
op|'.'
name|'_fake_ports'
op|'['
name|'port'
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|list_extensions
dedent|''
name|'def'
name|'list_extensions'
op|'('
name|'self'
op|','
op|'**'
name|'_parms'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'extensions'"
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_check_ports_on_network
dedent|''
name|'def'
name|'_check_ports_on_network'
op|'('
name|'self'
op|','
name|'network'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ports'
op|'='
name|'self'
op|'.'
name|'list_ports'
op|'('
op|')'
newline|'\n'
name|'for'
name|'port'
name|'in'
name|'ports'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'port'
op|'['
string|"'network_id'"
op|']'
op|'=='
name|'network'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
op|'('
string|"'Unable to complete operation on network %s. There is '"
nl|'\n'
string|"'one or more ports still in use on the network'"
nl|'\n'
op|'%'
name|'network'
op|')'
newline|'\n'
dedent|''
name|'raise'
name|'n_exc'
op|'.'
name|'NeutronClientException'
op|'('
name|'message'
op|'='
name|'msg'
op|','
name|'status_code'
op|'='
number|'409'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
