begin_unit
comment|'# Copyright 2011 OpenStack LLC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'json'
newline|'\n'
nl|'\n'
name|'import'
name|'webob'
newline|'\n'
name|'from'
name|'lxml'
name|'import'
name|'etree'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
name|'import'
name|'auth'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'compute'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
name|'import'
name|'wsgi'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
op|'.'
name|'contrib'
name|'import'
name|'cloudpipe'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'auth'
name|'import'
name|'manager'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'cloudpipe'
name|'import'
name|'pipelib'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'crypto'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'fakes'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|EMPTY_INSTANCE_LIST
name|'EMPTY_INSTANCE_LIST'
op|'='
name|'True'
newline|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeProject
name|'class'
name|'FakeProject'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'id'
op|','
name|'name'
op|','
name|'manager'
op|','
name|'desc'
op|','
name|'members'
op|','
name|'ip'
op|','
name|'port'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'id'
op|'='
name|'id'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'project_manager_id'
op|'='
name|'manager'
newline|'\n'
name|'self'
op|'.'
name|'description'
op|'='
name|'desc'
newline|'\n'
name|'self'
op|'.'
name|'member_ids'
op|'='
name|'members'
newline|'\n'
name|'self'
op|'.'
name|'vpn_ip'
op|'='
name|'ip'
newline|'\n'
name|'self'
op|'.'
name|'vpn_port'
op|'='
name|'port'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_vpn_instance
dedent|''
dedent|''
name|'def'
name|'fake_vpn_instance'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'{'
string|"'id'"
op|':'
number|'7'
op|','
string|"'image_id'"
op|':'
name|'FLAGS'
op|'.'
name|'vpn_image_id'
op|','
string|"'vm_state'"
op|':'
string|"'active'"
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'utils'
op|'.'
name|'parse_strtime'
op|'('
string|"'1981-10-20T00:00:00.000000'"
op|')'
op|','
nl|'\n'
string|"'uuid'"
op|':'
number|'7777'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_vpn_instance_low_id
dedent|''
name|'def'
name|'fake_vpn_instance_low_id'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'{'
string|"'id'"
op|':'
number|'4'
op|','
string|"'image_id'"
op|':'
name|'FLAGS'
op|'.'
name|'vpn_image_id'
op|','
string|"'vm_state'"
op|':'
string|"'active'"
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'utils'
op|'.'
name|'parse_strtime'
op|'('
string|"'1981-10-20T00:00:00.000000'"
op|')'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_project
dedent|''
name|'def'
name|'fake_project'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'proj'
op|'='
name|'FakeProject'
op|'('
number|'1'
op|','
string|"'1'"
op|','
string|"'fakeuser'"
op|','
string|"''"
op|','
op|'['
number|'1'
op|']'
op|','
string|"'127.0.0.1'"
op|','
number|'22'
op|')'
newline|'\n'
name|'return'
name|'proj'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|db_instance_get_all_by_project
dedent|''
name|'def'
name|'db_instance_get_all_by_project'
op|'('
name|'self'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'EMPTY_INSTANCE_LIST'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
name|'fake_vpn_instance'
op|'('
op|')'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|db_security_group_exists
dedent|''
dedent|''
name|'def'
name|'db_security_group_exists'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'group_name'
op|')'
op|':'
newline|'\n'
comment|'# used in pipelib'
nl|'\n'
indent|'    '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|pipelib_launch_vpn_instance
dedent|''
name|'def'
name|'pipelib_launch_vpn_instance'
op|'('
name|'self'
op|','
name|'project_id'
op|','
name|'user_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'global'
name|'EMPTY_INSTANCE_LIST'
newline|'\n'
name|'EMPTY_INSTANCE_LIST'
op|'='
name|'False'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|auth_manager_get_project
dedent|''
name|'def'
name|'auth_manager_get_project'
op|'('
name|'self'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'fake_project'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|auth_manager_get_projects
dedent|''
name|'def'
name|'auth_manager_get_projects'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'['
name|'fake_project'
op|'('
op|')'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|utils_vpn_ping
dedent|''
name|'def'
name|'utils_vpn_ping'
op|'('
name|'addr'
op|','
name|'port'
op|','
name|'timoeout'
op|'='
number|'0.05'
op|','
name|'session_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|better_not_call_this
dedent|''
name|'def'
name|'better_not_call_this'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'raise'
name|'Exception'
op|'('
string|'"You should not have done that"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeAuthManager
dedent|''
name|'class'
name|'FakeAuthManager'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|get_projects
indent|'    '
name|'def'
name|'get_projects'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
name|'fake_project'
op|'('
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_project
dedent|''
name|'def'
name|'get_project'
op|'('
name|'self'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'fake_project'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CloudpipeTest
dedent|''
dedent|''
name|'class'
name|'CloudpipeTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CloudpipeTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'allow_admin_api'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'='
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
newline|'\n'
name|'inner_app'
op|'='
name|'compute'
op|'.'
name|'APIRouter'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|','
name|'is_admin'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'='
name|'auth'
op|'.'
name|'InjectContext'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'inner_app'
op|')'
newline|'\n'
name|'route'
op|'='
name|'inner_app'
op|'.'
name|'map'
op|'.'
name|'match'
op|'('
string|"'/1234/os-cloudpipe'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'route'
op|'['
string|"'controller'"
op|']'
op|'.'
name|'controller'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_out_networking'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_out_rate_limiting'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|'"instance_get_all_by_project"'
op|','
nl|'\n'
name|'db_instance_get_all_by_project'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|'"security_group_exists"'
op|','
nl|'\n'
name|'db_security_group_exists'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'SmartSet'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'cloudpipe'
op|','
string|'"launch_vpn_instance"'
op|','
nl|'\n'
name|'pipelib_launch_vpn_instance'
op|')'
newline|'\n'
comment|'#self.stubs.SmartSet(self.controller.auth_manager, "get_project",'
nl|'\n'
comment|'#                    auth_manager_get_project)'
nl|'\n'
comment|'#self.stubs.SmartSet(self.controller.auth_manager, "get_projects",'
nl|'\n'
comment|'#                    auth_manager_get_projects)'
nl|'\n'
comment|'# NOTE(todd): The above code (just setting the stub, not invoking it)'
nl|'\n'
comment|'# causes failures in AuthManagerLdapTestCase.  So use a fake object.'
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'auth_manager'
op|'='
name|'FakeAuthManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'vpn_ping'"
op|','
name|'utils_vpn_ping'
op|')'
newline|'\n'
name|'global'
name|'EMPTY_INSTANCE_LIST'
newline|'\n'
name|'EMPTY_INSTANCE_LIST'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|test_cloudpipe_list_none_running
dedent|''
name|'def'
name|'test_cloudpipe_list_none_running'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Should still get an entry per-project, just less descriptive."""'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/fake/os-cloudpipe'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'response'
op|'='
op|'{'
string|"'cloudpipes'"
op|':'
op|'['
op|'{'
string|"'project_id'"
op|':'
number|'1'
op|','
string|"'public_ip'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'public_port'"
op|':'
number|'22'
op|','
string|"'state'"
op|':'
string|"'pending'"
op|'}'
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cloudpipe_list
dedent|''
name|'def'
name|'test_cloudpipe_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'global'
name|'EMPTY_INSTANCE_LIST'
newline|'\n'
name|'EMPTY_INSTANCE_LIST'
op|'='
name|'False'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/fake/os-cloudpipe'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'response'
op|'='
op|'{'
string|"'cloudpipes'"
op|':'
op|'['
op|'{'
string|"'project_id'"
op|':'
number|'1'
op|','
string|"'public_ip'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'public_port'"
op|':'
number|'22'
op|','
string|"'state'"
op|':'
string|"'running'"
op|','
nl|'\n'
string|"'instance_id'"
op|':'
number|'7777'
op|','
nl|'\n'
string|"'created_at'"
op|':'
string|"'1981-10-20T00:00:00Z'"
op|'}'
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cloudpipe_create
dedent|''
name|'def'
name|'test_cloudpipe_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'cloudpipe'"
op|':'
op|'{'
string|"'project_id'"
op|':'
number|'1'
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/fake/os-cloudpipe'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|'='
string|"'application/json'"
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'response'
op|'='
op|'{'
string|"'instance_id'"
op|':'
number|'7777'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cloudpipe_create_already_running
dedent|''
name|'def'
name|'test_cloudpipe_create_already_running'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'global'
name|'EMPTY_INSTANCE_LIST'
newline|'\n'
name|'EMPTY_INSTANCE_LIST'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'SmartSet'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'cloudpipe'
op|','
string|"'launch_vpn_instance'"
op|','
nl|'\n'
name|'better_not_call_this'
op|')'
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'cloudpipe'"
op|':'
op|'{'
string|"'project_id'"
op|':'
number|'1'
op|'}'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/fake/os-cloudpipe'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|'='
string|"'application/json'"
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'response'
op|'='
op|'{'
string|"'instance_id'"
op|':'
number|'7777'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CloudpipesXMLSerializerTest
dedent|''
dedent|''
name|'class'
name|'CloudpipesXMLSerializerTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_default_serializer
indent|'    '
name|'def'
name|'test_default_serializer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'cloudpipe'
op|'.'
name|'CloudpipeTemplate'
op|'('
op|')'
newline|'\n'
name|'exemplar'
op|'='
name|'dict'
op|'('
name|'cloudpipe'
op|'='
name|'dict'
op|'('
name|'instance_id'
op|'='
string|"'1234-1234-1234-1234'"
op|')'
op|')'
newline|'\n'
name|'text'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'exemplar'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'text'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'cloudpipe'"
op|','
name|'tree'
op|'.'
name|'tag'
op|')'
newline|'\n'
name|'for'
name|'child'
name|'in'
name|'tree'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'child'
op|'.'
name|'tag'
name|'in'
name|'exemplar'
op|'['
string|"'cloudpipe'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'child'
op|'.'
name|'text'
op|','
name|'exemplar'
op|'['
string|"'cloudpipe'"
op|']'
op|'['
name|'child'
op|'.'
name|'tag'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_index_serializer
dedent|''
dedent|''
name|'def'
name|'test_index_serializer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'cloudpipe'
op|'.'
name|'CloudpipesTemplate'
op|'('
op|')'
newline|'\n'
name|'exemplar'
op|'='
name|'dict'
op|'('
name|'cloudpipes'
op|'='
op|'['
nl|'\n'
name|'dict'
op|'('
name|'cloudpipe'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'project_id'
op|'='
string|"'1234'"
op|','
nl|'\n'
name|'public_ip'
op|'='
string|"'1.2.3.4'"
op|','
nl|'\n'
name|'public_port'
op|'='
string|"'321'"
op|','
nl|'\n'
name|'instance_id'
op|'='
string|"'1234-1234-1234-1234'"
op|','
nl|'\n'
name|'created_at'
op|'='
name|'utils'
op|'.'
name|'isotime'
op|'('
name|'datetime'
op|'.'
name|'datetime'
op|'.'
name|'utcnow'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'state'
op|'='
string|"'running'"
op|')'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'cloudpipe'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'project_id'
op|'='
string|"'4321'"
op|','
nl|'\n'
name|'public_ip'
op|'='
string|"'4.3.2.1'"
op|','
nl|'\n'
name|'public_port'
op|'='
string|"'123'"
op|','
nl|'\n'
name|'state'
op|'='
string|"'pending'"
op|')'
op|')'
op|']'
op|')'
newline|'\n'
name|'text'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'exemplar'
op|')'
newline|'\n'
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'text'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'cloudpipes'"
op|','
name|'tree'
op|'.'
name|'tag'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'exemplar'
op|'['
string|"'cloudpipes'"
op|']'
op|')'
op|','
name|'len'
op|'('
name|'tree'
op|')'
op|')'
newline|'\n'
name|'for'
name|'idx'
op|','
name|'cl_pipe'
name|'in'
name|'enumerate'
op|'('
name|'tree'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'cloudpipe'"
op|','
name|'cl_pipe'
op|'.'
name|'tag'
op|')'
newline|'\n'
name|'kp_data'
op|'='
name|'exemplar'
op|'['
string|"'cloudpipes'"
op|']'
op|'['
name|'idx'
op|']'
op|'['
string|"'cloudpipe'"
op|']'
newline|'\n'
name|'for'
name|'child'
name|'in'
name|'cl_pipe'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'child'
op|'.'
name|'tag'
name|'in'
name|'kp_data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'child'
op|'.'
name|'text'
op|','
name|'kp_data'
op|'['
name|'child'
op|'.'
name|'tag'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_deserializer
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_deserializer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'deserializer'
op|'='
name|'wsgi'
op|'.'
name|'XMLDeserializer'
op|'('
op|')'
newline|'\n'
name|'exemplar'
op|'='
name|'dict'
op|'('
name|'cloudpipe'
op|'='
name|'dict'
op|'('
name|'project_id'
op|'='
string|"'4321'"
op|')'
op|')'
newline|'\n'
name|'intext'
op|'='
op|'('
string|'"<?xml version=\'1.0\' encoding=\'UTF-8\'?>\\n"'
nl|'\n'
string|"'<cloudpipe><project_id>4321</project_id></cloudpipe>'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'intext'
op|')'
op|'['
string|"'body'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|','
name|'exemplar'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
