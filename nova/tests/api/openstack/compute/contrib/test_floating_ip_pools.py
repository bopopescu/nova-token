begin_unit
comment|'# Copyright (c) 2011 X.commerce, a business unit of eBay Inc.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'lxml'
name|'import'
name|'etree'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
op|'.'
name|'contrib'
name|'import'
name|'floating_ip_pools'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'network'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'fakes'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_get_floating_ip_pools
name|'def'
name|'fake_get_floating_ip_pools'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'['
string|"'nova'"
op|','
string|"'other'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FloatingIpPoolTest
dedent|''
name|'class'
name|'FloatingIpPoolTest'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'FloatingIpPoolTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'network'
op|'.'
name|'api'
op|'.'
name|'API'
op|','
string|'"get_floating_ip_pools"'
op|','
nl|'\n'
name|'fake_get_floating_ip_pools'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'floating_ip_pools'
op|'.'
name|'FloatingIPPoolsController'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_translate_floating_ip_pools_view
dedent|''
name|'def'
name|'test_translate_floating_ip_pools_view'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pools'
op|'='
name|'fake_get_floating_ip_pools'
op|'('
name|'None'
op|','
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'view'
op|'='
name|'floating_ip_pools'
op|'.'
name|'_translate_floating_ip_pools_view'
op|'('
name|'pools'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'floating_ip_pools'"
op|','
name|'view'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'view'
op|'['
string|"'floating_ip_pools'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'pools'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'view'
op|'['
string|"'floating_ip_pools'"
op|']'
op|'['
number|'1'
op|']'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'pools'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_floating_ips_pools_list
dedent|''
name|'def'
name|'test_floating_ips_pools_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-floating-ip-pools'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'pools'
op|'='
name|'fake_get_floating_ip_pools'
op|'('
name|'None'
op|','
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'response'
op|'='
op|'{'
string|"'floating_ip_pools'"
op|':'
op|'['
op|'{'
string|"'name'"
op|':'
name|'name'
op|'}'
name|'for'
name|'name'
name|'in'
name|'pools'
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FloatingIpPoolSerializerTest
dedent|''
dedent|''
name|'class'
name|'FloatingIpPoolSerializerTest'
op|'('
name|'test'
op|'.'
name|'NoDBTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_index_serializer
indent|'    '
name|'def'
name|'test_index_serializer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'floating_ip_pools'
op|'.'
name|'FloatingIPPoolsTemplate'
op|'('
op|')'
newline|'\n'
name|'text'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'dict'
op|'('
nl|'\n'
name|'floating_ip_pools'
op|'='
op|'['
nl|'\n'
name|'dict'
op|'('
name|'name'
op|'='
string|"'nova'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'name'
op|'='
string|"'other'"
op|')'
nl|'\n'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'text'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'floating_ip_pools'"
op|','
name|'tree'
op|'.'
name|'tag'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'tree'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'floating_ip_pool'"
op|','
name|'tree'
op|'['
number|'0'
op|']'
op|'.'
name|'tag'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'floating_ip_pool'"
op|','
name|'tree'
op|'['
number|'1'
op|']'
op|'.'
name|'tag'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'nova'"
op|','
name|'tree'
op|'['
number|'0'
op|']'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'other'"
op|','
name|'tree'
op|'['
number|'1'
op|']'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
