begin_unit
comment|'# Copyright (c) 2013 NTT DOCOMO, INC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'webob'
name|'import'
name|'exc'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
op|'.'
name|'contrib'
name|'import'
name|'baremetal_nodes'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'baremetal'
name|'import'
name|'db'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeRequest
name|'class'
name|'FakeRequest'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'environ'
op|'='
op|'{'
string|'"nova.context"'
op|':'
name|'context'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BareMetalNodesTest
dedent|''
dedent|''
name|'class'
name|'BareMetalNodesTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'BareMetalNodesTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'baremetal_nodes'
op|'.'
name|'BareMetalNodeController'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'request'
op|'='
name|'FakeRequest'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create
dedent|''
name|'def'
name|'test_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'node'
op|'='
op|'{'
nl|'\n'
string|"'service_host'"
op|':'
string|'"host"'
op|','
nl|'\n'
string|"'cpus'"
op|':'
number|'8'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
number|'8192'
op|','
nl|'\n'
string|"'local_gb'"
op|':'
number|'128'
op|','
nl|'\n'
string|"'pm_address'"
op|':'
string|'"10.1.2.3"'
op|','
nl|'\n'
string|"'pm_user'"
op|':'
string|'"pm_user"'
op|','
nl|'\n'
string|"'pm_password'"
op|':'
string|'"pm_pass"'
op|','
nl|'\n'
string|"'terminal_port'"
op|':'
number|'8000'
op|','
nl|'\n'
string|"'interfaces'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'response'
op|'='
name|'node'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'response'
op|'['
string|"'id'"
op|']'
op|'='
number|'100'
newline|'\n'
name|'del'
name|'response'
op|'['
string|"'pm_password'"
op|']'
newline|'\n'
name|'response'
op|'['
string|"'instance_uuid'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bm_node_create'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bm_node_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'node'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'self'
op|'.'
name|'request'
op|','
op|'{'
string|"'node'"
op|':'
name|'node'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
string|"'node'"
op|':'
name|'response'
op|'}'
op|','
name|'res_dict'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete
dedent|''
name|'def'
name|'test_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bm_node_destroy'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bm_node_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'delete'
op|'('
name|'self'
op|'.'
name|'request'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_node_not_found
dedent|''
name|'def'
name|'test_delete_node_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bm_node_destroy'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bm_node_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
number|'1'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exception'
op|'.'
name|'NodeNotFound'
op|'('
name|'node_id'
op|'='
number|'1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'delete'
op|','
nl|'\n'
name|'self'
op|'.'
name|'request'
op|','
nl|'\n'
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_index
dedent|''
name|'def'
name|'test_index'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'nodes'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'interfaces'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'address'"
op|':'
string|"'11:11:11:11:11:11'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
string|"'address'"
op|':'
string|"'22:22:22:22:22:22'"
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bm_node_get_all'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bm_interface_get_all_by_bm_node_id'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bm_node_get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'nodes'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bm_interface_get_all_by_bm_node_id'
op|'('
name|'self'
op|'.'
name|'context'
op|','
number|'1'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exception'
op|'.'
name|'NodeNotFound'
op|'('
name|'node_id'
op|'='
number|'1'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bm_interface_get_all_by_bm_node_id'
op|'('
name|'self'
op|'.'
name|'context'
op|','
number|'2'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'interfaces'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'self'
op|'.'
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'res_dict'
op|'['
string|"'nodes'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'res_dict'
op|'['
string|"'nodes'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'interfaces'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'res_dict'
op|'['
string|"'nodes'"
op|']'
op|'['
number|'1'
op|']'
op|'['
string|"'interfaces'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_show
dedent|''
name|'def'
name|'test_show'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'node_id'
op|'='
number|'1'
newline|'\n'
name|'node'
op|'='
op|'{'
string|"'id'"
op|':'
name|'node_id'
op|'}'
newline|'\n'
name|'interfaces'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'address'"
op|':'
string|"'11:11:11:11:11:11'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
string|"'address'"
op|':'
string|"'22:22:22:22:22:22'"
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bm_node_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bm_interface_get_all_by_bm_node_id'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bm_node_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'node_id'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'node'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bm_interface_get_all_by_bm_node_id'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'node_id'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'interfaces'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'node_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'node_id'
op|','
name|'res_dict'
op|'['
string|"'node'"
op|']'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'res_dict'
op|'['
string|"'node'"
op|']'
op|'['
string|"'interfaces'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_show_no_interfaces
dedent|''
name|'def'
name|'test_show_no_interfaces'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'node_id'
op|'='
number|'1'
newline|'\n'
name|'node'
op|'='
op|'{'
string|"'id'"
op|':'
name|'node_id'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bm_node_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bm_interface_get_all_by_bm_node_id'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bm_node_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'node_id'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'node'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bm_interface_get_all_by_bm_node_id'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'node_id'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exception'
op|'.'
name|'NodeNotFound'
op|'('
name|'node_id'
op|'='
name|'node_id'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'node_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'node_id'
op|','
name|'res_dict'
op|'['
string|"'node'"
op|']'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'res_dict'
op|'['
string|"'node'"
op|']'
op|'['
string|"'interfaces'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_interface
dedent|''
name|'def'
name|'test_add_interface'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'node_id'
op|'='
number|'1'
newline|'\n'
name|'address'
op|'='
string|"'11:22:33:44:55:66'"
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'add_interface'"
op|':'
op|'{'
string|"'address'"
op|':'
name|'address'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bm_node_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bm_interface_create'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bm_interface_get'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bm_node_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'node_id'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bm_interface_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'bm_node_id'
op|'='
name|'node_id'
op|','
nl|'\n'
name|'address'
op|'='
name|'address'
op|','
nl|'\n'
name|'datapath_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'port_no'
op|'='
name|'None'
op|')'
op|'.'
name|'AndReturn'
op|'('
number|'12345'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bm_interface_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
number|'12345'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'{'
string|"'id'"
op|':'
number|'12345'
op|','
string|"'address'"
op|':'
name|'address'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_add_interface'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'node_id'
op|','
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'12345'
op|','
name|'res_dict'
op|'['
string|"'interface'"
op|']'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'address'
op|','
name|'res_dict'
op|'['
string|"'interface'"
op|']'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_remove_interface
dedent|''
name|'def'
name|'test_remove_interface'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'node_id'
op|'='
number|'1'
newline|'\n'
name|'interfaces'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'3'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'remove_interface'"
op|':'
op|'{'
string|"'id'"
op|':'
number|'2'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bm_node_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bm_interface_get_all_by_bm_node_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bm_interface_destroy'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bm_node_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'node_id'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bm_interface_get_all_by_bm_node_id'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'node_id'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'interfaces'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bm_interface_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_remove_interface'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'node_id'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_remove_interface_by_address
dedent|''
name|'def'
name|'test_remove_interface_by_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'node_id'
op|'='
number|'1'
newline|'\n'
name|'interfaces'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'address'"
op|':'
string|"'11:11:11:11:11:11'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
string|"'address'"
op|':'
string|"'22:22:22:22:22:22'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'3'
op|','
string|"'address'"
op|':'
string|"'33:33:33:33:33:33'"
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bm_node_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bm_interface_get_all_by_bm_node_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bm_interface_destroy'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bm_node_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'node_id'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bm_interface_get_all_by_bm_node_id'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'node_id'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'interfaces'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bm_interface_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'remove_interface'"
op|':'
op|'{'
string|"'address'"
op|':'
string|"'22:22:22:22:22:22'"
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_remove_interface'
op|'('
name|'self'
op|'.'
name|'request'
op|','
name|'node_id'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_remove_interface_no_id_no_address
dedent|''
name|'def'
name|'test_remove_interface_no_id_no_address'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'node_id'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bm_node_get'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bm_node_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'node_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'remove_interface'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_remove_interface'
op|','
nl|'\n'
name|'self'
op|'.'
name|'request'
op|','
nl|'\n'
name|'node_id'
op|','
nl|'\n'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_interface_node_not_found
dedent|''
name|'def'
name|'test_add_interface_node_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'node_id'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bm_node_get'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bm_node_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'node_id'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exception'
op|'.'
name|'NodeNotFound'
op|'('
name|'node_id'
op|'='
name|'node_id'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'add_interface'"
op|':'
op|'{'
string|"'address'"
op|':'
string|"'11:11:11:11:11:11'"
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_add_interface'
op|','
nl|'\n'
name|'self'
op|'.'
name|'request'
op|','
nl|'\n'
name|'node_id'
op|','
nl|'\n'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_remove_interface_node_not_found
dedent|''
name|'def'
name|'test_remove_interface_node_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'node_id'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'db'
op|','
string|"'bm_node_get'"
op|')'
newline|'\n'
name|'db'
op|'.'
name|'bm_node_get'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'node_id'
op|')'
op|'.'
name|'AndRaise'
op|'('
name|'exception'
op|'.'
name|'NodeNotFound'
op|'('
name|'node_id'
op|'='
name|'node_id'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'body'
op|'='
op|'{'
string|"'remove_interface'"
op|':'
op|'{'
string|"'address'"
op|':'
string|"'11:11:11:11:11:11'"
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_remove_interface'
op|','
nl|'\n'
name|'self'
op|'.'
name|'request'
op|','
nl|'\n'
name|'node_id'
op|','
nl|'\n'
name|'body'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
