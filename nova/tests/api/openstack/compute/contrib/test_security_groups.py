begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2011 OpenStack LLC'
nl|'\n'
comment|'# Copyright 2012 Justin Santa Barbara'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'unittest'
newline|'\n'
nl|'\n'
name|'from'
name|'lxml'
name|'import'
name|'etree'
newline|'\n'
name|'import'
name|'mox'
newline|'\n'
name|'import'
name|'webob'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'compute'
op|'.'
name|'contrib'
name|'import'
name|'security_groups'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'wsgi'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'xmlutil'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'compute'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'quota'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'fakes'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
DECL|variable|FAKE_UUID
name|'FAKE_UUID'
op|'='
string|"'a47ae74e-ab08-447f-8eee-ffd43fc46c16'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AttrDict
name|'class'
name|'AttrDict'
op|'('
name|'dict'
op|')'
op|':'
newline|'\n'
DECL|member|__getattr__
indent|'    '
name|'def'
name|'__getattr__'
op|'('
name|'self'
op|','
name|'k'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'['
name|'k'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_template
dedent|''
dedent|''
name|'def'
name|'security_group_template'
op|'('
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'sg'
op|'='
name|'kwargs'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'sg'
op|'.'
name|'setdefault'
op|'('
string|"'tenant_id'"
op|','
string|"'123'"
op|')'
newline|'\n'
name|'sg'
op|'.'
name|'setdefault'
op|'('
string|"'name'"
op|','
string|"'test'"
op|')'
newline|'\n'
name|'sg'
op|'.'
name|'setdefault'
op|'('
string|"'description'"
op|','
string|"'test-description'"
op|')'
newline|'\n'
name|'return'
name|'sg'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_db
dedent|''
name|'def'
name|'security_group_db'
op|'('
name|'security_group'
op|','
name|'id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'attrs'
op|'='
name|'security_group'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'if'
string|"'tenant_id'"
name|'in'
name|'attrs'
op|':'
newline|'\n'
indent|'        '
name|'attrs'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'attrs'
op|'.'
name|'pop'
op|'('
string|"'tenant_id'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'id'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'attrs'
op|'['
string|"'id'"
op|']'
op|'='
name|'id'
newline|'\n'
dedent|''
name|'attrs'
op|'.'
name|'setdefault'
op|'('
string|"'rules'"
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'attrs'
op|'.'
name|'setdefault'
op|'('
string|"'instances'"
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'return'
name|'AttrDict'
op|'('
name|'attrs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_rule_template
dedent|''
name|'def'
name|'security_group_rule_template'
op|'('
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'rule'
op|'='
name|'kwargs'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'rule'
op|'.'
name|'setdefault'
op|'('
string|"'ip_protocol'"
op|','
string|"'tcp'"
op|')'
newline|'\n'
name|'rule'
op|'.'
name|'setdefault'
op|'('
string|"'from_port'"
op|','
number|'22'
op|')'
newline|'\n'
name|'rule'
op|'.'
name|'setdefault'
op|'('
string|"'to_port'"
op|','
number|'22'
op|')'
newline|'\n'
name|'rule'
op|'.'
name|'setdefault'
op|'('
string|"'parent_group_id'"
op|','
number|'2'
op|')'
newline|'\n'
name|'return'
name|'rule'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|security_group_rule_db
dedent|''
name|'def'
name|'security_group_rule_db'
op|'('
name|'rule'
op|','
name|'id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'attrs'
op|'='
name|'rule'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'if'
string|"'ip_protocol'"
name|'in'
name|'attrs'
op|':'
newline|'\n'
indent|'        '
name|'attrs'
op|'['
string|"'protocol'"
op|']'
op|'='
name|'attrs'
op|'.'
name|'pop'
op|'('
string|"'ip_protocol'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'AttrDict'
op|'('
name|'attrs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|return_server
dedent|''
name|'def'
name|'return_server'
op|'('
name|'context'
op|','
name|'server_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'{'
string|"'id'"
op|':'
name|'int'
op|'('
name|'server_id'
op|')'
op|','
nl|'\n'
string|"'power_state'"
op|':'
number|'0x01'
op|','
nl|'\n'
string|"'host'"
op|':'
string|'"localhost"'
op|','
nl|'\n'
string|"'uuid'"
op|':'
name|'FAKE_UUID'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'asdf'"
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|return_server_by_uuid
dedent|''
name|'def'
name|'return_server_by_uuid'
op|'('
name|'context'
op|','
name|'server_uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'power_state'"
op|':'
number|'0x01'
op|','
nl|'\n'
string|"'host'"
op|':'
string|'"localhost"'
op|','
nl|'\n'
string|"'uuid'"
op|':'
name|'server_uuid'
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'asdf'"
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|return_non_running_server
dedent|''
name|'def'
name|'return_non_running_server'
op|'('
name|'context'
op|','
name|'server_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'{'
string|"'id'"
op|':'
name|'server_id'
op|','
string|"'power_state'"
op|':'
number|'0x02'
op|','
string|"'uuid'"
op|':'
name|'FAKE_UUID'
op|','
nl|'\n'
string|"'host'"
op|':'
string|'"localhost"'
op|','
string|"'name'"
op|':'
string|"'asdf'"
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|return_security_group_by_name
dedent|''
name|'def'
name|'return_security_group_by_name'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'group_name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'name'"
op|':'
name|'group_name'
op|','
nl|'\n'
string|'"instances"'
op|':'
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'uuid'"
op|':'
name|'FAKE_UUID'
op|'}'
op|']'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|return_security_group_without_instances
dedent|''
name|'def'
name|'return_security_group_without_instances'
op|'('
name|'context'
op|','
name|'project_id'
op|','
name|'group_name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'name'"
op|':'
name|'group_name'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|return_server_nonexistent
dedent|''
name|'def'
name|'return_server_nonexistent'
op|'('
name|'context'
op|','
name|'server_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'server_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestSecurityGroups
dedent|''
name|'class'
name|'TestSecurityGroups'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestSecurityGroups'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'security_groups'
op|'.'
name|'SecurityGroupController'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'server_controller'
op|'='
op|'('
nl|'\n'
name|'security_groups'
op|'.'
name|'ServerSecurityGroupController'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'='
name|'security_groups'
op|'.'
name|'SecurityGroupActionController'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assert_no_security_groups_reserved
dedent|''
name|'def'
name|'_assert_no_security_groups_reserved'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Check that no reservations are leaked during tests."""'
newline|'\n'
name|'result'
op|'='
name|'quota'
op|'.'
name|'QUOTAS'
op|'.'
name|'get_project_quotas'
op|'('
name|'context'
op|','
name|'context'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'result'
op|'['
string|"'security_groups'"
op|']'
op|'['
string|"'reserved'"
op|']'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_security_group
dedent|''
name|'def'
name|'test_create_security_group'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'security_group_template'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'req'
op|','
op|'{'
string|"'security_group'"
op|':'
name|'sg'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'security_group'"
op|']'
op|'['
string|"'name'"
op|']'
op|','
string|"'test'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'security_group'"
op|']'
op|'['
string|"'description'"
op|']'
op|','
nl|'\n'
string|"'test-description'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_security_group_with_no_name
dedent|''
name|'def'
name|'test_create_security_group_with_no_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'security_group_template'
op|'('
op|')'
newline|'\n'
name|'del'
name|'sg'
op|'['
string|"'name'"
op|']'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPUnprocessableEntity'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'req'
op|','
name|'sg'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert_no_security_groups_reserved'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_security_group_with_no_description
dedent|''
name|'def'
name|'test_create_security_group_with_no_description'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'security_group_template'
op|'('
op|')'
newline|'\n'
name|'del'
name|'sg'
op|'['
string|"'description'"
op|']'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group'"
op|':'
name|'sg'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert_no_security_groups_reserved'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_security_group_with_blank_name
dedent|''
name|'def'
name|'test_create_security_group_with_blank_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'security_group_template'
op|'('
name|'name'
op|'='
string|"''"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group'"
op|':'
name|'sg'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert_no_security_groups_reserved'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_security_group_with_whitespace_name
dedent|''
name|'def'
name|'test_create_security_group_with_whitespace_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'security_group_template'
op|'('
name|'name'
op|'='
string|"' '"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group'"
op|':'
name|'sg'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert_no_security_groups_reserved'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_security_group_with_blank_description
dedent|''
name|'def'
name|'test_create_security_group_with_blank_description'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'security_group_template'
op|'('
name|'description'
op|'='
string|"''"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group'"
op|':'
name|'sg'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert_no_security_groups_reserved'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_security_group_with_whitespace_description
dedent|''
name|'def'
name|'test_create_security_group_with_whitespace_description'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'security_group_template'
op|'('
name|'description'
op|'='
string|"' '"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group'"
op|':'
name|'sg'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert_no_security_groups_reserved'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_security_group_with_duplicate_name
dedent|''
name|'def'
name|'test_create_security_group_with_duplicate_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'security_group_template'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# FIXME: Stub out _get instead of creating twice'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'req'
op|','
op|'{'
string|"'security_group'"
op|':'
name|'sg'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group'"
op|':'
name|'sg'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert_no_security_groups_reserved'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_security_group_with_no_body
dedent|''
name|'def'
name|'test_create_security_group_with_no_body'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPUnprocessableEntity'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'req'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert_no_security_groups_reserved'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_security_group_with_no_security_group
dedent|''
name|'def'
name|'test_create_security_group_with_no_security_group'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
op|'{'
string|"'no-securityGroup'"
op|':'
name|'None'
op|'}'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPUnprocessableEntity'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'req'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert_no_security_groups_reserved'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_security_group_above_255_characters_name
dedent|''
name|'def'
name|'test_create_security_group_above_255_characters_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'security_group_template'
op|'('
name|'name'
op|'='
string|"'1234567890'"
op|'*'
number|'26'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group'"
op|':'
name|'sg'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert_no_security_groups_reserved'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_security_group_above_255_characters_description
dedent|''
name|'def'
name|'test_create_security_group_above_255_characters_description'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'security_group_template'
op|'('
name|'description'
op|'='
string|"'1234567890'"
op|'*'
number|'26'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group'"
op|':'
name|'sg'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert_no_security_groups_reserved'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_security_group_non_string_name
dedent|''
name|'def'
name|'test_create_security_group_non_string_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'security_group_template'
op|'('
name|'name'
op|'='
number|'12'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group'"
op|':'
name|'sg'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert_no_security_groups_reserved'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_security_group_non_string_description
dedent|''
name|'def'
name|'test_create_security_group_non_string_description'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'security_group_template'
op|'('
name|'description'
op|'='
number|'12'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group'"
op|':'
name|'sg'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert_no_security_groups_reserved'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'nova.context'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_security_group_quota_limit
dedent|''
name|'def'
name|'test_create_security_group_quota_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups'"
op|')'
newline|'\n'
name|'for'
name|'num'
name|'in'
name|'range'
op|'('
number|'1'
op|','
name|'CONF'
op|'.'
name|'quota_security_groups'
op|'+'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'name'
op|'='
string|"'test%s'"
op|'%'
name|'num'
newline|'\n'
name|'sg'
op|'='
name|'security_group_template'
op|'('
name|'name'
op|'='
name|'name'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'req'
op|','
op|'{'
string|"'security_group'"
op|':'
name|'sg'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'security_group'"
op|']'
op|'['
string|"'name'"
op|']'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'sg'
op|'='
name|'security_group_template'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'SecurityGroupLimitExceeded'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group'"
op|':'
name|'sg'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_security_group_list
dedent|''
name|'def'
name|'test_get_security_group_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'groups'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
op|','
name|'name'
name|'in'
name|'enumerate'
op|'('
op|'['
string|"'default'"
op|','
string|"'test'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sg'
op|'='
name|'security_group_template'
op|'('
name|'id'
op|'='
name|'i'
op|'+'
number|'1'
op|','
nl|'\n'
name|'name'
op|'='
name|'name'
op|','
nl|'\n'
name|'description'
op|'='
name|'name'
op|'+'
string|"'-desc'"
op|','
nl|'\n'
name|'rules'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
name|'groups'
op|'.'
name|'append'
op|'('
name|'sg'
op|')'
newline|'\n'
dedent|''
name|'expected'
op|'='
op|'{'
string|"'security_groups'"
op|':'
name|'groups'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|return_security_groups
name|'def'
name|'return_security_groups'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
name|'security_group_db'
op|'('
name|'sg'
op|')'
name|'for'
name|'sg'
name|'in'
name|'groups'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'security_group_get_by_project'"
op|','
nl|'\n'
name|'return_security_groups'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'res_dict'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_security_group_list_all_tenants
dedent|''
name|'def'
name|'test_get_security_group_list_all_tenants'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'all_groups'
op|'='
op|'['
op|']'
newline|'\n'
name|'tenant_groups'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
op|','
name|'name'
name|'in'
name|'enumerate'
op|'('
op|'['
string|"'default'"
op|','
string|"'test'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sg'
op|'='
name|'security_group_template'
op|'('
name|'id'
op|'='
name|'i'
op|'+'
number|'1'
op|','
nl|'\n'
name|'name'
op|'='
name|'name'
op|','
nl|'\n'
name|'description'
op|'='
name|'name'
op|'+'
string|"'-desc'"
op|','
nl|'\n'
name|'rules'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
name|'all_groups'
op|'.'
name|'append'
op|'('
name|'sg'
op|')'
newline|'\n'
name|'if'
name|'name'
op|'=='
string|"'default'"
op|':'
newline|'\n'
indent|'                '
name|'tenant_groups'
op|'.'
name|'append'
op|'('
name|'sg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'all'
op|'='
op|'{'
string|"'security_groups'"
op|':'
name|'all_groups'
op|'}'
newline|'\n'
name|'tenant_specific'
op|'='
op|'{'
string|"'security_groups'"
op|':'
name|'tenant_groups'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|return_all_security_groups
name|'def'
name|'return_all_security_groups'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
name|'security_group_db'
op|'('
name|'sg'
op|')'
name|'for'
name|'sg'
name|'in'
name|'all_groups'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'security_group_get_all'"
op|','
nl|'\n'
name|'return_all_security_groups'
op|')'
newline|'\n'
nl|'\n'
DECL|function|return_tenant_security_groups
name|'def'
name|'return_tenant_security_groups'
op|'('
name|'context'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
name|'security_group_db'
op|'('
name|'sg'
op|')'
name|'for'
name|'sg'
name|'in'
name|'tenant_groups'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'security_group_get_by_project'"
op|','
nl|'\n'
name|'return_tenant_security_groups'
op|')'
newline|'\n'
nl|'\n'
name|'path'
op|'='
string|"'/v2/fake/os-security-groups'"
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
name|'path'
op|','
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'res_dict'
op|','
name|'tenant_specific'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'%s?all_tenants=1'"
op|'%'
name|'path'
op|','
nl|'\n'
name|'use_admin_context'
op|'='
name|'True'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'index'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'res_dict'
op|','
name|'all'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_security_group_by_instance
dedent|''
name|'def'
name|'test_get_security_group_by_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'groups'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
op|','
name|'name'
name|'in'
name|'enumerate'
op|'('
op|'['
string|"'default'"
op|','
string|"'test'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sg'
op|'='
name|'security_group_template'
op|'('
name|'id'
op|'='
name|'i'
op|'+'
number|'1'
op|','
nl|'\n'
name|'name'
op|'='
name|'name'
op|','
nl|'\n'
name|'description'
op|'='
name|'name'
op|'+'
string|"'-desc'"
op|','
nl|'\n'
name|'rules'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
name|'groups'
op|'.'
name|'append'
op|'('
name|'sg'
op|')'
newline|'\n'
dedent|''
name|'expected'
op|'='
op|'{'
string|"'security_groups'"
op|':'
name|'groups'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|return_instance
name|'def'
name|'return_instance'
op|'('
name|'context'
op|','
name|'server_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server_id'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'return'
name|'return_server_by_uuid'
op|'('
name|'context'
op|','
name|'server_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
nl|'\n'
name|'return_instance'
op|')'
newline|'\n'
nl|'\n'
DECL|function|return_security_groups
name|'def'
name|'return_security_groups'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'instance_id'
op|','
number|'1'
op|')'
newline|'\n'
name|'return'
op|'['
name|'security_group_db'
op|'('
name|'sg'
op|')'
name|'for'
name|'sg'
name|'in'
name|'groups'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'security_group_get_by_instance'"
op|','
nl|'\n'
name|'return_security_groups'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/%s/servers/%s/os-security-groups'"
op|'%'
nl|'\n'
op|'('
string|"'fake'"
op|','
name|'FAKE_UUID'
op|')'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'server_controller'
op|'.'
name|'index'
op|'('
name|'req'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'res_dict'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_security_group_by_instance_non_existing
dedent|''
name|'def'
name|'test_get_security_group_by_instance_non_existing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get'"
op|','
name|'return_server_nonexistent'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
nl|'\n'
name|'return_server_nonexistent'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/1/os-security-groups'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'server_controller'
op|'.'
name|'index'
op|','
name|'req'
op|','
string|"'1'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_security_group_by_instance_invalid_id
dedent|''
name|'def'
name|'test_get_security_group_by_instance_invalid_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v2/fake/servers/invalid/os-security-groups'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'server_controller'
op|'.'
name|'index'
op|','
name|'req'
op|','
string|"'invalid'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_security_group_by_id
dedent|''
name|'def'
name|'test_get_security_group_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'security_group_template'
op|'('
name|'id'
op|'='
number|'2'
op|','
name|'rules'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|return_security_group
name|'def'
name|'return_security_group'
op|'('
name|'context'
op|','
name|'group_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'sg'
op|'['
string|"'id'"
op|']'
op|','
name|'group_id'
op|')'
newline|'\n'
name|'return'
name|'security_group_db'
op|'('
name|'sg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'security_group_get'"
op|','
nl|'\n'
name|'return_security_group'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups/2'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'show'
op|'('
name|'req'
op|','
string|"'2'"
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'{'
string|"'security_group'"
op|':'
name|'sg'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'res_dict'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_security_group_by_invalid_id
dedent|''
name|'def'
name|'test_get_security_group_by_invalid_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups/invalid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'delete'
op|','
nl|'\n'
name|'req'
op|','
string|"'invalid'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_security_group_by_non_existing_id
dedent|''
name|'def'
name|'test_get_security_group_by_non_existing_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups/111111111'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'delete'
op|','
nl|'\n'
name|'req'
op|','
string|"'111111111'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_security_group_by_id
dedent|''
name|'def'
name|'test_delete_security_group_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'security_group_template'
op|'('
name|'id'
op|'='
number|'1'
op|','
name|'rules'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|security_group_destroy
name|'def'
name|'security_group_destroy'
op|'('
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|function|return_security_group
dedent|''
name|'def'
name|'return_security_group'
op|'('
name|'context'
op|','
name|'group_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'sg'
op|'['
string|"'id'"
op|']'
op|','
name|'group_id'
op|')'
newline|'\n'
name|'return'
name|'security_group_db'
op|'('
name|'sg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'security_group_destroy'"
op|','
nl|'\n'
name|'security_group_destroy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'security_group_get'"
op|','
nl|'\n'
name|'return_security_group'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups/1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'delete'
op|'('
name|'req'
op|','
string|"'1'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_security_group_by_invalid_id
dedent|''
name|'def'
name|'test_delete_security_group_by_invalid_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups/invalid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'delete'
op|','
nl|'\n'
name|'req'
op|','
string|"'invalid'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_security_group_by_non_existing_id
dedent|''
name|'def'
name|'test_delete_security_group_by_non_existing_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups/11111111'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'delete'
op|','
nl|'\n'
name|'req'
op|','
string|"'11111111'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_security_group_in_use
dedent|''
name|'def'
name|'test_delete_security_group_in_use'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sg'
op|'='
name|'security_group_template'
op|'('
name|'id'
op|'='
number|'1'
op|','
name|'rules'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|security_group_in_use
name|'def'
name|'security_group_in_use'
op|'('
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|function|return_security_group
dedent|''
name|'def'
name|'return_security_group'
op|'('
name|'context'
op|','
name|'group_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'sg'
op|'['
string|"'id'"
op|']'
op|','
name|'group_id'
op|')'
newline|'\n'
name|'return'
name|'security_group_db'
op|'('
name|'sg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'security_group_in_use'"
op|','
nl|'\n'
name|'security_group_in_use'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'security_group_get'"
op|','
nl|'\n'
name|'return_security_group'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-groups/1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'delete'
op|','
nl|'\n'
name|'req'
op|','
string|"'1'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_associate_by_non_existing_security_group_name
dedent|''
name|'def'
name|'test_associate_by_non_existing_security_group_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
name|'dict'
op|'('
name|'addSecurityGroup'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"'non-existing'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/1/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'_addSecurityGroup'
op|','
name|'req'
op|','
string|"'1'"
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_associate_by_invalid_server_id
dedent|''
name|'def'
name|'test_associate_by_invalid_server_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
name|'dict'
op|'('
name|'addSecurityGroup'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"'test'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/invalid/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'_addSecurityGroup'
op|','
name|'req'
op|','
string|"'invalid'"
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_associate_without_body
dedent|''
name|'def'
name|'test_associate_without_body'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get'"
op|','
name|'return_server'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'addSecurityGroup'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/1/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'_addSecurityGroup'
op|','
name|'req'
op|','
string|"'1'"
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_associate_no_security_group_name
dedent|''
name|'def'
name|'test_associate_no_security_group_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get'"
op|','
name|'return_server'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'addSecurityGroup'
op|'='
name|'dict'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/1/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'_addSecurityGroup'
op|','
name|'req'
op|','
string|"'1'"
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_associate_security_group_name_with_whitespaces
dedent|''
name|'def'
name|'test_associate_security_group_name_with_whitespaces'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get'"
op|','
name|'return_server'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'addSecurityGroup'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|'"   "'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/1/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'_addSecurityGroup'
op|','
name|'req'
op|','
string|"'1'"
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_associate_non_existing_instance
dedent|''
name|'def'
name|'test_associate_non_existing_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get'"
op|','
name|'return_server_nonexistent'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
nl|'\n'
name|'return_server_nonexistent'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'addSecurityGroup'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|'"test"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/1/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'_addSecurityGroup'
op|','
name|'req'
op|','
string|"'1'"
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_associate_non_running_instance
dedent|''
name|'def'
name|'test_associate_non_running_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get'"
op|','
name|'return_non_running_server'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
nl|'\n'
name|'return_non_running_server'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'security_group_get_by_name'"
op|','
nl|'\n'
name|'return_security_group_without_instances'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'addSecurityGroup'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|'"test"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/1/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'_addSecurityGroup'
op|','
name|'req'
op|','
string|"'1'"
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_associate_already_associated_security_group_to_instance
dedent|''
name|'def'
name|'test_associate_already_associated_security_group_to_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get'"
op|','
name|'return_server'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
nl|'\n'
name|'return_server_by_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'security_group_get_by_name'"
op|','
nl|'\n'
name|'return_security_group_by_name'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'addSecurityGroup'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|'"test"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/1/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'_addSecurityGroup'
op|','
name|'req'
op|','
string|"'1'"
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_associate
dedent|''
name|'def'
name|'test_associate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get'"
op|','
name|'return_server'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
nl|'\n'
name|'return_server_by_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_add_security_group'"
op|')'
newline|'\n'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'instance_add_security_group'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'security_group_get_by_name'"
op|','
nl|'\n'
name|'return_security_group_without_instances'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'addSecurityGroup'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|'"test"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/1/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'_addSecurityGroup'
op|'('
name|'req'
op|','
string|"'1'"
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disassociate_by_non_existing_security_group_name
dedent|''
name|'def'
name|'test_disassociate_by_non_existing_security_group_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
name|'dict'
op|'('
name|'removeSecurityGroup'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"'non-existing'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/1/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'_removeSecurityGroup'
op|','
name|'req'
op|','
string|"'1'"
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disassociate_by_invalid_server_id
dedent|''
name|'def'
name|'test_disassociate_by_invalid_server_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'security_group_get_by_name'"
op|','
nl|'\n'
name|'return_security_group_by_name'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'removeSecurityGroup'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"'test'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/invalid/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'_removeSecurityGroup'
op|','
name|'req'
op|','
string|"'invalid'"
op|','
nl|'\n'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disassociate_without_body
dedent|''
name|'def'
name|'test_disassociate_without_body'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get'"
op|','
name|'return_server'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'removeSecurityGroup'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/1/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'_removeSecurityGroup'
op|','
name|'req'
op|','
string|"'1'"
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disassociate_no_security_group_name
dedent|''
name|'def'
name|'test_disassociate_no_security_group_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get'"
op|','
name|'return_server'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'removeSecurityGroup'
op|'='
name|'dict'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/1/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'_removeSecurityGroup'
op|','
name|'req'
op|','
string|"'1'"
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disassociate_security_group_name_with_whitespaces
dedent|''
name|'def'
name|'test_disassociate_security_group_name_with_whitespaces'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get'"
op|','
name|'return_server'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'removeSecurityGroup'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|'"   "'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/1/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'_removeSecurityGroup'
op|','
name|'req'
op|','
string|"'1'"
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disassociate_non_existing_instance
dedent|''
name|'def'
name|'test_disassociate_non_existing_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get'"
op|','
name|'return_server_nonexistent'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'security_group_get_by_name'"
op|','
nl|'\n'
name|'return_security_group_by_name'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'removeSecurityGroup'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|'"test"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/1/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'_removeSecurityGroup'
op|','
name|'req'
op|','
string|"'1'"
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disassociate_non_running_instance
dedent|''
name|'def'
name|'test_disassociate_non_running_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get'"
op|','
name|'return_non_running_server'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
nl|'\n'
name|'return_non_running_server'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'security_group_get_by_name'"
op|','
nl|'\n'
name|'return_security_group_by_name'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'removeSecurityGroup'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|'"test"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/1/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'_removeSecurityGroup'
op|','
name|'req'
op|','
string|"'1'"
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disassociate_already_associated_security_group_to_instance
dedent|''
name|'def'
name|'test_disassociate_already_associated_security_group_to_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get'"
op|','
name|'return_server'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
nl|'\n'
name|'return_server_by_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'security_group_get_by_name'"
op|','
nl|'\n'
name|'return_security_group_without_instances'
op|')'
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'removeSecurityGroup'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|'"test"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/1/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
nl|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'_removeSecurityGroup'
op|','
name|'req'
op|','
string|"'1'"
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disassociate
dedent|''
name|'def'
name|'test_disassociate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get'"
op|','
name|'return_server'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
nl|'\n'
name|'return_server_by_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_remove_security_group'"
op|')'
newline|'\n'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'instance_remove_security_group'
op|'('
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|','
nl|'\n'
name|'mox'
op|'.'
name|'IgnoreArg'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'security_group_get_by_name'"
op|','
nl|'\n'
name|'return_security_group_by_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'removeSecurityGroup'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|'"test"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/servers/1/action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'_removeSecurityGroup'
op|'('
name|'req'
op|','
string|"'1'"
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestSecurityGroupRules
dedent|''
dedent|''
name|'class'
name|'TestSecurityGroupRules'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestSecurityGroupRules'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'sg1'
op|'='
name|'security_group_template'
op|'('
name|'id'
op|'='
number|'1'
op|')'
newline|'\n'
name|'sg2'
op|'='
name|'security_group_template'
op|'('
name|'id'
op|'='
number|'2'
op|','
nl|'\n'
name|'name'
op|'='
string|"'authorize_revoke'"
op|','
nl|'\n'
name|'description'
op|'='
string|"'authorize-revoke testing'"
op|')'
newline|'\n'
name|'db1'
op|'='
name|'security_group_db'
op|'('
name|'sg1'
op|')'
newline|'\n'
name|'db2'
op|'='
name|'security_group_db'
op|'('
name|'sg2'
op|')'
newline|'\n'
nl|'\n'
DECL|function|return_security_group
name|'def'
name|'return_security_group'
op|'('
name|'context'
op|','
name|'group_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'group_id'
op|'=='
name|'db1'
op|'['
string|"'id'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'db1'
newline|'\n'
dedent|''
name|'if'
name|'group_id'
op|'=='
name|'db2'
op|'['
string|"'id'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'db2'
newline|'\n'
dedent|''
name|'raise'
name|'exception'
op|'.'
name|'NotFound'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'security_group_get'"
op|','
nl|'\n'
name|'return_security_group'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'parent_security_group'
op|'='
name|'db2'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'security_groups'
op|'.'
name|'SecurityGroupRulesController'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_by_cidr
dedent|''
name|'def'
name|'test_create_by_cidr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
name|'security_group_rule_template'
op|'('
name|'cidr'
op|'='
string|"'10.2.3.124/24'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'security_group_rule'
op|'='
name|'res_dict'
op|'['
string|"'security_group_rule'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEquals'
op|'('
name|'security_group_rule'
op|'['
string|"'id'"
op|']'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'security_group_rule'
op|'['
string|"'parent_group_id'"
op|']'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'security_group_rule'
op|'['
string|"'ip_range'"
op|']'
op|'['
string|"'cidr'"
op|']'
op|','
nl|'\n'
string|'"10.2.3.124/24"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_by_group_id
dedent|''
name|'def'
name|'test_create_by_group_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
name|'security_group_rule_template'
op|'('
name|'group_id'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'security_group_rule'
op|'='
name|'res_dict'
op|'['
string|"'security_group_rule'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEquals'
op|'('
name|'security_group_rule'
op|'['
string|"'id'"
op|']'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'security_group_rule'
op|'['
string|"'parent_group_id'"
op|']'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_by_same_group_id
dedent|''
name|'def'
name|'test_create_by_same_group_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule1'
op|'='
name|'security_group_rule_template'
op|'('
name|'group_id'
op|'='
number|'1'
op|','
name|'from_port'
op|'='
number|'80'
op|','
nl|'\n'
name|'to_port'
op|'='
number|'80'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'parent_security_group'
op|'['
string|"'rules'"
op|']'
op|'='
op|'['
name|'security_group_rule_db'
op|'('
name|'rule1'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'rule2'
op|'='
name|'security_group_rule_template'
op|'('
name|'group_id'
op|'='
number|'1'
op|','
name|'from_port'
op|'='
number|'81'
op|','
nl|'\n'
name|'to_port'
op|'='
number|'81'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule2'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'security_group_rule'
op|'='
name|'res_dict'
op|'['
string|"'security_group_rule'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEquals'
op|'('
name|'security_group_rule'
op|'['
string|"'id'"
op|']'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'security_group_rule'
op|'['
string|"'parent_group_id'"
op|']'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'security_group_rule'
op|'['
string|"'from_port'"
op|']'
op|','
number|'81'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'security_group_rule'
op|'['
string|"'to_port'"
op|']'
op|','
number|'81'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_by_invalid_cidr_json
dedent|''
name|'def'
name|'test_create_by_invalid_cidr_json'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rules'
op|'='
op|'{'
nl|'\n'
string|'"security_group_rule"'
op|':'
op|'{'
nl|'\n'
string|'"ip_protocol"'
op|':'
string|'"tcp"'
op|','
nl|'\n'
string|'"from_port"'
op|':'
string|'"22"'
op|','
nl|'\n'
string|'"to_port"'
op|':'
string|'"22"'
op|','
nl|'\n'
string|'"parent_group_id"'
op|':'
number|'2'
op|','
nl|'\n'
string|'"cidr"'
op|':'
string|'"10.2.3.124/2433"'
op|'}'
op|'}'
newline|'\n'
name|'rule'
op|'='
name|'security_group_rule_template'
op|'('
nl|'\n'
name|'ip_protocol'
op|'='
string|'"tcp"'
op|','
nl|'\n'
name|'from_port'
op|'='
number|'22'
op|','
nl|'\n'
name|'to_port'
op|'='
number|'22'
op|','
nl|'\n'
name|'parent_group_id'
op|'='
number|'2'
op|','
nl|'\n'
name|'cidr'
op|'='
string|'"10.2.3.124/2433"'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_by_invalid_tcp_port_json
dedent|''
name|'def'
name|'test_create_by_invalid_tcp_port_json'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
name|'security_group_rule_template'
op|'('
nl|'\n'
name|'ip_protocol'
op|'='
string|'"tcp"'
op|','
nl|'\n'
name|'from_port'
op|'='
number|'75534'
op|','
nl|'\n'
name|'to_port'
op|'='
number|'22'
op|','
nl|'\n'
name|'parent_group_id'
op|'='
number|'2'
op|','
nl|'\n'
name|'cidr'
op|'='
string|'"10.2.3.124/24"'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_by_invalid_icmp_port_json
dedent|''
name|'def'
name|'test_create_by_invalid_icmp_port_json'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
name|'security_group_rule_template'
op|'('
nl|'\n'
name|'ip_protocol'
op|'='
string|'"icmp"'
op|','
nl|'\n'
name|'from_port'
op|'='
number|'1'
op|','
nl|'\n'
name|'to_port'
op|'='
number|'256'
op|','
nl|'\n'
name|'parent_group_id'
op|'='
number|'2'
op|','
nl|'\n'
name|'cidr'
op|'='
string|'"10.2.3.124/24"'
op|')'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_add_existing_rules_by_cidr
dedent|''
name|'def'
name|'test_create_add_existing_rules_by_cidr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
name|'security_group_rule_template'
op|'('
name|'cidr'
op|'='
string|"'10.0.0.0/24'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'parent_security_group'
op|'['
string|"'rules'"
op|']'
op|'='
op|'['
name|'security_group_rule_db'
op|'('
name|'rule'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_add_existing_rules_by_group_id
dedent|''
name|'def'
name|'test_create_add_existing_rules_by_group_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
name|'security_group_rule_template'
op|'('
name|'group_id'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'parent_security_group'
op|'['
string|"'rules'"
op|']'
op|'='
op|'['
name|'security_group_rule_db'
op|'('
name|'rule'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_no_body
dedent|''
name|'def'
name|'test_create_with_no_body'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPUnprocessableEntity'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'req'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_no_security_group_rule_in_body
dedent|''
name|'def'
name|'test_create_with_no_security_group_rule_in_body'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rules'
op|'='
op|'{'
string|"'test'"
op|':'
string|"'test'"
op|'}'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPUnprocessableEntity'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
name|'req'
op|','
name|'rules'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_invalid_parent_group_id
dedent|''
name|'def'
name|'test_create_with_invalid_parent_group_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
name|'security_group_rule_template'
op|'('
name|'parent_group_id'
op|'='
string|"'invalid'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_non_existing_parent_group_id
dedent|''
name|'def'
name|'test_create_with_non_existing_parent_group_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
name|'security_group_rule_template'
op|'('
name|'group_id'
op|'='
string|"'invalid'"
op|','
nl|'\n'
name|'parent_group_id'
op|'='
string|"'1111111111111'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_invalid_protocol
dedent|''
name|'def'
name|'test_create_with_invalid_protocol'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
name|'security_group_rule_template'
op|'('
name|'ip_protocol'
op|'='
string|"'invalid-protocol'"
op|','
nl|'\n'
name|'cidr'
op|'='
string|"'10.2.2.0/24'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_no_protocol
dedent|''
name|'def'
name|'test_create_with_no_protocol'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
name|'security_group_rule_template'
op|'('
name|'cidr'
op|'='
string|"'10.2.2.0/24'"
op|')'
newline|'\n'
name|'del'
name|'rule'
op|'['
string|"'ip_protocol'"
op|']'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_invalid_from_port
dedent|''
name|'def'
name|'test_create_with_invalid_from_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
name|'security_group_rule_template'
op|'('
name|'from_port'
op|'='
string|"'666666'"
op|','
nl|'\n'
name|'cidr'
op|'='
string|"'10.2.2.0/24'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_invalid_to_port
dedent|''
name|'def'
name|'test_create_with_invalid_to_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
name|'security_group_rule_template'
op|'('
name|'to_port'
op|'='
string|"'666666'"
op|','
nl|'\n'
name|'cidr'
op|'='
string|"'10.2.2.0/24'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_non_numerical_from_port
dedent|''
name|'def'
name|'test_create_with_non_numerical_from_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
name|'security_group_rule_template'
op|'('
name|'from_port'
op|'='
string|"'invalid'"
op|','
nl|'\n'
name|'cidr'
op|'='
string|"'10.2.2.0/24'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_non_numerical_to_port
dedent|''
name|'def'
name|'test_create_with_non_numerical_to_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
name|'security_group_rule_template'
op|'('
name|'to_port'
op|'='
string|"'invalid'"
op|','
nl|'\n'
name|'cidr'
op|'='
string|"'10.2.2.0/24'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_no_from_port
dedent|''
name|'def'
name|'test_create_with_no_from_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
name|'security_group_rule_template'
op|'('
name|'cidr'
op|'='
string|"'10.2.2.0/24'"
op|')'
newline|'\n'
name|'del'
name|'rule'
op|'['
string|"'from_port'"
op|']'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_no_to_port
dedent|''
name|'def'
name|'test_create_with_no_to_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
name|'security_group_rule_template'
op|'('
name|'cidr'
op|'='
string|"'10.2.2.0/24'"
op|')'
newline|'\n'
name|'del'
name|'rule'
op|'['
string|"'to_port'"
op|']'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_invalid_cidr
dedent|''
name|'def'
name|'test_create_with_invalid_cidr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
name|'security_group_rule_template'
op|'('
name|'cidr'
op|'='
string|"'10.2.2222.0/24'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_no_cidr_group
dedent|''
name|'def'
name|'test_create_with_no_cidr_group'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
name|'security_group_rule_template'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'security_group_rule'
op|'='
name|'res_dict'
op|'['
string|"'security_group_rule'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEquals'
op|'('
name|'security_group_rule'
op|'['
string|"'id'"
op|']'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'security_group_rule'
op|'['
string|"'parent_group_id'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'parent_security_group'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'security_group_rule'
op|'['
string|"'ip_range'"
op|']'
op|'['
string|"'cidr'"
op|']'
op|','
nl|'\n'
string|'"0.0.0.0/0"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_invalid_group_id
dedent|''
name|'def'
name|'test_create_with_invalid_group_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
name|'security_group_rule_template'
op|'('
name|'group_id'
op|'='
string|"'invalid'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_empty_group_id
dedent|''
name|'def'
name|'test_create_with_empty_group_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
name|'security_group_rule_template'
op|'('
name|'group_id'
op|'='
string|"''"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_nonexist_group_id
dedent|''
name|'def'
name|'test_create_with_nonexist_group_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
name|'security_group_rule_template'
op|'('
name|'group_id'
op|'='
string|"'222222'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_same_group_parent_id_and_group_id
dedent|''
name|'def'
name|'test_create_with_same_group_parent_id_and_group_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
name|'security_group_rule_template'
op|'('
name|'group_id'
op|'='
number|'1'
op|','
name|'parent_group_id'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
name|'security_group_rule'
op|'='
name|'res_dict'
op|'['
string|"'security_group_rule'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEquals'
op|'('
name|'security_group_rule'
op|'['
string|"'id'"
op|']'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'security_group_rule'
op|'['
string|"'parent_group_id'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'security_group_rule'
op|'['
string|"'id'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_create_with_no_ports_and_no_group
dedent|''
name|'def'
name|'_test_create_with_no_ports_and_no_group'
op|'('
name|'self'
op|','
name|'proto'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
op|'{'
string|"'ip_protocol'"
op|':'
name|'proto'
op|','
string|"'parent_group_id'"
op|':'
string|"'2'"
op|'}'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_create_with_no_ports
dedent|''
name|'def'
name|'_test_create_with_no_ports'
op|'('
name|'self'
op|','
name|'proto'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
op|'{'
string|"'ip_protocol'"
op|':'
name|'proto'
op|','
string|"'parent_group_id'"
op|':'
string|"'2'"
op|','
string|"'group_id'"
op|':'
string|"'1'"
op|'}'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'security_group_rule'
op|'='
name|'res_dict'
op|'['
string|"'security_group_rule'"
op|']'
newline|'\n'
name|'expected_rule'
op|'='
op|'{'
nl|'\n'
string|"'from_port'"
op|':'
number|'1'
op|','
string|"'group'"
op|':'
op|'{'
string|"'tenant_id'"
op|':'
string|"'123'"
op|','
string|"'name'"
op|':'
string|"'test'"
op|'}'
op|','
nl|'\n'
string|"'ip_protocol'"
op|':'
name|'proto'
op|','
string|"'to_port'"
op|':'
number|'65535'
op|','
string|"'parent_group_id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'ip_range'"
op|':'
op|'{'
op|'}'
op|','
string|"'id'"
op|':'
number|'1'
nl|'\n'
op|'}'
newline|'\n'
name|'if'
name|'proto'
op|'=='
string|"'icmp'"
op|':'
newline|'\n'
indent|'            '
name|'expected_rule'
op|'['
string|"'to_port'"
op|']'
op|'='
op|'-'
number|'1'
newline|'\n'
name|'expected_rule'
op|'['
string|"'from_port'"
op|']'
op|'='
op|'-'
number|'1'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'security_group_rule'
op|'=='
name|'expected_rule'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_no_ports_icmp
dedent|''
name|'def'
name|'test_create_with_no_ports_icmp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_create_with_no_ports_and_no_group'
op|'('
string|"'icmp'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_with_no_ports'
op|'('
string|"'icmp'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_no_ports_tcp
dedent|''
name|'def'
name|'test_create_with_no_ports_tcp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_create_with_no_ports_and_no_group'
op|'('
string|"'tcp'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_with_no_ports'
op|'('
string|"'tcp'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_no_ports_udp
dedent|''
name|'def'
name|'test_create_with_no_ports_udp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_create_with_no_ports_and_no_group'
op|'('
string|"'udp'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_with_no_ports'
op|'('
string|"'udp'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_create_with_ports
dedent|''
name|'def'
name|'_test_create_with_ports'
op|'('
name|'self'
op|','
name|'id_val'
op|','
name|'proto'
op|','
name|'from_port'
op|','
name|'to_port'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
op|'{'
nl|'\n'
string|"'ip_protocol'"
op|':'
name|'proto'
op|','
string|"'from_port'"
op|':'
name|'from_port'
op|','
string|"'to_port'"
op|':'
name|'to_port'
op|','
nl|'\n'
string|"'parent_group_id'"
op|':'
string|"'2'"
op|','
string|"'group_id'"
op|':'
string|"'1'"
nl|'\n'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'security_group_rule'
op|'='
name|'res_dict'
op|'['
string|"'security_group_rule'"
op|']'
newline|'\n'
name|'expected_rule'
op|'='
op|'{'
nl|'\n'
string|"'from_port'"
op|':'
name|'from_port'
op|','
nl|'\n'
string|"'group'"
op|':'
op|'{'
string|"'tenant_id'"
op|':'
string|"'123'"
op|','
string|"'name'"
op|':'
string|"'test'"
op|'}'
op|','
nl|'\n'
string|"'ip_protocol'"
op|':'
name|'proto'
op|','
string|"'to_port'"
op|':'
name|'to_port'
op|','
string|"'parent_group_id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'ip_range'"
op|':'
op|'{'
op|'}'
op|','
string|"'id'"
op|':'
name|'id_val'
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'security_group_rule'
op|'['
string|"'ip_protocol'"
op|']'
op|'=='
name|'proto'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'security_group_rule'
op|'['
string|"'id'"
op|']'
op|'=='
name|'id_val'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'security_group_rule'
op|'['
string|"'from_port'"
op|']'
op|'=='
name|'from_port'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'security_group_rule'
op|'['
string|"'to_port'"
op|']'
op|'=='
name|'to_port'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'security_group_rule'
op|'=='
name|'expected_rule'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_ports_icmp
dedent|''
name|'def'
name|'test_create_with_ports_icmp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_create_with_ports'
op|'('
number|'1'
op|','
string|"'icmp'"
op|','
number|'0'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_with_ports'
op|'('
number|'2'
op|','
string|"'icmp'"
op|','
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_with_ports'
op|'('
number|'3'
op|','
string|"'icmp'"
op|','
number|'1'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_ports_tcp
dedent|''
name|'def'
name|'test_create_with_ports_tcp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_create_with_ports'
op|'('
number|'1'
op|','
string|"'tcp'"
op|','
number|'1'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_with_ports'
op|'('
number|'2'
op|','
string|"'tcp'"
op|','
number|'1'
op|','
number|'65535'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_with_ports'
op|'('
number|'3'
op|','
string|"'tcp'"
op|','
number|'65535'
op|','
number|'65535'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_with_ports_udp
dedent|''
name|'def'
name|'test_create_with_ports_udp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_create_with_ports'
op|'('
number|'1'
op|','
string|"'udp'"
op|','
number|'1'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_with_ports'
op|'('
number|'2'
op|','
string|"'udp'"
op|','
number|'1'
op|','
number|'65535'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_with_ports'
op|'('
number|'3'
op|','
string|"'udp'"
op|','
number|'65535'
op|','
number|'65535'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete
dedent|''
name|'def'
name|'test_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rule'
op|'='
name|'security_group_rule_template'
op|'('
name|'id'
op|'='
number|'10'
op|')'
newline|'\n'
nl|'\n'
DECL|function|security_group_rule_get
name|'def'
name|'security_group_rule_get'
op|'('
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'security_group_rule_db'
op|'('
name|'rule'
op|')'
newline|'\n'
nl|'\n'
DECL|function|security_group_rule_destroy
dedent|''
name|'def'
name|'security_group_rule_destroy'
op|'('
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'security_group_rule_get'"
op|','
nl|'\n'
name|'security_group_rule_get'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'security_group_rule_destroy'"
op|','
nl|'\n'
name|'security_group_rule_destroy'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules/10'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'delete'
op|'('
name|'req'
op|','
string|"'10'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_invalid_rule_id
dedent|''
name|'def'
name|'test_delete_invalid_rule_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|'+'
nl|'\n'
string|"'/invalid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPBadRequest'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'delete'
op|','
nl|'\n'
name|'req'
op|','
string|"'invalid'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_non_existing_rule_id
dedent|''
name|'def'
name|'test_delete_non_existing_rule_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|'+'
nl|'\n'
string|"'/22222222222222'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'webob'
op|'.'
name|'exc'
op|'.'
name|'HTTPNotFound'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'delete'
op|','
nl|'\n'
name|'req'
op|','
string|"'22222222222222'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_rule_quota_limit
dedent|''
name|'def'
name|'test_create_rule_quota_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'fakes'
op|'.'
name|'HTTPRequest'
op|'.'
name|'blank'
op|'('
string|"'/v2/fake/os-security-group-rules'"
op|')'
newline|'\n'
name|'for'
name|'num'
name|'in'
name|'range'
op|'('
number|'100'
op|','
number|'100'
op|'+'
name|'CONF'
op|'.'
name|'quota_security_group_rules'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'rule'
op|'='
op|'{'
nl|'\n'
string|"'ip_protocol'"
op|':'
string|"'tcp'"
op|','
string|"'from_port'"
op|':'
name|'num'
op|','
nl|'\n'
string|"'to_port'"
op|':'
name|'num'
op|','
string|"'parent_group_id'"
op|':'
string|"'2'"
op|','
string|"'group_id'"
op|':'
string|"'1'"
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|'('
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'rule'
op|'='
op|'{'
nl|'\n'
string|"'ip_protocol'"
op|':'
string|"'tcp'"
op|','
string|"'from_port'"
op|':'
string|"'121'"
op|','
string|"'to_port'"
op|':'
string|"'121'"
op|','
nl|'\n'
string|"'parent_group_id'"
op|':'
string|"'2'"
op|','
string|"'group_id'"
op|':'
string|"'1'"
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'SecurityGroupLimitExceeded'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'create'
op|','
nl|'\n'
name|'req'
op|','
op|'{'
string|"'security_group_rule'"
op|':'
name|'rule'
op|'}'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestSecurityGroupRulesXMLDeserializer
dedent|''
dedent|''
name|'class'
name|'TestSecurityGroupRulesXMLDeserializer'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'deserializer'
op|'='
name|'security_groups'
op|'.'
name|'SecurityGroupRulesXMLDeserializer'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_request
dedent|''
name|'def'
name|'test_create_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<security_group_rule>\n  <parent_group_id>12</parent_group_id>\n  <from_port>22</from_port>\n  <to_port>22</to_port>\n  <group_id></group_id>\n  <ip_protocol>tcp</ip_protocol>\n  <cidr>10.0.0.0/24</cidr>\n</security_group_rule>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"security_group_rule"'
op|':'
op|'{'
nl|'\n'
string|'"parent_group_id"'
op|':'
string|'"12"'
op|','
nl|'\n'
string|'"from_port"'
op|':'
string|'"22"'
op|','
nl|'\n'
string|'"to_port"'
op|':'
string|'"22"'
op|','
nl|'\n'
string|'"ip_protocol"'
op|':'
string|'"tcp"'
op|','
nl|'\n'
string|'"group_id"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"cidr"'
op|':'
string|'"10.0.0.0/24"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_create_no_protocol_request
dedent|''
name|'def'
name|'test_create_no_protocol_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<security_group_rule>\n  <parent_group_id>12</parent_group_id>\n  <from_port>22</from_port>\n  <to_port>22</to_port>\n  <group_id></group_id>\n  <cidr>10.0.0.0/24</cidr>\n</security_group_rule>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"security_group_rule"'
op|':'
op|'{'
nl|'\n'
string|'"parent_group_id"'
op|':'
string|'"12"'
op|','
nl|'\n'
string|'"from_port"'
op|':'
string|'"22"'
op|','
nl|'\n'
string|'"to_port"'
op|':'
string|'"22"'
op|','
nl|'\n'
string|'"group_id"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"cidr"'
op|':'
string|'"10.0.0.0/24"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestSecurityGroupXMLDeserializer
dedent|''
dedent|''
name|'class'
name|'TestSecurityGroupXMLDeserializer'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'deserializer'
op|'='
name|'security_groups'
op|'.'
name|'SecurityGroupXMLDeserializer'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_request
dedent|''
name|'def'
name|'test_create_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<security_group name="test">\n   <description>test</description>\n</security_group>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"security_group"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"test"'
op|','
nl|'\n'
string|'"description"'
op|':'
string|'"test"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_create_no_description_request
dedent|''
name|'def'
name|'test_create_no_description_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<security_group name="test">\n</security_group>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"security_group"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"test"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_create_no_name_request
dedent|''
name|'def'
name|'test_create_no_name_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<security_group>\n<description>test</description>\n</security_group>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"security_group"'
op|':'
op|'{'
nl|'\n'
string|'"description"'
op|':'
string|'"test"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestSecurityGroupXMLSerializer
dedent|''
dedent|''
name|'class'
name|'TestSecurityGroupXMLSerializer'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'namespace'
op|'='
name|'wsgi'
op|'.'
name|'XMLNS_V11'
newline|'\n'
name|'self'
op|'.'
name|'rule_serializer'
op|'='
name|'security_groups'
op|'.'
name|'SecurityGroupRuleTemplate'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'index_serializer'
op|'='
name|'security_groups'
op|'.'
name|'SecurityGroupsTemplate'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'default_serializer'
op|'='
name|'security_groups'
op|'.'
name|'SecurityGroupTemplate'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_tag
dedent|''
name|'def'
name|'_tag'
op|'('
name|'self'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tagname'
op|'='
name|'elem'
op|'.'
name|'tag'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tagname'
op|'['
number|'0'
op|']'
op|','
string|"'{'"
op|')'
newline|'\n'
name|'tmp'
op|'='
name|'tagname'
op|'.'
name|'partition'
op|'('
string|"'}'"
op|')'
newline|'\n'
name|'namespace'
op|'='
name|'tmp'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'namespace'
op|','
name|'self'
op|'.'
name|'namespace'
op|')'
newline|'\n'
name|'return'
name|'tmp'
op|'['
number|'2'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_verify_security_group_rule
dedent|''
name|'def'
name|'_verify_security_group_rule'
op|'('
name|'self'
op|','
name|'raw_rule'
op|','
name|'tree'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'raw_rule'
op|'['
string|"'id'"
op|']'
op|','
name|'tree'
op|'.'
name|'get'
op|'('
string|"'id'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'raw_rule'
op|'['
string|"'parent_group_id'"
op|']'
op|','
nl|'\n'
name|'tree'
op|'.'
name|'get'
op|'('
string|"'parent_group_id'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'seen'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'expected'
op|'='
name|'set'
op|'('
op|'['
string|"'ip_protocol'"
op|','
string|"'from_port'"
op|','
string|"'to_port'"
op|','
nl|'\n'
string|"'group'"
op|','
string|"'group/name'"
op|','
string|"'group/tenant_id'"
op|','
nl|'\n'
string|"'ip_range'"
op|','
string|"'ip_range/cidr'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'child'
name|'in'
name|'tree'
op|':'
newline|'\n'
indent|'            '
name|'child_tag'
op|'='
name|'self'
op|'.'
name|'_tag'
op|'('
name|'child'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'child_tag'
name|'in'
name|'raw_rule'
op|')'
newline|'\n'
name|'seen'
op|'.'
name|'add'
op|'('
name|'child_tag'
op|')'
newline|'\n'
name|'if'
name|'child_tag'
name|'in'
op|'('
string|"'group'"
op|','
string|"'ip_range'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'gr_child'
name|'in'
name|'child'
op|':'
newline|'\n'
indent|'                    '
name|'gr_child_tag'
op|'='
name|'self'
op|'.'
name|'_tag'
op|'('
name|'gr_child'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'gr_child_tag'
name|'in'
name|'raw_rule'
op|'['
name|'child_tag'
op|']'
op|')'
newline|'\n'
name|'seen'
op|'.'
name|'add'
op|'('
string|"'%s/%s'"
op|'%'
op|'('
name|'child_tag'
op|','
name|'gr_child_tag'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gr_child'
op|'.'
name|'text'
op|','
nl|'\n'
name|'raw_rule'
op|'['
name|'child_tag'
op|']'
op|'['
name|'gr_child_tag'
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'child'
op|'.'
name|'text'
op|','
name|'raw_rule'
op|'['
name|'child_tag'
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'seen'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_verify_security_group
dedent|''
name|'def'
name|'_verify_security_group'
op|'('
name|'self'
op|','
name|'raw_group'
op|','
name|'tree'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rules'
op|'='
name|'raw_group'
op|'['
string|"'rules'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'security_group'"
op|','
name|'self'
op|'.'
name|'_tag'
op|'('
name|'tree'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'raw_group'
op|'['
string|"'id'"
op|']'
op|','
name|'tree'
op|'.'
name|'get'
op|'('
string|"'id'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'raw_group'
op|'['
string|"'tenant_id'"
op|']'
op|','
name|'tree'
op|'.'
name|'get'
op|'('
string|"'tenant_id'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'raw_group'
op|'['
string|"'name'"
op|']'
op|','
name|'tree'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'tree'
op|')'
op|')'
newline|'\n'
name|'for'
name|'child'
name|'in'
name|'tree'
op|':'
newline|'\n'
indent|'            '
name|'child_tag'
op|'='
name|'self'
op|'.'
name|'_tag'
op|'('
name|'child'
op|')'
newline|'\n'
name|'if'
name|'child_tag'
op|'=='
string|"'rules'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'child'
op|')'
op|')'
newline|'\n'
name|'for'
name|'idx'
op|','
name|'gr_child'
name|'in'
name|'enumerate'
op|'('
name|'child'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'_tag'
op|'('
name|'gr_child'
op|')'
op|','
string|"'rule'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_security_group_rule'
op|'('
name|'rules'
op|'['
name|'idx'
op|']'
op|','
name|'gr_child'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'description'"
op|','
name|'child_tag'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'raw_group'
op|'['
string|"'description'"
op|']'
op|','
name|'child'
op|'.'
name|'text'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rule_serializer
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_rule_serializer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raw_rule'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'id'
op|'='
string|"'123'"
op|','
nl|'\n'
name|'parent_group_id'
op|'='
string|"'456'"
op|','
nl|'\n'
name|'ip_protocol'
op|'='
string|"'tcp'"
op|','
nl|'\n'
name|'from_port'
op|'='
string|"'789'"
op|','
nl|'\n'
name|'to_port'
op|'='
string|"'987'"
op|','
nl|'\n'
name|'group'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"'group'"
op|','
name|'tenant_id'
op|'='
string|"'tenant'"
op|')'
op|','
nl|'\n'
name|'ip_range'
op|'='
name|'dict'
op|'('
name|'cidr'
op|'='
string|"'10.0.0.0/8'"
op|')'
op|')'
newline|'\n'
name|'rule'
op|'='
name|'dict'
op|'('
name|'security_group_rule'
op|'='
name|'raw_rule'
op|')'
newline|'\n'
name|'text'
op|'='
name|'self'
op|'.'
name|'rule_serializer'
op|'.'
name|'serialize'
op|'('
name|'rule'
op|')'
newline|'\n'
nl|'\n'
name|'print'
name|'text'
newline|'\n'
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'text'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'security_group_rule'"
op|','
name|'self'
op|'.'
name|'_tag'
op|'('
name|'tree'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_security_group_rule'
op|'('
name|'raw_rule'
op|','
name|'tree'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_group_serializer
dedent|''
name|'def'
name|'test_group_serializer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rules'
op|'='
op|'['
name|'dict'
op|'('
nl|'\n'
name|'id'
op|'='
string|"'123'"
op|','
nl|'\n'
name|'parent_group_id'
op|'='
string|"'456'"
op|','
nl|'\n'
name|'ip_protocol'
op|'='
string|"'tcp'"
op|','
nl|'\n'
name|'from_port'
op|'='
string|"'789'"
op|','
nl|'\n'
name|'to_port'
op|'='
string|"'987'"
op|','
nl|'\n'
name|'group'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"'group1'"
op|','
name|'tenant_id'
op|'='
string|"'tenant1'"
op|')'
op|','
nl|'\n'
name|'ip_range'
op|'='
name|'dict'
op|'('
name|'cidr'
op|'='
string|"'10.55.44.0/24'"
op|')'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
nl|'\n'
name|'id'
op|'='
string|"'654'"
op|','
nl|'\n'
name|'parent_group_id'
op|'='
string|"'321'"
op|','
nl|'\n'
name|'ip_protocol'
op|'='
string|"'udp'"
op|','
nl|'\n'
name|'from_port'
op|'='
string|"'234'"
op|','
nl|'\n'
name|'to_port'
op|'='
string|"'567'"
op|','
nl|'\n'
name|'group'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"'group2'"
op|','
name|'tenant_id'
op|'='
string|"'tenant2'"
op|')'
op|','
nl|'\n'
name|'ip_range'
op|'='
name|'dict'
op|'('
name|'cidr'
op|'='
string|"'10.44.55.0/24'"
op|')'
op|')'
op|']'
newline|'\n'
name|'raw_group'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'id'
op|'='
string|"'890'"
op|','
nl|'\n'
name|'description'
op|'='
string|"'description'"
op|','
nl|'\n'
name|'name'
op|'='
string|"'name'"
op|','
nl|'\n'
name|'tenant_id'
op|'='
string|"'tenant'"
op|','
nl|'\n'
name|'rules'
op|'='
name|'rules'
op|')'
newline|'\n'
name|'sg_group'
op|'='
name|'dict'
op|'('
name|'security_group'
op|'='
name|'raw_group'
op|')'
newline|'\n'
name|'text'
op|'='
name|'self'
op|'.'
name|'default_serializer'
op|'.'
name|'serialize'
op|'('
name|'sg_group'
op|')'
newline|'\n'
nl|'\n'
name|'print'
name|'text'
newline|'\n'
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'text'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_verify_security_group'
op|'('
name|'raw_group'
op|','
name|'tree'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_groups_serializer
dedent|''
name|'def'
name|'test_groups_serializer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rules'
op|'='
op|'['
name|'dict'
op|'('
nl|'\n'
name|'id'
op|'='
string|"'123'"
op|','
nl|'\n'
name|'parent_group_id'
op|'='
string|"'1234'"
op|','
nl|'\n'
name|'ip_protocol'
op|'='
string|"'tcp'"
op|','
nl|'\n'
name|'from_port'
op|'='
string|"'12345'"
op|','
nl|'\n'
name|'to_port'
op|'='
string|"'123456'"
op|','
nl|'\n'
name|'group'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"'group1'"
op|','
name|'tenant_id'
op|'='
string|"'tenant1'"
op|')'
op|','
nl|'\n'
name|'ip_range'
op|'='
name|'dict'
op|'('
name|'cidr'
op|'='
string|"'10.123.0.0/24'"
op|')'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
nl|'\n'
name|'id'
op|'='
string|"'234'"
op|','
nl|'\n'
name|'parent_group_id'
op|'='
string|"'2345'"
op|','
nl|'\n'
name|'ip_protocol'
op|'='
string|"'udp'"
op|','
nl|'\n'
name|'from_port'
op|'='
string|"'23456'"
op|','
nl|'\n'
name|'to_port'
op|'='
string|"'234567'"
op|','
nl|'\n'
name|'group'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"'group2'"
op|','
name|'tenant_id'
op|'='
string|"'tenant2'"
op|')'
op|','
nl|'\n'
name|'ip_range'
op|'='
name|'dict'
op|'('
name|'cidr'
op|'='
string|"'10.234.0.0/24'"
op|')'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
nl|'\n'
name|'id'
op|'='
string|"'345'"
op|','
nl|'\n'
name|'parent_group_id'
op|'='
string|"'3456'"
op|','
nl|'\n'
name|'ip_protocol'
op|'='
string|"'tcp'"
op|','
nl|'\n'
name|'from_port'
op|'='
string|"'34567'"
op|','
nl|'\n'
name|'to_port'
op|'='
string|"'345678'"
op|','
nl|'\n'
name|'group'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"'group3'"
op|','
name|'tenant_id'
op|'='
string|"'tenant3'"
op|')'
op|','
nl|'\n'
name|'ip_range'
op|'='
name|'dict'
op|'('
name|'cidr'
op|'='
string|"'10.345.0.0/24'"
op|')'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
nl|'\n'
name|'id'
op|'='
string|"'456'"
op|','
nl|'\n'
name|'parent_group_id'
op|'='
string|"'4567'"
op|','
nl|'\n'
name|'ip_protocol'
op|'='
string|"'udp'"
op|','
nl|'\n'
name|'from_port'
op|'='
string|"'45678'"
op|','
nl|'\n'
name|'to_port'
op|'='
string|"'456789'"
op|','
nl|'\n'
name|'group'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"'group4'"
op|','
name|'tenant_id'
op|'='
string|"'tenant4'"
op|')'
op|','
nl|'\n'
name|'ip_range'
op|'='
name|'dict'
op|'('
name|'cidr'
op|'='
string|"'10.456.0.0/24'"
op|')'
op|')'
op|']'
newline|'\n'
name|'groups'
op|'='
op|'['
name|'dict'
op|'('
nl|'\n'
name|'id'
op|'='
string|"'567'"
op|','
nl|'\n'
name|'description'
op|'='
string|"'description1'"
op|','
nl|'\n'
name|'name'
op|'='
string|"'name1'"
op|','
nl|'\n'
name|'tenant_id'
op|'='
string|"'tenant1'"
op|','
nl|'\n'
name|'rules'
op|'='
name|'rules'
op|'['
number|'0'
op|':'
number|'2'
op|']'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
nl|'\n'
name|'id'
op|'='
string|"'678'"
op|','
nl|'\n'
name|'description'
op|'='
string|"'description2'"
op|','
nl|'\n'
name|'name'
op|'='
string|"'name2'"
op|','
nl|'\n'
name|'tenant_id'
op|'='
string|"'tenant2'"
op|','
nl|'\n'
name|'rules'
op|'='
name|'rules'
op|'['
number|'2'
op|':'
number|'4'
op|']'
op|')'
op|']'
newline|'\n'
name|'sg_groups'
op|'='
name|'dict'
op|'('
name|'security_groups'
op|'='
name|'groups'
op|')'
newline|'\n'
name|'text'
op|'='
name|'self'
op|'.'
name|'index_serializer'
op|'.'
name|'serialize'
op|'('
name|'sg_groups'
op|')'
newline|'\n'
nl|'\n'
name|'print'
name|'text'
newline|'\n'
name|'tree'
op|'='
name|'etree'
op|'.'
name|'fromstring'
op|'('
name|'text'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'security_groups'"
op|','
name|'self'
op|'.'
name|'_tag'
op|'('
name|'tree'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'groups'
op|')'
op|','
name|'len'
op|'('
name|'tree'
op|')'
op|')'
newline|'\n'
name|'for'
name|'idx'
op|','
name|'child'
name|'in'
name|'enumerate'
op|'('
name|'tree'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_verify_security_group'
op|'('
name|'groups'
op|'['
name|'idx'
op|']'
op|','
name|'child'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|UUID1
dedent|''
dedent|''
dedent|''
name|'UUID1'
op|'='
string|"'00000000-0000-0000-0000-000000000001'"
newline|'\n'
DECL|variable|UUID2
name|'UUID2'
op|'='
string|"'00000000-0000-0000-0000-000000000002'"
newline|'\n'
DECL|variable|UUID3
name|'UUID3'
op|'='
string|"'00000000-0000-0000-0000-000000000003'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_compute_get_all
name|'def'
name|'fake_compute_get_all'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'['
nl|'\n'
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'1'
op|','
name|'uuid'
op|'='
name|'UUID1'
op|','
nl|'\n'
name|'security_groups'
op|'='
op|'['
op|'{'
string|"'name'"
op|':'
string|"'fake-0-0'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'fake-0-1'"
op|'}'
op|']'
op|')'
op|','
nl|'\n'
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'2'
op|','
name|'uuid'
op|'='
name|'UUID2'
op|','
nl|'\n'
name|'security_groups'
op|'='
op|'['
op|'{'
string|"'name'"
op|':'
string|"'fake-1-0'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'fake-1-1'"
op|'}'
op|']'
op|')'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_compute_get
dedent|''
name|'def'
name|'fake_compute_get'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'fakes'
op|'.'
name|'stub_instance'
op|'('
number|'1'
op|','
name|'uuid'
op|'='
name|'UUID3'
op|','
nl|'\n'
name|'security_groups'
op|'='
op|'['
op|'{'
string|"'name'"
op|':'
string|"'fake-2-0'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'fake-2-1'"
op|'}'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_compute_create
dedent|''
name|'def'
name|'fake_compute_create'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'('
op|'['
name|'fake_compute_get'
op|'('
op|')'
op|']'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SecurityGroupsOutputTest
dedent|''
name|'class'
name|'SecurityGroupsOutputTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|content_type
indent|'    '
name|'content_type'
op|'='
string|"'application/json'"
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'SecurityGroupsOutputTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_out_nw_api'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute'
op|'.'
name|'api'
op|'.'
name|'API'
op|','
string|"'get'"
op|','
name|'fake_compute_get'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute'
op|'.'
name|'api'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_compute_get_all'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute'
op|'.'
name|'api'
op|'.'
name|'API'
op|','
string|"'create'"
op|','
name|'fake_compute_create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
nl|'\n'
name|'osapi_compute_extension'
op|'='
op|'['
nl|'\n'
string|"'nova.api.openstack.compute.contrib.select_extensions'"
op|']'
op|','
nl|'\n'
name|'osapi_compute_ext_list'
op|'='
op|'['
string|"'Security_groups'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_make_request
dedent|''
name|'def'
name|'_make_request'
op|'('
name|'self'
op|','
name|'url'
op|','
name|'body'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
name|'url'
op|')'
newline|'\n'
name|'if'
name|'body'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'self'
op|'.'
name|'_encode_body'
op|'('
name|'body'
op|')'
newline|'\n'
dedent|''
name|'req'
op|'.'
name|'content_type'
op|'='
name|'self'
op|'.'
name|'content_type'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Accept'"
op|']'
op|'='
name|'self'
op|'.'
name|'content_type'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
name|'init_only'
op|'='
op|'('
string|"'servers'"
op|','
op|')'
op|')'
op|')'
newline|'\n'
name|'return'
name|'res'
newline|'\n'
nl|'\n'
DECL|member|_encode_body
dedent|''
name|'def'
name|'_encode_body'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_server
dedent|''
name|'def'
name|'_get_server'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'body'
op|')'
op|'.'
name|'get'
op|'('
string|"'server'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_servers
dedent|''
name|'def'
name|'_get_servers'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'body'
op|')'
op|'.'
name|'get'
op|'('
string|"'servers'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_groups
dedent|''
name|'def'
name|'_get_groups'
op|'('
name|'self'
op|','
name|'server'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'server'
op|'.'
name|'get'
op|'('
string|"'security_groups'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create
dedent|''
name|'def'
name|'test_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'url'
op|'='
string|"'/v2/fake/servers'"
newline|'\n'
name|'image_uuid'
op|'='
string|"'c905cedb-7281-47e4-8a62-f26bc5fc4c77'"
newline|'\n'
name|'server'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"'server_test'"
op|','
name|'imageRef'
op|'='
name|'image_uuid'
op|','
name|'flavorRef'
op|'='
number|'2'
op|')'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'_make_request'
op|'('
name|'url'
op|','
op|'{'
string|"'server'"
op|':'
name|'server'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'_get_server'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'group'
name|'in'
name|'enumerate'
op|'('
name|'self'
op|'.'
name|'_get_groups'
op|'('
name|'server'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'name'
op|'='
string|"'fake-2-%s'"
op|'%'
name|'i'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'group'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_show
dedent|''
dedent|''
name|'def'
name|'test_show'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'url'
op|'='
string|"'/v2/fake/servers/%s'"
op|'%'
name|'UUID3'
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'_make_request'
op|'('
name|'url'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'_get_server'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'group'
name|'in'
name|'enumerate'
op|'('
name|'self'
op|'.'
name|'_get_groups'
op|'('
name|'server'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'name'
op|'='
string|"'fake-2-%s'"
op|'%'
name|'i'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'group'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detail
dedent|''
dedent|''
name|'def'
name|'test_detail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'url'
op|'='
string|"'/v2/fake/servers/detail'"
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'_make_request'
op|'('
name|'url'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'server'
name|'in'
name|'enumerate'
op|'('
name|'self'
op|'.'
name|'_get_servers'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'j'
op|','
name|'group'
name|'in'
name|'enumerate'
op|'('
name|'self'
op|'.'
name|'_get_groups'
op|'('
name|'server'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'name'
op|'='
string|"'fake-%s-%s'"
op|'%'
op|'('
name|'i'
op|','
name|'j'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'group'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_no_instance_passthrough_404
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_no_instance_passthrough_404'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_compute_get
indent|'        '
name|'def'
name|'fake_compute_get'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'compute'
op|'.'
name|'api'
op|'.'
name|'API'
op|','
string|"'get'"
op|','
name|'fake_compute_get'
op|')'
newline|'\n'
name|'url'
op|'='
string|"'/v2/fake/servers/70f6db34-de8d-4fbd-aafb-4065bdfa6115'"
newline|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'_make_request'
op|'('
name|'url'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SecurityGroupsOutputXmlTest
dedent|''
dedent|''
name|'class'
name|'SecurityGroupsOutputXmlTest'
op|'('
name|'SecurityGroupsOutputTest'
op|')'
op|':'
newline|'\n'
DECL|variable|content_type
indent|'    '
name|'content_type'
op|'='
string|"'application/xml'"
newline|'\n'
nl|'\n'
DECL|class|MinimalCreateServerTemplate
name|'class'
name|'MinimalCreateServerTemplate'
op|'('
name|'xmlutil'
op|'.'
name|'TemplateBuilder'
op|')'
op|':'
newline|'\n'
DECL|member|construct
indent|'        '
name|'def'
name|'construct'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'root'
op|'='
name|'xmlutil'
op|'.'
name|'TemplateElement'
op|'('
string|"'server'"
op|','
name|'selector'
op|'='
string|"'server'"
op|')'
newline|'\n'
name|'root'
op|'.'
name|'set'
op|'('
string|"'name'"
op|')'
newline|'\n'
name|'root'
op|'.'
name|'set'
op|'('
string|"'id'"
op|')'
newline|'\n'
name|'root'
op|'.'
name|'set'
op|'('
string|"'imageRef'"
op|')'
newline|'\n'
name|'root'
op|'.'
name|'set'
op|'('
string|"'flavorRef'"
op|')'
newline|'\n'
name|'return'
name|'xmlutil'
op|'.'
name|'MasterTemplate'
op|'('
name|'root'
op|','
number|'1'
op|','
nl|'\n'
name|'nsmap'
op|'='
op|'{'
name|'None'
op|':'
name|'xmlutil'
op|'.'
name|'XMLNS_V11'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_encode_body
dedent|''
dedent|''
name|'def'
name|'_encode_body'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'self'
op|'.'
name|'MinimalCreateServerTemplate'
op|'('
op|')'
newline|'\n'
name|'return'
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_server
dedent|''
name|'def'
name|'_get_server'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'etree'
op|'.'
name|'XML'
op|'('
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_servers
dedent|''
name|'def'
name|'_get_servers'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'etree'
op|'.'
name|'XML'
op|'('
name|'body'
op|')'
op|'.'
name|'getchildren'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_groups
dedent|''
name|'def'
name|'_get_groups'
op|'('
name|'self'
op|','
name|'server'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(vish): we are adding security groups without an extension'
nl|'\n'
comment|"#             namespace so we don't break people using the existing"
nl|'\n'
comment|'#             functionality, but that means we need to use find with'
nl|'\n'
comment|'#             the existing server namespace.'
nl|'\n'
indent|'        '
name|'namespace'
op|'='
name|'server'
op|'.'
name|'nsmap'
op|'['
name|'None'
op|']'
newline|'\n'
name|'return'
name|'server'
op|'.'
name|'find'
op|'('
string|"'{%s}security_groups'"
op|'%'
name|'namespace'
op|')'
op|'.'
name|'getchildren'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
