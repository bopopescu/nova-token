begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 OpenStack LLC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'unittest'
newline|'\n'
nl|'\n'
name|'import'
name|'stubout'
newline|'\n'
name|'import'
name|'webob'
newline|'\n'
nl|'\n'
name|'import'
name|'nova'
op|'.'
name|'api'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'flavors'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'fakes'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FlavorsTest
name|'class'
name|'FlavorsTest'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'='
name|'stubout'
op|'.'
name|'StubOutForTesting'
op|'('
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'FakeAuthManager'
op|'.'
name|'auth_data'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'fakes'
op|'.'
name|'FakeAuthDatabase'
op|'.'
name|'data'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_out_networking'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_out_rate_limiting'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_out_auth'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'UnsetAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_flavor_list
dedent|''
name|'def'
name|'test_get_flavor_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/flavors'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_list_delete_favor
dedent|''
name|'def'
name|'test_create_list_delete_favor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# create a new flavor'
nl|'\n'
indent|'        '
name|'starting_flavors'
op|'='
name|'db'
op|'.'
name|'instance_type_get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'new_instance_type'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|'"os1.big"'
op|','
name|'memory_mb'
op|'='
number|'512'
op|','
nl|'\n'
name|'vcpus'
op|'='
number|'1'
op|','
name|'local_gb'
op|'='
number|'120'
op|','
name|'flavorid'
op|'='
number|'25'
op|')'
newline|'\n'
name|'new_flavor'
op|'='
name|'db'
op|'.'
name|'instance_type_create'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'new_instance_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'new_flavor'
op|'['
string|'"name"'
op|']'
op|','
name|'new_instance_type'
op|'['
string|'"name"'
op|']'
op|')'
newline|'\n'
comment|'# retrieve the newly created flavor'
nl|'\n'
name|'retrieved_new_flavor'
op|'='
name|'db'
op|'.'
name|'instance_type_get_by_name'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'new_instance_type'
op|'['
string|'"name"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'retrieved_new_flavor'
op|'.'
name|'values'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|'['
string|'"memory_mb"'
op|']'
op|','
nl|'\n'
name|'new_instance_type'
op|'['
string|'"memory_mb"'
op|']'
op|')'
newline|'\n'
name|'flavors'
op|'='
name|'db'
op|'.'
name|'instance_type_get_all'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'starting_flavors'
op|','
name|'flavors'
op|')'
newline|'\n'
comment|'# delete the newly created flavor'
nl|'\n'
name|'delete_query'
op|'='
name|'db'
op|'.'
name|'instance_type_destroy'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'new_instance_type'
op|'['
string|'"name"'
op|']'
op|')'
newline|'\n'
name|'deleted_flavor'
op|'='
name|'db'
op|'.'
name|'instance_type_get_by_name'
op|'('
name|'self'
op|'.'
name|'context'
op|','
nl|'\n'
name|'new_instance_type'
op|'['
string|'"name"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'deleted_flavor'
op|'.'
name|'values'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|'['
string|'"deleted"'
op|']'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
