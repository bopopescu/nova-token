begin_unit
name|'import'
name|'httplib'
newline|'\n'
name|'import'
name|'StringIO'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'import'
name|'webob'
newline|'\n'
nl|'\n'
name|'import'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'ratelimiting'
name|'as'
name|'ratelimiting'
newline|'\n'
nl|'\n'
DECL|class|LimiterTest
name|'class'
name|'LimiterTest'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'limits'
op|'='
op|'{'
nl|'\n'
string|"'a'"
op|':'
op|'('
number|'5'
op|','
name|'ratelimiting'
op|'.'
name|'PER_SECOND'
op|')'
op|','
nl|'\n'
string|"'b'"
op|':'
op|'('
number|'5'
op|','
name|'ratelimiting'
op|'.'
name|'PER_MINUTE'
op|')'
op|','
nl|'\n'
string|"'c'"
op|':'
op|'('
number|'5'
op|','
name|'ratelimiting'
op|'.'
name|'PER_HOUR'
op|')'
op|','
nl|'\n'
string|"'d'"
op|':'
op|'('
number|'1'
op|','
name|'ratelimiting'
op|'.'
name|'PER_SECOND'
op|')'
op|','
nl|'\n'
string|"'e'"
op|':'
op|'('
number|'100'
op|','
name|'ratelimiting'
op|'.'
name|'PER_SECOND'
op|')'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'rl'
op|'='
name|'ratelimiting'
op|'.'
name|'Limiter'
op|'('
name|'self'
op|'.'
name|'limits'
op|')'
newline|'\n'
nl|'\n'
DECL|member|exhaust
dedent|''
name|'def'
name|'exhaust'
op|'('
name|'self'
op|','
name|'action'
op|','
name|'times_until_exhausted'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'times_until_exhausted'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'when'
op|'='
name|'self'
op|'.'
name|'rl'
op|'.'
name|'perform'
op|'('
name|'action'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'when'
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
name|'num'
op|','
name|'period'
op|'='
name|'self'
op|'.'
name|'limits'
op|'['
name|'action'
op|']'
newline|'\n'
name|'delay'
op|'='
name|'period'
op|'*'
number|'1.0'
op|'/'
name|'num'
newline|'\n'
comment|'# Verify that we are now thoroughly delayed'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'when'
op|'='
name|'self'
op|'.'
name|'rl'
op|'.'
name|'perform'
op|'('
name|'action'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertAlmostEqual'
op|'('
name|'when'
op|','
name|'delay'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_second
dedent|''
dedent|''
name|'def'
name|'test_second'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'exhaust'
op|'('
string|"'a'"
op|','
number|'5'
op|')'
newline|'\n'
name|'time'
op|'.'
name|'sleep'
op|'('
number|'0.2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'exhaust'
op|'('
string|"'a'"
op|','
number|'1'
op|')'
newline|'\n'
name|'time'
op|'.'
name|'sleep'
op|'('
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'exhaust'
op|'('
string|"'a'"
op|','
number|'5'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_minute
dedent|''
name|'def'
name|'test_minute'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'exhaust'
op|'('
string|"'b'"
op|','
number|'5'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_one_per_period
dedent|''
name|'def'
name|'test_one_per_period'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|allow_once_and_deny_once
indent|'        '
name|'def'
name|'allow_once_and_deny_once'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'when'
op|'='
name|'self'
op|'.'
name|'rl'
op|'.'
name|'perform'
op|'('
string|"'d'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'when'
op|','
name|'None'
op|')'
newline|'\n'
name|'when'
op|'='
name|'self'
op|'.'
name|'rl'
op|'.'
name|'perform'
op|'('
string|"'d'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertAlmostEqual'
op|'('
name|'when'
op|','
number|'1'
op|','
number|'2'
op|')'
newline|'\n'
name|'return'
name|'when'
newline|'\n'
dedent|''
name|'time'
op|'.'
name|'sleep'
op|'('
name|'allow_once_and_deny_once'
op|'('
op|')'
op|')'
newline|'\n'
name|'time'
op|'.'
name|'sleep'
op|'('
name|'allow_once_and_deny_once'
op|'('
op|')'
op|')'
newline|'\n'
name|'allow_once_and_deny_once'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_we_can_go_indefinitely_if_we_spread_out_requests
dedent|''
name|'def'
name|'test_we_can_go_indefinitely_if_we_spread_out_requests'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'200'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'when'
op|'='
name|'self'
op|'.'
name|'rl'
op|'.'
name|'perform'
op|'('
string|"'e'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'when'
op|','
name|'None'
op|')'
newline|'\n'
name|'time'
op|'.'
name|'sleep'
op|'('
number|'0.01'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_users_get_separate_buckets
dedent|''
dedent|''
name|'def'
name|'test_users_get_separate_buckets'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'exhaust'
op|'('
string|"'c'"
op|','
number|'5'
op|','
name|'username'
op|'='
string|"'alice'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'exhaust'
op|'('
string|"'c'"
op|','
number|'5'
op|','
name|'username'
op|'='
string|"'bob'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'exhaust'
op|'('
string|"'c'"
op|','
number|'5'
op|','
name|'username'
op|'='
string|"'chuck'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'exhaust'
op|'('
string|"'c'"
op|','
number|'0'
op|','
name|'username'
op|'='
string|"'chuck'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'exhaust'
op|'('
string|"'c'"
op|','
number|'0'
op|','
name|'username'
op|'='
string|"'bob'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'exhaust'
op|'('
string|"'c'"
op|','
number|'0'
op|','
name|'username'
op|'='
string|"'alice'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeLimiter
dedent|''
dedent|''
name|'class'
name|'FakeLimiter'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Fake Limiter class that you can tell how to behave."""'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'test'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_action'
op|'='
name|'self'
op|'.'
name|'_username'
op|'='
name|'self'
op|'.'
name|'_delay'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'test'
op|'='
name|'test'
newline|'\n'
DECL|member|mock
dedent|''
name|'def'
name|'mock'
op|'('
name|'self'
op|','
name|'action'
op|','
name|'username'
op|','
name|'delay'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_action'
op|'='
name|'action'
newline|'\n'
name|'self'
op|'.'
name|'_username'
op|'='
name|'username'
newline|'\n'
name|'self'
op|'.'
name|'_delay'
op|'='
name|'delay'
newline|'\n'
DECL|member|perform
dedent|''
name|'def'
name|'perform'
op|'('
name|'self'
op|','
name|'action'
op|','
name|'username'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'test'
op|'.'
name|'assertEqual'
op|'('
name|'action'
op|','
name|'self'
op|'.'
name|'_action'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'test'
op|'.'
name|'assertEqual'
op|'('
name|'username'
op|','
name|'self'
op|'.'
name|'_username'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_delay'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|WSGIAppTest
dedent|''
dedent|''
name|'class'
name|'WSGIAppTest'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'limiter'
op|'='
name|'FakeLimiter'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'='
name|'ratelimiting'
op|'.'
name|'WSGIApp'
op|'('
name|'self'
op|'.'
name|'limiter'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_invalid_methods
dedent|''
name|'def'
name|'test_invalid_methods'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requests'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'method'
name|'in'
op|'['
string|"'GET'"
op|','
string|"'PUT'"
op|','
string|"'DELETE'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/limits/michael/breakdance'"
op|','
nl|'\n'
name|'dict'
op|'('
name|'REQUEST_METHOD'
op|'='
name|'method'
op|')'
op|')'
newline|'\n'
name|'requests'
op|'.'
name|'append'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'req'
name|'in'
name|'requests'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
op|'.'
name|'status_int'
op|','
number|'405'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_invalid_urls
dedent|''
dedent|''
name|'def'
name|'test_invalid_urls'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requests'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'prefix'
name|'in'
op|'['
string|"'limit'"
op|','
string|"''"
op|','
string|"'limiter2'"
op|','
string|"'limiter/limits'"
op|','
string|"'limiter/1'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/%s/michael/breakdance'"
op|'%'
name|'prefix'
op|','
nl|'\n'
name|'dict'
op|'('
name|'REQUEST_METHOD'
op|'='
string|"'POST'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'requests'
op|'.'
name|'append'
op|'('
name|'req'
op|')'
newline|'\n'
name|'for'
name|'req'
name|'in'
name|'requests'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|verify
dedent|''
dedent|''
name|'def'
name|'verify'
op|'('
name|'self'
op|','
name|'url'
op|','
name|'username'
op|','
name|'action'
op|','
name|'delay'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure that POSTing to the given url causes the given username\n        to perform the given action.  Make the internal rate limiter return\n        delay and make sure that the WSGI app returns the correct response.\n        """'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
name|'url'
op|','
name|'dict'
op|'('
name|'REQUEST_METHOD'
op|'='
string|"'POST'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'limiter'
op|'.'
name|'mock'
op|'('
name|'action'
op|','
name|'username'
op|','
name|'delay'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'delay'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'403'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'X-Wait-Seconds'"
op|']'
op|','
string|'"%.2f"'
op|'%'
name|'delay'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_good_urls
dedent|''
dedent|''
name|'def'
name|'test_good_urls'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'verify'
op|'('
string|"'/limiter/michael/hoot'"
op|','
string|"'michael'"
op|','
string|"'hoot'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_escaping
dedent|''
name|'def'
name|'test_escaping'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'verify'
op|'('
string|"'/limiter/michael/jump%20up'"
op|','
string|"'michael'"
op|','
string|"'jump up'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_response_to_delays
dedent|''
name|'def'
name|'test_response_to_delays'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'verify'
op|'('
string|"'/limiter/michael/hoot'"
op|','
string|"'michael'"
op|','
string|"'hoot'"
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'verify'
op|'('
string|"'/limiter/michael/hoot'"
op|','
string|"'michael'"
op|','
string|"'hoot'"
op|','
number|'1.56'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'verify'
op|'('
string|"'/limiter/michael/hoot'"
op|','
string|"'michael'"
op|','
string|"'hoot'"
op|','
number|'1000'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeHttplibSocket
dedent|''
dedent|''
name|'class'
name|'FakeHttplibSocket'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""a fake socket implementation for httplib.HTTPResponse, trivial"""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'response_string'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_buffer'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
name|'response_string'
op|')'
newline|'\n'
nl|'\n'
DECL|member|makefile
dedent|''
name|'def'
name|'makefile'
op|'('
name|'self'
op|','
name|'_mode'
op|','
name|'_other'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns the socket\'s internal buffer"""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_buffer'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeHttplibConnection
dedent|''
dedent|''
name|'class'
name|'FakeHttplibConnection'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""A fake httplib.HTTPConnection\n\n    Requests made via this connection actually get translated and routed into\n    our WSGI app, we then wait for the response and turn it back into\n    an httplib.HTTPResponse.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'app'
op|','
name|'host'
op|','
name|'is_secure'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'='
name|'app'
newline|'\n'
name|'self'
op|'.'
name|'host'
op|'='
name|'host'
newline|'\n'
nl|'\n'
DECL|member|request
dedent|''
name|'def'
name|'request'
op|'('
name|'self'
op|','
name|'method'
op|','
name|'path'
op|','
name|'data'
op|'='
string|"''"
op|','
name|'headers'
op|'='
op|'{'
op|'}'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
name|'path'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
name|'method'
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'data'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'='
name|'headers'
newline|'\n'
name|'req'
op|'.'
name|'host'
op|'='
name|'self'
op|'.'
name|'host'
newline|'\n'
comment|'# Call the WSGI app, get the HTTP response'
nl|'\n'
name|'resp'
op|'='
name|'str'
op|'('
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
op|')'
newline|'\n'
comment|'# For some reason, the response doesn\'t have "HTTP/1.0 " prepended; I'
nl|'\n'
comment|"# guess that's a function the web server usually provides."
nl|'\n'
name|'resp'
op|'='
string|'"HTTP/1.0 %s"'
op|'%'
name|'resp'
newline|'\n'
name|'sock'
op|'='
name|'FakeHttplibSocket'
op|'('
name|'resp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'http_response'
op|'='
name|'httplib'
op|'.'
name|'HTTPResponse'
op|'('
name|'sock'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'http_response'
op|'.'
name|'begin'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|getresponse
dedent|''
name|'def'
name|'getresponse'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'http_response'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|wire_HTTPConnection_to_WSGI
dedent|''
dedent|''
name|'def'
name|'wire_HTTPConnection_to_WSGI'
op|'('
name|'host'
op|','
name|'app'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Monkeypatches HTTPConnection so that if you try to connect to host, you\n    are instead routed straight to the given WSGI app.\n\n    After calling this method, when any code calls\n\n    httplib.HTTPConnection(host)\n\n    the connection object will be a fake.  Its requests will be sent directly\n    to the given WSGI app rather than through a socket.\n    \n    Code connecting to hosts other than host will not be affected.\n\n    This method may be called multiple times to map different hosts to\n    different apps.\n    """'
newline|'\n'
DECL|class|HTTPConnectionDecorator
name|'class'
name|'HTTPConnectionDecorator'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Wraps the real HTTPConnection class so that when you instantiate\n        the class you might instead get a fake instance."""'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'wrapped'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'wrapped'
op|'='
name|'wrapped'
newline|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'connection_host'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'connection_host'
op|'=='
name|'host'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'FakeHttplibConnection'
op|'('
name|'app'
op|','
name|'host'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'wrapped'
op|'('
name|'connection_host'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'httplib'
op|'.'
name|'HTTPConnection'
op|'='
name|'HTTPConnectionDecorator'
op|'('
name|'httplib'
op|'.'
name|'HTTPConnection'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|WSGIAppProxyTest
dedent|''
name|'class'
name|'WSGIAppProxyTest'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Our WSGIAppProxy is going to call across an HTTPConnection to a\n        WSGIApp running a limiter.  The proxy will send input, and the proxy\n        should receive that same input, pass it to the limiter who gives a\n        result, and send the expected result back.\n\n        The HTTPConnection isn\'t real -- it\'s monkeypatched to point straight\n        at the WSGIApp.  And the limiter isn\'t real -- it\'s a fake that\n        behaves the way we tell it to.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'limiter'
op|'='
name|'FakeLimiter'
op|'('
name|'self'
op|')'
newline|'\n'
name|'app'
op|'='
name|'ratelimiting'
op|'.'
name|'WSGIApp'
op|'('
name|'self'
op|'.'
name|'limiter'
op|')'
newline|'\n'
name|'wire_HTTPConnection_to_WSGI'
op|'('
string|"'100.100.100.100:80'"
op|','
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'='
name|'ratelimiting'
op|'.'
name|'WSGIAppProxy'
op|'('
string|"'100.100.100.100:80'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_200
dedent|''
name|'def'
name|'test_200'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'limiter'
op|'.'
name|'mock'
op|'('
string|"'conquer'"
op|','
string|"'caesar'"
op|','
name|'None'
op|')'
newline|'\n'
name|'when'
op|'='
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'perform'
op|'('
string|"'conquer'"
op|','
string|"'caesar'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'when'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_403
dedent|''
name|'def'
name|'test_403'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'limiter'
op|'.'
name|'mock'
op|'('
string|"'grumble'"
op|','
string|"'proletariat'"
op|','
number|'1.5'
op|')'
newline|'\n'
name|'when'
op|'='
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'perform'
op|'('
string|"'grumble'"
op|','
string|"'proletariat'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'when'
op|','
number|'1.5'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_failure
dedent|''
name|'def'
name|'test_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|shouldRaise
indent|'        '
name|'def'
name|'shouldRaise'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'limiter'
op|'.'
name|'mock'
op|'('
string|"'murder'"
op|','
string|"'brutus'"
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'perform'
op|'('
string|"'stab'"
op|','
string|"'brutus'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AssertionError'
op|','
name|'shouldRaise'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
