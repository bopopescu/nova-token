begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010-2011 OpenStack LLC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'base64'
newline|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'json'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'xml'
op|'.'
name|'dom'
name|'import'
name|'minidom'
newline|'\n'
nl|'\n'
name|'import'
name|'webob'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'create_instance_helper'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'servers'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'wsgi'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'instance_types'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'power_state'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'scheduler'
op|'.'
name|'api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
op|'.'
name|'models'
name|'import'
name|'Instance'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
op|'.'
name|'models'
name|'import'
name|'InstanceMetadata'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'image'
op|'.'
name|'fake'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'common'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'api'
op|'.'
name|'openstack'
name|'import'
name|'fakes'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FAKE_UUID
name|'FAKE_UUID'
op|'='
string|"'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_gen_uuid
name|'def'
name|'fake_gen_uuid'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'FAKE_UUID'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|return_server_by_id
dedent|''
name|'def'
name|'return_server_by_id'
op|'('
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'stub_instance'
op|'('
name|'id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|return_server_by_uuid
dedent|''
name|'def'
name|'return_server_by_uuid'
op|'('
name|'context'
op|','
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'id'
op|'='
number|'1'
newline|'\n'
name|'return'
name|'stub_instance'
op|'('
name|'id'
op|','
name|'uuid'
op|'='
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|return_virtual_interface_by_instance
dedent|''
name|'def'
name|'return_virtual_interface_by_instance'
op|'('
name|'interfaces'
op|')'
op|':'
newline|'\n'
DECL|function|_return_virtual_interface_by_instance
indent|'    '
name|'def'
name|'_return_virtual_interface_by_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'interfaces'
newline|'\n'
dedent|''
name|'return'
name|'_return_virtual_interface_by_instance'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|return_virtual_interface_instance_nonexistant
dedent|''
name|'def'
name|'return_virtual_interface_instance_nonexistant'
op|'('
name|'interfaces'
op|')'
op|':'
newline|'\n'
DECL|function|_return_virtual_interface_by_instance
indent|'    '
name|'def'
name|'_return_virtual_interface_by_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'instance_id'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'_return_virtual_interface_by_instance'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|return_server_with_attributes
dedent|''
name|'def'
name|'return_server_with_attributes'
op|'('
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
DECL|function|_return_server
indent|'    '
name|'def'
name|'_return_server'
op|'('
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'stub_instance'
op|'('
name|'id'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'_return_server'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|return_server_with_addresses
dedent|''
name|'def'
name|'return_server_with_addresses'
op|'('
name|'private'
op|','
name|'public'
op|')'
op|':'
newline|'\n'
DECL|function|_return_server
indent|'    '
name|'def'
name|'_return_server'
op|'('
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'stub_instance'
op|'('
name|'id'
op|','
name|'private_address'
op|'='
name|'private'
op|','
nl|'\n'
name|'public_addresses'
op|'='
name|'public'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'_return_server'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|return_server_with_power_state
dedent|''
name|'def'
name|'return_server_with_power_state'
op|'('
name|'power_state'
op|')'
op|':'
newline|'\n'
DECL|function|_return_server
indent|'    '
name|'def'
name|'_return_server'
op|'('
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'stub_instance'
op|'('
name|'id'
op|','
name|'power_state'
op|'='
name|'power_state'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'_return_server'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|return_server_with_uuid_and_power_state
dedent|''
name|'def'
name|'return_server_with_uuid_and_power_state'
op|'('
name|'power_state'
op|')'
op|':'
newline|'\n'
DECL|function|_return_server
indent|'    '
name|'def'
name|'_return_server'
op|'('
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'stub_instance'
op|'('
name|'id'
op|','
name|'uuid'
op|'='
name|'FAKE_UUID'
op|','
name|'power_state'
op|'='
name|'power_state'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'_return_server'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|return_servers
dedent|''
name|'def'
name|'return_servers'
op|'('
name|'context'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'['
name|'stub_instance'
op|'('
name|'i'
op|','
string|"'fake'"
op|','
string|"'fake'"
op|')'
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
number|'5'
op|')'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|return_servers_by_reservation
dedent|''
name|'def'
name|'return_servers_by_reservation'
op|'('
name|'context'
op|','
name|'reservation_id'
op|'='
string|'""'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'['
name|'stub_instance'
op|'('
name|'i'
op|','
name|'reservation_id'
op|')'
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
number|'5'
op|')'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|return_servers_by_reservation_empty
dedent|''
name|'def'
name|'return_servers_by_reservation_empty'
op|'('
name|'context'
op|','
name|'reservation_id'
op|'='
string|'""'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|return_servers_from_child_zones_empty
dedent|''
name|'def'
name|'return_servers_from_child_zones_empty'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|return_servers_from_child_zones
dedent|''
name|'def'
name|'return_servers_from_child_zones'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
DECL|class|Server
indent|'    '
name|'class'
name|'Server'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'zones'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'zone'
name|'in'
name|'xrange'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
DECL|variable|servers
indent|'        '
name|'servers'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'server_id'
name|'in'
name|'xrange'
op|'('
number|'5'
op|')'
op|':'
newline|'\n'
DECL|variable|server
indent|'            '
name|'server'
op|'='
name|'Server'
op|'('
op|')'
newline|'\n'
name|'server'
op|'.'
name|'_info'
op|'='
name|'stub_instance'
op|'('
name|'server_id'
op|','
name|'reservation_id'
op|'='
string|'"child"'
op|')'
newline|'\n'
name|'servers'
op|'.'
name|'append'
op|'('
name|'server'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'zones'
op|'.'
name|'append'
op|'('
op|'('
string|'"Zone%d"'
op|'%'
name|'zone'
op|','
name|'servers'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'zones'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|return_security_group
dedent|''
name|'def'
name|'return_security_group'
op|'('
name|'context'
op|','
name|'instance_id'
op|','
name|'security_group_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_update
dedent|''
name|'def'
name|'instance_update'
op|'('
name|'context'
op|','
name|'instance_id'
op|','
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'stub_instance'
op|'('
name|'instance_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|instance_addresses
dedent|''
name|'def'
name|'instance_addresses'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|stub_instance
dedent|''
name|'def'
name|'stub_instance'
op|'('
name|'id'
op|','
name|'user_id'
op|'='
string|"'fake'"
op|','
name|'project_id'
op|'='
string|"'fake'"
op|','
name|'private_address'
op|'='
name|'None'
op|','
nl|'\n'
name|'public_addresses'
op|'='
name|'None'
op|','
name|'host'
op|'='
name|'None'
op|','
name|'power_state'
op|'='
number|'0'
op|','
nl|'\n'
name|'reservation_id'
op|'='
string|'""'
op|','
name|'uuid'
op|'='
name|'FAKE_UUID'
op|','
name|'image_ref'
op|'='
string|'"10"'
op|','
nl|'\n'
name|'flavor_id'
op|'='
string|'"1"'
op|','
name|'interfaces'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'metadata'
op|'='
op|'['
op|']'
newline|'\n'
name|'metadata'
op|'.'
name|'append'
op|'('
name|'InstanceMetadata'
op|'('
name|'key'
op|'='
string|"'seq'"
op|','
name|'value'
op|'='
name|'id'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'interfaces'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'interfaces'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'inst_type'
op|'='
name|'instance_types'
op|'.'
name|'get_instance_type_by_flavor_id'
op|'('
name|'int'
op|'('
name|'flavor_id'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'public_addresses'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'public_addresses'
op|'='
name|'list'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'host'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'host'
op|'='
name|'str'
op|'('
name|'host'
op|')'
newline|'\n'
nl|'\n'
comment|"# ReservationID isn't sent back, hack it in there."
nl|'\n'
dedent|''
name|'server_name'
op|'='
string|'"server%s"'
op|'%'
name|'id'
newline|'\n'
name|'if'
name|'reservation_id'
op|'!='
string|'""'
op|':'
newline|'\n'
indent|'        '
name|'server_name'
op|'='
string|'"reservation_%s"'
op|'%'
op|'('
name|'reservation_id'
op|','
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'instance'
op|'='
op|'{'
nl|'\n'
string|'"id"'
op|':'
name|'int'
op|'('
name|'id'
op|')'
op|','
nl|'\n'
string|'"created_at"'
op|':'
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2010'
op|','
number|'10'
op|','
number|'10'
op|','
number|'12'
op|','
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
string|'"updated_at"'
op|':'
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2010'
op|','
number|'11'
op|','
number|'11'
op|','
number|'11'
op|','
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
string|'"admin_pass"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"user_id"'
op|':'
name|'user_id'
op|','
nl|'\n'
string|'"project_id"'
op|':'
name|'project_id'
op|','
nl|'\n'
string|'"image_ref"'
op|':'
name|'image_ref'
op|','
nl|'\n'
string|'"kernel_id"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"ramdisk_id"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"launch_index"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"key_name"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"key_data"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"state"'
op|':'
name|'power_state'
op|','
nl|'\n'
string|'"state_description"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"memory_mb"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"vcpus"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"local_gb"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"hostname"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"host"'
op|':'
name|'host'
op|','
nl|'\n'
string|'"instance_type"'
op|':'
name|'dict'
op|'('
name|'inst_type'
op|')'
op|','
nl|'\n'
string|'"user_data"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"reservation_id"'
op|':'
name|'reservation_id'
op|','
nl|'\n'
string|'"mac_address"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"scheduled_at"'
op|':'
name|'utils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|','
nl|'\n'
string|'"launched_at"'
op|':'
name|'utils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|','
nl|'\n'
string|'"terminated_at"'
op|':'
name|'utils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|','
nl|'\n'
string|'"availability_zone"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"display_name"'
op|':'
name|'server_name'
op|','
nl|'\n'
string|'"display_description"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"locked"'
op|':'
name|'False'
op|','
nl|'\n'
string|'"metadata"'
op|':'
name|'metadata'
op|','
nl|'\n'
string|'"uuid"'
op|':'
name|'uuid'
op|','
nl|'\n'
string|'"virtual_interfaces"'
op|':'
name|'interfaces'
op|'}'
newline|'\n'
nl|'\n'
name|'instance'
op|'['
string|'"fixed_ips"'
op|']'
op|'='
op|'{'
nl|'\n'
string|'"address"'
op|':'
name|'private_address'
op|','
nl|'\n'
string|'"floating_ips"'
op|':'
op|'['
op|'{'
string|'"address"'
op|':'
name|'ip'
op|'}'
name|'for'
name|'ip'
name|'in'
name|'public_addresses'
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'return'
name|'instance'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_compute_api
dedent|''
name|'def'
name|'fake_compute_api'
op|'('
name|'cls'
op|','
name|'req'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|find_host
dedent|''
name|'def'
name|'find_host'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
string|'"nova"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MockSetAdminPassword
dedent|''
name|'class'
name|'MockSetAdminPassword'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance_id'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'password'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
name|'password'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance_id'
op|'='
name|'instance_id'
newline|'\n'
name|'self'
op|'.'
name|'password'
op|'='
name|'password'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersTest
dedent|''
dedent|''
name|'class'
name|'ServersTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'maxDiff'
op|'='
name|'None'
newline|'\n'
name|'super'
op|'('
name|'ServersTest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'verbose'
op|'='
name|'True'
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_out_networking'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_out_rate_limiting'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_out_key_pair_funcs'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_out_image_service'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'utils'
op|','
string|"'gen_uuid'"
op|','
name|'fake_gen_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get_all_by_filters'"
op|','
nl|'\n'
name|'return_servers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get'"
op|','
name|'return_server_by_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
nl|'\n'
name|'return_server_by_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get_all_by_project'"
op|','
nl|'\n'
name|'return_servers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_add_security_group'"
op|','
nl|'\n'
name|'return_security_group'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_update'"
op|','
name|'instance_update'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get_fixed_addresses'"
op|','
nl|'\n'
name|'instance_addresses'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get_floating_address'"
op|','
nl|'\n'
name|'instance_addresses'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'API'
op|','
string|"'pause'"
op|','
name|'fake_compute_api'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'API'
op|','
string|"'unpause'"
op|','
name|'fake_compute_api'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'API'
op|','
string|"'suspend'"
op|','
name|'fake_compute_api'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'API'
op|','
string|"'resume'"
op|','
name|'fake_compute_api'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'API'
op|','
string|'"get_diagnostics"'
op|','
name|'fake_compute_api'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'API'
op|','
string|'"get_actions"'
op|','
name|'fake_compute_api'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'webreq'
op|'='
name|'common'
op|'.'
name|'webob_factory'
op|'('
string|"'/v1.0/servers'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_by_id
dedent|''
name|'def'
name|'test_get_server_by_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'name'"
op|']'
op|','
string|"'server1'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_by_uuid
dedent|''
name|'def'
name|'test_get_server_by_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        The steps involved with resolving a UUID are pretty complicated;\n        here\'s what\'s happening in this scenario:\n\n        1. Show is calling `routing_get`\n\n        2. `routing_get` is wrapped by `reroute_compute` which does the work\n           of resolving requests to child zones.\n\n        3. `reroute_compute` looks up the UUID by hitting the stub\n           (returns_server_by_uuid)\n\n        4. Since the stub return that the record exists, `reroute_compute`\n           considers the request to be \'zone local\', so it replaces the UUID\n           in the argument list with an integer ID and then calls the inner\n           function (\'get\').\n\n        5. The call to `get` hits the other stub \'returns_server_by_id` which\n           has the UUID set to FAKE_UUID\n\n        So, counterintuitively, we call `get` twice on the `show` command.\n        """'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/%s'"
op|'%'
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'uuid'"
op|']'
op|','
name|'FAKE_UUID'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'name'"
op|']'
op|','
string|"'server1'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_by_id_v1_1
dedent|''
name|'def'
name|'test_get_server_by_id_v1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_bookmark'
op|'='
string|'"http://localhost/fake/images/10"'
newline|'\n'
name|'flavor_ref'
op|'='
string|'"http://localhost/v1.1/fake/flavors/1"'
newline|'\n'
name|'flavor_id'
op|'='
string|'"1"'
newline|'\n'
name|'flavor_bookmark'
op|'='
string|'"http://localhost/fake/flavors/1"'
newline|'\n'
nl|'\n'
name|'public_ip'
op|'='
string|"'192.168.0.3'"
newline|'\n'
name|'private_ip'
op|'='
string|"'172.19.0.1'"
newline|'\n'
name|'interfaces'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'label'"
op|':'
string|"'public'"
op|'}'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
name|'public_ip'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'label'"
op|':'
string|"'private'"
op|'}'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
name|'private_ip'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'new_return_server'
op|'='
name|'return_server_with_attributes'
op|'('
nl|'\n'
name|'interfaces'
op|'='
name|'interfaces'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get'"
op|','
name|'new_return_server'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers/1'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'expected_server'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"uuid"'
op|':'
name|'FAKE_UUID'
op|','
nl|'\n'
string|'"updated"'
op|':'
string|'"2010-11-11T11:00:00Z"'
op|','
nl|'\n'
string|'"created"'
op|':'
string|'"2010-10-10T12:00:00Z"'
op|','
nl|'\n'
string|'"progress"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"server1"'
op|','
nl|'\n'
string|'"status"'
op|':'
string|'"BUILD"'
op|','
nl|'\n'
string|'"hostId"'
op|':'
string|"''"
op|','
nl|'\n'
string|'"image"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"10"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'image_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'flavor_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"addresses"'
op|':'
op|'{'
nl|'\n'
string|'"public"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'4'
op|','
nl|'\n'
string|'"addr"'
op|':'
name|'public_ip'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|'"private"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'4'
op|','
nl|'\n'
string|'"addr"'
op|':'
name|'private_ip'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
nl|'\n'
string|'"seq"'
op|':'
string|'"1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
comment|'#FIXME(wwolf) Do we want the links to be id or uuid?'
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v1.1/fake/servers/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/servers/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'res_dict'
op|','
name|'expected_server'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_by_id_v1_1_xml
dedent|''
name|'def'
name|'test_get_server_by_id_v1_1_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_bookmark'
op|'='
string|'"http://localhost/fake/images/10"'
newline|'\n'
name|'flavor_ref'
op|'='
string|'"http://localhost/v1.1/fake/flavors/1"'
newline|'\n'
name|'flavor_id'
op|'='
string|'"1"'
newline|'\n'
name|'flavor_bookmark'
op|'='
string|'"http://localhost/fake/flavors/1"'
newline|'\n'
name|'server_href'
op|'='
string|'"http://localhost/v1.1/fake/servers/1"'
newline|'\n'
name|'server_bookmark'
op|'='
string|'"http://localhost/fake/servers/1"'
newline|'\n'
nl|'\n'
name|'public_ip'
op|'='
string|"'192.168.0.3'"
newline|'\n'
name|'private_ip'
op|'='
string|"'172.19.0.1'"
newline|'\n'
name|'interfaces'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'label'"
op|':'
string|"'public'"
op|'}'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
name|'public_ip'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'label'"
op|':'
string|"'private'"
op|'}'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
name|'private_ip'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'new_return_server'
op|'='
name|'return_server_with_attributes'
op|'('
nl|'\n'
name|'interfaces'
op|'='
name|'interfaces'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get'"
op|','
name|'new_return_server'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers/1'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Accept'"
op|']'
op|'='
string|"'application/xml'"
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'actual'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
name|'res'
op|'.'
name|'body'
op|'.'
name|'replace'
op|'('
string|"'  '"
op|','
string|"''"
op|')'
op|')'
newline|'\n'
name|'expected_uuid'
op|'='
name|'FAKE_UUID'
newline|'\n'
name|'expected_updated'
op|'='
string|'"2010-11-11T11:00:00Z"'
newline|'\n'
name|'expected_created'
op|'='
string|'"2010-10-10T12:00:00Z"'
newline|'\n'
name|'expected'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
string|'"""\n        <server id="1"\n                uuid="%(expected_uuid)s"\n                xmlns="http://docs.openstack.org/compute/api/v1.1"\n                xmlns:atom="http://www.w3.org/2005/Atom"\n                name="server1"\n                updated="%(expected_updated)s"\n                created="%(expected_created)s"\n                hostId=""\n                status="BUILD"\n                progress="0">\n            <atom:link href="%(server_href)s" rel="self"/>\n            <atom:link href="%(server_bookmark)s" rel="bookmark"/>\n            <image id="10">\n                <atom:link rel="bookmark" href="%(image_bookmark)s"/>\n            </image>\n            <flavor id="1">\n                <atom:link rel="bookmark" href="%(flavor_bookmark)s"/>\n            </flavor>\n            <metadata>\n                <meta key="seq">\n                    1\n                </meta>\n            </metadata>\n            <addresses>\n                <network id="public">\n                    <ip version="4" addr="%(public_ip)s"/>\n                </network>\n                <network id="private">\n                    <ip version="4" addr="%(private_ip)s"/>\n                </network>\n            </addresses>\n        </server>\n        """'
op|'.'
name|'replace'
op|'('
string|'"  "'
op|','
string|'""'
op|')'
op|'%'
op|'('
name|'locals'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|'.'
name|'toxml'
op|'('
op|')'
op|','
name|'actual'
op|'.'
name|'toxml'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_with_active_status_by_id_v1_1
dedent|''
name|'def'
name|'test_get_server_with_active_status_by_id_v1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_bookmark'
op|'='
string|'"http://localhost/fake/images/10"'
newline|'\n'
name|'flavor_ref'
op|'='
string|'"http://localhost/v1.1/fake/flavors/1"'
newline|'\n'
name|'flavor_id'
op|'='
string|'"1"'
newline|'\n'
name|'flavor_bookmark'
op|'='
string|'"http://localhost/fake/flavors/1"'
newline|'\n'
name|'private_ip'
op|'='
string|'"192.168.0.3"'
newline|'\n'
name|'public_ip'
op|'='
string|'"1.2.3.4"'
newline|'\n'
nl|'\n'
name|'interfaces'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'label'"
op|':'
string|"'public'"
op|'}'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
name|'public_ip'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'label'"
op|':'
string|"'private'"
op|'}'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
name|'private_ip'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'new_return_server'
op|'='
name|'return_server_with_attributes'
op|'('
nl|'\n'
name|'interfaces'
op|'='
name|'interfaces'
op|','
name|'power_state'
op|'='
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get'"
op|','
name|'new_return_server'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers/1'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'expected_server'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"uuid"'
op|':'
name|'FAKE_UUID'
op|','
nl|'\n'
string|'"updated"'
op|':'
string|'"2010-11-11T11:00:00Z"'
op|','
nl|'\n'
string|'"created"'
op|':'
string|'"2010-10-10T12:00:00Z"'
op|','
nl|'\n'
string|'"progress"'
op|':'
number|'100'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"server1"'
op|','
nl|'\n'
string|'"status"'
op|':'
string|'"ACTIVE"'
op|','
nl|'\n'
string|'"hostId"'
op|':'
string|"''"
op|','
nl|'\n'
string|'"image"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"10"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'image_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'flavor_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"addresses"'
op|':'
op|'{'
nl|'\n'
string|'"public"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'4'
op|','
nl|'\n'
string|'"addr"'
op|':'
name|'public_ip'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|'"private"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'4'
op|','
nl|'\n'
string|'"addr"'
op|':'
name|'private_ip'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
nl|'\n'
string|'"seq"'
op|':'
string|'"1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v1.1/fake/servers/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/servers/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'res_dict'
op|','
name|'expected_server'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_with_id_image_ref_by_id_v1_1
dedent|''
name|'def'
name|'test_get_server_with_id_image_ref_by_id_v1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_ref'
op|'='
string|'"10"'
newline|'\n'
name|'image_bookmark'
op|'='
string|'"http://localhost/fake/images/10"'
newline|'\n'
name|'flavor_ref'
op|'='
string|'"http://localhost/v1.1/fake/flavors/1"'
newline|'\n'
name|'flavor_id'
op|'='
string|'"1"'
newline|'\n'
name|'flavor_bookmark'
op|'='
string|'"http://localhost/fake/flavors/1"'
newline|'\n'
name|'private_ip'
op|'='
string|'"192.168.0.3"'
newline|'\n'
name|'public_ip'
op|'='
string|'"1.2.3.4"'
newline|'\n'
nl|'\n'
name|'interfaces'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'label'"
op|':'
string|"'public'"
op|'}'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
name|'public_ip'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'label'"
op|':'
string|"'private'"
op|'}'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
name|'private_ip'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'new_return_server'
op|'='
name|'return_server_with_attributes'
op|'('
nl|'\n'
name|'interfaces'
op|'='
name|'interfaces'
op|','
name|'power_state'
op|'='
number|'1'
op|','
name|'image_ref'
op|'='
name|'image_ref'
op|','
nl|'\n'
name|'flavor_id'
op|'='
name|'flavor_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get'"
op|','
name|'new_return_server'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers/1'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'expected_server'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"uuid"'
op|':'
name|'FAKE_UUID'
op|','
nl|'\n'
string|'"updated"'
op|':'
string|'"2010-11-11T11:00:00Z"'
op|','
nl|'\n'
string|'"created"'
op|':'
string|'"2010-10-10T12:00:00Z"'
op|','
nl|'\n'
string|'"progress"'
op|':'
number|'100'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"server1"'
op|','
nl|'\n'
string|'"status"'
op|':'
string|'"ACTIVE"'
op|','
nl|'\n'
string|'"hostId"'
op|':'
string|"''"
op|','
nl|'\n'
string|'"image"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"10"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'image_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'flavor_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"addresses"'
op|':'
op|'{'
nl|'\n'
string|'"public"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'4'
op|','
nl|'\n'
string|'"addr"'
op|':'
name|'public_ip'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|'"private"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'4'
op|','
nl|'\n'
string|'"addr"'
op|':'
name|'private_ip'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
nl|'\n'
string|'"seq"'
op|':'
string|'"1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v1.1/fake/servers/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/servers/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'res_dict'
op|','
name|'expected_server'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_by_id_with_addresses_xml
dedent|''
name|'def'
name|'test_get_server_by_id_with_addresses_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'private'
op|'='
string|'"192.168.0.3"'
newline|'\n'
name|'public'
op|'='
op|'['
string|'"1.2.3.4"'
op|']'
newline|'\n'
name|'new_return_server'
op|'='
name|'return_server_with_addresses'
op|'('
name|'private'
op|','
name|'public'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get'"
op|','
name|'new_return_server'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Accept'"
op|']'
op|'='
string|"'application/xml'"
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'dom'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'server'
op|'='
name|'dom'
op|'.'
name|'childNodes'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'nodeName'
op|','
string|"'server'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'getAttribute'
op|'('
string|"'id'"
op|')'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'getAttribute'
op|'('
string|"'name'"
op|')'
op|','
string|"'server1'"
op|')'
newline|'\n'
op|'('
name|'public'
op|','
op|')'
op|'='
name|'server'
op|'.'
name|'getElementsByTagName'
op|'('
string|"'public'"
op|')'
newline|'\n'
op|'('
name|'ip'
op|','
op|')'
op|'='
name|'public'
op|'.'
name|'getElementsByTagName'
op|'('
string|"'ip'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'ip'
op|'.'
name|'getAttribute'
op|'('
string|"'addr'"
op|')'
op|','
string|"'1.2.3.4'"
op|')'
newline|'\n'
op|'('
name|'private'
op|','
op|')'
op|'='
name|'server'
op|'.'
name|'getElementsByTagName'
op|'('
string|"'private'"
op|')'
newline|'\n'
op|'('
name|'ip'
op|','
op|')'
op|'='
name|'private'
op|'.'
name|'getElementsByTagName'
op|'('
string|"'ip'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'ip'
op|'.'
name|'getAttribute'
op|'('
string|"'addr'"
op|')'
op|','
string|"'192.168.0.3'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_by_id_with_addresses
dedent|''
name|'def'
name|'test_get_server_by_id_with_addresses'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'private'
op|'='
string|'"192.168.0.3"'
newline|'\n'
name|'public'
op|'='
op|'['
string|'"1.2.3.4"'
op|']'
newline|'\n'
name|'new_return_server'
op|'='
name|'return_server_with_addresses'
op|'('
name|'private'
op|','
name|'public'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get'"
op|','
name|'new_return_server'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'name'"
op|']'
op|','
string|"'server1'"
op|')'
newline|'\n'
name|'addresses'
op|'='
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'addresses'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'addresses'
op|'['
string|'"public"'
op|']'
op|')'
op|','
name|'len'
op|'('
name|'public'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'addresses'
op|'['
string|'"public"'
op|']'
op|'['
number|'0'
op|']'
op|','
name|'public'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'addresses'
op|'['
string|'"private"'
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'addresses'
op|'['
string|'"private"'
op|']'
op|'['
number|'0'
op|']'
op|','
name|'private'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_addresses_v1_0
dedent|''
name|'def'
name|'test_get_server_addresses_v1_0'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'private'
op|'='
string|"'192.168.0.3'"
newline|'\n'
name|'public'
op|'='
op|'['
string|"'1.2.3.4'"
op|']'
newline|'\n'
name|'new_return_server'
op|'='
name|'return_server_with_addresses'
op|'('
name|'private'
op|','
name|'public'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get'"
op|','
name|'new_return_server'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1/ips'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|','
op|'{'
nl|'\n'
string|"'addresses'"
op|':'
op|'{'
string|"'public'"
op|':'
name|'public'
op|','
string|"'private'"
op|':'
op|'['
name|'private'
op|']'
op|'}'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_addresses_xml_v1_0
dedent|''
name|'def'
name|'test_get_server_addresses_xml_v1_0'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'private_expected'
op|'='
string|'"192.168.0.3"'
newline|'\n'
name|'public_expected'
op|'='
op|'['
string|'"1.2.3.4"'
op|']'
newline|'\n'
name|'new_return_server'
op|'='
name|'return_server_with_addresses'
op|'('
name|'private_expected'
op|','
nl|'\n'
name|'public_expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get'"
op|','
name|'new_return_server'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1/ips'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Accept'"
op|']'
op|'='
string|"'application/xml'"
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'dom'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
op|'('
name|'addresses'
op|','
op|')'
op|'='
name|'dom'
op|'.'
name|'childNodes'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'addresses'
op|'.'
name|'nodeName'
op|','
string|"'addresses'"
op|')'
newline|'\n'
op|'('
name|'public'
op|','
op|')'
op|'='
name|'addresses'
op|'.'
name|'getElementsByTagName'
op|'('
string|"'public'"
op|')'
newline|'\n'
op|'('
name|'ip'
op|','
op|')'
op|'='
name|'public'
op|'.'
name|'getElementsByTagName'
op|'('
string|"'ip'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'ip'
op|'.'
name|'getAttribute'
op|'('
string|"'addr'"
op|')'
op|','
name|'public_expected'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
op|'('
name|'private'
op|','
op|')'
op|'='
name|'addresses'
op|'.'
name|'getElementsByTagName'
op|'('
string|"'private'"
op|')'
newline|'\n'
op|'('
name|'ip'
op|','
op|')'
op|'='
name|'private'
op|'.'
name|'getElementsByTagName'
op|'('
string|"'ip'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'ip'
op|'.'
name|'getAttribute'
op|'('
string|"'addr'"
op|')'
op|','
name|'private_expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_addresses_public_v1_0
dedent|''
name|'def'
name|'test_get_server_addresses_public_v1_0'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'private'
op|'='
string|'"192.168.0.3"'
newline|'\n'
name|'public'
op|'='
op|'['
string|'"1.2.3.4"'
op|']'
newline|'\n'
name|'new_return_server'
op|'='
name|'return_server_with_addresses'
op|'('
name|'private'
op|','
name|'public'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get'"
op|','
name|'new_return_server'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1/ips/public'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|','
op|'{'
string|"'public'"
op|':'
name|'public'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_addresses_private_v1_0
dedent|''
name|'def'
name|'test_get_server_addresses_private_v1_0'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'private'
op|'='
string|'"192.168.0.3"'
newline|'\n'
name|'public'
op|'='
op|'['
string|'"1.2.3.4"'
op|']'
newline|'\n'
name|'new_return_server'
op|'='
name|'return_server_with_addresses'
op|'('
name|'private'
op|','
name|'public'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get'"
op|','
name|'new_return_server'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1/ips/private'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|','
op|'{'
string|"'private'"
op|':'
op|'['
name|'private'
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_addresses_public_xml_v1_0
dedent|''
name|'def'
name|'test_get_server_addresses_public_xml_v1_0'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'private'
op|'='
string|'"192.168.0.3"'
newline|'\n'
name|'public'
op|'='
op|'['
string|'"1.2.3.4"'
op|']'
newline|'\n'
name|'new_return_server'
op|'='
name|'return_server_with_addresses'
op|'('
name|'private'
op|','
name|'public'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get'"
op|','
name|'new_return_server'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1/ips/public'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Accept'"
op|']'
op|'='
string|"'application/xml'"
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'dom'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
op|'('
name|'public_node'
op|','
op|')'
op|'='
name|'dom'
op|'.'
name|'childNodes'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'public_node'
op|'.'
name|'nodeName'
op|','
string|"'public'"
op|')'
newline|'\n'
op|'('
name|'ip'
op|','
op|')'
op|'='
name|'public_node'
op|'.'
name|'getElementsByTagName'
op|'('
string|"'ip'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'ip'
op|'.'
name|'getAttribute'
op|'('
string|"'addr'"
op|')'
op|','
name|'public'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_addresses_private_xml_v1_0
dedent|''
name|'def'
name|'test_get_server_addresses_private_xml_v1_0'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'private'
op|'='
string|'"192.168.0.3"'
newline|'\n'
name|'public'
op|'='
op|'['
string|'"1.2.3.4"'
op|']'
newline|'\n'
name|'new_return_server'
op|'='
name|'return_server_with_addresses'
op|'('
name|'private'
op|','
name|'public'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get'"
op|','
name|'new_return_server'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1/ips/private'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Accept'"
op|']'
op|'='
string|"'application/xml'"
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'dom'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
op|'('
name|'private_node'
op|','
op|')'
op|'='
name|'dom'
op|'.'
name|'childNodes'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'private_node'
op|'.'
name|'nodeName'
op|','
string|"'private'"
op|')'
newline|'\n'
op|'('
name|'ip'
op|','
op|')'
op|'='
name|'private_node'
op|'.'
name|'getElementsByTagName'
op|'('
string|"'ip'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'ip'
op|'.'
name|'getAttribute'
op|'('
string|"'addr'"
op|')'
op|','
name|'private'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_by_id_with_addresses_v1_1
dedent|''
name|'def'
name|'test_get_server_by_id_with_addresses_v1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_ipv6'
op|'='
name|'True'
op|')'
newline|'\n'
name|'interfaces'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'label'"
op|':'
string|"'network_1'"
op|'}'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'192.168.0.3'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'192.168.0.4'"
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'label'"
op|':'
string|"'network_2'"
op|'}'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'172.19.0.1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'172.19.0.2'"
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'fixed_ipv6'"
op|':'
string|"'2001:4860::12'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'new_return_server'
op|'='
name|'return_server_with_attributes'
op|'('
nl|'\n'
name|'interfaces'
op|'='
name|'interfaces'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get'"
op|','
name|'new_return_server'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers/1'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'name'"
op|']'
op|','
string|"'server1'"
op|')'
newline|'\n'
name|'addresses'
op|'='
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'addresses'"
op|']'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'network_1'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'addr'"
op|':'
string|"'192.168.0.3'"
op|','
string|"'version'"
op|':'
number|'4'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'addr'"
op|':'
string|"'192.168.0.4'"
op|','
string|"'version'"
op|':'
number|'4'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'network_2'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'addr'"
op|':'
string|"'172.19.0.1'"
op|','
string|"'version'"
op|':'
number|'4'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'addr'"
op|':'
string|"'172.19.0.2'"
op|','
string|"'version'"
op|':'
number|'4'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'addr'"
op|':'
string|"'2001:4860::12'"
op|','
string|"'version'"
op|':'
number|'6'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'addresses'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_by_id_with_addresses_v1_1_ipv6_disabled
dedent|''
name|'def'
name|'test_get_server_by_id_with_addresses_v1_1_ipv6_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_ipv6'
op|'='
name|'False'
op|')'
newline|'\n'
name|'interfaces'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'label'"
op|':'
string|"'network_1'"
op|'}'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'192.168.0.3'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'192.168.0.4'"
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'label'"
op|':'
string|"'network_2'"
op|'}'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'172.19.0.1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'172.19.0.2'"
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'fixed_ipv6'"
op|':'
string|"'2001:4860::12'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'new_return_server'
op|'='
name|'return_server_with_attributes'
op|'('
nl|'\n'
name|'interfaces'
op|'='
name|'interfaces'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get'"
op|','
name|'new_return_server'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers/1'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'id'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'name'"
op|']'
op|','
string|"'server1'"
op|')'
newline|'\n'
name|'addresses'
op|'='
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'addresses'"
op|']'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'network_1'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'addr'"
op|':'
string|"'192.168.0.3'"
op|','
string|"'version'"
op|':'
number|'4'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'addr'"
op|':'
string|"'192.168.0.4'"
op|','
string|"'version'"
op|':'
number|'4'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'network_2'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'addr'"
op|':'
string|"'172.19.0.1'"
op|','
string|"'version'"
op|':'
number|'4'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'addr'"
op|':'
string|"'172.19.0.2'"
op|','
string|"'version'"
op|':'
number|'4'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'addresses'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_addresses_v1_1
dedent|''
name|'def'
name|'test_get_server_addresses_v1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_ipv6'
op|'='
name|'True'
op|')'
newline|'\n'
name|'interfaces'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'label'"
op|':'
string|"'network_1'"
op|'}'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'192.168.0.3'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'192.168.0.4'"
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'label'"
op|':'
string|"'network_2'"
op|'}'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'address'"
op|':'
string|"'172.19.0.1'"
op|','
nl|'\n'
string|"'floating_ips'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'1.2.3.4'"
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'172.19.0.2'"
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'fixed_ipv6'"
op|':'
string|"'2001:4860::12'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'_return_vifs'
op|'='
name|'return_virtual_interface_by_instance'
op|'('
name|'interfaces'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
nl|'\n'
string|"'virtual_interface_get_by_instance'"
op|','
nl|'\n'
name|'_return_vifs'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers/1/ips'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'addresses'"
op|':'
op|'{'
nl|'\n'
string|"'network_1'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'192.168.0.3'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'192.168.0.4'"
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'network_2'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'172.19.0.1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'1.2.3.4'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'172.19.0.2'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'6'
op|','
string|"'addr'"
op|':'
string|"'2001:4860::12'"
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_addresses_single_network_v1_1
dedent|''
name|'def'
name|'test_get_server_addresses_single_network_v1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'use_ipv6'
op|'='
name|'True'
op|')'
newline|'\n'
name|'interfaces'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'label'"
op|':'
string|"'network_1'"
op|'}'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'192.168.0.3'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'192.168.0.4'"
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'network'"
op|':'
op|'{'
string|"'label'"
op|':'
string|"'network_2'"
op|'}'
op|','
nl|'\n'
string|"'fixed_ips'"
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'address'"
op|':'
string|"'172.19.0.1'"
op|','
nl|'\n'
string|"'floating_ips'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'1.2.3.4'"
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'address'"
op|':'
string|"'172.19.0.2'"
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'fixed_ipv6'"
op|':'
string|"'2001:4860::12'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'_return_vifs'
op|'='
name|'return_virtual_interface_by_instance'
op|'('
name|'interfaces'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
nl|'\n'
string|"'virtual_interface_get_by_instance'"
op|','
nl|'\n'
name|'_return_vifs'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers/1/ips/network_2'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'network_2'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'172.19.0.1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'1.2.3.4'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'4'
op|','
string|"'addr'"
op|':'
string|"'172.19.0.2'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
number|'6'
op|','
string|"'addr'"
op|':'
string|"'2001:4860::12'"
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_addresses_nonexistant_network_v1_1
dedent|''
name|'def'
name|'test_get_server_addresses_nonexistant_network_v1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_return_vifs'
op|'='
name|'return_virtual_interface_by_instance'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
nl|'\n'
string|"'virtual_interface_get_by_instance'"
op|','
nl|'\n'
name|'_return_vifs'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers/1/ips/network_0'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_addresses_nonexistant_server_v1_1
dedent|''
name|'def'
name|'test_get_server_addresses_nonexistant_server_v1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_return_vifs'
op|'='
name|'return_virtual_interface_instance_nonexistant'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
nl|'\n'
string|"'virtual_interface_get_by_instance'"
op|','
nl|'\n'
name|'_return_vifs'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers/600/ips'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_list
dedent|''
name|'def'
name|'test_get_server_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|')'
op|','
number|'5'
op|')'
newline|'\n'
name|'i'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'s'
name|'in'
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'id'"
op|']'
op|','
name|'i'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'name'"
op|']'
op|','
string|"'server%d'"
op|'%'
name|'i'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'.'
name|'get'
op|'('
string|"'imageId'"
op|','
name|'None'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'i'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_list_with_reservation_id
dedent|''
dedent|''
name|'def'
name|'test_get_server_list_with_reservation_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get_all_by_reservation'"
op|','
nl|'\n'
name|'return_servers_by_reservation'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'scheduler'
op|'.'
name|'api'
op|','
string|"'call_zone_method'"
op|','
nl|'\n'
name|'return_servers_from_child_zones'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers?reservation_id=foo'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'i'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'s'
name|'in'
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'_is_precooked'"
name|'in'
name|'s'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'.'
name|'get'
op|'('
string|"'reservation_id'"
op|')'
op|','
string|"'child'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
string|"'server%d'"
op|'%'
name|'i'
op|')'
newline|'\n'
name|'i'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_list_with_reservation_id_empty
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_get_server_list_with_reservation_id_empty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get_all_by_reservation'"
op|','
nl|'\n'
name|'return_servers_by_reservation_empty'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'scheduler'
op|'.'
name|'api'
op|','
string|"'call_zone_method'"
op|','
nl|'\n'
name|'return_servers_from_child_zones_empty'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/detail?reservation_id=foo'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'i'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'s'
name|'in'
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'_is_precooked'"
name|'in'
name|'s'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'.'
name|'get'
op|'('
string|"'reservation_id'"
op|')'
op|','
string|"'child'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
string|"'server%d'"
op|'%'
name|'i'
op|')'
newline|'\n'
name|'i'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_list_with_reservation_id_details
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_get_server_list_with_reservation_id_details'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get_all_by_reservation'"
op|','
nl|'\n'
name|'return_servers_by_reservation'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'scheduler'
op|'.'
name|'api'
op|','
string|"'call_zone_method'"
op|','
nl|'\n'
name|'return_servers_from_child_zones'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/detail?reservation_id=foo'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'i'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'s'
name|'in'
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'_is_precooked'"
name|'in'
name|'s'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'.'
name|'get'
op|'('
string|"'reservation_id'"
op|')'
op|','
string|"'child'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
string|"'server%d'"
op|'%'
name|'i'
op|')'
newline|'\n'
name|'i'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_list_v1_1
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_get_server_list_v1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|')'
op|','
number|'5'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'s'
name|'in'
name|'enumerate'
op|'('
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'id'"
op|']'
op|','
name|'i'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'name'"
op|']'
op|','
string|"'server%d'"
op|'%'
name|'i'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'.'
name|'get'
op|'('
string|"'image'"
op|','
name|'None'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'expected_links'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v1.1/fake/servers/%s"'
op|'%'
name|'s'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/fake/servers/%s"'
op|'%'
name|'s'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'links'"
op|']'
op|','
name|'expected_links'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_limit
dedent|''
dedent|''
name|'def'
name|'test_get_servers_with_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers?limit=3'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'s'
op|'['
string|"'id'"
op|']'
name|'for'
name|'s'
name|'in'
name|'servers'
op|']'
op|','
op|'['
number|'0'
op|','
number|'1'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers?limit=aaa'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'limit'"
name|'in'
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_offset
dedent|''
name|'def'
name|'test_get_servers_with_offset'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers?offset=2'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'s'
op|'['
string|"'id'"
op|']'
name|'for'
name|'s'
name|'in'
name|'servers'
op|']'
op|','
op|'['
number|'2'
op|','
number|'3'
op|','
number|'4'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers?offset=aaa'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'offset'"
name|'in'
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_limit_and_offset
dedent|''
name|'def'
name|'test_get_servers_with_limit_and_offset'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers?limit=2&offset=1'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'s'
op|'['
string|"'id'"
op|']'
name|'for'
name|'s'
name|'in'
name|'servers'
op|']'
op|','
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_bad_limit
dedent|''
name|'def'
name|'test_get_servers_with_bad_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers?limit=asdf&offset=1'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res'
op|'.'
name|'body'
op|'.'
name|'find'
op|'('
string|"'limit param'"
op|')'
op|'>'
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_bad_offset
dedent|''
name|'def'
name|'test_get_servers_with_bad_offset'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers?limit=2&offset=asdf'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res'
op|'.'
name|'body'
op|'.'
name|'find'
op|'('
string|"'offset param'"
op|')'
op|'>'
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_marker
dedent|''
name|'def'
name|'test_get_servers_with_marker'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers?marker=2'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'s'
op|'['
string|"'name'"
op|']'
name|'for'
name|'s'
name|'in'
name|'servers'
op|']'
op|','
op|'['
string|'"server3"'
op|','
string|'"server4"'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_limit_and_marker
dedent|''
name|'def'
name|'test_get_servers_with_limit_and_marker'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers?limit=2&marker=1'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'s'
op|'['
string|"'name'"
op|']'
name|'for'
name|'s'
name|'in'
name|'servers'
op|']'
op|','
op|'['
string|"'server2'"
op|','
string|"'server3'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_bad_marker
dedent|''
name|'def'
name|'test_get_servers_with_bad_marker'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers?limit=2&marker=asdf'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res'
op|'.'
name|'body'
op|'.'
name|'find'
op|'('
string|"'marker param'"
op|')'
op|'>'
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_bad_option_v1_0
dedent|''
name|'def'
name|'test_get_servers_with_bad_option_v1_0'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# 1.0 API ignores unknown options'
nl|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
name|'stub_instance'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers?unknownoption=whee'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
number|'100'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_with_bad_option_v1_1
dedent|''
name|'def'
name|'test_get_servers_with_bad_option_v1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# 1.1 API also ignores unknown options'
nl|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
name|'stub_instance'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/servers?unknownoption=whee'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
number|'100'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_allows_image_v1_1
dedent|''
name|'def'
name|'test_get_servers_allows_image_v1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'search_opts'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'image'"
name|'in'
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'image'"
op|']'
op|','
string|"'12345'"
op|')'
newline|'\n'
name|'return'
op|'['
name|'stub_instance'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'allow_admin_api'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/servers?image=12345'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
comment|'# The following assert will fail if either of the asserts in'
nl|'\n'
comment|'# fake_get_all() fail'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
number|'100'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_allows_flavor_v1_1
dedent|''
name|'def'
name|'test_get_servers_allows_flavor_v1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'search_opts'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'flavor'"
name|'in'
name|'search_opts'
op|')'
newline|'\n'
comment|'# flavor is an integer ID'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'flavor'"
op|']'
op|','
string|"'12345'"
op|')'
newline|'\n'
name|'return'
op|'['
name|'stub_instance'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'allow_admin_api'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/servers?flavor=12345'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
comment|'# The following assert will fail if either of the asserts in'
nl|'\n'
comment|'# fake_get_all() fail'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
number|'100'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_allows_status_v1_1
dedent|''
name|'def'
name|'test_get_servers_allows_status_v1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'search_opts'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'state'"
name|'in'
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
name|'search_opts'
op|'['
string|"'state'"
op|']'
op|')'
op|','
nl|'\n'
name|'set'
op|'('
op|'['
name|'power_state'
op|'.'
name|'RUNNING'
op|','
name|'power_state'
op|'.'
name|'BLOCKED'
op|']'
op|')'
op|')'
newline|'\n'
name|'return'
op|'['
name|'stub_instance'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'allow_admin_api'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/servers?status=active'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
comment|'# The following assert will fail if either of the asserts in'
nl|'\n'
comment|'# fake_get_all() fail'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
number|'100'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_invalid_status_v1_1
dedent|''
name|'def'
name|'test_get_servers_invalid_status_v1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test getting servers by invalid status"""'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'allow_admin_api'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/servers?status=running'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
comment|'# The following assert will fail if either of the asserts in'
nl|'\n'
comment|'# fake_get_all() fail'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res'
op|'.'
name|'body'
op|'.'
name|'find'
op|'('
string|"'Invalid server status'"
op|')'
op|'>'
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_allows_name_v1_1
dedent|''
name|'def'
name|'test_get_servers_allows_name_v1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|fake_get_all
indent|'        '
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'search_opts'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'name'"
name|'in'
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'name'"
op|']'
op|','
string|"'whee.*'"
op|')'
newline|'\n'
name|'return'
op|'['
name|'stub_instance'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'allow_admin_api'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/servers?name=whee.*'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
comment|'# The following assert will fail if either of the asserts in'
nl|'\n'
comment|'# fake_get_all() fail'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
number|'100'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_unknown_or_admin_options1
dedent|''
name|'def'
name|'test_get_servers_unknown_or_admin_options1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test getting servers by admin-only or unknown options.\n        This tests when admin_api is off.  Make sure the admin and\n        unknown options are stripped before they get to\n        compute_api.get_all()\n        """'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'allow_admin_api'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'search_opts'
op|','
name|'None'
op|')'
newline|'\n'
comment|'# Allowed by user'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'name'"
name|'in'
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'status'"
name|'in'
name|'search_opts'
op|')'
newline|'\n'
comment|'# Allowed only by admins with admin API on'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
string|"'ip'"
name|'in'
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
string|"'unknown_option'"
name|'in'
name|'search_opts'
op|')'
newline|'\n'
name|'return'
op|'['
name|'stub_instance'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'query_str'
op|'='
string|'"name=foo&ip=10.*&status=active&unknown_option=meow"'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/servers?%s'"
op|'%'
name|'query_str'
op|')'
newline|'\n'
comment|'# Request admin context'
nl|'\n'
name|'context'
op|'='
name|'nova'
op|'.'
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'testuser'"
op|','
string|"'testproject'"
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'True'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
name|'fake_auth_context'
op|'='
name|'context'
op|')'
op|')'
newline|'\n'
comment|'# The following assert will fail if either of the asserts in'
nl|'\n'
comment|'# fake_get_all() fail'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
number|'100'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_unknown_or_admin_options2
dedent|''
name|'def'
name|'test_get_servers_unknown_or_admin_options2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test getting servers by admin-only or unknown options.\n        This tests when admin_api is on, but context is a user.\n        Make sure the admin and unknown options are stripped before\n        they get to compute_api.get_all()\n        """'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'allow_admin_api'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'search_opts'
op|','
name|'None'
op|')'
newline|'\n'
comment|'# Allowed by user'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'name'"
name|'in'
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'status'"
name|'in'
name|'search_opts'
op|')'
newline|'\n'
comment|'# Allowed only by admins with admin API on'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
string|"'ip'"
name|'in'
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
string|"'unknown_option'"
name|'in'
name|'search_opts'
op|')'
newline|'\n'
name|'return'
op|'['
name|'stub_instance'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'query_str'
op|'='
string|'"name=foo&ip=10.*&status=active&unknown_option=meow"'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/servers?%s'"
op|'%'
name|'query_str'
op|')'
newline|'\n'
comment|'# Request admin context'
nl|'\n'
name|'context'
op|'='
name|'nova'
op|'.'
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'testuser'"
op|','
string|"'testproject'"
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'False'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
name|'fake_auth_context'
op|'='
name|'context'
op|')'
op|')'
newline|'\n'
comment|'# The following assert will fail if either of the asserts in'
nl|'\n'
comment|'# fake_get_all() fail'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
number|'100'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_unknown_or_admin_options3
dedent|''
name|'def'
name|'test_get_servers_unknown_or_admin_options3'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test getting servers by admin-only or unknown options.\n        This tests when admin_api is on and context is admin.\n        All options should be passed through to compute_api.get_all()\n        """'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'allow_admin_api'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'search_opts'
op|','
name|'None'
op|')'
newline|'\n'
comment|'# Allowed by user'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'name'"
name|'in'
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'status'"
name|'in'
name|'search_opts'
op|')'
newline|'\n'
comment|'# Allowed only by admins with admin API on'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'ip'"
name|'in'
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'unknown_option'"
name|'in'
name|'search_opts'
op|')'
newline|'\n'
name|'return'
op|'['
name|'stub_instance'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'query_str'
op|'='
string|'"name=foo&ip=10.*&status=active&unknown_option=meow"'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/servers?%s'"
op|'%'
name|'query_str'
op|')'
newline|'\n'
comment|'# Request admin context'
nl|'\n'
name|'context'
op|'='
name|'nova'
op|'.'
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'testuser'"
op|','
string|"'testproject'"
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'True'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
name|'fake_auth_context'
op|'='
name|'context'
op|')'
op|')'
newline|'\n'
comment|'# The following assert will fail if either of the asserts in'
nl|'\n'
comment|'# fake_get_all() fail'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
number|'100'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_admin_allows_ip_v1_1
dedent|''
name|'def'
name|'test_get_servers_admin_allows_ip_v1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test getting servers by ip with admin_api enabled and\n        admin context\n        """'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'allow_admin_api'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'search_opts'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'ip'"
name|'in'
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'ip'"
op|']'
op|','
string|"'10\\..*'"
op|')'
newline|'\n'
name|'return'
op|'['
name|'stub_instance'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/servers?ip=10\\..*'"
op|')'
newline|'\n'
comment|'# Request admin context'
nl|'\n'
name|'context'
op|'='
name|'nova'
op|'.'
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'testuser'"
op|','
string|"'testproject'"
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'True'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
name|'fake_auth_context'
op|'='
name|'context'
op|')'
op|')'
newline|'\n'
comment|'# The following assert will fail if either of the asserts in'
nl|'\n'
comment|'# fake_get_all() fail'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
number|'100'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_servers_admin_allows_ip6_v1_1
dedent|''
name|'def'
name|'test_get_servers_admin_allows_ip6_v1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test getting servers by ip6 with admin_api enabled and\n        admin context\n        """'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'allow_admin_api'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_get_all
name|'def'
name|'fake_get_all'
op|'('
name|'compute_self'
op|','
name|'context'
op|','
name|'search_opts'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'search_opts'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'ip6'"
name|'in'
name|'search_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'search_opts'
op|'['
string|"'ip6'"
op|']'
op|','
string|"'ffff.*'"
op|')'
newline|'\n'
name|'return'
op|'['
name|'stub_instance'
op|'('
number|'100'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'API'
op|','
string|"'get_all'"
op|','
name|'fake_get_all'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/servers?ip6=ffff.*'"
op|')'
newline|'\n'
comment|'# Request admin context'
nl|'\n'
name|'context'
op|'='
name|'nova'
op|'.'
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'testuser'"
op|','
string|"'testproject'"
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'True'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
name|'fake_auth_context'
op|'='
name|'context'
op|')'
op|')'
newline|'\n'
comment|'# The following assert will fail if either of the asserts in'
nl|'\n'
comment|'# fake_get_all() fail'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'servers'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'servers'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
op|','
number|'100'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setup_for_create_instance
dedent|''
name|'def'
name|'_setup_for_create_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Shared implementation for tests below that create instance"""'
newline|'\n'
DECL|function|instance_create
name|'def'
name|'instance_create'
op|'('
name|'context'
op|','
name|'inst'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'inst_type'
op|'='
name|'instance_types'
op|'.'
name|'get_instance_type_by_flavor_id'
op|'('
number|'3'
op|')'
newline|'\n'
name|'image_ref'
op|'='
string|"'http://localhost/images/2'"
newline|'\n'
name|'return'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'display_name'"
op|':'
string|"'server_test'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
name|'FAKE_UUID'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'dict'
op|'('
name|'inst_type'
op|')'
op|','
nl|'\n'
string|"'image_ref'"
op|':'
name|'image_ref'
op|','
nl|'\n'
string|'"created_at"'
op|':'
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2010'
op|','
number|'10'
op|','
number|'10'
op|','
number|'12'
op|','
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
string|'"updated_at"'
op|':'
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2010'
op|','
number|'11'
op|','
number|'11'
op|','
number|'11'
op|','
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|server_update
dedent|''
name|'def'
name|'server_update'
op|'('
name|'context'
op|','
name|'id'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'instance_create'
op|'('
name|'context'
op|','
name|'id'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_method
dedent|''
name|'def'
name|'fake_method'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|project_get_networks
dedent|''
name|'def'
name|'project_get_networks'
op|'('
name|'context'
op|','
name|'user_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'dict'
op|'('
name|'id'
op|'='
string|"'1'"
op|','
name|'host'
op|'='
string|"'localhost'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|queue_get_for
dedent|''
name|'def'
name|'queue_get_for'
op|'('
name|'context'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'network_topic'"
newline|'\n'
nl|'\n'
DECL|function|kernel_ramdisk_mapping
dedent|''
name|'def'
name|'kernel_ramdisk_mapping'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
number|'1'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|function|image_id_from_hash
dedent|''
name|'def'
name|'image_id_from_hash'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'2'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'project_get_networks'"
op|','
nl|'\n'
name|'project_get_networks'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_create'"
op|','
name|'instance_create'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'rpc'
op|','
string|"'cast'"
op|','
name|'fake_method'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'rpc'
op|','
string|"'call'"
op|','
name|'fake_method'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_update'"
op|','
nl|'\n'
name|'server_update'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'queue_get_for'"
op|','
name|'queue_get_for'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'network'
op|'.'
name|'manager'
op|'.'
name|'VlanManager'
op|','
string|"'allocate_fixed_ip'"
op|','
nl|'\n'
name|'fake_method'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
nl|'\n'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'create_instance_helper'
op|'.'
name|'CreateInstanceHelper'
op|','
nl|'\n'
string|'"_get_kernel_ramdisk_from_image"'
op|','
name|'kernel_ramdisk_mapping'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'api'
op|'.'
name|'API'
op|','
string|'"_find_host"'
op|','
name|'find_host'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_create_instance_helper
dedent|''
name|'def'
name|'_test_create_instance_helper'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_for_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'server'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'name'
op|'='
string|"'server_test'"
op|','
name|'imageId'
op|'='
number|'3'
op|','
name|'flavorId'
op|'='
number|'2'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'hello'"
op|':'
string|"'world'"
op|','
string|"'open'"
op|':'
string|"'stack'"
op|'}'
op|','
nl|'\n'
name|'personality'
op|'='
op|'{'
op|'}'
op|')'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|'"content-type"'
op|']'
op|'='
string|'"application/json"'
newline|'\n'
nl|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
name|'server'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'16'
op|','
name|'len'
op|'('
name|'server'
op|'['
string|"'adminPass'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'server_test'"
op|','
name|'server'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'server'
op|'['
string|"'flavorId'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'server'
op|'['
string|"'imageId'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'FAKE_UUID'
op|','
name|'server'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance
dedent|''
name|'def'
name|'test_create_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_create_instance_helper'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_has_uuid
dedent|''
name|'def'
name|'test_create_instance_has_uuid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Tests at the db-layer instead of API layer since that\'s where the\n           UUID is generated\n        """'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
number|'1'
op|','
number|'1'
op|')'
newline|'\n'
name|'values'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'instance'
op|'='
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|'.'
name|'instance_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'FAKE_UUID'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_via_zones
dedent|''
name|'def'
name|'test_create_instance_via_zones'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Server generated ReservationID"""'
newline|'\n'
name|'self'
op|'.'
name|'_setup_for_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'allow_admin_api'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'server'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'name'
op|'='
string|"'server_test'"
op|','
name|'imageId'
op|'='
number|'3'
op|','
name|'flavorId'
op|'='
number|'2'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'hello'"
op|':'
string|"'world'"
op|','
string|"'open'"
op|':'
string|"'stack'"
op|'}'
op|','
nl|'\n'
name|'personality'
op|'='
op|'{'
op|'}'
op|')'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/zones/boot'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|'"content-type"'
op|']'
op|'='
string|'"application/json"'
newline|'\n'
nl|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'reservation_id'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|'['
string|"'reservation_id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'reservation_id'
op|','
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'reservation_id'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'reservation_id'
op|')'
op|'>'
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_via_zones_with_resid
dedent|''
name|'def'
name|'test_create_instance_via_zones_with_resid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""User supplied ReservationID"""'
newline|'\n'
name|'self'
op|'.'
name|'_setup_for_create_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'allow_admin_api'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'server'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'name'
op|'='
string|"'server_test'"
op|','
name|'imageId'
op|'='
number|'3'
op|','
name|'flavorId'
op|'='
number|'2'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'hello'"
op|':'
string|"'world'"
op|','
string|"'open'"
op|':'
string|"'stack'"
op|'}'
op|','
nl|'\n'
name|'personality'
op|'='
op|'{'
op|'}'
op|','
name|'reservation_id'
op|'='
string|"'myresid'"
op|')'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/zones/boot'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|'"content-type"'
op|']'
op|'='
string|'"application/json"'
newline|'\n'
nl|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'reservation_id'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|'['
string|"'reservation_id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'reservation_id'
op|','
string|'"myresid"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_no_key_pair
dedent|''
name|'def'
name|'test_create_instance_no_key_pair'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fakes'
op|'.'
name|'stub_out_key_pair_funcs'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'have_key_pair'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_create_instance_helper'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_no_name
dedent|''
name|'def'
name|'test_create_instance_no_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_for_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'body'
op|'='
op|'{'
nl|'\n'
string|"'server'"
op|':'
op|'{'
nl|'\n'
string|"'imageId'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'flavorId'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'metadata'"
op|':'
op|'{'
nl|'\n'
string|"'hello'"
op|':'
string|"'world'"
op|','
nl|'\n'
string|"'open'"
op|':'
string|"'stack'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'personality'"
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|'"content-type"'
op|']'
op|'='
string|'"application/json"'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_nonstring_name
dedent|''
name|'def'
name|'test_create_instance_nonstring_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_for_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'body'
op|'='
op|'{'
nl|'\n'
string|"'server'"
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
number|'12'
op|','
nl|'\n'
string|"'imageId'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'flavorId'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'metadata'"
op|':'
op|'{'
nl|'\n'
string|"'hello'"
op|':'
string|"'world'"
op|','
nl|'\n'
string|"'open'"
op|':'
string|"'stack'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'personality'"
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|'"content-type"'
op|']'
op|'='
string|'"application/json"'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_no_server_entity
dedent|''
name|'def'
name|'test_create_instance_no_server_entity'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_for_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'body'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|'"content-type"'
op|']'
op|'='
string|'"application/json"'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'422'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_whitespace_name
dedent|''
name|'def'
name|'test_create_instance_whitespace_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_for_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'body'
op|'='
op|'{'
nl|'\n'
string|"'server'"
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'    '"
op|','
nl|'\n'
string|"'imageId'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'flavorId'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'metadata'"
op|':'
op|'{'
nl|'\n'
string|"'hello'"
op|':'
string|"'world'"
op|','
nl|'\n'
string|"'open'"
op|':'
string|"'stack'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'personality'"
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|'"content-type"'
op|']'
op|'='
string|'"application/json"'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_v1_1
dedent|''
name|'def'
name|'test_create_instance_v1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_for_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|"# proper local hrefs must start with 'http://localhost/v1.1/'"
nl|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v1.1/images/2'"
newline|'\n'
name|'flavor_ref'
op|'='
string|"'http://localhost/flavors/3'"
newline|'\n'
name|'expected_flavor'
op|'='
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"3"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|"'http://localhost/fake/flavors/3'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'expected_image'
op|'='
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"2"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|"'http://localhost/fake/images/2'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'body'
op|'='
op|'{'
nl|'\n'
string|"'server'"
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'server_test'"
op|','
nl|'\n'
string|"'imageRef'"
op|':'
name|'image_href'
op|','
nl|'\n'
string|"'flavorRef'"
op|':'
name|'flavor_ref'
op|','
nl|'\n'
string|"'metadata'"
op|':'
op|'{'
nl|'\n'
string|"'hello'"
op|':'
string|"'world'"
op|','
nl|'\n'
string|"'open'"
op|':'
string|"'stack'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'personality'"
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"path"'
op|':'
string|'"/etc/banner.txt"'
op|','
nl|'\n'
string|'"contents"'
op|':'
string|'"MQ=="'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|'"content-type"'
op|']'
op|'='
string|'"application/json"'
newline|'\n'
nl|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
name|'server'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'16'
op|','
name|'len'
op|'('
name|'server'
op|'['
string|"'adminPass'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'server'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'server'
op|'['
string|"'progress'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'server_test'"
op|','
name|'server'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_flavor'
op|','
name|'server'
op|'['
string|"'flavor'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_image'
op|','
name|'server'
op|'['
string|"'image'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_v1_1_invalid_flavor_href
dedent|''
name|'def'
name|'test_create_instance_v1_1_invalid_flavor_href'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_for_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v1.1/images/2'"
newline|'\n'
name|'flavor_ref'
op|'='
string|"'http://localhost/v1.1/flavors/asdf'"
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'server'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'name'
op|'='
string|"'server_test'"
op|','
name|'imageRef'
op|'='
name|'image_href'
op|','
name|'flavorRef'
op|'='
name|'flavor_ref'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'hello'"
op|':'
string|"'world'"
op|','
string|"'open'"
op|':'
string|"'stack'"
op|'}'
op|','
nl|'\n'
name|'personality'
op|'='
op|'{'
op|'}'
op|')'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|'"content-type"'
op|']'
op|'='
string|'"application/json"'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_v1_1_bad_flavor_href
dedent|''
name|'def'
name|'test_create_instance_v1_1_bad_flavor_href'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_for_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v1.1/images/2'"
newline|'\n'
name|'flavor_ref'
op|'='
string|"'http://localhost/v1.1/flavors/17'"
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'server'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'name'
op|'='
string|"'server_test'"
op|','
name|'imageRef'
op|'='
name|'image_href'
op|','
name|'flavorRef'
op|'='
name|'flavor_ref'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'hello'"
op|':'
string|"'world'"
op|','
string|"'open'"
op|':'
string|"'stack'"
op|'}'
op|','
nl|'\n'
name|'personality'
op|'='
op|'{'
op|'}'
op|')'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|'"content-type"'
op|']'
op|'='
string|'"application/json"'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_v1_1_bad_href
dedent|''
name|'def'
name|'test_create_instance_v1_1_bad_href'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_for_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v1.1/images/asdf'"
newline|'\n'
name|'flavor_ref'
op|'='
string|"'http://localhost/v1.1/flavors/3'"
newline|'\n'
name|'body'
op|'='
name|'dict'
op|'('
name|'server'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'name'
op|'='
string|"'server_test'"
op|','
name|'imageRef'
op|'='
name|'image_href'
op|','
name|'flavorRef'
op|'='
name|'flavor_ref'
op|','
nl|'\n'
name|'metadata'
op|'='
op|'{'
string|"'hello'"
op|':'
string|"'world'"
op|','
string|"'open'"
op|':'
string|"'stack'"
op|'}'
op|','
nl|'\n'
name|'personality'
op|'='
op|'{'
op|'}'
op|')'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|'"content-type"'
op|']'
op|'='
string|'"application/json"'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_v1_1_local_href
dedent|''
name|'def'
name|'test_create_instance_v1_1_local_href'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_for_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image_id'
op|'='
string|'"2"'
newline|'\n'
name|'flavor_ref'
op|'='
string|"'http://localhost/v1.1/flavors/3'"
newline|'\n'
name|'expected_flavor'
op|'='
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"3"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|"'http://localhost/fake/flavors/3'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'expected_image'
op|'='
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"2"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|"'http://localhost/fake/images/2'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'body'
op|'='
op|'{'
nl|'\n'
string|"'server'"
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'server_test'"
op|','
nl|'\n'
string|"'imageRef'"
op|':'
name|'image_id'
op|','
nl|'\n'
string|"'flavorRef'"
op|':'
name|'flavor_ref'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|'"content-type"'
op|']'
op|'='
string|'"application/json"'
newline|'\n'
nl|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
name|'server'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_flavor'
op|','
name|'server'
op|'['
string|"'flavor'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_image'
op|','
name|'server'
op|'['
string|"'image'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_admin_pass_v1_0
dedent|''
name|'def'
name|'test_create_instance_with_admin_pass_v1_0'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_for_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'body'
op|'='
op|'{'
nl|'\n'
string|"'server'"
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'test-server-create'"
op|','
nl|'\n'
string|"'imageId'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'flavorId'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'adminPass'"
op|':'
string|"'testpass'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'content-type'"
op|']'
op|'='
string|'"application/json"'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'res'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'res'
op|'['
string|"'server'"
op|']'
op|'['
string|"'adminPass'"
op|']'
op|','
nl|'\n'
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'adminPass'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_v1_1_admin_pass
dedent|''
name|'def'
name|'test_create_instance_v1_1_admin_pass'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_for_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'image_href'
op|'='
string|"'http://localhost/v1.1/images/2'"
newline|'\n'
name|'flavor_ref'
op|'='
string|"'http://localhost/v1.1/flavors/3'"
newline|'\n'
name|'body'
op|'='
op|'{'
nl|'\n'
string|"'server'"
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'server_test'"
op|','
nl|'\n'
string|"'imageRef'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'flavorRef'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'adminPass'"
op|':'
string|"'testpass'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'content-type'"
op|']'
op|'='
string|'"application/json"'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
name|'server'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'server'
op|'['
string|"'adminPass'"
op|']'
op|','
name|'body'
op|'['
string|"'server'"
op|']'
op|'['
string|"'adminPass'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_v1_1_admin_pass_empty
dedent|''
name|'def'
name|'test_create_instance_v1_1_admin_pass_empty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_for_create_instance'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'body'
op|'='
op|'{'
nl|'\n'
string|"'server'"
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'server_test'"
op|','
nl|'\n'
string|"'imageRef'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'flavorRef'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'adminPass'"
op|':'
string|"''"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'content-type'"
op|']'
op|'='
string|'"application/json"'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_no_body
dedent|''
name|'def'
name|'test_update_server_no_body'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_nonstring_name
dedent|''
name|'def'
name|'test_update_nonstring_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Confirm that update is filtering params """'
newline|'\n'
name|'inst_dict'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
number|'12'
op|','
name|'adminPass'
op|'='
string|"'bacon'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'dict'
op|'('
name|'server'
op|'='
name|'inst_dict'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|'"application/json"'
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_whitespace_name
dedent|''
name|'def'
name|'test_update_whitespace_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Confirm that update is filtering params """'
newline|'\n'
name|'inst_dict'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"'   '"
op|','
name|'adminPass'
op|'='
string|"'bacon'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'dict'
op|'('
name|'server'
op|'='
name|'inst_dict'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|'"application/json"'
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_null_name
dedent|''
name|'def'
name|'test_update_null_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Confirm that update is filtering params """'
newline|'\n'
name|'inst_dict'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"''"
op|','
name|'adminPass'
op|'='
string|"'bacon'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'dict'
op|'('
name|'server'
op|'='
name|'inst_dict'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|'"application/json"'
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_v1_0
dedent|''
name|'def'
name|'test_update_server_v1_0'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_dict'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"'server_test'"
op|','
name|'adminPass'
op|'='
string|"'bacon'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'dict'
op|'('
name|'server'
op|'='
name|'inst_dict'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|server_update
name|'def'
name|'server_update'
op|'('
name|'context'
op|','
name|'id'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'filtered_dict'
op|'='
name|'dict'
op|'('
name|'display_name'
op|'='
string|"'server_test'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'params'
op|','
name|'filtered_dict'
op|')'
newline|'\n'
name|'return'
name|'filtered_dict'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_update'"
op|','
nl|'\n'
name|'server_update'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'api'
op|'.'
name|'API'
op|','
string|'"_find_host"'
op|','
name|'find_host'
op|')'
newline|'\n'
name|'mock_method'
op|'='
name|'MockSetAdminPassword'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'api'
op|'.'
name|'API'
op|','
string|"'set_admin_password'"
op|','
name|'mock_method'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|'"application/json"'
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'204'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mock_method'
op|'.'
name|'instance_id'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mock_method'
op|'.'
name|'password'
op|','
string|"'bacon'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_no_body_v1_1
dedent|''
name|'def'
name|'test_update_server_no_body_v1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers/1'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_name_v1_1
dedent|''
name|'def'
name|'test_update_server_name_v1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers/1'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|"'application/json'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
op|'{'
string|"'server'"
op|':'
op|'{'
string|"'name'"
op|':'
string|"'new-name'"
op|'}'
op|'}'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'204'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'body'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_server_adminPass_ignored_v1_1
dedent|''
name|'def'
name|'test_update_server_adminPass_ignored_v1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst_dict'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"'server_test'"
op|','
name|'adminPass'
op|'='
string|"'bacon'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'dict'
op|'('
name|'server'
op|'='
name|'inst_dict'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|server_update
name|'def'
name|'server_update'
op|'('
name|'context'
op|','
name|'id'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'filtered_dict'
op|'='
name|'dict'
op|'('
name|'display_name'
op|'='
string|"'server_test'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'params'
op|','
name|'filtered_dict'
op|')'
newline|'\n'
name|'return'
name|'filtered_dict'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_update'"
op|','
nl|'\n'
name|'server_update'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers/1'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|'"application/json"'
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'self'
op|'.'
name|'body'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'204'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'body'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_backup_schedules
dedent|''
name|'def'
name|'test_create_backup_schedules'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1/backup_schedule'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'501'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_backup_schedules
dedent|''
name|'def'
name|'test_delete_backup_schedules'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1/backup_schedule/1'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'DELETE'"
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'501'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_backup_schedules
dedent|''
name|'def'
name|'test_get_server_backup_schedules'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1/backup_schedule'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'501'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_server_backup_schedule
dedent|''
name|'def'
name|'test_get_server_backup_schedule'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1/backup_schedule/1'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'501'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_server_backup_schedule_deprecated_v1_1
dedent|''
name|'def'
name|'test_server_backup_schedule_deprecated_v1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers/1/backup_schedule'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_server_details_xml_v1_0
dedent|''
name|'def'
name|'test_get_all_server_details_xml_v1_0'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/detail'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Accept'"
op|']'
op|'='
string|"'application/xml'"
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'dom'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'server'
name|'in'
name|'enumerate'
op|'('
name|'dom'
op|'.'
name|'getElementsByTagName'
op|'('
string|"'server'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'server'
op|'.'
name|'getAttribute'
op|'('
string|"'id'"
op|')'
op|','
name|'str'
op|'('
name|'i'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'server'
op|'.'
name|'getAttribute'
op|'('
string|"'hostId'"
op|')'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'server'
op|'.'
name|'getAttribute'
op|'('
string|"'name'"
op|')'
op|','
string|"'server%d'"
op|'%'
name|'i'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'server'
op|'.'
name|'getAttribute'
op|'('
string|"'imageId'"
op|')'
op|','
string|"'10'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'server'
op|'.'
name|'getAttribute'
op|'('
string|"'status'"
op|')'
op|','
string|"'BUILD'"
op|')'
newline|'\n'
op|'('
name|'meta'
op|','
op|')'
op|'='
name|'server'
op|'.'
name|'getElementsByTagName'
op|'('
string|"'meta'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'meta'
op|'.'
name|'getAttribute'
op|'('
string|"'key'"
op|')'
op|','
string|"'seq'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'meta'
op|'.'
name|'firstChild'
op|'.'
name|'data'
op|'.'
name|'strip'
op|'('
op|')'
op|','
name|'str'
op|'('
name|'i'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_server_details_v1_0
dedent|''
dedent|''
name|'def'
name|'test_get_all_server_details_v1_0'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/detail'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
op|','
name|'s'
name|'in'
name|'enumerate'
op|'('
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'id'"
op|']'
op|','
name|'i'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'hostId'"
op|']'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'name'"
op|']'
op|','
string|"'server%d'"
op|'%'
name|'i'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'imageId'"
op|']'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'flavorId'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'status'"
op|']'
op|','
string|"'BUILD'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'metadata'"
op|']'
op|'['
string|"'seq'"
op|']'
op|','
name|'str'
op|'('
name|'i'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_server_details_v1_1
dedent|''
dedent|''
name|'def'
name|'test_get_all_server_details_v1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_flavor'
op|'='
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|"'http://localhost/fake/flavors/1'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'expected_image'
op|'='
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"10"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|"'http://localhost/fake/images/10'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers/detail'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
op|','
name|'s'
name|'in'
name|'enumerate'
op|'('
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'id'"
op|']'
op|','
name|'i'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'hostId'"
op|']'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'name'"
op|']'
op|','
string|"'server%d'"
op|'%'
name|'i'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'image'"
op|']'
op|','
name|'expected_image'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'flavor'"
op|']'
op|','
name|'expected_flavor'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'status'"
op|']'
op|','
string|"'BUILD'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'metadata'"
op|']'
op|'['
string|"'seq'"
op|']'
op|','
name|'str'
op|'('
name|'i'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_all_server_details_with_host
dedent|''
dedent|''
name|'def'
name|'test_get_all_server_details_with_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|"'''\n        We want to make sure that if two instances are on the same host, then\n        they return the same hostId. If two instances are on different hosts,\n        they should return different hostId's. In this test, there are 5\n        instances - 2 on one host and 3 on another.\n        '''"
newline|'\n'
nl|'\n'
DECL|function|return_servers_with_host
name|'def'
name|'return_servers_with_host'
op|'('
name|'context'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
name|'stub_instance'
op|'('
name|'i'
op|','
string|"'fake'"
op|','
string|"'fake'"
op|','
name|'None'
op|','
name|'None'
op|','
name|'i'
op|'%'
number|'2'
op|')'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
number|'5'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get_all_by_filters'"
op|','
nl|'\n'
name|'return_servers_with_host'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/detail'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'server_list'
op|'='
name|'res_dict'
op|'['
string|"'servers'"
op|']'
newline|'\n'
name|'host_ids'
op|'='
op|'['
name|'server_list'
op|'['
number|'0'
op|']'
op|'['
string|"'hostId'"
op|']'
op|','
name|'server_list'
op|'['
number|'1'
op|']'
op|'['
string|"'hostId'"
op|']'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'host_ids'
op|'['
number|'0'
op|']'
name|'and'
name|'host_ids'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'host_ids'
op|'['
number|'0'
op|']'
op|','
name|'host_ids'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
op|','
name|'s'
name|'in'
name|'enumerate'
op|'('
name|'res_dict'
op|'['
string|"'servers'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'id'"
op|']'
op|','
name|'i'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'hostId'"
op|']'
op|','
name|'host_ids'
op|'['
name|'i'
op|'%'
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'name'"
op|']'
op|','
string|"'server%d'"
op|'%'
name|'i'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'imageId'"
op|']'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'s'
op|'['
string|"'flavorId'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_server_pause
dedent|''
dedent|''
name|'def'
name|'test_server_pause'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'allow_admin_api'
op|'='
name|'True'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1/pause'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|"'application/json'"
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_server_unpause
dedent|''
name|'def'
name|'test_server_unpause'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'allow_admin_api'
op|'='
name|'True'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1/unpause'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|"'application/json'"
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_server_suspend
dedent|''
name|'def'
name|'test_server_suspend'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'allow_admin_api'
op|'='
name|'True'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1/suspend'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|"'application/json'"
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_server_resume
dedent|''
name|'def'
name|'test_server_resume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'allow_admin_api'
op|'='
name|'True'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1/resume'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|"'application/json'"
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_server_reset_network
dedent|''
name|'def'
name|'test_server_reset_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'allow_admin_api'
op|'='
name|'True'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1/reset_network'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|"'application/json'"
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_server_inject_network_info
dedent|''
name|'def'
name|'test_server_inject_network_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'allow_admin_api'
op|'='
name|'True'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1.0/servers/1/inject_network_info'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|"'application/json'"
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_server_diagnostics
dedent|''
name|'def'
name|'test_server_diagnostics'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'allow_admin_api'
op|'='
name|'False'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/v1.0/servers/1/diagnostics"'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|'"GET"'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_server_actions
dedent|''
name|'def'
name|'test_server_actions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'allow_admin_api'
op|'='
name|'False'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/v1.0/servers/1/actions"'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|'"GET"'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_server_instance
dedent|''
name|'def'
name|'test_delete_server_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'DELETE'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'server_delete_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|instance_destroy_mock
name|'def'
name|'instance_destroy_mock'
op|'('
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'server_delete_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_destroy'"
op|','
nl|'\n'
name|'instance_destroy_mock'
op|')'
newline|'\n'
nl|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status'
op|','
string|"'202 Accepted'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'server_delete_called'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rescue_accepted
dedent|''
name|'def'
name|'test_rescue_accepted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'allow_admin_api'
op|'='
name|'True'
op|')'
newline|'\n'
name|'body'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|rescue_mock
name|'def'
name|'rescue_mock'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'api'
op|'.'
name|'API'
op|','
string|"'rescue'"
op|','
name|'rescue_mock'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1/rescue'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|"'application/json'"
newline|'\n'
nl|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'called'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rescue_raises_handled
dedent|''
name|'def'
name|'test_rescue_raises_handled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'allow_admin_api'
op|'='
name|'True'
op|')'
newline|'\n'
name|'body'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|rescue_mock
name|'def'
name|'rescue_mock'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Who cares?'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'api'
op|'.'
name|'API'
op|','
string|"'rescue'"
op|','
name|'rescue_mock'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1/rescue'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|"'application/json'"
newline|'\n'
nl|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'422'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_server_instance_v1_1
dedent|''
name|'def'
name|'test_delete_server_instance_v1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.1/123/servers/1'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'DELETE'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'server_delete_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|instance_destroy_mock
name|'def'
name|'instance_destroy_mock'
op|'('
name|'context'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'server_delete_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_destroy'"
op|','
nl|'\n'
name|'instance_destroy_mock'
op|')'
newline|'\n'
nl|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'204'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'server_delete_called'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shutdown_status
dedent|''
name|'def'
name|'test_shutdown_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'new_server'
op|'='
name|'return_server_with_power_state'
op|'('
name|'power_state'
op|'.'
name|'SHUTDOWN'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get'"
op|','
name|'new_server'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'SHUTDOWN'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shutoff_status
dedent|''
name|'def'
name|'test_shutoff_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'new_server'
op|'='
name|'return_server_with_power_state'
op|'('
name|'power_state'
op|'.'
name|'SHUTOFF'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'db'
op|'.'
name|'api'
op|','
string|"'instance_get'"
op|','
name|'new_server'
op|')'
newline|'\n'
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers/1'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'res_dict'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
string|"'SHUTOFF'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestServerCreateRequestXMLDeserializerV10
dedent|''
dedent|''
name|'class'
name|'TestServerCreateRequestXMLDeserializerV10'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'deserializer'
op|'='
name|'create_instance_helper'
op|'.'
name|'ServerXMLDeserializer'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_minimal_request
dedent|''
name|'def'
name|'test_minimal_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.rackspacecloud.com/servers/api/v1.0"\n name="new-server-test" imageId="1" flavorId="1"/>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageId"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorId"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|'"personality"'
op|':'
op|'['
op|']'
op|','
nl|'\n'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_empty_metadata
dedent|''
name|'def'
name|'test_request_with_empty_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.rackspacecloud.com/servers/api/v1.0"\n name="new-server-test" imageId="1" flavorId="1">\n    <metadata/>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageId"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorId"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|'"personality"'
op|':'
op|'['
op|']'
op|','
nl|'\n'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_empty_personality
dedent|''
name|'def'
name|'test_request_with_empty_personality'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.rackspacecloud.com/servers/api/v1.0"\n name="new-server-test" imageId="1" flavorId="1">\n    <personality/>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageId"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorId"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|'"personality"'
op|':'
op|'['
op|']'
op|','
nl|'\n'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_empty_metadata_and_personality
dedent|''
name|'def'
name|'test_request_with_empty_metadata_and_personality'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.rackspacecloud.com/servers/api/v1.0"\n name="new-server-test" imageId="1" flavorId="1">\n    <metadata/>\n    <personality/>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageId"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorId"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|'"personality"'
op|':'
op|'['
op|']'
op|','
nl|'\n'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_empty_metadata_and_personality_reversed
dedent|''
name|'def'
name|'test_request_with_empty_metadata_and_personality_reversed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.rackspacecloud.com/servers/api/v1.0"\n name="new-server-test" imageId="1" flavorId="1">\n    <personality/>\n    <metadata/>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageId"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorId"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|'"personality"'
op|':'
op|'['
op|']'
op|','
nl|'\n'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_one_personality
dedent|''
name|'def'
name|'test_request_with_one_personality'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.rackspacecloud.com/servers/api/v1.0"\n name="new-server-test" imageId="1" flavorId="1">\n    <personality>\n        <file path="/etc/conf">aabbccdd</file>\n    </personality>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
op|'{'
string|'"path"'
op|':'
string|'"/etc/conf"'
op|','
string|'"contents"'
op|':'
string|'"aabbccdd"'
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|'['
string|'"server"'
op|']'
op|'['
string|'"personality"'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_two_personalities
dedent|''
name|'def'
name|'test_request_with_two_personalities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.rackspacecloud.com/servers/api/v1.0"\n name="new-server-test" imageId="1" flavorId="1">\n<personality><file path="/etc/conf">aabbccdd</file>\n<file path="/etc/sudoers">abcd</file></personality></server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
op|'{'
string|'"path"'
op|':'
string|'"/etc/conf"'
op|','
string|'"contents"'
op|':'
string|'"aabbccdd"'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"path"'
op|':'
string|'"/etc/sudoers"'
op|','
string|'"contents"'
op|':'
string|'"abcd"'
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|'['
string|'"server"'
op|']'
op|'['
string|'"personality"'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_second_personality_node_ignored
dedent|''
name|'def'
name|'test_request_second_personality_node_ignored'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.rackspacecloud.com/servers/api/v1.0"\n name="new-server-test" imageId="1" flavorId="1">\n    <personality>\n        <file path="/etc/conf">aabbccdd</file>\n    </personality>\n    <personality>\n        <file path="/etc/ignoreme">anything</file>\n    </personality>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
op|'{'
string|'"path"'
op|':'
string|'"/etc/conf"'
op|','
string|'"contents"'
op|':'
string|'"aabbccdd"'
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|'['
string|'"server"'
op|']'
op|'['
string|'"personality"'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_one_personality_missing_path
dedent|''
name|'def'
name|'test_request_with_one_personality_missing_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.rackspacecloud.com/servers/api/v1.0"\n name="new-server-test" imageId="1" flavorId="1">\n<personality><file>aabbccdd</file></personality></server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
op|'{'
string|'"contents"'
op|':'
string|'"aabbccdd"'
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|'['
string|'"server"'
op|']'
op|'['
string|'"personality"'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_one_personality_empty_contents
dedent|''
name|'def'
name|'test_request_with_one_personality_empty_contents'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.rackspacecloud.com/servers/api/v1.0"\n name="new-server-test" imageId="1" flavorId="1">\n<personality><file path="/etc/conf"></file></personality></server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
op|'{'
string|'"path"'
op|':'
string|'"/etc/conf"'
op|','
string|'"contents"'
op|':'
string|'""'
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|'['
string|'"server"'
op|']'
op|'['
string|'"personality"'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_one_personality_empty_contents_variation
dedent|''
name|'def'
name|'test_request_with_one_personality_empty_contents_variation'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.rackspacecloud.com/servers/api/v1.0"\n name="new-server-test" imageId="1" flavorId="1">\n<personality><file path="/etc/conf"/></personality></server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
op|'{'
string|'"path"'
op|':'
string|'"/etc/conf"'
op|','
string|'"contents"'
op|':'
string|'""'
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|'['
string|'"server"'
op|']'
op|'['
string|'"personality"'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_one_metadata
dedent|''
name|'def'
name|'test_request_with_one_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.rackspacecloud.com/servers/api/v1.0"\n name="new-server-test" imageId="1" flavorId="1">\n    <metadata>\n        <meta key="alpha">beta</meta>\n    </metadata>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"alpha"'
op|':'
string|'"beta"'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|'['
string|'"server"'
op|']'
op|'['
string|'"metadata"'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_two_metadata
dedent|''
name|'def'
name|'test_request_with_two_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.rackspacecloud.com/servers/api/v1.0"\n name="new-server-test" imageId="1" flavorId="1">\n    <metadata>\n        <meta key="alpha">beta</meta>\n        <meta key="foo">bar</meta>\n    </metadata>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"alpha"'
op|':'
string|'"beta"'
op|','
string|'"foo"'
op|':'
string|'"bar"'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|'['
string|'"server"'
op|']'
op|'['
string|'"metadata"'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_metadata_missing_value
dedent|''
name|'def'
name|'test_request_with_metadata_missing_value'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.rackspacecloud.com/servers/api/v1.0"\n name="new-server-test" imageId="1" flavorId="1">\n    <metadata>\n        <meta key="alpha"></meta>\n    </metadata>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"alpha"'
op|':'
string|'""'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|'['
string|'"server"'
op|']'
op|'['
string|'"metadata"'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_two_metadata_missing_value
dedent|''
name|'def'
name|'test_request_with_two_metadata_missing_value'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.rackspacecloud.com/servers/api/v1.0"\n name="new-server-test" imageId="1" flavorId="1">\n    <metadata>\n        <meta key="alpha"/>\n        <meta key="delta"/>\n    </metadata>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"alpha"'
op|':'
string|'""'
op|','
string|'"delta"'
op|':'
string|'""'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|'['
string|'"server"'
op|']'
op|'['
string|'"metadata"'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_metadata_missing_key
dedent|''
name|'def'
name|'test_request_with_metadata_missing_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.rackspacecloud.com/servers/api/v1.0"\n name="new-server-test" imageId="1" flavorId="1">\n    <metadata>\n        <meta>beta</meta>\n    </metadata>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'""'
op|':'
string|'"beta"'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|'['
string|'"server"'
op|']'
op|'['
string|'"metadata"'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_two_metadata_missing_key
dedent|''
name|'def'
name|'test_request_with_two_metadata_missing_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.rackspacecloud.com/servers/api/v1.0"\n name="new-server-test" imageId="1" flavorId="1">\n    <metadata>\n        <meta>beta</meta>\n        <meta>gamma</meta>\n    </metadata>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'""'
op|':'
string|'"gamma"'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|'['
string|'"server"'
op|']'
op|'['
string|'"metadata"'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_request_with_metadata_duplicate_key
dedent|''
name|'def'
name|'test_request_with_metadata_duplicate_key'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.rackspacecloud.com/servers/api/v1.0"\n name="new-server-test" imageId="1" flavorId="1">\n    <metadata>\n        <meta key="foo">bar</meta>\n        <meta key="foo">baz</meta>\n    </metadata>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"foo"'
op|':'
string|'"baz"'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|'['
string|'"server"'
op|']'
op|'['
string|'"metadata"'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_canonical_request_from_docs
dedent|''
name|'def'
name|'test_canonical_request_from_docs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.rackspacecloud.com/servers/api/v1.0"\n name="new-server-test" imageId="1" flavorId="1">\n    <metadata>\n        <meta key="My Server Name">Apache1</meta>\n    </metadata>\n    <personality>\n        <file path="/etc/banner.txt">\\\nICAgICAgDQoiQSBjbG91ZCBkb2VzIG5vdCBrbm93IHdoeSBp\\\ndCBtb3ZlcyBpbiBqdXN0IHN1Y2ggYSBkaXJlY3Rpb24gYW5k\\\nIGF0IHN1Y2ggYSBzcGVlZC4uLkl0IGZlZWxzIGFuIGltcHVs\\\nc2lvbi4uLnRoaXMgaXMgdGhlIHBsYWNlIHRvIGdvIG5vdy4g\\\nQnV0IHRoZSBza3kga25vd3MgdGhlIHJlYXNvbnMgYW5kIHRo\\\nZSBwYXR0ZXJucyBiZWhpbmQgYWxsIGNsb3VkcywgYW5kIHlv\\\ndSB3aWxsIGtub3csIHRvbywgd2hlbiB5b3UgbGlmdCB5b3Vy\\\nc2VsZiBoaWdoIGVub3VnaCB0byBzZWUgYmV5b25kIGhvcml6\\\nb25zLiINCg0KLVJpY2hhcmQgQmFjaA==</file>\n    </personality>\n</server>"""'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageId"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorId"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
nl|'\n'
string|'"My Server Name"'
op|':'
string|'"Apache1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"personality"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"path"'
op|':'
string|'"/etc/banner.txt"'
op|','
nl|'\n'
string|'"contents"'
op|':'
string|'"""\\\nICAgICAgDQoiQSBjbG91ZCBkb2VzIG5vdCBrbm93IHdoeSBp\\\ndCBtb3ZlcyBpbiBqdXN0IHN1Y2ggYSBkaXJlY3Rpb24gYW5k\\\nIGF0IHN1Y2ggYSBzcGVlZC4uLkl0IGZlZWxzIGFuIGltcHVs\\\nc2lvbi4uLnRoaXMgaXMgdGhlIHBsYWNlIHRvIGdvIG5vdy4g\\\nQnV0IHRoZSBza3kga25vd3MgdGhlIHJlYXNvbnMgYW5kIHRo\\\nZSBwYXR0ZXJucyBiZWhpbmQgYWxsIGNsb3VkcywgYW5kIHlv\\\ndSB3aWxsIGtub3csIHRvbywgd2hlbiB5b3UgbGlmdCB5b3Vy\\\nc2VsZiBoaWdoIGVub3VnaCB0byBzZWUgYmV5b25kIGhvcml6\\\nb25zLiINCg0KLVJpY2hhcmQgQmFjaA=="""'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|'}'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestServerCreateRequestXMLDeserializerV11
dedent|''
dedent|''
name|'class'
name|'TestServerCreateRequestXMLDeserializerV11'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestServerCreateRequestXMLDeserializerV11'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'deserializer'
op|'='
name|'create_instance_helper'
op|'.'
name|'ServerXMLDeserializerV11'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_minimal_request
dedent|''
name|'def'
name|'test_minimal_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v1.1"\n        name="new-server-test"\n        imageRef="1"\n        flavorRef="2"/>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"2"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_admin_pass
dedent|''
name|'def'
name|'test_admin_pass'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v1.1"\n        name="new-server-test"\n        imageRef="1"\n        flavorRef="2"\n        adminPass="1234"/>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"2"'
op|','
nl|'\n'
string|'"adminPass"'
op|':'
string|'"1234"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_image_link
dedent|''
name|'def'
name|'test_image_link'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v1.1"\n        name="new-server-test"\n        imageRef="http://localhost:8774/v1.1/images/2"\n        flavorRef="3"/>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"http://localhost:8774/v1.1/images/2"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"3"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_flavor_link
dedent|''
name|'def'
name|'test_flavor_link'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v1.1"\n        name="new-server-test"\n        imageRef="1"\n        flavorRef="http://localhost:8774/v1.1/flavors/3"/>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"http://localhost:8774/v1.1/flavors/3"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_empty_metadata_personality
dedent|''
name|'def'
name|'test_empty_metadata_personality'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v1.1"\n        name="new-server-test"\n        imageRef="1"\n        flavorRef="2">\n    <metadata/>\n    <personality/>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"2"'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|'"personality"'
op|':'
op|'['
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_multiple_metadata_items
dedent|''
name|'def'
name|'test_multiple_metadata_items'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v1.1"\n        name="new-server-test"\n        imageRef="1"\n        flavorRef="2">\n    <metadata>\n        <meta key="one">two</meta>\n        <meta key="open">snack</meta>\n    </metadata>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"2"'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
string|'"one"'
op|':'
string|'"two"'
op|','
string|'"open"'
op|':'
string|'"snack"'
op|'}'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_multiple_personality_files
dedent|''
name|'def'
name|'test_multiple_personality_files'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v1.1"\n        name="new-server-test"\n        imageRef="1"\n        flavorRef="2">\n    <personality>\n        <file path="/etc/banner.txt">MQ==</file>\n        <file path="/etc/hosts">Mg==</file>\n    </personality>\n</server>"""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"2"'
op|','
nl|'\n'
string|'"personality"'
op|':'
op|'['
nl|'\n'
op|'{'
string|'"path"'
op|':'
string|'"/etc/banner.txt"'
op|','
string|'"contents"'
op|':'
string|'"MQ=="'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"path"'
op|':'
string|'"/etc/hosts"'
op|','
string|'"contents"'
op|':'
string|'"Mg=="'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_spec_request
dedent|''
name|'def'
name|'test_spec_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_bookmark_link'
op|'='
string|'"http://servers.api.openstack.org/1234/"'
op|'+'
string|'"images/52415800-8b69-11e0-9b19-734f6f006e54"'
newline|'\n'
name|'serial_request'
op|'='
string|'"""\n<server xmlns="http://docs.openstack.org/compute/api/v1.1"\n        imageRef="%s"\n        flavorRef="52415800-8b69-11e0-9b19-734f1195ff37"\n        name="new-server-test">\n  <metadata>\n    <meta key="My Server Name">Apache1</meta>\n  </metadata>\n  <personality>\n    <file path="/etc/banner.txt">Mg==</file>\n  </personality>\n</server>"""'
op|'%'
op|'('
name|'image_bookmark_link'
op|')'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'deserializer'
op|'.'
name|'deserialize'
op|'('
name|'serial_request'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"name"'
op|':'
string|'"new-server-test"'
op|','
nl|'\n'
string|'"imageRef"'
op|':'
string|'"http://servers.api.openstack.org/1234/"'
op|'+'
string|'"images/52415800-8b69-11e0-9b19-734f6f006e54"'
op|','
nl|'\n'
string|'"flavorRef"'
op|':'
string|'"52415800-8b69-11e0-9b19-734f1195ff37"'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
string|'"My Server Name"'
op|':'
string|'"Apache1"'
op|'}'
op|','
nl|'\n'
string|'"personality"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"path"'
op|':'
string|'"/etc/banner.txt"'
op|','
nl|'\n'
string|'"contents"'
op|':'
string|'"Mg=="'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'request'
op|'['
string|"'body'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestAddressesXMLSerialization
dedent|''
dedent|''
name|'class'
name|'TestAddressesXMLSerialization'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|serializer
indent|'    '
name|'serializer'
op|'='
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'ips'
op|'.'
name|'IPXMLSerializer'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_show
name|'def'
name|'test_show'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fixture'
op|'='
op|'{'
nl|'\n'
string|"'network_2'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'addr'"
op|':'
string|"'192.168.0.1'"
op|','
string|"'version'"
op|':'
number|'4'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'addr'"
op|':'
string|"'fe80::beef'"
op|','
string|"'version'"
op|':'
number|'6'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'fixture'
op|','
string|"'show'"
op|')'
newline|'\n'
name|'actual'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
name|'output'
op|'.'
name|'replace'
op|'('
string|'"  "'
op|','
string|'""'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
string|'"""\n            <network xmlns="http://docs.openstack.org/compute/api/v1.1"\n                     id="network_2">\n                <ip version="4" addr="192.168.0.1"/>\n                <ip version="6" addr="fe80::beef"/>\n            </network>\n        """'
op|'.'
name|'replace'
op|'('
string|'"  "'
op|','
string|'""'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|'.'
name|'toxml'
op|'('
op|')'
op|','
name|'actual'
op|'.'
name|'toxml'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_index
dedent|''
name|'def'
name|'test_index'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fixture'
op|'='
op|'{'
nl|'\n'
string|"'addresses'"
op|':'
op|'{'
nl|'\n'
string|"'network_1'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'addr'"
op|':'
string|"'192.168.0.3'"
op|','
string|"'version'"
op|':'
number|'4'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'addr'"
op|':'
string|"'192.168.0.5'"
op|','
string|"'version'"
op|':'
number|'4'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'network_2'"
op|':'
op|'['
nl|'\n'
op|'{'
string|"'addr'"
op|':'
string|"'192.168.0.1'"
op|','
string|"'version'"
op|':'
number|'4'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'addr'"
op|':'
string|"'fe80::beef'"
op|','
string|"'version'"
op|':'
number|'6'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'fixture'
op|','
string|"'index'"
op|')'
newline|'\n'
name|'actual'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
name|'output'
op|'.'
name|'replace'
op|'('
string|'"  "'
op|','
string|'""'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
string|'"""\n            <addresses xmlns="http://docs.openstack.org/compute/api/v1.1">\n                <network id="network_2">\n                    <ip version="4" addr="192.168.0.1"/>\n                    <ip version="6" addr="fe80::beef"/>\n                </network>\n                <network id="network_1">\n                    <ip version="4" addr="192.168.0.3"/>\n                    <ip version="4" addr="192.168.0.5"/>\n                </network>\n            </addresses>\n        """'
op|'.'
name|'replace'
op|'('
string|'"  "'
op|','
string|'""'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|'.'
name|'toxml'
op|'('
op|')'
op|','
name|'actual'
op|'.'
name|'toxml'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestServerInstanceCreation
dedent|''
dedent|''
name|'class'
name|'TestServerInstanceCreation'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestServerInstanceCreation'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_out_image_service'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_out_key_pair_funcs'
op|'('
name|'self'
op|'.'
name|'stubs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setup_mock_compute_api_for_personality
dedent|''
name|'def'
name|'_setup_mock_compute_api_for_personality'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|class|MockComputeAPI
indent|'        '
name|'class'
name|'MockComputeAPI'
op|'('
name|'nova'
op|'.'
name|'compute'
op|'.'
name|'API'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'injected_files'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|create
dedent|''
name|'def'
name|'create'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
string|"'injected_files'"
name|'in'
name|'kwargs'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'injected_files'
op|'='
name|'kwargs'
op|'['
string|"'injected_files'"
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'injected_files'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'return'
op|'['
op|'{'
string|"'id'"
op|':'
string|"'1234'"
op|','
string|"'display_name'"
op|':'
string|"'fakeinstance'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
name|'FAKE_UUID'
op|'}'
op|']'
newline|'\n'
nl|'\n'
DECL|member|set_admin_password
dedent|''
name|'def'
name|'set_admin_password'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|make_stub_method
dedent|''
dedent|''
name|'def'
name|'make_stub_method'
op|'('
name|'canned_return'
op|')'
op|':'
newline|'\n'
DECL|function|stub_method
indent|'            '
name|'def'
name|'stub_method'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'canned_return'
newline|'\n'
dedent|''
name|'return'
name|'stub_method'
newline|'\n'
nl|'\n'
dedent|''
name|'compute_api'
op|'='
name|'MockComputeAPI'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'nova'
op|'.'
name|'compute'
op|','
string|"'API'"
op|','
name|'make_stub_method'
op|'('
name|'compute_api'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
nl|'\n'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'create_instance_helper'
op|'.'
name|'CreateInstanceHelper'
op|','
nl|'\n'
string|"'_get_kernel_ramdisk_from_image'"
op|','
name|'make_stub_method'
op|'('
op|'('
number|'1'
op|','
number|'1'
op|')'
op|')'
op|')'
newline|'\n'
name|'return'
name|'compute_api'
newline|'\n'
nl|'\n'
DECL|member|_create_personality_request_dict
dedent|''
name|'def'
name|'_create_personality_request_dict'
op|'('
name|'self'
op|','
name|'personality_files'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'server'
op|'['
string|"'name'"
op|']'
op|'='
string|"'new-server-test'"
newline|'\n'
name|'server'
op|'['
string|"'imageId'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'server'
op|'['
string|"'flavorId'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'if'
name|'personality_files'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'personalities'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'path'
op|','
name|'contents'
name|'in'
name|'personality_files'
op|':'
newline|'\n'
indent|'                '
name|'personalities'
op|'.'
name|'append'
op|'('
op|'{'
string|"'path'"
op|':'
name|'path'
op|','
string|"'contents'"
op|':'
name|'contents'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'server'
op|'['
string|"'personality'"
op|']'
op|'='
name|'personalities'
newline|'\n'
dedent|''
name|'return'
op|'{'
string|"'server'"
op|':'
name|'server'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_get_create_request_json
dedent|''
name|'def'
name|'_get_create_request_json'
op|'('
name|'self'
op|','
name|'body_dict'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|'='
string|"'application/json'"
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'body_dict'
op|')'
newline|'\n'
name|'return'
name|'req'
newline|'\n'
nl|'\n'
DECL|member|_run_create_instance_with_mock_compute_api
dedent|''
name|'def'
name|'_run_create_instance_with_mock_compute_api'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'compute_api'
op|'='
name|'self'
op|'.'
name|'_setup_mock_compute_api_for_personality'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'fakes'
op|'.'
name|'wsgi_app'
op|'('
op|')'
op|')'
newline|'\n'
name|'return'
name|'compute_api'
op|','
name|'response'
newline|'\n'
nl|'\n'
DECL|member|_format_xml_request_body
dedent|''
name|'def'
name|'_format_xml_request_body'
op|'('
name|'self'
op|','
name|'body_dict'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
name|'body_dict'
op|'['
string|"'server'"
op|']'
newline|'\n'
name|'body_parts'
op|'='
op|'['
op|']'
newline|'\n'
name|'body_parts'
op|'.'
name|'extend'
op|'('
op|'['
nl|'\n'
string|'\'<?xml version="1.0" encoding="UTF-8"?>\''
op|','
nl|'\n'
string|'\'<server xmlns="http://docs.rackspacecloud.com/servers/api/v1.0"\''
op|','
nl|'\n'
string|'\' name="%s" imageId="%s" flavorId="%s">\''
op|'%'
op|'('
nl|'\n'
name|'server'
op|'['
string|"'name'"
op|']'
op|','
name|'server'
op|'['
string|"'imageId'"
op|']'
op|','
name|'server'
op|'['
string|"'flavorId'"
op|']'
op|')'
op|']'
op|')'
newline|'\n'
name|'if'
string|"'metadata'"
name|'in'
name|'server'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'='
name|'server'
op|'['
string|"'metadata'"
op|']'
newline|'\n'
name|'body_parts'
op|'.'
name|'append'
op|'('
string|"'<metadata>'"
op|')'
newline|'\n'
name|'for'
name|'item'
name|'in'
name|'metadata'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'body_parts'
op|'.'
name|'append'
op|'('
string|'\'<meta key="%s">%s</meta>\''
op|'%'
name|'item'
op|')'
newline|'\n'
dedent|''
name|'body_parts'
op|'.'
name|'append'
op|'('
string|"'</metadata>'"
op|')'
newline|'\n'
dedent|''
name|'if'
string|"'personality'"
name|'in'
name|'server'
op|':'
newline|'\n'
indent|'            '
name|'personalities'
op|'='
name|'server'
op|'['
string|"'personality'"
op|']'
newline|'\n'
name|'body_parts'
op|'.'
name|'append'
op|'('
string|"'<personality>'"
op|')'
newline|'\n'
name|'for'
name|'file'
name|'in'
name|'personalities'
op|':'
newline|'\n'
indent|'                '
name|'item'
op|'='
op|'('
name|'file'
op|'['
string|"'path'"
op|']'
op|','
name|'file'
op|'['
string|"'contents'"
op|']'
op|')'
newline|'\n'
name|'body_parts'
op|'.'
name|'append'
op|'('
string|'\'<file path="%s">%s</file>\''
op|'%'
name|'item'
op|')'
newline|'\n'
dedent|''
name|'body_parts'
op|'.'
name|'append'
op|'('
string|"'</personality>'"
op|')'
newline|'\n'
dedent|''
name|'body_parts'
op|'.'
name|'append'
op|'('
string|"'</server>'"
op|')'
newline|'\n'
name|'return'
string|"''"
op|'.'
name|'join'
op|'('
name|'body_parts'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_create_request_xml
dedent|''
name|'def'
name|'_get_create_request_xml'
op|'('
name|'self'
op|','
name|'body_dict'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'webob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/servers'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_type'
op|'='
string|"'application/xml'"
newline|'\n'
name|'req'
op|'.'
name|'accept'
op|'='
string|"'application/xml'"
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'POST'"
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
name|'self'
op|'.'
name|'_format_xml_request_body'
op|'('
name|'body_dict'
op|')'
newline|'\n'
name|'return'
name|'req'
newline|'\n'
nl|'\n'
DECL|member|_create_instance_with_personality_json
dedent|''
name|'def'
name|'_create_instance_with_personality_json'
op|'('
name|'self'
op|','
name|'personality'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body_dict'
op|'='
name|'self'
op|'.'
name|'_create_personality_request_dict'
op|'('
name|'personality'
op|')'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'_get_create_request_json'
op|'('
name|'body_dict'
op|')'
newline|'\n'
name|'compute_api'
op|','
name|'response'
op|'='
name|'self'
op|'.'
name|'_run_create_instance_with_mock_compute_api'
op|'('
name|'request'
op|')'
newline|'\n'
name|'return'
name|'request'
op|','
name|'response'
op|','
name|'compute_api'
op|'.'
name|'injected_files'
newline|'\n'
nl|'\n'
DECL|member|_create_instance_with_personality_xml
dedent|''
name|'def'
name|'_create_instance_with_personality_xml'
op|'('
name|'self'
op|','
name|'personality'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body_dict'
op|'='
name|'self'
op|'.'
name|'_create_personality_request_dict'
op|'('
name|'personality'
op|')'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'_get_create_request_xml'
op|'('
name|'body_dict'
op|')'
newline|'\n'
name|'compute_api'
op|','
name|'response'
op|'='
name|'self'
op|'.'
name|'_run_create_instance_with_mock_compute_api'
op|'('
name|'request'
op|')'
newline|'\n'
name|'return'
name|'request'
op|','
name|'response'
op|','
name|'compute_api'
op|'.'
name|'injected_files'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_no_personality
dedent|''
name|'def'
name|'test_create_instance_with_no_personality'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'request'
op|','
name|'response'
op|','
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'_create_instance_with_personality_json'
op|'('
name|'personality'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'response'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'injected_files'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_no_personality_xml
dedent|''
name|'def'
name|'test_create_instance_with_no_personality_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'request'
op|','
name|'response'
op|','
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'_create_instance_with_personality_xml'
op|'('
name|'personality'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'response'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'injected_files'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_personality
dedent|''
name|'def'
name|'test_create_instance_with_personality'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
string|"'/my/file/path'"
newline|'\n'
name|'contents'
op|'='
string|'\'#!/bin/bash\\necho "Hello, World!"\\n\''
newline|'\n'
name|'b64contents'
op|'='
name|'base64'
op|'.'
name|'b64encode'
op|'('
name|'contents'
op|')'
newline|'\n'
name|'personality'
op|'='
op|'['
op|'('
name|'path'
op|','
name|'b64contents'
op|')'
op|']'
newline|'\n'
name|'request'
op|','
name|'response'
op|','
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'_create_instance_with_personality_json'
op|'('
name|'personality'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'response'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'injected_files'
op|','
op|'['
op|'('
name|'path'
op|','
name|'contents'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_personality_xml
dedent|''
name|'def'
name|'test_create_instance_with_personality_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
string|"'/my/file/path'"
newline|'\n'
name|'contents'
op|'='
string|'\'#!/bin/bash\\necho "Hello, World!"\\n\''
newline|'\n'
name|'b64contents'
op|'='
name|'base64'
op|'.'
name|'b64encode'
op|'('
name|'contents'
op|')'
newline|'\n'
name|'personality'
op|'='
op|'['
op|'('
name|'path'
op|','
name|'b64contents'
op|')'
op|']'
newline|'\n'
name|'request'
op|','
name|'response'
op|','
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'_create_instance_with_personality_xml'
op|'('
name|'personality'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'response'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'injected_files'
op|','
op|'['
op|'('
name|'path'
op|','
name|'contents'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_personality_no_path
dedent|''
name|'def'
name|'test_create_instance_with_personality_no_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'personality'
op|'='
op|'['
op|'('
string|"'/remove/this/path'"
op|','
nl|'\n'
name|'base64'
op|'.'
name|'b64encode'
op|'('
string|"'my\\n\\file\\ncontents'"
op|')'
op|')'
op|']'
newline|'\n'
name|'body_dict'
op|'='
name|'self'
op|'.'
name|'_create_personality_request_dict'
op|'('
name|'personality'
op|')'
newline|'\n'
name|'del'
name|'body_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'personality'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'path'"
op|']'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'_get_create_request_json'
op|'('
name|'body_dict'
op|')'
newline|'\n'
name|'compute_api'
op|','
name|'response'
op|'='
name|'self'
op|'.'
name|'_run_create_instance_with_mock_compute_api'
op|'('
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'response'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'compute_api'
op|'.'
name|'injected_files'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_create_instance_with_personality_no_path_xml
dedent|''
name|'def'
name|'_test_create_instance_with_personality_no_path_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'personality'
op|'='
op|'['
op|'('
string|"'/remove/this/path'"
op|','
nl|'\n'
name|'base64'
op|'.'
name|'b64encode'
op|'('
string|"'my\\n\\file\\ncontents'"
op|')'
op|')'
op|']'
newline|'\n'
name|'body_dict'
op|'='
name|'self'
op|'.'
name|'_create_personality_request_dict'
op|'('
name|'personality'
op|')'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'_get_create_request_xml'
op|'('
name|'body_dict'
op|')'
newline|'\n'
name|'request'
op|'.'
name|'body'
op|'='
name|'request'
op|'.'
name|'body'
op|'.'
name|'replace'
op|'('
string|'\' path="/remove/this/path"\''
op|','
string|"''"
op|')'
newline|'\n'
name|'compute_api'
op|','
name|'response'
op|'='
name|'self'
op|'.'
name|'_run_create_instance_with_mock_compute_api'
op|'('
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'response'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'compute_api'
op|'.'
name|'injected_files'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_personality_no_contents
dedent|''
name|'def'
name|'test_create_instance_with_personality_no_contents'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'personality'
op|'='
op|'['
op|'('
string|"'/test/path'"
op|','
nl|'\n'
name|'base64'
op|'.'
name|'b64encode'
op|'('
string|"'remove\\nthese\\ncontents'"
op|')'
op|')'
op|']'
newline|'\n'
name|'body_dict'
op|'='
name|'self'
op|'.'
name|'_create_personality_request_dict'
op|'('
name|'personality'
op|')'
newline|'\n'
name|'del'
name|'body_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'personality'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'contents'"
op|']'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'_get_create_request_json'
op|'('
name|'body_dict'
op|')'
newline|'\n'
name|'compute_api'
op|','
name|'response'
op|'='
name|'self'
op|'.'
name|'_run_create_instance_with_mock_compute_api'
op|'('
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'response'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'compute_api'
op|'.'
name|'injected_files'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_personality_not_a_list
dedent|''
name|'def'
name|'test_create_instance_with_personality_not_a_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'personality'
op|'='
op|'['
op|'('
string|"'/test/path'"
op|','
name|'base64'
op|'.'
name|'b64encode'
op|'('
string|"'test\\ncontents\\n'"
op|')'
op|')'
op|']'
newline|'\n'
name|'body_dict'
op|'='
name|'self'
op|'.'
name|'_create_personality_request_dict'
op|'('
name|'personality'
op|')'
newline|'\n'
name|'body_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'personality'"
op|']'
op|'='
name|'body_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'personality'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'_get_create_request_json'
op|'('
name|'body_dict'
op|')'
newline|'\n'
name|'compute_api'
op|','
name|'response'
op|'='
name|'self'
op|'.'
name|'_run_create_instance_with_mock_compute_api'
op|'('
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'response'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'compute_api'
op|'.'
name|'injected_files'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_personality_with_non_b64_content
dedent|''
name|'def'
name|'test_create_instance_with_personality_with_non_b64_content'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
string|"'/my/file/path'"
newline|'\n'
name|'contents'
op|'='
string|'\'#!/bin/bash\\necho "Oh no!"\\n\''
newline|'\n'
name|'personality'
op|'='
op|'['
op|'('
name|'path'
op|','
name|'contents'
op|')'
op|']'
newline|'\n'
name|'request'
op|','
name|'response'
op|','
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'_create_instance_with_personality_json'
op|'('
name|'personality'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'response'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'injected_files'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_null_personality
dedent|''
name|'def'
name|'test_create_instance_with_null_personality'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'personality'
op|'='
name|'None'
newline|'\n'
name|'body_dict'
op|'='
name|'self'
op|'.'
name|'_create_personality_request_dict'
op|'('
name|'personality'
op|')'
newline|'\n'
name|'body_dict'
op|'['
string|"'server'"
op|']'
op|'['
string|"'personality'"
op|']'
op|'='
name|'None'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'_get_create_request_json'
op|'('
name|'body_dict'
op|')'
newline|'\n'
name|'compute_api'
op|','
name|'response'
op|'='
name|'self'
op|'.'
name|'_run_create_instance_with_mock_compute_api'
op|'('
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'response'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_with_three_personalities
dedent|''
name|'def'
name|'test_create_instance_with_three_personalities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'files'
op|'='
op|'['
nl|'\n'
op|'('
string|"'/etc/sudoers'"
op|','
string|"'ALL ALL=NOPASSWD: ALL\\n'"
op|')'
op|','
nl|'\n'
op|'('
string|"'/etc/motd'"
op|','
string|"'Enjoy your root access!\\n'"
op|')'
op|','
nl|'\n'
op|'('
string|"'/etc/dovecot.conf'"
op|','
string|"'dovecot\\nconfig\\nstuff\\n'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'personality'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'path'
op|','
name|'content'
name|'in'
name|'files'
op|':'
newline|'\n'
indent|'            '
name|'personality'
op|'.'
name|'append'
op|'('
op|'('
name|'path'
op|','
name|'base64'
op|'.'
name|'b64encode'
op|'('
name|'content'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'request'
op|','
name|'response'
op|','
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'_create_instance_with_personality_json'
op|'('
name|'personality'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'response'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'injected_files'
op|','
name|'files'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_personality_empty_content
dedent|''
name|'def'
name|'test_create_instance_personality_empty_content'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
string|"'/my/file/path'"
newline|'\n'
name|'contents'
op|'='
string|"''"
newline|'\n'
name|'personality'
op|'='
op|'['
op|'('
name|'path'
op|','
name|'contents'
op|')'
op|']'
newline|'\n'
name|'request'
op|','
name|'response'
op|','
name|'injected_files'
op|'='
name|'self'
op|'.'
name|'_create_instance_with_personality_json'
op|'('
name|'personality'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'response'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'injected_files'
op|','
op|'['
op|'('
name|'path'
op|','
name|'contents'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_admin_pass_json
dedent|''
name|'def'
name|'test_create_instance_admin_pass_json'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'request'
op|','
name|'response'
op|','
name|'dummy'
op|'='
name|'self'
op|'.'
name|'_create_instance_with_personality_json'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'response'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
name|'response'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'adminPass'"
name|'in'
name|'response'
op|'['
string|"'server'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'16'
op|','
name|'len'
op|'('
name|'response'
op|'['
string|"'server'"
op|']'
op|'['
string|"'adminPass'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_instance_admin_pass_xml
dedent|''
name|'def'
name|'test_create_instance_admin_pass_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'request'
op|','
name|'response'
op|','
name|'dummy'
op|'='
name|'self'
op|'.'
name|'_create_instance_with_personality_xml'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'response'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
name|'dom'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'server'
op|'='
name|'dom'
op|'.'
name|'childNodes'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'nodeName'
op|','
string|"'server'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'16'
op|','
name|'len'
op|'('
name|'server'
op|'.'
name|'getAttribute'
op|'('
string|"'adminPass'"
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestGetKernelRamdiskFromImage
dedent|''
dedent|''
name|'class'
name|'TestGetKernelRamdiskFromImage'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    If we\'re building from an AMI-style image, we need to be able to fetch the\n    kernel and ramdisk associated with the machine image. This information is\n    stored with the image metadata and return via the ImageService.\n\n    These tests ensure that we parse the metadata return the ImageService\n    correctly and that we handle failure modes appropriately.\n    """'
newline|'\n'
nl|'\n'
DECL|member|test_status_not_active
name|'def'
name|'test_status_not_active'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""We should only allow fetching of kernel and ramdisk information if\n        we have a \'fully-formed\' image, aka \'active\'\n        """'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'status'"
op|':'
string|"'queued'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'Invalid'
op|','
name|'self'
op|'.'
name|'_get_k_r'
op|','
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_not_ami
dedent|''
name|'def'
name|'test_not_ami'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Anything other than ami should return no kernel and no ramdisk"""'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'status'"
op|':'
string|"'active'"
op|','
string|"'container_format'"
op|':'
string|"'vhd'"
op|'}'
newline|'\n'
name|'kernel_id'
op|','
name|'ramdisk_id'
op|'='
name|'self'
op|'.'
name|'_get_k_r'
op|'('
name|'image_meta'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kernel_id'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ramdisk_id'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ami_no_kernel
dedent|''
name|'def'
name|'test_ami_no_kernel'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""If an ami is missing a kernel it should raise NotFound"""'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'status'"
op|':'
string|"'active'"
op|','
string|"'container_format'"
op|':'
string|"'ami'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
string|"'ramdisk_id'"
op|':'
number|'1'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
name|'self'
op|'.'
name|'_get_k_r'
op|','
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ami_no_ramdisk
dedent|''
name|'def'
name|'test_ami_no_ramdisk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""If an ami is missing a ramdisk it should raise NotFound"""'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'status'"
op|':'
string|"'active'"
op|','
string|"'container_format'"
op|':'
string|"'ami'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
string|"'kernel_id'"
op|':'
number|'1'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'NotFound'
op|','
name|'self'
op|'.'
name|'_get_k_r'
op|','
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ami_kernel_ramdisk_present
dedent|''
name|'def'
name|'test_ami_kernel_ramdisk_present'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return IDs if both kernel and ramdisk are present"""'
newline|'\n'
name|'image_meta'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'status'"
op|':'
string|"'active'"
op|','
string|"'container_format'"
op|':'
string|"'ami'"
op|','
nl|'\n'
string|"'properties'"
op|':'
op|'{'
string|"'kernel_id'"
op|':'
number|'1'
op|','
string|"'ramdisk_id'"
op|':'
number|'2'
op|'}'
op|'}'
newline|'\n'
name|'kernel_id'
op|','
name|'ramdisk_id'
op|'='
name|'self'
op|'.'
name|'_get_k_r'
op|'('
name|'image_meta'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kernel_id'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ramdisk_id'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_get_k_r
name|'def'
name|'_get_k_r'
op|'('
name|'image_meta'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Rebinding function to a shorter name for convenience"""'
newline|'\n'
name|'kernel_id'
op|','
name|'ramdisk_id'
op|'='
name|'create_instance_helper'
op|'.'
name|'CreateInstanceHelper'
op|'.'
name|'_do_get_kernel_ramdisk_from_image'
op|'('
name|'image_meta'
op|')'
newline|'\n'
name|'return'
name|'kernel_id'
op|','
name|'ramdisk_id'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServersViewBuilderV11Test
dedent|''
dedent|''
name|'class'
name|'ServersViewBuilderV11Test'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance'
op|'='
name|'self'
op|'.'
name|'_get_instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'view_builder'
op|'='
name|'self'
op|'.'
name|'_get_view_builder'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|_get_instance
dedent|''
name|'def'
name|'_get_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'created_at'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2010'
op|','
number|'10'
op|','
number|'10'
op|','
number|'12'
op|','
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
name|'updated_at'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'('
number|'2010'
op|','
number|'11'
op|','
number|'11'
op|','
number|'11'
op|','
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
name|'instance'
op|'='
op|'{'
nl|'\n'
string|'"id"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"created_at"'
op|':'
name|'created_at'
op|','
nl|'\n'
string|'"updated_at"'
op|':'
name|'updated_at'
op|','
nl|'\n'
string|'"admin_pass"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"user_id"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"project_id"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"image_ref"'
op|':'
string|'"5"'
op|','
nl|'\n'
string|'"kernel_id"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"ramdisk_id"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"launch_index"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"key_name"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"key_data"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"state"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"state_description"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"memory_mb"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"vcpus"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"local_gb"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"hostname"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"host"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"instance_type"'
op|':'
op|'{'
nl|'\n'
string|'"flavorid"'
op|':'
number|'1'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"user_data"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"reservation_id"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"mac_address"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"scheduled_at"'
op|':'
name|'utils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|','
nl|'\n'
string|'"launched_at"'
op|':'
name|'utils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|','
nl|'\n'
string|'"terminated_at"'
op|':'
name|'utils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|','
nl|'\n'
string|'"availability_zone"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"display_name"'
op|':'
string|'"test_server"'
op|','
nl|'\n'
string|'"display_description"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"locked"'
op|':'
name|'False'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'['
op|']'
op|','
nl|'\n'
comment|'#"address": ,'
nl|'\n'
comment|'#"floating_ips": [{"address":ip} for ip in public_addresses]}'
nl|'\n'
string|'"uuid"'
op|':'
string|'"deadbeef-feed-edee-beef-d0ea7beefedd"'
op|'}'
newline|'\n'
nl|'\n'
name|'return'
name|'instance'
newline|'\n'
nl|'\n'
DECL|member|_get_view_builder
dedent|''
name|'def'
name|'_get_view_builder'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'base_url'
op|'='
string|'"http://localhost/v1.1"'
newline|'\n'
name|'views'
op|'='
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'views'
newline|'\n'
name|'address_builder'
op|'='
name|'views'
op|'.'
name|'addresses'
op|'.'
name|'ViewBuilderV11'
op|'('
op|')'
newline|'\n'
name|'flavor_builder'
op|'='
name|'views'
op|'.'
name|'flavors'
op|'.'
name|'ViewBuilderV11'
op|'('
name|'base_url'
op|')'
newline|'\n'
name|'image_builder'
op|'='
name|'views'
op|'.'
name|'images'
op|'.'
name|'ViewBuilderV11'
op|'('
name|'base_url'
op|')'
newline|'\n'
nl|'\n'
name|'view_builder'
op|'='
name|'nova'
op|'.'
name|'api'
op|'.'
name|'openstack'
op|'.'
name|'views'
op|'.'
name|'servers'
op|'.'
name|'ViewBuilderV11'
op|'('
nl|'\n'
name|'address_builder'
op|','
nl|'\n'
name|'flavor_builder'
op|','
nl|'\n'
name|'image_builder'
op|','
nl|'\n'
name|'base_url'
op|','
nl|'\n'
op|')'
newline|'\n'
name|'return'
name|'view_builder'
newline|'\n'
nl|'\n'
DECL|member|test_build_server
dedent|''
name|'def'
name|'test_build_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_server'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"uuid"'
op|':'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v1.1/servers/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/servers/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'build'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'output'
op|','
name|'expected_server'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_detail
dedent|''
name|'def'
name|'test_build_server_detail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_bookmark'
op|'='
string|'"http://localhost/images/5"'
newline|'\n'
name|'flavor_bookmark'
op|'='
string|'"http://localhost/flavors/1"'
newline|'\n'
name|'expected_server'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"uuid"'
op|':'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
string|'"updated"'
op|':'
string|'"2010-11-11T11:00:00Z"'
op|','
nl|'\n'
string|'"created"'
op|':'
string|'"2010-10-10T12:00:00Z"'
op|','
nl|'\n'
string|'"progress"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server"'
op|','
nl|'\n'
string|'"status"'
op|':'
string|'"BUILD"'
op|','
nl|'\n'
string|'"hostId"'
op|':'
string|"''"
op|','
nl|'\n'
string|'"image"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"5"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'image_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'flavor_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"addresses"'
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v1.1/servers/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/servers/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'build'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'output'
op|','
name|'expected_server'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_detail_active_status
dedent|''
name|'def'
name|'test_build_server_detail_active_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'#set the power state of the instance to running'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'instance'
op|'['
string|"'state'"
op|']'
op|'='
number|'1'
newline|'\n'
name|'image_bookmark'
op|'='
string|'"http://localhost/images/5"'
newline|'\n'
name|'flavor_bookmark'
op|'='
string|'"http://localhost/flavors/1"'
newline|'\n'
name|'expected_server'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"uuid"'
op|':'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
string|'"updated"'
op|':'
string|'"2010-11-11T11:00:00Z"'
op|','
nl|'\n'
string|'"created"'
op|':'
string|'"2010-10-10T12:00:00Z"'
op|','
nl|'\n'
string|'"progress"'
op|':'
number|'100'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server"'
op|','
nl|'\n'
string|'"status"'
op|':'
string|'"ACTIVE"'
op|','
nl|'\n'
string|'"hostId"'
op|':'
string|"''"
op|','
nl|'\n'
string|'"image"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"5"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'image_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'flavor_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"addresses"'
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v1.1/servers/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/servers/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'build'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'output'
op|','
name|'expected_server'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_server_detail_with_metadata
dedent|''
name|'def'
name|'test_build_server_detail_with_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'metadata'
op|'='
op|'['
op|']'
newline|'\n'
name|'metadata'
op|'.'
name|'append'
op|'('
name|'InstanceMetadata'
op|'('
name|'key'
op|'='
string|'"Open"'
op|','
name|'value'
op|'='
string|'"Stack"'
op|')'
op|')'
newline|'\n'
name|'metadata'
op|'.'
name|'append'
op|'('
name|'InstanceMetadata'
op|'('
name|'key'
op|'='
string|'"Number"'
op|','
name|'value'
op|'='
number|'1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'metadata'"
op|']'
op|'='
name|'metadata'
newline|'\n'
nl|'\n'
name|'image_bookmark'
op|'='
string|'"http://localhost/images/5"'
newline|'\n'
name|'flavor_bookmark'
op|'='
string|'"http://localhost/flavors/1"'
newline|'\n'
name|'expected_server'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"uuid"'
op|':'
name|'self'
op|'.'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
string|'"updated"'
op|':'
string|'"2010-11-11T11:00:00Z"'
op|','
nl|'\n'
string|'"created"'
op|':'
string|'"2010-10-10T12:00:00Z"'
op|','
nl|'\n'
string|'"progress"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server"'
op|','
nl|'\n'
string|'"status"'
op|':'
string|'"BUILD"'
op|','
nl|'\n'
string|'"hostId"'
op|':'
string|"''"
op|','
nl|'\n'
string|'"image"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"5"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'image_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'flavor_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"addresses"'
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
nl|'\n'
string|'"Open"'
op|':'
string|'"Stack"'
op|','
nl|'\n'
string|'"Number"'
op|':'
string|'"1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/v1.1/servers/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
string|'"http://localhost/servers/1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'self'
op|'.'
name|'view_builder'
op|'.'
name|'build'
op|'('
name|'self'
op|'.'
name|'instance'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertDictMatch'
op|'('
name|'output'
op|','
name|'expected_server'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerXMLSerializationTest
dedent|''
dedent|''
name|'class'
name|'ServerXMLSerializationTest'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|TIMESTAMP
indent|'    '
name|'TIMESTAMP'
op|'='
string|'"2010-10-11T10:30:22Z"'
newline|'\n'
DECL|variable|SERVER_HREF
name|'SERVER_HREF'
op|'='
string|"'http://localhost/v1.1/servers/123'"
newline|'\n'
DECL|variable|SERVER_BOOKMARK
name|'SERVER_BOOKMARK'
op|'='
string|"'http://localhost/servers/123'"
newline|'\n'
DECL|variable|IMAGE_BOOKMARK
name|'IMAGE_BOOKMARK'
op|'='
string|"'http://localhost/images/5'"
newline|'\n'
DECL|variable|FLAVOR_BOOKMARK
name|'FLAVOR_BOOKMARK'
op|'='
string|"'http://localhost/flavors/1'"
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'maxDiff'
op|'='
name|'None'
newline|'\n'
name|'test'
op|'.'
name|'TestCase'
op|'.'
name|'setUp'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_show
dedent|''
name|'def'
name|'test_show'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'servers'
op|'.'
name|'ServerXMLSerializer'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'fixture'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"uuid"'
op|':'
name|'FAKE_UUID'
op|','
nl|'\n'
string|"'created'"
op|':'
name|'self'
op|'.'
name|'TIMESTAMP'
op|','
nl|'\n'
string|"'updated'"
op|':'
name|'self'
op|'.'
name|'TIMESTAMP'
op|','
nl|'\n'
string|'"progress"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server"'
op|','
nl|'\n'
string|'"status"'
op|':'
string|'"BUILD"'
op|','
nl|'\n'
string|'"hostId"'
op|':'
string|"'e4d909c290d0fb1ca068ffaddf22cbd0'"
op|','
nl|'\n'
string|'"image"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"5"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'IMAGE_BOOKMARK'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'FLAVOR_BOOKMARK'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"addresses"'
op|':'
op|'{'
nl|'\n'
string|'"network_one"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'4'
op|','
nl|'\n'
string|'"addr"'
op|':'
string|'"67.23.10.138"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'6'
op|','
nl|'\n'
string|'"addr"'
op|':'
string|'"::babe:67.23.10.138"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|'"network_two"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'4'
op|','
nl|'\n'
string|'"addr"'
op|':'
string|'"67.23.10.139"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'6'
op|','
nl|'\n'
string|'"addr"'
op|':'
string|'"::babe:67.23.10.139"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
nl|'\n'
string|'"Open"'
op|':'
string|'"Stack"'
op|','
nl|'\n'
string|'"Number"'
op|':'
string|'"1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'links'"
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'href'"
op|':'
name|'self'
op|'.'
name|'SERVER_HREF'
op|','
nl|'\n'
string|"'rel'"
op|':'
string|"'self'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'href'"
op|':'
name|'self'
op|'.'
name|'SERVER_BOOKMARK'
op|','
nl|'\n'
string|"'rel'"
op|':'
string|"'bookmark'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'fixture'
op|','
string|"'show'"
op|')'
newline|'\n'
name|'actual'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
name|'output'
op|'.'
name|'replace'
op|'('
string|'"  "'
op|','
string|'""'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'expected_server_href'
op|'='
name|'self'
op|'.'
name|'SERVER_HREF'
newline|'\n'
name|'expected_server_bookmark'
op|'='
name|'self'
op|'.'
name|'SERVER_BOOKMARK'
newline|'\n'
name|'expected_image_bookmark'
op|'='
name|'self'
op|'.'
name|'IMAGE_BOOKMARK'
newline|'\n'
name|'expected_flavor_bookmark'
op|'='
name|'self'
op|'.'
name|'FLAVOR_BOOKMARK'
newline|'\n'
name|'expected_now'
op|'='
name|'self'
op|'.'
name|'TIMESTAMP'
newline|'\n'
name|'expected_uuid'
op|'='
name|'FAKE_UUID'
newline|'\n'
name|'expected'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
string|'"""\n        <server id="1"\n                uuid="%(expected_uuid)s"\n                xmlns="http://docs.openstack.org/compute/api/v1.1"\n                xmlns:atom="http://www.w3.org/2005/Atom"\n                name="test_server"\n                updated="%(expected_now)s"\n                created="%(expected_now)s"\n                hostId="e4d909c290d0fb1ca068ffaddf22cbd0"\n                status="BUILD"\n                progress="0">\n            <atom:link href="%(expected_server_href)s" rel="self"/>\n            <atom:link href="%(expected_server_bookmark)s" rel="bookmark"/>\n            <image id="5">\n                <atom:link rel="bookmark" href="%(expected_image_bookmark)s"/>\n            </image>\n            <flavor id="1">\n                <atom:link rel="bookmark" href="%(expected_flavor_bookmark)s"/>\n            </flavor>\n            <metadata>\n                <meta key="Open">\n                    Stack\n                </meta>\n                <meta key="Number">\n                    1\n                </meta>\n            </metadata>\n            <addresses>\n                <network id="network_one">\n                    <ip version="4" addr="67.23.10.138"/>\n                    <ip version="6" addr="::babe:67.23.10.138"/>\n                </network>\n                <network id="network_two">\n                    <ip version="4" addr="67.23.10.139"/>\n                    <ip version="6" addr="::babe:67.23.10.139"/>\n                </network>\n            </addresses>\n        </server>\n        """'
op|'.'
name|'replace'
op|'('
string|'"  "'
op|','
string|'""'
op|')'
op|'%'
op|'('
name|'locals'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|'.'
name|'toxml'
op|'('
op|')'
op|','
name|'actual'
op|'.'
name|'toxml'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create
dedent|''
name|'def'
name|'test_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'servers'
op|'.'
name|'ServerXMLSerializer'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'fixture'
op|'='
op|'{'
nl|'\n'
string|'"server"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"uuid"'
op|':'
name|'FAKE_UUID'
op|','
nl|'\n'
string|"'created'"
op|':'
name|'self'
op|'.'
name|'TIMESTAMP'
op|','
nl|'\n'
string|"'updated'"
op|':'
name|'self'
op|'.'
name|'TIMESTAMP'
op|','
nl|'\n'
string|'"progress"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server"'
op|','
nl|'\n'
string|'"status"'
op|':'
string|'"BUILD"'
op|','
nl|'\n'
string|'"hostId"'
op|':'
string|'"e4d909c290d0fb1ca068ffaddf22cbd0"'
op|','
nl|'\n'
string|'"adminPass"'
op|':'
string|'"test_password"'
op|','
nl|'\n'
string|'"image"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"5"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'IMAGE_BOOKMARK'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'self'
op|'.'
name|'FLAVOR_BOOKMARK'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"addresses"'
op|':'
op|'{'
nl|'\n'
string|'"network_one"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'4'
op|','
nl|'\n'
string|'"addr"'
op|':'
string|'"67.23.10.138"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'6'
op|','
nl|'\n'
string|'"addr"'
op|':'
string|'"::babe:67.23.10.138"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|'"network_two"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'4'
op|','
nl|'\n'
string|'"addr"'
op|':'
string|'"67.23.10.139"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'6'
op|','
nl|'\n'
string|'"addr"'
op|':'
string|'"::babe:67.23.10.139"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
nl|'\n'
string|'"Open"'
op|':'
string|'"Stack"'
op|','
nl|'\n'
string|'"Number"'
op|':'
string|'"1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|"'links'"
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'href'"
op|':'
name|'self'
op|'.'
name|'SERVER_HREF'
op|','
nl|'\n'
string|"'rel'"
op|':'
string|"'self'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'href'"
op|':'
name|'self'
op|'.'
name|'SERVER_BOOKMARK'
op|','
nl|'\n'
string|"'rel'"
op|':'
string|"'bookmark'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'fixture'
op|','
string|"'create'"
op|')'
newline|'\n'
name|'actual'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
name|'output'
op|'.'
name|'replace'
op|'('
string|'"  "'
op|','
string|'""'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'expected_server_href'
op|'='
name|'self'
op|'.'
name|'SERVER_HREF'
newline|'\n'
name|'expected_server_bookmark'
op|'='
name|'self'
op|'.'
name|'SERVER_BOOKMARK'
newline|'\n'
name|'expected_image_bookmark'
op|'='
name|'self'
op|'.'
name|'IMAGE_BOOKMARK'
newline|'\n'
name|'expected_flavor_bookmark'
op|'='
name|'self'
op|'.'
name|'FLAVOR_BOOKMARK'
newline|'\n'
name|'expected_now'
op|'='
name|'self'
op|'.'
name|'TIMESTAMP'
newline|'\n'
name|'expected_uuid'
op|'='
name|'FAKE_UUID'
newline|'\n'
name|'expected'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
string|'"""\n        <server id="1"\n                uuid="%(expected_uuid)s"\n                xmlns="http://docs.openstack.org/compute/api/v1.1"\n                xmlns:atom="http://www.w3.org/2005/Atom"\n                name="test_server"\n                updated="%(expected_now)s"\n                created="%(expected_now)s"\n                hostId="e4d909c290d0fb1ca068ffaddf22cbd0"\n                status="BUILD"\n                adminPass="test_password"\n                progress="0">\n            <atom:link href="%(expected_server_href)s" rel="self"/>\n            <atom:link href="%(expected_server_bookmark)s" rel="bookmark"/>\n            <image id="5">\n                <atom:link rel="bookmark" href="%(expected_image_bookmark)s"/>\n            </image>\n            <flavor id="1">\n                <atom:link rel="bookmark" href="%(expected_flavor_bookmark)s"/>\n            </flavor>\n            <metadata>\n                <meta key="Open">\n                    Stack\n                </meta>\n                <meta key="Number">\n                    1\n                </meta>\n            </metadata>\n            <addresses>\n                <network id="network_one">\n                    <ip version="4" addr="67.23.10.138"/>\n                    <ip version="6" addr="::babe:67.23.10.138"/>\n                </network>\n                <network id="network_two">\n                    <ip version="4" addr="67.23.10.139"/>\n                    <ip version="6" addr="::babe:67.23.10.139"/>\n                </network>\n            </addresses>\n        </server>\n        """'
op|'.'
name|'replace'
op|'('
string|'"  "'
op|','
string|'""'
op|')'
op|'%'
op|'('
name|'locals'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|'.'
name|'toxml'
op|'('
op|')'
op|','
name|'actual'
op|'.'
name|'toxml'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_index
dedent|''
name|'def'
name|'test_index'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'servers'
op|'.'
name|'ServerXMLSerializer'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'expected_server_href'
op|'='
string|"'http://localhost/v1.1/servers/1'"
newline|'\n'
name|'expected_server_bookmark'
op|'='
string|"'http://localhost/servers/1'"
newline|'\n'
name|'expected_server_href_2'
op|'='
string|"'http://localhost/v1.1/servers/2'"
newline|'\n'
name|'expected_server_bookmark_2'
op|'='
string|"'http://localhost/servers/2'"
newline|'\n'
name|'fixture'
op|'='
op|'{'
string|'"servers"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server"'
op|','
nl|'\n'
string|"'links'"
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'href'"
op|':'
name|'expected_server_href'
op|','
nl|'\n'
string|"'rel'"
op|':'
string|"'self'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'href'"
op|':'
name|'expected_server_bookmark'
op|','
nl|'\n'
string|"'rel'"
op|':'
string|"'bookmark'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
number|'2'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server_2"'
op|','
nl|'\n'
string|"'links'"
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'href'"
op|':'
name|'expected_server_href_2'
op|','
nl|'\n'
string|"'rel'"
op|':'
string|"'self'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'href'"
op|':'
name|'expected_server_bookmark_2'
op|','
nl|'\n'
string|"'rel'"
op|':'
string|"'bookmark'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'fixture'
op|','
string|"'index'"
op|')'
newline|'\n'
name|'actual'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
name|'output'
op|'.'
name|'replace'
op|'('
string|'"  "'
op|','
string|'""'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
string|'"""\n        <servers xmlns="http://docs.openstack.org/compute/api/v1.1"\n                 xmlns:atom="http://www.w3.org/2005/Atom">\n        <server id="1" name="test_server">\n            <atom:link href="%(expected_server_href)s" rel="self"/>\n            <atom:link href="%(expected_server_bookmark)s" rel="bookmark"/>\n        </server>\n        <server id="2" name="test_server_2">\n            <atom:link href="%(expected_server_href_2)s" rel="self"/>\n            <atom:link href="%(expected_server_bookmark_2)s" rel="bookmark"/>\n        </server>\n        </servers>\n        """'
op|'.'
name|'replace'
op|'('
string|'"  "'
op|','
string|'""'
op|')'
op|'%'
op|'('
name|'locals'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|'.'
name|'toxml'
op|'('
op|')'
op|','
name|'actual'
op|'.'
name|'toxml'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_detail
dedent|''
name|'def'
name|'test_detail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serializer'
op|'='
name|'servers'
op|'.'
name|'ServerXMLSerializer'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'expected_server_href'
op|'='
string|"'http://localhost/v1.1/servers/1'"
newline|'\n'
name|'expected_server_bookmark'
op|'='
string|"'http://localhost/servers/1'"
newline|'\n'
name|'expected_image_bookmark'
op|'='
name|'self'
op|'.'
name|'IMAGE_BOOKMARK'
newline|'\n'
name|'expected_flavor_bookmark'
op|'='
name|'self'
op|'.'
name|'FLAVOR_BOOKMARK'
newline|'\n'
name|'expected_now'
op|'='
name|'self'
op|'.'
name|'TIMESTAMP'
newline|'\n'
name|'expected_uuid'
op|'='
name|'FAKE_UUID'
newline|'\n'
nl|'\n'
name|'expected_server_href_2'
op|'='
string|"'http://localhost/v1.1/servers/2'"
newline|'\n'
name|'expected_server_bookmark_2'
op|'='
string|"'http://localhost/servers/2'"
newline|'\n'
name|'fixture'
op|'='
op|'{'
string|'"servers"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"uuid"'
op|':'
name|'FAKE_UUID'
op|','
nl|'\n'
string|"'created'"
op|':'
name|'self'
op|'.'
name|'TIMESTAMP'
op|','
nl|'\n'
string|"'updated'"
op|':'
name|'self'
op|'.'
name|'TIMESTAMP'
op|','
nl|'\n'
string|'"progress"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server"'
op|','
nl|'\n'
string|'"status"'
op|':'
string|'"BUILD"'
op|','
nl|'\n'
string|'"hostId"'
op|':'
string|"'e4d909c290d0fb1ca068ffaddf22cbd0'"
op|','
nl|'\n'
string|'"image"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"5"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'expected_image_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'expected_flavor_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"addresses"'
op|':'
op|'{'
nl|'\n'
string|'"network_one"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'4'
op|','
nl|'\n'
string|'"addr"'
op|':'
string|'"67.23.10.138"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'6'
op|','
nl|'\n'
string|'"addr"'
op|':'
string|'"::babe:67.23.10.138"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
nl|'\n'
string|'"Number"'
op|':'
string|'"1"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"href"'
op|':'
name|'expected_server_href'
op|','
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"href"'
op|':'
name|'expected_server_bookmark'
op|','
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"id"'
op|':'
number|'2'
op|','
nl|'\n'
string|'"uuid"'
op|':'
name|'FAKE_UUID'
op|','
nl|'\n'
string|"'created'"
op|':'
name|'self'
op|'.'
name|'TIMESTAMP'
op|','
nl|'\n'
string|"'updated'"
op|':'
name|'self'
op|'.'
name|'TIMESTAMP'
op|','
nl|'\n'
string|'"progress"'
op|':'
number|'100'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"test_server_2"'
op|','
nl|'\n'
string|'"status"'
op|':'
string|'"ACTIVE"'
op|','
nl|'\n'
string|'"hostId"'
op|':'
string|"'e4d909c290d0fb1ca068ffaddf22cbd0'"
op|','
nl|'\n'
string|'"image"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"5"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'expected_image_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"flavor"'
op|':'
op|'{'
nl|'\n'
string|'"id"'
op|':'
string|'"1"'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
string|'"href"'
op|':'
name|'expected_flavor_bookmark'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"addresses"'
op|':'
op|'{'
nl|'\n'
string|'"network_one"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'4'
op|','
nl|'\n'
string|'"addr"'
op|':'
string|'"67.23.10.138"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"version"'
op|':'
number|'6'
op|','
nl|'\n'
string|'"addr"'
op|':'
string|'"::babe:67.23.10.138"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"metadata"'
op|':'
op|'{'
nl|'\n'
string|'"Number"'
op|':'
string|'"2"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
string|'"links"'
op|':'
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|'"href"'
op|':'
name|'expected_server_href_2'
op|','
nl|'\n'
string|'"rel"'
op|':'
string|'"self"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|'"href"'
op|':'
name|'expected_server_bookmark_2'
op|','
nl|'\n'
string|'"rel"'
op|':'
string|'"bookmark"'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'serializer'
op|'.'
name|'serialize'
op|'('
name|'fixture'
op|','
string|"'detail'"
op|')'
newline|'\n'
name|'actual'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
name|'output'
op|'.'
name|'replace'
op|'('
string|'"  "'
op|','
string|'""'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
name|'minidom'
op|'.'
name|'parseString'
op|'('
string|'"""\n        <servers xmlns="http://docs.openstack.org/compute/api/v1.1"\n                 xmlns:atom="http://www.w3.org/2005/Atom">\n        <server id="1"\n                uuid="%(expected_uuid)s"\n                name="test_server"\n                updated="%(expected_now)s"\n                created="%(expected_now)s"\n                hostId="e4d909c290d0fb1ca068ffaddf22cbd0"\n                status="BUILD"\n                progress="0">\n            <atom:link href="%(expected_server_href)s" rel="self"/>\n            <atom:link href="%(expected_server_bookmark)s" rel="bookmark"/>\n            <image id="5">\n                <atom:link rel="bookmark" href="%(expected_image_bookmark)s"/>\n            </image>\n            <flavor id="1">\n                <atom:link rel="bookmark" href="%(expected_flavor_bookmark)s"/>\n            </flavor>\n            <metadata>\n                <meta key="Number">\n                    1\n                </meta>\n            </metadata>\n            <addresses>\n                <network id="network_one">\n                    <ip version="4" addr="67.23.10.138"/>\n                    <ip version="6" addr="::babe:67.23.10.138"/>\n                </network>\n            </addresses>\n        </server>\n        <server id="2"\n                uuid="%(expected_uuid)s"\n                name="test_server_2"\n                updated="%(expected_now)s"\n                created="%(expected_now)s"\n                hostId="e4d909c290d0fb1ca068ffaddf22cbd0"\n                status="ACTIVE"\n                progress="100">\n            <atom:link href="%(expected_server_href_2)s" rel="self"/>\n            <atom:link href="%(expected_server_bookmark_2)s" rel="bookmark"/>\n            <image id="5">\n                <atom:link rel="bookmark" href="%(expected_image_bookmark)s"/>\n            </image>\n            <flavor id="1">\n                <atom:link rel="bookmark" href="%(expected_flavor_bookmark)s"/>\n            </flavor>\n            <metadata>\n                <meta key="Number">\n                    2\n                </meta>\n            </metadata>\n            <addresses>\n                <network id="network_one">\n                    <ip version="4" addr="67.23.10.138"/>\n                    <ip version="6" addr="::babe:67.23.10.138"/>\n                </network>\n            </addresses>\n        </server>\n        </servers>\n        """'
op|'.'
name|'replace'
op|'('
string|'"  "'
op|','
string|'""'
op|')'
op|'%'
op|'('
name|'locals'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|'.'
name|'toxml'
op|'('
op|')'
op|','
name|'actual'
op|'.'
name|'toxml'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
