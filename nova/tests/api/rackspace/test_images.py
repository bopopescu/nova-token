begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 OpenStack LLC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'logging'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
nl|'\n'
name|'import'
name|'stubout'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'rackspace'
name|'import'
name|'images'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'#{ Fixtures'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|variable|fixture_images
name|'fixture_images'
op|'='
op|'['
nl|'\n'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'image #1'"
op|','
nl|'\n'
string|"'updated'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'created'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'status'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'serverId'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'progress'"
op|':'
name|'None'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'image #2'"
op|','
nl|'\n'
string|"'updated'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'created'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'status'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'serverId'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'progress'"
op|':'
name|'None'
op|'}'
op|','
nl|'\n'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'image #3'"
op|','
nl|'\n'
string|"'updated'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'created'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'status'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'serverId'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'progress'"
op|':'
name|'None'
op|'}'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'#}'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|BaseImageServiceTests
name|'class'
name|'BaseImageServiceTests'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
string|'"""Tasks to test for all image services"""'
newline|'\n'
nl|'\n'
DECL|member|test_create_and_index
name|'def'
name|'test_create_and_index'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'i'
name|'in'
name|'fixture_images'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'service'
op|'.'
name|'create'
op|'('
name|'i'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'fixture_images'
op|')'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'service'
op|'.'
name|'index'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_and_update
dedent|''
name|'def'
name|'test_create_and_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ids'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'temp'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'fixture_images'
op|':'
newline|'\n'
indent|'            '
name|'ids'
op|'['
name|'self'
op|'.'
name|'service'
op|'.'
name|'create'
op|'('
name|'i'
op|')'
op|']'
op|'='
name|'temp'
newline|'\n'
name|'temp'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'fixture_images'
op|')'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'service'
op|'.'
name|'index'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'image_id'
op|','
name|'num'
name|'in'
name|'ids'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'new_data'
op|'='
name|'fixture_images'
op|'['
name|'num'
op|']'
newline|'\n'
name|'new_data'
op|'['
string|"'updated'"
op|']'
op|'='
string|"'test'"
op|'+'
name|'str'
op|'('
name|'num'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'service'
op|'.'
name|'update'
op|'('
name|'image_id'
op|','
name|'new_data'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'images'
op|'='
name|'self'
op|'.'
name|'service'
op|'.'
name|'index'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'images'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'test'"
op|'+'
name|'str'
op|'('
name|'ids'
op|'['
name|'i'
op|'['
string|"'id'"
op|']'
op|']'
op|')'
op|','
nl|'\n'
name|'i'
op|'['
string|"'updated'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_and_show
dedent|''
dedent|''
name|'def'
name|'test_create_and_show'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ids'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'temp'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'fixture_images'
op|':'
newline|'\n'
indent|'            '
name|'ids'
op|'['
name|'self'
op|'.'
name|'service'
op|'.'
name|'create'
op|'('
name|'i'
op|')'
op|']'
op|'='
name|'temp'
newline|'\n'
name|'temp'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'i'
name|'in'
name|'fixture_images'
op|':'
newline|'\n'
indent|'            '
name|'image'
op|'='
name|'self'
op|'.'
name|'service'
op|'.'
name|'show'
op|'('
name|'i'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'index'
op|'='
name|'ids'
op|'['
name|'i'
op|'['
string|"'id'"
op|']'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'image'
op|','
name|'fixture_images'
op|'['
name|'index'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'class'
name|'LocalImageServiceTest'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|','
nl|'\n'
DECL|class|LocalImageServiceTest
name|'BaseImageServiceTests'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
string|'"""Tests the local image service"""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stubs'
op|'='
name|'stubout'
op|'.'
name|'StubOutForTesting'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'service'
op|'='
name|'utils'
op|'.'
name|'import_object'
op|'('
string|"'nova.image.service.LocalImageService'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'service'
op|'.'
name|'delete_all'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'UnsetAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'#class GlanceImageServiceTest(unittest.TestCase,'
nl|'\n'
comment|'#                             BaseImageServiceTests):'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    """Tests the local image service"""'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    def setUp(self):'
nl|'\n'
comment|'#        self.stubs = stubout.StubOutForTesting()'
nl|'\n'
comment|"#        self.service = utils.import_object('nova.image.service.GlanceImageService')"
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    def tearDown(self):'
nl|'\n'
comment|'#        self.service.delete_all()'
nl|'\n'
comment|'#        self.stubs.UnsetAll()'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
