begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2011 Cloudscaling, Inc.'
nl|'\n'
comment|'# Author: Matthew Hooker <matt@cloudscaling.com>'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'base64'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
name|'import'
name|'validator'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ValidatorTestCase
name|'class'
name|'ValidatorTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_validate
indent|'    '
name|'def'
name|'test_validate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fixture'
op|'='
op|'{'
nl|'\n'
string|"'foo'"
op|':'
name|'lambda'
name|'val'
op|':'
name|'val'
op|'=='
name|'True'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'validator'
op|'.'
name|'validate'
op|'('
op|'{'
string|"'foo'"
op|':'
name|'True'
op|'}'
op|','
name|'fixture'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
nl|'\n'
name|'validator'
op|'.'
name|'validate'
op|'('
op|'{'
string|"'foo'"
op|':'
name|'False'
op|'}'
op|','
name|'fixture'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_only_tests_intersect
dedent|''
name|'def'
name|'test_only_tests_intersect'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Test that validator.validate only tests the intersect of keys\n        from args and validator.\n        """'
newline|'\n'
nl|'\n'
name|'fixture'
op|'='
op|'{'
nl|'\n'
string|"'foo'"
op|':'
name|'lambda'
name|'val'
op|':'
name|'True'
op|','
nl|'\n'
string|"'bar'"
op|':'
name|'lambda'
name|'val'
op|':'
name|'True'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'validator'
op|'.'
name|'validate'
op|'('
op|'{'
string|"'foo'"
op|':'
name|'True'
op|'}'
op|','
name|'fixture'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'validator'
op|'.'
name|'validate'
op|'('
op|'{'
string|"'foo'"
op|':'
name|'True'
op|','
string|"'bar'"
op|':'
name|'True'
op|'}'
op|','
name|'fixture'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'validator'
op|'.'
name|'validate'
op|'('
op|'{'
string|"'foo'"
op|':'
name|'True'
op|','
string|"'bar'"
op|':'
name|'True'
op|','
string|"'baz'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
name|'fixture'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_str
dedent|''
name|'def'
name|'test_validate_str'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'validator'
op|'.'
name|'validate_str'
op|'('
op|')'
op|'('
string|"'foo'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'validator'
op|'.'
name|'validate_str'
op|'('
op|')'
op|'('
number|'1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'validator'
op|'.'
name|'validate_str'
op|'('
number|'4'
op|')'
op|'('
string|"'foo'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'validator'
op|'.'
name|'validate_str'
op|'('
number|'2'
op|')'
op|'('
string|"'foo'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'validator'
op|'.'
name|'validate_str'
op|'('
op|')'
op|'('
name|'None'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'validator'
op|'.'
name|'validate_str'
op|'('
op|')'
op|'('
string|"u'foo'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_int
dedent|''
name|'def'
name|'test_validate_int'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'validator'
op|'.'
name|'validate_int'
op|'('
op|')'
op|'('
number|'1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'validator'
op|'.'
name|'validate_int'
op|'('
op|')'
op|'('
string|"'foo'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'validator'
op|'.'
name|'validate_int'
op|'('
number|'100'
op|')'
op|'('
number|'1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'validator'
op|'.'
name|'validate_int'
op|'('
number|'4'
op|')'
op|'('
number|'5'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'validator'
op|'.'
name|'validate_int'
op|'('
op|')'
op|'('
name|'None'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_ec2_id
dedent|''
name|'def'
name|'test_validate_ec2_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'validator'
op|'.'
name|'validate_ec2_id'
op|'('
string|"'foobar'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'validator'
op|'.'
name|'validate_ec2_id'
op|'('
string|"''"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'validator'
op|'.'
name|'validate_ec2_id'
op|'('
number|'1234'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'validator'
op|'.'
name|'validate_ec2_id'
op|'('
string|"'i-284f3a41'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_ipv4
dedent|''
name|'def'
name|'test_validate_ipv4'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'validator'
op|'.'
name|'validate_ipv4'
op|'('
string|"'4.2.2.4'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'validator'
op|'.'
name|'validate_ipv4'
op|'('
string|"'foobar'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
nl|'\n'
name|'validator'
op|'.'
name|'validate_ipv4'
op|'('
string|"'2001:5a8:4:68e0:e6ce:8fff:fe27:d116'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'validator'
op|'.'
name|'validate_ipv4'
op|'('
number|'123'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'validator'
op|'.'
name|'validate_ipv4'
op|'('
string|"''"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_url_path
dedent|''
name|'def'
name|'test_validate_url_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'validator'
op|'.'
name|'validate_url_path'
op|'('
string|"'/path/to/file'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'validator'
op|'.'
name|'validate_url_path'
op|'('
string|"'path/to/file'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
nl|'\n'
name|'validator'
op|'.'
name|'validate_url_path'
op|'('
string|"'#this is not a path!@#$%^&*()'"
op|')'
nl|'\n'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'validator'
op|'.'
name|'validate_url_path'
op|'('
name|'None'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'validator'
op|'.'
name|'validate_url_path'
op|'('
number|'123'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_image_path
dedent|''
name|'def'
name|'test_validate_image_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'validator'
op|'.'
name|'validate_image_path'
op|'('
string|"'path/to/file'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'validator'
op|'.'
name|'validate_image_path'
op|'('
string|"'/path/to/file'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'validator'
op|'.'
name|'validate_image_path'
op|'('
string|"'path'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_user_data
dedent|''
name|'def'
name|'test_validate_user_data'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fixture'
op|'='
name|'base64'
op|'.'
name|'b64encode'
op|'('
string|"'foo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'validator'
op|'.'
name|'validate_user_data'
op|'('
name|'fixture'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'validator'
op|'.'
name|'validate_user_data'
op|'('
name|'False'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'validator'
op|'.'
name|'validate_user_data'
op|'('
string|"'hello, world!'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_default_validator
dedent|''
name|'def'
name|'test_default_validator'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expect_pass'
op|'='
op|'{'
nl|'\n'
string|"'attribute'"
op|':'
string|"'foobar'"
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'validator'
op|'.'
name|'validate'
op|'('
name|'expect_pass'
op|','
nl|'\n'
name|'validator'
op|'.'
name|'DEFAULT_VALIDATOR'
op|')'
op|')'
newline|'\n'
name|'expect_fail'
op|'='
op|'{'
nl|'\n'
string|"'attribute'"
op|':'
number|'0'
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'validator'
op|'.'
name|'validate'
op|'('
name|'expect_fail'
op|','
nl|'\n'
name|'validator'
op|'.'
name|'DEFAULT_VALIDATOR'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
