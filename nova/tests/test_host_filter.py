begin_unit
comment|'# Copyright 2011 OpenStack LLC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nTests For Scheduler Host Filters.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'json'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
name|'import'
name|'host_filter'
newline|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeZoneManager
name|'class'
name|'FakeZoneManager'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HostFilterTestCase
dedent|''
name|'class'
name|'HostFilterTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for host filters."""'
newline|'\n'
nl|'\n'
DECL|member|_host_caps
name|'def'
name|'_host_caps'
op|'('
name|'self'
op|','
name|'multiplier'
op|')'
op|':'
newline|'\n'
comment|'# Returns host capabilities in the following way:'
nl|'\n'
comment|'# host1 = memory:free 10 (100max)'
nl|'\n'
comment|'#         disk:available 100 (1000max)'
nl|'\n'
comment|'# hostN = memory:free 10 + 10N'
nl|'\n'
comment|'#         disk:available 100 + 100N'
nl|'\n'
comment|'# in other words: hostN has more resources than host0'
nl|'\n'
comment|"# which means ... don't go above 10 hosts."
nl|'\n'
indent|'        '
name|'return'
op|'{'
string|"'host_name-description'"
op|':'
string|"'XenServer %s'"
op|'%'
name|'multiplier'
op|','
nl|'\n'
string|"'host_hostname'"
op|':'
string|"'xs-%s'"
op|'%'
name|'multiplier'
op|','
nl|'\n'
string|"'host_memory_total'"
op|':'
number|'100'
op|','
nl|'\n'
string|"'host_memory_overhead'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'host_memory_free'"
op|':'
number|'10'
op|'+'
name|'multiplier'
op|'*'
number|'10'
op|','
nl|'\n'
string|"'host_memory_free-computed'"
op|':'
number|'10'
op|'+'
name|'multiplier'
op|'*'
number|'10'
op|','
nl|'\n'
string|"'host_other-config'"
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|"'host_ip_address'"
op|':'
string|"'192.168.1.%d'"
op|'%'
op|'('
number|'100'
op|'+'
name|'multiplier'
op|')'
op|','
nl|'\n'
string|"'host_cpu_info'"
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|"'disk_available'"
op|':'
number|'100'
op|'+'
name|'multiplier'
op|'*'
number|'100'
op|','
nl|'\n'
string|"'disk_total'"
op|':'
number|'1000'
op|','
nl|'\n'
string|"'disk_used'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'host_uuid'"
op|':'
string|"'xxx-%d'"
op|'%'
name|'multiplier'
op|','
nl|'\n'
string|"'host_name-label'"
op|':'
string|"'xs-%s'"
op|'%'
name|'multiplier'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'old_flag'
op|'='
name|'FLAGS'
op|'.'
name|'default_host_filter'
newline|'\n'
name|'FLAGS'
op|'.'
name|'default_host_filter'
op|'='
string|"'nova.scheduler.host_filter.AllHostsFilter'"
newline|'\n'
name|'self'
op|'.'
name|'instance_type'
op|'='
name|'dict'
op|'('
name|'name'
op|'='
string|"'tiny'"
op|','
nl|'\n'
name|'memory_mb'
op|'='
number|'50'
op|','
nl|'\n'
name|'vcpus'
op|'='
number|'10'
op|','
nl|'\n'
name|'local_gb'
op|'='
number|'500'
op|','
nl|'\n'
name|'flavorid'
op|'='
number|'1'
op|','
nl|'\n'
name|'swap'
op|'='
number|'500'
op|','
nl|'\n'
name|'rxtx_quota'
op|'='
number|'30000'
op|','
nl|'\n'
name|'rxtx_cap'
op|'='
number|'200'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'zone_manager'
op|'='
name|'FakeZoneManager'
op|'('
op|')'
newline|'\n'
name|'states'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'xrange'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'states'
op|'['
string|"'host%02d'"
op|'%'
op|'('
name|'x'
op|'+'
number|'1'
op|')'
op|']'
op|'='
op|'{'
string|"'compute'"
op|':'
name|'self'
op|'.'
name|'_host_caps'
op|'('
name|'x'
op|')'
op|'}'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'zone_manager'
op|'.'
name|'service_states'
op|'='
name|'states'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'FLAGS'
op|'.'
name|'default_host_filter'
op|'='
name|'self'
op|'.'
name|'old_flag'
newline|'\n'
nl|'\n'
DECL|member|test_choose_filter
dedent|''
name|'def'
name|'test_choose_filter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test default filter ...'
nl|'\n'
indent|'        '
name|'hf'
op|'='
name|'host_filter'
op|'.'
name|'choose_host_filter'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'hf'
op|'.'
name|'_full_name'
op|'('
op|')'
op|','
nl|'\n'
string|"'nova.scheduler.host_filter.AllHostsFilter'"
op|')'
newline|'\n'
comment|'# Test valid filter ...'
nl|'\n'
name|'hf'
op|'='
name|'host_filter'
op|'.'
name|'choose_host_filter'
op|'('
nl|'\n'
string|"'nova.scheduler.host_filter.InstanceTypeFilter'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'hf'
op|'.'
name|'_full_name'
op|'('
op|')'
op|','
nl|'\n'
string|"'nova.scheduler.host_filter.InstanceTypeFilter'"
op|')'
newline|'\n'
comment|'# Test invalid filter ...'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'host_filter'
op|'.'
name|'choose_host_filter'
op|'('
string|"'does not exist'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Should not find host filter."'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'SchedulerHostFilterNotFound'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_all_host_filter
dedent|''
dedent|''
name|'def'
name|'test_all_host_filter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'hf'
op|'='
name|'host_filter'
op|'.'
name|'AllHostsFilter'
op|'('
op|')'
newline|'\n'
name|'cooked'
op|'='
name|'hf'
op|'.'
name|'instance_type_to_filter'
op|'('
name|'self'
op|'.'
name|'instance_type'
op|')'
newline|'\n'
name|'hosts'
op|'='
name|'hf'
op|'.'
name|'filter_hosts'
op|'('
name|'self'
op|'.'
name|'zone_manager'
op|','
name|'cooked'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'10'
op|','
name|'len'
op|'('
name|'hosts'
op|')'
op|')'
newline|'\n'
name|'for'
name|'host'
op|','
name|'capabilities'
name|'in'
name|'hosts'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'host'
op|'.'
name|'startswith'
op|'('
string|"'host'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_type_filter
dedent|''
dedent|''
name|'def'
name|'test_instance_type_filter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'hf'
op|'='
name|'host_filter'
op|'.'
name|'InstanceTypeFilter'
op|'('
op|')'
newline|'\n'
comment|'# filter all hosts that can support 50 ram and 500 disk'
nl|'\n'
name|'name'
op|','
name|'cooked'
op|'='
name|'hf'
op|'.'
name|'instance_type_to_filter'
op|'('
name|'self'
op|'.'
name|'instance_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'nova.scheduler.host_filter.InstanceTypeFilter'"
op|','
nl|'\n'
name|'name'
op|')'
newline|'\n'
name|'hosts'
op|'='
name|'hf'
op|'.'
name|'filter_hosts'
op|'('
name|'self'
op|'.'
name|'zone_manager'
op|','
name|'cooked'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'6'
op|','
name|'len'
op|'('
name|'hosts'
op|')'
op|')'
newline|'\n'
name|'just_hosts'
op|'='
op|'['
name|'host'
name|'for'
name|'host'
op|','
name|'caps'
name|'in'
name|'hosts'
op|']'
newline|'\n'
name|'just_hosts'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'host05'"
op|','
name|'just_hosts'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'host10'"
op|','
name|'just_hosts'
op|'['
number|'5'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_json_filter
dedent|''
name|'def'
name|'test_json_filter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'hf'
op|'='
name|'host_filter'
op|'.'
name|'JsonFilter'
op|'('
op|')'
newline|'\n'
comment|'# filter all hosts that can support 50 ram and 500 disk'
nl|'\n'
name|'name'
op|','
name|'cooked'
op|'='
name|'hf'
op|'.'
name|'instance_type_to_filter'
op|'('
name|'self'
op|'.'
name|'instance_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'nova.scheduler.host_filter.JsonFilter'"
op|','
name|'name'
op|')'
newline|'\n'
name|'hosts'
op|'='
name|'hf'
op|'.'
name|'filter_hosts'
op|'('
name|'self'
op|'.'
name|'zone_manager'
op|','
name|'cooked'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'6'
op|','
name|'len'
op|'('
name|'hosts'
op|')'
op|')'
newline|'\n'
name|'just_hosts'
op|'='
op|'['
name|'host'
name|'for'
name|'host'
op|','
name|'caps'
name|'in'
name|'hosts'
op|']'
newline|'\n'
name|'just_hosts'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'host05'"
op|','
name|'just_hosts'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'host10'"
op|','
name|'just_hosts'
op|'['
number|'5'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Try some custom queries'
nl|'\n'
nl|'\n'
name|'raw'
op|'='
op|'['
string|"'or'"
op|','
nl|'\n'
op|'['
string|"'and'"
op|','
nl|'\n'
op|'['
string|"'<'"
op|','
string|"'$compute.host_memory_free'"
op|','
number|'30'
op|']'
op|','
nl|'\n'
op|'['
string|"'<'"
op|','
string|"'$compute.disk_available'"
op|','
number|'300'
op|']'
nl|'\n'
op|']'
op|','
nl|'\n'
op|'['
string|"'and'"
op|','
nl|'\n'
op|'['
string|"'>'"
op|','
string|"'$compute.host_memory_free'"
op|','
number|'70'
op|']'
op|','
nl|'\n'
op|'['
string|"'>'"
op|','
string|"'$compute.disk_available'"
op|','
number|'700'
op|']'
nl|'\n'
op|']'
nl|'\n'
op|']'
newline|'\n'
name|'cooked'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'raw'
op|')'
newline|'\n'
name|'hosts'
op|'='
name|'hf'
op|'.'
name|'filter_hosts'
op|'('
name|'self'
op|'.'
name|'zone_manager'
op|','
name|'cooked'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'5'
op|','
name|'len'
op|'('
name|'hosts'
op|')'
op|')'
newline|'\n'
name|'just_hosts'
op|'='
op|'['
name|'host'
name|'for'
name|'host'
op|','
name|'caps'
name|'in'
name|'hosts'
op|']'
newline|'\n'
name|'just_hosts'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'for'
name|'index'
op|','
name|'host'
name|'in'
name|'zip'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|','
number|'8'
op|','
number|'9'
op|','
number|'10'
op|']'
op|','
name|'just_hosts'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'host%02d'"
op|'%'
name|'index'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'raw'
op|'='
op|'['
string|"'not'"
op|','
nl|'\n'
op|'['
string|"'='"
op|','
string|"'$compute.host_memory_free'"
op|','
number|'30'
op|']'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'cooked'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'raw'
op|')'
newline|'\n'
name|'hosts'
op|'='
name|'hf'
op|'.'
name|'filter_hosts'
op|'('
name|'self'
op|'.'
name|'zone_manager'
op|','
name|'cooked'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'9'
op|','
name|'len'
op|'('
name|'hosts'
op|')'
op|')'
newline|'\n'
name|'just_hosts'
op|'='
op|'['
name|'host'
name|'for'
name|'host'
op|','
name|'caps'
name|'in'
name|'hosts'
op|']'
newline|'\n'
name|'just_hosts'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'for'
name|'index'
op|','
name|'host'
name|'in'
name|'zip'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|','
number|'4'
op|','
number|'5'
op|','
number|'6'
op|','
number|'7'
op|','
number|'8'
op|','
number|'9'
op|','
number|'10'
op|']'
op|','
name|'just_hosts'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'host%02d'"
op|'%'
name|'index'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'raw'
op|'='
op|'['
string|"'in'"
op|','
string|"'$compute.host_memory_free'"
op|','
number|'20'
op|','
number|'40'
op|','
number|'60'
op|','
number|'80'
op|','
number|'100'
op|']'
newline|'\n'
name|'cooked'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'raw'
op|')'
newline|'\n'
name|'hosts'
op|'='
name|'hf'
op|'.'
name|'filter_hosts'
op|'('
name|'self'
op|'.'
name|'zone_manager'
op|','
name|'cooked'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'5'
op|','
name|'len'
op|'('
name|'hosts'
op|')'
op|')'
newline|'\n'
name|'just_hosts'
op|'='
op|'['
name|'host'
name|'for'
name|'host'
op|','
name|'caps'
name|'in'
name|'hosts'
op|']'
newline|'\n'
name|'just_hosts'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'for'
name|'index'
op|','
name|'host'
name|'in'
name|'zip'
op|'('
op|'['
number|'2'
op|','
number|'4'
op|','
number|'6'
op|','
number|'8'
op|','
number|'10'
op|']'
op|','
name|'just_hosts'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'host%02d'"
op|'%'
name|'index'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
comment|'# Try some bogus input ...'
nl|'\n'
dedent|''
name|'raw'
op|'='
op|'['
string|"'unknown command'"
op|','
op|']'
newline|'\n'
name|'cooked'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'raw'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'hf'
op|'.'
name|'filter_hosts'
op|'('
name|'self'
op|'.'
name|'zone_manager'
op|','
name|'cooked'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Should give KeyError"'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'hf'
op|'.'
name|'filter_hosts'
op|'('
name|'self'
op|'.'
name|'zone_manager'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
op|'['
op|']'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'hf'
op|'.'
name|'filter_hosts'
op|'('
name|'self'
op|'.'
name|'zone_manager'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
op|'{'
op|'}'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'hf'
op|'.'
name|'filter_hosts'
op|'('
name|'self'
op|'.'
name|'zone_manager'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
nl|'\n'
op|'['
string|"'not'"
op|','
name|'True'
op|','
name|'False'
op|','
name|'True'
op|','
name|'False'
op|']'
nl|'\n'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'hf'
op|'.'
name|'filter_hosts'
op|'('
name|'self'
op|'.'
name|'zone_manager'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
nl|'\n'
string|"'not'"
op|','
name|'True'
op|','
name|'False'
op|','
name|'True'
op|','
name|'False'
nl|'\n'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Should give KeyError"'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'hf'
op|'.'
name|'filter_hosts'
op|'('
name|'self'
op|'.'
name|'zone_manager'
op|','
nl|'\n'
name|'json'
op|'.'
name|'dumps'
op|'('
op|'['
string|"'='"
op|','
string|"'$foo'"
op|','
number|'100'
op|']'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'hf'
op|'.'
name|'filter_hosts'
op|'('
name|'self'
op|'.'
name|'zone_manager'
op|','
nl|'\n'
name|'json'
op|'.'
name|'dumps'
op|'('
op|'['
string|"'='"
op|','
string|"'$.....'"
op|','
number|'100'
op|']'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'hf'
op|'.'
name|'filter_hosts'
op|'('
name|'self'
op|'.'
name|'zone_manager'
op|','
nl|'\n'
name|'json'
op|'.'
name|'dumps'
op|'('
nl|'\n'
op|'['
string|"'>'"
op|','
op|'['
string|"'and'"
op|','
op|'['
string|"'or'"
op|','
op|'['
string|"'not'"
op|','
op|'['
string|"'<'"
op|','
op|'['
string|"'>='"
op|','
op|'['
string|"'<='"
op|','
op|'['
string|"'in'"
op|','
op|']'
op|']'
op|']'
op|']'
op|']'
op|']'
op|']'
op|']'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'hf'
op|'.'
name|'filter_hosts'
op|'('
name|'self'
op|'.'
name|'zone_manager'
op|','
nl|'\n'
name|'json'
op|'.'
name|'dumps'
op|'('
op|'['
string|"'='"
op|','
op|'{'
op|'}'
op|','
op|'['
string|"'>'"
op|','
string|"'$missing....foo'"
op|']'
op|']'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
