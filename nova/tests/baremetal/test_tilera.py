begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2011 University of Southern California'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
comment|'#'
nl|'\n'
nl|'\n'
name|'import'
name|'__builtin__'
newline|'\n'
name|'import'
name|'StringIO'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'baremetal'
name|'import'
name|'tilera'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TileraBareMetalNodesTestCase
name|'class'
name|'TileraBareMetalNodesTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TileraBareMetalNodesTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'board_info'
op|'='
string|'"\\n"'
op|'.'
name|'join'
op|'('
op|'['
nl|'\n'
string|"'# board_id  ip_address mac_address 00:1A:CA:00:57:90 '"
nl|'\n'
string|"'00:1A:CA:00:58:98 00:1A:CA:00:58:50'"
op|','
nl|'\n'
string|"'6            10.0.2.7   00:1A:CA:00:58:5C 10 16218 917 476 1 tilera_hv 1 '"
nl|'\n'
string|'\'{"vendor":"tilera","model":"TILEmpower","arch":"TILEPro64",\''
nl|'\n'
string|'\'"features":["8x8Grid","32bVLIW","5.6MBCache","443BOPS","37TbMesh",\''
nl|'\n'
string|'\'"700MHz-866MHz","4DDR2","2XAUIMAC/PHY","2GbEMAC"],\''
nl|'\n'
string|'\'"topology":{"cores":"64"}}\''
op|','
nl|'\n'
string|"'7            10.0.2.8   00:1A:CA:00:58:A4 10 16218 917 476 1 tilera_hv 1 '"
nl|'\n'
string|'\'{"vendor":"tilera","model":"TILEmpower","arch":"TILEPro64",\''
nl|'\n'
string|'\'"features":["8x8Grid","32bVLIW","5.6MBCache","443BOPS","37TbMesh",\''
nl|'\n'
string|'\'"700MHz-866MHz","4DDR2","2XAUIMAC/PHY","2GbEMAC"],\''
nl|'\n'
string|'\'"topology":{"cores":"64"}}\''
op|','
nl|'\n'
string|"'8            10.0.2.9   00:1A:CA:00:58:1A 10 16218 917 476 1 tilera_hv 1 '"
nl|'\n'
string|'\'{"vendor":"tilera","model":"TILEmpower","arch":"TILEPro64",\''
nl|'\n'
string|'\'"features":["8x8Grid","32bVLIW","5.6MBCache","443BOPS","37TbMesh",\''
nl|'\n'
string|'\'"700MHz-866MHz","4DDR2","2XAUIMAC/PHY","2GbEMAC"],\''
nl|'\n'
string|'\'"topology":{"cores":"64"}}\''
op|','
nl|'\n'
string|"'9            10.0.2.10  00:1A:CA:00:58:38 10 16385 1000 0 0 tilera_hv 1 '"
nl|'\n'
string|'\'{"vendor":"tilera","model":"TILEmpower","arch":"TILEPro64",\''
nl|'\n'
string|'\'"features":["8x8Grid","32bVLIW","5.6MBCache","443BOPS","37TbMesh",\''
nl|'\n'
string|'\'"700MHz-866MHz","4DDR2","2XAUIMAC/PHY","2GbEMAC"],\''
nl|'\n'
string|'\'"topology":{"cores":"64"}}\''
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TileraBareMetalNodesTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Reset the singleton state'
nl|'\n'
name|'tilera'
op|'.'
name|'BareMetalNodes'
op|'.'
name|'_instance'
op|'='
name|'None'
newline|'\n'
name|'tilera'
op|'.'
name|'BareMetalNodes'
op|'.'
name|'_is_init'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|test_singleton
dedent|''
name|'def'
name|'test_singleton'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Confirm that the object acts like a singleton.\n\n        In this case, we check that it only loads the config file once,\n        even though it has been instantiated multiple times"""'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'__builtin__'
op|','
string|"'open'"
op|')'
newline|'\n'
nl|'\n'
name|'open'
op|'('
string|'"/tftpboot/tilera_boards"'
op|','
nl|'\n'
string|'"r"'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
name|'self'
op|'.'
name|'board_info'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'nodes'
op|'='
name|'tilera'
op|'.'
name|'BareMetalNodes'
op|'('
string|'"/tftpboot/tilera_boards"'
op|')'
newline|'\n'
name|'nodes'
op|'='
name|'tilera'
op|'.'
name|'BareMetalNodes'
op|'('
string|'"/tftpboot/tilera_boards"'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_get_hw_info
dedent|''
dedent|''
name|'def'
name|'test_get_hw_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'__builtin__'
op|','
string|"'open'"
op|')'
newline|'\n'
nl|'\n'
name|'open'
op|'('
string|'"/tftpboot/tilera_boards"'
op|','
nl|'\n'
string|'"r"'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
name|'self'
op|'.'
name|'board_info'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'nodes'
op|'='
name|'tilera'
op|'.'
name|'BareMetalNodes'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'nodes'
op|'.'
name|'get_hw_info'
op|'('
string|"'vcpus'"
op|')'
op|','
number|'10'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'UnsetStubs'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
