begin_unit
comment|'# Copyright (c) 2012 Rackspace Hosting # All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nTests For Cells Messaging module\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'cells'
name|'import'
name|'messaging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'cells'
name|'import'
name|'utils'
name|'as'
name|'cells_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'base'
name|'as'
name|'objects_base'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'instance'
name|'as'
name|'instance_obj'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'timeutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'uuidutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'cells'
name|'import'
name|'fakes'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fake_instance_actions'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'name'"
op|','
string|"'nova.cells.opts'"
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'allowed_rpc_exception_modules'"
op|','
nl|'\n'
string|"'nova.openstack.common.rpc'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CellsMessageClassesTestCase
name|'class'
name|'CellsMessageClassesTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for the main Cells Message classes."""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CellsMessageClassesTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'init'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
comment|'# Need to be able to deserialize test.TestingException.'
nl|'\n'
name|'allowed_modules'
op|'='
name|'CONF'
op|'.'
name|'allowed_rpc_exception_modules'
newline|'\n'
name|'allowed_modules'
op|'.'
name|'append'
op|'('
string|"'nova.test'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'allowed_rpc_exception_modules'
op|'='
name|'allowed_modules'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'our_name'
op|'='
string|"'api-cell'"
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'='
name|'fakes'
op|'.'
name|'get_message_runner'
op|'('
name|'self'
op|'.'
name|'our_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'state_manager'
op|'='
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'state_manager'
newline|'\n'
nl|'\n'
DECL|member|test_reverse_path
dedent|''
name|'def'
name|'test_reverse_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
string|"'a!b!c!d'"
newline|'\n'
name|'expected'
op|'='
string|"'d!c!b!a'"
newline|'\n'
name|'rev_path'
op|'='
name|'messaging'
op|'.'
name|'_reverse_path'
op|'('
name|'path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'rev_path'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_response_cell_name_from_path
dedent|''
name|'def'
name|'test_response_cell_name_from_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# test array with tuples of inputs/expected outputs'
nl|'\n'
indent|'        '
name|'test_paths'
op|'='
op|'['
op|'('
string|"'cell1'"
op|','
string|"'cell1'"
op|')'
op|','
nl|'\n'
op|'('
string|"'cell1!cell2'"
op|','
string|"'cell2!cell1'"
op|')'
op|','
nl|'\n'
op|'('
string|"'cell1!cell2!cell3'"
op|','
string|"'cell3!cell2!cell1'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'test_input'
op|','
name|'expected_output'
name|'in'
name|'test_paths'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_output'
op|','
nl|'\n'
name|'messaging'
op|'.'
name|'_response_cell_name_from_path'
op|'('
name|'test_input'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_response_cell_name_from_path_neighbor_only
dedent|''
dedent|''
name|'def'
name|'test_response_cell_name_from_path_neighbor_only'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# test array with tuples of inputs/expected outputs'
nl|'\n'
indent|'        '
name|'test_paths'
op|'='
op|'['
op|'('
string|"'cell1'"
op|','
string|"'cell1'"
op|')'
op|','
nl|'\n'
op|'('
string|"'cell1!cell2'"
op|','
string|"'cell2!cell1'"
op|')'
op|','
nl|'\n'
op|'('
string|"'cell1!cell2!cell3'"
op|','
string|"'cell3!cell2'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'test_input'
op|','
name|'expected_output'
name|'in'
name|'test_paths'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_output'
op|','
nl|'\n'
name|'messaging'
op|'.'
name|'_response_cell_name_from_path'
op|'('
name|'test_input'
op|','
nl|'\n'
name|'neighbor_only'
op|'='
name|'True'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_targeted_message
dedent|''
dedent|''
name|'def'
name|'test_targeted_message'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_hop_count'
op|'='
number|'99'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
name|'target_cell'
op|'='
string|"'api-cell!child-cell2!grandchild-cell1'"
newline|'\n'
name|'method'
op|'='
string|"'fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'tgt_message'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method'
op|','
name|'tgt_message'
op|'.'
name|'method_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method_kwargs'
op|','
name|'tgt_message'
op|'.'
name|'method_kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'direction'
op|','
name|'tgt_message'
op|'.'
name|'direction'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'target_cell'
op|','
name|'target_cell'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'tgt_message'
op|'.'
name|'fanout'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'tgt_message'
op|'.'
name|'need_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'our_name'
op|','
name|'tgt_message'
op|'.'
name|'routing_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'tgt_message'
op|'.'
name|'hop_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'99'
op|','
name|'tgt_message'
op|'.'
name|'max_hop_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'tgt_message'
op|'.'
name|'is_broadcast'
op|')'
newline|'\n'
comment|'# Correct next hop?'
nl|'\n'
name|'next_hop'
op|'='
name|'tgt_message'
op|'.'
name|'_get_next_hop'
op|'('
op|')'
newline|'\n'
name|'child_cell'
op|'='
name|'self'
op|'.'
name|'state_manager'
op|'.'
name|'get_child_cell'
op|'('
string|"'child-cell2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'child_cell'
op|','
name|'next_hop'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_targeted_message_with_response
dedent|''
name|'def'
name|'test_create_targeted_message_with_response'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_hop_count'
op|'='
number|'99'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
name|'our_name'
op|'='
string|"'child-cell1'"
newline|'\n'
name|'target_cell'
op|'='
string|"'child-cell1!api-cell'"
newline|'\n'
name|'msg_runner'
op|'='
name|'fakes'
op|'.'
name|'get_message_runner'
op|'('
name|'our_name'
op|')'
newline|'\n'
name|'method'
op|'='
string|"'fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'up'"
newline|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|','
nl|'\n'
name|'need_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'tgt_message'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method'
op|','
name|'tgt_message'
op|'.'
name|'method_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method_kwargs'
op|','
name|'tgt_message'
op|'.'
name|'method_kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'direction'
op|','
name|'tgt_message'
op|'.'
name|'direction'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'target_cell'
op|','
name|'target_cell'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'tgt_message'
op|'.'
name|'fanout'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'tgt_message'
op|'.'
name|'need_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'our_name'
op|','
name|'tgt_message'
op|'.'
name|'routing_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'tgt_message'
op|'.'
name|'hop_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'99'
op|','
name|'tgt_message'
op|'.'
name|'max_hop_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'tgt_message'
op|'.'
name|'is_broadcast'
op|')'
newline|'\n'
comment|'# Correct next hop?'
nl|'\n'
name|'next_hop'
op|'='
name|'tgt_message'
op|'.'
name|'_get_next_hop'
op|'('
op|')'
newline|'\n'
name|'parent_cell'
op|'='
name|'msg_runner'
op|'.'
name|'state_manager'
op|'.'
name|'get_parent_cell'
op|'('
string|"'api-cell'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'parent_cell'
op|','
name|'next_hop'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_targeted_message_when_target_is_cell_state
dedent|''
name|'def'
name|'test_targeted_message_when_target_is_cell_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'method'
op|'='
string|"'fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
name|'target_cell'
op|'='
name|'self'
op|'.'
name|'state_manager'
op|'.'
name|'get_child_cell'
op|'('
string|"'child-cell2'"
op|')'
newline|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'api-cell!child-cell2'"
op|','
name|'tgt_message'
op|'.'
name|'target_cell'
op|')'
newline|'\n'
comment|'# Correct next hop?'
nl|'\n'
name|'next_hop'
op|'='
name|'tgt_message'
op|'.'
name|'_get_next_hop'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'target_cell'
op|','
name|'next_hop'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_targeted_message_when_target_cell_state_is_me
dedent|''
name|'def'
name|'test_targeted_message_when_target_cell_state_is_me'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'method'
op|'='
string|"'fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
name|'target_cell'
op|'='
name|'self'
op|'.'
name|'state_manager'
op|'.'
name|'get_my_state'
op|'('
op|')'
newline|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'api-cell'"
op|','
name|'tgt_message'
op|'.'
name|'target_cell'
op|')'
newline|'\n'
comment|'# Correct next hop?'
nl|'\n'
name|'next_hop'
op|'='
name|'tgt_message'
op|'.'
name|'_get_next_hop'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'target_cell'
op|','
name|'next_hop'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_broadcast_message
dedent|''
name|'def'
name|'test_create_broadcast_message'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_hop_count'
op|'='
number|'99'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'name'
op|'='
string|"'api-cell'"
op|','
name|'max_hop_count'
op|'='
number|'99'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
name|'method'
op|'='
string|"'fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
name|'bcast_message'
op|'='
name|'messaging'
op|'.'
name|'_BroadcastMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'bcast_message'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method'
op|','
name|'bcast_message'
op|'.'
name|'method_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method_kwargs'
op|','
name|'bcast_message'
op|'.'
name|'method_kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'direction'
op|','
name|'bcast_message'
op|'.'
name|'direction'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'bcast_message'
op|'.'
name|'fanout'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'bcast_message'
op|'.'
name|'need_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'our_name'
op|','
name|'bcast_message'
op|'.'
name|'routing_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'bcast_message'
op|'.'
name|'hop_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'99'
op|','
name|'bcast_message'
op|'.'
name|'max_hop_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'bcast_message'
op|'.'
name|'is_broadcast'
op|')'
newline|'\n'
comment|'# Correct next hops?'
nl|'\n'
name|'next_hops'
op|'='
name|'bcast_message'
op|'.'
name|'_get_next_hops'
op|'('
op|')'
newline|'\n'
name|'child_cells'
op|'='
name|'self'
op|'.'
name|'state_manager'
op|'.'
name|'get_child_cells'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'child_cells'
op|','
name|'next_hops'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_broadcast_message_with_response
dedent|''
name|'def'
name|'test_create_broadcast_message_with_response'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_hop_count'
op|'='
number|'99'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
name|'our_name'
op|'='
string|"'child-cell1'"
newline|'\n'
name|'msg_runner'
op|'='
name|'fakes'
op|'.'
name|'get_message_runner'
op|'('
name|'our_name'
op|')'
newline|'\n'
name|'method'
op|'='
string|"'fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'up'"
newline|'\n'
name|'bcast_message'
op|'='
name|'messaging'
op|'.'
name|'_BroadcastMessage'
op|'('
name|'msg_runner'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'method'
op|','
name|'method_kwargs'
op|','
name|'direction'
op|','
name|'need_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'bcast_message'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method'
op|','
name|'bcast_message'
op|'.'
name|'method_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method_kwargs'
op|','
name|'bcast_message'
op|'.'
name|'method_kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'direction'
op|','
name|'bcast_message'
op|'.'
name|'direction'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'bcast_message'
op|'.'
name|'fanout'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'bcast_message'
op|'.'
name|'need_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'our_name'
op|','
name|'bcast_message'
op|'.'
name|'routing_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'bcast_message'
op|'.'
name|'hop_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'99'
op|','
name|'bcast_message'
op|'.'
name|'max_hop_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'bcast_message'
op|'.'
name|'is_broadcast'
op|')'
newline|'\n'
comment|'# Correct next hops?'
nl|'\n'
name|'next_hops'
op|'='
name|'bcast_message'
op|'.'
name|'_get_next_hops'
op|'('
op|')'
newline|'\n'
name|'parent_cells'
op|'='
name|'msg_runner'
op|'.'
name|'state_manager'
op|'.'
name|'get_parent_cells'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'parent_cells'
op|','
name|'next_hops'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_self_targeted_message
dedent|''
name|'def'
name|'test_self_targeted_message'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'target_cell'
op|'='
string|"'api-cell'"
newline|'\n'
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
name|'call_info'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'call_info'
op|'['
string|"'context'"
op|']'
op|'='
name|'message'
op|'.'
name|'ctxt'
newline|'\n'
name|'call_info'
op|'['
string|"'routing_path'"
op|']'
op|'='
name|'message'
op|'.'
name|'routing_path'
newline|'\n'
name|'call_info'
op|'['
string|"'kwargs'"
op|']'
op|'='
name|'kwargs'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_tgt_method'
op|'('
name|'self'
op|','
string|"'api-cell'"
op|','
string|"'our_fake_method'"
op|','
nl|'\n'
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|')'
newline|'\n'
name|'tgt_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'call_info'
op|'['
string|"'context'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method_kwargs'
op|','
name|'call_info'
op|'['
string|"'kwargs'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'target_cell'
op|','
name|'call_info'
op|'['
string|"'routing_path'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_child_targeted_message
dedent|''
name|'def'
name|'test_child_targeted_message'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'target_cell'
op|'='
string|"'api-cell!child-cell1'"
newline|'\n'
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
name|'call_info'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'call_info'
op|'['
string|"'context'"
op|']'
op|'='
name|'message'
op|'.'
name|'ctxt'
newline|'\n'
name|'call_info'
op|'['
string|"'routing_path'"
op|']'
op|'='
name|'message'
op|'.'
name|'routing_path'
newline|'\n'
name|'call_info'
op|'['
string|"'kwargs'"
op|']'
op|'='
name|'kwargs'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_tgt_method'
op|'('
name|'self'
op|','
string|"'child-cell1'"
op|','
string|"'our_fake_method'"
op|','
nl|'\n'
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|')'
newline|'\n'
name|'tgt_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'call_info'
op|'['
string|"'context'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method_kwargs'
op|','
name|'call_info'
op|'['
string|"'kwargs'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'target_cell'
op|','
name|'call_info'
op|'['
string|"'routing_path'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_child_targeted_message_with_object
dedent|''
name|'def'
name|'test_child_targeted_message_with_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'target_cell'
op|'='
string|"'api-cell!child-cell1'"
newline|'\n'
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
name|'call_info'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|class|CellsMsgingTestObject
name|'class'
name|'CellsMsgingTestObject'
op|'('
name|'objects_base'
op|'.'
name|'NovaObject'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Test object.  We just need 1 field in order to test\n            that this gets serialized properly.\n            """'
newline|'\n'
DECL|variable|fields
name|'fields'
op|'='
op|'{'
string|"'test'"
op|':'
name|'str'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'test_obj'
op|'='
name|'CellsMsgingTestObject'
op|'('
op|')'
newline|'\n'
name|'test_obj'
op|'.'
name|'test'
op|'='
string|"'meow'"
newline|'\n'
nl|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'obj'
op|'='
name|'test_obj'
op|','
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'call_info'
op|'['
string|"'context'"
op|']'
op|'='
name|'message'
op|'.'
name|'ctxt'
newline|'\n'
name|'call_info'
op|'['
string|"'routing_path'"
op|']'
op|'='
name|'message'
op|'.'
name|'routing_path'
newline|'\n'
name|'call_info'
op|'['
string|"'kwargs'"
op|']'
op|'='
name|'kwargs'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_tgt_method'
op|'('
name|'self'
op|','
string|"'child-cell1'"
op|','
string|"'our_fake_method'"
op|','
nl|'\n'
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|')'
newline|'\n'
name|'tgt_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'call_info'
op|'['
string|"'context'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'target_cell'
op|','
name|'call_info'
op|'['
string|"'routing_path'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'call_info'
op|'['
string|"'kwargs'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'call_info'
op|'['
string|"'kwargs'"
op|']'
op|'['
string|"'arg1'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'call_info'
op|'['
string|"'kwargs'"
op|']'
op|'['
string|"'arg2'"
op|']'
op|')'
newline|'\n'
comment|'# Verify we get a new object with what we expect.'
nl|'\n'
name|'obj'
op|'='
name|'call_info'
op|'['
string|"'kwargs'"
op|']'
op|'['
string|"'obj'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'obj'
op|','
name|'CellsMsgingTestObject'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'id'
op|'('
name|'test_obj'
op|')'
op|','
name|'id'
op|'('
name|'obj'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'test_obj'
op|'.'
name|'test'
op|','
name|'obj'
op|'.'
name|'test'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_grandchild_targeted_message
dedent|''
name|'def'
name|'test_grandchild_targeted_message'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'target_cell'
op|'='
string|"'api-cell!child-cell2!grandchild-cell1'"
newline|'\n'
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
name|'call_info'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'call_info'
op|'['
string|"'context'"
op|']'
op|'='
name|'message'
op|'.'
name|'ctxt'
newline|'\n'
name|'call_info'
op|'['
string|"'routing_path'"
op|']'
op|'='
name|'message'
op|'.'
name|'routing_path'
newline|'\n'
name|'call_info'
op|'['
string|"'kwargs'"
op|']'
op|'='
name|'kwargs'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_tgt_method'
op|'('
name|'self'
op|','
string|"'grandchild-cell1'"
op|','
string|"'our_fake_method'"
op|','
nl|'\n'
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|')'
newline|'\n'
name|'tgt_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'call_info'
op|'['
string|"'context'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method_kwargs'
op|','
name|'call_info'
op|'['
string|"'kwargs'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'target_cell'
op|','
name|'call_info'
op|'['
string|"'routing_path'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_grandchild_targeted_message_with_response
dedent|''
name|'def'
name|'test_grandchild_targeted_message_with_response'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'target_cell'
op|'='
string|"'api-cell!child-cell2!grandchild-cell1'"
newline|'\n'
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
name|'call_info'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'call_info'
op|'['
string|"'context'"
op|']'
op|'='
name|'message'
op|'.'
name|'ctxt'
newline|'\n'
name|'call_info'
op|'['
string|"'routing_path'"
op|']'
op|'='
name|'message'
op|'.'
name|'routing_path'
newline|'\n'
name|'call_info'
op|'['
string|"'kwargs'"
op|']'
op|'='
name|'kwargs'
newline|'\n'
name|'return'
string|"'our_fake_response'"
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_tgt_method'
op|'('
name|'self'
op|','
string|"'grandchild-cell1'"
op|','
string|"'our_fake_method'"
op|','
nl|'\n'
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|','
nl|'\n'
name|'need_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'response'
op|'='
name|'tgt_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'call_info'
op|'['
string|"'context'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method_kwargs'
op|','
name|'call_info'
op|'['
string|"'kwargs'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'target_cell'
op|','
name|'call_info'
op|'['
string|"'routing_path'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'response'
op|'.'
name|'failure'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'response'
op|'.'
name|'value_or_raise'
op|'('
op|')'
op|','
string|"'our_fake_response'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_grandchild_targeted_message_with_error
dedent|''
name|'def'
name|'test_grandchild_targeted_message_with_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'target_cell'
op|'='
string|"'api-cell!child-cell2!grandchild-cell1'"
newline|'\n'
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
string|"'this should be returned'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_tgt_method'
op|'('
name|'self'
op|','
string|"'grandchild-cell1'"
op|','
string|"'our_fake_method'"
op|','
nl|'\n'
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|','
nl|'\n'
name|'need_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'response'
op|'='
name|'tgt_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'response'
op|'.'
name|'failure'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
name|'response'
op|'.'
name|'value_or_raise'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_grandchild_targeted_message_max_hops
dedent|''
name|'def'
name|'test_grandchild_targeted_message_max_hops'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_hop_count'
op|'='
number|'2'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
name|'target_cell'
op|'='
string|"'api-cell!child-cell2!grandchild-cell1'"
newline|'\n'
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
string|"'should not be reached'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_tgt_method'
op|'('
name|'self'
op|','
string|"'grandchild-cell1'"
op|','
string|"'our_fake_method'"
op|','
nl|'\n'
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|','
nl|'\n'
name|'need_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'response'
op|'='
name|'tgt_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'response'
op|'.'
name|'failure'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'CellMaxHopCountReached'
op|','
nl|'\n'
name|'response'
op|'.'
name|'value_or_raise'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_targeted_message_invalid_cell
dedent|''
name|'def'
name|'test_targeted_message_invalid_cell'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'target_cell'
op|'='
string|"'api-cell!child-cell2!grandchild-cell4'"
newline|'\n'
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|','
nl|'\n'
name|'need_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'response'
op|'='
name|'tgt_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'response'
op|'.'
name|'failure'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'CellRoutingInconsistency'
op|','
nl|'\n'
name|'response'
op|'.'
name|'value_or_raise'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_targeted_message_invalid_cell2
dedent|''
name|'def'
name|'test_targeted_message_invalid_cell2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'target_cell'
op|'='
string|"'unknown-cell!child-cell2'"
newline|'\n'
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|','
nl|'\n'
name|'need_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'response'
op|'='
name|'tgt_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'response'
op|'.'
name|'failure'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'CellRoutingInconsistency'
op|','
nl|'\n'
name|'response'
op|'.'
name|'value_or_raise'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_broadcast_routing
dedent|''
name|'def'
name|'test_broadcast_routing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
name|'cells'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cells'
op|'.'
name|'add'
op|'('
name|'message'
op|'.'
name|'routing_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_bcast_methods'
op|'('
name|'self'
op|','
string|"'our_fake_method'"
op|','
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'bcast_message'
op|'='
name|'messaging'
op|'.'
name|'_BroadcastMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
nl|'\n'
name|'direction'
op|','
nl|'\n'
name|'run_locally'
op|'='
name|'True'
op|')'
newline|'\n'
name|'bcast_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
comment|'# fakes creates 8 cells (including ourself).'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cells'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_broadcast_routing_up
dedent|''
name|'def'
name|'test_broadcast_routing_up'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'up'"
newline|'\n'
name|'msg_runner'
op|'='
name|'fakes'
op|'.'
name|'get_message_runner'
op|'('
string|"'grandchild-cell3'"
op|')'
newline|'\n'
nl|'\n'
name|'cells'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cells'
op|'.'
name|'add'
op|'('
name|'message'
op|'.'
name|'routing_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_bcast_methods'
op|'('
name|'self'
op|','
string|"'our_fake_method'"
op|','
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'bcast_message'
op|'='
name|'messaging'
op|'.'
name|'_BroadcastMessage'
op|'('
name|'msg_runner'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'method'
op|','
name|'method_kwargs'
op|','
nl|'\n'
name|'direction'
op|','
nl|'\n'
name|'run_locally'
op|'='
name|'True'
op|')'
newline|'\n'
name|'bcast_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
comment|"# Paths are reversed, since going 'up'"
nl|'\n'
name|'expected'
op|'='
name|'set'
op|'('
op|'['
string|"'grandchild-cell3'"
op|','
string|"'grandchild-cell3!child-cell3'"
op|','
nl|'\n'
string|"'grandchild-cell3!child-cell3!api-cell'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'cells'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_broadcast_routing_without_ourselves
dedent|''
name|'def'
name|'test_broadcast_routing_without_ourselves'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
name|'cells'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cells'
op|'.'
name|'add'
op|'('
name|'message'
op|'.'
name|'routing_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_bcast_methods'
op|'('
name|'self'
op|','
string|"'our_fake_method'"
op|','
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'bcast_message'
op|'='
name|'messaging'
op|'.'
name|'_BroadcastMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
nl|'\n'
name|'direction'
op|','
nl|'\n'
name|'run_locally'
op|'='
name|'False'
op|')'
newline|'\n'
name|'bcast_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
comment|'# fakes creates 8 cells (including ourself).  So we should see'
nl|'\n'
comment|'# only 7 here.'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cells'
op|')'
op|','
number|'7'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_broadcast_routing_with_response
dedent|''
name|'def'
name|'test_broadcast_routing_with_response'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'response-%s'"
op|'%'
name|'message'
op|'.'
name|'routing_path'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_bcast_methods'
op|'('
name|'self'
op|','
string|"'our_fake_method'"
op|','
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'bcast_message'
op|'='
name|'messaging'
op|'.'
name|'_BroadcastMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
nl|'\n'
name|'direction'
op|','
nl|'\n'
name|'run_locally'
op|'='
name|'True'
op|','
nl|'\n'
name|'need_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'responses'
op|'='
name|'bcast_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'responses'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
name|'for'
name|'response'
name|'in'
name|'responses'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'response'
op|'.'
name|'failure'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'response-%s'"
op|'%'
name|'response'
op|'.'
name|'cell_name'
op|','
nl|'\n'
name|'response'
op|'.'
name|'value_or_raise'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_broadcast_routing_with_response_max_hops
dedent|''
dedent|''
name|'def'
name|'test_broadcast_routing_with_response_max_hops'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_hop_count'
op|'='
number|'2'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'response-%s'"
op|'%'
name|'message'
op|'.'
name|'routing_path'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_bcast_methods'
op|'('
name|'self'
op|','
string|"'our_fake_method'"
op|','
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'bcast_message'
op|'='
name|'messaging'
op|'.'
name|'_BroadcastMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
nl|'\n'
name|'direction'
op|','
nl|'\n'
name|'run_locally'
op|'='
name|'True'
op|','
nl|'\n'
name|'need_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'responses'
op|'='
name|'bcast_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
comment|'# Should only get responses from our immediate children (and'
nl|'\n'
comment|'# ourselves)'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'responses'
op|')'
op|','
number|'5'
op|')'
newline|'\n'
name|'for'
name|'response'
name|'in'
name|'responses'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'response'
op|'.'
name|'failure'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'response-%s'"
op|'%'
name|'response'
op|'.'
name|'cell_name'
op|','
nl|'\n'
name|'response'
op|'.'
name|'value_or_raise'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_broadcast_routing_with_all_erroring
dedent|''
dedent|''
name|'def'
name|'test_broadcast_routing_with_all_erroring'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
string|"'fake failure'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_bcast_methods'
op|'('
name|'self'
op|','
string|"'our_fake_method'"
op|','
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'bcast_message'
op|'='
name|'messaging'
op|'.'
name|'_BroadcastMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
nl|'\n'
name|'direction'
op|','
nl|'\n'
name|'run_locally'
op|'='
name|'True'
op|','
nl|'\n'
name|'need_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'responses'
op|'='
name|'bcast_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'responses'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
name|'for'
name|'response'
name|'in'
name|'responses'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'response'
op|'.'
name|'failure'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
name|'response'
op|'.'
name|'value_or_raise'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_broadcast_routing_with_two_erroring
dedent|''
dedent|''
name|'def'
name|'test_broadcast_routing_with_two_erroring'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
DECL|function|our_fake_method_failing
name|'def'
name|'our_fake_method_failing'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
string|"'fake failure'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
dedent|''
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'response-%s'"
op|'%'
name|'message'
op|'.'
name|'routing_path'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_bcast_methods'
op|'('
name|'self'
op|','
string|"'our_fake_method'"
op|','
name|'our_fake_method'
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_bcast_method'
op|'('
name|'self'
op|','
string|"'child-cell2'"
op|','
string|"'our_fake_method'"
op|','
nl|'\n'
name|'our_fake_method_failing'
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_bcast_method'
op|'('
name|'self'
op|','
string|"'grandchild-cell3'"
op|','
string|"'our_fake_method'"
op|','
nl|'\n'
name|'our_fake_method_failing'
op|')'
newline|'\n'
nl|'\n'
name|'bcast_message'
op|'='
name|'messaging'
op|'.'
name|'_BroadcastMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
nl|'\n'
name|'direction'
op|','
nl|'\n'
name|'run_locally'
op|'='
name|'True'
op|','
nl|'\n'
name|'need_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'responses'
op|'='
name|'bcast_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'responses'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
name|'failure_responses'
op|'='
op|'['
name|'resp'
name|'for'
name|'resp'
name|'in'
name|'responses'
name|'if'
name|'resp'
op|'.'
name|'failure'
op|']'
newline|'\n'
name|'success_responses'
op|'='
op|'['
name|'resp'
name|'for'
name|'resp'
name|'in'
name|'responses'
name|'if'
name|'not'
name|'resp'
op|'.'
name|'failure'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'failure_responses'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'success_responses'
op|')'
op|','
number|'6'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'response'
name|'in'
name|'success_responses'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'response'
op|'.'
name|'failure'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'response-%s'"
op|'%'
name|'response'
op|'.'
name|'cell_name'
op|','
nl|'\n'
name|'response'
op|'.'
name|'value_or_raise'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'response'
name|'in'
name|'failure_responses'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'response'
op|'.'
name|'cell_name'
op|','
op|'['
string|"'api-cell!child-cell2'"
op|','
nl|'\n'
string|"'api-cell!child-cell3!grandchild-cell3'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'response'
op|'.'
name|'failure'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
name|'response'
op|'.'
name|'value_or_raise'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CellsTargetedMethodsTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'CellsTargetedMethodsTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for _TargetedMessageMethods class.  Most of these\n    tests actually test the full path from the MessageRunner through\n    to the functionality of the message method.  Hits 2 birds with 1\n    stone, even though it\'s a little more than a unit test.\n    """'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CellsTargetedMethodsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'init'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_setup_attrs'
op|'('
string|"'api-cell'"
op|','
string|"'api-cell!child-cell2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setup_attrs
dedent|''
name|'def'
name|'_setup_attrs'
op|'('
name|'self'
op|','
name|'source_cell'
op|','
name|'target_cell'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'tgt_cell_name'
op|'='
name|'target_cell'
newline|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'='
name|'fakes'
op|'.'
name|'get_message_runner'
op|'('
name|'source_cell'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'src_state_manager'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'state_manager'
newline|'\n'
name|'tgt_shortname'
op|'='
name|'target_cell'
op|'.'
name|'split'
op|'('
string|"'!'"
op|')'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'tgt_cell_mgr'
op|'='
name|'fakes'
op|'.'
name|'get_cells_manager'
op|'('
name|'tgt_shortname'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'='
name|'self'
op|'.'
name|'tgt_cell_mgr'
op|'.'
name|'msg_runner'
newline|'\n'
name|'self'
op|'.'
name|'tgt_scheduler'
op|'='
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'.'
name|'scheduler'
newline|'\n'
name|'self'
op|'.'
name|'tgt_state_manager'
op|'='
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'.'
name|'state_manager'
newline|'\n'
name|'methods_cls'
op|'='
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'.'
name|'methods_by_type'
op|'['
string|"'targeted'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'tgt_methods_cls'
op|'='
name|'methods_cls'
newline|'\n'
name|'self'
op|'.'
name|'tgt_compute_api'
op|'='
name|'methods_cls'
op|'.'
name|'compute_api'
newline|'\n'
name|'self'
op|'.'
name|'tgt_host_api'
op|'='
name|'methods_cls'
op|'.'
name|'host_api'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'='
name|'methods_cls'
op|'.'
name|'db'
newline|'\n'
name|'self'
op|'.'
name|'tgt_c_rpcapi'
op|'='
name|'methods_cls'
op|'.'
name|'compute_rpcapi'
newline|'\n'
nl|'\n'
DECL|member|test_schedule_run_instance
dedent|''
name|'def'
name|'test_schedule_run_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host_sched_kwargs'
op|'='
op|'{'
string|"'filter_properties'"
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|"'key1'"
op|':'
string|"'value1'"
op|','
nl|'\n'
string|"'key2'"
op|':'
string|"'value2'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_scheduler'
op|','
string|"'run_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_scheduler'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'host_sched_kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'schedule_run_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tgt_cell_name'
op|','
nl|'\n'
name|'host_sched_kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_build_instances
dedent|''
name|'def'
name|'test_build_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'build_inst_kwargs'
op|'='
op|'{'
string|"'filter_properties'"
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|"'key1'"
op|':'
string|"'value1'"
op|','
nl|'\n'
string|"'key2'"
op|':'
string|"'value2'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_scheduler'
op|','
string|"'build_instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_scheduler'
op|'.'
name|'build_instances'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'build_inst_kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'build_instances'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'tgt_cell_name'
op|','
nl|'\n'
name|'build_inst_kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_compute_api_method
dedent|''
name|'def'
name|'test_run_compute_api_method'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'instance_uuid'
op|'='
string|"'fake_instance_uuid'"
newline|'\n'
name|'method_info'
op|'='
op|'{'
string|"'method'"
op|':'
string|"'backup'"
op|','
nl|'\n'
string|"'method_args'"
op|':'
op|'('
name|'instance_uuid'
op|','
number|'2'
op|','
number|'3'
op|')'
op|','
nl|'\n'
string|"'method_kwargs'"
op|':'
op|'{'
string|"'arg1'"
op|':'
string|"'val1'"
op|','
string|"'arg2'"
op|':'
string|"'val2'"
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_compute_api'
op|','
string|"'backup'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance_uuid'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_compute_api'
op|'.'
name|'backup'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake_instance'"
op|','
number|'2'
op|','
number|'3'
op|','
nl|'\n'
name|'arg1'
op|'='
string|"'val1'"
op|','
name|'arg2'
op|'='
string|"'val2'"
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake_result'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'run_compute_api_method'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tgt_cell_name'
op|','
nl|'\n'
name|'method_info'
op|','
nl|'\n'
name|'True'
op|')'
newline|'\n'
name|'result'
op|'='
name|'response'
op|'.'
name|'value_or_raise'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake_result'"
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_compute_api_method_expects_obj
dedent|''
name|'def'
name|'test_run_compute_api_method_expects_obj'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
string|"'fake_instance_uuid'"
newline|'\n'
name|'method_info'
op|'='
op|'{'
string|"'method'"
op|':'
string|"'start'"
op|','
nl|'\n'
string|"'method_args'"
op|':'
op|'('
name|'instance_uuid'
op|','
number|'2'
op|','
number|'3'
op|')'
op|','
nl|'\n'
string|"'method_kwargs'"
op|':'
op|'{'
string|"'arg1'"
op|':'
string|"'val1'"
op|','
string|"'arg2'"
op|':'
string|"'val2'"
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_compute_api'
op|','
string|"'start'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance_uuid'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake_instance'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_instance_mock
name|'def'
name|'get_instance_mock'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# NOTE(comstud): This block of code simulates the following'
nl|'\n'
comment|'# mox code:'
nl|'\n'
comment|'#'
nl|'\n'
comment|"# self.mox.StubOutWithMock(instance_obj, 'Instance',"
nl|'\n'
comment|'#                          use_mock_anything=True)'
nl|'\n'
comment|'# self.mox.StubOutWithMock(instance_obj.Instance,'
nl|'\n'
comment|"#                          '_from_db_object')"
nl|'\n'
comment|'# instance_mock = self.mox.CreateMock(instance_obj.Instance)'
nl|'\n'
comment|'# instance_obj.Instance().AndReturn(instance_mock)'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unfortunately, the above code fails on py27 do to some'
nl|'\n'
comment|'# issue with the Mock object do to similar issue as this:'
nl|'\n'
comment|'# https://code.google.com/p/pymox/issues/detail?id=35'
nl|'\n'
comment|'#'
nl|'\n'
DECL|class|FakeInstance
indent|'            '
name|'class'
name|'FakeInstance'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'                '
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|_from_db_object
name|'def'
name|'_from_db_object'
op|'('
name|'cls'
op|','
name|'ctxt'
op|','
name|'obj'
op|','
name|'db_obj'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'instance_mock'
op|'='
name|'FakeInstance'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_instance
name|'def'
name|'fake_instance'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'instance_mock'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'instance_obj'
op|','
string|"'Instance'"
op|','
name|'fake_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance_mock'
op|','
string|"'_from_db_object'"
op|')'
newline|'\n'
name|'return'
name|'instance_mock'
newline|'\n'
nl|'\n'
dedent|''
name|'instance'
op|'='
name|'get_instance_mock'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|','
string|"'fake_instance'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_compute_api'
op|'.'
name|'start'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|','
number|'2'
op|','
number|'3'
op|','
nl|'\n'
name|'arg1'
op|'='
string|"'val1'"
op|','
name|'arg2'
op|'='
string|"'val2'"
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake_result'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'run_compute_api_method'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tgt_cell_name'
op|','
nl|'\n'
name|'method_info'
op|','
nl|'\n'
name|'True'
op|')'
newline|'\n'
name|'result'
op|'='
name|'response'
op|'.'
name|'value_or_raise'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake_result'"
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_compute_api_method_unknown_instance
dedent|''
name|'def'
name|'test_run_compute_api_method_unknown_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Unknown instance should send a broadcast up that instance'
nl|'\n'
comment|'# is gone.'
nl|'\n'
indent|'        '
name|'instance_uuid'
op|'='
string|"'fake_instance_uuid'"
newline|'\n'
name|'instance'
op|'='
op|'{'
string|"'uuid'"
op|':'
name|'instance_uuid'
op|'}'
newline|'\n'
name|'method_info'
op|'='
op|'{'
string|"'method'"
op|':'
string|"'reboot'"
op|','
nl|'\n'
string|"'method_args'"
op|':'
op|'('
name|'instance_uuid'
op|','
number|'2'
op|','
number|'3'
op|')'
op|','
nl|'\n'
string|"'method_kwargs'"
op|':'
op|'{'
string|"'arg1'"
op|':'
string|"'val1'"
op|','
string|"'arg2'"
op|':'
string|"'val2'"
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_msg_runner'
op|','
nl|'\n'
string|"'instance_destroy_at_top'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake_instance_uuid'"
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'instance_uuid'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'.'
name|'instance_destroy_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'run_compute_api_method'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tgt_cell_name'
op|','
nl|'\n'
name|'method_info'
op|','
nl|'\n'
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'response'
op|'.'
name|'value_or_raise'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_capabilities
dedent|''
name|'def'
name|'test_update_capabilities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Route up to API'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_attrs'
op|'('
string|"'child-cell2'"
op|','
string|"'child-cell2!api-cell'"
op|')'
newline|'\n'
name|'capabs'
op|'='
op|'{'
string|"'cap1'"
op|':'
name|'set'
op|'('
op|'['
string|"'val1'"
op|','
string|"'val2'"
op|']'
op|')'
op|','
nl|'\n'
string|"'cap2'"
op|':'
name|'set'
op|'('
op|'['
string|"'val3'"
op|']'
op|')'
op|'}'
newline|'\n'
comment|"# The list(set([])) seems silly, but we can't assume the order"
nl|'\n'
comment|"# of the list... This behavior should match the code we're"
nl|'\n'
comment|'# testing... which is check that a set was converted to a list.'
nl|'\n'
name|'expected_capabs'
op|'='
op|'{'
string|"'cap1'"
op|':'
name|'list'
op|'('
name|'set'
op|'('
op|'['
string|"'val1'"
op|','
string|"'val2'"
op|']'
op|')'
op|')'
op|','
nl|'\n'
string|"'cap2'"
op|':'
op|'['
string|"'val3'"
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_state_manager'
op|','
nl|'\n'
string|"'get_our_capabilities'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_state_manager'
op|','
nl|'\n'
string|"'update_cell_capabilities'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_msg_runner'
op|','
nl|'\n'
string|"'tell_parents_our_capabilities'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'src_state_manager'
op|'.'
name|'get_our_capabilities'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'capabs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_state_manager'
op|'.'
name|'update_cell_capabilities'
op|'('
string|"'child-cell2'"
op|','
nl|'\n'
name|'expected_capabs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'.'
name|'tell_parents_our_capabilities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'tell_parents_our_capabilities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_capacities
dedent|''
name|'def'
name|'test_update_capacities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_attrs'
op|'('
string|"'child-cell2'"
op|','
string|"'child-cell2!api-cell'"
op|')'
newline|'\n'
name|'capacs'
op|'='
string|"'fake_capacs'"
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_state_manager'
op|','
nl|'\n'
string|"'get_our_capacities'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_state_manager'
op|','
nl|'\n'
string|"'update_cell_capacities'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_msg_runner'
op|','
nl|'\n'
string|"'tell_parents_our_capacities'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'src_state_manager'
op|'.'
name|'get_our_capacities'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'capacs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_state_manager'
op|'.'
name|'update_cell_capacities'
op|'('
string|"'child-cell2'"
op|','
nl|'\n'
name|'capacs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'.'
name|'tell_parents_our_capacities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'tell_parents_our_capacities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_announce_capabilities
dedent|''
name|'def'
name|'test_announce_capabilities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_attrs'
op|'('
string|"'api-cell'"
op|','
string|"'api-cell!child-cell1'"
op|')'
newline|'\n'
comment|'# To make this easier to test, make us only have 1 child cell.'
nl|'\n'
name|'cell_state'
op|'='
name|'self'
op|'.'
name|'src_state_manager'
op|'.'
name|'child_cells'
op|'['
string|"'child-cell1'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'src_state_manager'
op|'.'
name|'child_cells'
op|'='
op|'{'
string|"'child-cell1'"
op|':'
name|'cell_state'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_msg_runner'
op|','
nl|'\n'
string|"'tell_parents_our_capabilities'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'.'
name|'tell_parents_our_capabilities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'ask_children_for_capabilities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_announce_capacities
dedent|''
name|'def'
name|'test_announce_capacities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_attrs'
op|'('
string|"'api-cell'"
op|','
string|"'api-cell!child-cell1'"
op|')'
newline|'\n'
comment|'# To make this easier to test, make us only have 1 child cell.'
nl|'\n'
name|'cell_state'
op|'='
name|'self'
op|'.'
name|'src_state_manager'
op|'.'
name|'child_cells'
op|'['
string|"'child-cell1'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'src_state_manager'
op|'.'
name|'child_cells'
op|'='
op|'{'
string|"'child-cell1'"
op|':'
name|'cell_state'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_msg_runner'
op|','
nl|'\n'
string|"'tell_parents_our_capacities'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'.'
name|'tell_parents_our_capacities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'ask_children_for_capacities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_compute_host
dedent|''
name|'def'
name|'test_service_get_by_compute_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_host_name'
op|'='
string|"'fake-host-name'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
nl|'\n'
string|"'service_get_by_compute_host'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'service_get_by_compute_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'fake_host_name'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake-service'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'service_get_by_compute_host'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tgt_cell_name'
op|','
nl|'\n'
name|'fake_host_name'
op|')'
newline|'\n'
name|'result'
op|'='
name|'response'
op|'.'
name|'value_or_raise'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-service'"
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_update
dedent|''
name|'def'
name|'test_service_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'binary'
op|'='
string|"'nova-compute'"
newline|'\n'
name|'fake_service'
op|'='
name|'dict'
op|'('
name|'id'
op|'='
number|'42'
op|','
name|'host'
op|'='
string|"'fake_host'"
op|','
name|'binary'
op|'='
string|"'nova-compute'"
op|','
nl|'\n'
name|'topic'
op|'='
string|"'compute'"
op|')'
newline|'\n'
name|'fake_compute'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'id'
op|'='
number|'7116'
op|','
name|'service_id'
op|'='
number|'42'
op|','
name|'host'
op|'='
string|"'fake_host'"
op|','
name|'vcpus'
op|'='
number|'0'
op|','
name|'memory_mb'
op|'='
number|'0'
op|','
nl|'\n'
name|'local_gb'
op|'='
number|'0'
op|','
name|'vcpus_used'
op|'='
number|'0'
op|','
name|'memory_mb_used'
op|'='
number|'0'
op|','
name|'local_gb_used'
op|'='
number|'0'
op|','
nl|'\n'
name|'hypervisor_type'
op|'='
number|'0'
op|','
name|'hypervisor_version'
op|'='
number|'0'
op|','
name|'hypervisor_hostname'
op|'='
number|'0'
op|','
nl|'\n'
name|'free_ram_mb'
op|'='
number|'0'
op|','
name|'free_disk_gb'
op|'='
number|'0'
op|','
name|'current_workload'
op|'='
number|'0'
op|','
name|'running_vms'
op|'='
number|'0'
op|','
nl|'\n'
name|'cpu_info'
op|'='
string|"'HAL'"
op|','
name|'disk_available_least'
op|'='
number|'0'
op|')'
newline|'\n'
name|'params_to_update'
op|'='
op|'{'
string|"'disabled'"
op|':'
name|'True'
op|','
string|"'report_count'"
op|':'
number|'13'
op|'}'
newline|'\n'
nl|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake_user'"
op|','
string|"'fake_project'"
op|','
nl|'\n'
name|'is_admin'
op|'='
name|'True'
op|')'
newline|'\n'
comment|"# We use the real DB for this test, as it's too hard to reach the"
nl|'\n'
comment|'# host_api to mock out its DB methods'
nl|'\n'
name|'db'
op|'.'
name|'service_create'
op|'('
name|'ctxt'
op|','
name|'fake_service'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'compute_node_create'
op|'('
name|'ctxt'
op|','
name|'fake_compute'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'service_update'
op|'('
nl|'\n'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'tgt_cell_name'
op|','
nl|'\n'
string|"'fake_host'"
op|','
name|'binary'
op|','
name|'params_to_update'
op|')'
newline|'\n'
name|'result'
op|'='
name|'response'
op|'.'
name|'value_or_raise'
op|'('
op|')'
newline|'\n'
name|'result'
op|'.'
name|'pop'
op|'('
string|"'created_at'"
op|','
name|'None'
op|')'
newline|'\n'
name|'result'
op|'.'
name|'pop'
op|'('
string|"'updated_at'"
op|','
name|'None'
op|')'
newline|'\n'
name|'result'
op|'.'
name|'pop'
op|'('
string|"'disabled_reason'"
op|','
name|'None'
op|')'
newline|'\n'
name|'expected_result'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'deleted'
op|'='
number|'0'
op|','
name|'deleted_at'
op|'='
name|'None'
op|','
nl|'\n'
name|'binary'
op|'='
name|'fake_service'
op|'['
string|"'binary'"
op|']'
op|','
nl|'\n'
name|'disabled'
op|'='
name|'True'
op|','
comment|'# We just updated this..'
nl|'\n'
name|'report_count'
op|'='
number|'13'
op|','
comment|'# ..and this'
nl|'\n'
name|'host'
op|'='
string|"'fake_host'"
op|','
name|'id'
op|'='
number|'42'
op|','
nl|'\n'
name|'topic'
op|'='
string|"'compute'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_result'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_proxy_rpc_to_manager_call
dedent|''
name|'def'
name|'test_proxy_rpc_to_manager_call'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_topic'
op|'='
string|"'fake-topic'"
newline|'\n'
name|'fake_rpc_message'
op|'='
string|"'fake-rpc-message'"
newline|'\n'
name|'fake_host_name'
op|'='
string|"'fake-host-name'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
nl|'\n'
string|"'service_get_by_compute_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpc'
op|','
string|"'call'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'service_get_by_compute_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'fake_host_name'
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fake_topic'
op|','
nl|'\n'
name|'fake_rpc_message'
op|','
name|'timeout'
op|'='
number|'5'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake_result'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'proxy_rpc_to_manager'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tgt_cell_name'
op|','
nl|'\n'
name|'fake_host_name'
op|','
nl|'\n'
name|'fake_topic'
op|','
nl|'\n'
name|'fake_rpc_message'
op|','
name|'True'
op|','
name|'timeout'
op|'='
number|'5'
op|')'
newline|'\n'
name|'result'
op|'='
name|'response'
op|'.'
name|'value_or_raise'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake_result'"
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_proxy_rpc_to_manager_cast
dedent|''
name|'def'
name|'test_proxy_rpc_to_manager_cast'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_topic'
op|'='
string|"'fake-topic'"
newline|'\n'
name|'fake_rpc_message'
op|'='
string|"'fake-rpc-message'"
newline|'\n'
name|'fake_host_name'
op|'='
string|"'fake-host-name'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
nl|'\n'
string|"'service_get_by_compute_host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'rpc'
op|','
string|"'cast'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'service_get_by_compute_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'fake_host_name'
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'cast'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fake_topic'
op|','
name|'fake_rpc_message'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'proxy_rpc_to_manager'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tgt_cell_name'
op|','
nl|'\n'
name|'fake_host_name'
op|','
nl|'\n'
name|'fake_topic'
op|','
nl|'\n'
name|'fake_rpc_message'
op|','
name|'False'
op|','
name|'timeout'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_task_log_get_all_targetted
dedent|''
name|'def'
name|'test_task_log_get_all_targetted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'task_name'
op|'='
string|"'fake_task_name'"
newline|'\n'
name|'begin'
op|'='
string|"'fake_begin'"
newline|'\n'
name|'end'
op|'='
string|"'fake_end'"
newline|'\n'
name|'host'
op|'='
string|"'fake_host'"
newline|'\n'
name|'state'
op|'='
string|"'fake_state'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
string|"'task_log_get_all'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'task_log_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'task_name'
op|','
nl|'\n'
name|'begin'
op|','
name|'end'
op|','
name|'host'
op|'='
name|'host'
op|','
nl|'\n'
name|'state'
op|'='
name|'state'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
string|"'fake_result'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'task_log_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tgt_cell_name'
op|','
name|'task_name'
op|','
name|'begin'
op|','
name|'end'
op|','
name|'host'
op|'='
name|'host'
op|','
nl|'\n'
name|'state'
op|'='
name|'state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'response'
op|','
name|'list'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'response'
op|')'
op|')'
newline|'\n'
name|'result'
op|'='
name|'response'
op|'['
number|'0'
op|']'
op|'.'
name|'value_or_raise'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'fake_result'"
op|']'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_get
dedent|''
name|'def'
name|'test_compute_node_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'compute_id'
op|'='
string|"'fake-id'"
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
string|"'compute_node_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'compute_node_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'compute_id'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake_result'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'compute_node_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tgt_cell_name'
op|','
name|'compute_id'
op|')'
newline|'\n'
name|'result'
op|'='
name|'response'
op|'.'
name|'value_or_raise'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake_result'"
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_actions_get
dedent|''
name|'def'
name|'test_actions_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_uuid'
op|'='
name|'fake_instance_actions'
op|'.'
name|'FAKE_UUID'
newline|'\n'
name|'fake_req_id'
op|'='
name|'fake_instance_actions'
op|'.'
name|'FAKE_REQUEST_ID1'
newline|'\n'
name|'fake_act'
op|'='
name|'fake_instance_actions'
op|'.'
name|'FAKE_ACTIONS'
op|'['
name|'fake_uuid'
op|']'
op|'['
name|'fake_req_id'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
string|"'actions_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'actions_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake-uuid'"
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
name|'fake_act'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'actions_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tgt_cell_name'
op|','
nl|'\n'
string|"'fake-uuid'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'response'
op|'.'
name|'value_or_raise'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'fake_act'
op|')'
op|']'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_action_get_by_request_id
dedent|''
name|'def'
name|'test_action_get_by_request_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_uuid'
op|'='
name|'fake_instance_actions'
op|'.'
name|'FAKE_UUID'
newline|'\n'
name|'fake_req_id'
op|'='
name|'fake_instance_actions'
op|'.'
name|'FAKE_REQUEST_ID1'
newline|'\n'
name|'fake_act'
op|'='
name|'fake_instance_actions'
op|'.'
name|'FAKE_ACTIONS'
op|'['
name|'fake_uuid'
op|']'
op|'['
name|'fake_req_id'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
string|"'action_get_by_request_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'action_get_by_request_id'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake-uuid'"
op|','
string|"'req-fake'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_act'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'action_get_by_request_id'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tgt_cell_name'
op|','
string|"'fake-uuid'"
op|','
string|"'req-fake'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'response'
op|'.'
name|'value_or_raise'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'fake_act'
op|')'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_action_events_get
dedent|''
name|'def'
name|'test_action_events_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_action_id'
op|'='
name|'fake_instance_actions'
op|'.'
name|'FAKE_ACTION_ID1'
newline|'\n'
name|'fake_events'
op|'='
name|'fake_instance_actions'
op|'.'
name|'FAKE_EVENTS'
op|'['
name|'fake_action_id'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
string|"'action_events_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'action_events_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake-action'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_events'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'action_events_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tgt_cell_name'
op|','
nl|'\n'
string|"'fake-action'"
op|')'
newline|'\n'
name|'result'
op|'='
name|'response'
op|'.'
name|'value_or_raise'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'fake_events'
op|')'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_console_port
dedent|''
name|'def'
name|'test_validate_console_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance_uuid'
op|'='
string|"'fake_instance_uuid'"
newline|'\n'
name|'instance'
op|'='
op|'{'
string|"'uuid'"
op|':'
name|'instance_uuid'
op|'}'
newline|'\n'
name|'console_port'
op|'='
string|"'fake-port'"
newline|'\n'
name|'console_type'
op|'='
string|"'fake-type'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_c_rpcapi'
op|','
string|"'validate_console_port'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance_uuid'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_c_rpcapi'
op|'.'
name|'validate_console_port'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance'
op|','
name|'console_port'
op|','
name|'console_type'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake_result'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'validate_console_port'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tgt_cell_name'
op|','
name|'instance_uuid'
op|','
name|'console_port'
op|','
nl|'\n'
name|'console_type'
op|')'
newline|'\n'
name|'result'
op|'='
name|'response'
op|'.'
name|'value_or_raise'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake_result'"
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_migrations_for_a_given_cell
dedent|''
name|'def'
name|'test_get_migrations_for_a_given_cell'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filters'
op|'='
op|'{'
string|"'cell_name'"
op|':'
string|"'child-cell2'"
op|','
string|"'status'"
op|':'
string|"'confirmed'"
op|'}'
newline|'\n'
name|'migrations_in_progress'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'123'
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_compute_api'
op|','
nl|'\n'
string|"'get_migrations'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tgt_compute_api'
op|'.'
name|'get_migrations'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'filters'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'migrations_in_progress'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'responses'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'get_migrations'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tgt_cell_name'
op|','
name|'False'
op|','
name|'filters'
op|')'
newline|'\n'
name|'result'
op|'='
name|'responses'
op|'['
number|'0'
op|']'
op|'.'
name|'value_or_raise'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'migrations_in_progress'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_migrations_for_an_invalid_cell
dedent|''
name|'def'
name|'test_get_migrations_for_an_invalid_cell'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'filters'
op|'='
op|'{'
string|"'cell_name'"
op|':'
string|"'invalid_Cell'"
op|','
string|"'status'"
op|':'
string|"'confirmed'"
op|'}'
newline|'\n'
nl|'\n'
name|'responses'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'get_migrations'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'api_cell!invalid_cell'"
op|','
name|'False'
op|','
name|'filters'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'responses'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_call_compute_api_with_obj
dedent|''
name|'def'
name|'test_call_compute_api_with_obj'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'instance_obj'
op|'.'
name|'Instance'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance'
op|','
string|"'refresh'"
op|')'
newline|'\n'
comment|"# Using 'snapshot' for this test, because it"
nl|'\n'
comment|'# takes args and kwargs.'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_compute_api'
op|','
string|"'snapshot'"
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'refresh'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_compute_api'
op|'.'
name|'snapshot'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|','
string|"'name'"
op|','
nl|'\n'
name|'extra_properties'
op|'='
string|"'props'"
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'foo'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'tgt_methods_cls'
op|'.'
name|'_call_compute_api_with_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|','
string|"'snapshot'"
op|','
string|"'name'"
op|','
nl|'\n'
name|'extra_properties'
op|'='
string|"'props'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'foo'"
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_call_compute_with_obj_unknown_instance
dedent|''
name|'def'
name|'test_call_compute_with_obj_unknown_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'instance_obj'
op|'.'
name|'Instance'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'uuid'
op|'='
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance'
op|','
string|"'refresh'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_msg_runner'
op|','
nl|'\n'
string|"'instance_destroy_at_top'"
op|')'
newline|'\n'
nl|'\n'
name|'instance'
op|'.'
name|'refresh'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'instance'
op|'.'
name|'uuid'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'.'
name|'instance_destroy_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
op|'{'
string|"'uuid'"
op|':'
name|'instance'
op|'.'
name|'uuid'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tgt_methods_cls'
op|'.'
name|'_call_compute_api_with_obj'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|','
string|"'snapshot'"
op|','
string|"'name'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_instance_update_helper
dedent|''
name|'def'
name|'_instance_update_helper'
op|'('
name|'self'
op|','
name|'admin_state_reset'
op|')'
op|':'
newline|'\n'
DECL|class|FakeMessage
indent|'        '
name|'class'
name|'FakeMessage'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'message'
op|'='
name|'FakeMessage'
op|'('
op|')'
newline|'\n'
name|'message'
op|'.'
name|'ctxt'
op|'='
name|'self'
op|'.'
name|'ctxt'
newline|'\n'
nl|'\n'
name|'instance'
op|'='
name|'instance_obj'
op|'.'
name|'Instance'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'cell_name'
op|'='
name|'self'
op|'.'
name|'tgt_cell_name'
newline|'\n'
name|'instance'
op|'.'
name|'obj_reset_changes'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'task_state'
op|'='
string|"'meow'"
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
string|"'wuff'"
newline|'\n'
name|'instance'
op|'.'
name|'user_data'
op|'='
string|"'foo'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
string|"'user_data'"
op|','
string|"'vm_state'"
op|','
string|"'task_state'"
op|']'
op|')'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'obj_what_changed'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'instance'
op|','
string|"'save'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|_check_object
name|'def'
name|'_check_object'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# task_state and vm_state changes should have been cleared'
nl|'\n'
comment|'# before calling save()'
nl|'\n'
indent|'            '
name|'if'
name|'admin_state_reset'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'set'
op|'('
op|'['
string|"'user_data'"
op|','
string|"'vm_state'"
op|','
string|"'task_state'"
op|']'
op|')'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'obj_what_changed'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
string|"'user_data'"
op|']'
op|')'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'obj_what_changed'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'instance'
op|'.'
name|'save'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'expected_task_state'
op|'='
string|"'exp_task'"
op|','
nl|'\n'
name|'expected_vm_state'
op|'='
string|"'exp_vm'"
op|')'
op|'.'
name|'WithSideEffects'
op|'('
nl|'\n'
name|'_check_object'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tgt_methods_cls'
op|'.'
name|'instance_update_from_api'
op|'('
nl|'\n'
name|'message'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'expected_vm_state'
op|'='
string|"'exp_vm'"
op|','
nl|'\n'
name|'expected_task_state'
op|'='
string|"'exp_task'"
op|','
nl|'\n'
name|'admin_state_reset'
op|'='
name|'admin_state_reset'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_from_api
dedent|''
name|'def'
name|'test_instance_update_from_api'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_instance_update_helper'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_from_api_admin_state_reset
dedent|''
name|'def'
name|'test_instance_update_from_api_admin_state_reset'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_instance_update_helper'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_instance_action_method
dedent|''
name|'def'
name|'_test_instance_action_method'
op|'('
name|'self'
op|','
name|'method'
op|','
name|'args'
op|','
name|'kwargs'
op|','
nl|'\n'
name|'expected_args'
op|','
name|'expected_kwargs'
op|','
nl|'\n'
name|'expect_result'
op|')'
op|':'
newline|'\n'
DECL|class|FakeMessage
indent|'        '
name|'class'
name|'FakeMessage'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'message'
op|'='
name|'FakeMessage'
op|'('
op|')'
newline|'\n'
name|'message'
op|'.'
name|'ctxt'
op|'='
name|'self'
op|'.'
name|'ctxt'
newline|'\n'
name|'message'
op|'.'
name|'need_response'
op|'='
name|'expect_result'
newline|'\n'
nl|'\n'
name|'meth_cls'
op|'='
name|'self'
op|'.'
name|'tgt_methods_cls'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'meth_cls'
op|','
string|"'_call_compute_api_with_obj'"
op|')'
newline|'\n'
nl|'\n'
name|'method_corrections'
op|'='
op|'{'
nl|'\n'
string|"'terminate'"
op|':'
string|"'delete'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'api_method'
op|'='
name|'method_corrections'
op|'.'
name|'get'
op|'('
name|'method'
op|','
name|'method'
op|')'
newline|'\n'
nl|'\n'
name|'meth_cls'
op|'.'
name|'_call_compute_api_with_obj'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-instance'"
op|','
name|'api_method'
op|','
nl|'\n'
op|'*'
name|'expected_args'
op|','
op|'**'
name|'expected_kwargs'
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'meow'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'method_translations'
op|'='
op|'{'
string|"'revert_resize'"
op|':'
string|"'revert_resize'"
op|','
nl|'\n'
string|"'confirm_resize'"
op|':'
string|"'confirm_resize'"
op|','
nl|'\n'
string|"'reset_network'"
op|':'
string|"'reset_network'"
op|','
nl|'\n'
string|"'inject_network_info'"
op|':'
string|"'inject_network_info'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'tgt_method'
op|'='
name|'method_translations'
op|'.'
name|'get'
op|'('
name|'method'
op|','
nl|'\n'
string|"'%s_instance'"
op|'%'
name|'method'
op|')'
newline|'\n'
name|'result'
op|'='
name|'getattr'
op|'('
name|'meth_cls'
op|','
name|'tgt_method'
op|')'
op|'('
nl|'\n'
name|'message'
op|','
string|"'fake-instance'"
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'if'
name|'expect_result'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'meow'"
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_start_instance
dedent|''
dedent|''
name|'def'
name|'test_start_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_instance_action_method'
op|'('
string|"'start'"
op|','
op|'('
op|')'
op|','
op|'{'
op|'}'
op|','
op|'('
op|')'
op|','
op|'{'
op|'}'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_instance_cast
dedent|''
name|'def'
name|'test_stop_instance_cast'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_instance_action_method'
op|'('
string|"'stop'"
op|','
op|'('
op|')'
op|','
op|'{'
op|'}'
op|','
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|"'do_cast'"
op|':'
name|'True'
op|'}'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stop_instance_call
dedent|''
name|'def'
name|'test_stop_instance_call'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_instance_action_method'
op|'('
string|"'stop'"
op|','
op|'('
op|')'
op|','
op|'{'
op|'}'
op|','
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|"'do_cast'"
op|':'
name|'False'
op|'}'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reboot_instance
dedent|''
name|'def'
name|'test_reboot_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
name|'dict'
op|'('
name|'reboot_type'
op|'='
string|"'HARD'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_instance_action_method'
op|'('
string|"'reboot'"
op|','
op|'('
op|')'
op|','
name|'kwargs'
op|','
op|'('
op|')'
op|','
nl|'\n'
name|'kwargs'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_suspend_instance
dedent|''
name|'def'
name|'test_suspend_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_instance_action_method'
op|'('
string|"'suspend'"
op|','
op|'('
op|')'
op|','
op|'{'
op|'}'
op|','
op|'('
op|')'
op|','
op|'{'
op|'}'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resume_instance
dedent|''
name|'def'
name|'test_resume_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_instance_action_method'
op|'('
string|"'resume'"
op|','
op|'('
op|')'
op|','
op|'{'
op|'}'
op|','
op|'('
op|')'
op|','
op|'{'
op|'}'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_host_uptime
dedent|''
name|'def'
name|'test_get_host_uptime'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host_name'
op|'='
string|'"fake-host"'
newline|'\n'
name|'host_uptime'
op|'='
op|'('
string|'" 08:32:11 up 93 days, 18:25, 12 users,  load average:"'
nl|'\n'
string|'" 0.20, 0.12, 0.14"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_host_api'
op|','
string|"'get_host_uptime'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_host_api'
op|'.'
name|'get_host_uptime'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'host_name'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'host_uptime'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'get_host_uptime'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tgt_cell_name'
op|','
nl|'\n'
name|'host_name'
op|')'
newline|'\n'
name|'expected_host_uptime'
op|'='
name|'response'
op|'.'
name|'value_or_raise'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'host_uptime'
op|','
name|'expected_host_uptime'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_terminate_instance
dedent|''
name|'def'
name|'test_terminate_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_instance_action_method'
op|'('
string|"'terminate'"
op|','
nl|'\n'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|','
op|'('
op|')'
op|','
op|'{'
op|'}'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_soft_delete_instance
dedent|''
name|'def'
name|'test_soft_delete_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_instance_action_method'
op|'('
string|"'soft_delete'"
op|','
nl|'\n'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|','
op|'('
op|')'
op|','
op|'{'
op|'}'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pause_instance
dedent|''
name|'def'
name|'test_pause_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_instance_action_method'
op|'('
string|"'pause'"
op|','
op|'('
op|')'
op|','
op|'{'
op|'}'
op|','
op|'('
op|')'
op|','
op|'{'
op|'}'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unpause_instance
dedent|''
name|'def'
name|'test_unpause_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_instance_action_method'
op|'('
string|"'unpause'"
op|','
op|'('
op|')'
op|','
op|'{'
op|'}'
op|','
op|'('
op|')'
op|','
op|'{'
op|'}'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_resize_instance
dedent|''
name|'def'
name|'test_resize_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
name|'dict'
op|'('
name|'flavor'
op|'='
name|'dict'
op|'('
name|'id'
op|'='
number|'42'
op|')'
op|','
nl|'\n'
name|'extra_instance_updates'
op|'='
name|'dict'
op|'('
name|'cow'
op|'='
string|"'moo'"
op|')'
op|')'
newline|'\n'
name|'expected_kwargs'
op|'='
name|'dict'
op|'('
name|'flavor_id'
op|'='
number|'42'
op|','
name|'cow'
op|'='
string|"'moo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_instance_action_method'
op|'('
string|"'resize'"
op|','
op|'('
op|')'
op|','
name|'kwargs'
op|','
nl|'\n'
op|'('
op|')'
op|','
name|'expected_kwargs'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_live_migrate_instance
dedent|''
name|'def'
name|'test_live_migrate_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
name|'dict'
op|'('
name|'block_migration'
op|'='
string|"'fake-block-mig'"
op|','
nl|'\n'
name|'disk_over_commit'
op|'='
string|"'fake-commit'"
op|','
nl|'\n'
name|'host_name'
op|'='
string|"'fake-host'"
op|')'
newline|'\n'
name|'expected_args'
op|'='
op|'('
string|"'fake-block-mig'"
op|','
string|"'fake-commit'"
op|','
string|"'fake-host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_instance_action_method'
op|'('
string|"'live_migrate'"
op|','
op|'('
op|')'
op|','
name|'kwargs'
op|','
nl|'\n'
name|'expected_args'
op|','
op|'{'
op|'}'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_revert_resize
dedent|''
name|'def'
name|'test_revert_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_instance_action_method'
op|'('
string|"'revert_resize'"
op|','
nl|'\n'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|','
op|'('
op|')'
op|','
op|'{'
op|'}'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_confirm_resize
dedent|''
name|'def'
name|'test_confirm_resize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_instance_action_method'
op|'('
string|"'confirm_resize'"
op|','
nl|'\n'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|','
op|'('
op|')'
op|','
op|'{'
op|'}'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reset_network
dedent|''
name|'def'
name|'test_reset_network'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_instance_action_method'
op|'('
string|"'reset_network'"
op|','
nl|'\n'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|','
op|'('
op|')'
op|','
op|'{'
op|'}'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_inject_network_info
dedent|''
name|'def'
name|'test_inject_network_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_instance_action_method'
op|'('
string|"'inject_network_info'"
op|','
nl|'\n'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|','
op|'('
op|')'
op|','
op|'{'
op|'}'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_snapshot_instance
dedent|''
name|'def'
name|'test_snapshot_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'instance_obj'
op|'.'
name|'Instance'
op|'('
op|')'
newline|'\n'
name|'meth_cls'
op|'='
name|'self'
op|'.'
name|'tgt_methods_cls'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'inst'
op|','
string|"'refresh'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'inst'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'meth_cls'
op|'.'
name|'compute_rpcapi'
op|','
string|"'snapshot_instance'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|check_state
name|'def'
name|'check_state'
op|'('
name|'expected_task_state'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'task_states'
op|'.'
name|'IMAGE_SNAPSHOT'
op|','
name|'inst'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'inst'
op|'.'
name|'refresh'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'save'
op|'('
name|'expected_task_state'
op|'='
name|'None'
op|')'
op|'.'
name|'WithSideEffects'
op|'('
name|'check_state'
op|')'
newline|'\n'
nl|'\n'
name|'meth_cls'
op|'.'
name|'compute_rpcapi'
op|'.'
name|'snapshot_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'inst'
op|','
string|"'image-id'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeMessage
name|'class'
name|'FakeMessage'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'message'
op|'='
name|'FakeMessage'
op|'('
op|')'
newline|'\n'
name|'message'
op|'.'
name|'ctxt'
op|'='
name|'self'
op|'.'
name|'ctxt'
newline|'\n'
name|'message'
op|'.'
name|'need_response'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'meth_cls'
op|'.'
name|'snapshot_instance'
op|'('
name|'message'
op|','
name|'inst'
op|','
name|'image_id'
op|'='
string|"'image-id'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_backup_instance
dedent|''
name|'def'
name|'test_backup_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'inst'
op|'='
name|'instance_obj'
op|'.'
name|'Instance'
op|'('
op|')'
newline|'\n'
name|'meth_cls'
op|'='
name|'self'
op|'.'
name|'tgt_methods_cls'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'inst'
op|','
string|"'refresh'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'inst'
op|','
string|"'save'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'meth_cls'
op|'.'
name|'compute_rpcapi'
op|','
string|"'backup_instance'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|check_state
name|'def'
name|'check_state'
op|'('
name|'expected_task_state'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'task_states'
op|'.'
name|'IMAGE_BACKUP'
op|','
name|'inst'
op|'.'
name|'task_state'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'inst'
op|'.'
name|'refresh'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'.'
name|'save'
op|'('
name|'expected_task_state'
op|'='
name|'None'
op|')'
op|'.'
name|'WithSideEffects'
op|'('
name|'check_state'
op|')'
newline|'\n'
nl|'\n'
name|'meth_cls'
op|'.'
name|'compute_rpcapi'
op|'.'
name|'backup_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'inst'
op|','
nl|'\n'
string|"'image-id'"
op|','
nl|'\n'
string|"'backup-type'"
op|','
nl|'\n'
string|"'rotation'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeMessage
name|'class'
name|'FakeMessage'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'message'
op|'='
name|'FakeMessage'
op|'('
op|')'
newline|'\n'
name|'message'
op|'.'
name|'ctxt'
op|'='
name|'self'
op|'.'
name|'ctxt'
newline|'\n'
name|'message'
op|'.'
name|'need_response'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'meth_cls'
op|'.'
name|'backup_instance'
op|'('
name|'message'
op|','
name|'inst'
op|','
nl|'\n'
DECL|variable|image_id
name|'image_id'
op|'='
string|"'image-id'"
op|','
nl|'\n'
DECL|variable|backup_type
name|'backup_type'
op|'='
string|"'backup-type'"
op|','
nl|'\n'
DECL|variable|rotation
name|'rotation'
op|'='
string|"'rotation'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CellsBroadcastMethodsTestCase
dedent|''
dedent|''
name|'class'
name|'CellsBroadcastMethodsTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for _BroadcastMessageMethods class.  Most of these\n    tests actually test the full path from the MessageRunner through\n    to the functionality of the message method.  Hits 2 birds with 1\n    stone, even though it\'s a little more than a unit test.\n    """'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CellsBroadcastMethodsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'init'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_setup_attrs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setup_attrs
dedent|''
name|'def'
name|'_setup_attrs'
op|'('
name|'self'
op|','
name|'up'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mid_cell'
op|'='
string|"'child-cell2'"
newline|'\n'
name|'if'
name|'up'
op|':'
newline|'\n'
indent|'            '
name|'src_cell'
op|'='
string|"'grandchild-cell1'"
newline|'\n'
name|'tgt_cell'
op|'='
string|"'api-cell'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'src_cell'
op|'='
string|"'api-cell'"
newline|'\n'
name|'tgt_cell'
op|'='
string|"'grandchild-cell1'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'src_msg_runner'
op|'='
name|'fakes'
op|'.'
name|'get_message_runner'
op|'('
name|'src_cell'
op|')'
newline|'\n'
name|'methods_cls'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'methods_by_type'
op|'['
string|"'broadcast'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'src_methods_cls'
op|'='
name|'methods_cls'
newline|'\n'
name|'self'
op|'.'
name|'src_db_inst'
op|'='
name|'methods_cls'
op|'.'
name|'db'
newline|'\n'
name|'self'
op|'.'
name|'src_compute_api'
op|'='
name|'methods_cls'
op|'.'
name|'compute_api'
newline|'\n'
name|'self'
op|'.'
name|'src_ca_rpcapi'
op|'='
name|'methods_cls'
op|'.'
name|'consoleauth_rpcapi'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'up'
op|':'
newline|'\n'
comment|'# fudge things so we only have 1 child to broadcast to'
nl|'\n'
indent|'            '
name|'state_manager'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'state_manager'
newline|'\n'
name|'for'
name|'cell'
name|'in'
name|'state_manager'
op|'.'
name|'get_child_cells'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'cell'
op|'.'
name|'name'
op|'!='
string|"'child-cell2'"
op|':'
newline|'\n'
indent|'                    '
name|'del'
name|'state_manager'
op|'.'
name|'child_cells'
op|'['
name|'cell'
op|'.'
name|'name'
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'self'
op|'.'
name|'mid_msg_runner'
op|'='
name|'fakes'
op|'.'
name|'get_message_runner'
op|'('
name|'mid_cell'
op|')'
newline|'\n'
name|'methods_cls'
op|'='
name|'self'
op|'.'
name|'mid_msg_runner'
op|'.'
name|'methods_by_type'
op|'['
string|"'broadcast'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mid_methods_cls'
op|'='
name|'methods_cls'
newline|'\n'
name|'self'
op|'.'
name|'mid_db_inst'
op|'='
name|'methods_cls'
op|'.'
name|'db'
newline|'\n'
name|'self'
op|'.'
name|'mid_compute_api'
op|'='
name|'methods_cls'
op|'.'
name|'compute_api'
newline|'\n'
name|'self'
op|'.'
name|'mid_ca_rpcapi'
op|'='
name|'methods_cls'
op|'.'
name|'consoleauth_rpcapi'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'='
name|'fakes'
op|'.'
name|'get_message_runner'
op|'('
name|'tgt_cell'
op|')'
newline|'\n'
name|'methods_cls'
op|'='
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'.'
name|'methods_by_type'
op|'['
string|"'broadcast'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'tgt_methods_cls'
op|'='
name|'methods_cls'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'='
name|'methods_cls'
op|'.'
name|'db'
newline|'\n'
name|'self'
op|'.'
name|'tgt_compute_api'
op|'='
name|'methods_cls'
op|'.'
name|'compute_api'
newline|'\n'
name|'self'
op|'.'
name|'tgt_ca_rpcapi'
op|'='
name|'methods_cls'
op|'.'
name|'consoleauth_rpcapi'
newline|'\n'
nl|'\n'
DECL|member|test_at_the_top
dedent|''
name|'def'
name|'test_at_the_top'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'tgt_methods_cls'
op|'.'
name|'_at_the_top'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'mid_methods_cls'
op|'.'
name|'_at_the_top'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'src_methods_cls'
op|'.'
name|'_at_the_top'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_at_top
dedent|''
name|'def'
name|'test_instance_update_at_top'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_info_cache'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'instance'"
op|':'
string|"'fake_instance'"
op|','
nl|'\n'
string|"'other'"
op|':'
string|"'moo'"
op|'}'
newline|'\n'
name|'fake_sys_metadata'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'key'"
op|':'
string|"'key1'"
op|','
nl|'\n'
string|"'value'"
op|':'
string|"'value1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'key'"
op|':'
string|"'key2'"
op|','
nl|'\n'
string|"'value'"
op|':'
string|"'value2'"
op|'}'
op|']'
newline|'\n'
name|'fake_instance'
op|'='
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'fake_uuid'"
op|','
nl|'\n'
string|"'security_groups'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'volumes'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'cell_name'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'metadata'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'info_cache'"
op|':'
name|'fake_info_cache'
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
name|'fake_sys_metadata'
op|','
nl|'\n'
string|"'other'"
op|':'
string|"'meow'"
op|'}'
newline|'\n'
name|'expected_sys_metadata'
op|'='
op|'{'
string|"'key1'"
op|':'
string|"'value1'"
op|','
nl|'\n'
string|"'key2'"
op|':'
string|"'value2'"
op|'}'
newline|'\n'
name|'expected_info_cache'
op|'='
op|'{'
string|"'other'"
op|':'
string|"'moo'"
op|'}'
newline|'\n'
name|'expected_cell_name'
op|'='
string|"'api-cell!child-cell2!grandchild-cell1'"
newline|'\n'
name|'expected_instance'
op|'='
op|'{'
string|"'system_metadata'"
op|':'
name|'expected_sys_metadata'
op|','
nl|'\n'
string|"'cell_name'"
op|':'
name|'expected_cell_name'
op|','
nl|'\n'
string|"'other'"
op|':'
string|"'meow'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'fake_uuid'"
op|'}'
newline|'\n'
nl|'\n'
comment|'# To show these should not be called in src/mid-level cell'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_db_inst'
op|','
string|"'instance_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_db_inst'
op|','
nl|'\n'
string|"'instance_info_cache_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_db_inst'
op|','
string|"'instance_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_db_inst'
op|','
nl|'\n'
string|"'instance_info_cache_update'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
string|"'instance_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
nl|'\n'
string|"'instance_info_cache_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake_uuid'"
op|','
nl|'\n'
name|'expected_instance'
op|','
nl|'\n'
name|'update_cells'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'instance_info_cache_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake_uuid'"
op|','
nl|'\n'
name|'expected_info_cache'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'instance_update_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fake_instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_at_top_with_building_state
dedent|''
name|'def'
name|'test_instance_update_at_top_with_building_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_info_cache'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'instance'"
op|':'
string|"'fake_instance'"
op|','
nl|'\n'
string|"'other'"
op|':'
string|"'moo'"
op|'}'
newline|'\n'
name|'fake_sys_metadata'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'key'"
op|':'
string|"'key1'"
op|','
nl|'\n'
string|"'value'"
op|':'
string|"'value1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'key'"
op|':'
string|"'key2'"
op|','
nl|'\n'
string|"'value'"
op|':'
string|"'value2'"
op|'}'
op|']'
newline|'\n'
name|'fake_instance'
op|'='
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'fake_uuid'"
op|','
nl|'\n'
string|"'security_groups'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'volumes'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'cell_name'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'metadata'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'info_cache'"
op|':'
name|'fake_info_cache'
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
name|'fake_sys_metadata'
op|','
nl|'\n'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'BUILDING'
op|','
nl|'\n'
string|"'other'"
op|':'
string|"'meow'"
op|'}'
newline|'\n'
name|'expected_sys_metadata'
op|'='
op|'{'
string|"'key1'"
op|':'
string|"'value1'"
op|','
nl|'\n'
string|"'key2'"
op|':'
string|"'value2'"
op|'}'
newline|'\n'
name|'expected_info_cache'
op|'='
op|'{'
string|"'other'"
op|':'
string|"'moo'"
op|'}'
newline|'\n'
name|'expected_cell_name'
op|'='
string|"'api-cell!child-cell2!grandchild-cell1'"
newline|'\n'
name|'expected_instance'
op|'='
op|'{'
string|"'system_metadata'"
op|':'
name|'expected_sys_metadata'
op|','
nl|'\n'
string|"'cell_name'"
op|':'
name|'expected_cell_name'
op|','
nl|'\n'
string|"'other'"
op|':'
string|"'meow'"
op|','
nl|'\n'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'BUILDING'
op|','
nl|'\n'
string|"'expected_vm_state'"
op|':'
op|'['
name|'vm_states'
op|'.'
name|'BUILDING'
op|','
name|'None'
op|']'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'fake_uuid'"
op|'}'
newline|'\n'
nl|'\n'
comment|'# To show these should not be called in src/mid-level cell'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_db_inst'
op|','
string|"'instance_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_db_inst'
op|','
nl|'\n'
string|"'instance_info_cache_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_db_inst'
op|','
string|"'instance_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_db_inst'
op|','
nl|'\n'
string|"'instance_info_cache_update'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
string|"'instance_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
nl|'\n'
string|"'instance_info_cache_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake_uuid'"
op|','
nl|'\n'
name|'expected_instance'
op|','
nl|'\n'
name|'update_cells'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'instance_info_cache_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake_uuid'"
op|','
nl|'\n'
name|'expected_info_cache'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'instance_update_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fake_instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_destroy_at_top
dedent|''
name|'def'
name|'test_instance_destroy_at_top'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_instance'
op|'='
op|'{'
string|"'uuid'"
op|':'
string|"'fake_uuid'"
op|'}'
newline|'\n'
nl|'\n'
comment|'# To show these should not be called in src/mid-level cell'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_db_inst'
op|','
string|"'instance_destroy'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
string|"'instance_destroy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake_uuid'"
op|','
nl|'\n'
name|'update_cells'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'instance_destroy_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fake_instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_hard_delete_everywhere
dedent|''
name|'def'
name|'test_instance_hard_delete_everywhere'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Reset this, as this is a broadcast down.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_attrs'
op|'('
name|'up'
op|'='
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|"'uuid'"
op|':'
string|"'meow'"
op|'}'
newline|'\n'
nl|'\n'
comment|'# Should not be called in src (API cell)'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_compute_api'
op|','
string|"'delete'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_compute_api'
op|','
string|"'delete'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_compute_api'
op|','
string|"'delete'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mid_compute_api'
op|'.'
name|'delete'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_compute_api'
op|'.'
name|'delete'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'instance_delete_everywhere'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance'
op|','
string|"'hard'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_soft_delete_everywhere
dedent|''
name|'def'
name|'test_instance_soft_delete_everywhere'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Reset this, as this is a broadcast down.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_attrs'
op|'('
name|'up'
op|'='
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|"'uuid'"
op|':'
string|"'meow'"
op|'}'
newline|'\n'
nl|'\n'
comment|'# Should not be called in src (API cell)'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_compute_api'
op|','
string|"'soft_delete'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_compute_api'
op|','
string|"'soft_delete'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_compute_api'
op|','
string|"'soft_delete'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mid_compute_api'
op|'.'
name|'soft_delete'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_compute_api'
op|'.'
name|'soft_delete'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'instance_delete_everywhere'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance'
op|','
string|"'soft'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_fault_create_at_top
dedent|''
name|'def'
name|'test_instance_fault_create_at_top'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_instance_fault'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'other stuff'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'more stuff'"
op|':'
number|'3'
op|'}'
newline|'\n'
name|'expected_instance_fault'
op|'='
op|'{'
string|"'other stuff'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'more stuff'"
op|':'
number|'3'
op|'}'
newline|'\n'
nl|'\n'
comment|"# Shouldn't be called for these 2 cells"
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_db_inst'
op|','
string|"'instance_fault_create'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_db_inst'
op|','
string|"'instance_fault_create'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
string|"'instance_fault_create'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'instance_fault_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'expected_instance_fault'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'instance_fault_create_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'fake_instance_fault'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bw_usage_update_at_top
dedent|''
name|'def'
name|'test_bw_usage_update_at_top'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_bw_update_info'
op|'='
op|'{'
string|"'uuid'"
op|':'
string|"'fake_uuid'"
op|','
nl|'\n'
string|"'mac'"
op|':'
string|"'fake_mac'"
op|','
nl|'\n'
string|"'start_period'"
op|':'
string|"'fake_start_period'"
op|','
nl|'\n'
string|"'bw_in'"
op|':'
string|"'fake_bw_in'"
op|','
nl|'\n'
string|"'bw_out'"
op|':'
string|"'fake_bw_out'"
op|','
nl|'\n'
string|"'last_ctr_in'"
op|':'
string|"'fake_last_ctr_in'"
op|','
nl|'\n'
string|"'last_ctr_out'"
op|':'
string|"'fake_last_ctr_out'"
op|','
nl|'\n'
string|"'last_refreshed'"
op|':'
string|"'fake_last_refreshed'"
op|'}'
newline|'\n'
nl|'\n'
comment|"# Shouldn't be called for these 2 cells"
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_db_inst'
op|','
string|"'bw_usage_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_db_inst'
op|','
string|"'bw_usage_update'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
string|"'bw_usage_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'bw_usage_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'**'
name|'fake_bw_update_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'bw_usage_update_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'fake_bw_update_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sync_instances
dedent|''
name|'def'
name|'test_sync_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Reset this, as this is a broadcast down.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_attrs'
op|'('
name|'up'
op|'='
name|'False'
op|')'
newline|'\n'
name|'project_id'
op|'='
string|"'fake_project_id'"
newline|'\n'
name|'updated_since_raw'
op|'='
string|"'fake_updated_since_raw'"
newline|'\n'
name|'updated_since_parsed'
op|'='
string|"'fake_updated_since_parsed'"
newline|'\n'
name|'deleted'
op|'='
string|"'fake_deleted'"
newline|'\n'
nl|'\n'
name|'instance1'
op|'='
name|'dict'
op|'('
name|'uuid'
op|'='
string|"'fake_uuid1'"
op|','
name|'deleted'
op|'='
name|'False'
op|')'
newline|'\n'
name|'instance2'
op|'='
name|'dict'
op|'('
name|'uuid'
op|'='
string|"'fake_uuid2'"
op|','
name|'deleted'
op|'='
name|'True'
op|')'
newline|'\n'
name|'fake_instances'
op|'='
op|'['
name|'instance1'
op|','
name|'instance2'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_msg_runner'
op|','
nl|'\n'
string|"'instance_update_at_top'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_msg_runner'
op|','
nl|'\n'
string|"'instance_destroy_at_top'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'timeutils'
op|','
string|"'parse_isotime'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'cells_utils'
op|','
string|"'get_instances_to_sync'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Middle cell.'
nl|'\n'
name|'timeutils'
op|'.'
name|'parse_isotime'
op|'('
name|'updated_since_raw'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'updated_since_parsed'
op|')'
newline|'\n'
name|'cells_utils'
op|'.'
name|'get_instances_to_sync'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'updated_since'
op|'='
name|'updated_since_parsed'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'project_id'
op|','
nl|'\n'
name|'deleted'
op|'='
name|'deleted'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Bottom/Target cell'
nl|'\n'
name|'timeutils'
op|'.'
name|'parse_isotime'
op|'('
name|'updated_since_raw'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'updated_since_parsed'
op|')'
newline|'\n'
name|'cells_utils'
op|'.'
name|'get_instances_to_sync'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'updated_since'
op|'='
name|'updated_since_parsed'
op|','
nl|'\n'
name|'project_id'
op|'='
name|'project_id'
op|','
nl|'\n'
name|'deleted'
op|'='
name|'deleted'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_instances'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'.'
name|'instance_update_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'.'
name|'instance_destroy_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance2'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'sync_instances'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'project_id'
op|','
name|'updated_since_raw'
op|','
name|'deleted'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_all_with_disabled
dedent|''
name|'def'
name|'test_service_get_all_with_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Reset this, as this is a broadcast down.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_attrs'
op|'('
name|'up'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'ctxt'
op|'='
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_db_inst'
op|','
string|"'service_get_all'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_db_inst'
op|','
string|"'service_get_all'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
string|"'service_get_all'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_db_inst'
op|'.'
name|'service_get_all'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'disabled'
op|'='
name|'None'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mid_db_inst'
op|'.'
name|'service_get_all'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'disabled'
op|'='
name|'None'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'service_get_all'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'disabled'
op|'='
name|'None'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
number|'4'
op|','
number|'5'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'responses'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'service_get_all'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'filters'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'response_values'
op|'='
op|'['
op|'('
name|'resp'
op|'.'
name|'cell_name'
op|','
name|'resp'
op|'.'
name|'value_or_raise'
op|'('
op|')'
op|')'
nl|'\n'
name|'for'
name|'resp'
name|'in'
name|'responses'
op|']'
newline|'\n'
name|'expected'
op|'='
op|'['
op|'('
string|"'api-cell!child-cell2!grandchild-cell1'"
op|','
op|'['
number|'4'
op|','
number|'5'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'api-cell!child-cell2'"
op|','
op|'['
number|'3'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'api-cell'"
op|','
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'response_values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_all_without_disabled
dedent|''
name|'def'
name|'test_service_get_all_without_disabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Reset this, as this is a broadcast down.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_attrs'
op|'('
name|'up'
op|'='
name|'False'
op|')'
newline|'\n'
name|'disabled'
op|'='
name|'False'
newline|'\n'
name|'filters'
op|'='
op|'{'
string|"'disabled'"
op|':'
name|'disabled'
op|'}'
newline|'\n'
nl|'\n'
name|'ctxt'
op|'='
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_db_inst'
op|','
string|"'service_get_all'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_db_inst'
op|','
string|"'service_get_all'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
string|"'service_get_all'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_db_inst'
op|'.'
name|'service_get_all'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'disabled'
op|'='
name|'disabled'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mid_db_inst'
op|'.'
name|'service_get_all'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'disabled'
op|'='
name|'disabled'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'service_get_all'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'disabled'
op|'='
name|'disabled'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
number|'4'
op|','
number|'5'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'responses'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'service_get_all'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'filters'
op|'='
name|'filters'
op|')'
newline|'\n'
name|'response_values'
op|'='
op|'['
op|'('
name|'resp'
op|'.'
name|'cell_name'
op|','
name|'resp'
op|'.'
name|'value_or_raise'
op|'('
op|')'
op|')'
nl|'\n'
name|'for'
name|'resp'
name|'in'
name|'responses'
op|']'
newline|'\n'
name|'expected'
op|'='
op|'['
op|'('
string|"'api-cell!child-cell2!grandchild-cell1'"
op|','
op|'['
number|'4'
op|','
number|'5'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'api-cell!child-cell2'"
op|','
op|'['
number|'3'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'api-cell'"
op|','
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'response_values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_task_log_get_all_broadcast
dedent|''
name|'def'
name|'test_task_log_get_all_broadcast'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Reset this, as this is a broadcast down.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_attrs'
op|'('
name|'up'
op|'='
name|'False'
op|')'
newline|'\n'
name|'task_name'
op|'='
string|"'fake_task_name'"
newline|'\n'
name|'begin'
op|'='
string|"'fake_begin'"
newline|'\n'
name|'end'
op|'='
string|"'fake_end'"
newline|'\n'
name|'host'
op|'='
string|"'fake_host'"
newline|'\n'
name|'state'
op|'='
string|"'fake_state'"
newline|'\n'
nl|'\n'
name|'ctxt'
op|'='
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_db_inst'
op|','
string|"'task_log_get_all'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_db_inst'
op|','
string|"'task_log_get_all'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
string|"'task_log_get_all'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_db_inst'
op|'.'
name|'task_log_get_all'
op|'('
name|'ctxt'
op|','
name|'task_name'
op|','
nl|'\n'
name|'begin'
op|','
name|'end'
op|','
name|'host'
op|'='
name|'host'
op|','
name|'state'
op|'='
name|'state'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mid_db_inst'
op|'.'
name|'task_log_get_all'
op|'('
name|'ctxt'
op|','
name|'task_name'
op|','
nl|'\n'
name|'begin'
op|','
name|'end'
op|','
name|'host'
op|'='
name|'host'
op|','
name|'state'
op|'='
name|'state'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'task_log_get_all'
op|'('
name|'ctxt'
op|','
name|'task_name'
op|','
nl|'\n'
name|'begin'
op|','
name|'end'
op|','
name|'host'
op|'='
name|'host'
op|','
name|'state'
op|'='
name|'state'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
number|'4'
op|','
number|'5'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'responses'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'task_log_get_all'
op|'('
name|'ctxt'
op|','
name|'None'
op|','
nl|'\n'
name|'task_name'
op|','
name|'begin'
op|','
name|'end'
op|','
name|'host'
op|'='
name|'host'
op|','
name|'state'
op|'='
name|'state'
op|')'
newline|'\n'
name|'response_values'
op|'='
op|'['
op|'('
name|'resp'
op|'.'
name|'cell_name'
op|','
name|'resp'
op|'.'
name|'value_or_raise'
op|'('
op|')'
op|')'
nl|'\n'
name|'for'
name|'resp'
name|'in'
name|'responses'
op|']'
newline|'\n'
name|'expected'
op|'='
op|'['
op|'('
string|"'api-cell!child-cell2!grandchild-cell1'"
op|','
op|'['
number|'4'
op|','
number|'5'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'api-cell!child-cell2'"
op|','
op|'['
number|'3'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'api-cell'"
op|','
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'response_values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_get_all
dedent|''
name|'def'
name|'test_compute_node_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Reset this, as this is a broadcast down.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_attrs'
op|'('
name|'up'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'ctxt'
op|'='
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_db_inst'
op|','
string|"'compute_node_get_all'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_db_inst'
op|','
string|"'compute_node_get_all'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
string|"'compute_node_get_all'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_db_inst'
op|'.'
name|'compute_node_get_all'
op|'('
name|'ctxt'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mid_db_inst'
op|'.'
name|'compute_node_get_all'
op|'('
name|'ctxt'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'compute_node_get_all'
op|'('
name|'ctxt'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
number|'4'
op|','
number|'5'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'responses'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'compute_node_get_all'
op|'('
name|'ctxt'
op|')'
newline|'\n'
name|'response_values'
op|'='
op|'['
op|'('
name|'resp'
op|'.'
name|'cell_name'
op|','
name|'resp'
op|'.'
name|'value_or_raise'
op|'('
op|')'
op|')'
nl|'\n'
name|'for'
name|'resp'
name|'in'
name|'responses'
op|']'
newline|'\n'
name|'expected'
op|'='
op|'['
op|'('
string|"'api-cell!child-cell2!grandchild-cell1'"
op|','
op|'['
number|'4'
op|','
number|'5'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'api-cell!child-cell2'"
op|','
op|'['
number|'3'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'api-cell'"
op|','
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'response_values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_get_all_with_hyp_match
dedent|''
name|'def'
name|'test_compute_node_get_all_with_hyp_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Reset this, as this is a broadcast down.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_attrs'
op|'('
name|'up'
op|'='
name|'False'
op|')'
newline|'\n'
name|'hypervisor_match'
op|'='
string|"'meow'"
newline|'\n'
nl|'\n'
name|'ctxt'
op|'='
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_db_inst'
op|','
nl|'\n'
string|"'compute_node_search_by_hypervisor'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_db_inst'
op|','
nl|'\n'
string|"'compute_node_search_by_hypervisor'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
nl|'\n'
string|"'compute_node_search_by_hypervisor'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_db_inst'
op|'.'
name|'compute_node_search_by_hypervisor'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'hypervisor_match'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mid_db_inst'
op|'.'
name|'compute_node_search_by_hypervisor'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'hypervisor_match'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'compute_node_search_by_hypervisor'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'hypervisor_match'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
number|'4'
op|','
number|'5'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'responses'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'compute_node_get_all'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'hypervisor_match'
op|'='
name|'hypervisor_match'
op|')'
newline|'\n'
name|'response_values'
op|'='
op|'['
op|'('
name|'resp'
op|'.'
name|'cell_name'
op|','
name|'resp'
op|'.'
name|'value_or_raise'
op|'('
op|')'
op|')'
nl|'\n'
name|'for'
name|'resp'
name|'in'
name|'responses'
op|']'
newline|'\n'
name|'expected'
op|'='
op|'['
op|'('
string|"'api-cell!child-cell2!grandchild-cell1'"
op|','
op|'['
number|'4'
op|','
number|'5'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'api-cell!child-cell2'"
op|','
op|'['
number|'3'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'api-cell'"
op|','
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'response_values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_stats
dedent|''
name|'def'
name|'test_compute_node_stats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Reset this, as this is a broadcast down.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_attrs'
op|'('
name|'up'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'ctxt'
op|'='
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'elevated'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_db_inst'
op|','
nl|'\n'
string|"'compute_node_statistics'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_db_inst'
op|','
nl|'\n'
string|"'compute_node_statistics'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
nl|'\n'
string|"'compute_node_statistics'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_db_inst'
op|'.'
name|'compute_node_statistics'
op|'('
name|'ctxt'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mid_db_inst'
op|'.'
name|'compute_node_statistics'
op|'('
name|'ctxt'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'compute_node_statistics'
op|'('
name|'ctxt'
op|')'
op|'.'
name|'AndReturn'
op|'('
op|'['
number|'4'
op|','
number|'5'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'responses'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'compute_node_stats'
op|'('
name|'ctxt'
op|')'
newline|'\n'
name|'response_values'
op|'='
op|'['
op|'('
name|'resp'
op|'.'
name|'cell_name'
op|','
name|'resp'
op|'.'
name|'value_or_raise'
op|'('
op|')'
op|')'
nl|'\n'
name|'for'
name|'resp'
name|'in'
name|'responses'
op|']'
newline|'\n'
name|'expected'
op|'='
op|'['
op|'('
string|"'api-cell!child-cell2!grandchild-cell1'"
op|','
op|'['
number|'4'
op|','
number|'5'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'api-cell!child-cell2'"
op|','
op|'['
number|'3'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'api-cell'"
op|','
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'response_values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_consoleauth_delete_tokens
dedent|''
name|'def'
name|'test_consoleauth_delete_tokens'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_uuid'
op|'='
string|"'fake-instance-uuid'"
newline|'\n'
nl|'\n'
comment|'# To show these should not be called in src/mid-level cell'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_ca_rpcapi'
op|','
nl|'\n'
string|"'delete_tokens_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_ca_rpcapi'
op|','
nl|'\n'
string|"'delete_tokens_for_instance'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_ca_rpcapi'
op|','
nl|'\n'
string|"'delete_tokens_for_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_ca_rpcapi'
op|'.'
name|'delete_tokens_for_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fake_uuid'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'consoleauth_delete_tokens'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fake_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bdm_update_or_create_with_none_create
dedent|''
name|'def'
name|'test_bdm_update_or_create_with_none_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_bdm'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'fake_id'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'fake_volume_id'"
op|'}'
newline|'\n'
name|'expected_bdm'
op|'='
name|'fake_bdm'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'expected_bdm'
op|'.'
name|'pop'
op|'('
string|"'id'"
op|')'
newline|'\n'
nl|'\n'
comment|"# Shouldn't be called for these 2 cells"
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_db_inst'
op|','
nl|'\n'
string|"'block_device_mapping_update_or_create'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_db_inst'
op|','
nl|'\n'
string|"'block_device_mapping_update_or_create'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
nl|'\n'
string|"'block_device_mapping_update_or_create'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'block_device_mapping_update_or_create'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'expected_bdm'
op|','
name|'legacy'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'bdm_update_or_create_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'fake_bdm'
op|','
nl|'\n'
name|'create'
op|'='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bdm_update_or_create_with_true_create
dedent|''
name|'def'
name|'test_bdm_update_or_create_with_true_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_bdm'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'fake_id'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'fake_volume_id'"
op|'}'
newline|'\n'
name|'expected_bdm'
op|'='
name|'fake_bdm'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'expected_bdm'
op|'.'
name|'pop'
op|'('
string|"'id'"
op|')'
newline|'\n'
nl|'\n'
comment|"# Shouldn't be called for these 2 cells"
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_db_inst'
op|','
nl|'\n'
string|"'block_device_mapping_create'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_db_inst'
op|','
nl|'\n'
string|"'block_device_mapping_create'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
nl|'\n'
string|"'block_device_mapping_create'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'block_device_mapping_create'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fake_bdm'
op|','
name|'legacy'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'bdm_update_or_create_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'fake_bdm'
op|','
nl|'\n'
name|'create'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bdm_update_or_create_with_false_create_vol_id
dedent|''
name|'def'
name|'test_bdm_update_or_create_with_false_create_vol_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_bdm'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'fake_id'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'fake_instance_uuid'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'fake_device_name'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'fake_volume_id'"
op|'}'
newline|'\n'
name|'expected_bdm'
op|'='
name|'fake_bdm'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'expected_bdm'
op|'.'
name|'pop'
op|'('
string|"'id'"
op|')'
newline|'\n'
nl|'\n'
name|'fake_inst_bdms'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'not-a-match'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'not-a-match'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'fake_volume_id'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'not-a-match'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'not-a-match'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'not-a-match'"
op|'}'
op|']'
newline|'\n'
nl|'\n'
comment|"# Shouldn't be called for these 2 cells"
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_db_inst'
op|','
nl|'\n'
string|"'block_device_mapping_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_db_inst'
op|','
nl|'\n'
string|"'block_device_mapping_update'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
nl|'\n'
string|"'block_device_mapping_get_all_by_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
nl|'\n'
string|"'block_device_mapping_update'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake_instance_uuid'"
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'fake_inst_bdms'
op|')'
newline|'\n'
comment|'# Should try to update ID 2.'
nl|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'block_device_mapping_update'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
number|'2'
op|','
name|'expected_bdm'
op|','
name|'legacy'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'bdm_update_or_create_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'fake_bdm'
op|','
nl|'\n'
name|'create'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bdm_update_or_create_with_false_create_dev_name
dedent|''
name|'def'
name|'test_bdm_update_or_create_with_false_create_dev_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_bdm'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'fake_id'"
op|','
nl|'\n'
string|"'instance_uuid'"
op|':'
string|"'fake_instance_uuid'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'fake_device_name'"
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'fake_volume_id'"
op|'}'
newline|'\n'
name|'expected_bdm'
op|'='
name|'fake_bdm'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'expected_bdm'
op|'.'
name|'pop'
op|'('
string|"'id'"
op|')'
newline|'\n'
nl|'\n'
name|'fake_inst_bdms'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'not-a-match'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'not-a-match'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'not-a-match'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'fake_device_name'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'volume_id'"
op|':'
string|"'not-a-match'"
op|','
nl|'\n'
string|"'device_name'"
op|':'
string|"'not-a-match'"
op|'}'
op|']'
newline|'\n'
nl|'\n'
comment|"# Shouldn't be called for these 2 cells"
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_db_inst'
op|','
nl|'\n'
string|"'block_device_mapping_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_db_inst'
op|','
nl|'\n'
string|"'block_device_mapping_update'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
nl|'\n'
string|"'block_device_mapping_get_all_by_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
nl|'\n'
string|"'block_device_mapping_update'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake_instance_uuid'"
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
name|'fake_inst_bdms'
op|')'
newline|'\n'
comment|'# Should try to update ID 2.'
nl|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'block_device_mapping_update'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
number|'2'
op|','
name|'expected_bdm'
op|','
name|'legacy'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'bdm_update_or_create_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'fake_bdm'
op|','
nl|'\n'
name|'create'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bdm_destroy_by_volume
dedent|''
name|'def'
name|'test_bdm_destroy_by_volume'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_instance_uuid'
op|'='
string|"'fake-instance-uuid'"
newline|'\n'
name|'fake_volume_id'
op|'='
string|"'fake-volume-name'"
newline|'\n'
nl|'\n'
comment|"# Shouldn't be called for these 2 cells"
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_db_inst'
op|','
nl|'\n'
string|"'block_device_mapping_destroy_by_instance_and_volume'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_db_inst'
op|','
nl|'\n'
string|"'block_device_mapping_destroy_by_instance_and_volume'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
nl|'\n'
string|"'block_device_mapping_destroy_by_instance_and_volume'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'block_device_mapping_destroy_by_instance_and_volume'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fake_instance_uuid'
op|','
name|'fake_volume_id'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'bdm_destroy_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fake_instance_uuid'
op|','
nl|'\n'
name|'volume_id'
op|'='
name|'fake_volume_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bdm_destroy_by_device
dedent|''
name|'def'
name|'test_bdm_destroy_by_device'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_instance_uuid'
op|'='
string|"'fake-instance-uuid'"
newline|'\n'
name|'fake_device_name'
op|'='
string|"'fake-device-name'"
newline|'\n'
nl|'\n'
comment|"# Shouldn't be called for these 2 cells"
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_db_inst'
op|','
nl|'\n'
string|"'block_device_mapping_destroy_by_instance_and_device'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_db_inst'
op|','
nl|'\n'
string|"'block_device_mapping_destroy_by_instance_and_device'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
nl|'\n'
string|"'block_device_mapping_destroy_by_instance_and_device'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'block_device_mapping_destroy_by_instance_and_device'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fake_instance_uuid'
op|','
name|'fake_device_name'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'bdm_destroy_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fake_instance_uuid'
op|','
nl|'\n'
name|'device_name'
op|'='
name|'fake_device_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_migrations
dedent|''
name|'def'
name|'test_get_migrations'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_attrs'
op|'('
name|'up'
op|'='
name|'False'
op|')'
newline|'\n'
name|'filters'
op|'='
op|'{'
string|"'status'"
op|':'
string|"'confirmed'"
op|'}'
newline|'\n'
name|'migrations_from_cell1'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'123'
op|'}'
op|']'
newline|'\n'
name|'migrations_from_cell2'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'456'
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_compute_api'
op|','
nl|'\n'
string|"'get_migrations'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mid_compute_api'
op|'.'
name|'get_migrations'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'filters'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'migrations_from_cell1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_compute_api'
op|','
nl|'\n'
string|"'get_migrations'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tgt_compute_api'
op|'.'
name|'get_migrations'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'filters'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'migrations_from_cell2'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'responses'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'get_migrations'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'None'
op|','
name|'False'
op|','
name|'filters'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'responses'
op|')'
op|')'
newline|'\n'
name|'for'
name|'response'
name|'in'
name|'responses'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'response'
op|'.'
name|'value_or_raise'
op|'('
op|')'
op|','
op|'['
name|'migrations_from_cell1'
op|','
nl|'\n'
name|'migrations_from_cell2'
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
