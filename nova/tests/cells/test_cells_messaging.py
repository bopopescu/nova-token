begin_unit
comment|'# Copyright (c) 2012 Rackspace Hosting # All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nTests For Cells Messaging module\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'cells'
name|'import'
name|'messaging'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'cells'
name|'import'
name|'fakes'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'host'"
op|','
string|"'nova.config'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'name'"
op|','
string|"'nova.cells.opts'"
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'allowed_rpc_exception_modules'"
op|','
nl|'\n'
string|"'nova.openstack.common.rpc'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CellsMessageClassesTestCase
name|'class'
name|'CellsMessageClassesTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for the main Cells Message classes."""'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CellsMessageClassesTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'init'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
comment|'# Need to be able to deserialize test.TestingException.'
nl|'\n'
name|'allowed_modules'
op|'='
name|'CONF'
op|'.'
name|'allowed_rpc_exception_modules'
newline|'\n'
name|'allowed_modules'
op|'.'
name|'append'
op|'('
string|"'nova.test'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'allowed_rpc_exception_modules'
op|'='
name|'allowed_modules'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'our_name'
op|'='
string|"'api-cell'"
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'='
name|'fakes'
op|'.'
name|'get_message_runner'
op|'('
name|'self'
op|'.'
name|'our_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'state_manager'
op|'='
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'state_manager'
newline|'\n'
nl|'\n'
DECL|member|test_reverse_path
dedent|''
name|'def'
name|'test_reverse_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
string|"'a!b!c!d'"
newline|'\n'
name|'expected'
op|'='
string|"'d!c!b!a'"
newline|'\n'
name|'rev_path'
op|'='
name|'messaging'
op|'.'
name|'_reverse_path'
op|'('
name|'path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'rev_path'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_response_cell_name_from_path
dedent|''
name|'def'
name|'test_response_cell_name_from_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# test array with tuples of inputs/expected outputs'
nl|'\n'
indent|'        '
name|'test_paths'
op|'='
op|'['
op|'('
string|"'cell1'"
op|','
string|"'cell1'"
op|')'
op|','
nl|'\n'
op|'('
string|"'cell1!cell2'"
op|','
string|"'cell2!cell1'"
op|')'
op|','
nl|'\n'
op|'('
string|"'cell1!cell2!cell3'"
op|','
string|"'cell3!cell2!cell1'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'test_input'
op|','
name|'expected_output'
name|'in'
name|'test_paths'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_output'
op|','
nl|'\n'
name|'messaging'
op|'.'
name|'_response_cell_name_from_path'
op|'('
name|'test_input'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_response_cell_name_from_path_neighbor_only
dedent|''
dedent|''
name|'def'
name|'test_response_cell_name_from_path_neighbor_only'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# test array with tuples of inputs/expected outputs'
nl|'\n'
indent|'        '
name|'test_paths'
op|'='
op|'['
op|'('
string|"'cell1'"
op|','
string|"'cell1'"
op|')'
op|','
nl|'\n'
op|'('
string|"'cell1!cell2'"
op|','
string|"'cell2!cell1'"
op|')'
op|','
nl|'\n'
op|'('
string|"'cell1!cell2!cell3'"
op|','
string|"'cell3!cell2'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'test_input'
op|','
name|'expected_output'
name|'in'
name|'test_paths'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_output'
op|','
nl|'\n'
name|'messaging'
op|'.'
name|'_response_cell_name_from_path'
op|'('
name|'test_input'
op|','
nl|'\n'
name|'neighbor_only'
op|'='
name|'True'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_targeted_message
dedent|''
dedent|''
name|'def'
name|'test_targeted_message'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_hop_count'
op|'='
number|'99'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
name|'target_cell'
op|'='
string|"'api-cell!child-cell2!grandchild-cell1'"
newline|'\n'
name|'method'
op|'='
string|"'fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'tgt_message'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method'
op|','
name|'tgt_message'
op|'.'
name|'method_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method_kwargs'
op|','
name|'tgt_message'
op|'.'
name|'method_kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'direction'
op|','
name|'tgt_message'
op|'.'
name|'direction'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'target_cell'
op|','
name|'target_cell'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'tgt_message'
op|'.'
name|'fanout'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'tgt_message'
op|'.'
name|'need_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'our_name'
op|','
name|'tgt_message'
op|'.'
name|'routing_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'tgt_message'
op|'.'
name|'hop_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'99'
op|','
name|'tgt_message'
op|'.'
name|'max_hop_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'tgt_message'
op|'.'
name|'is_broadcast'
op|')'
newline|'\n'
comment|'# Correct next hop?'
nl|'\n'
name|'next_hop'
op|'='
name|'tgt_message'
op|'.'
name|'_get_next_hop'
op|'('
op|')'
newline|'\n'
name|'child_cell'
op|'='
name|'self'
op|'.'
name|'state_manager'
op|'.'
name|'get_child_cell'
op|'('
string|"'child-cell2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'child_cell'
op|','
name|'next_hop'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_targeted_message_with_response
dedent|''
name|'def'
name|'test_create_targeted_message_with_response'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_hop_count'
op|'='
number|'99'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
name|'our_name'
op|'='
string|"'child-cell1'"
newline|'\n'
name|'target_cell'
op|'='
string|"'child-cell1!api-cell'"
newline|'\n'
name|'msg_runner'
op|'='
name|'fakes'
op|'.'
name|'get_message_runner'
op|'('
name|'our_name'
op|')'
newline|'\n'
name|'method'
op|'='
string|"'fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'up'"
newline|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|','
nl|'\n'
name|'need_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'tgt_message'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method'
op|','
name|'tgt_message'
op|'.'
name|'method_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method_kwargs'
op|','
name|'tgt_message'
op|'.'
name|'method_kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'direction'
op|','
name|'tgt_message'
op|'.'
name|'direction'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'target_cell'
op|','
name|'target_cell'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'tgt_message'
op|'.'
name|'fanout'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'tgt_message'
op|'.'
name|'need_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'our_name'
op|','
name|'tgt_message'
op|'.'
name|'routing_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'tgt_message'
op|'.'
name|'hop_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'99'
op|','
name|'tgt_message'
op|'.'
name|'max_hop_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'tgt_message'
op|'.'
name|'is_broadcast'
op|')'
newline|'\n'
comment|'# Correct next hop?'
nl|'\n'
name|'next_hop'
op|'='
name|'tgt_message'
op|'.'
name|'_get_next_hop'
op|'('
op|')'
newline|'\n'
name|'parent_cell'
op|'='
name|'msg_runner'
op|'.'
name|'state_manager'
op|'.'
name|'get_parent_cell'
op|'('
string|"'api-cell'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'parent_cell'
op|','
name|'next_hop'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_targeted_message_when_target_is_cell_state
dedent|''
name|'def'
name|'test_targeted_message_when_target_is_cell_state'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'method'
op|'='
string|"'fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
name|'target_cell'
op|'='
name|'self'
op|'.'
name|'state_manager'
op|'.'
name|'get_child_cell'
op|'('
string|"'child-cell2'"
op|')'
newline|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'api-cell!child-cell2'"
op|','
name|'tgt_message'
op|'.'
name|'target_cell'
op|')'
newline|'\n'
comment|'# Correct next hop?'
nl|'\n'
name|'next_hop'
op|'='
name|'tgt_message'
op|'.'
name|'_get_next_hop'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'target_cell'
op|','
name|'next_hop'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_targeted_message_when_target_cell_state_is_me
dedent|''
name|'def'
name|'test_targeted_message_when_target_cell_state_is_me'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'method'
op|'='
string|"'fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
name|'target_cell'
op|'='
name|'self'
op|'.'
name|'state_manager'
op|'.'
name|'get_my_state'
op|'('
op|')'
newline|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'api-cell'"
op|','
name|'tgt_message'
op|'.'
name|'target_cell'
op|')'
newline|'\n'
comment|'# Correct next hop?'
nl|'\n'
name|'next_hop'
op|'='
name|'tgt_message'
op|'.'
name|'_get_next_hop'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'target_cell'
op|','
name|'next_hop'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_broadcast_message
dedent|''
name|'def'
name|'test_create_broadcast_message'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_hop_count'
op|'='
number|'99'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'name'
op|'='
string|"'api-cell'"
op|','
name|'max_hop_count'
op|'='
number|'99'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
name|'method'
op|'='
string|"'fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
name|'bcast_message'
op|'='
name|'messaging'
op|'.'
name|'_BroadcastMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'bcast_message'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method'
op|','
name|'bcast_message'
op|'.'
name|'method_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method_kwargs'
op|','
name|'bcast_message'
op|'.'
name|'method_kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'direction'
op|','
name|'bcast_message'
op|'.'
name|'direction'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'bcast_message'
op|'.'
name|'fanout'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'bcast_message'
op|'.'
name|'need_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'our_name'
op|','
name|'bcast_message'
op|'.'
name|'routing_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'bcast_message'
op|'.'
name|'hop_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'99'
op|','
name|'bcast_message'
op|'.'
name|'max_hop_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'bcast_message'
op|'.'
name|'is_broadcast'
op|')'
newline|'\n'
comment|'# Correct next hops?'
nl|'\n'
name|'next_hops'
op|'='
name|'bcast_message'
op|'.'
name|'_get_next_hops'
op|'('
op|')'
newline|'\n'
name|'child_cells'
op|'='
name|'self'
op|'.'
name|'state_manager'
op|'.'
name|'get_child_cells'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'child_cells'
op|','
name|'next_hops'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_broadcast_message_with_response
dedent|''
name|'def'
name|'test_create_broadcast_message_with_response'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_hop_count'
op|'='
number|'99'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
name|'our_name'
op|'='
string|"'child-cell1'"
newline|'\n'
name|'msg_runner'
op|'='
name|'fakes'
op|'.'
name|'get_message_runner'
op|'('
name|'our_name'
op|')'
newline|'\n'
name|'method'
op|'='
string|"'fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'up'"
newline|'\n'
name|'bcast_message'
op|'='
name|'messaging'
op|'.'
name|'_BroadcastMessage'
op|'('
name|'msg_runner'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'method'
op|','
name|'method_kwargs'
op|','
name|'direction'
op|','
name|'need_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'bcast_message'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method'
op|','
name|'bcast_message'
op|'.'
name|'method_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method_kwargs'
op|','
name|'bcast_message'
op|'.'
name|'method_kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'direction'
op|','
name|'bcast_message'
op|'.'
name|'direction'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'bcast_message'
op|'.'
name|'fanout'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'bcast_message'
op|'.'
name|'need_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'our_name'
op|','
name|'bcast_message'
op|'.'
name|'routing_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'bcast_message'
op|'.'
name|'hop_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'99'
op|','
name|'bcast_message'
op|'.'
name|'max_hop_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'bcast_message'
op|'.'
name|'is_broadcast'
op|')'
newline|'\n'
comment|'# Correct next hops?'
nl|'\n'
name|'next_hops'
op|'='
name|'bcast_message'
op|'.'
name|'_get_next_hops'
op|'('
op|')'
newline|'\n'
name|'parent_cells'
op|'='
name|'msg_runner'
op|'.'
name|'state_manager'
op|'.'
name|'get_parent_cells'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'parent_cells'
op|','
name|'next_hops'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_self_targeted_message
dedent|''
name|'def'
name|'test_self_targeted_message'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'target_cell'
op|'='
string|"'api-cell'"
newline|'\n'
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
name|'call_info'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'call_info'
op|'['
string|"'context'"
op|']'
op|'='
name|'message'
op|'.'
name|'ctxt'
newline|'\n'
name|'call_info'
op|'['
string|"'routing_path'"
op|']'
op|'='
name|'message'
op|'.'
name|'routing_path'
newline|'\n'
name|'call_info'
op|'['
string|"'kwargs'"
op|']'
op|'='
name|'kwargs'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_tgt_method'
op|'('
name|'self'
op|','
string|"'api-cell'"
op|','
string|"'our_fake_method'"
op|','
nl|'\n'
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|')'
newline|'\n'
name|'tgt_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'call_info'
op|'['
string|"'context'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method_kwargs'
op|','
name|'call_info'
op|'['
string|"'kwargs'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'target_cell'
op|','
name|'call_info'
op|'['
string|"'routing_path'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_child_targeted_message
dedent|''
name|'def'
name|'test_child_targeted_message'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'target_cell'
op|'='
string|"'api-cell!child-cell1'"
newline|'\n'
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
name|'call_info'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'call_info'
op|'['
string|"'context'"
op|']'
op|'='
name|'message'
op|'.'
name|'ctxt'
newline|'\n'
name|'call_info'
op|'['
string|"'routing_path'"
op|']'
op|'='
name|'message'
op|'.'
name|'routing_path'
newline|'\n'
name|'call_info'
op|'['
string|"'kwargs'"
op|']'
op|'='
name|'kwargs'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_tgt_method'
op|'('
name|'self'
op|','
string|"'child-cell1'"
op|','
string|"'our_fake_method'"
op|','
nl|'\n'
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|')'
newline|'\n'
name|'tgt_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'call_info'
op|'['
string|"'context'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method_kwargs'
op|','
name|'call_info'
op|'['
string|"'kwargs'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'target_cell'
op|','
name|'call_info'
op|'['
string|"'routing_path'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_grandchild_targeted_message
dedent|''
name|'def'
name|'test_grandchild_targeted_message'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'target_cell'
op|'='
string|"'api-cell!child-cell2!grandchild-cell1'"
newline|'\n'
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
name|'call_info'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'call_info'
op|'['
string|"'context'"
op|']'
op|'='
name|'message'
op|'.'
name|'ctxt'
newline|'\n'
name|'call_info'
op|'['
string|"'routing_path'"
op|']'
op|'='
name|'message'
op|'.'
name|'routing_path'
newline|'\n'
name|'call_info'
op|'['
string|"'kwargs'"
op|']'
op|'='
name|'kwargs'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_tgt_method'
op|'('
name|'self'
op|','
string|"'grandchild-cell1'"
op|','
string|"'our_fake_method'"
op|','
nl|'\n'
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|')'
newline|'\n'
name|'tgt_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'call_info'
op|'['
string|"'context'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method_kwargs'
op|','
name|'call_info'
op|'['
string|"'kwargs'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'target_cell'
op|','
name|'call_info'
op|'['
string|"'routing_path'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_grandchild_targeted_message_with_response
dedent|''
name|'def'
name|'test_grandchild_targeted_message_with_response'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'target_cell'
op|'='
string|"'api-cell!child-cell2!grandchild-cell1'"
newline|'\n'
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
name|'call_info'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'call_info'
op|'['
string|"'context'"
op|']'
op|'='
name|'message'
op|'.'
name|'ctxt'
newline|'\n'
name|'call_info'
op|'['
string|"'routing_path'"
op|']'
op|'='
name|'message'
op|'.'
name|'routing_path'
newline|'\n'
name|'call_info'
op|'['
string|"'kwargs'"
op|']'
op|'='
name|'kwargs'
newline|'\n'
name|'return'
string|"'our_fake_response'"
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_tgt_method'
op|'('
name|'self'
op|','
string|"'grandchild-cell1'"
op|','
string|"'our_fake_method'"
op|','
nl|'\n'
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|','
nl|'\n'
name|'need_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'response'
op|'='
name|'tgt_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'call_info'
op|'['
string|"'context'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method_kwargs'
op|','
name|'call_info'
op|'['
string|"'kwargs'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'target_cell'
op|','
name|'call_info'
op|'['
string|"'routing_path'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'response'
op|'.'
name|'failure'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'response'
op|'.'
name|'value_or_raise'
op|'('
op|')'
op|','
string|"'our_fake_response'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_grandchild_targeted_message_with_error
dedent|''
name|'def'
name|'test_grandchild_targeted_message_with_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'target_cell'
op|'='
string|"'api-cell!child-cell2!grandchild-cell1'"
newline|'\n'
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
string|"'this should be returned'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_tgt_method'
op|'('
name|'self'
op|','
string|"'grandchild-cell1'"
op|','
string|"'our_fake_method'"
op|','
nl|'\n'
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|','
nl|'\n'
name|'need_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'response'
op|'='
name|'tgt_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'response'
op|'.'
name|'failure'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
name|'response'
op|'.'
name|'value_or_raise'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_grandchild_targeted_message_max_hops
dedent|''
name|'def'
name|'test_grandchild_targeted_message_max_hops'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_hop_count'
op|'='
number|'2'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
name|'target_cell'
op|'='
string|"'api-cell!child-cell2!grandchild-cell1'"
newline|'\n'
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
string|"'should not be reached'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_tgt_method'
op|'('
name|'self'
op|','
string|"'grandchild-cell1'"
op|','
string|"'our_fake_method'"
op|','
nl|'\n'
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|','
nl|'\n'
name|'need_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'response'
op|'='
name|'tgt_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'response'
op|'.'
name|'failure'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'CellMaxHopCountReached'
op|','
nl|'\n'
name|'response'
op|'.'
name|'value_or_raise'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_targeted_message_invalid_cell
dedent|''
name|'def'
name|'test_targeted_message_invalid_cell'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'target_cell'
op|'='
string|"'api-cell!child-cell2!grandchild-cell4'"
newline|'\n'
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|','
nl|'\n'
name|'need_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'response'
op|'='
name|'tgt_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'response'
op|'.'
name|'failure'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'CellRoutingInconsistency'
op|','
nl|'\n'
name|'response'
op|'.'
name|'value_or_raise'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_targeted_message_invalid_cell2
dedent|''
name|'def'
name|'test_targeted_message_invalid_cell2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'target_cell'
op|'='
string|"'unknown-cell!child-cell2'"
newline|'\n'
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
name|'tgt_message'
op|'='
name|'messaging'
op|'.'
name|'_TargetedMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
name|'direction'
op|','
nl|'\n'
name|'target_cell'
op|','
nl|'\n'
name|'need_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'response'
op|'='
name|'tgt_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'response'
op|'.'
name|'failure'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'CellRoutingInconsistency'
op|','
nl|'\n'
name|'response'
op|'.'
name|'value_or_raise'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_broadcast_routing
dedent|''
name|'def'
name|'test_broadcast_routing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
name|'cells'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cells'
op|'.'
name|'add'
op|'('
name|'message'
op|'.'
name|'routing_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_bcast_methods'
op|'('
name|'self'
op|','
string|"'our_fake_method'"
op|','
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'bcast_message'
op|'='
name|'messaging'
op|'.'
name|'_BroadcastMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
nl|'\n'
name|'direction'
op|','
nl|'\n'
name|'run_locally'
op|'='
name|'True'
op|')'
newline|'\n'
name|'bcast_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
comment|'# fakes creates 8 cells (including ourself).'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cells'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_broadcast_routing_up
dedent|''
name|'def'
name|'test_broadcast_routing_up'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'up'"
newline|'\n'
name|'msg_runner'
op|'='
name|'fakes'
op|'.'
name|'get_message_runner'
op|'('
string|"'grandchild-cell3'"
op|')'
newline|'\n'
nl|'\n'
name|'cells'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cells'
op|'.'
name|'add'
op|'('
name|'message'
op|'.'
name|'routing_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_bcast_methods'
op|'('
name|'self'
op|','
string|"'our_fake_method'"
op|','
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'bcast_message'
op|'='
name|'messaging'
op|'.'
name|'_BroadcastMessage'
op|'('
name|'msg_runner'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'method'
op|','
name|'method_kwargs'
op|','
nl|'\n'
name|'direction'
op|','
nl|'\n'
name|'run_locally'
op|'='
name|'True'
op|')'
newline|'\n'
name|'bcast_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
comment|"# Paths are reversed, since going 'up'"
nl|'\n'
name|'expected'
op|'='
name|'set'
op|'('
op|'['
string|"'grandchild-cell3'"
op|','
string|"'grandchild-cell3!child-cell3'"
op|','
nl|'\n'
string|"'grandchild-cell3!child-cell3!api-cell'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'cells'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_broadcast_routing_without_ourselves
dedent|''
name|'def'
name|'test_broadcast_routing_without_ourselves'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
name|'cells'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cells'
op|'.'
name|'add'
op|'('
name|'message'
op|'.'
name|'routing_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_bcast_methods'
op|'('
name|'self'
op|','
string|"'our_fake_method'"
op|','
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'bcast_message'
op|'='
name|'messaging'
op|'.'
name|'_BroadcastMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
nl|'\n'
name|'direction'
op|','
nl|'\n'
name|'run_locally'
op|'='
name|'False'
op|')'
newline|'\n'
name|'bcast_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
comment|'# fakes creates 8 cells (including ourself).  So we should see'
nl|'\n'
comment|'# only 7 here.'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'cells'
op|')'
op|','
number|'7'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_broadcast_routing_with_response
dedent|''
name|'def'
name|'test_broadcast_routing_with_response'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'response-%s'"
op|'%'
name|'message'
op|'.'
name|'routing_path'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_bcast_methods'
op|'('
name|'self'
op|','
string|"'our_fake_method'"
op|','
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'bcast_message'
op|'='
name|'messaging'
op|'.'
name|'_BroadcastMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
nl|'\n'
name|'direction'
op|','
nl|'\n'
name|'run_locally'
op|'='
name|'True'
op|','
nl|'\n'
name|'need_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'responses'
op|'='
name|'bcast_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'responses'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
name|'for'
name|'response'
name|'in'
name|'responses'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'response'
op|'.'
name|'failure'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'response-%s'"
op|'%'
name|'response'
op|'.'
name|'cell_name'
op|','
nl|'\n'
name|'response'
op|'.'
name|'value_or_raise'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_broadcast_routing_with_response_max_hops
dedent|''
dedent|''
name|'def'
name|'test_broadcast_routing_with_response_max_hops'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'max_hop_count'
op|'='
number|'2'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'response-%s'"
op|'%'
name|'message'
op|'.'
name|'routing_path'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_bcast_methods'
op|'('
name|'self'
op|','
string|"'our_fake_method'"
op|','
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'bcast_message'
op|'='
name|'messaging'
op|'.'
name|'_BroadcastMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
nl|'\n'
name|'direction'
op|','
nl|'\n'
name|'run_locally'
op|'='
name|'True'
op|','
nl|'\n'
name|'need_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'responses'
op|'='
name|'bcast_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
comment|'# Should only get responses from our immediate children (and'
nl|'\n'
comment|'# ourselves)'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'responses'
op|')'
op|','
number|'5'
op|')'
newline|'\n'
name|'for'
name|'response'
name|'in'
name|'responses'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'response'
op|'.'
name|'failure'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'response-%s'"
op|'%'
name|'response'
op|'.'
name|'cell_name'
op|','
nl|'\n'
name|'response'
op|'.'
name|'value_or_raise'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_broadcast_routing_with_all_erroring
dedent|''
dedent|''
name|'def'
name|'test_broadcast_routing_with_all_erroring'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
string|"'fake failure'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_bcast_methods'
op|'('
name|'self'
op|','
string|"'our_fake_method'"
op|','
name|'our_fake_method'
op|')'
newline|'\n'
nl|'\n'
name|'bcast_message'
op|'='
name|'messaging'
op|'.'
name|'_BroadcastMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
nl|'\n'
name|'direction'
op|','
nl|'\n'
name|'run_locally'
op|'='
name|'True'
op|','
nl|'\n'
name|'need_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'responses'
op|'='
name|'bcast_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'responses'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
name|'for'
name|'response'
name|'in'
name|'responses'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'response'
op|'.'
name|'failure'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
name|'response'
op|'.'
name|'value_or_raise'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_broadcast_routing_with_two_erroring
dedent|''
dedent|''
name|'def'
name|'test_broadcast_routing_with_two_erroring'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'method'
op|'='
string|"'our_fake_method'"
newline|'\n'
name|'method_kwargs'
op|'='
name|'dict'
op|'('
name|'arg1'
op|'='
number|'1'
op|','
name|'arg2'
op|'='
number|'2'
op|')'
newline|'\n'
name|'direction'
op|'='
string|"'down'"
newline|'\n'
nl|'\n'
DECL|function|our_fake_method_failing
name|'def'
name|'our_fake_method_failing'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
string|"'fake failure'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|our_fake_method
dedent|''
name|'def'
name|'our_fake_method'
op|'('
name|'message'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'response-%s'"
op|'%'
name|'message'
op|'.'
name|'routing_path'
newline|'\n'
nl|'\n'
dedent|''
name|'fakes'
op|'.'
name|'stub_bcast_methods'
op|'('
name|'self'
op|','
string|"'our_fake_method'"
op|','
name|'our_fake_method'
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_bcast_method'
op|'('
name|'self'
op|','
string|"'child-cell2'"
op|','
string|"'our_fake_method'"
op|','
nl|'\n'
name|'our_fake_method_failing'
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'stub_bcast_method'
op|'('
name|'self'
op|','
string|"'grandchild-cell3'"
op|','
string|"'our_fake_method'"
op|','
nl|'\n'
name|'our_fake_method_failing'
op|')'
newline|'\n'
nl|'\n'
name|'bcast_message'
op|'='
name|'messaging'
op|'.'
name|'_BroadcastMessage'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'method'
op|','
nl|'\n'
name|'method_kwargs'
op|','
nl|'\n'
name|'direction'
op|','
nl|'\n'
name|'run_locally'
op|'='
name|'True'
op|','
nl|'\n'
name|'need_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'responses'
op|'='
name|'bcast_message'
op|'.'
name|'process'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'responses'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
name|'failure_responses'
op|'='
op|'['
name|'resp'
name|'for'
name|'resp'
name|'in'
name|'responses'
name|'if'
name|'resp'
op|'.'
name|'failure'
op|']'
newline|'\n'
name|'success_responses'
op|'='
op|'['
name|'resp'
name|'for'
name|'resp'
name|'in'
name|'responses'
name|'if'
name|'not'
name|'resp'
op|'.'
name|'failure'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'failure_responses'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'success_responses'
op|')'
op|','
number|'6'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'response'
name|'in'
name|'success_responses'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'response'
op|'.'
name|'failure'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'response-%s'"
op|'%'
name|'response'
op|'.'
name|'cell_name'
op|','
nl|'\n'
name|'response'
op|'.'
name|'value_or_raise'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'response'
name|'in'
name|'failure_responses'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'response'
op|'.'
name|'cell_name'
op|','
op|'['
string|"'api-cell!child-cell2'"
op|','
nl|'\n'
string|"'api-cell!child-cell3!grandchild-cell3'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'response'
op|'.'
name|'failure'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
name|'response'
op|'.'
name|'value_or_raise'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CellsTargetedMethodsTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'CellsTargetedMethodsTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for _TargetedMessageMethods class.  Most of these\n    tests actually test the full path from the MessageRunner through\n    to the functionality of the message method.  Hits 2 birds with 1\n    stone, even though it\'s a little more than a unit test.\n    """'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CellsTargetedMethodsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'init'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_setup_attrs'
op|'('
string|"'api-cell'"
op|','
string|"'api-cell!child-cell2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setup_attrs
dedent|''
name|'def'
name|'_setup_attrs'
op|'('
name|'self'
op|','
name|'source_cell'
op|','
name|'target_cell'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'tgt_cell_name'
op|'='
name|'target_cell'
newline|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'='
name|'fakes'
op|'.'
name|'get_message_runner'
op|'('
name|'source_cell'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'src_state_manager'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'state_manager'
newline|'\n'
name|'tgt_shortname'
op|'='
name|'target_cell'
op|'.'
name|'split'
op|'('
string|"'!'"
op|')'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'tgt_cell_mgr'
op|'='
name|'fakes'
op|'.'
name|'get_cells_manager'
op|'('
name|'tgt_shortname'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'='
name|'self'
op|'.'
name|'tgt_cell_mgr'
op|'.'
name|'msg_runner'
newline|'\n'
name|'self'
op|'.'
name|'tgt_scheduler'
op|'='
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'.'
name|'scheduler'
newline|'\n'
name|'self'
op|'.'
name|'tgt_state_manager'
op|'='
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'.'
name|'state_manager'
newline|'\n'
name|'methods_cls'
op|'='
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'.'
name|'methods_by_type'
op|'['
string|"'targeted'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'tgt_methods_cls'
op|'='
name|'methods_cls'
newline|'\n'
name|'self'
op|'.'
name|'tgt_compute_api'
op|'='
name|'methods_cls'
op|'.'
name|'compute_api'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'='
name|'methods_cls'
op|'.'
name|'db'
newline|'\n'
nl|'\n'
DECL|member|test_schedule_run_instance
dedent|''
name|'def'
name|'test_schedule_run_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host_sched_kwargs'
op|'='
op|'{'
string|"'filter_properties'"
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|"'key1'"
op|':'
string|"'value1'"
op|','
nl|'\n'
string|"'key2'"
op|':'
string|"'value2'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_scheduler'
op|','
string|"'run_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_scheduler'
op|'.'
name|'run_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'host_sched_kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'schedule_run_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tgt_cell_name'
op|','
nl|'\n'
name|'host_sched_kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_call_compute_api_method
dedent|''
name|'def'
name|'test_call_compute_api_method'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'instance_uuid'
op|'='
string|"'fake_instance_uuid'"
newline|'\n'
name|'method_info'
op|'='
op|'{'
string|"'method'"
op|':'
string|"'reboot'"
op|','
nl|'\n'
string|"'method_args'"
op|':'
op|'('
name|'instance_uuid'
op|','
number|'2'
op|','
number|'3'
op|')'
op|','
nl|'\n'
string|"'method_kwargs'"
op|':'
op|'{'
string|"'arg1'"
op|':'
string|"'val1'"
op|','
string|"'arg2'"
op|':'
string|"'val2'"
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_compute_api'
op|','
string|"'reboot'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance_uuid'
op|')'
op|'.'
name|'AndReturn'
op|'('
nl|'\n'
string|"'fake_instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_compute_api'
op|'.'
name|'reboot'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake_instance'"
op|','
number|'2'
op|','
number|'3'
op|','
nl|'\n'
name|'arg1'
op|'='
string|"'val1'"
op|','
name|'arg2'
op|'='
string|"'val2'"
op|')'
op|'.'
name|'AndReturn'
op|'('
string|"'fake_result'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'run_compute_api_method'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tgt_cell_name'
op|','
nl|'\n'
name|'method_info'
op|','
nl|'\n'
name|'True'
op|')'
newline|'\n'
name|'result'
op|'='
name|'response'
op|'.'
name|'value_or_raise'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake_result'"
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_call_compute_api_method_unknown_instance
dedent|''
name|'def'
name|'test_call_compute_api_method_unknown_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Unknown instance should send a broadcast up that instance'
nl|'\n'
comment|'# is gone.'
nl|'\n'
indent|'        '
name|'instance_uuid'
op|'='
string|"'fake_instance_uuid'"
newline|'\n'
name|'instance'
op|'='
op|'{'
string|"'uuid'"
op|':'
name|'instance_uuid'
op|'}'
newline|'\n'
name|'method_info'
op|'='
op|'{'
string|"'method'"
op|':'
string|"'reboot'"
op|','
nl|'\n'
string|"'method_args'"
op|':'
op|'('
name|'instance_uuid'
op|','
number|'2'
op|','
number|'3'
op|')'
op|','
nl|'\n'
string|"'method_kwargs'"
op|':'
op|'{'
string|"'arg1'"
op|':'
string|"'val1'"
op|','
string|"'arg2'"
op|':'
string|"'val2'"
op|'}'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
string|"'instance_get_by_uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_msg_runner'
op|','
nl|'\n'
string|"'instance_destroy_at_top'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake_instance_uuid'"
op|')'
op|'.'
name|'AndRaise'
op|'('
nl|'\n'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|'('
name|'instance_id'
op|'='
name|'instance_uuid'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'.'
name|'instance_destroy_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'run_compute_api_method'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'tgt_cell_name'
op|','
nl|'\n'
name|'method_info'
op|','
nl|'\n'
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'response'
op|'.'
name|'value_or_raise'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_capabilities
dedent|''
name|'def'
name|'test_update_capabilities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Route up to API'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_attrs'
op|'('
string|"'child-cell2'"
op|','
string|"'child-cell2!api-cell'"
op|')'
newline|'\n'
name|'capabs'
op|'='
op|'{'
string|"'cap1'"
op|':'
name|'set'
op|'('
op|'['
string|"'val1'"
op|','
string|"'val2'"
op|']'
op|')'
op|','
nl|'\n'
string|"'cap2'"
op|':'
name|'set'
op|'('
op|'['
string|"'val3'"
op|']'
op|')'
op|'}'
newline|'\n'
comment|"# The list(set([])) seems silly, but we can't assume the order"
nl|'\n'
comment|"# of the list... This behavior should match the code we're"
nl|'\n'
comment|'# testing... which is check that a set was converted to a list.'
nl|'\n'
name|'expected_capabs'
op|'='
op|'{'
string|"'cap1'"
op|':'
name|'list'
op|'('
name|'set'
op|'('
op|'['
string|"'val1'"
op|','
string|"'val2'"
op|']'
op|')'
op|')'
op|','
nl|'\n'
string|"'cap2'"
op|':'
op|'['
string|"'val3'"
op|']'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_state_manager'
op|','
nl|'\n'
string|"'get_our_capabilities'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_state_manager'
op|','
nl|'\n'
string|"'update_cell_capabilities'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_msg_runner'
op|','
nl|'\n'
string|"'tell_parents_our_capabilities'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'src_state_manager'
op|'.'
name|'get_our_capabilities'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'capabs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_state_manager'
op|'.'
name|'update_cell_capabilities'
op|'('
string|"'child-cell2'"
op|','
nl|'\n'
name|'expected_capabs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'.'
name|'tell_parents_our_capabilities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'tell_parents_our_capabilities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_capacities
dedent|''
name|'def'
name|'test_update_capacities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_attrs'
op|'('
string|"'child-cell2'"
op|','
string|"'child-cell2!api-cell'"
op|')'
newline|'\n'
name|'capacs'
op|'='
string|"'fake_capacs'"
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_state_manager'
op|','
nl|'\n'
string|"'get_our_capacities'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_state_manager'
op|','
nl|'\n'
string|"'update_cell_capacities'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_msg_runner'
op|','
nl|'\n'
string|"'tell_parents_our_capacities'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'src_state_manager'
op|'.'
name|'get_our_capacities'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'capacs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_state_manager'
op|'.'
name|'update_cell_capacities'
op|'('
string|"'child-cell2'"
op|','
nl|'\n'
name|'capacs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'.'
name|'tell_parents_our_capacities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'tell_parents_our_capacities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_announce_capabilities
dedent|''
name|'def'
name|'test_announce_capabilities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_attrs'
op|'('
string|"'api-cell'"
op|','
string|"'api-cell!child-cell1'"
op|')'
newline|'\n'
comment|'# To make this easier to test, make us only have 1 child cell.'
nl|'\n'
name|'cell_state'
op|'='
name|'self'
op|'.'
name|'src_state_manager'
op|'.'
name|'child_cells'
op|'['
string|"'child-cell1'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'src_state_manager'
op|'.'
name|'child_cells'
op|'='
op|'{'
string|"'child-cell1'"
op|':'
name|'cell_state'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_msg_runner'
op|','
nl|'\n'
string|"'tell_parents_our_capabilities'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'.'
name|'tell_parents_our_capabilities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'ask_children_for_capabilities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_announce_capacities
dedent|''
name|'def'
name|'test_announce_capacities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_attrs'
op|'('
string|"'api-cell'"
op|','
string|"'api-cell!child-cell1'"
op|')'
newline|'\n'
comment|'# To make this easier to test, make us only have 1 child cell.'
nl|'\n'
name|'cell_state'
op|'='
name|'self'
op|'.'
name|'src_state_manager'
op|'.'
name|'child_cells'
op|'['
string|"'child-cell1'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'src_state_manager'
op|'.'
name|'child_cells'
op|'='
op|'{'
string|"'child-cell1'"
op|':'
name|'cell_state'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_msg_runner'
op|','
nl|'\n'
string|"'tell_parents_our_capacities'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'.'
name|'tell_parents_our_capacities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'ask_children_for_capacities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CellsBroadcastMethodsTestCase
dedent|''
dedent|''
name|'class'
name|'CellsBroadcastMethodsTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for _BroadcastMessageMethods class.  Most of these\n    tests actually test the full path from the MessageRunner through\n    to the functionality of the message method.  Hits 2 birds with 1\n    stone, even though it\'s a little more than a unit test.\n    """'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CellsBroadcastMethodsTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'init'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_setup_attrs'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setup_attrs
dedent|''
name|'def'
name|'_setup_attrs'
op|'('
name|'self'
op|','
name|'up'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mid_cell'
op|'='
string|"'child-cell2'"
newline|'\n'
name|'if'
name|'up'
op|':'
newline|'\n'
indent|'            '
name|'src_cell'
op|'='
string|"'grandchild-cell1'"
newline|'\n'
name|'tgt_cell'
op|'='
string|"'api-cell'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'src_cell'
op|'='
string|"'api-cell'"
newline|'\n'
name|'tgt_cell'
op|'='
string|"'grandchild-cell1'"
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'src_msg_runner'
op|'='
name|'fakes'
op|'.'
name|'get_message_runner'
op|'('
name|'src_cell'
op|')'
newline|'\n'
name|'methods_cls'
op|'='
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'methods_by_type'
op|'['
string|"'broadcast'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'src_methods_cls'
op|'='
name|'methods_cls'
newline|'\n'
name|'self'
op|'.'
name|'src_db_inst'
op|'='
name|'methods_cls'
op|'.'
name|'db'
newline|'\n'
name|'self'
op|'.'
name|'src_compute_api'
op|'='
name|'methods_cls'
op|'.'
name|'compute_api'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mid_msg_runner'
op|'='
name|'fakes'
op|'.'
name|'get_message_runner'
op|'('
name|'mid_cell'
op|')'
newline|'\n'
name|'methods_cls'
op|'='
name|'self'
op|'.'
name|'mid_msg_runner'
op|'.'
name|'methods_by_type'
op|'['
string|"'broadcast'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mid_methods_cls'
op|'='
name|'methods_cls'
newline|'\n'
name|'self'
op|'.'
name|'mid_db_inst'
op|'='
name|'methods_cls'
op|'.'
name|'db'
newline|'\n'
name|'self'
op|'.'
name|'mid_compute_api'
op|'='
name|'methods_cls'
op|'.'
name|'compute_api'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'='
name|'fakes'
op|'.'
name|'get_message_runner'
op|'('
name|'tgt_cell'
op|')'
newline|'\n'
name|'methods_cls'
op|'='
name|'self'
op|'.'
name|'tgt_msg_runner'
op|'.'
name|'methods_by_type'
op|'['
string|"'broadcast'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'tgt_methods_cls'
op|'='
name|'methods_cls'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'='
name|'methods_cls'
op|'.'
name|'db'
newline|'\n'
name|'self'
op|'.'
name|'tgt_compute_api'
op|'='
name|'methods_cls'
op|'.'
name|'compute_api'
newline|'\n'
nl|'\n'
DECL|member|test_at_the_top
dedent|''
name|'def'
name|'test_at_the_top'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'tgt_methods_cls'
op|'.'
name|'_at_the_top'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'mid_methods_cls'
op|'.'
name|'_at_the_top'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'src_methods_cls'
op|'.'
name|'_at_the_top'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_at_top
dedent|''
name|'def'
name|'test_instance_update_at_top'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_info_cache'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'instance'"
op|':'
string|"'fake_instance'"
op|','
nl|'\n'
string|"'other'"
op|':'
string|"'moo'"
op|'}'
newline|'\n'
name|'fake_sys_metadata'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'key'"
op|':'
string|"'key1'"
op|','
nl|'\n'
string|"'value'"
op|':'
string|"'value1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'key'"
op|':'
string|"'key2'"
op|','
nl|'\n'
string|"'value'"
op|':'
string|"'value2'"
op|'}'
op|']'
newline|'\n'
name|'fake_instance'
op|'='
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'fake_uuid'"
op|','
nl|'\n'
string|"'security_groups'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'instance_type'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'volumes'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'cell_name'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'name'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'metadata'"
op|':'
string|"'fake'"
op|','
nl|'\n'
string|"'info_cache'"
op|':'
name|'fake_info_cache'
op|','
nl|'\n'
string|"'system_metadata'"
op|':'
name|'fake_sys_metadata'
op|','
nl|'\n'
string|"'other'"
op|':'
string|"'meow'"
op|'}'
newline|'\n'
name|'expected_sys_metadata'
op|'='
op|'{'
string|"'key1'"
op|':'
string|"'value1'"
op|','
nl|'\n'
string|"'key2'"
op|':'
string|"'value2'"
op|'}'
newline|'\n'
name|'expected_info_cache'
op|'='
op|'{'
string|"'other'"
op|':'
string|"'moo'"
op|'}'
newline|'\n'
name|'expected_instance'
op|'='
op|'{'
string|"'system_metadata'"
op|':'
name|'expected_sys_metadata'
op|','
nl|'\n'
string|"'other'"
op|':'
string|"'meow'"
op|','
nl|'\n'
string|"'uuid'"
op|':'
string|"'fake_uuid'"
op|'}'
newline|'\n'
nl|'\n'
comment|'# To show these should not be called in src/mid-level cell'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_db_inst'
op|','
string|"'instance_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_db_inst'
op|','
nl|'\n'
string|"'instance_info_cache_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_db_inst'
op|','
string|"'instance_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_db_inst'
op|','
nl|'\n'
string|"'instance_info_cache_update'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
string|"'instance_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
nl|'\n'
string|"'instance_info_cache_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'instance_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake_uuid'"
op|','
nl|'\n'
name|'expected_instance'
op|','
nl|'\n'
name|'update_cells'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'instance_info_cache_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake_uuid'"
op|','
nl|'\n'
name|'expected_info_cache'
op|','
nl|'\n'
name|'update_cells'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'instance_update_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fake_instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_destroy_at_top
dedent|''
name|'def'
name|'test_instance_destroy_at_top'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_instance'
op|'='
op|'{'
string|"'uuid'"
op|':'
string|"'fake_uuid'"
op|'}'
newline|'\n'
nl|'\n'
comment|'# To show these should not be called in src/mid-level cell'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_db_inst'
op|','
string|"'instance_destroy'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
string|"'instance_destroy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'instance_destroy'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake_uuid'"
op|','
nl|'\n'
name|'update_cells'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'instance_destroy_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'fake_instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_hard_delete_everywhere
dedent|''
name|'def'
name|'test_instance_hard_delete_everywhere'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Reset this, as this is a broadcast down.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_attrs'
op|'('
name|'up'
op|'='
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|"'uuid'"
op|':'
string|"'meow'"
op|'}'
newline|'\n'
nl|'\n'
comment|'# Should not be called in src (API cell)'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_compute_api'
op|','
string|"'delete'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_compute_api'
op|','
string|"'delete'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_compute_api'
op|','
string|"'delete'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mid_compute_api'
op|'.'
name|'delete'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_compute_api'
op|'.'
name|'delete'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'instance_delete_everywhere'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance'
op|','
string|"'hard'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_soft_delete_everywhere
dedent|''
name|'def'
name|'test_instance_soft_delete_everywhere'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Reset this, as this is a broadcast down.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setup_attrs'
op|'('
name|'up'
op|'='
name|'False'
op|')'
newline|'\n'
name|'instance'
op|'='
op|'{'
string|"'uuid'"
op|':'
string|"'meow'"
op|'}'
newline|'\n'
nl|'\n'
comment|'# Should not be called in src (API cell)'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_compute_api'
op|','
string|"'soft_delete'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_compute_api'
op|','
string|"'soft_delete'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_compute_api'
op|','
string|"'soft_delete'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mid_compute_api'
op|'.'
name|'soft_delete'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_compute_api'
op|'.'
name|'soft_delete'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'instance_delete_everywhere'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance'
op|','
string|"'soft'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_fault_create_at_top
dedent|''
name|'def'
name|'test_instance_fault_create_at_top'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_instance_fault'
op|'='
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'other stuff'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'more stuff'"
op|':'
number|'3'
op|'}'
newline|'\n'
name|'expected_instance_fault'
op|'='
op|'{'
string|"'other stuff'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'more stuff'"
op|':'
number|'3'
op|'}'
newline|'\n'
nl|'\n'
comment|"# Shouldn't be called for these 2 cells"
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_db_inst'
op|','
string|"'instance_fault_create'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_db_inst'
op|','
string|"'instance_fault_create'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
string|"'instance_fault_create'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'instance_fault_create'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'expected_instance_fault'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'instance_fault_create_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'fake_instance_fault'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bw_usage_update_at_top
dedent|''
name|'def'
name|'test_bw_usage_update_at_top'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_bw_update_info'
op|'='
op|'{'
string|"'uuid'"
op|':'
string|"'fake_uuid'"
op|','
nl|'\n'
string|"'mac'"
op|':'
string|"'fake_mac'"
op|','
nl|'\n'
string|"'start_period'"
op|':'
string|"'fake_start_period'"
op|','
nl|'\n'
string|"'bw_in'"
op|':'
string|"'fake_bw_in'"
op|','
nl|'\n'
string|"'bw_out'"
op|':'
string|"'fake_bw_out'"
op|','
nl|'\n'
string|"'last_ctr_in'"
op|':'
string|"'fake_last_ctr_in'"
op|','
nl|'\n'
string|"'last_ctr_out'"
op|':'
string|"'fake_last_ctr_out'"
op|','
nl|'\n'
string|"'last_refreshed'"
op|':'
string|"'fake_last_refreshed'"
op|'}'
newline|'\n'
nl|'\n'
comment|"# Shouldn't be called for these 2 cells"
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'src_db_inst'
op|','
string|"'bw_usage_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'mid_db_inst'
op|','
string|"'bw_usage_update'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'tgt_db_inst'
op|','
string|"'bw_usage_update'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tgt_db_inst'
op|'.'
name|'bw_usage_update'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
op|'**'
name|'fake_bw_update_info'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'src_msg_runner'
op|'.'
name|'bw_usage_update_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'fake_bw_update_info'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
