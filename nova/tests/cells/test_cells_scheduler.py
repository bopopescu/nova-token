begin_unit
comment|'# Copyright (c) 2012 Rackspace Hosting'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nTests For CellsScheduler\n"""'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'uuidutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'cells'
name|'import'
name|'fakes'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'scheduler_retries'"
op|','
string|"'nova.cells.scheduler'"
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CellsSchedulerTestCase
name|'class'
name|'CellsSchedulerTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for CellsScheduler class."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CellsSchedulerTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'init'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'='
name|'fakes'
op|'.'
name|'get_message_runner'
op|'('
string|"'api-cell'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'='
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'scheduler'
newline|'\n'
name|'self'
op|'.'
name|'state_manager'
op|'='
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'state_manager'
newline|'\n'
name|'self'
op|'.'
name|'my_cell_state'
op|'='
name|'self'
op|'.'
name|'state_manager'
op|'.'
name|'get_my_state'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'instance_uuids'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'xrange'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'instance_uuids'
op|'.'
name|'append'
op|'('
name|'uuidutils'
op|'.'
name|'generate_uuid'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'instance_uuids'
op|'='
name|'instance_uuids'
newline|'\n'
name|'self'
op|'.'
name|'request_spec'
op|'='
op|'{'
string|"'instance_uuids'"
op|':'
name|'instance_uuids'
op|','
nl|'\n'
string|"'other'"
op|':'
string|"'stuff'"
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_create_instances_here
dedent|''
name|'def'
name|'test_create_instances_here'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Just grab the first instance type'
nl|'\n'
indent|'        '
name|'inst_type'
op|'='
name|'db'
op|'.'
name|'instance_type_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
number|'1'
op|')'
newline|'\n'
name|'image'
op|'='
op|'{'
string|"'properties'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'instance_props'
op|'='
op|'{'
string|"'hostname'"
op|':'
string|"'meow'"
op|','
nl|'\n'
string|"'display_name'"
op|':'
string|"'moo'"
op|','
nl|'\n'
string|"'image_ref'"
op|':'
string|"'fake_image_ref'"
op|','
nl|'\n'
string|"'user_id'"
op|':'
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'user_id'
op|','
nl|'\n'
string|"'project_id'"
op|':'
name|'self'
op|'.'
name|'ctxt'
op|'.'
name|'project_id'
op|'}'
newline|'\n'
name|'request_spec'
op|'='
op|'{'
string|"'instance_type'"
op|':'
name|'inst_type'
op|','
nl|'\n'
string|"'image'"
op|':'
name|'image'
op|','
nl|'\n'
string|"'security_group'"
op|':'
op|'['
string|"'default'"
op|']'
op|','
nl|'\n'
string|"'block_device_mapping'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|"'instance_properties'"
op|':'
name|'instance_props'
op|','
nl|'\n'
string|"'instance_uuids'"
op|':'
name|'self'
op|'.'
name|'instance_uuids'
op|'}'
newline|'\n'
nl|'\n'
name|'call_info'
op|'='
op|'{'
string|"'uuids'"
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|_fake_instance_update_at_top
name|'def'
name|'_fake_instance_update_at_top'
op|'('
name|'_ctxt'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'call_info'
op|'['
string|"'uuids'"
op|']'
op|'.'
name|'append'
op|'('
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'instance_update_at_top'"
op|','
nl|'\n'
name|'_fake_instance_update_at_top'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'_create_instances_here'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'request_spec'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'instance_uuids'
op|','
name|'call_info'
op|'['
string|"'uuids'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'instance_uuid'
name|'in'
name|'self'
op|'.'
name|'instance_uuids'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'='
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'meow'"
op|','
name|'instance'
op|'['
string|"'hostname'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'moo-%s'"
op|'%'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'display_name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake_image_ref'"
op|','
name|'instance'
op|'['
string|"'image_ref'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_instance_selects_child_cell
dedent|''
dedent|''
name|'def'
name|'test_run_instance_selects_child_cell'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Make sure there's no capacity info so we're sure to"
nl|'\n'
comment|'# select a child cell'
nl|'\n'
indent|'        '
name|'our_cell_info'
op|'='
name|'self'
op|'.'
name|'state_manager'
op|'.'
name|'get_my_state'
op|'('
op|')'
newline|'\n'
name|'our_cell_info'
op|'.'
name|'capacities'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'call_info'
op|'='
op|'{'
string|"'times'"
op|':'
number|'0'
op|'}'
newline|'\n'
nl|'\n'
name|'orig_fn'
op|'='
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'schedule_run_instance'
newline|'\n'
nl|'\n'
DECL|function|msg_runner_schedule_run_instance
name|'def'
name|'msg_runner_schedule_run_instance'
op|'('
name|'ctxt'
op|','
name|'target_cell'
op|','
nl|'\n'
name|'host_sched_kwargs'
op|')'
op|':'
newline|'\n'
comment|'# This gets called twice.  Once for our running it'
nl|'\n'
comment|"# in this cell.. and then it'll get called when the"
nl|'\n'
comment|'# child cell is picked.  So, first time.. just run it'
nl|'\n'
comment|'# like normal.'
nl|'\n'
indent|'            '
name|'if'
name|'not'
name|'call_info'
op|'['
string|"'times'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'call_info'
op|'['
string|"'times'"
op|']'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'orig_fn'
op|'('
name|'ctxt'
op|','
name|'target_cell'
op|','
name|'host_sched_kwargs'
op|')'
newline|'\n'
dedent|''
name|'call_info'
op|'['
string|"'ctxt'"
op|']'
op|'='
name|'ctxt'
newline|'\n'
name|'call_info'
op|'['
string|"'target_cell'"
op|']'
op|'='
name|'target_cell'
newline|'\n'
name|'call_info'
op|'['
string|"'host_sched_kwargs'"
op|']'
op|'='
name|'host_sched_kwargs'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'schedule_run_instance'"
op|','
nl|'\n'
name|'msg_runner_schedule_run_instance'
op|')'
newline|'\n'
nl|'\n'
name|'host_sched_kwargs'
op|'='
op|'{'
string|"'request_spec'"
op|':'
name|'self'
op|'.'
name|'request_spec'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'schedule_run_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'my_cell_state'
op|','
name|'host_sched_kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'call_info'
op|'['
string|"'ctxt'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'host_sched_kwargs'
op|','
name|'call_info'
op|'['
string|"'host_sched_kwargs'"
op|']'
op|')'
newline|'\n'
name|'child_cells'
op|'='
name|'self'
op|'.'
name|'state_manager'
op|'.'
name|'get_child_cells'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'call_info'
op|'['
string|"'target_cell'"
op|']'
op|','
name|'child_cells'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_instance_selects_current_cell
dedent|''
name|'def'
name|'test_run_instance_selects_current_cell'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Make sure there's no child cells so that we will be"
nl|'\n'
comment|'# selected'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'state_manager'
op|'.'
name|'child_cells'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'call_info'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_create_instances_here
name|'def'
name|'fake_create_instances_here'
op|'('
name|'ctxt'
op|','
name|'request_spec'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'call_info'
op|'['
string|"'ctxt'"
op|']'
op|'='
name|'ctxt'
newline|'\n'
name|'call_info'
op|'['
string|"'request_spec'"
op|']'
op|'='
name|'request_spec'
newline|'\n'
nl|'\n'
DECL|function|fake_rpc_run_instance
dedent|''
name|'def'
name|'fake_rpc_run_instance'
op|'('
name|'ctxt'
op|','
op|'**'
name|'host_sched_kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'call_info'
op|'['
string|"'host_sched_kwargs'"
op|']'
op|'='
name|'host_sched_kwargs'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'scheduler'
op|','
string|"'_create_instances_here'"
op|','
nl|'\n'
name|'fake_create_instances_here'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'scheduler'
op|'.'
name|'scheduler_rpcapi'
op|','
nl|'\n'
string|"'run_instance'"
op|','
name|'fake_rpc_run_instance'
op|')'
newline|'\n'
nl|'\n'
name|'host_sched_kwargs'
op|'='
op|'{'
string|"'request_spec'"
op|':'
name|'self'
op|'.'
name|'request_spec'
op|','
nl|'\n'
string|"'other'"
op|':'
string|"'stuff'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'schedule_run_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'my_cell_state'
op|','
name|'host_sched_kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'call_info'
op|'['
string|"'ctxt'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'request_spec'
op|','
name|'call_info'
op|'['
string|"'request_spec'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'host_sched_kwargs'
op|','
name|'call_info'
op|'['
string|"'host_sched_kwargs'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_instance_retries_when_no_cells_avail
dedent|''
name|'def'
name|'test_run_instance_retries_when_no_cells_avail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'scheduler_retries'
op|'='
number|'7'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
nl|'\n'
name|'host_sched_kwargs'
op|'='
op|'{'
string|"'request_spec'"
op|':'
name|'self'
op|'.'
name|'request_spec'
op|'}'
newline|'\n'
nl|'\n'
name|'call_info'
op|'='
op|'{'
string|"'num_tries'"
op|':'
number|'0'
op|','
string|"'errored_uuids'"
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_run_instance
name|'def'
name|'fake_run_instance'
op|'('
name|'message'
op|','
name|'host_sched_kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'call_info'
op|'['
string|"'num_tries'"
op|']'
op|'+='
number|'1'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'NoCellsAvailable'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_sleep
dedent|''
name|'def'
name|'fake_sleep'
op|'('
name|'_secs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
DECL|function|fake_instance_update
dedent|''
name|'def'
name|'fake_instance_update'
op|'('
name|'ctxt'
op|','
name|'instance_uuid'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'ERROR'
op|','
name|'values'
op|'['
string|"'vm_state'"
op|']'
op|')'
newline|'\n'
name|'call_info'
op|'['
string|"'errored_uuids'"
op|']'
op|'.'
name|'append'
op|'('
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'scheduler'
op|','
string|"'_run_instance'"
op|','
name|'fake_run_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'time'
op|','
string|"'sleep'"
op|','
name|'fake_sleep'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_update'"
op|','
name|'fake_instance_update'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'schedule_run_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'my_cell_state'
op|','
name|'host_sched_kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'8'
op|','
name|'call_info'
op|'['
string|"'num_tries'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'instance_uuids'
op|','
name|'call_info'
op|'['
string|"'errored_uuids'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_instance_on_random_exception
dedent|''
name|'def'
name|'test_run_instance_on_random_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'scheduler_retries'
op|'='
number|'7'
op|','
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
nl|'\n'
name|'host_sched_kwargs'
op|'='
op|'{'
string|"'request_spec'"
op|':'
name|'self'
op|'.'
name|'request_spec'
op|'}'
newline|'\n'
nl|'\n'
name|'call_info'
op|'='
op|'{'
string|"'num_tries'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'errored_uuids1'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|"'errored_uuids2'"
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_run_instance
name|'def'
name|'fake_run_instance'
op|'('
name|'message'
op|','
name|'host_sched_kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'call_info'
op|'['
string|"'num_tries'"
op|']'
op|'+='
number|'1'
newline|'\n'
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_instance_update
dedent|''
name|'def'
name|'fake_instance_update'
op|'('
name|'ctxt'
op|','
name|'instance_uuid'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'ERROR'
op|','
name|'values'
op|'['
string|"'vm_state'"
op|']'
op|')'
newline|'\n'
name|'call_info'
op|'['
string|"'errored_uuids1'"
op|']'
op|'.'
name|'append'
op|'('
name|'instance_uuid'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_instance_update_at_top
dedent|''
name|'def'
name|'fake_instance_update_at_top'
op|'('
name|'ctxt'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'vm_states'
op|'.'
name|'ERROR'
op|','
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|')'
newline|'\n'
name|'call_info'
op|'['
string|"'errored_uuids2'"
op|']'
op|'.'
name|'append'
op|'('
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'scheduler'
op|','
string|"'_run_instance'"
op|','
name|'fake_run_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db'
op|','
string|"'instance_update'"
op|','
name|'fake_instance_update'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'instance_update_at_top'"
op|','
nl|'\n'
name|'fake_instance_update_at_top'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'schedule_run_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'self'
op|'.'
name|'my_cell_state'
op|','
name|'host_sched_kwargs'
op|')'
newline|'\n'
comment|"# Shouldn't retry"
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'call_info'
op|'['
string|"'num_tries'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'instance_uuids'
op|','
name|'call_info'
op|'['
string|"'errored_uuids1'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'instance_uuids'
op|','
name|'call_info'
op|'['
string|"'errored_uuids2'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
