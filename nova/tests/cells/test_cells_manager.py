begin_unit
comment|'# Copyright (c) 2012 Rackspace Hosting'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nTests For CellsManager\n"""'
newline|'\n'
name|'import'
name|'copy'
newline|'\n'
name|'import'
name|'datetime'
newline|'\n'
nl|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'cells'
name|'import'
name|'messaging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'cells'
name|'import'
name|'utils'
name|'as'
name|'cells_utils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'timeutils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'cells'
name|'import'
name|'fakes'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
name|'import'
name|'fake_instance_actions'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'compute_topic'"
op|','
string|"'nova.compute.rpcapi'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FAKE_COMPUTE_NODES
name|'FAKE_COMPUTE_NODES'
op|'='
op|'['
name|'dict'
op|'('
name|'id'
op|'='
number|'1'
op|')'
op|','
name|'dict'
op|'('
name|'id'
op|'='
number|'2'
op|')'
op|']'
newline|'\n'
DECL|variable|FAKE_SERVICES
name|'FAKE_SERVICES'
op|'='
op|'['
name|'dict'
op|'('
name|'id'
op|'='
number|'1'
op|','
name|'host'
op|'='
string|"'host1'"
op|','
nl|'\n'
DECL|variable|compute_node
name|'compute_node'
op|'='
op|'['
name|'FAKE_COMPUTE_NODES'
op|'['
number|'0'
op|']'
op|']'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'id'
op|'='
number|'2'
op|','
name|'host'
op|'='
string|"'host2'"
op|','
nl|'\n'
DECL|variable|compute_node
name|'compute_node'
op|'='
op|'['
name|'FAKE_COMPUTE_NODES'
op|'['
number|'1'
op|']'
op|']'
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'id'
op|'='
number|'3'
op|','
name|'host'
op|'='
string|"'host3'"
op|','
name|'compute_node'
op|'='
op|'['
op|']'
op|')'
op|']'
newline|'\n'
DECL|variable|FAKE_TASK_LOGS
name|'FAKE_TASK_LOGS'
op|'='
op|'['
name|'dict'
op|'('
name|'id'
op|'='
number|'1'
op|','
name|'host'
op|'='
string|"'host1'"
op|')'
op|','
nl|'\n'
name|'dict'
op|'('
name|'id'
op|'='
number|'2'
op|','
name|'host'
op|'='
string|"'host2'"
op|')'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CellsManagerClassTestCase
name|'class'
name|'CellsManagerClassTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Test case for CellsManager class."""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CellsManagerClassTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'fakes'
op|'.'
name|'init'
op|'('
name|'self'
op|')'
newline|'\n'
comment|'# pick a child cell to use for tests.'
nl|'\n'
name|'self'
op|'.'
name|'our_cell'
op|'='
string|"'grandchild-cell1'"
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'='
name|'fakes'
op|'.'
name|'get_cells_manager'
op|'('
name|'self'
op|'.'
name|'our_cell'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'msg_runner'
newline|'\n'
name|'self'
op|'.'
name|'driver'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'driver'
newline|'\n'
name|'self'
op|'.'
name|'ctxt'
op|'='
string|"'fake_context'"
newline|'\n'
nl|'\n'
DECL|member|_get_fake_response
dedent|''
name|'def'
name|'_get_fake_response'
op|'('
name|'self'
op|','
name|'raw_response'
op|'='
name|'None'
op|','
name|'exc'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'exc'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'messaging'
op|'.'
name|'Response'
op|'('
string|"'fake'"
op|','
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
op|','
nl|'\n'
name|'True'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'raw_response'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raw_response'
op|'='
string|"'fake-response'"
newline|'\n'
dedent|''
name|'return'
name|'messaging'
op|'.'
name|'Response'
op|'('
string|"'fake'"
op|','
name|'raw_response'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_cell_info_for_neighbors
dedent|''
name|'def'
name|'test_get_cell_info_for_neighbors'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'state_manager'
op|','
nl|'\n'
string|"'get_cell_info_for_neighbors'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'state_manager'
op|'.'
name|'get_cell_info_for_neighbors'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'get_cell_info_for_neighbors'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_post_start_hook_child_cell
dedent|''
name|'def'
name|'test_post_start_hook_child_cell'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'driver'
op|','
string|"'start_consumers'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'context'
op|','
string|"'get_admin_context'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'cells_manager'
op|','
string|"'_update_our_parents'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'driver'
op|'.'
name|'start_consumers'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|')'
newline|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'_update_our_parents'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'post_start_hook'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_post_start_hook_middle_cell
dedent|''
name|'def'
name|'test_post_start_hook_middle_cell'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cells_manager'
op|'='
name|'fakes'
op|'.'
name|'get_cells_manager'
op|'('
string|"'child-cell2'"
op|')'
newline|'\n'
name|'msg_runner'
op|'='
name|'cells_manager'
op|'.'
name|'msg_runner'
newline|'\n'
name|'driver'
op|'='
name|'cells_manager'
op|'.'
name|'driver'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'driver'
op|','
string|"'start_consumers'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'context'
op|','
string|"'get_admin_context'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'msg_runner'
op|','
nl|'\n'
string|"'ask_children_for_capabilities'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'msg_runner'
op|','
nl|'\n'
string|"'ask_children_for_capacities'"
op|')'
newline|'\n'
nl|'\n'
name|'driver'
op|'.'
name|'start_consumers'
op|'('
name|'msg_runner'
op|')'
newline|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'msg_runner'
op|'.'
name|'ask_children_for_capabilities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'msg_runner'
op|'.'
name|'ask_children_for_capacities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'cells_manager'
op|'.'
name|'post_start_hook'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_our_parents
dedent|''
name|'def'
name|'test_update_our_parents'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'tell_parents_our_capabilities'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'tell_parents_our_capacities'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'tell_parents_our_capabilities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'tell_parents_our_capacities'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'_update_our_parents'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_schedule_run_instance
dedent|''
name|'def'
name|'test_schedule_run_instance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host_sched_kwargs'
op|'='
string|"'fake_host_sched_kwargs_silently_passed'"
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'schedule_run_instance'"
op|')'
newline|'\n'
name|'our_cell'
op|'='
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'state_manager'
op|'.'
name|'get_my_state'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'schedule_run_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'our_cell'
op|','
nl|'\n'
name|'host_sched_kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'schedule_run_instance'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'host_sched_kwargs'
op|'='
name|'host_sched_kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_compute_api_method
dedent|''
name|'def'
name|'test_run_compute_api_method'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Args should just be silently passed through'
nl|'\n'
indent|'        '
name|'cell_name'
op|'='
string|"'fake-cell-name'"
newline|'\n'
name|'method_info'
op|'='
string|"'fake-method-info'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'run_compute_api_method'"
op|')'
newline|'\n'
name|'fake_response'
op|'='
name|'self'
op|'.'
name|'_get_fake_response'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'run_compute_api_method'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'cell_name'
op|','
nl|'\n'
name|'method_info'
op|','
nl|'\n'
name|'True'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'run_compute_api_method'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'cell_name'
op|'='
name|'cell_name'
op|','
name|'method_info'
op|'='
name|'method_info'
op|','
nl|'\n'
name|'call'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-response'"
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_update_at_top
dedent|''
name|'def'
name|'test_instance_update_at_top'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'instance_update_at_top'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'instance_update_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'instance_update_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance'
op|'='
string|"'fake-instance'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_destroy_at_top
dedent|''
name|'def'
name|'test_instance_destroy_at_top'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'instance_destroy_at_top'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'instance_destroy_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-instance'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'instance_destroy_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'instance'
op|'='
string|"'fake-instance'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_delete_everywhere
dedent|''
name|'def'
name|'test_instance_delete_everywhere'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'instance_delete_everywhere'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'instance_delete_everywhere'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake-instance'"
op|','
nl|'\n'
string|"'fake-type'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'instance_delete_everywhere'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance'
op|'='
string|"'fake-instance'"
op|','
nl|'\n'
name|'delete_type'
op|'='
string|"'fake-type'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_instance_fault_create_at_top
dedent|''
name|'def'
name|'test_instance_fault_create_at_top'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'instance_fault_create_at_top'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'instance_fault_create_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake-fault'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'instance_fault_create_at_top'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'instance_fault'
op|'='
string|"'fake-fault'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bw_usage_update_at_top
dedent|''
name|'def'
name|'test_bw_usage_update_at_top'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'bw_usage_update_at_top'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'bw_usage_update_at_top'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake-bw-info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'bw_usage_update_at_top'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'ctxt'
op|','
name|'bw_update_info'
op|'='
string|"'fake-bw-info'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_heal_instances
dedent|''
name|'def'
name|'test_heal_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'instance_updated_at_threshold'
op|'='
number|'1000'
op|','
nl|'\n'
name|'instance_update_num_instances'
op|'='
number|'2'
op|','
nl|'\n'
name|'group'
op|'='
string|"'cells'"
op|')'
newline|'\n'
nl|'\n'
name|'fake_context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
name|'stalled_time'
op|'='
name|'timeutils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'updated_since'
op|'='
name|'stalled_time'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
number|'1000'
op|')'
newline|'\n'
nl|'\n'
DECL|function|utcnow
name|'def'
name|'utcnow'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'stalled_time'
newline|'\n'
nl|'\n'
dedent|''
name|'call_info'
op|'='
op|'{'
string|"'get_instances'"
op|':'
number|'0'
op|','
string|"'sync_instances'"
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'instances'
op|'='
op|'['
string|"'instance1'"
op|','
string|"'instance2'"
op|','
string|"'instance3'"
op|']'
newline|'\n'
nl|'\n'
DECL|function|get_instances_to_sync
name|'def'
name|'get_instances_to_sync'
op|'('
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'context'
op|','
name|'fake_context'
op|')'
newline|'\n'
name|'call_info'
op|'['
string|"'shuffle'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'shuffle'"
op|')'
newline|'\n'
name|'call_info'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'project_id'"
op|')'
newline|'\n'
name|'call_info'
op|'['
string|"'updated_since'"
op|']'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'updated_since'"
op|')'
newline|'\n'
name|'call_info'
op|'['
string|"'get_instances'"
op|']'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'iter'
op|'('
name|'instances'
op|')'
newline|'\n'
nl|'\n'
DECL|function|instance_get_by_uuid
dedent|''
name|'def'
name|'instance_get_by_uuid'
op|'('
name|'context'
op|','
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'instances'
op|'['
name|'int'
op|'('
name|'uuid'
op|'['
op|'-'
number|'1'
op|']'
op|')'
op|'-'
number|'1'
op|']'
newline|'\n'
nl|'\n'
DECL|function|sync_instance
dedent|''
name|'def'
name|'sync_instance'
op|'('
name|'context'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'context'
op|','
name|'fake_context'
op|')'
newline|'\n'
name|'call_info'
op|'['
string|"'sync_instances'"
op|']'
op|'.'
name|'append'
op|'('
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'cells_utils'
op|','
string|"'get_instances_to_sync'"
op|','
nl|'\n'
name|'get_instances_to_sync'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'db'
op|','
string|"'instance_get_by_uuid'"
op|','
nl|'\n'
name|'instance_get_by_uuid'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'self'
op|'.'
name|'cells_manager'
op|','
string|"'_sync_instance'"
op|','
nl|'\n'
name|'sync_instance'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'timeutils'
op|','
string|"'utcnow'"
op|','
name|'utcnow'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'_heal_instances'
op|'('
name|'fake_context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'call_info'
op|'['
string|"'shuffle'"
op|']'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'call_info'
op|'['
string|"'project_id'"
op|']'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'call_info'
op|'['
string|"'updated_since'"
op|']'
op|','
name|'updated_since'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'call_info'
op|'['
string|"'get_instances'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
comment|'# Only first 2'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'call_info'
op|'['
string|"'sync_instances'"
op|']'
op|','
nl|'\n'
name|'instances'
op|'['
op|':'
number|'2'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'call_info'
op|'['
string|"'sync_instances'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'_heal_instances'
op|'('
name|'fake_context'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'call_info'
op|'['
string|"'shuffle'"
op|']'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'call_info'
op|'['
string|"'project_id'"
op|']'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'call_info'
op|'['
string|"'updated_since'"
op|']'
op|','
name|'updated_since'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'call_info'
op|'['
string|"'get_instances'"
op|']'
op|','
number|'2'
op|')'
newline|'\n'
comment|'# Now the last 1 and the first 1'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'call_info'
op|'['
string|"'sync_instances'"
op|']'
op|','
nl|'\n'
op|'['
name|'instances'
op|'['
op|'-'
number|'1'
op|']'
op|','
name|'instances'
op|'['
number|'0'
op|']'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sync_instances
dedent|''
name|'def'
name|'test_sync_instances'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'sync_instances'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'sync_instances'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-project'"
op|','
nl|'\n'
string|"'fake-time'"
op|','
string|"'fake-deleted'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'sync_instances'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'project_id'
op|'='
string|"'fake-project'"
op|','
nl|'\n'
name|'updated_since'
op|'='
string|"'fake-time'"
op|','
nl|'\n'
name|'deleted'
op|'='
string|"'fake-deleted'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_all
dedent|''
name|'def'
name|'test_service_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'responses'
op|'='
op|'['
op|']'
newline|'\n'
name|'expected_response'
op|'='
op|'['
op|']'
newline|'\n'
comment|'# 3 cells... so 3 responses.  Each response is a list of services.'
nl|'\n'
comment|'# Manager should turn these into a single list of responses.'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cell_name'
op|'='
string|"'path!to!cell%i'"
op|'%'
name|'i'
newline|'\n'
name|'services'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'service'
name|'in'
name|'FAKE_SERVICES'
op|':'
newline|'\n'
indent|'                '
name|'services'
op|'.'
name|'append'
op|'('
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'service'
op|')'
op|')'
newline|'\n'
name|'expected_service'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'service'
op|')'
newline|'\n'
name|'cells_utils'
op|'.'
name|'add_cell_to_service'
op|'('
name|'expected_service'
op|','
name|'cell_name'
op|')'
newline|'\n'
name|'expected_response'
op|'.'
name|'append'
op|'('
name|'expected_service'
op|')'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'messaging'
op|'.'
name|'Response'
op|'('
name|'cell_name'
op|','
name|'services'
op|','
name|'False'
op|')'
newline|'\n'
name|'responses'
op|'.'
name|'append'
op|'('
name|'response'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'service_get_all'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'service_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake-filters'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'responses'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'service_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'filters'
op|'='
string|"'fake-filters'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_response'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_service_get_by_compute_host
dedent|''
name|'def'
name|'test_service_get_by_compute_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'service_get_by_compute_host'"
op|')'
newline|'\n'
name|'fake_cell'
op|'='
string|"'fake-cell'"
newline|'\n'
name|'fake_response'
op|'='
name|'messaging'
op|'.'
name|'Response'
op|'('
name|'fake_cell'
op|','
name|'FAKE_SERVICES'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
name|'expected_response'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'FAKE_SERVICES'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'cells_utils'
op|'.'
name|'add_cell_to_service'
op|'('
name|'expected_response'
op|','
name|'fake_cell'
op|')'
newline|'\n'
nl|'\n'
name|'cell_and_host'
op|'='
name|'cells_utils'
op|'.'
name|'cell_with_item'
op|'('
string|"'fake-cell'"
op|','
string|"'fake-host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'service_get_by_compute_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'fake_cell'
op|','
string|"'fake-host'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'service_get_by_compute_host'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'host_name'
op|'='
name|'cell_and_host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_response'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_proxy_rpc_to_manager
dedent|''
name|'def'
name|'test_proxy_rpc_to_manager'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'proxy_rpc_to_manager'"
op|')'
newline|'\n'
name|'fake_response'
op|'='
name|'self'
op|'.'
name|'_get_fake_response'
op|'('
op|')'
newline|'\n'
name|'cell_and_host'
op|'='
name|'cells_utils'
op|'.'
name|'cell_with_item'
op|'('
string|"'fake-cell'"
op|','
string|"'fake-host'"
op|')'
newline|'\n'
name|'topic'
op|'='
name|'rpc'
op|'.'
name|'queue_get_for'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'CONF'
op|'.'
name|'compute_topic'
op|','
nl|'\n'
name|'cell_and_host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'proxy_rpc_to_manager'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-cell'"
op|','
nl|'\n'
string|"'fake-host'"
op|','
name|'topic'
op|','
string|"'fake-rpc-msg'"
op|','
nl|'\n'
name|'True'
op|','
op|'-'
number|'1'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'proxy_rpc_to_manager'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'topic'
op|'='
name|'topic'
op|','
name|'rpc_message'
op|'='
string|"'fake-rpc-msg'"
op|','
name|'call'
op|'='
name|'True'
op|','
nl|'\n'
name|'timeout'
op|'='
op|'-'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'fake-response'"
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_build_task_log_responses
dedent|''
name|'def'
name|'_build_task_log_responses'
op|'('
name|'self'
op|','
name|'num'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'responses'
op|'='
op|'['
op|']'
newline|'\n'
name|'expected_response'
op|'='
op|'['
op|']'
newline|'\n'
comment|'# 3 cells... so 3 responses.  Each response is a list of task log'
nl|'\n'
comment|'# entries. Manager should turn these into a single list of'
nl|'\n'
comment|'# task log entries.'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
name|'num'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cell_name'
op|'='
string|"'path!to!cell%i'"
op|'%'
name|'i'
newline|'\n'
name|'task_logs'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'task_log'
name|'in'
name|'FAKE_TASK_LOGS'
op|':'
newline|'\n'
indent|'                '
name|'task_logs'
op|'.'
name|'append'
op|'('
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'task_log'
op|')'
op|')'
newline|'\n'
name|'expected_task_log'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'task_log'
op|')'
newline|'\n'
name|'cells_utils'
op|'.'
name|'add_cell_to_task_log'
op|'('
name|'expected_task_log'
op|','
nl|'\n'
name|'cell_name'
op|')'
newline|'\n'
name|'expected_response'
op|'.'
name|'append'
op|'('
name|'expected_task_log'
op|')'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'messaging'
op|'.'
name|'Response'
op|'('
name|'cell_name'
op|','
name|'task_logs'
op|','
name|'False'
op|')'
newline|'\n'
name|'responses'
op|'.'
name|'append'
op|'('
name|'response'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'expected_response'
op|','
name|'responses'
newline|'\n'
nl|'\n'
DECL|member|test_task_log_get_all
dedent|''
name|'def'
name|'test_task_log_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_response'
op|','
name|'responses'
op|'='
name|'self'
op|'.'
name|'_build_task_log_responses'
op|'('
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'task_log_get_all'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'task_log_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'None'
op|','
nl|'\n'
string|"'fake-name'"
op|','
string|"'fake-begin'"
op|','
nl|'\n'
string|"'fake-end'"
op|','
name|'host'
op|'='
name|'None'
op|','
name|'state'
op|'='
name|'None'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'responses'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'task_log_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'task_name'
op|'='
string|"'fake-name'"
op|','
nl|'\n'
name|'period_beginning'
op|'='
string|"'fake-begin'"
op|','
name|'period_ending'
op|'='
string|"'fake-end'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_response'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_task_log_get_all_with_filters
dedent|''
name|'def'
name|'test_task_log_get_all_with_filters'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_response'
op|','
name|'responses'
op|'='
name|'self'
op|'.'
name|'_build_task_log_responses'
op|'('
number|'1'
op|')'
newline|'\n'
name|'cell_and_host'
op|'='
name|'cells_utils'
op|'.'
name|'cell_with_item'
op|'('
string|"'fake-cell'"
op|','
string|"'fake-host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'task_log_get_all'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'task_log_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-cell'"
op|','
nl|'\n'
string|"'fake-name'"
op|','
string|"'fake-begin'"
op|','
string|"'fake-end'"
op|','
name|'host'
op|'='
string|"'fake-host'"
op|','
nl|'\n'
name|'state'
op|'='
string|"'fake-state'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'responses'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'task_log_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'task_name'
op|'='
string|"'fake-name'"
op|','
nl|'\n'
name|'period_beginning'
op|'='
string|"'fake-begin'"
op|','
name|'period_ending'
op|'='
string|"'fake-end'"
op|','
nl|'\n'
name|'host'
op|'='
name|'cell_and_host'
op|','
name|'state'
op|'='
string|"'fake-state'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_response'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_task_log_get_all_with_cell_but_no_host_filters
dedent|''
name|'def'
name|'test_task_log_get_all_with_cell_but_no_host_filters'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_response'
op|','
name|'responses'
op|'='
name|'self'
op|'.'
name|'_build_task_log_responses'
op|'('
number|'1'
op|')'
newline|'\n'
comment|'# Host filter only has cell name.'
nl|'\n'
name|'cell_and_host'
op|'='
string|"'fake-cell'"
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'task_log_get_all'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'task_log_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-cell'"
op|','
nl|'\n'
string|"'fake-name'"
op|','
string|"'fake-begin'"
op|','
string|"'fake-end'"
op|','
name|'host'
op|'='
name|'None'
op|','
nl|'\n'
name|'state'
op|'='
string|"'fake-state'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'responses'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'task_log_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'task_name'
op|'='
string|"'fake-name'"
op|','
nl|'\n'
name|'period_beginning'
op|'='
string|"'fake-begin'"
op|','
name|'period_ending'
op|'='
string|"'fake-end'"
op|','
nl|'\n'
name|'host'
op|'='
name|'cell_and_host'
op|','
name|'state'
op|'='
string|"'fake-state'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_response'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_get_all
dedent|''
name|'def'
name|'test_compute_node_get_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'responses'
op|'='
op|'['
op|']'
newline|'\n'
name|'expected_response'
op|'='
op|'['
op|']'
newline|'\n'
comment|'# 3 cells... so 3 responses.  Each response is a list of computes.'
nl|'\n'
comment|'# Manager should turn these into a single list of responses.'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cell_name'
op|'='
string|"'path!to!cell%i'"
op|'%'
name|'i'
newline|'\n'
name|'compute_nodes'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'compute_node'
name|'in'
name|'FAKE_COMPUTE_NODES'
op|':'
newline|'\n'
indent|'                '
name|'compute_nodes'
op|'.'
name|'append'
op|'('
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'compute_node'
op|')'
op|')'
newline|'\n'
name|'expected_compute_node'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'compute_node'
op|')'
newline|'\n'
name|'cells_utils'
op|'.'
name|'add_cell_to_compute_node'
op|'('
name|'expected_compute_node'
op|','
nl|'\n'
name|'cell_name'
op|')'
newline|'\n'
name|'expected_response'
op|'.'
name|'append'
op|'('
name|'expected_compute_node'
op|')'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'messaging'
op|'.'
name|'Response'
op|'('
name|'cell_name'
op|','
name|'compute_nodes'
op|','
name|'False'
op|')'
newline|'\n'
name|'responses'
op|'.'
name|'append'
op|'('
name|'response'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'compute_node_get_all'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'compute_node_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'hypervisor_match'
op|'='
string|"'fake-match'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'responses'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'compute_node_get_all'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'hypervisor_match'
op|'='
string|"'fake-match'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_response'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_stats
dedent|''
name|'def'
name|'test_compute_node_stats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raw_resp1'
op|'='
op|'{'
string|"'key1'"
op|':'
number|'1'
op|','
string|"'key2'"
op|':'
number|'2'
op|'}'
newline|'\n'
name|'raw_resp2'
op|'='
op|'{'
string|"'key2'"
op|':'
number|'1'
op|','
string|"'key3'"
op|':'
number|'2'
op|'}'
newline|'\n'
name|'raw_resp3'
op|'='
op|'{'
string|"'key3'"
op|':'
number|'1'
op|','
string|"'key4'"
op|':'
number|'2'
op|'}'
newline|'\n'
name|'responses'
op|'='
op|'['
name|'messaging'
op|'.'
name|'Response'
op|'('
string|"'cell1'"
op|','
name|'raw_resp1'
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'messaging'
op|'.'
name|'Response'
op|'('
string|"'cell2'"
op|','
name|'raw_resp2'
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'messaging'
op|'.'
name|'Response'
op|'('
string|"'cell2'"
op|','
name|'raw_resp3'
op|','
name|'False'
op|')'
op|']'
newline|'\n'
name|'expected_resp'
op|'='
op|'{'
string|"'key1'"
op|':'
number|'1'
op|','
string|"'key2'"
op|':'
number|'3'
op|','
string|"'key3'"
op|':'
number|'3'
op|','
string|"'key4'"
op|':'
number|'2'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'compute_node_stats'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'compute_node_stats'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'responses'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'compute_node_stats'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_resp'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_compute_node_get
dedent|''
name|'def'
name|'test_compute_node_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_cell'
op|'='
string|"'fake-cell'"
newline|'\n'
name|'fake_response'
op|'='
name|'messaging'
op|'.'
name|'Response'
op|'('
name|'fake_cell'
op|','
nl|'\n'
name|'FAKE_COMPUTE_NODES'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
name|'expected_response'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'FAKE_COMPUTE_NODES'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'cells_utils'
op|'.'
name|'add_cell_to_compute_node'
op|'('
name|'expected_response'
op|','
name|'fake_cell'
op|')'
newline|'\n'
name|'cell_and_id'
op|'='
name|'cells_utils'
op|'.'
name|'cell_with_item'
op|'('
name|'fake_cell'
op|','
string|"'fake-id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
nl|'\n'
string|"'compute_node_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'compute_node_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake-cell'"
op|','
string|"'fake-id'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'compute_node_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
name|'compute_id'
op|'='
name|'cell_and_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_response'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_actions_get
dedent|''
name|'def'
name|'test_actions_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_uuid'
op|'='
name|'fake_instance_actions'
op|'.'
name|'FAKE_UUID'
newline|'\n'
name|'fake_req_id'
op|'='
name|'fake_instance_actions'
op|'.'
name|'FAKE_REQUEST_ID1'
newline|'\n'
name|'fake_act'
op|'='
name|'fake_instance_actions'
op|'.'
name|'FAKE_ACTIONS'
op|'['
name|'fake_uuid'
op|']'
op|'['
name|'fake_req_id'
op|']'
newline|'\n'
name|'fake_response'
op|'='
name|'messaging'
op|'.'
name|'Response'
op|'('
string|"'fake-cell'"
op|','
op|'['
name|'fake_act'
op|']'
op|','
name|'False'
op|')'
newline|'\n'
name|'expected_response'
op|'='
op|'['
name|'fake_act'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'actions_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'actions_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-cell'"
op|','
nl|'\n'
string|"'fake-uuid'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'actions_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-cell'"
op|','
nl|'\n'
string|"'fake-uuid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_response'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_action_get_by_request_id
dedent|''
name|'def'
name|'test_action_get_by_request_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_uuid'
op|'='
name|'fake_instance_actions'
op|'.'
name|'FAKE_UUID'
newline|'\n'
name|'fake_req_id'
op|'='
name|'fake_instance_actions'
op|'.'
name|'FAKE_REQUEST_ID1'
newline|'\n'
name|'fake_act'
op|'='
name|'fake_instance_actions'
op|'.'
name|'FAKE_ACTIONS'
op|'['
name|'fake_uuid'
op|']'
op|'['
name|'fake_req_id'
op|']'
newline|'\n'
name|'fake_response'
op|'='
name|'messaging'
op|'.'
name|'Response'
op|'('
string|"'fake-cell'"
op|','
name|'fake_act'
op|','
name|'False'
op|')'
newline|'\n'
name|'expected_response'
op|'='
name|'fake_act'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'action_get_by_request_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'action_get_by_request_id'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-cell'"
op|','
nl|'\n'
string|"'fake-uuid'"
op|','
string|"'req-fake'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'action_get_by_request_id'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
nl|'\n'
string|"'fake-cell'"
op|','
nl|'\n'
string|"'fake-uuid'"
op|','
nl|'\n'
string|"'req-fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_response'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_action_events_get
dedent|''
name|'def'
name|'test_action_events_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_action_id'
op|'='
name|'fake_instance_actions'
op|'.'
name|'FAKE_ACTION_ID1'
newline|'\n'
name|'fake_events'
op|'='
name|'fake_instance_actions'
op|'.'
name|'FAKE_EVENTS'
op|'['
name|'fake_action_id'
op|']'
newline|'\n'
name|'fake_response'
op|'='
name|'messaging'
op|'.'
name|'Response'
op|'('
string|"'fake-cell'"
op|','
name|'fake_events'
op|','
name|'False'
op|')'
newline|'\n'
name|'expected_response'
op|'='
name|'fake_events'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'StubOutWithMock'
op|'('
name|'self'
op|'.'
name|'msg_runner'
op|','
string|"'action_events_get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg_runner'
op|'.'
name|'action_events_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-cell'"
op|','
nl|'\n'
string|"'fake-action'"
op|')'
op|'.'
name|'AndReturn'
op|'('
name|'fake_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mox'
op|'.'
name|'ReplayAll'
op|'('
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'cells_manager'
op|'.'
name|'action_events_get'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
string|"'fake-cell'"
op|','
nl|'\n'
string|"'fake-action'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_response'
op|','
name|'response'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
