begin_unit
comment|'# Copyright 2013 Red Hat, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'fixtures'
newline|'\n'
name|'from'
name|'oslo'
name|'import'
name|'messaging'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CastAsCall
name|'class'
name|'CastAsCall'
op|'('
name|'fixtures'
op|'.'
name|'Fixture'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
string|'"""Make RPC \'cast\' behave like a \'call\'.\n\n    This is a little hack for tests that need to know when a cast\n    operation has completed. The idea is that we wait for the RPC\n    endpoint method to complete and return before continuing on the\n    caller.\n\n    See Ia7f40718533e450f00cd3e7d753ac65755c70588 for more background.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'stubs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CastAsCall'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stubs'
op|'='
name|'stubs'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_stub_out
name|'def'
name|'_stub_out'
op|'('
name|'stubs'
op|','
name|'obj'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig_prepare'
op|'='
name|'obj'
op|'.'
name|'prepare'
newline|'\n'
nl|'\n'
DECL|function|prepare
name|'def'
name|'prepare'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cctxt'
op|'='
name|'orig_prepare'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'CastAsCall'
op|'.'
name|'_stub_out'
op|'('
name|'stubs'
op|','
name|'cctxt'
op|')'
comment|'# woo, recurse!'
newline|'\n'
name|'return'
name|'cctxt'
newline|'\n'
nl|'\n'
dedent|''
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'obj'
op|','
string|"'prepare'"
op|','
name|'prepare'
op|')'
newline|'\n'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'obj'
op|','
string|"'cast'"
op|','
name|'obj'
op|'.'
name|'call'
op|')'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'CastAsCall'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_stub_out'
op|'('
name|'self'
op|'.'
name|'stubs'
op|','
name|'messaging'
op|'.'
name|'RPCClient'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
