begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2012 Cloudscaling Group, Inc.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nUnit Tests for remote procedure calls using zeromq\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'tests'
op|'.'
name|'rpc'
name|'import'
name|'common'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'from'
name|'eventlet'
op|'.'
name|'green'
name|'import'
name|'zmq'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'rpc'
name|'import'
name|'impl_zmq'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
DECL|variable|zmq
indent|'    '
name|'zmq'
op|'='
name|'None'
newline|'\n'
DECL|variable|impl_zmq
name|'impl_zmq'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|variable|LOG
dedent|''
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_RpcZmqBaseTestCase
name|'class'
name|'_RpcZmqBaseTestCase'
op|'('
name|'common'
op|'.'
name|'BaseRpcTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'test'
op|'.'
name|'skip_if'
op|'('
name|'zmq'
name|'is'
name|'None'
op|','
string|'"Test requires zmq"'
op|')'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|','
name|'topic'
op|'='
string|"'test'"
op|','
name|'topic_nested'
op|'='
string|"'nested'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'impl_zmq'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'reactor'
op|'='
name|'None'
newline|'\n'
name|'FLAGS'
op|'.'
name|'register_opts'
op|'('
name|'rpc'
op|'.'
name|'rpc_opts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'rpc'
op|'='
name|'impl_zmq'
newline|'\n'
name|'self'
op|'.'
name|'rpc'
op|'.'
name|'register_opts'
op|'('
name|'FLAGS'
op|')'
newline|'\n'
name|'FLAGS'
op|'.'
name|'set_default'
op|'('
string|"'rpc_zmq_matchmaker'"
op|','
nl|'\n'
string|"'mod_matchmaker.MatchMakerLocalhost'"
op|')'
newline|'\n'
nl|'\n'
comment|"# We'll change this if we detect no daemon running."
nl|'\n'
name|'ipc_dir'
op|'='
name|'FLAGS'
op|'.'
name|'rpc_zmq_ipc_dir'
newline|'\n'
nl|'\n'
comment|"# Only launch the router if it isn't running independently."
nl|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'ipc_dir'
op|','
string|'"zmq_topic_zmq_replies"'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Running internal zmq receiver."'
op|')'
op|')'
newline|'\n'
comment|'# The normal ipc_dir default needs to run as root,'
nl|'\n'
comment|'# /tmp is easier within a testing environment.'
nl|'\n'
name|'FLAGS'
op|'.'
name|'set_default'
op|'('
string|"'rpc_zmq_ipc_dir'"
op|','
string|"'/tmp/nova-zmq.ipc.test'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Value has changed.'
nl|'\n'
name|'ipc_dir'
op|'='
name|'FLAGS'
op|'.'
name|'rpc_zmq_ipc_dir'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
comment|"# Only launch the receiver if it isn't running independently."
nl|'\n'
comment|'# This is checked again, with the (possibly) new ipc_dir.'
nl|'\n'
indent|'            '
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'ipc_dir'
op|','
string|'"zmq_topic_zmq_replies"'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_'
op|'('
string|'"Detected zmq-receiver socket. "'
nl|'\n'
string|'"Assuming nova-rpc-zmq-receiver is running."'
op|')'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'ipc_dir'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'ipc_dir'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'reactor'
op|'='
name|'impl_zmq'
op|'.'
name|'ZmqProxy'
op|'('
name|'FLAGS'
op|')'
newline|'\n'
name|'consume_in'
op|'='
string|'"tcp://%s:%s"'
op|'%'
op|'('
name|'FLAGS'
op|'.'
name|'rpc_zmq_bind_address'
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'rpc_zmq_port'
op|')'
newline|'\n'
name|'consumption_proxy'
op|'='
name|'impl_zmq'
op|'.'
name|'InternalContext'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'reactor'
op|'.'
name|'register'
op|'('
name|'consumption_proxy'
op|','
nl|'\n'
name|'consume_in'
op|','
name|'zmq'
op|'.'
name|'PULL'
op|','
name|'out_bind'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'reactor'
op|'.'
name|'consume_in_thread'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'zmq'
op|'.'
name|'ZMQError'
op|':'
newline|'\n'
indent|'            '
name|'assert'
name|'False'
op|','
name|'_'
op|'('
string|'"Could not create ZeroMQ receiver daemon. "'
nl|'\n'
string|'"Socket may already be in use."'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ProcessExecutionError'
op|':'
newline|'\n'
indent|'            '
name|'assert'
name|'False'
op|','
name|'_'
op|'('
string|'"Could not create IPC directory %s"'
op|')'
op|'%'
op|'('
name|'ipc_dir'
op|','
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'super'
op|'('
name|'_RpcZmqBaseTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
nl|'\n'
name|'topic'
op|'='
name|'topic'
op|','
name|'topic_nested'
op|'='
name|'topic_nested'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'impl_zmq'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'reactor'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'reactor'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'utils'
op|'.'
name|'execute'
op|'('
string|"'rm'"
op|','
string|"'-rf'"
op|','
name|'FLAGS'
op|'.'
name|'rpc_zmq_ipc_dir'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ProcessExecutionError'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'super'
op|'('
name|'_RpcZmqBaseTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RpcZmqBaseTopicTestCase
dedent|''
dedent|''
name|'class'
name|'RpcZmqBaseTopicTestCase'
op|'('
name|'_RpcZmqBaseTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    This tests with topics such as \'test\' and \'nested\',\n    without any .host appended. Stresses the matchmaker.\n    """'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RpcZmqDirectTopicTestCase
dedent|''
name|'class'
name|'RpcZmqDirectTopicTestCase'
op|'('
name|'_RpcZmqBaseTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Test communication directly to a host,\n    tests use \'localhost\'.\n    """'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'RpcZmqDirectTopicTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
nl|'\n'
name|'topic'
op|'='
string|"'test.localhost'"
op|','
nl|'\n'
name|'topic_nested'
op|'='
string|"'nested.localhost'"
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
