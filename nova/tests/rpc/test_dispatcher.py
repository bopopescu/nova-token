begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2012, Red Hat, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nUnit Tests for rpc.dispatcher\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'rpc'
name|'import'
name|'common'
name|'as'
name|'rpc_common'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'rpc'
name|'import'
name|'dispatcher'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RpcDispatcherTestCase
name|'class'
name|'RpcDispatcherTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|class|API1
indent|'    '
name|'class'
name|'API1'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|variable|RPC_API_VERSION
indent|'        '
name|'RPC_API_VERSION'
op|'='
string|"'1.0'"
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'test_method_ctxt'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'test_method_arg1'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|test_method
dedent|''
name|'def'
name|'test_method'
op|'('
name|'self'
op|','
name|'ctxt'
op|','
name|'arg1'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'test_method_ctxt'
op|'='
name|'ctxt'
newline|'\n'
name|'self'
op|'.'
name|'test_method_arg1'
op|'='
name|'arg1'
newline|'\n'
nl|'\n'
DECL|class|API2
dedent|''
dedent|''
name|'class'
name|'API2'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|variable|RPC_API_VERSION
indent|'        '
name|'RPC_API_VERSION'
op|'='
string|"'2.1'"
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'test_method_ctxt'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'test_method_arg1'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|test_method
dedent|''
name|'def'
name|'test_method'
op|'('
name|'self'
op|','
name|'ctxt'
op|','
name|'arg1'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'test_method_ctxt'
op|'='
name|'ctxt'
newline|'\n'
name|'self'
op|'.'
name|'test_method_arg1'
op|'='
name|'arg1'
newline|'\n'
nl|'\n'
DECL|class|API3
dedent|''
dedent|''
name|'class'
name|'API3'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|variable|RPC_API_VERSION
indent|'        '
name|'RPC_API_VERSION'
op|'='
string|"'3.5'"
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'test_method_ctxt'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'test_method_arg1'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|test_method
dedent|''
name|'def'
name|'test_method'
op|'('
name|'self'
op|','
name|'ctxt'
op|','
name|'arg1'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'test_method_ctxt'
op|'='
name|'ctxt'
newline|'\n'
name|'self'
op|'.'
name|'test_method_arg1'
op|'='
name|'arg1'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
string|"'fake_user'"
op|','
string|"'fake_project'"
op|')'
newline|'\n'
name|'super'
op|'('
name|'RpcDispatcherTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'RpcDispatcherTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_dispatch
dedent|''
name|'def'
name|'_test_dispatch'
op|'('
name|'self'
op|','
name|'version'
op|','
name|'expectations'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v2'
op|'='
name|'self'
op|'.'
name|'API2'
op|'('
op|')'
newline|'\n'
name|'v3'
op|'='
name|'self'
op|'.'
name|'API3'
op|'('
op|')'
newline|'\n'
name|'disp'
op|'='
name|'dispatcher'
op|'.'
name|'RpcDispatcher'
op|'('
op|'['
name|'v2'
op|','
name|'v3'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'disp'
op|'.'
name|'dispatch'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'version'
op|','
string|"'test_method'"
op|','
name|'arg1'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'v2'
op|'.'
name|'test_method_ctxt'
op|','
name|'expectations'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'v2'
op|'.'
name|'test_method_arg1'
op|','
name|'expectations'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'v3'
op|'.'
name|'test_method_ctxt'
op|','
name|'expectations'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'v3'
op|'.'
name|'test_method_arg1'
op|','
name|'expectations'
op|'['
number|'3'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dispatch
dedent|''
name|'def'
name|'test_dispatch'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_dispatch'
op|'('
string|"'2.1'"
op|','
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
number|'1'
op|','
name|'None'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_dispatch'
op|'('
string|"'3.5'"
op|','
op|'('
name|'None'
op|','
name|'None'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dispatch_lower_minor_version
dedent|''
name|'def'
name|'test_dispatch_lower_minor_version'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_dispatch'
op|'('
string|"'2.0'"
op|','
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
number|'1'
op|','
name|'None'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_test_dispatch'
op|'('
string|"'3.1'"
op|','
op|'('
name|'None'
op|','
name|'None'
op|','
name|'self'
op|'.'
name|'ctxt'
op|','
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dispatch_higher_minor_version
dedent|''
name|'def'
name|'test_dispatch_higher_minor_version'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'rpc_common'
op|'.'
name|'UnsupportedRpcVersion'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_dispatch'
op|','
string|"'2.6'"
op|','
op|'('
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'rpc_common'
op|'.'
name|'UnsupportedRpcVersion'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_dispatch'
op|','
string|"'3.6'"
op|','
op|'('
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dispatch_lower_major_version
dedent|''
name|'def'
name|'test_dispatch_lower_major_version'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'rpc_common'
op|'.'
name|'UnsupportedRpcVersion'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_dispatch'
op|','
string|"'1.0'"
op|','
op|'('
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dispatch_higher_major_version
dedent|''
name|'def'
name|'test_dispatch_higher_major_version'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'rpc_common'
op|'.'
name|'UnsupportedRpcVersion'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_test_dispatch'
op|','
string|"'4.0'"
op|','
op|'('
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dispatch_no_version_uses_v1
dedent|''
name|'def'
name|'test_dispatch_no_version_uses_v1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v1'
op|'='
name|'self'
op|'.'
name|'API1'
op|'('
op|')'
newline|'\n'
name|'disp'
op|'='
name|'dispatcher'
op|'.'
name|'RpcDispatcher'
op|'('
op|'['
name|'v1'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'disp'
op|'.'
name|'dispatch'
op|'('
name|'self'
op|'.'
name|'ctxt'
op|','
name|'None'
op|','
string|"'test_method'"
op|','
name|'arg1'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'v1'
op|'.'
name|'test_method_ctxt'
op|','
name|'self'
op|'.'
name|'ctxt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'v1'
op|'.'
name|'test_method_arg1'
op|','
number|'1'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
