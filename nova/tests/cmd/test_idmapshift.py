begin_unit
comment|'# Copyright 2014 Rackspace, Andrew Melton'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#     http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'argparse'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'cmd'
name|'import'
name|'idmapshift'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|join_side_effect
name|'def'
name|'join_side_effect'
op|'('
name|'root'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'path'
op|'='
name|'root'
newline|'\n'
name|'if'
name|'root'
op|'!='
string|"'/'"
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'+='
string|"'/'"
newline|'\n'
dedent|''
name|'path'
op|'+='
string|"'/'"
op|'.'
name|'join'
op|'('
name|'args'
op|')'
newline|'\n'
name|'return'
name|'path'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeStat
dedent|''
name|'class'
name|'FakeStat'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'uid'
op|','
name|'gid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'st_uid'
op|'='
name|'uid'
newline|'\n'
name|'self'
op|'.'
name|'st_gid'
op|'='
name|'gid'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BaseTestCase
dedent|''
dedent|''
name|'class'
name|'BaseTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'BaseTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'uid_maps'
op|'='
op|'['
op|'('
number|'0'
op|','
number|'10000'
op|','
number|'10'
op|')'
op|','
op|'('
number|'10'
op|','
number|'20000'
op|','
number|'1000'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'gid_maps'
op|'='
op|'['
op|'('
number|'0'
op|','
number|'10000'
op|','
number|'10'
op|')'
op|','
op|'('
number|'10'
op|','
number|'20000'
op|','
number|'1000'
op|')'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FindTargetIDTestCase
dedent|''
dedent|''
name|'class'
name|'FindTargetIDTestCase'
op|'('
name|'BaseTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_find_target_id_range_1_first
indent|'    '
name|'def'
name|'test_find_target_id_range_1_first'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'actual_target'
op|'='
name|'idmapshift'
op|'.'
name|'find_target_id'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
nl|'\n'
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|','
name|'dict'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10000'
op|','
name|'actual_target'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_find_target_id_inside_range_1
dedent|''
name|'def'
name|'test_find_target_id_inside_range_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'actual_target'
op|'='
name|'idmapshift'
op|'.'
name|'find_target_id'
op|'('
number|'2'
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
nl|'\n'
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|','
name|'dict'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10002'
op|','
name|'actual_target'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_find_target_id_range_2_first
dedent|''
name|'def'
name|'test_find_target_id_range_2_first'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'actual_target'
op|'='
name|'idmapshift'
op|'.'
name|'find_target_id'
op|'('
number|'10'
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
nl|'\n'
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|','
name|'dict'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'20000'
op|','
name|'actual_target'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_find_target_id_inside_range_2
dedent|''
name|'def'
name|'test_find_target_id_inside_range_2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'actual_target'
op|'='
name|'idmapshift'
op|'.'
name|'find_target_id'
op|'('
number|'100'
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
nl|'\n'
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|','
name|'dict'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'20090'
op|','
name|'actual_target'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_find_target_id_outside_range
dedent|''
name|'def'
name|'test_find_target_id_outside_range'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'actual_target'
op|'='
name|'idmapshift'
op|'.'
name|'find_target_id'
op|'('
number|'10000'
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
nl|'\n'
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|','
name|'dict'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|','
name|'actual_target'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_find_target_id_no_mappings
dedent|''
name|'def'
name|'test_find_target_id_no_mappings'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'actual_target'
op|'='
name|'idmapshift'
op|'.'
name|'find_target_id'
op|'('
number|'0'
op|','
op|'['
op|']'
op|','
nl|'\n'
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|','
name|'dict'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|','
name|'actual_target'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_find_target_id_updates_memo
dedent|''
name|'def'
name|'test_find_target_id_updates_memo'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'memo'
op|'='
name|'dict'
op|'('
op|')'
newline|'\n'
name|'idmapshift'
op|'.'
name|'find_target_id'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|','
name|'memo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
number|'0'
name|'in'
name|'memo'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10000'
op|','
name|'memo'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_find_target_guest_id_greater_than_count
dedent|''
name|'def'
name|'test_find_target_guest_id_greater_than_count'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uid_maps'
op|'='
op|'['
op|'('
number|'500'
op|','
number|'10000'
op|','
number|'10'
op|')'
op|']'
newline|'\n'
nl|'\n'
comment|'# Below range'
nl|'\n'
name|'actual_target'
op|'='
name|'idmapshift'
op|'.'
name|'find_target_id'
op|'('
number|'499'
op|','
name|'uid_maps'
op|','
nl|'\n'
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|','
name|'dict'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|','
name|'actual_target'
op|')'
newline|'\n'
nl|'\n'
comment|'# Match'
nl|'\n'
name|'actual_target'
op|'='
name|'idmapshift'
op|'.'
name|'find_target_id'
op|'('
number|'501'
op|','
name|'uid_maps'
op|','
nl|'\n'
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|','
name|'dict'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10001'
op|','
name|'actual_target'
op|')'
newline|'\n'
nl|'\n'
comment|'# Beyond range'
nl|'\n'
name|'actual_target'
op|'='
name|'idmapshift'
op|'.'
name|'find_target_id'
op|'('
number|'510'
op|','
name|'uid_maps'
op|','
nl|'\n'
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|','
name|'dict'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|','
name|'actual_target'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ShiftPathTestCase
dedent|''
dedent|''
name|'class'
name|'ShiftPathTestCase'
op|'('
name|'BaseTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.lchown'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.lstat'"
op|')'
newline|'\n'
DECL|member|test_shift_path
name|'def'
name|'test_shift_path'
op|'('
name|'self'
op|','
name|'mock_lstat'
op|','
name|'mock_lchown'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_lstat'
op|'.'
name|'return_value'
op|'='
name|'FakeStat'
op|'('
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
name|'idmapshift'
op|'.'
name|'shift_path'
op|'('
string|"'/test/path'"
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
name|'self'
op|'.'
name|'gid_maps'
op|','
nl|'\n'
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|','
name|'dict'
op|'('
op|')'
op|','
name|'dict'
op|'('
op|')'
op|')'
newline|'\n'
name|'mock_lstat'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/test/path'"
op|')'
op|']'
op|')'
newline|'\n'
name|'mock_lchown'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/test/path'"
op|','
number|'10000'
op|','
number|'10000'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.lchown'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.lstat'"
op|')'
newline|'\n'
DECL|member|test_shift_path_dry_run
name|'def'
name|'test_shift_path_dry_run'
op|'('
name|'self'
op|','
name|'mock_lstat'
op|','
name|'mock_lchown'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_lstat'
op|'.'
name|'return_value'
op|'='
name|'FakeStat'
op|'('
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
name|'idmapshift'
op|'.'
name|'shift_path'
op|'('
string|"'/test/path'"
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
name|'self'
op|'.'
name|'gid_maps'
op|','
nl|'\n'
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|','
name|'dict'
op|'('
op|')'
op|','
name|'dict'
op|'('
op|')'
op|','
nl|'\n'
name|'dry_run'
op|'='
name|'True'
op|')'
newline|'\n'
name|'mock_lstat'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/test/path'"
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'mock_lchown'
op|'.'
name|'mock_calls'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.lchown'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.cmd.idmapshift.print_chown'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.lstat'"
op|')'
newline|'\n'
DECL|member|test_shift_path_verbose
name|'def'
name|'test_shift_path_verbose'
op|'('
name|'self'
op|','
name|'mock_lstat'
op|','
name|'mock_print'
op|','
name|'mock_lchown'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_lstat'
op|'.'
name|'return_value'
op|'='
name|'FakeStat'
op|'('
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
name|'idmapshift'
op|'.'
name|'shift_path'
op|'('
string|"'/test/path'"
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
name|'self'
op|'.'
name|'gid_maps'
op|','
nl|'\n'
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|','
name|'dict'
op|'('
op|')'
op|','
name|'dict'
op|'('
op|')'
op|','
nl|'\n'
name|'verbose'
op|'='
name|'True'
op|')'
newline|'\n'
name|'mock_lstat'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/test/path'"
op|')'
op|']'
op|')'
newline|'\n'
name|'mock_print_call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/test/path'"
op|','
number|'0'
op|','
number|'0'
op|','
number|'10000'
op|','
number|'10000'
op|')'
newline|'\n'
name|'mock_print'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock_print_call'
op|']'
op|')'
newline|'\n'
name|'mock_lchown'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/test/path'"
op|','
number|'10000'
op|','
number|'10000'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ShiftDirTestCase
dedent|''
dedent|''
name|'class'
name|'ShiftDirTestCase'
op|'('
name|'BaseTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.cmd.idmapshift.shift_path'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.join'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.walk'"
op|')'
newline|'\n'
DECL|member|test_shift_dir
name|'def'
name|'test_shift_dir'
op|'('
name|'self'
op|','
name|'mock_walk'
op|','
name|'mock_join'
op|','
name|'mock_shift_path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_walk'
op|'.'
name|'return_value'
op|'='
op|'['
op|'('
string|"'/'"
op|','
op|'['
string|"'a'"
op|','
string|"'b'"
op|']'
op|','
op|'['
string|"'c'"
op|','
string|"'d'"
op|']'
op|')'
op|']'
newline|'\n'
name|'mock_join'
op|'.'
name|'side_effect'
op|'='
name|'join_side_effect'
newline|'\n'
nl|'\n'
name|'idmapshift'
op|'.'
name|'shift_dir'
op|'('
string|"'/'"
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
name|'self'
op|'.'
name|'gid_maps'
op|','
nl|'\n'
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|')'
newline|'\n'
nl|'\n'
name|'files'
op|'='
op|'['
string|"'a'"
op|','
string|"'b'"
op|','
string|"'c'"
op|','
string|"'d'"
op|']'
newline|'\n'
name|'mock_walk'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/'"
op|')'
op|']'
op|')'
newline|'\n'
name|'mock_join_calls'
op|'='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/'"
op|','
name|'x'
op|')'
name|'for'
name|'x'
name|'in'
name|'files'
op|']'
newline|'\n'
name|'mock_join'
op|'.'
name|'assert_has_calls'
op|'('
name|'mock_join_calls'
op|')'
newline|'\n'
nl|'\n'
name|'args'
op|'='
op|'('
name|'self'
op|'.'
name|'uid_maps'
op|','
name|'self'
op|'.'
name|'gid_maps'
op|','
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|')'
newline|'\n'
name|'kwargs'
op|'='
name|'dict'
op|'('
name|'dry_run'
op|'='
name|'False'
op|','
name|'verbose'
op|'='
name|'False'
op|','
nl|'\n'
name|'uid_memo'
op|'='
name|'dict'
op|'('
op|')'
op|','
name|'gid_memo'
op|'='
name|'dict'
op|'('
op|')'
op|')'
newline|'\n'
name|'shift_path_calls'
op|'='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/'"
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|']'
newline|'\n'
name|'shift_path_calls'
op|'+='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/'"
op|'+'
name|'x'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
nl|'\n'
name|'for'
name|'x'
name|'in'
name|'files'
op|']'
newline|'\n'
name|'mock_shift_path'
op|'.'
name|'assert_has_calls'
op|'('
name|'shift_path_calls'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.cmd.idmapshift.shift_path'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.join'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.walk'"
op|')'
newline|'\n'
DECL|member|test_shift_dir_dry_run
name|'def'
name|'test_shift_dir_dry_run'
op|'('
name|'self'
op|','
name|'mock_walk'
op|','
name|'mock_join'
op|','
name|'mock_shift_path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_walk'
op|'.'
name|'return_value'
op|'='
op|'['
op|'('
string|"'/'"
op|','
op|'['
string|"'a'"
op|','
string|"'b'"
op|']'
op|','
op|'['
string|"'c'"
op|','
string|"'d'"
op|']'
op|')'
op|']'
newline|'\n'
name|'mock_join'
op|'.'
name|'side_effect'
op|'='
name|'join_side_effect'
newline|'\n'
nl|'\n'
name|'idmapshift'
op|'.'
name|'shift_dir'
op|'('
string|"'/'"
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
name|'self'
op|'.'
name|'gid_maps'
op|','
nl|'\n'
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|','
name|'dry_run'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'mock_walk'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/'"
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'files'
op|'='
op|'['
string|"'a'"
op|','
string|"'b'"
op|','
string|"'c'"
op|','
string|"'d'"
op|']'
newline|'\n'
name|'mock_join_calls'
op|'='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/'"
op|','
name|'x'
op|')'
name|'for'
name|'x'
name|'in'
name|'files'
op|']'
newline|'\n'
name|'mock_join'
op|'.'
name|'assert_has_calls'
op|'('
name|'mock_join_calls'
op|')'
newline|'\n'
nl|'\n'
name|'args'
op|'='
op|'('
name|'self'
op|'.'
name|'uid_maps'
op|','
name|'self'
op|'.'
name|'gid_maps'
op|','
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|')'
newline|'\n'
name|'kwargs'
op|'='
name|'dict'
op|'('
name|'dry_run'
op|'='
name|'True'
op|','
name|'verbose'
op|'='
name|'False'
op|','
nl|'\n'
name|'uid_memo'
op|'='
name|'dict'
op|'('
op|')'
op|','
name|'gid_memo'
op|'='
name|'dict'
op|'('
op|')'
op|')'
newline|'\n'
name|'shift_path_calls'
op|'='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/'"
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|']'
newline|'\n'
name|'shift_path_calls'
op|'+='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/'"
op|'+'
name|'x'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
nl|'\n'
name|'for'
name|'x'
name|'in'
name|'files'
op|']'
newline|'\n'
name|'mock_shift_path'
op|'.'
name|'assert_has_calls'
op|'('
name|'shift_path_calls'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConfirmPathTestCase
dedent|''
dedent|''
name|'class'
name|'ConfirmPathTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.lstat'"
op|')'
newline|'\n'
DECL|member|test_confirm_path
name|'def'
name|'test_confirm_path'
op|'('
name|'self'
op|','
name|'mock_lstat'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uid_ranges'
op|'='
op|'['
op|'('
number|'1000'
op|','
number|'1999'
op|')'
op|']'
newline|'\n'
name|'gid_ranges'
op|'='
op|'['
op|'('
number|'300'
op|','
number|'399'
op|')'
op|']'
newline|'\n'
name|'mock_lstat'
op|'.'
name|'return_value'
op|'='
name|'FakeStat'
op|'('
number|'1000'
op|','
number|'301'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'idmapshift'
op|'.'
name|'confirm_path'
op|'('
string|"'/test/path'"
op|','
name|'uid_ranges'
op|','
name|'gid_ranges'
op|','
nl|'\n'
number|'50000'
op|')'
newline|'\n'
nl|'\n'
name|'mock_lstat'
op|'.'
name|'assert_has_calls'
op|'('
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/test/path'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.lstat'"
op|')'
newline|'\n'
DECL|member|test_confirm_path_nobody
name|'def'
name|'test_confirm_path_nobody'
op|'('
name|'self'
op|','
name|'mock_lstat'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uid_ranges'
op|'='
op|'['
op|'('
number|'1000'
op|','
number|'1999'
op|')'
op|']'
newline|'\n'
name|'gid_ranges'
op|'='
op|'['
op|'('
number|'300'
op|','
number|'399'
op|')'
op|']'
newline|'\n'
name|'mock_lstat'
op|'.'
name|'return_value'
op|'='
name|'FakeStat'
op|'('
number|'50000'
op|','
number|'50000'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'idmapshift'
op|'.'
name|'confirm_path'
op|'('
string|"'/test/path'"
op|','
name|'uid_ranges'
op|','
name|'gid_ranges'
op|','
nl|'\n'
number|'50000'
op|')'
newline|'\n'
nl|'\n'
name|'mock_lstat'
op|'.'
name|'assert_has_calls'
op|'('
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/test/path'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.lstat'"
op|')'
newline|'\n'
DECL|member|test_confirm_path_uid_mismatch
name|'def'
name|'test_confirm_path_uid_mismatch'
op|'('
name|'self'
op|','
name|'mock_lstat'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uid_ranges'
op|'='
op|'['
op|'('
number|'1000'
op|','
number|'1999'
op|')'
op|']'
newline|'\n'
name|'gid_ranges'
op|'='
op|'['
op|'('
number|'300'
op|','
number|'399'
op|')'
op|']'
newline|'\n'
name|'mock_lstat'
op|'.'
name|'return_value'
op|'='
name|'FakeStat'
op|'('
number|'0'
op|','
number|'301'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'idmapshift'
op|'.'
name|'confirm_path'
op|'('
string|"'/test/path'"
op|','
name|'uid_ranges'
op|','
name|'gid_ranges'
op|','
nl|'\n'
number|'50000'
op|')'
newline|'\n'
nl|'\n'
name|'mock_lstat'
op|'.'
name|'assert_has_calls'
op|'('
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/test/path'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.lstat'"
op|')'
newline|'\n'
DECL|member|test_confirm_path_gid_mismatch
name|'def'
name|'test_confirm_path_gid_mismatch'
op|'('
name|'self'
op|','
name|'mock_lstat'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uid_ranges'
op|'='
op|'['
op|'('
number|'1000'
op|','
number|'1999'
op|')'
op|']'
newline|'\n'
name|'gid_ranges'
op|'='
op|'['
op|'('
number|'300'
op|','
number|'399'
op|')'
op|']'
newline|'\n'
name|'mock_lstat'
op|'.'
name|'return_value'
op|'='
name|'FakeStat'
op|'('
number|'1000'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'idmapshift'
op|'.'
name|'confirm_path'
op|'('
string|"'/test/path'"
op|','
name|'uid_ranges'
op|','
name|'gid_ranges'
op|','
nl|'\n'
number|'50000'
op|')'
newline|'\n'
nl|'\n'
name|'mock_lstat'
op|'.'
name|'assert_has_calls'
op|'('
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/test/path'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.lstat'"
op|')'
newline|'\n'
DECL|member|test_confirm_path_uid_nobody
name|'def'
name|'test_confirm_path_uid_nobody'
op|'('
name|'self'
op|','
name|'mock_lstat'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uid_ranges'
op|'='
op|'['
op|'('
number|'1000'
op|','
number|'1999'
op|')'
op|']'
newline|'\n'
name|'gid_ranges'
op|'='
op|'['
op|'('
number|'300'
op|','
number|'399'
op|')'
op|']'
newline|'\n'
name|'mock_lstat'
op|'.'
name|'return_value'
op|'='
name|'FakeStat'
op|'('
number|'50000'
op|','
number|'301'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'idmapshift'
op|'.'
name|'confirm_path'
op|'('
string|"'/test/path'"
op|','
name|'uid_ranges'
op|','
name|'gid_ranges'
op|','
nl|'\n'
number|'50000'
op|')'
newline|'\n'
nl|'\n'
name|'mock_lstat'
op|'.'
name|'assert_has_calls'
op|'('
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/test/path'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.lstat'"
op|')'
newline|'\n'
DECL|member|test_confirm_path_gid_nobody
name|'def'
name|'test_confirm_path_gid_nobody'
op|'('
name|'self'
op|','
name|'mock_lstat'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'uid_ranges'
op|'='
op|'['
op|'('
number|'1000'
op|','
number|'1999'
op|')'
op|']'
newline|'\n'
name|'gid_ranges'
op|'='
op|'['
op|'('
number|'300'
op|','
number|'399'
op|')'
op|']'
newline|'\n'
name|'mock_lstat'
op|'.'
name|'return_value'
op|'='
name|'FakeStat'
op|'('
number|'1000'
op|','
number|'50000'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'idmapshift'
op|'.'
name|'confirm_path'
op|'('
string|"'/test/path'"
op|','
name|'uid_ranges'
op|','
name|'gid_ranges'
op|','
nl|'\n'
number|'50000'
op|')'
newline|'\n'
nl|'\n'
name|'mock_lstat'
op|'.'
name|'assert_has_calls'
op|'('
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/test/path'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConfirmDirTestCase
dedent|''
dedent|''
name|'class'
name|'ConfirmDirTestCase'
op|'('
name|'BaseTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'uid_map_ranges'
op|'='
name|'idmapshift'
op|'.'
name|'get_ranges'
op|'('
name|'self'
op|'.'
name|'uid_maps'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'gid_map_ranges'
op|'='
name|'idmapshift'
op|'.'
name|'get_ranges'
op|'('
name|'self'
op|'.'
name|'gid_maps'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.cmd.idmapshift.confirm_path'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.join'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.walk'"
op|')'
newline|'\n'
DECL|member|test_confirm_dir
name|'def'
name|'test_confirm_dir'
op|'('
name|'self'
op|','
name|'mock_walk'
op|','
name|'mock_join'
op|','
name|'mock_confirm_path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_walk'
op|'.'
name|'return_value'
op|'='
op|'['
op|'('
string|"'/'"
op|','
op|'['
string|"'a'"
op|','
string|"'b'"
op|']'
op|','
op|'['
string|"'c'"
op|','
string|"'d'"
op|']'
op|')'
op|']'
newline|'\n'
name|'mock_join'
op|'.'
name|'side_effect'
op|'='
name|'join_side_effect'
newline|'\n'
name|'mock_confirm_path'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'idmapshift'
op|'.'
name|'confirm_dir'
op|'('
string|"'/'"
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
name|'self'
op|'.'
name|'gid_maps'
op|','
nl|'\n'
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|')'
newline|'\n'
nl|'\n'
name|'files'
op|'='
op|'['
string|"'a'"
op|','
string|"'b'"
op|','
string|"'c'"
op|','
string|"'d'"
op|']'
newline|'\n'
name|'mock_walk'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/'"
op|')'
op|']'
op|')'
newline|'\n'
name|'mock_join_calls'
op|'='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/'"
op|','
name|'x'
op|')'
name|'for'
name|'x'
name|'in'
name|'files'
op|']'
newline|'\n'
name|'mock_join'
op|'.'
name|'assert_has_calls'
op|'('
name|'mock_join_calls'
op|')'
newline|'\n'
nl|'\n'
name|'args'
op|'='
op|'('
name|'self'
op|'.'
name|'uid_map_ranges'
op|','
name|'self'
op|'.'
name|'gid_map_ranges'
op|','
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|')'
newline|'\n'
name|'confirm_path_calls'
op|'='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/'"
op|','
op|'*'
name|'args'
op|')'
op|']'
newline|'\n'
name|'confirm_path_calls'
op|'+='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/'"
op|'+'
name|'x'
op|','
op|'*'
name|'args'
op|')'
nl|'\n'
name|'for'
name|'x'
name|'in'
name|'files'
op|']'
newline|'\n'
name|'mock_confirm_path'
op|'.'
name|'assert_has_calls'
op|'('
name|'confirm_path_calls'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.cmd.idmapshift.confirm_path'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.join'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.walk'"
op|')'
newline|'\n'
DECL|member|test_confirm_dir_short_circuit_root
name|'def'
name|'test_confirm_dir_short_circuit_root'
op|'('
name|'self'
op|','
name|'mock_walk'
op|','
name|'mock_join'
op|','
nl|'\n'
name|'mock_confirm_path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_walk'
op|'.'
name|'return_value'
op|'='
op|'['
op|'('
string|"'/'"
op|','
op|'['
string|"'a'"
op|','
string|"'b'"
op|']'
op|','
op|'['
string|"'c'"
op|','
string|"'d'"
op|']'
op|')'
op|']'
newline|'\n'
name|'mock_join'
op|'.'
name|'side_effect'
op|'='
name|'join_side_effect'
newline|'\n'
name|'mock_confirm_path'
op|'.'
name|'return_value'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'idmapshift'
op|'.'
name|'confirm_dir'
op|'('
string|"'/'"
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
name|'self'
op|'.'
name|'gid_maps'
op|','
nl|'\n'
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|')'
newline|'\n'
nl|'\n'
name|'args'
op|'='
op|'('
name|'self'
op|'.'
name|'uid_map_ranges'
op|','
name|'self'
op|'.'
name|'gid_map_ranges'
op|','
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|')'
newline|'\n'
name|'confirm_path_calls'
op|'='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/'"
op|','
op|'*'
name|'args'
op|')'
op|']'
newline|'\n'
name|'mock_confirm_path'
op|'.'
name|'assert_has_calls'
op|'('
name|'confirm_path_calls'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.cmd.idmapshift.confirm_path'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.join'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.walk'"
op|')'
newline|'\n'
DECL|member|test_confirm_dir_short_circuit_file
name|'def'
name|'test_confirm_dir_short_circuit_file'
op|'('
name|'self'
op|','
name|'mock_walk'
op|','
name|'mock_join'
op|','
nl|'\n'
name|'mock_confirm_path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_walk'
op|'.'
name|'return_value'
op|'='
op|'['
op|'('
string|"'/'"
op|','
op|'['
string|"'a'"
op|','
string|"'b'"
op|']'
op|','
op|'['
string|"'c'"
op|','
string|"'d'"
op|']'
op|')'
op|']'
newline|'\n'
name|'mock_join'
op|'.'
name|'side_effect'
op|'='
name|'join_side_effect'
newline|'\n'
nl|'\n'
DECL|function|confirm_path_side_effect
name|'def'
name|'confirm_path_side_effect'
op|'('
name|'path'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'a'"
name|'in'
name|'path'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_confirm_path'
op|'.'
name|'side_effect'
op|'='
name|'confirm_path_side_effect'
newline|'\n'
nl|'\n'
name|'idmapshift'
op|'.'
name|'confirm_dir'
op|'('
string|"'/'"
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
name|'self'
op|'.'
name|'gid_maps'
op|','
nl|'\n'
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|')'
newline|'\n'
nl|'\n'
name|'mock_walk'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/'"
op|')'
op|']'
op|')'
newline|'\n'
name|'mock_join'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/'"
op|','
string|"'a'"
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'args'
op|'='
op|'('
name|'self'
op|'.'
name|'uid_map_ranges'
op|','
name|'self'
op|'.'
name|'gid_map_ranges'
op|','
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|')'
newline|'\n'
name|'confirm_path_calls'
op|'='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/'"
op|','
op|'*'
name|'args'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/'"
op|'+'
string|"'a'"
op|','
op|'*'
name|'args'
op|')'
op|']'
newline|'\n'
name|'mock_confirm_path'
op|'.'
name|'assert_has_calls'
op|'('
name|'confirm_path_calls'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.cmd.idmapshift.confirm_path'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.join'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.walk'"
op|')'
newline|'\n'
DECL|member|test_confirm_dir_short_circuit_dir
name|'def'
name|'test_confirm_dir_short_circuit_dir'
op|'('
name|'self'
op|','
name|'mock_walk'
op|','
name|'mock_join'
op|','
nl|'\n'
name|'mock_confirm_path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_walk'
op|'.'
name|'return_value'
op|'='
op|'['
op|'('
string|"'/'"
op|','
op|'['
string|"'a'"
op|','
string|"'b'"
op|']'
op|','
op|'['
string|"'c'"
op|','
string|"'d'"
op|']'
op|')'
op|']'
newline|'\n'
name|'mock_join'
op|'.'
name|'side_effect'
op|'='
name|'join_side_effect'
newline|'\n'
nl|'\n'
DECL|function|confirm_path_side_effect
name|'def'
name|'confirm_path_side_effect'
op|'('
name|'path'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'c'"
name|'in'
name|'path'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_confirm_path'
op|'.'
name|'side_effect'
op|'='
name|'confirm_path_side_effect'
newline|'\n'
nl|'\n'
name|'idmapshift'
op|'.'
name|'confirm_dir'
op|'('
string|"'/'"
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
name|'self'
op|'.'
name|'gid_maps'
op|','
nl|'\n'
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|')'
newline|'\n'
nl|'\n'
name|'files'
op|'='
op|'['
string|"'a'"
op|','
string|"'b'"
op|','
string|"'c'"
op|']'
newline|'\n'
name|'mock_walk'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/'"
op|')'
op|']'
op|')'
newline|'\n'
name|'mock_join_calls'
op|'='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/'"
op|','
name|'x'
op|')'
name|'for'
name|'x'
name|'in'
name|'files'
op|']'
newline|'\n'
name|'mock_join'
op|'.'
name|'assert_has_calls'
op|'('
name|'mock_join_calls'
op|')'
newline|'\n'
nl|'\n'
name|'args'
op|'='
op|'('
name|'self'
op|'.'
name|'uid_map_ranges'
op|','
name|'self'
op|'.'
name|'gid_map_ranges'
op|','
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|')'
newline|'\n'
name|'confirm_path_calls'
op|'='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/'"
op|','
op|'*'
name|'args'
op|')'
op|']'
newline|'\n'
name|'confirm_path_calls'
op|'+='
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/'"
op|'+'
name|'x'
op|','
op|'*'
name|'args'
op|')'
nl|'\n'
name|'for'
name|'x'
name|'in'
name|'files'
op|']'
newline|'\n'
name|'mock_confirm_path'
op|'.'
name|'assert_has_calls'
op|'('
name|'confirm_path_calls'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|IDMapTypeTestCase
dedent|''
dedent|''
name|'class'
name|'IDMapTypeTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_id_map_type
indent|'    '
name|'def'
name|'test_id_map_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'idmapshift'
op|'.'
name|'id_map_type'
op|'('
string|'"1:1:1,2:2:2"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|'('
number|'1'
op|','
number|'1'
op|','
number|'1'
op|')'
op|','
op|'('
number|'2'
op|','
number|'2'
op|','
number|'2'
op|')'
op|']'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_id_map_type_not_int
dedent|''
name|'def'
name|'test_id_map_type_not_int'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'argparse'
op|'.'
name|'ArgumentTypeError'
op|','
name|'idmapshift'
op|'.'
name|'id_map_type'
op|','
nl|'\n'
string|'"a:1:1"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_id_map_type_not_proper_format
dedent|''
name|'def'
name|'test_id_map_type_not_proper_format'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'argparse'
op|'.'
name|'ArgumentTypeError'
op|','
name|'idmapshift'
op|'.'
name|'id_map_type'
op|','
nl|'\n'
string|'"1:1"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MainTestCase
dedent|''
dedent|''
name|'class'
name|'MainTestCase'
op|'('
name|'BaseTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.cmd.idmapshift.shift_dir'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'argparse.ArgumentParser'"
op|')'
newline|'\n'
DECL|member|test_main
name|'def'
name|'test_main'
op|'('
name|'self'
op|','
name|'mock_parser_class'
op|','
name|'mock_shift_dir'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_parser'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_parser'
op|'.'
name|'parse_args'
op|'.'
name|'return_value'
op|'='
name|'mock_parser'
newline|'\n'
name|'mock_parser'
op|'.'
name|'idempotent'
op|'='
name|'False'
newline|'\n'
name|'mock_parser'
op|'.'
name|'confirm'
op|'='
name|'False'
newline|'\n'
name|'mock_parser'
op|'.'
name|'path'
op|'='
string|"'/test/path'"
newline|'\n'
name|'mock_parser'
op|'.'
name|'uid'
op|'='
name|'self'
op|'.'
name|'uid_maps'
newline|'\n'
name|'mock_parser'
op|'.'
name|'gid'
op|'='
name|'self'
op|'.'
name|'gid_maps'
newline|'\n'
name|'mock_parser'
op|'.'
name|'nobody'
op|'='
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
newline|'\n'
name|'mock_parser'
op|'.'
name|'dry_run'
op|'='
name|'False'
newline|'\n'
name|'mock_parser'
op|'.'
name|'verbose'
op|'='
name|'False'
newline|'\n'
name|'mock_parser_class'
op|'.'
name|'return_value'
op|'='
name|'mock_parser'
newline|'\n'
nl|'\n'
name|'idmapshift'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'mock_shift_dir_call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/test/path'"
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
nl|'\n'
name|'self'
op|'.'
name|'gid_maps'
op|','
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|','
nl|'\n'
name|'dry_run'
op|'='
name|'False'
op|','
name|'verbose'
op|'='
name|'False'
op|')'
newline|'\n'
name|'mock_shift_dir'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock_shift_dir_call'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.cmd.idmapshift.shift_dir'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.cmd.idmapshift.confirm_dir'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'argparse.ArgumentParser'"
op|')'
newline|'\n'
DECL|member|test_main_confirm_dir_idempotent_unshifted
name|'def'
name|'test_main_confirm_dir_idempotent_unshifted'
op|'('
name|'self'
op|','
name|'mock_parser_class'
op|','
nl|'\n'
name|'mock_confirm_dir'
op|','
nl|'\n'
name|'mock_shift_dir'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_parser'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_parser'
op|'.'
name|'parse_args'
op|'.'
name|'return_value'
op|'='
name|'mock_parser'
newline|'\n'
name|'mock_parser'
op|'.'
name|'idempotent'
op|'='
name|'True'
newline|'\n'
name|'mock_parser'
op|'.'
name|'confirm'
op|'='
name|'False'
newline|'\n'
name|'mock_parser'
op|'.'
name|'path'
op|'='
string|"'/test/path'"
newline|'\n'
name|'mock_parser'
op|'.'
name|'uid'
op|'='
name|'self'
op|'.'
name|'uid_maps'
newline|'\n'
name|'mock_parser'
op|'.'
name|'gid'
op|'='
name|'self'
op|'.'
name|'gid_maps'
newline|'\n'
name|'mock_parser'
op|'.'
name|'nobody'
op|'='
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
newline|'\n'
name|'mock_parser'
op|'.'
name|'dry_run'
op|'='
name|'False'
newline|'\n'
name|'mock_parser'
op|'.'
name|'verbose'
op|'='
name|'False'
newline|'\n'
name|'mock_parser_class'
op|'.'
name|'return_value'
op|'='
name|'mock_parser'
newline|'\n'
name|'mock_confirm_dir'
op|'.'
name|'return_value'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'idmapshift'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'mock_confirm_dir_call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/test/path'"
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
nl|'\n'
name|'self'
op|'.'
name|'gid_maps'
op|','
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|')'
newline|'\n'
name|'mock_confirm_dir'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock_confirm_dir_call'
op|']'
op|')'
newline|'\n'
name|'mock_shift_dir_call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/test/path'"
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
nl|'\n'
name|'self'
op|'.'
name|'gid_maps'
op|','
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|','
nl|'\n'
name|'dry_run'
op|'='
name|'False'
op|','
name|'verbose'
op|'='
name|'False'
op|')'
newline|'\n'
name|'mock_shift_dir'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock_shift_dir_call'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.cmd.idmapshift.shift_dir'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.cmd.idmapshift.confirm_dir'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'argparse.ArgumentParser'"
op|')'
newline|'\n'
DECL|member|test_main_confirm_dir_idempotent_shifted
name|'def'
name|'test_main_confirm_dir_idempotent_shifted'
op|'('
name|'self'
op|','
name|'mock_parser_class'
op|','
nl|'\n'
name|'mock_confirm_dir'
op|','
nl|'\n'
name|'mock_shift_dir'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_parser'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_parser'
op|'.'
name|'parse_args'
op|'.'
name|'return_value'
op|'='
name|'mock_parser'
newline|'\n'
name|'mock_parser'
op|'.'
name|'idempotent'
op|'='
name|'True'
newline|'\n'
name|'mock_parser'
op|'.'
name|'confirm'
op|'='
name|'False'
newline|'\n'
name|'mock_parser'
op|'.'
name|'path'
op|'='
string|"'/test/path'"
newline|'\n'
name|'mock_parser'
op|'.'
name|'uid'
op|'='
name|'self'
op|'.'
name|'uid_maps'
newline|'\n'
name|'mock_parser'
op|'.'
name|'gid'
op|'='
name|'self'
op|'.'
name|'gid_maps'
newline|'\n'
name|'mock_parser'
op|'.'
name|'nobody'
op|'='
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
newline|'\n'
name|'mock_parser'
op|'.'
name|'dry_run'
op|'='
name|'False'
newline|'\n'
name|'mock_parser'
op|'.'
name|'verbose'
op|'='
name|'False'
newline|'\n'
name|'mock_parser_class'
op|'.'
name|'return_value'
op|'='
name|'mock_parser'
newline|'\n'
name|'mock_confirm_dir'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'idmapshift'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'SystemExit'
name|'as'
name|'sys_exit'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sys_exit'
op|'.'
name|'code'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_confirm_dir_call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/test/path'"
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
nl|'\n'
name|'self'
op|'.'
name|'gid_maps'
op|','
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|')'
newline|'\n'
name|'mock_confirm_dir'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock_confirm_dir_call'
op|']'
op|')'
newline|'\n'
name|'mock_shift_dir'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.cmd.idmapshift.shift_dir'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.cmd.idmapshift.confirm_dir'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'argparse.ArgumentParser'"
op|')'
newline|'\n'
DECL|member|test_main_confirm_dir_confirm_unshifted
name|'def'
name|'test_main_confirm_dir_confirm_unshifted'
op|'('
name|'self'
op|','
name|'mock_parser_class'
op|','
nl|'\n'
name|'mock_confirm_dir'
op|','
nl|'\n'
name|'mock_shift_dir'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_parser'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_parser'
op|'.'
name|'parse_args'
op|'.'
name|'return_value'
op|'='
name|'mock_parser'
newline|'\n'
name|'mock_parser'
op|'.'
name|'idempotent'
op|'='
name|'False'
newline|'\n'
name|'mock_parser'
op|'.'
name|'confirm'
op|'='
name|'True'
newline|'\n'
name|'mock_parser'
op|'.'
name|'exit_on_fail'
op|'='
name|'True'
newline|'\n'
name|'mock_parser'
op|'.'
name|'path'
op|'='
string|"'/test/path'"
newline|'\n'
name|'mock_parser'
op|'.'
name|'uid'
op|'='
name|'self'
op|'.'
name|'uid_maps'
newline|'\n'
name|'mock_parser'
op|'.'
name|'gid'
op|'='
name|'self'
op|'.'
name|'gid_maps'
newline|'\n'
name|'mock_parser'
op|'.'
name|'nobody'
op|'='
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
newline|'\n'
name|'mock_parser'
op|'.'
name|'dry_run'
op|'='
name|'False'
newline|'\n'
name|'mock_parser'
op|'.'
name|'verbose'
op|'='
name|'False'
newline|'\n'
name|'mock_parser_class'
op|'.'
name|'return_value'
op|'='
name|'mock_parser'
newline|'\n'
name|'mock_confirm_dir'
op|'.'
name|'return_value'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'idmapshift'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'SystemExit'
name|'as'
name|'sys_exit'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sys_exit'
op|'.'
name|'code'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_confirm_dir_call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/test/path'"
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
nl|'\n'
name|'self'
op|'.'
name|'gid_maps'
op|','
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|')'
newline|'\n'
name|'mock_confirm_dir'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock_confirm_dir_call'
op|']'
op|')'
newline|'\n'
name|'mock_shift_dir'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.cmd.idmapshift.shift_dir'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'nova.cmd.idmapshift.confirm_dir'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'argparse.ArgumentParser'"
op|')'
newline|'\n'
DECL|member|test_main_confirm_dir_confirm_shifted
name|'def'
name|'test_main_confirm_dir_confirm_shifted'
op|'('
name|'self'
op|','
name|'mock_parser_class'
op|','
nl|'\n'
name|'mock_confirm_dir'
op|','
nl|'\n'
name|'mock_shift_dir'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_parser'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_parser'
op|'.'
name|'parse_args'
op|'.'
name|'return_value'
op|'='
name|'mock_parser'
newline|'\n'
name|'mock_parser'
op|'.'
name|'idempotent'
op|'='
name|'False'
newline|'\n'
name|'mock_parser'
op|'.'
name|'confirm'
op|'='
name|'True'
newline|'\n'
name|'mock_parser'
op|'.'
name|'exit_on_fail'
op|'='
name|'True'
newline|'\n'
name|'mock_parser'
op|'.'
name|'path'
op|'='
string|"'/test/path'"
newline|'\n'
name|'mock_parser'
op|'.'
name|'uid'
op|'='
name|'self'
op|'.'
name|'uid_maps'
newline|'\n'
name|'mock_parser'
op|'.'
name|'gid'
op|'='
name|'self'
op|'.'
name|'gid_maps'
newline|'\n'
name|'mock_parser'
op|'.'
name|'nobody'
op|'='
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
newline|'\n'
name|'mock_parser'
op|'.'
name|'dry_run'
op|'='
name|'False'
newline|'\n'
name|'mock_parser'
op|'.'
name|'verbose'
op|'='
name|'False'
newline|'\n'
name|'mock_parser_class'
op|'.'
name|'return_value'
op|'='
name|'mock_parser'
newline|'\n'
name|'mock_confirm_dir'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'idmapshift'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'SystemExit'
name|'as'
name|'sys_exit'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sys_exit'
op|'.'
name|'code'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_confirm_dir_call'
op|'='
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/test/path'"
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
nl|'\n'
name|'self'
op|'.'
name|'gid_maps'
op|','
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|')'
newline|'\n'
name|'mock_confirm_dir'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
name|'mock_confirm_dir_call'
op|']'
op|')'
newline|'\n'
name|'mock_shift_dir'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|IntegrationTestCase
dedent|''
dedent|''
name|'class'
name|'IntegrationTestCase'
op|'('
name|'BaseTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.lchown'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.lstat'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.join'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.walk'"
op|')'
newline|'\n'
DECL|member|test_integrated_shift_dir
name|'def'
name|'test_integrated_shift_dir'
op|'('
name|'self'
op|','
name|'mock_walk'
op|','
name|'mock_join'
op|','
name|'mock_lstat'
op|','
nl|'\n'
name|'mock_lchown'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_walk'
op|'.'
name|'return_value'
op|'='
op|'['
op|'('
string|"'/tmp/test'"
op|','
op|'['
string|"'a'"
op|','
string|"'b'"
op|','
string|"'c'"
op|']'
op|','
op|'['
string|"'d'"
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'/tmp/test/d'"
op|','
op|'['
string|"'1'"
op|','
string|"'2'"
op|']'
op|','
op|'['
op|']'
op|')'
op|']'
newline|'\n'
name|'mock_join'
op|'.'
name|'side_effect'
op|'='
name|'join_side_effect'
newline|'\n'
nl|'\n'
DECL|function|lstat
name|'def'
name|'lstat'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'stats'
op|'='
op|'{'
nl|'\n'
string|"'t'"
op|':'
name|'FakeStat'
op|'('
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
string|"'a'"
op|':'
name|'FakeStat'
op|'('
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
string|"'b'"
op|':'
name|'FakeStat'
op|'('
number|'0'
op|','
number|'2'
op|')'
op|','
nl|'\n'
string|"'c'"
op|':'
name|'FakeStat'
op|'('
number|'30000'
op|','
number|'30000'
op|')'
op|','
nl|'\n'
string|"'d'"
op|':'
name|'FakeStat'
op|'('
number|'100'
op|','
number|'100'
op|')'
op|','
nl|'\n'
string|"'1'"
op|':'
name|'FakeStat'
op|'('
number|'0'
op|','
number|'100'
op|')'
op|','
nl|'\n'
string|"'2'"
op|':'
name|'FakeStat'
op|'('
number|'100'
op|','
number|'100'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'return'
name|'stats'
op|'['
name|'path'
op|'['
op|'-'
number|'1'
op|']'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_lstat'
op|'.'
name|'side_effect'
op|'='
name|'lstat'
newline|'\n'
nl|'\n'
name|'idmapshift'
op|'.'
name|'shift_dir'
op|'('
string|"'/tmp/test'"
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
name|'self'
op|'.'
name|'gid_maps'
op|','
nl|'\n'
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|','
name|'verbose'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'lchown_calls'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/tmp/test'"
op|','
number|'10000'
op|','
number|'10000'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/tmp/test/a'"
op|','
number|'10000'
op|','
number|'10000'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/tmp/test/b'"
op|','
number|'10000'
op|','
number|'10002'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/tmp/test/c'"
op|','
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|','
nl|'\n'
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/tmp/test/d'"
op|','
number|'20090'
op|','
number|'20090'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/tmp/test/d/1'"
op|','
number|'10000'
op|','
number|'20090'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/tmp/test/d/2'"
op|','
number|'20090'
op|','
number|'20090'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'mock_lchown'
op|'.'
name|'assert_has_calls'
op|'('
name|'lchown_calls'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.lchown'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.lstat'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.join'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.walk'"
op|')'
newline|'\n'
DECL|member|test_integrated_shift_dir_dry_run
name|'def'
name|'test_integrated_shift_dir_dry_run'
op|'('
name|'self'
op|','
name|'mock_walk'
op|','
name|'mock_join'
op|','
nl|'\n'
name|'mock_lstat'
op|','
name|'mock_lchown'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_walk'
op|'.'
name|'return_value'
op|'='
op|'['
op|'('
string|"'/tmp/test'"
op|','
op|'['
string|"'a'"
op|','
string|"'b'"
op|','
string|"'c'"
op|']'
op|','
op|'['
string|"'d'"
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'/tmp/test/d'"
op|','
op|'['
string|"'1'"
op|','
string|"'2'"
op|']'
op|','
op|'['
op|']'
op|')'
op|']'
newline|'\n'
name|'mock_join'
op|'.'
name|'side_effect'
op|'='
name|'join_side_effect'
newline|'\n'
nl|'\n'
DECL|function|lstat
name|'def'
name|'lstat'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'stats'
op|'='
op|'{'
nl|'\n'
string|"'t'"
op|':'
name|'FakeStat'
op|'('
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
string|"'a'"
op|':'
name|'FakeStat'
op|'('
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
string|"'b'"
op|':'
name|'FakeStat'
op|'('
number|'0'
op|','
number|'2'
op|')'
op|','
nl|'\n'
string|"'c'"
op|':'
name|'FakeStat'
op|'('
number|'30000'
op|','
number|'30000'
op|')'
op|','
nl|'\n'
string|"'d'"
op|':'
name|'FakeStat'
op|'('
number|'100'
op|','
number|'100'
op|')'
op|','
nl|'\n'
string|"'1'"
op|':'
name|'FakeStat'
op|'('
number|'0'
op|','
number|'100'
op|')'
op|','
nl|'\n'
string|"'2'"
op|':'
name|'FakeStat'
op|'('
number|'100'
op|','
number|'100'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'return'
name|'stats'
op|'['
name|'path'
op|'['
op|'-'
number|'1'
op|']'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_lstat'
op|'.'
name|'side_effect'
op|'='
name|'lstat'
newline|'\n'
nl|'\n'
name|'idmapshift'
op|'.'
name|'shift_dir'
op|'('
string|"'/tmp/test'"
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
name|'self'
op|'.'
name|'gid_maps'
op|','
nl|'\n'
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|','
name|'dry_run'
op|'='
name|'True'
op|','
name|'verbose'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'mock_lchown'
op|'.'
name|'mock_calls'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.lstat'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.join'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.walk'"
op|')'
newline|'\n'
DECL|member|test_integrated_confirm_dir_shifted
name|'def'
name|'test_integrated_confirm_dir_shifted'
op|'('
name|'self'
op|','
name|'mock_walk'
op|','
name|'mock_join'
op|','
nl|'\n'
name|'mock_lstat'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_walk'
op|'.'
name|'return_value'
op|'='
op|'['
op|'('
string|"'/tmp/test'"
op|','
op|'['
string|"'a'"
op|','
string|"'b'"
op|','
string|"'c'"
op|']'
op|','
op|'['
string|"'d'"
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'/tmp/test/d'"
op|','
op|'['
string|"'1'"
op|','
string|"'2'"
op|']'
op|','
op|'['
op|']'
op|')'
op|']'
newline|'\n'
name|'mock_join'
op|'.'
name|'side_effect'
op|'='
name|'join_side_effect'
newline|'\n'
nl|'\n'
DECL|function|lstat
name|'def'
name|'lstat'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'stats'
op|'='
op|'{'
nl|'\n'
string|"'t'"
op|':'
name|'FakeStat'
op|'('
number|'10000'
op|','
number|'10000'
op|')'
op|','
nl|'\n'
string|"'a'"
op|':'
name|'FakeStat'
op|'('
number|'10000'
op|','
number|'10000'
op|')'
op|','
nl|'\n'
string|"'b'"
op|':'
name|'FakeStat'
op|'('
number|'10000'
op|','
number|'10002'
op|')'
op|','
nl|'\n'
string|"'c'"
op|':'
name|'FakeStat'
op|'('
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|','
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|')'
op|','
nl|'\n'
string|"'d'"
op|':'
name|'FakeStat'
op|'('
number|'20090'
op|','
number|'20090'
op|')'
op|','
nl|'\n'
string|"'1'"
op|':'
name|'FakeStat'
op|'('
number|'10000'
op|','
number|'20090'
op|')'
op|','
nl|'\n'
string|"'2'"
op|':'
name|'FakeStat'
op|'('
number|'20090'
op|','
number|'20090'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'return'
name|'stats'
op|'['
name|'path'
op|'['
op|'-'
number|'1'
op|']'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_lstat'
op|'.'
name|'side_effect'
op|'='
name|'lstat'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'idmapshift'
op|'.'
name|'confirm_dir'
op|'('
string|"'/tmp/test'"
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
nl|'\n'
name|'self'
op|'.'
name|'gid_maps'
op|','
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.lstat'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.join'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.walk'"
op|')'
newline|'\n'
DECL|member|test_integrated_confirm_dir_unshifted
name|'def'
name|'test_integrated_confirm_dir_unshifted'
op|'('
name|'self'
op|','
name|'mock_walk'
op|','
name|'mock_join'
op|','
nl|'\n'
name|'mock_lstat'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_walk'
op|'.'
name|'return_value'
op|'='
op|'['
op|'('
string|"'/tmp/test'"
op|','
op|'['
string|"'a'"
op|','
string|"'b'"
op|','
string|"'c'"
op|']'
op|','
op|'['
string|"'d'"
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'/tmp/test/d'"
op|','
op|'['
string|"'1'"
op|','
string|"'2'"
op|']'
op|','
op|'['
op|']'
op|')'
op|']'
newline|'\n'
name|'mock_join'
op|'.'
name|'side_effect'
op|'='
name|'join_side_effect'
newline|'\n'
nl|'\n'
DECL|function|lstat
name|'def'
name|'lstat'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'stats'
op|'='
op|'{'
nl|'\n'
string|"'t'"
op|':'
name|'FakeStat'
op|'('
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
string|"'a'"
op|':'
name|'FakeStat'
op|'('
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
string|"'b'"
op|':'
name|'FakeStat'
op|'('
number|'0'
op|','
number|'2'
op|')'
op|','
nl|'\n'
string|"'c'"
op|':'
name|'FakeStat'
op|'('
number|'30000'
op|','
number|'30000'
op|')'
op|','
nl|'\n'
string|"'d'"
op|':'
name|'FakeStat'
op|'('
number|'100'
op|','
number|'100'
op|')'
op|','
nl|'\n'
string|"'1'"
op|':'
name|'FakeStat'
op|'('
number|'0'
op|','
number|'100'
op|')'
op|','
nl|'\n'
string|"'2'"
op|':'
name|'FakeStat'
op|'('
number|'100'
op|','
number|'100'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'return'
name|'stats'
op|'['
name|'path'
op|'['
op|'-'
number|'1'
op|']'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_lstat'
op|'.'
name|'side_effect'
op|'='
name|'lstat'
newline|'\n'
nl|'\n'
name|'result'
op|'='
name|'idmapshift'
op|'.'
name|'confirm_dir'
op|'('
string|"'/tmp/test'"
op|','
name|'self'
op|'.'
name|'uid_maps'
op|','
nl|'\n'
name|'self'
op|'.'
name|'gid_maps'
op|','
name|'idmapshift'
op|'.'
name|'NOBODY_ID'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'result'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
