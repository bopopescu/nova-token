begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
comment|'# Copyright (c) 2012 Rackspace Hosting'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Unit tests for SQLAlchemy specific code."""'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'db_pool'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'MySQLdb'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
DECL|variable|MySQLdb
indent|'    '
name|'MySQLdb'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'from'
name|'sqlalchemy'
name|'import'
name|'Column'
op|','
name|'MetaData'
op|','
name|'Table'
op|','
name|'UniqueConstraint'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'ext'
op|'.'
name|'declarative'
name|'import'
name|'declarative_base'
newline|'\n'
name|'from'
name|'sqlalchemy'
name|'import'
name|'DateTime'
op|','
name|'Integer'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'models'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
op|'.'
name|'sqlalchemy'
name|'import'
name|'session'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'test'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DbPoolTestCase
name|'class'
name|'DbPoolTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'DbPoolTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'('
name|'sql_dbpool_enable'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'project_id'
op|'='
string|"'fake'"
newline|'\n'
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
op|'.'
name|'RequestContext'
op|'('
name|'self'
op|'.'
name|'user_id'
op|','
name|'self'
op|'.'
name|'project_id'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'MySQLdb'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'skipTest'
op|'('
string|'"Unable to test due to lack of MySQLdb"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_db_pool_option
dedent|''
dedent|''
name|'def'
name|'test_db_pool_option'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'flags'
op|'('
name|'sql_idle_timeout'
op|'='
number|'11'
op|','
name|'sql_min_pool_size'
op|'='
number|'21'
op|','
nl|'\n'
name|'sql_max_pool_size'
op|'='
number|'42'
op|')'
newline|'\n'
nl|'\n'
name|'info'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|class|FakeConnectionPool
name|'class'
name|'FakeConnectionPool'
op|'('
name|'db_pool'
op|'.'
name|'ConnectionPool'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'mod_name'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'info'
op|'['
string|"'module'"
op|']'
op|'='
name|'mod_name'
newline|'\n'
name|'info'
op|'['
string|"'kwargs'"
op|']'
op|'='
name|'kwargs'
newline|'\n'
name|'super'
op|'('
name|'FakeConnectionPool'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'mod_name'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|connect
dedent|''
name|'def'
name|'connect'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'test'
op|'.'
name|'TestingException'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'stubs'
op|'.'
name|'Set'
op|'('
name|'db_pool'
op|','
string|"'ConnectionPool'"
op|','
nl|'\n'
name|'FakeConnectionPool'
op|')'
newline|'\n'
nl|'\n'
name|'sql_connection'
op|'='
string|"'mysql://user:pass@127.0.0.1/nova'"
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'test'
op|'.'
name|'TestingException'
op|','
name|'session'
op|'.'
name|'create_engine'
op|','
nl|'\n'
name|'sql_connection'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|"'module'"
op|']'
op|','
name|'MySQLdb'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|"'kwargs'"
op|']'
op|'['
string|"'max_idle'"
op|']'
op|','
number|'11'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|"'kwargs'"
op|']'
op|'['
string|"'min_size'"
op|']'
op|','
number|'21'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|'['
string|"'kwargs'"
op|']'
op|'['
string|"'max_size'"
op|']'
op|','
number|'42'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|BASE
dedent|''
dedent|''
name|'BASE'
op|'='
name|'declarative_base'
op|'('
op|')'
newline|'\n'
DECL|variable|_TABLE_NAME
name|'_TABLE_NAME'
op|'='
string|"'__tmp__test__tmp__'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TmpTable
name|'class'
name|'TmpTable'
op|'('
name|'BASE'
op|','
name|'models'
op|'.'
name|'NovaBase'
op|')'
op|':'
newline|'\n'
DECL|variable|__tablename__
indent|'    '
name|'__tablename__'
op|'='
name|'_TABLE_NAME'
newline|'\n'
DECL|variable|id
name|'id'
op|'='
name|'Column'
op|'('
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|foo
name|'foo'
op|'='
name|'Column'
op|'('
name|'Integer'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SessionErrorWrapperTestCase
dedent|''
name|'class'
name|'SessionErrorWrapperTestCase'
op|'('
name|'test'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'SessionErrorWrapperTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'session'
op|'.'
name|'get_engine'
op|'('
op|')'
newline|'\n'
name|'test_table'
op|'='
name|'Table'
op|'('
name|'_TABLE_NAME'
op|','
name|'meta'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'id'"
op|','
name|'Integer'
op|','
name|'primary_key'
op|'='
name|'True'
op|','
nl|'\n'
name|'nullable'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'deleted'"
op|','
name|'Integer'
op|','
name|'default'
op|'='
number|'0'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'deleted_at'"
op|','
name|'DateTime'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'updated_at'"
op|','
name|'DateTime'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'created_at'"
op|','
name|'DateTime'
op|')'
op|','
nl|'\n'
name|'Column'
op|'('
string|"'foo'"
op|','
name|'Integer'
op|')'
op|','
nl|'\n'
name|'UniqueConstraint'
op|'('
string|"'foo'"
op|','
name|'name'
op|'='
string|"'uniq_foo'"
op|')'
op|')'
newline|'\n'
name|'test_table'
op|'.'
name|'create'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'SessionErrorWrapperTestCase'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'='
name|'MetaData'
op|'('
op|')'
newline|'\n'
name|'meta'
op|'.'
name|'bind'
op|'='
name|'session'
op|'.'
name|'get_engine'
op|'('
op|')'
newline|'\n'
name|'test_table'
op|'='
name|'Table'
op|'('
name|'_TABLE_NAME'
op|','
name|'meta'
op|','
name|'autoload'
op|'='
name|'True'
op|')'
newline|'\n'
name|'test_table'
op|'.'
name|'drop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_flush_wrapper
dedent|''
name|'def'
name|'test_flush_wrapper'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tbl'
op|'='
name|'TmpTable'
op|'('
op|')'
newline|'\n'
name|'tbl'
op|'.'
name|'update'
op|'('
op|'{'
string|"'foo'"
op|':'
number|'10'
op|'}'
op|')'
newline|'\n'
name|'tbl'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'tbl2'
op|'='
name|'TmpTable'
op|'('
op|')'
newline|'\n'
name|'tbl2'
op|'.'
name|'update'
op|'('
op|'{'
string|"'foo'"
op|':'
number|'10'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'DBDuplicateEntry'
op|','
name|'tbl2'
op|'.'
name|'save'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_execute_wrapper
dedent|''
name|'def'
name|'test_execute_wrapper'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_session'
op|'='
name|'session'
op|'.'
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'with'
name|'_session'
op|'.'
name|'begin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'i'
name|'in'
op|'['
number|'10'
op|','
number|'20'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'tbl'
op|'='
name|'TmpTable'
op|'('
op|')'
newline|'\n'
name|'tbl'
op|'.'
name|'update'
op|'('
op|'{'
string|"'foo'"
op|':'
name|'i'
op|'}'
op|')'
newline|'\n'
name|'tbl'
op|'.'
name|'save'
op|'('
name|'session'
op|'='
name|'_session'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'method'
op|'='
name|'_session'
op|'.'
name|'query'
op|'('
name|'TmpTable'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'foo'
op|'='
number|'10'
op|')'
op|'.'
name|'update'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exception'
op|'.'
name|'DBDuplicateEntry'
op|','
nl|'\n'
name|'method'
op|','
op|'{'
string|"'foo'"
op|':'
number|'20'
op|'}'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
