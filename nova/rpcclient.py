begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2013 Red Hat, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nA temporary helper which emulates oslo.messaging.rpc.RPCClient.\n\nThe most tedious part of porting to oslo.messaging is porting the code which\nsub-classes RpcProxy to use RPCClient instead.\n\nThis helper method allows us to do that tedious porting as a standalone commit\nso that the commit which switches us to oslo.messaging is smaller and easier\nto review. This file will be removed as part of that commit.\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'rpc'
name|'import'
name|'proxy'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RPCClient
name|'class'
name|'RPCClient'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'proxy'
op|','
name|'namespace'
op|'='
name|'None'
op|','
name|'server_params'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'RPCClient'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'='
name|'proxy'
newline|'\n'
name|'self'
op|'.'
name|'namespace'
op|'='
name|'namespace'
newline|'\n'
name|'self'
op|'.'
name|'server_params'
op|'='
name|'server_params'
newline|'\n'
name|'self'
op|'.'
name|'kwargs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'fanout'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|prepare
dedent|''
name|'def'
name|'prepare'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# Clone ourselves'
nl|'\n'
indent|'        '
name|'ret'
op|'='
name|'self'
op|'.'
name|'__class__'
op|'('
name|'self'
op|'.'
name|'proxy'
op|','
name|'self'
op|'.'
name|'namespace'
op|','
name|'self'
op|'.'
name|'server_params'
op|')'
newline|'\n'
name|'ret'
op|'.'
name|'kwargs'
op|'.'
name|'update'
op|'('
name|'self'
op|'.'
name|'kwargs'
op|')'
newline|'\n'
name|'ret'
op|'.'
name|'fanout'
op|'='
name|'self'
op|'.'
name|'fanout'
newline|'\n'
nl|'\n'
comment|'# Update according to supplied kwargs'
nl|'\n'
name|'ret'
op|'.'
name|'kwargs'
op|'.'
name|'update'
op|'('
name|'kwargs'
op|')'
newline|'\n'
name|'server'
op|'='
name|'ret'
op|'.'
name|'kwargs'
op|'.'
name|'pop'
op|'('
string|"'server'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'server'
op|':'
newline|'\n'
indent|'            '
name|'ret'
op|'.'
name|'kwargs'
op|'['
string|"'topic'"
op|']'
op|'='
string|"'%s.%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'topic'
op|','
name|'server'
op|')'
newline|'\n'
dedent|''
name|'fanout'
op|'='
name|'ret'
op|'.'
name|'kwargs'
op|'.'
name|'pop'
op|'('
string|"'fanout'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'fanout'
op|':'
newline|'\n'
indent|'            '
name|'ret'
op|'.'
name|'fanout'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'ret'
newline|'\n'
nl|'\n'
DECL|member|_invoke
dedent|''
name|'def'
name|'_invoke'
op|'('
name|'self'
op|','
name|'cast_or_call'
op|','
name|'ctxt'
op|','
name|'method'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'make_namespaced_msg'
op|'('
name|'method'
op|','
nl|'\n'
name|'self'
op|'.'
name|'namespace'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'return'
name|'cast_or_call'
op|'('
name|'ctxt'
op|','
name|'msg'
op|','
op|'**'
name|'self'
op|'.'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'kwargs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'fanout'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|cast
dedent|''
dedent|''
name|'def'
name|'cast'
op|'('
name|'self'
op|','
name|'ctxt'
op|','
name|'method'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'server_params'
op|':'
newline|'\n'
DECL|function|cast_to_server
indent|'            '
name|'def'
name|'cast_to_server'
op|'('
name|'ctxt'
op|','
name|'msg'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'fanout'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'fanout_cast_to_server'
op|'('
nl|'\n'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'server_params'
op|','
name|'msg'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'cast_to_server'
op|'('
nl|'\n'
name|'ctxt'
op|','
name|'self'
op|'.'
name|'server_params'
op|','
name|'msg'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'caster'
op|'='
name|'cast_to_server'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'caster'
op|'='
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'fanout_cast'
name|'if'
name|'self'
op|'.'
name|'fanout'
name|'else'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'cast'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_invoke'
op|'('
name|'caster'
op|','
name|'ctxt'
op|','
name|'method'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|call
dedent|''
name|'def'
name|'call'
op|'('
name|'self'
op|','
name|'ctxt'
op|','
name|'method'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_invoke'
op|'('
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'call'
op|','
name|'ctxt'
op|','
name|'method'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|can_send_version
dedent|''
name|'def'
name|'can_send_version'
op|'('
name|'self'
op|','
name|'version'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'can_send_version'
op|'('
name|'version'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RpcProxy
dedent|''
dedent|''
name|'class'
name|'RpcProxy'
op|'('
name|'proxy'
op|'.'
name|'RpcProxy'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|get_client
indent|'    '
name|'def'
name|'get_client'
op|'('
name|'self'
op|','
name|'namespace'
op|'='
name|'None'
op|','
name|'server_params'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'RPCClient'
op|'('
name|'self'
op|','
nl|'\n'
name|'namespace'
op|'='
name|'namespace'
op|','
nl|'\n'
name|'server_params'
op|'='
name|'server_params'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
