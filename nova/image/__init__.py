begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Copyright 2011 OpenStack LLC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
nl|'\n'
name|'from'
name|'urlparse'
name|'import'
name|'urlparse'
newline|'\n'
nl|'\n'
name|'import'
name|'nova'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|GlanceClient
name|'GlanceClient'
op|'='
name|'utils'
op|'.'
name|'import_class'
op|'('
string|"'glance.client.Client'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_parse_image_ref
name|'def'
name|'_parse_image_ref'
op|'('
name|'image_href'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Parse an image href into composite parts.\n\n    :param image_href: href of an image\n    :returns: a tuple of the form (image_id, host, port)\n\n    """'
newline|'\n'
name|'o'
op|'='
name|'urlparse'
op|'('
name|'image_href'
op|')'
newline|'\n'
name|'port'
op|'='
name|'o'
op|'.'
name|'port'
name|'or'
number|'80'
newline|'\n'
name|'host'
op|'='
name|'o'
op|'.'
name|'netloc'
op|'.'
name|'split'
op|'('
string|"':'"
op|','
number|'1'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'image_id'
op|'='
name|'int'
op|'('
name|'o'
op|'.'
name|'path'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
op|'['
op|'-'
number|'1'
op|']'
op|')'
newline|'\n'
name|'return'
op|'('
name|'image_id'
op|','
name|'host'
op|','
name|'port'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_default_image_service
dedent|''
name|'def'
name|'get_default_image_service'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'ImageService'
op|'='
name|'utils'
op|'.'
name|'import_class'
op|'('
name|'FLAGS'
op|'.'
name|'image_service'
op|')'
newline|'\n'
name|'return'
name|'ImageService'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_glance_client
dedent|''
name|'def'
name|'get_glance_client'
op|'('
name|'image_href'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get the correct glance client and id for the given image_href.\n\n    The image_href param can be an href of the form\n    http://myglanceserver:9292/images/42, or just an int such as 42. If the\n    image_href is an int, then flags are used to create the default\n    glance client.\n\n    :param image_href: image ref/id for an image\n    :returns: a tuple of the form (glance_client, image_id)\n\n    """'
newline|'\n'
name|'image_href'
op|'='
name|'image_href'
name|'or'
number|'0'
newline|'\n'
name|'if'
name|'str'
op|'('
name|'image_href'
op|')'
op|'.'
name|'isdigit'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'glance_client'
op|'='
name|'GlanceClient'
op|'('
name|'FLAGS'
op|'.'
name|'glance_host'
op|','
name|'FLAGS'
op|'.'
name|'glance_port'
op|')'
newline|'\n'
name|'return'
op|'('
name|'glance_client'
op|','
name|'int'
op|'('
name|'image_href'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
op|'('
name|'image_id'
op|','
name|'host'
op|','
name|'port'
op|')'
op|'='
name|'_parse_image_ref'
op|'('
name|'image_href'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InvalidImageRef'
op|'('
name|'image_href'
op|'='
name|'image_href'
op|')'
newline|'\n'
dedent|''
name|'glance_client'
op|'='
name|'GlanceClient'
op|'('
name|'host'
op|','
name|'port'
op|')'
newline|'\n'
name|'return'
op|'('
name|'glance_client'
op|','
name|'image_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_image_service
dedent|''
name|'def'
name|'get_image_service'
op|'('
name|'image_href'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get the proper image_service and id for the given image_href.\n\n    The image_href param can be an href of the form\n    http://myglanceserver:9292/images/42, or just an int such as 42. If the\n    image_href is an int, then the default image service is returned.\n\n    :param image_href: image ref/id for an image\n    :returns: a tuple of the form (image_service, image_id)\n\n    """'
newline|'\n'
name|'print'
string|'"******** XX"'
newline|'\n'
name|'image_href'
op|'='
name|'image_href'
name|'or'
number|'0'
newline|'\n'
name|'if'
name|'str'
op|'('
name|'image_href'
op|')'
op|'.'
name|'isdigit'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'('
name|'get_default_image_service'
op|'('
op|')'
op|','
name|'int'
op|'('
name|'image_href'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'print'
string|'"******** X"'
newline|'\n'
op|'('
name|'glance_client'
op|','
name|'image_id'
op|')'
op|'='
name|'get_glance_client'
op|'('
name|'image_href'
op|')'
newline|'\n'
name|'image_service'
op|'='
name|'nova'
op|'.'
name|'image'
op|'.'
name|'glance'
op|'.'
name|'GlanceImageService'
op|'('
name|'glance_client'
op|')'
newline|'\n'
name|'return'
op|'('
name|'image_service'
op|','
name|'image_id'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
