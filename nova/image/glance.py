begin_unit
comment|'# Copyright 2010 OpenStack Foundation'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Implementation of an image service that uses Glance as the backend."""'
newline|'\n'
nl|'\n'
name|'from'
name|'__future__'
name|'import'
name|'absolute_import'
newline|'\n'
nl|'\n'
name|'import'
name|'copy'
newline|'\n'
name|'import'
name|'itertools'
newline|'\n'
name|'import'
name|'random'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'import'
name|'glanceclient'
newline|'\n'
name|'import'
name|'glanceclient'
op|'.'
name|'exc'
newline|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'oslo_log'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'oslo_serialization'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'oslo_service'
name|'import'
name|'sslutils'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'excutils'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'netutils'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'timeutils'
newline|'\n'
name|'import'
name|'six'
newline|'\n'
name|'from'
name|'six'
op|'.'
name|'moves'
name|'import'
name|'range'
newline|'\n'
name|'import'
name|'six'
op|'.'
name|'moves'
op|'.'
name|'urllib'
op|'.'
name|'parse'
name|'as'
name|'urlparse'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'i18n'
name|'import'
name|'_LE'
op|','
name|'_LI'
op|','
name|'_LW'
newline|'\n'
name|'import'
name|'nova'
op|'.'
name|'image'
op|'.'
name|'download'
name|'as'
name|'image_xfers'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|glance_opts
name|'glance_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'host'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'$my_ip'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Default glance hostname or IP address'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'port'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'9292'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Default glance port'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'protocol'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'http'"
op|','
nl|'\n'
DECL|variable|choices
name|'choices'
op|'='
op|'('
string|"'http'"
op|','
string|"'https'"
op|')'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Default protocol to use when connecting to glance. '"
nl|'\n'
string|"'Set to https for SSL.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'ListOpt'
op|'('
string|"'api_servers'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'A list of the glance api servers available to nova. '"
nl|'\n'
string|"'Prefix with https:// for ssl-based glance api servers. '"
nl|'\n'
string|"'([hostname|ip]:port)'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
string|"'api_insecure'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'False'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Allow to perform insecure SSL (https) requests to '"
nl|'\n'
string|"'glance'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'num_retries'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'0'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Number of retries when uploading / downloading an image '"
nl|'\n'
string|"'to / from glance.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'ListOpt'
op|'('
string|"'allowed_direct_url_schemes'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
op|'['
op|']'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'A list of url scheme that can be downloaded directly '"
nl|'\n'
string|"'via the direct_url.  Currently supported schemes: '"
nl|'\n'
string|"'[file].'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'register_opts'
op|'('
name|'glance_opts'
op|','
string|"'glance'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'auth_strategy'"
op|','
string|"'nova.api.auth'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'my_ip'"
op|','
string|"'nova.netconf'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|generate_glance_url
name|'def'
name|'generate_glance_url'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Generate the URL to glance."""'
newline|'\n'
name|'glance_host'
op|'='
name|'CONF'
op|'.'
name|'glance'
op|'.'
name|'host'
newline|'\n'
name|'if'
name|'netutils'
op|'.'
name|'is_valid_ipv6'
op|'('
name|'glance_host'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'glance_host'
op|'='
string|"'[%s]'"
op|'%'
name|'glance_host'
newline|'\n'
dedent|''
name|'return'
string|'"%s://%s:%d"'
op|'%'
op|'('
name|'CONF'
op|'.'
name|'glance'
op|'.'
name|'protocol'
op|','
name|'glance_host'
op|','
nl|'\n'
name|'CONF'
op|'.'
name|'glance'
op|'.'
name|'port'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|generate_image_url
dedent|''
name|'def'
name|'generate_image_url'
op|'('
name|'image_ref'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Generate an image URL from an image_ref."""'
newline|'\n'
name|'return'
string|'"%s/images/%s"'
op|'%'
op|'('
name|'generate_glance_url'
op|'('
op|')'
op|','
name|'image_ref'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_parse_image_ref
dedent|''
name|'def'
name|'_parse_image_ref'
op|'('
name|'image_href'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Parse an image href into composite parts.\n\n    :param image_href: href of an image\n    :returns: a tuple of the form (image_id, host, port)\n    :raises ValueError\n\n    """'
newline|'\n'
name|'o'
op|'='
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'image_href'
op|')'
newline|'\n'
name|'port'
op|'='
name|'o'
op|'.'
name|'port'
name|'or'
number|'80'
newline|'\n'
name|'host'
op|'='
name|'o'
op|'.'
name|'netloc'
op|'.'
name|'rsplit'
op|'('
string|"':'"
op|','
number|'1'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'image_id'
op|'='
name|'o'
op|'.'
name|'path'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'use_ssl'
op|'='
op|'('
name|'o'
op|'.'
name|'scheme'
op|'=='
string|"'https'"
op|')'
newline|'\n'
name|'return'
op|'('
name|'image_id'
op|','
name|'host'
op|','
name|'port'
op|','
name|'use_ssl'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|generate_identity_headers
dedent|''
name|'def'
name|'generate_identity_headers'
op|'('
name|'context'
op|','
name|'status'
op|'='
string|"'Confirmed'"
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'{'
nl|'\n'
string|"'X-Auth-Token'"
op|':'
name|'getattr'
op|'('
name|'context'
op|','
string|"'auth_token'"
op|','
name|'None'
op|')'
op|','
nl|'\n'
string|"'X-User-Id'"
op|':'
name|'getattr'
op|'('
name|'context'
op|','
string|"'user'"
op|','
name|'None'
op|')'
op|','
nl|'\n'
string|"'X-Tenant-Id'"
op|':'
name|'getattr'
op|'('
name|'context'
op|','
string|"'tenant'"
op|','
name|'None'
op|')'
op|','
nl|'\n'
string|"'X-Roles'"
op|':'
string|"','"
op|'.'
name|'join'
op|'('
name|'context'
op|'.'
name|'roles'
op|')'
op|','
nl|'\n'
string|"'X-Identity-Status'"
op|':'
name|'status'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_create_glance_client
dedent|''
name|'def'
name|'_create_glance_client'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'port'
op|','
name|'use_ssl'
op|','
name|'version'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Instantiate a new glanceclient.Client object."""'
newline|'\n'
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'use_ssl'
op|':'
newline|'\n'
indent|'        '
name|'scheme'
op|'='
string|"'https'"
newline|'\n'
comment|'# https specific params'
nl|'\n'
name|'params'
op|'['
string|"'insecure'"
op|']'
op|'='
name|'CONF'
op|'.'
name|'glance'
op|'.'
name|'api_insecure'
newline|'\n'
name|'params'
op|'['
string|"'ssl_compression'"
op|']'
op|'='
name|'False'
newline|'\n'
name|'sslutils'
op|'.'
name|'is_enabled'
op|'('
name|'CONF'
op|')'
newline|'\n'
name|'if'
name|'CONF'
op|'.'
name|'ssl'
op|'.'
name|'cert_file'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'cert_file'"
op|']'
op|'='
name|'CONF'
op|'.'
name|'ssl'
op|'.'
name|'cert_file'
newline|'\n'
dedent|''
name|'if'
name|'CONF'
op|'.'
name|'ssl'
op|'.'
name|'key_file'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'key_file'"
op|']'
op|'='
name|'CONF'
op|'.'
name|'ssl'
op|'.'
name|'key_file'
newline|'\n'
dedent|''
name|'if'
name|'CONF'
op|'.'
name|'ssl'
op|'.'
name|'ca_file'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'cacert'"
op|']'
op|'='
name|'CONF'
op|'.'
name|'ssl'
op|'.'
name|'ca_file'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'scheme'
op|'='
string|"'http'"
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'CONF'
op|'.'
name|'auth_strategy'
op|'=='
string|"'keystone'"
op|':'
newline|'\n'
comment|'# NOTE(isethi): Glanceclient <= 0.9.0.49 accepts only'
nl|'\n'
comment|"# keyword 'token', but later versions accept both the"
nl|'\n'
comment|"# header 'X-Auth-Token' and 'token'"
nl|'\n'
indent|'        '
name|'params'
op|'['
string|"'token'"
op|']'
op|'='
name|'context'
op|'.'
name|'auth_token'
newline|'\n'
name|'params'
op|'['
string|"'identity_headers'"
op|']'
op|'='
name|'generate_identity_headers'
op|'('
name|'context'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'netutils'
op|'.'
name|'is_valid_ipv6'
op|'('
name|'host'
op|')'
op|':'
newline|'\n'
comment|"# if so, it is ipv6 address, need to wrap it with '[]'"
nl|'\n'
indent|'        '
name|'host'
op|'='
string|"'[%s]'"
op|'%'
name|'host'
newline|'\n'
dedent|''
name|'endpoint'
op|'='
string|"'%s://%s:%s'"
op|'%'
op|'('
name|'scheme'
op|','
name|'host'
op|','
name|'port'
op|')'
newline|'\n'
name|'return'
name|'glanceclient'
op|'.'
name|'Client'
op|'('
name|'str'
op|'('
name|'version'
op|')'
op|','
name|'endpoint'
op|','
op|'**'
name|'params'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_api_servers
dedent|''
name|'def'
name|'get_api_servers'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Shuffle a list of CONF.glance.api_servers and return an iterator\n    that will cycle through the list, looping around to the beginning\n    if necessary.\n    """'
newline|'\n'
name|'api_servers'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'configured_servers'
op|'='
op|'('
op|'['
string|"'%s:%s'"
op|'%'
op|'('
name|'CONF'
op|'.'
name|'glance'
op|'.'
name|'host'
op|','
name|'CONF'
op|'.'
name|'glance'
op|'.'
name|'port'
op|')'
op|']'
nl|'\n'
name|'if'
name|'CONF'
op|'.'
name|'glance'
op|'.'
name|'api_servers'
name|'is'
name|'None'
nl|'\n'
name|'else'
name|'CONF'
op|'.'
name|'glance'
op|'.'
name|'api_servers'
op|')'
newline|'\n'
name|'for'
name|'api_server'
name|'in'
name|'configured_servers'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'//'"
name|'not'
name|'in'
name|'api_server'
op|':'
newline|'\n'
indent|'            '
name|'api_server'
op|'='
string|"'http://'"
op|'+'
name|'api_server'
newline|'\n'
dedent|''
name|'o'
op|'='
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'api_server'
op|')'
newline|'\n'
name|'port'
op|'='
name|'o'
op|'.'
name|'port'
name|'or'
number|'80'
newline|'\n'
name|'host'
op|'='
name|'o'
op|'.'
name|'netloc'
op|'.'
name|'rsplit'
op|'('
string|"':'"
op|','
number|'1'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'host'
op|'['
number|'0'
op|']'
op|'=='
string|"'['"
name|'and'
name|'host'
op|'['
op|'-'
number|'1'
op|']'
op|'=='
string|"']'"
op|':'
newline|'\n'
indent|'            '
name|'host'
op|'='
name|'host'
op|'['
number|'1'
op|':'
op|'-'
number|'1'
op|']'
newline|'\n'
dedent|''
name|'use_ssl'
op|'='
op|'('
name|'o'
op|'.'
name|'scheme'
op|'=='
string|"'https'"
op|')'
newline|'\n'
name|'api_servers'
op|'.'
name|'append'
op|'('
op|'('
name|'host'
op|','
name|'port'
op|','
name|'use_ssl'
op|')'
op|')'
newline|'\n'
dedent|''
name|'random'
op|'.'
name|'shuffle'
op|'('
name|'api_servers'
op|')'
newline|'\n'
name|'return'
name|'itertools'
op|'.'
name|'cycle'
op|'('
name|'api_servers'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|GlanceClientWrapper
dedent|''
name|'class'
name|'GlanceClientWrapper'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Glance client wrapper class that implements retries."""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'context'
op|'='
name|'None'
op|','
name|'host'
op|'='
name|'None'
op|','
name|'port'
op|'='
name|'None'
op|','
name|'use_ssl'
op|'='
name|'False'
op|','
nl|'\n'
name|'version'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'host'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'client'
op|'='
name|'self'
op|'.'
name|'_create_static_client'
op|'('
name|'context'
op|','
nl|'\n'
name|'host'
op|','
name|'port'
op|','
nl|'\n'
name|'use_ssl'
op|','
name|'version'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'client'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'api_servers'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_create_static_client
dedent|''
name|'def'
name|'_create_static_client'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'host'
op|','
name|'port'
op|','
name|'use_ssl'
op|','
name|'version'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a client that we\'ll use for every call."""'
newline|'\n'
name|'self'
op|'.'
name|'host'
op|'='
name|'host'
newline|'\n'
name|'self'
op|'.'
name|'port'
op|'='
name|'port'
newline|'\n'
name|'self'
op|'.'
name|'use_ssl'
op|'='
name|'use_ssl'
newline|'\n'
name|'self'
op|'.'
name|'version'
op|'='
name|'version'
newline|'\n'
name|'return'
name|'_create_glance_client'
op|'('
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'host'
op|','
name|'self'
op|'.'
name|'port'
op|','
nl|'\n'
name|'self'
op|'.'
name|'use_ssl'
op|','
name|'self'
op|'.'
name|'version'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_onetime_client
dedent|''
name|'def'
name|'_create_onetime_client'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'version'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a client that will be used for one call."""'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'api_servers'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'api_servers'
op|'='
name|'get_api_servers'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'host'
op|','
name|'self'
op|'.'
name|'port'
op|','
name|'self'
op|'.'
name|'use_ssl'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'api_servers'
op|')'
newline|'\n'
name|'return'
name|'_create_glance_client'
op|'('
name|'context'
op|','
nl|'\n'
name|'self'
op|'.'
name|'host'
op|','
name|'self'
op|'.'
name|'port'
op|','
nl|'\n'
name|'self'
op|'.'
name|'use_ssl'
op|','
name|'version'
op|')'
newline|'\n'
nl|'\n'
DECL|member|call
dedent|''
name|'def'
name|'call'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'version'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Call a glance client method.  If we get a connection error,\n        retry the request according to CONF.glance.num_retries.\n        """'
newline|'\n'
name|'retry_excs'
op|'='
op|'('
name|'glanceclient'
op|'.'
name|'exc'
op|'.'
name|'ServiceUnavailable'
op|','
nl|'\n'
name|'glanceclient'
op|'.'
name|'exc'
op|'.'
name|'InvalidEndpoint'
op|','
nl|'\n'
name|'glanceclient'
op|'.'
name|'exc'
op|'.'
name|'CommunicationError'
op|')'
newline|'\n'
name|'retries'
op|'='
name|'CONF'
op|'.'
name|'glance'
op|'.'
name|'num_retries'
newline|'\n'
name|'if'
name|'retries'
op|'<'
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_LW'
op|'('
string|'"Treating negative config value (%(retries)s) for "'
nl|'\n'
string|'"\'glance.num_retries\' as 0."'
op|')'
op|','
nl|'\n'
op|'{'
string|"'retries'"
op|':'
name|'retries'
op|'}'
op|')'
newline|'\n'
name|'retries'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'num_attempts'
op|'='
name|'retries'
op|'+'
number|'1'
newline|'\n'
nl|'\n'
name|'for'
name|'attempt'
name|'in'
name|'range'
op|'('
number|'1'
op|','
name|'num_attempts'
op|'+'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'client'
op|'='
name|'self'
op|'.'
name|'client'
name|'or'
name|'self'
op|'.'
name|'_create_onetime_client'
op|'('
name|'context'
op|','
nl|'\n'
name|'version'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'getattr'
op|'('
name|'client'
op|'.'
name|'images'
op|','
name|'method'
op|')'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'retry_excs'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'host'
op|'='
name|'self'
op|'.'
name|'host'
newline|'\n'
name|'port'
op|'='
name|'self'
op|'.'
name|'port'
newline|'\n'
nl|'\n'
name|'if'
name|'attempt'
op|'<'
name|'num_attempts'
op|':'
newline|'\n'
indent|'                    '
name|'extra'
op|'='
string|'"retrying"'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'extra'
op|'='
string|"'done trying'"
newline|'\n'
nl|'\n'
dedent|''
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_LE'
op|'('
string|'"Error contacting glance server "'
nl|'\n'
string|'"\'%(host)s:%(port)s\' for \'%(method)s\', "'
nl|'\n'
string|'"%(extra)s."'
op|')'
op|','
nl|'\n'
op|'{'
string|"'host'"
op|':'
name|'host'
op|','
string|"'port'"
op|':'
name|'port'
op|','
nl|'\n'
string|"'method'"
op|':'
name|'method'
op|','
string|"'extra'"
op|':'
name|'extra'
op|'}'
op|')'
newline|'\n'
name|'if'
name|'attempt'
op|'=='
name|'num_attempts'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'exception'
op|'.'
name|'GlanceConnectionFailed'
op|'('
nl|'\n'
name|'host'
op|'='
name|'host'
op|','
name|'port'
op|'='
name|'port'
op|','
name|'reason'
op|'='
name|'six'
op|'.'
name|'text_type'
op|'('
name|'e'
op|')'
op|')'
newline|'\n'
dedent|''
name|'time'
op|'.'
name|'sleep'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|GlanceImageService
dedent|''
dedent|''
dedent|''
dedent|''
name|'class'
name|'GlanceImageService'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Provides storage and retrieval of disk image objects within Glance."""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'client'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_client'
op|'='
name|'client'
name|'or'
name|'GlanceClientWrapper'
op|'('
op|')'
newline|'\n'
comment|'# NOTE(jbresnah) build the table of download handlers at the beginning'
nl|'\n'
comment|'# so that operators can catch errors at load time rather than whenever'
nl|'\n'
comment|'# a user attempts to use a module.  Note this cannot be done in glance'
nl|'\n'
comment|'# space when this python module is loaded because the download module'
nl|'\n'
comment|'# may require configuration options to be parsed.'
nl|'\n'
name|'self'
op|'.'
name|'_download_handlers'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'download_modules'
op|'='
name|'image_xfers'
op|'.'
name|'load_transfer_modules'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'scheme'
op|','
name|'mod'
name|'in'
name|'six'
op|'.'
name|'iteritems'
op|'('
name|'download_modules'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'scheme'
name|'not'
name|'in'
name|'CONF'
op|'.'
name|'glance'
op|'.'
name|'allowed_direct_url_schemes'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_download_handlers'
op|'['
name|'scheme'
op|']'
op|'='
name|'mod'
op|'.'
name|'get_download_handler'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'error'
op|'('
name|'_LE'
op|'('
string|"'When loading the module %(module_str)s the '"
nl|'\n'
string|"'following error occurred: %(ex)s'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'module_str'"
op|':'
name|'str'
op|'('
name|'mod'
op|')'
op|','
string|"'ex'"
op|':'
name|'ex'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|detail
dedent|''
dedent|''
dedent|''
name|'def'
name|'detail'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Calls out to Glance for a list of detailed image information."""'
newline|'\n'
name|'params'
op|'='
name|'_extract_query_params'
op|'('
name|'kwargs'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'images'
op|'='
name|'self'
op|'.'
name|'_client'
op|'.'
name|'call'
op|'('
name|'context'
op|','
number|'1'
op|','
string|"'list'"
op|','
op|'**'
name|'params'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'_reraise_translated_exception'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'_images'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'image'
name|'in'
name|'images'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'_is_image_available'
op|'('
name|'context'
op|','
name|'image'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'_images'
op|'.'
name|'append'
op|'('
name|'_translate_from_glance'
op|'('
name|'image'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'_images'
newline|'\n'
nl|'\n'
DECL|member|show
dedent|''
name|'def'
name|'show'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_id'
op|','
name|'include_locations'
op|'='
name|'False'
op|','
nl|'\n'
name|'show_deleted'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns a dict with image data for the given opaque image id.\n\n        :param context: The context object to pass to image client\n        :param image_id: The UUID of the image\n        :param include_locations: (Optional) include locations in the returned\n                                  dict of information if the image service API\n                                  supports it. If the image service API does\n                                  not support the locations attribute, it will\n                                  still be included in the returned dict, as an\n                                  empty list.\n        :param show_deleted: (Optional) show the image even the status of\n                             image is deleted.\n        """'
newline|'\n'
name|'version'
op|'='
number|'1'
newline|'\n'
name|'if'
name|'include_locations'
op|':'
newline|'\n'
indent|'            '
name|'version'
op|'='
number|'2'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'image'
op|'='
name|'self'
op|'.'
name|'_client'
op|'.'
name|'call'
op|'('
name|'context'
op|','
name|'version'
op|','
string|"'get'"
op|','
name|'image_id'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'_reraise_translated_image_exception'
op|'('
name|'image_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'show_deleted'
name|'and'
name|'getattr'
op|'('
name|'image'
op|','
string|"'deleted'"
op|','
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
name|'image_id'
op|'='
name|'image_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'_is_image_available'
op|'('
name|'context'
op|','
name|'image'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
name|'image_id'
op|'='
name|'image_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'image'
op|'='
name|'_translate_from_glance'
op|'('
name|'image'
op|','
nl|'\n'
name|'include_locations'
op|'='
name|'include_locations'
op|')'
newline|'\n'
name|'if'
name|'include_locations'
op|':'
newline|'\n'
indent|'            '
name|'locations'
op|'='
name|'image'
op|'.'
name|'get'
op|'('
string|"'locations'"
op|','
name|'None'
op|')'
name|'or'
op|'['
op|']'
newline|'\n'
name|'du'
op|'='
name|'image'
op|'.'
name|'get'
op|'('
string|"'direct_url'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'du'
op|':'
newline|'\n'
indent|'                '
name|'locations'
op|'.'
name|'append'
op|'('
op|'{'
string|"'url'"
op|':'
name|'du'
op|','
string|"'metadata'"
op|':'
op|'{'
op|'}'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'image'
op|'['
string|"'locations'"
op|']'
op|'='
name|'locations'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'image'
newline|'\n'
nl|'\n'
DECL|member|_get_transfer_module
dedent|''
name|'def'
name|'_get_transfer_module'
op|'('
name|'self'
op|','
name|'scheme'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_download_handlers'
op|'['
name|'scheme'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'error'
op|'('
name|'_LE'
op|'('
string|'"Failed to instantiate the download handler "'
nl|'\n'
string|'"for %(scheme)s"'
op|')'
op|','
op|'{'
string|"'scheme'"
op|':'
name|'scheme'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'return'
newline|'\n'
nl|'\n'
DECL|member|download
dedent|''
name|'def'
name|'download'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_id'
op|','
name|'data'
op|'='
name|'None'
op|','
name|'dst_path'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Calls out to Glance for data and writes data."""'
newline|'\n'
name|'if'
name|'CONF'
op|'.'
name|'glance'
op|'.'
name|'allowed_direct_url_schemes'
name|'and'
name|'dst_path'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'image'
op|'='
name|'self'
op|'.'
name|'show'
op|'('
name|'context'
op|','
name|'image_id'
op|','
name|'include_locations'
op|'='
name|'True'
op|')'
newline|'\n'
name|'for'
name|'entry'
name|'in'
name|'image'
op|'.'
name|'get'
op|'('
string|"'locations'"
op|','
op|'['
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'loc_url'
op|'='
name|'entry'
op|'['
string|"'url'"
op|']'
newline|'\n'
name|'loc_meta'
op|'='
name|'entry'
op|'['
string|"'metadata'"
op|']'
newline|'\n'
name|'o'
op|'='
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'loc_url'
op|')'
newline|'\n'
name|'xfer_mod'
op|'='
name|'self'
op|'.'
name|'_get_transfer_module'
op|'('
name|'o'
op|'.'
name|'scheme'
op|')'
newline|'\n'
name|'if'
name|'xfer_mod'
op|':'
newline|'\n'
indent|'                    '
name|'try'
op|':'
newline|'\n'
indent|'                        '
name|'xfer_mod'
op|'.'
name|'download'
op|'('
name|'context'
op|','
name|'o'
op|','
name|'dst_path'
op|','
name|'loc_meta'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_LI'
op|'('
string|'"Successfully transferred "'
nl|'\n'
string|'"using %s"'
op|')'
op|','
name|'o'
op|'.'
name|'scheme'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'                        '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_LE'
op|'('
string|'"Download image error"'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'image_chunks'
op|'='
name|'self'
op|'.'
name|'_client'
op|'.'
name|'call'
op|'('
name|'context'
op|','
number|'1'
op|','
string|"'data'"
op|','
name|'image_id'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'_reraise_translated_image_exception'
op|'('
name|'image_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'close_file'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'data'
name|'is'
name|'None'
name|'and'
name|'dst_path'
op|':'
newline|'\n'
indent|'            '
name|'data'
op|'='
name|'open'
op|'('
name|'dst_path'
op|','
string|"'wb'"
op|')'
newline|'\n'
name|'close_file'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'data'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'image_chunks'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'chunk'
name|'in'
name|'image_chunks'
op|':'
newline|'\n'
indent|'                    '
name|'data'
op|'.'
name|'write'
op|'('
name|'chunk'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'excutils'
op|'.'
name|'save_and_reraise_exception'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'LOG'
op|'.'
name|'error'
op|'('
name|'_LE'
op|'('
string|'"Error writing to %(path)s: %(exception)s"'
op|')'
op|','
nl|'\n'
op|'{'
string|"'path'"
op|':'
name|'dst_path'
op|','
string|"'exception'"
op|':'
name|'ex'
op|'}'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'close_file'
op|':'
newline|'\n'
indent|'                    '
name|'data'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|create
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'create'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_meta'
op|','
name|'data'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Store the image data and return the new image object."""'
newline|'\n'
name|'sent_service_image_meta'
op|'='
name|'_translate_to_glance'
op|'('
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'sent_service_image_meta'
op|'['
string|"'data'"
op|']'
op|'='
name|'data'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'recv_service_image_meta'
op|'='
name|'self'
op|'.'
name|'_client'
op|'.'
name|'call'
op|'('
nl|'\n'
name|'context'
op|','
number|'1'
op|','
string|"'create'"
op|','
op|'**'
name|'sent_service_image_meta'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'glanceclient'
op|'.'
name|'exc'
op|'.'
name|'HTTPException'
op|':'
newline|'\n'
indent|'            '
name|'_reraise_translated_exception'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'_translate_from_glance'
op|'('
name|'recv_service_image_meta'
op|')'
newline|'\n'
nl|'\n'
DECL|member|update
dedent|''
name|'def'
name|'update'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_id'
op|','
name|'image_meta'
op|','
name|'data'
op|'='
name|'None'
op|','
nl|'\n'
name|'purge_props'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Modify the given image with the new data."""'
newline|'\n'
name|'image_meta'
op|'='
name|'_translate_to_glance'
op|'('
name|'image_meta'
op|')'
newline|'\n'
name|'image_meta'
op|'['
string|"'purge_props'"
op|']'
op|'='
name|'purge_props'
newline|'\n'
comment|'# NOTE(bcwaldon): id is not an editable field, but it is likely to be'
nl|'\n'
comment|"# passed in by calling code. Let's be nice and ignore it."
nl|'\n'
name|'image_meta'
op|'.'
name|'pop'
op|'('
string|"'id'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'image_meta'
op|'['
string|"'data'"
op|']'
op|'='
name|'data'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'image_meta'
op|'='
name|'self'
op|'.'
name|'_client'
op|'.'
name|'call'
op|'('
name|'context'
op|','
number|'1'
op|','
string|"'update'"
op|','
nl|'\n'
name|'image_id'
op|','
op|'**'
name|'image_meta'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'_reraise_translated_image_exception'
op|'('
name|'image_id'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'_translate_from_glance'
op|'('
name|'image_meta'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete
dedent|''
dedent|''
name|'def'
name|'delete'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Delete the given image.\n\n        :raises: ImageNotFound if the image does not exist.\n        :raises: NotAuthorized if the user is not an owner.\n        :raises: ImageNotAuthorized if the user is not authorized.\n\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_client'
op|'.'
name|'call'
op|'('
name|'context'
op|','
number|'1'
op|','
string|"'delete'"
op|','
name|'image_id'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'glanceclient'
op|'.'
name|'exc'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
name|'image_id'
op|'='
name|'image_id'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'glanceclient'
op|'.'
name|'exc'
op|'.'
name|'HTTPForbidden'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ImageNotAuthorized'
op|'('
name|'image_id'
op|'='
name|'image_id'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_extract_query_params
dedent|''
dedent|''
name|'def'
name|'_extract_query_params'
op|'('
name|'params'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'_params'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'accepted_params'
op|'='
op|'('
string|"'filters'"
op|','
string|"'marker'"
op|','
string|"'limit'"
op|','
nl|'\n'
string|"'page_size'"
op|','
string|"'sort_key'"
op|','
string|"'sort_dir'"
op|')'
newline|'\n'
name|'for'
name|'param'
name|'in'
name|'accepted_params'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'params'
op|'.'
name|'get'
op|'('
name|'param'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'_params'
op|'['
name|'param'
op|']'
op|'='
name|'params'
op|'.'
name|'get'
op|'('
name|'param'
op|')'
newline|'\n'
nl|'\n'
comment|'# ensure filters is a dict'
nl|'\n'
dedent|''
dedent|''
name|'_params'
op|'.'
name|'setdefault'
op|'('
string|"'filters'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
comment|"# NOTE(vish): don't filter out private images"
nl|'\n'
name|'_params'
op|'['
string|"'filters'"
op|']'
op|'.'
name|'setdefault'
op|'('
string|"'is_public'"
op|','
string|"'none'"
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'_params'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_is_image_available
dedent|''
name|'def'
name|'_is_image_available'
op|'('
name|'context'
op|','
name|'image'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Check image availability.\n\n    This check is needed in case Nova and Glance are deployed\n    without authentication turned on.\n    """'
newline|'\n'
comment|'# The presence of an auth token implies this is an authenticated'
nl|'\n'
comment|'# request and we need not handle the noauth use-case.'
nl|'\n'
name|'if'
name|'hasattr'
op|'('
name|'context'
op|','
string|"'auth_token'"
op|')'
name|'and'
name|'context'
op|'.'
name|'auth_token'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|function|_is_image_public
dedent|''
name|'def'
name|'_is_image_public'
op|'('
name|'image'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(jaypipes) V2 Glance API replaced the is_public attribute'
nl|'\n'
comment|'# with a visibility attribute. We do this here to prevent the'
nl|'\n'
comment|'# glanceclient for a V2 image model from throwing an'
nl|'\n'
comment|'# exception from warlock when trying to access an is_public'
nl|'\n'
comment|'# attribute.'
nl|'\n'
indent|'        '
name|'if'
name|'hasattr'
op|'('
name|'image'
op|','
string|"'visibility'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'str'
op|'('
name|'image'
op|'.'
name|'visibility'
op|')'
op|'.'
name|'lower'
op|'('
op|')'
op|'=='
string|"'public'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'image'
op|'.'
name|'is_public'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'context'
op|'.'
name|'is_admin'
name|'or'
name|'_is_image_public'
op|'('
name|'image'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'properties'
op|'='
name|'image'
op|'.'
name|'properties'
newline|'\n'
nl|'\n'
name|'if'
name|'context'
op|'.'
name|'project_id'
name|'and'
op|'('
string|"'owner_id'"
name|'in'
name|'properties'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'str'
op|'('
name|'properties'
op|'['
string|"'owner_id'"
op|']'
op|')'
op|'=='
name|'str'
op|'('
name|'context'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'context'
op|'.'
name|'project_id'
name|'and'
op|'('
string|"'project_id'"
name|'in'
name|'properties'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'str'
op|'('
name|'properties'
op|'['
string|"'project_id'"
op|']'
op|')'
op|'=='
name|'str'
op|'('
name|'context'
op|'.'
name|'project_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'user_id'
op|'='
name|'properties'
op|'['
string|"'user_id'"
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'str'
op|'('
name|'user_id'
op|')'
op|'=='
name|'str'
op|'('
name|'context'
op|'.'
name|'user_id'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_translate_to_glance
dedent|''
name|'def'
name|'_translate_to_glance'
op|'('
name|'image_meta'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'image_meta'
op|'='
name|'_convert_to_string'
op|'('
name|'image_meta'
op|')'
newline|'\n'
name|'image_meta'
op|'='
name|'_remove_read_only'
op|'('
name|'image_meta'
op|')'
newline|'\n'
name|'return'
name|'image_meta'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_translate_from_glance
dedent|''
name|'def'
name|'_translate_from_glance'
op|'('
name|'image'
op|','
name|'include_locations'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'image_meta'
op|'='
name|'_extract_attributes'
op|'('
name|'image'
op|','
nl|'\n'
name|'include_locations'
op|'='
name|'include_locations'
op|')'
newline|'\n'
name|'image_meta'
op|'='
name|'_convert_timestamps_to_datetimes'
op|'('
name|'image_meta'
op|')'
newline|'\n'
name|'image_meta'
op|'='
name|'_convert_from_string'
op|'('
name|'image_meta'
op|')'
newline|'\n'
name|'return'
name|'image_meta'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_convert_timestamps_to_datetimes
dedent|''
name|'def'
name|'_convert_timestamps_to_datetimes'
op|'('
name|'image_meta'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Returns image with timestamp fields converted to datetime objects."""'
newline|'\n'
name|'for'
name|'attr'
name|'in'
op|'['
string|"'created_at'"
op|','
string|"'updated_at'"
op|','
string|"'deleted_at'"
op|']'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'image_meta'
op|'.'
name|'get'
op|'('
name|'attr'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'image_meta'
op|'['
name|'attr'
op|']'
op|'='
name|'timeutils'
op|'.'
name|'parse_isotime'
op|'('
name|'image_meta'
op|'['
name|'attr'
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'image_meta'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# NOTE(bcwaldon): used to store non-string data in glance metadata'
nl|'\n'
DECL|function|_json_loads
dedent|''
name|'def'
name|'_json_loads'
op|'('
name|'properties'
op|','
name|'attr'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'prop'
op|'='
name|'properties'
op|'['
name|'attr'
op|']'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'prop'
op|','
name|'six'
op|'.'
name|'string_types'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'properties'
op|'['
name|'attr'
op|']'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'prop'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_json_dumps
dedent|''
dedent|''
name|'def'
name|'_json_dumps'
op|'('
name|'properties'
op|','
name|'attr'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'prop'
op|'='
name|'properties'
op|'['
name|'attr'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'prop'
op|','
name|'six'
op|'.'
name|'string_types'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'properties'
op|'['
name|'attr'
op|']'
op|'='
name|'jsonutils'
op|'.'
name|'dumps'
op|'('
name|'prop'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|_CONVERT_PROPS
dedent|''
dedent|''
name|'_CONVERT_PROPS'
op|'='
op|'('
string|"'block_device_mapping'"
op|','
string|"'mappings'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_convert
name|'def'
name|'_convert'
op|'('
name|'method'
op|','
name|'metadata'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'metadata'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'properties'
op|'='
name|'metadata'
op|'.'
name|'get'
op|'('
string|"'properties'"
op|')'
newline|'\n'
name|'if'
name|'properties'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'attr'
name|'in'
name|'_CONVERT_PROPS'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'attr'
name|'in'
name|'properties'
op|':'
newline|'\n'
indent|'                '
name|'method'
op|'('
name|'properties'
op|','
name|'attr'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'metadata'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_convert_from_string
dedent|''
name|'def'
name|'_convert_from_string'
op|'('
name|'metadata'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_convert'
op|'('
name|'_json_loads'
op|','
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_convert_to_string
dedent|''
name|'def'
name|'_convert_to_string'
op|'('
name|'metadata'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'_convert'
op|'('
name|'_json_dumps'
op|','
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_extract_attributes
dedent|''
name|'def'
name|'_extract_attributes'
op|'('
name|'image'
op|','
name|'include_locations'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(hdd): If a key is not found, base.Resource.__getattr__() may perform'
nl|'\n'
comment|'# a get(), resulting in a useless request back to glance. This list is'
nl|'\n'
comment|'# therefore sorted, with dependent attributes as the end'
nl|'\n'
comment|"# 'deleted_at' depends on 'deleted'"
nl|'\n'
comment|"# 'checksum' depends on 'status' == 'active'"
nl|'\n'
indent|'    '
name|'IMAGE_ATTRIBUTES'
op|'='
op|'['
string|"'size'"
op|','
string|"'disk_format'"
op|','
string|"'owner'"
op|','
nl|'\n'
string|"'container_format'"
op|','
string|"'status'"
op|','
string|"'id'"
op|','
nl|'\n'
string|"'name'"
op|','
string|"'created_at'"
op|','
string|"'updated_at'"
op|','
nl|'\n'
string|"'deleted'"
op|','
string|"'deleted_at'"
op|','
string|"'checksum'"
op|','
nl|'\n'
string|"'min_disk'"
op|','
string|"'min_ram'"
op|','
string|"'is_public'"
op|','
nl|'\n'
string|"'direct_url'"
op|','
string|"'locations'"
op|']'
newline|'\n'
nl|'\n'
name|'queued'
op|'='
name|'getattr'
op|'('
name|'image'
op|','
string|"'status'"
op|')'
op|'=='
string|"'queued'"
newline|'\n'
name|'queued_exclude_attrs'
op|'='
op|'['
string|"'disk_format'"
op|','
string|"'container_format'"
op|']'
newline|'\n'
name|'include_locations_attrs'
op|'='
op|'['
string|"'direct_url'"
op|','
string|"'locations'"
op|']'
newline|'\n'
name|'output'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'for'
name|'attr'
name|'in'
name|'IMAGE_ATTRIBUTES'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'attr'
op|'=='
string|"'deleted_at'"
name|'and'
name|'not'
name|'output'
op|'['
string|"'deleted'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'output'
op|'['
name|'attr'
op|']'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'elif'
name|'attr'
op|'=='
string|"'checksum'"
name|'and'
name|'output'
op|'['
string|"'status'"
op|']'
op|'!='
string|"'active'"
op|':'
newline|'\n'
indent|'            '
name|'output'
op|'['
name|'attr'
op|']'
op|'='
name|'None'
newline|'\n'
comment|"# image may not have 'name' attr"
nl|'\n'
dedent|''
name|'elif'
name|'attr'
op|'=='
string|"'name'"
op|':'
newline|'\n'
indent|'            '
name|'output'
op|'['
name|'attr'
op|']'
op|'='
name|'getattr'
op|'('
name|'image'
op|','
name|'attr'
op|','
name|'None'
op|')'
newline|'\n'
comment|"# NOTE(liusheng): queued image may not have these attributes and 'name'"
nl|'\n'
dedent|''
name|'elif'
name|'queued'
name|'and'
name|'attr'
name|'in'
name|'queued_exclude_attrs'
op|':'
newline|'\n'
indent|'            '
name|'output'
op|'['
name|'attr'
op|']'
op|'='
name|'getattr'
op|'('
name|'image'
op|','
name|'attr'
op|','
name|'None'
op|')'
newline|'\n'
comment|'# NOTE(mriedem): Only get location attrs if including locations.'
nl|'\n'
dedent|''
name|'elif'
name|'attr'
name|'in'
name|'include_locations_attrs'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'include_locations'
op|':'
newline|'\n'
indent|'                '
name|'output'
op|'['
name|'attr'
op|']'
op|'='
name|'getattr'
op|'('
name|'image'
op|','
name|'attr'
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# NOTE(xarses): Anything that is caught with the default value'
nl|'\n'
comment|'# will result in a additional lookup to glance for said attr.'
nl|'\n'
comment|'# Notable attributes that could have this issue:'
nl|'\n'
comment|'# disk_format, container_format, name, deleted, checksum'
nl|'\n'
indent|'            '
name|'output'
op|'['
name|'attr'
op|']'
op|'='
name|'getattr'
op|'('
name|'image'
op|','
name|'attr'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'output'
op|'['
string|"'properties'"
op|']'
op|'='
name|'getattr'
op|'('
name|'image'
op|','
string|"'properties'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'output'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_remove_read_only
dedent|''
name|'def'
name|'_remove_read_only'
op|'('
name|'image_meta'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'IMAGE_ATTRIBUTES'
op|'='
op|'['
string|"'status'"
op|','
string|"'updated_at'"
op|','
string|"'created_at'"
op|','
string|"'deleted_at'"
op|']'
newline|'\n'
name|'output'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'image_meta'
op|')'
newline|'\n'
name|'for'
name|'attr'
name|'in'
name|'IMAGE_ATTRIBUTES'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'attr'
name|'in'
name|'output'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'output'
op|'['
name|'attr'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'output'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_reraise_translated_image_exception
dedent|''
name|'def'
name|'_reraise_translated_image_exception'
op|'('
name|'image_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Transform the exception for the image but keep its traceback intact."""'
newline|'\n'
name|'exc_type'
op|','
name|'exc_value'
op|','
name|'exc_trace'
op|'='
name|'sys'
op|'.'
name|'exc_info'
op|'('
op|')'
newline|'\n'
name|'new_exc'
op|'='
name|'_translate_image_exception'
op|'('
name|'image_id'
op|','
name|'exc_value'
op|')'
newline|'\n'
name|'six'
op|'.'
name|'reraise'
op|'('
name|'new_exc'
op|','
name|'None'
op|','
name|'exc_trace'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_reraise_translated_exception
dedent|''
name|'def'
name|'_reraise_translated_exception'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Transform the exception but keep its traceback intact."""'
newline|'\n'
name|'exc_type'
op|','
name|'exc_value'
op|','
name|'exc_trace'
op|'='
name|'sys'
op|'.'
name|'exc_info'
op|'('
op|')'
newline|'\n'
name|'new_exc'
op|'='
name|'_translate_plain_exception'
op|'('
name|'exc_value'
op|')'
newline|'\n'
name|'six'
op|'.'
name|'reraise'
op|'('
name|'new_exc'
op|','
name|'None'
op|','
name|'exc_trace'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_translate_image_exception
dedent|''
name|'def'
name|'_translate_image_exception'
op|'('
name|'image_id'
op|','
name|'exc_value'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'isinstance'
op|'('
name|'exc_value'
op|','
op|'('
name|'glanceclient'
op|'.'
name|'exc'
op|'.'
name|'Forbidden'
op|','
nl|'\n'
name|'glanceclient'
op|'.'
name|'exc'
op|'.'
name|'Unauthorized'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'exception'
op|'.'
name|'ImageNotAuthorized'
op|'('
name|'image_id'
op|'='
name|'image_id'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'isinstance'
op|'('
name|'exc_value'
op|','
name|'glanceclient'
op|'.'
name|'exc'
op|'.'
name|'NotFound'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
name|'image_id'
op|'='
name|'image_id'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'isinstance'
op|'('
name|'exc_value'
op|','
name|'glanceclient'
op|'.'
name|'exc'
op|'.'
name|'BadRequest'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'exception'
op|'.'
name|'Invalid'
op|'('
name|'six'
op|'.'
name|'text_type'
op|'('
name|'exc_value'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'exc_value'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_translate_plain_exception
dedent|''
name|'def'
name|'_translate_plain_exception'
op|'('
name|'exc_value'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'isinstance'
op|'('
name|'exc_value'
op|','
op|'('
name|'glanceclient'
op|'.'
name|'exc'
op|'.'
name|'Forbidden'
op|','
nl|'\n'
name|'glanceclient'
op|'.'
name|'exc'
op|'.'
name|'Unauthorized'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'exception'
op|'.'
name|'Forbidden'
op|'('
name|'six'
op|'.'
name|'text_type'
op|'('
name|'exc_value'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'isinstance'
op|'('
name|'exc_value'
op|','
name|'glanceclient'
op|'.'
name|'exc'
op|'.'
name|'NotFound'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'exception'
op|'.'
name|'NotFound'
op|'('
name|'six'
op|'.'
name|'text_type'
op|'('
name|'exc_value'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'isinstance'
op|'('
name|'exc_value'
op|','
name|'glanceclient'
op|'.'
name|'exc'
op|'.'
name|'BadRequest'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'exception'
op|'.'
name|'Invalid'
op|'('
name|'six'
op|'.'
name|'text_type'
op|'('
name|'exc_value'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'exc_value'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_remote_image_service
dedent|''
name|'def'
name|'get_remote_image_service'
op|'('
name|'context'
op|','
name|'image_href'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create an image_service and parse the id from the given image_href.\n\n    The image_href param can be an href of the form\n    \'http://example.com:9292/v1/images/b8b2c6f7-7345-4e2f-afa2-eedaba9cbbe3\',\n    or just an id such as \'b8b2c6f7-7345-4e2f-afa2-eedaba9cbbe3\'. If the\n    image_href is a standalone id, then the default image service is returned.\n\n    :param image_href: href that describes the location of an image\n    :returns: a tuple of the form (image_service, image_id)\n\n    """'
newline|'\n'
comment|"# NOTE(bcwaldon): If image_href doesn't look like a URI, assume its a"
nl|'\n'
comment|'# standalone image ID'
nl|'\n'
name|'if'
string|"'/'"
name|'not'
name|'in'
name|'str'
op|'('
name|'image_href'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_service'
op|'='
name|'get_default_image_service'
op|'('
op|')'
newline|'\n'
name|'return'
name|'image_service'
op|','
name|'image_href'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
op|'('
name|'image_id'
op|','
name|'glance_host'
op|','
name|'glance_port'
op|','
name|'use_ssl'
op|')'
op|'='
name|'_parse_image_ref'
op|'('
name|'image_href'
op|')'
newline|'\n'
name|'glance_client'
op|'='
name|'GlanceClientWrapper'
op|'('
name|'context'
op|'='
name|'context'
op|','
nl|'\n'
name|'host'
op|'='
name|'glance_host'
op|','
name|'port'
op|'='
name|'glance_port'
op|','
name|'use_ssl'
op|'='
name|'use_ssl'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'InvalidImageRef'
op|'('
name|'image_href'
op|'='
name|'image_href'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'image_service'
op|'='
name|'GlanceImageService'
op|'('
name|'client'
op|'='
name|'glance_client'
op|')'
newline|'\n'
name|'return'
name|'image_service'
op|','
name|'image_id'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_default_image_service
dedent|''
name|'def'
name|'get_default_image_service'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'GlanceImageService'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|UpdateGlanceImage
dedent|''
name|'class'
name|'UpdateGlanceImage'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_id'
op|','
name|'metadata'
op|','
name|'stream'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'context'
op|'='
name|'context'
newline|'\n'
name|'self'
op|'.'
name|'image_id'
op|'='
name|'image_id'
newline|'\n'
name|'self'
op|'.'
name|'metadata'
op|'='
name|'metadata'
newline|'\n'
name|'self'
op|'.'
name|'image_stream'
op|'='
name|'stream'
newline|'\n'
nl|'\n'
DECL|member|start
dedent|''
name|'def'
name|'start'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_service'
op|','
name|'image_id'
op|'='
op|'('
nl|'\n'
name|'get_remote_image_service'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'self'
op|'.'
name|'image_id'
op|')'
op|')'
newline|'\n'
name|'image_service'
op|'.'
name|'update'
op|'('
name|'self'
op|'.'
name|'context'
op|','
name|'image_id'
op|','
name|'self'
op|'.'
name|'metadata'
op|','
nl|'\n'
name|'self'
op|'.'
name|'image_stream'
op|','
name|'purge_props'
op|'='
name|'False'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
