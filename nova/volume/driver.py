begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nDrivers for volumes.\n\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'from'
name|'xml'
op|'.'
name|'etree'
name|'import'
name|'ElementTree'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|'"nova.volume.driver"'
op|')'
newline|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'volume_group'"
op|','
string|"'nova-volumes'"
op|','
nl|'\n'
string|"'Name for the VG that will contain exported volumes'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'aoe_eth_dev'"
op|','
string|"'eth0'"
op|','
nl|'\n'
string|"'Which device to export the volumes on'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'num_shell_tries'"
op|','
number|'3'
op|','
nl|'\n'
string|"'number of times to attempt to run flakey shell commands'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'num_iscsi_scan_tries'"
op|','
number|'3'
op|','
nl|'\n'
string|"'number of times to rescan iSCSI target to find volume'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_integer'
op|'('
string|"'num_shelves'"
op|','
nl|'\n'
number|'100'
op|','
nl|'\n'
string|"'Number of vblade shelves'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_integer'
op|'('
string|"'blades_per_shelf'"
op|','
nl|'\n'
number|'16'
op|','
nl|'\n'
string|"'Number of vblade blades per shelf'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_integer'
op|'('
string|"'iscsi_num_targets'"
op|','
nl|'\n'
number|'100'
op|','
nl|'\n'
string|"'Number of iscsi target ids per host'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'iscsi_target_prefix'"
op|','
string|"'iqn.2010-10.org.openstack:'"
op|','
nl|'\n'
string|"'prefix for iscsi volumes'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'iscsi_ip_prefix'"
op|','
string|"'$my_ip'"
op|','
nl|'\n'
string|"'discover volumes on the ip that starts with this prefix'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'rbd_pool'"
op|','
string|"'rbd'"
op|','
nl|'\n'
string|"'the rbd pool in which volumes are stored'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VolumeDriver
name|'class'
name|'VolumeDriver'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Executes commands relating to Volumes."""'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'execute'
op|'='
name|'utils'
op|'.'
name|'execute'
op|','
nl|'\n'
name|'sync_exec'
op|'='
name|'utils'
op|'.'
name|'execute'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(vish): db is set by Manager'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'db'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_execute'
op|'='
name|'execute'
newline|'\n'
name|'self'
op|'.'
name|'_sync_exec'
op|'='
name|'sync_exec'
newline|'\n'
nl|'\n'
DECL|member|_try_execute
dedent|''
name|'def'
name|'_try_execute'
op|'('
name|'self'
op|','
op|'*'
name|'command'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(vish): Volume commands can partially fail due to timing, but'
nl|'\n'
comment|'#             running them a second time on failure will usually'
nl|'\n'
comment|'#             recover nicely.'
nl|'\n'
indent|'        '
name|'tries'
op|'='
number|'0'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_execute'
op|'('
op|'*'
name|'command'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ProcessExecutionError'
op|':'
newline|'\n'
indent|'                '
name|'tries'
op|'='
name|'tries'
op|'+'
number|'1'
newline|'\n'
name|'if'
name|'tries'
op|'>='
name|'FLAGS'
op|'.'
name|'num_shell_tries'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
newline|'\n'
dedent|''
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|'"Recovering from a failed execute.  "'
nl|'\n'
string|'"Try number %s"'
op|')'
op|','
name|'tries'
op|')'
newline|'\n'
name|'time'
op|'.'
name|'sleep'
op|'('
name|'tries'
op|'**'
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|check_for_setup_error
dedent|''
dedent|''
dedent|''
name|'def'
name|'check_for_setup_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns an error if prerequisites aren\'t met"""'
newline|'\n'
name|'out'
op|','
name|'err'
op|'='
name|'self'
op|'.'
name|'_execute'
op|'('
string|"'vgs'"
op|','
string|"'--noheadings'"
op|','
string|"'-o'"
op|','
string|"'name'"
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
name|'volume_groups'
op|'='
name|'out'
op|'.'
name|'split'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'FLAGS'
op|'.'
name|'volume_group'
name|'in'
name|'volume_groups'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'Error'
op|'('
name|'_'
op|'('
string|'"volume group %s doesn\'t exist"'
op|')'
nl|'\n'
op|'%'
name|'FLAGS'
op|'.'
name|'volume_group'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_volume
dedent|''
dedent|''
name|'def'
name|'_create_volume'
op|'('
name|'self'
op|','
name|'volume_name'
op|','
name|'sizestr'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_try_execute'
op|'('
string|"'lvcreate'"
op|','
string|"'-L'"
op|','
name|'sizestr'
op|','
string|"'-n'"
op|','
nl|'\n'
name|'volume_name'
op|','
name|'FLAGS'
op|'.'
name|'volume_group'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_copy_volume
dedent|''
name|'def'
name|'_copy_volume'
op|'('
name|'self'
op|','
name|'srcstr'
op|','
name|'deststr'
op|','
name|'size_in_g'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_execute'
op|'('
string|"'dd'"
op|','
string|"'if=%s'"
op|'%'
name|'srcstr'
op|','
string|"'of=%s'"
op|'%'
name|'deststr'
op|','
nl|'\n'
string|"'count=%d'"
op|'%'
op|'('
name|'size_in_g'
op|'*'
number|'1024'
op|')'
op|','
string|"'bs=1M'"
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_volume_not_present
dedent|''
name|'def'
name|'_volume_not_present'
op|'('
name|'self'
op|','
name|'volume_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path_name'
op|'='
string|"'%s/%s'"
op|'%'
op|'('
name|'FLAGS'
op|'.'
name|'volume_group'
op|','
name|'volume_name'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_try_execute'
op|'('
string|"'lvdisplay'"
op|','
name|'path_name'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e'
op|':'
newline|'\n'
comment|"# If the volume isn't present"
nl|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|member|_delete_volume
dedent|''
name|'def'
name|'_delete_volume'
op|'('
name|'self'
op|','
name|'volume'
op|','
name|'size_in_g'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deletes a logical volume."""'
newline|'\n'
comment|'# zero out old volumes to prevent data leaking between users'
nl|'\n'
comment|'# TODO(ja): reclaiming space should be done lazy and low priority'
nl|'\n'
name|'self'
op|'.'
name|'_copy_volume'
op|'('
string|"'/dev/zero'"
op|','
name|'self'
op|'.'
name|'local_path'
op|'('
name|'volume'
op|')'
op|','
name|'size_in_g'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_try_execute'
op|'('
string|"'lvremove'"
op|','
string|"'-f'"
op|','
string|'"%s/%s"'
op|'%'
nl|'\n'
op|'('
name|'FLAGS'
op|'.'
name|'volume_group'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_escape_snapshot'
op|'('
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
op|')'
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_sizestr
dedent|''
name|'def'
name|'_sizestr'
op|'('
name|'self'
op|','
name|'size_in_g'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'int'
op|'('
name|'size_in_g'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'100M'"
newline|'\n'
dedent|''
name|'return'
string|"'%sG'"
op|'%'
name|'size_in_g'
newline|'\n'
nl|'\n'
comment|'# Linux LVM reserves name that starts with snapshot, so that'
nl|'\n'
comment|"# such volume name can't be created. Mangle it."
nl|'\n'
DECL|member|_escape_snapshot
dedent|''
name|'def'
name|'_escape_snapshot'
op|'('
name|'self'
op|','
name|'snapshot_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'snapshot_name'
op|'.'
name|'startswith'
op|'('
string|"'snapshot'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'snapshot_name'
newline|'\n'
dedent|''
name|'return'
string|"'_'"
op|'+'
name|'snapshot_name'
newline|'\n'
nl|'\n'
DECL|member|create_volume
dedent|''
name|'def'
name|'create_volume'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates a logical volume. Can optionally return a Dictionary of\n        changes to the volume object to be persisted."""'
newline|'\n'
name|'self'
op|'.'
name|'_create_volume'
op|'('
name|'volume'
op|'['
string|"'name'"
op|']'
op|','
name|'self'
op|'.'
name|'_sizestr'
op|'('
name|'volume'
op|'['
string|"'size'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_volume_from_snapshot
dedent|''
name|'def'
name|'create_volume_from_snapshot'
op|'('
name|'self'
op|','
name|'volume'
op|','
name|'snapshot'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates a volume from a snapshot."""'
newline|'\n'
name|'self'
op|'.'
name|'_create_volume'
op|'('
name|'volume'
op|'['
string|"'name'"
op|']'
op|','
name|'self'
op|'.'
name|'_sizestr'
op|'('
name|'volume'
op|'['
string|"'size'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_copy_volume'
op|'('
name|'self'
op|'.'
name|'local_path'
op|'('
name|'snapshot'
op|')'
op|','
name|'self'
op|'.'
name|'local_path'
op|'('
name|'volume'
op|')'
op|','
nl|'\n'
name|'snapshot'
op|'['
string|"'volume_size'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_volume
dedent|''
name|'def'
name|'delete_volume'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deletes a logical volume."""'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_volume_not_present'
op|'('
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
op|':'
newline|'\n'
comment|"# If the volume isn't present, then don't attempt to delete"
nl|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
comment|"# TODO(yamahata): lvm can't delete origin volume only without"
nl|'\n'
comment|'# deleting derived snapshots. Can we do something fancy?'
nl|'\n'
dedent|''
name|'out'
op|','
name|'err'
op|'='
name|'self'
op|'.'
name|'_execute'
op|'('
string|"'lvdisplay'"
op|','
string|"'--noheading'"
op|','
nl|'\n'
string|"'-C'"
op|','
string|"'-o'"
op|','
string|"'Attr'"
op|','
nl|'\n'
string|"'%s/%s'"
op|'%'
op|'('
name|'FLAGS'
op|'.'
name|'volume_group'
op|','
nl|'\n'
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
comment|'# fake_execute returns None resulting unit test error'
nl|'\n'
name|'if'
name|'out'
op|':'
newline|'\n'
indent|'            '
name|'out'
op|'='
name|'out'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'if'
op|'('
name|'out'
op|'['
number|'0'
op|']'
op|'=='
string|"'o'"
op|')'
name|'or'
op|'('
name|'out'
op|'['
number|'0'
op|']'
op|'=='
string|"'O'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'VolumeIsBusy'
op|'('
name|'volume_name'
op|'='
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'_delete_volume'
op|'('
name|'volume'
op|','
name|'volume'
op|'['
string|"'size'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_snapshot
dedent|''
name|'def'
name|'create_snapshot'
op|'('
name|'self'
op|','
name|'snapshot'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates a snapshot."""'
newline|'\n'
name|'orig_lv_name'
op|'='
string|'"%s/%s"'
op|'%'
op|'('
name|'FLAGS'
op|'.'
name|'volume_group'
op|','
name|'snapshot'
op|'['
string|"'volume_name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_try_execute'
op|'('
string|"'lvcreate'"
op|','
string|"'-L'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_sizestr'
op|'('
name|'snapshot'
op|'['
string|"'volume_size'"
op|']'
op|')'
op|','
nl|'\n'
string|"'--name'"
op|','
name|'self'
op|'.'
name|'_escape_snapshot'
op|'('
name|'snapshot'
op|'['
string|"'name'"
op|']'
op|')'
op|','
nl|'\n'
string|"'--snapshot'"
op|','
name|'orig_lv_name'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_snapshot
dedent|''
name|'def'
name|'delete_snapshot'
op|'('
name|'self'
op|','
name|'snapshot'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deletes a snapshot."""'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_volume_not_present'
op|'('
name|'self'
op|'.'
name|'_escape_snapshot'
op|'('
name|'snapshot'
op|'['
string|"'name'"
op|']'
op|')'
op|')'
op|':'
newline|'\n'
comment|"# If the snapshot isn't present, then don't attempt to delete"
nl|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
comment|'# TODO(yamahata): zeroing out the whole snapshot triggers COW.'
nl|'\n'
comment|"# it's quite slow."
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_delete_volume'
op|'('
name|'snapshot'
op|','
name|'snapshot'
op|'['
string|"'volume_size'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|local_path
dedent|''
name|'def'
name|'local_path'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(vish): stops deprecation warning'
nl|'\n'
indent|'        '
name|'escaped_group'
op|'='
name|'FLAGS'
op|'.'
name|'volume_group'
op|'.'
name|'replace'
op|'('
string|"'-'"
op|','
string|"'--'"
op|')'
newline|'\n'
name|'escaped_name'
op|'='
name|'self'
op|'.'
name|'_escape_snapshot'
op|'('
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
op|'.'
name|'replace'
op|'('
string|"'-'"
op|','
string|"'--'"
op|')'
newline|'\n'
name|'return'
string|'"/dev/mapper/%s-%s"'
op|'%'
op|'('
name|'escaped_group'
op|','
name|'escaped_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|ensure_export
dedent|''
name|'def'
name|'ensure_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Synchronously recreates an export for a logical volume."""'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_export
dedent|''
name|'def'
name|'create_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Exports the volume. Can optionally return a Dictionary of changes\n        to the volume object to be persisted."""'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|remove_export
dedent|''
name|'def'
name|'remove_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Removes an export for a logical volume."""'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|discover_volume
dedent|''
name|'def'
name|'discover_volume'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Discover volume on a remote host."""'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|undiscover_volume
dedent|''
name|'def'
name|'undiscover_volume'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Undiscover volume on a remote host."""'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|check_for_export
dedent|''
name|'def'
name|'check_for_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure volume is exported."""'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_volume_stats
dedent|''
name|'def'
name|'get_volume_stats'
op|'('
name|'self'
op|','
name|'refresh'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return the current state of the volume service. If \'refresh\' is\n           True, run the update first."""'
newline|'\n'
name|'return'
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AOEDriver
dedent|''
dedent|''
name|'class'
name|'AOEDriver'
op|'('
name|'VolumeDriver'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Implements AOE specific volume commands."""'
newline|'\n'
nl|'\n'
DECL|member|ensure_export
name|'def'
name|'ensure_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(vish): we depend on vblade-persist for recreating exports'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|_ensure_blades
dedent|''
name|'def'
name|'_ensure_blades'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure that blades have been created in datastore."""'
newline|'\n'
name|'total_blades'
op|'='
name|'FLAGS'
op|'.'
name|'num_shelves'
op|'*'
name|'FLAGS'
op|'.'
name|'blades_per_shelf'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'db'
op|'.'
name|'export_device_count'
op|'('
name|'context'
op|')'
op|'>='
name|'total_blades'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'for'
name|'shelf_id'
name|'in'
name|'xrange'
op|'('
name|'FLAGS'
op|'.'
name|'num_shelves'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'blade_id'
name|'in'
name|'xrange'
op|'('
name|'FLAGS'
op|'.'
name|'blades_per_shelf'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'dev'
op|'='
op|'{'
string|"'shelf_id'"
op|':'
name|'shelf_id'
op|','
string|"'blade_id'"
op|':'
name|'blade_id'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'db'
op|'.'
name|'export_device_create_safe'
op|'('
name|'context'
op|','
name|'dev'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_export
dedent|''
dedent|''
dedent|''
name|'def'
name|'create_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates an export for a logical volume."""'
newline|'\n'
name|'self'
op|'.'
name|'_ensure_blades'
op|'('
name|'context'
op|')'
newline|'\n'
op|'('
name|'shelf_id'
op|','
nl|'\n'
name|'blade_id'
op|')'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'volume_allocate_shelf_and_blade'
op|'('
name|'context'
op|','
nl|'\n'
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_try_execute'
op|'('
nl|'\n'
string|"'vblade-persist'"
op|','
string|"'setup'"
op|','
nl|'\n'
name|'shelf_id'
op|','
nl|'\n'
name|'blade_id'
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'aoe_eth_dev'
op|','
nl|'\n'
string|'"/dev/%s/%s"'
op|'%'
nl|'\n'
op|'('
name|'FLAGS'
op|'.'
name|'volume_group'
op|','
nl|'\n'
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
comment|'# NOTE(vish): The standard _try_execute does not work here'
nl|'\n'
comment|'#             because these methods throw errors if other'
nl|'\n'
comment|'#             volumes on this host are in the process of'
nl|'\n'
comment|'#             being created.  The good news is the command'
nl|'\n'
comment|'#             still works for the other volumes, so we'
nl|'\n'
comment|'#             just wait a bit for the current volume to'
nl|'\n'
comment|'#             be ready and ignore any errors.'
nl|'\n'
name|'time'
op|'.'
name|'sleep'
op|'('
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_execute'
op|'('
string|"'vblade-persist'"
op|','
string|"'auto'"
op|','
string|"'all'"
op|','
nl|'\n'
name|'check_exit_code'
op|'='
name|'False'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_execute'
op|'('
string|"'vblade-persist'"
op|','
string|"'start'"
op|','
string|"'all'"
op|','
nl|'\n'
name|'check_exit_code'
op|'='
name|'False'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|remove_export
dedent|''
name|'def'
name|'remove_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Removes an export for a logical volume."""'
newline|'\n'
op|'('
name|'shelf_id'
op|','
nl|'\n'
name|'blade_id'
op|')'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'volume_get_shelf_and_blade'
op|'('
name|'context'
op|','
nl|'\n'
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_try_execute'
op|'('
string|"'vblade-persist'"
op|','
string|"'stop'"
op|','
nl|'\n'
name|'shelf_id'
op|','
name|'blade_id'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_try_execute'
op|'('
string|"'vblade-persist'"
op|','
string|"'destroy'"
op|','
nl|'\n'
name|'shelf_id'
op|','
name|'blade_id'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|discover_volume
dedent|''
name|'def'
name|'discover_volume'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'_volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Discover volume on a remote host."""'
newline|'\n'
op|'('
name|'shelf_id'
op|','
nl|'\n'
name|'blade_id'
op|')'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'volume_get_shelf_and_blade'
op|'('
name|'context'
op|','
nl|'\n'
name|'_volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_execute'
op|'('
string|"'aoe-discover'"
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
name|'out'
op|','
name|'err'
op|'='
name|'self'
op|'.'
name|'_execute'
op|'('
string|"'aoe-stat'"
op|','
name|'check_exit_code'
op|'='
name|'False'
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
name|'device_path'
op|'='
string|"'e%(shelf_id)d.%(blade_id)d'"
op|'%'
name|'locals'
op|'('
op|')'
newline|'\n'
name|'if'
name|'out'
op|'.'
name|'find'
op|'('
name|'device_path'
op|')'
op|'>='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|'"/dev/etherd/%s"'
op|'%'
name|'device_path'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
DECL|member|undiscover_volume
dedent|''
dedent|''
name|'def'
name|'undiscover_volume'
op|'('
name|'self'
op|','
name|'_volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Undiscover volume on a remote host."""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|check_for_export
dedent|''
name|'def'
name|'check_for_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure volume is exported."""'
newline|'\n'
op|'('
name|'shelf_id'
op|','
nl|'\n'
name|'blade_id'
op|')'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'volume_get_shelf_and_blade'
op|'('
name|'context'
op|','
nl|'\n'
name|'volume_id'
op|')'
newline|'\n'
name|'cmd'
op|'='
op|'('
string|"'vblade-persist'"
op|','
string|"'ls'"
op|','
string|"'--no-header'"
op|')'
newline|'\n'
name|'out'
op|','
name|'_err'
op|'='
name|'self'
op|'.'
name|'_execute'
op|'('
op|'*'
name|'cmd'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
name|'exported'
op|'='
name|'False'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'out'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'param'
op|'='
name|'line'
op|'.'
name|'split'
op|'('
string|"' '"
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'param'
op|')'
op|'=='
number|'6'
name|'and'
name|'param'
op|'['
number|'0'
op|']'
op|'=='
name|'str'
op|'('
name|'shelf_id'
op|')'
name|'and'
name|'param'
op|'['
number|'1'
op|']'
op|'=='
name|'str'
op|'('
name|'blade_id'
op|')'
name|'and'
name|'param'
op|'['
op|'-'
number|'1'
op|']'
op|'=='
string|'"run"'
op|':'
newline|'\n'
indent|'                '
name|'exported'
op|'='
name|'True'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'exported'
op|':'
newline|'\n'
comment|'# Instance will be terminated in this case.'
nl|'\n'
indent|'            '
name|'desc'
op|'='
name|'_'
op|'('
string|'"Cannot confirm exported volume id:%(volume_id)s. "'
nl|'\n'
string|'"vblade process for e%(shelf_id)s.%(blade_id)s "'
nl|'\n'
string|'"isn\'t running."'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'ProcessExecutionError'
op|'('
name|'out'
op|','
name|'_err'
op|','
name|'cmd'
op|'='
name|'cmd'
op|','
nl|'\n'
name|'description'
op|'='
name|'desc'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeAOEDriver
dedent|''
dedent|''
dedent|''
name|'class'
name|'FakeAOEDriver'
op|'('
name|'AOEDriver'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Logs calls instead of executing."""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'FakeAOEDriver'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'execute'
op|'='
name|'self'
op|'.'
name|'fake_execute'
op|','
nl|'\n'
name|'sync_exec'
op|'='
name|'self'
op|'.'
name|'fake_execute'
op|','
nl|'\n'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|check_for_setup_error
dedent|''
name|'def'
name|'check_for_setup_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""No setup necessary in fake mode."""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|fake_execute
name|'def'
name|'fake_execute'
op|'('
name|'cmd'
op|','
op|'*'
name|'_args'
op|','
op|'**'
name|'_kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Execute that simply logs the command."""'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"FAKE AOE: %s"'
op|')'
op|','
name|'cmd'
op|')'
newline|'\n'
name|'return'
op|'('
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ISCSIDriver
dedent|''
dedent|''
name|'class'
name|'ISCSIDriver'
op|'('
name|'VolumeDriver'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Executes commands relating to ISCSI volumes.\n\n    We make use of model provider properties as follows:\n\n    :provider_location:    if present, contains the iSCSI target information\n                           in the same format as an ietadm discovery\n                           i.e. \'<ip>:<port>,<portal> <target IQN>\'\n\n    :provider_auth:    if present, contains a space-separated triple:\n                       \'<auth method> <auth username> <auth password>\'.\n                       `CHAP` is the only auth_method in use at the moment.\n    """'
newline|'\n'
nl|'\n'
DECL|member|ensure_export
name|'def'
name|'ensure_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Synchronously recreates an export for a logical volume."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'iscsi_target'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'volume_get_iscsi_target_num'
op|'('
name|'context'
op|','
nl|'\n'
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Skipping ensure_export. No iscsi_target "'
op|'+'
nl|'\n'
string|'"provisioned for volume: %d"'
op|')'
op|','
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'iscsi_name'
op|'='
string|'"%s%s"'
op|'%'
op|'('
name|'FLAGS'
op|'.'
name|'iscsi_target_prefix'
op|','
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'volume_path'
op|'='
string|'"/dev/%s/%s"'
op|'%'
op|'('
name|'FLAGS'
op|'.'
name|'volume_group'
op|','
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_sync_exec'
op|'('
string|"'ietadm'"
op|','
string|"'--op'"
op|','
string|"'new'"
op|','
nl|'\n'
string|'"--tid=%s"'
op|'%'
name|'iscsi_target'
op|','
nl|'\n'
string|"'--params'"
op|','
nl|'\n'
string|'"Name=%s"'
op|'%'
name|'iscsi_name'
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|','
nl|'\n'
name|'check_exit_code'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_sync_exec'
op|'('
string|"'ietadm'"
op|','
string|"'--op'"
op|','
string|"'new'"
op|','
nl|'\n'
string|'"--tid=%s"'
op|'%'
name|'iscsi_target'
op|','
nl|'\n'
string|"'--lun=0'"
op|','
nl|'\n'
string|"'--params'"
op|','
nl|'\n'
string|'"Path=%s,Type=fileio"'
op|'%'
name|'volume_path'
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|','
nl|'\n'
name|'check_exit_code'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_ensure_iscsi_targets
dedent|''
name|'def'
name|'_ensure_iscsi_targets'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure that target ids have been created in datastore."""'
newline|'\n'
name|'host_iscsi_targets'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'iscsi_target_count_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
newline|'\n'
name|'if'
name|'host_iscsi_targets'
op|'>='
name|'FLAGS'
op|'.'
name|'iscsi_num_targets'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
comment|'# NOTE(vish): Target ids start at 1, not 0.'
nl|'\n'
dedent|''
name|'for'
name|'target_num'
name|'in'
name|'xrange'
op|'('
number|'1'
op|','
name|'FLAGS'
op|'.'
name|'iscsi_num_targets'
op|'+'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'target'
op|'='
op|'{'
string|"'host'"
op|':'
name|'host'
op|','
string|"'target_num'"
op|':'
name|'target_num'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'db'
op|'.'
name|'iscsi_target_create_safe'
op|'('
name|'context'
op|','
name|'target'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_export
dedent|''
dedent|''
name|'def'
name|'create_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates an export for a logical volume."""'
newline|'\n'
name|'self'
op|'.'
name|'_ensure_iscsi_targets'
op|'('
name|'context'
op|','
name|'volume'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
name|'iscsi_target'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'volume_allocate_iscsi_target'
op|'('
name|'context'
op|','
nl|'\n'
name|'volume'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'volume'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
name|'iscsi_name'
op|'='
string|'"%s%s"'
op|'%'
op|'('
name|'FLAGS'
op|'.'
name|'iscsi_target_prefix'
op|','
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'volume_path'
op|'='
string|'"/dev/%s/%s"'
op|'%'
op|'('
name|'FLAGS'
op|'.'
name|'volume_group'
op|','
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_execute'
op|'('
string|"'ietadm'"
op|','
string|"'--op'"
op|','
string|"'new'"
op|','
nl|'\n'
string|"'--tid=%s'"
op|'%'
name|'iscsi_target'
op|','
nl|'\n'
string|"'--params'"
op|','
string|"'Name=%s'"
op|'%'
name|'iscsi_name'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_execute'
op|'('
string|"'ietadm'"
op|','
string|"'--op'"
op|','
string|"'new'"
op|','
nl|'\n'
string|"'--tid=%s'"
op|'%'
name|'iscsi_target'
op|','
nl|'\n'
string|"'--lun=0'"
op|','
string|"'--params'"
op|','
nl|'\n'
string|"'Path=%s,Type=fileio'"
op|'%'
name|'volume_path'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|remove_export
dedent|''
name|'def'
name|'remove_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Removes an export for a logical volume."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'iscsi_target'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'volume_get_iscsi_target_num'
op|'('
name|'context'
op|','
nl|'\n'
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Skipping remove_export. No iscsi_target "'
op|'+'
nl|'\n'
string|'"provisioned for volume: %d"'
op|')'
op|','
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
comment|'# ietadm show will exit with an error'
nl|'\n'
comment|'# this export has already been removed'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'_execute'
op|'('
string|"'ietadm'"
op|','
string|"'--op'"
op|','
string|"'show'"
op|','
nl|'\n'
string|"'--tid=%s'"
op|'%'
name|'iscsi_target'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Skipping remove_export. No iscsi_target "'
op|'+'
nl|'\n'
string|'"is presently exported for volume: %d"'
op|')'
op|','
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_execute'
op|'('
string|"'ietadm'"
op|','
string|"'--op'"
op|','
string|"'delete'"
op|','
nl|'\n'
string|"'--tid=%s'"
op|'%'
name|'iscsi_target'
op|','
nl|'\n'
string|"'--lun=0'"
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_execute'
op|'('
string|"'ietadm'"
op|','
string|"'--op'"
op|','
string|"'delete'"
op|','
nl|'\n'
string|"'--tid=%s'"
op|'%'
name|'iscsi_target'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_do_iscsi_discovery
dedent|''
name|'def'
name|'_do_iscsi_discovery'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
comment|'#TODO(justinsb): Deprecate discovery and use stored info'
nl|'\n'
comment|"#NOTE(justinsb): Discovery won't work with CHAP-secured targets (?)"
nl|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'_'
op|'('
string|'"ISCSI provider_location not stored, using discovery"'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'volume_name'
op|'='
name|'volume'
op|'['
string|"'name'"
op|']'
newline|'\n'
nl|'\n'
op|'('
name|'out'
op|','
name|'_err'
op|')'
op|'='
name|'self'
op|'.'
name|'_execute'
op|'('
string|"'iscsiadm'"
op|','
string|"'-m'"
op|','
string|"'discovery'"
op|','
nl|'\n'
string|"'-t'"
op|','
string|"'sendtargets'"
op|','
string|"'-p'"
op|','
name|'volume'
op|'['
string|"'host'"
op|']'
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
name|'for'
name|'target'
name|'in'
name|'out'
op|'.'
name|'splitlines'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'FLAGS'
op|'.'
name|'iscsi_ip_prefix'
name|'in'
name|'target'
name|'and'
name|'volume_name'
name|'in'
name|'target'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'target'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_get_iscsi_properties
dedent|''
name|'def'
name|'_get_iscsi_properties'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Gets iscsi configuration\n\n        We ideally get saved information in the volume entity, but fall back\n        to discovery if need be. Discovery may be completely removed in future\n        The properties are:\n\n        :target_discovered:    boolean indicating whether discovery was used\n\n        :target_iqn:    the IQN of the iSCSI target\n\n        :target_portal:    the portal of the iSCSI target\n\n        :auth_method:, :auth_username:, :auth_password:\n\n            the authentication details. Right now, either auth_method is not\n            present meaning no authentication, or auth_method == `CHAP`\n            meaning use CHAP with the specified credentials.\n        """'
newline|'\n'
nl|'\n'
name|'properties'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'location'
op|'='
name|'volume'
op|'['
string|"'provider_location'"
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'location'
op|':'
newline|'\n'
comment|'# provider_location is the same format as iSCSI discovery output'
nl|'\n'
indent|'            '
name|'properties'
op|'['
string|"'target_discovered'"
op|']'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'location'
op|'='
name|'self'
op|'.'
name|'_do_iscsi_discovery'
op|'('
name|'volume'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'location'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'Error'
op|'('
name|'_'
op|'('
string|'"Could not find iSCSI export "'
nl|'\n'
string|'" for volume %s"'
op|')'
op|'%'
nl|'\n'
op|'('
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"ISCSI Discovery: Found %s"'
op|')'
op|'%'
op|'('
name|'location'
op|')'
op|')'
newline|'\n'
name|'properties'
op|'['
string|"'target_discovered'"
op|']'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
op|'('
name|'iscsi_target'
op|','
name|'_sep'
op|','
name|'iscsi_name'
op|')'
op|'='
name|'location'
op|'.'
name|'partition'
op|'('
string|'" "'
op|')'
newline|'\n'
nl|'\n'
name|'iscsi_portal'
op|'='
name|'iscsi_target'
op|'.'
name|'split'
op|'('
string|'","'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
name|'properties'
op|'['
string|"'target_iqn'"
op|']'
op|'='
name|'iscsi_name'
newline|'\n'
name|'properties'
op|'['
string|"'target_portal'"
op|']'
op|'='
name|'iscsi_portal'
newline|'\n'
nl|'\n'
name|'auth'
op|'='
name|'volume'
op|'['
string|"'provider_auth'"
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'auth'
op|':'
newline|'\n'
indent|'            '
op|'('
name|'auth_method'
op|','
name|'auth_username'
op|','
name|'auth_secret'
op|')'
op|'='
name|'auth'
op|'.'
name|'split'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'properties'
op|'['
string|"'auth_method'"
op|']'
op|'='
name|'auth_method'
newline|'\n'
name|'properties'
op|'['
string|"'auth_username'"
op|']'
op|'='
name|'auth_username'
newline|'\n'
name|'properties'
op|'['
string|"'auth_password'"
op|']'
op|'='
name|'auth_secret'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'properties'
newline|'\n'
nl|'\n'
DECL|member|_run_iscsiadm
dedent|''
name|'def'
name|'_run_iscsiadm'
op|'('
name|'self'
op|','
name|'iscsi_properties'
op|','
name|'iscsi_command'
op|')'
op|':'
newline|'\n'
indent|'        '
op|'('
name|'out'
op|','
name|'err'
op|')'
op|'='
name|'self'
op|'.'
name|'_execute'
op|'('
string|"'iscsiadm'"
op|','
string|"'-m'"
op|','
string|"'node'"
op|','
string|"'-T'"
op|','
nl|'\n'
name|'iscsi_properties'
op|'['
string|"'target_iqn'"
op|']'
op|','
nl|'\n'
string|"'-p'"
op|','
name|'iscsi_properties'
op|'['
string|"'target_portal'"
op|']'
op|','
nl|'\n'
op|'*'
name|'iscsi_command'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"iscsiadm %s: stdout=%s stderr=%s"'
op|'%'
nl|'\n'
op|'('
name|'iscsi_command'
op|','
name|'out'
op|','
name|'err'
op|')'
op|')'
newline|'\n'
name|'return'
op|'('
name|'out'
op|','
name|'err'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_iscsiadm_update
dedent|''
name|'def'
name|'_iscsiadm_update'
op|'('
name|'self'
op|','
name|'iscsi_properties'
op|','
name|'property_key'
op|','
name|'property_value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'iscsi_command'
op|'='
op|'('
string|"'--op'"
op|','
string|"'update'"
op|','
string|"'-n'"
op|','
name|'property_key'
op|','
nl|'\n'
string|"'-v'"
op|','
name|'property_value'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_run_iscsiadm'
op|'('
name|'iscsi_properties'
op|','
name|'iscsi_command'
op|')'
newline|'\n'
nl|'\n'
DECL|member|discover_volume
dedent|''
name|'def'
name|'discover_volume'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Discover volume on a remote host."""'
newline|'\n'
name|'iscsi_properties'
op|'='
name|'self'
op|'.'
name|'_get_iscsi_properties'
op|'('
name|'volume'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'iscsi_properties'
op|'['
string|"'target_discovered'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_run_iscsiadm'
op|'('
name|'iscsi_properties'
op|','
string|"'--op=new'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'iscsi_properties'
op|'.'
name|'get'
op|'('
string|"'auth_method'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_iscsiadm_update'
op|'('
name|'iscsi_properties'
op|','
nl|'\n'
string|'"node.session.auth.authmethod"'
op|','
nl|'\n'
name|'iscsi_properties'
op|'['
string|"'auth_method'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_iscsiadm_update'
op|'('
name|'iscsi_properties'
op|','
nl|'\n'
string|'"node.session.auth.username"'
op|','
nl|'\n'
name|'iscsi_properties'
op|'['
string|"'auth_username'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_iscsiadm_update'
op|'('
name|'iscsi_properties'
op|','
nl|'\n'
string|'"node.session.auth.password"'
op|','
nl|'\n'
name|'iscsi_properties'
op|'['
string|"'auth_password'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_run_iscsiadm'
op|'('
name|'iscsi_properties'
op|','
string|'"--login"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_iscsiadm_update'
op|'('
name|'iscsi_properties'
op|','
string|'"node.startup"'
op|','
string|'"automatic"'
op|')'
newline|'\n'
nl|'\n'
name|'mount_device'
op|'='
op|'('
string|'"/dev/disk/by-path/ip-%s-iscsi-%s-lun-0"'
op|'%'
nl|'\n'
op|'('
name|'iscsi_properties'
op|'['
string|"'target_portal'"
op|']'
op|','
nl|'\n'
name|'iscsi_properties'
op|'['
string|"'target_iqn'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# The /dev/disk/by-path/... node is not always present immediately'
nl|'\n'
comment|'# TODO(justinsb): This retry-with-delay is a pattern, move to utils?'
nl|'\n'
name|'tries'
op|'='
number|'0'
newline|'\n'
name|'while'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'mount_device'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'tries'
op|'>='
name|'FLAGS'
op|'.'
name|'num_iscsi_scan_tries'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'Error'
op|'('
name|'_'
op|'('
string|'"iSCSI device not found at %s"'
op|')'
op|'%'
nl|'\n'
op|'('
name|'mount_device'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'_'
op|'('
string|'"ISCSI volume not yet found at: %(mount_device)s. "'
nl|'\n'
string|'"Will rescan & retry.  Try number: %(tries)s"'
op|')'
op|'%'
nl|'\n'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# The rescan isn't documented as being necessary(?), but it helps"
nl|'\n'
name|'self'
op|'.'
name|'_run_iscsiadm'
op|'('
name|'iscsi_properties'
op|','
string|'"--rescan"'
op|')'
newline|'\n'
nl|'\n'
name|'tries'
op|'='
name|'tries'
op|'+'
number|'1'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'mount_device'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'time'
op|'.'
name|'sleep'
op|'('
name|'tries'
op|'**'
number|'2'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'tries'
op|'!='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Found iSCSI node %(mount_device)s "'
nl|'\n'
string|'"(after %(tries)s rescans)"'
op|')'
op|'%'
nl|'\n'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'mount_device'
newline|'\n'
nl|'\n'
DECL|member|undiscover_volume
dedent|''
name|'def'
name|'undiscover_volume'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Undiscover volume on a remote host."""'
newline|'\n'
name|'iscsi_properties'
op|'='
name|'self'
op|'.'
name|'_get_iscsi_properties'
op|'('
name|'volume'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_iscsiadm_update'
op|'('
name|'iscsi_properties'
op|','
string|'"node.startup"'
op|','
string|'"manual"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_run_iscsiadm'
op|'('
name|'iscsi_properties'
op|','
string|'"--logout"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_run_iscsiadm'
op|'('
name|'iscsi_properties'
op|','
string|"'--op=delete'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|check_for_export
dedent|''
name|'def'
name|'check_for_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make sure volume is exported."""'
newline|'\n'
nl|'\n'
name|'tid'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'volume_get_iscsi_target_num'
op|'('
name|'context'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_execute'
op|'('
string|"'ietadm'"
op|','
string|"'--op'"
op|','
string|"'show'"
op|','
nl|'\n'
string|"'--tid=%(tid)d'"
op|'%'
name|'locals'
op|'('
op|')'
op|','
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ProcessExecutionError'
op|','
name|'e'
op|':'
newline|'\n'
comment|'# Instances remount read-only in this case.'
nl|'\n'
comment|'# /etc/init.d/iscsitarget restart and rebooting nova-volume'
nl|'\n'
comment|'# is better since ensure_export() works at boot time.'
nl|'\n'
indent|'            '
name|'logging'
op|'.'
name|'error'
op|'('
name|'_'
op|'('
string|'"Cannot confirm exported volume "'
nl|'\n'
string|'"id:%(volume_id)s."'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
name|'raise'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeISCSIDriver
dedent|''
dedent|''
dedent|''
name|'class'
name|'FakeISCSIDriver'
op|'('
name|'ISCSIDriver'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Logs calls instead of executing."""'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'FakeISCSIDriver'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'execute'
op|'='
name|'self'
op|'.'
name|'fake_execute'
op|','
nl|'\n'
name|'sync_exec'
op|'='
name|'self'
op|'.'
name|'fake_execute'
op|','
nl|'\n'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|check_for_setup_error
dedent|''
name|'def'
name|'check_for_setup_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""No setup necessary in fake mode."""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|discover_volume
dedent|''
name|'def'
name|'discover_volume'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Discover volume on a remote host."""'
newline|'\n'
name|'return'
string|'"/dev/disk/by-path/volume-id-%d"'
op|'%'
name|'volume'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|undiscover_volume
dedent|''
name|'def'
name|'undiscover_volume'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Undiscover volume on a remote host."""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|fake_execute
name|'def'
name|'fake_execute'
op|'('
name|'cmd'
op|','
op|'*'
name|'_args'
op|','
op|'**'
name|'_kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Execute that simply logs the command."""'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"FAKE ISCSI: %s"'
op|')'
op|','
name|'cmd'
op|')'
newline|'\n'
name|'return'
op|'('
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RBDDriver
dedent|''
dedent|''
name|'class'
name|'RBDDriver'
op|'('
name|'VolumeDriver'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Implements RADOS block device (RBD) volume commands"""'
newline|'\n'
nl|'\n'
DECL|member|check_for_setup_error
name|'def'
name|'check_for_setup_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns an error if prerequisites aren\'t met"""'
newline|'\n'
op|'('
name|'stdout'
op|','
name|'stderr'
op|')'
op|'='
name|'self'
op|'.'
name|'_execute'
op|'('
string|"'rados'"
op|','
string|"'lspools'"
op|')'
newline|'\n'
name|'pools'
op|'='
name|'stdout'
op|'.'
name|'split'
op|'('
string|'"\\n"'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'FLAGS'
op|'.'
name|'rbd_pool'
name|'in'
name|'pools'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'Error'
op|'('
name|'_'
op|'('
string|'"rbd has no pool %s"'
op|')'
op|'%'
nl|'\n'
name|'FLAGS'
op|'.'
name|'rbd_pool'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_volume
dedent|''
dedent|''
name|'def'
name|'create_volume'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates a logical volume."""'
newline|'\n'
name|'if'
name|'int'
op|'('
name|'volume'
op|'['
string|"'size'"
op|']'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'size'
op|'='
number|'100'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'size'
op|'='
name|'int'
op|'('
name|'volume'
op|'['
string|"'size'"
op|']'
op|')'
op|'*'
number|'1024'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_try_execute'
op|'('
string|"'rbd'"
op|','
string|"'--pool'"
op|','
name|'FLAGS'
op|'.'
name|'rbd_pool'
op|','
nl|'\n'
string|"'--size'"
op|','
name|'size'
op|','
string|"'create'"
op|','
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_volume
dedent|''
name|'def'
name|'delete_volume'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deletes a logical volume."""'
newline|'\n'
name|'self'
op|'.'
name|'_try_execute'
op|'('
string|"'rbd'"
op|','
string|"'--pool'"
op|','
name|'FLAGS'
op|'.'
name|'rbd_pool'
op|','
nl|'\n'
string|"'rm'"
op|','
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_snapshot
dedent|''
name|'def'
name|'create_snapshot'
op|'('
name|'self'
op|','
name|'snapshot'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates an rbd snapshot"""'
newline|'\n'
name|'self'
op|'.'
name|'_try_execute'
op|'('
string|"'rbd'"
op|','
string|"'--pool'"
op|','
name|'FLAGS'
op|'.'
name|'rbd_pool'
op|','
nl|'\n'
string|"'snap'"
op|','
string|"'create'"
op|','
string|"'--snap'"
op|','
name|'snapshot'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'snapshot'
op|'['
string|"'volume_name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_snapshot
dedent|''
name|'def'
name|'delete_snapshot'
op|'('
name|'self'
op|','
name|'snapshot'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deletes an rbd snapshot"""'
newline|'\n'
name|'self'
op|'.'
name|'_try_execute'
op|'('
string|"'rbd'"
op|','
string|"'--pool'"
op|','
name|'FLAGS'
op|'.'
name|'rbd_pool'
op|','
nl|'\n'
string|"'snap'"
op|','
string|"'rm'"
op|','
string|"'--snap'"
op|','
name|'snapshot'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'snapshot'
op|'['
string|"'volume_name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|local_path
dedent|''
name|'def'
name|'local_path'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns the path of the rbd volume."""'
newline|'\n'
comment|'# This is the same as the remote path'
nl|'\n'
comment|'# since qemu accesses it directly.'
nl|'\n'
name|'return'
string|'"rbd:%s/%s"'
op|'%'
op|'('
name|'FLAGS'
op|'.'
name|'rbd_pool'
op|','
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|ensure_export
dedent|''
name|'def'
name|'ensure_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Synchronously recreates an export for a logical volume."""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|create_export
dedent|''
name|'def'
name|'create_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Exports the volume"""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|remove_export
dedent|''
name|'def'
name|'remove_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Removes an export for a logical volume"""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|discover_volume
dedent|''
name|'def'
name|'discover_volume'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Discover volume on a remote host"""'
newline|'\n'
name|'return'
string|'"rbd:%s/%s"'
op|'%'
op|'('
name|'FLAGS'
op|'.'
name|'rbd_pool'
op|','
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|undiscover_volume
dedent|''
name|'def'
name|'undiscover_volume'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Undiscover volume on a remote host"""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SheepdogDriver
dedent|''
dedent|''
name|'class'
name|'SheepdogDriver'
op|'('
name|'VolumeDriver'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Executes commands relating to Sheepdog Volumes"""'
newline|'\n'
nl|'\n'
DECL|member|check_for_setup_error
name|'def'
name|'check_for_setup_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns an error if prerequisites aren\'t met"""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
op|'('
name|'out'
op|','
name|'err'
op|')'
op|'='
name|'self'
op|'.'
name|'_execute'
op|'('
string|"'collie'"
op|','
string|"'cluster'"
op|','
string|"'info'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'out'
op|'.'
name|'startswith'
op|'('
string|"'running'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'Error'
op|'('
name|'_'
op|'('
string|'"Sheepdog is not working: %s"'
op|')'
op|'%'
name|'out'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ProcessExecutionError'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'Error'
op|'('
name|'_'
op|'('
string|'"Sheepdog is not working"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_volume
dedent|''
dedent|''
name|'def'
name|'create_volume'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates a sheepdog volume"""'
newline|'\n'
name|'self'
op|'.'
name|'_try_execute'
op|'('
string|"'qemu-img'"
op|','
string|"'create'"
op|','
nl|'\n'
string|'"sheepdog:%s"'
op|'%'
name|'volume'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_sizestr'
op|'('
name|'volume'
op|'['
string|"'size'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_volume_from_snapshot
dedent|''
name|'def'
name|'create_volume_from_snapshot'
op|'('
name|'self'
op|','
name|'volume'
op|','
name|'snapshot'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates a sheepdog volume from a snapshot."""'
newline|'\n'
name|'self'
op|'.'
name|'_try_execute'
op|'('
string|"'qemu-img'"
op|','
string|"'create'"
op|','
string|"'-b'"
op|','
nl|'\n'
string|'"sheepdog:%s:%s"'
op|'%'
op|'('
name|'snapshot'
op|'['
string|"'volume_name'"
op|']'
op|','
nl|'\n'
name|'snapshot'
op|'['
string|"'name'"
op|']'
op|')'
op|','
nl|'\n'
string|'"sheepdog:%s"'
op|'%'
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_volume
dedent|''
name|'def'
name|'delete_volume'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deletes a logical volume"""'
newline|'\n'
name|'self'
op|'.'
name|'_try_execute'
op|'('
string|"'collie'"
op|','
string|"'vdi'"
op|','
string|"'delete'"
op|','
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_snapshot
dedent|''
name|'def'
name|'create_snapshot'
op|'('
name|'self'
op|','
name|'snapshot'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates a sheepdog snapshot"""'
newline|'\n'
name|'self'
op|'.'
name|'_try_execute'
op|'('
string|"'qemu-img'"
op|','
string|"'snapshot'"
op|','
string|"'-c'"
op|','
name|'snapshot'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
string|'"sheepdog:%s"'
op|'%'
name|'snapshot'
op|'['
string|"'volume_name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_snapshot
dedent|''
name|'def'
name|'delete_snapshot'
op|'('
name|'self'
op|','
name|'snapshot'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deletes a sheepdog snapshot"""'
newline|'\n'
name|'self'
op|'.'
name|'_try_execute'
op|'('
string|"'collie'"
op|','
string|"'vdi'"
op|','
string|"'delete'"
op|','
name|'snapshot'
op|'['
string|"'volume_name'"
op|']'
op|','
nl|'\n'
string|"'-s'"
op|','
name|'snapshot'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|local_path
dedent|''
name|'def'
name|'local_path'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|'"sheepdog:%s"'
op|'%'
name|'volume'
op|'['
string|"'name'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|ensure_export
dedent|''
name|'def'
name|'ensure_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Safely and synchronously recreates an export for a logical volume"""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|create_export
dedent|''
name|'def'
name|'create_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Exports the volume"""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|remove_export
dedent|''
name|'def'
name|'remove_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Removes an export for a logical volume"""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|discover_volume
dedent|''
name|'def'
name|'discover_volume'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Discover volume on a remote host"""'
newline|'\n'
name|'return'
string|'"sheepdog:%s"'
op|'%'
name|'volume'
op|'['
string|"'name'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|undiscover_volume
dedent|''
name|'def'
name|'undiscover_volume'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Undiscover volume on a remote host"""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LoggingVolumeDriver
dedent|''
dedent|''
name|'class'
name|'LoggingVolumeDriver'
op|'('
name|'VolumeDriver'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Logs and records calls, for unit tests."""'
newline|'\n'
nl|'\n'
DECL|member|check_for_setup_error
name|'def'
name|'check_for_setup_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|create_volume
dedent|''
name|'def'
name|'create_volume'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'log_action'
op|'('
string|"'create_volume'"
op|','
name|'volume'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_volume
dedent|''
name|'def'
name|'delete_volume'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'log_action'
op|'('
string|"'delete_volume'"
op|','
name|'volume'
op|')'
newline|'\n'
nl|'\n'
DECL|member|local_path
dedent|''
name|'def'
name|'local_path'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|'"local_path not implemented"'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|ensure_export
dedent|''
name|'def'
name|'ensure_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'log_action'
op|'('
string|"'ensure_export'"
op|','
name|'volume'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_export
dedent|''
name|'def'
name|'create_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'log_action'
op|'('
string|"'create_export'"
op|','
name|'volume'
op|')'
newline|'\n'
nl|'\n'
DECL|member|remove_export
dedent|''
name|'def'
name|'remove_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'log_action'
op|'('
string|"'remove_export'"
op|','
name|'volume'
op|')'
newline|'\n'
nl|'\n'
DECL|member|discover_volume
dedent|''
name|'def'
name|'discover_volume'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'log_action'
op|'('
string|"'discover_volume'"
op|','
name|'volume'
op|')'
newline|'\n'
nl|'\n'
DECL|member|undiscover_volume
dedent|''
name|'def'
name|'undiscover_volume'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'log_action'
op|'('
string|"'undiscover_volume'"
op|','
name|'volume'
op|')'
newline|'\n'
nl|'\n'
DECL|member|check_for_export
dedent|''
name|'def'
name|'check_for_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'log_action'
op|'('
string|"'check_for_export'"
op|','
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|_LOGS
dedent|''
name|'_LOGS'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|clear_logs
name|'def'
name|'clear_logs'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'LoggingVolumeDriver'
op|'.'
name|'_LOGS'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|log_action
name|'def'
name|'log_action'
op|'('
name|'action'
op|','
name|'parameters'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Logs the command."""'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"LoggingVolumeDriver: %s"'
op|')'
op|'%'
op|'('
name|'action'
op|')'
op|')'
newline|'\n'
name|'log_dictionary'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'parameters'
op|':'
newline|'\n'
indent|'            '
name|'log_dictionary'
op|'='
name|'dict'
op|'('
name|'parameters'
op|')'
newline|'\n'
dedent|''
name|'log_dictionary'
op|'['
string|"'action'"
op|']'
op|'='
name|'action'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"LoggingVolumeDriver: %s"'
op|')'
op|'%'
op|'('
name|'log_dictionary'
op|')'
op|')'
newline|'\n'
name|'LoggingVolumeDriver'
op|'.'
name|'_LOGS'
op|'.'
name|'append'
op|'('
name|'log_dictionary'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|all_logs
name|'def'
name|'all_logs'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'LoggingVolumeDriver'
op|'.'
name|'_LOGS'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|logs_like
name|'def'
name|'logs_like'
op|'('
name|'action'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'matches'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'entry'
name|'in'
name|'LoggingVolumeDriver'
op|'.'
name|'_LOGS'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'entry'
op|'['
string|"'action'"
op|']'
op|'!='
name|'action'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'match'
op|'='
name|'True'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'kwargs'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'entry'
op|'.'
name|'get'
op|'('
name|'k'
op|')'
op|'!='
name|'v'
op|':'
newline|'\n'
indent|'                    '
name|'match'
op|'='
name|'False'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'match'
op|':'
newline|'\n'
indent|'                '
name|'matches'
op|'.'
name|'append'
op|'('
name|'entry'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'matches'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ZadaraBEDriver
dedent|''
dedent|''
name|'class'
name|'ZadaraBEDriver'
op|'('
name|'ISCSIDriver'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Performs actions to configure Zadara BE module."""'
newline|'\n'
nl|'\n'
DECL|member|_not_vsa_be_volume
name|'def'
name|'_not_vsa_be_volume'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns True if volume is not VSA BE volume."""'
newline|'\n'
name|'if'
name|'volume'
op|'['
string|"'to_vsa_id'"
op|']'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"\\tVolume %s is NOT VSA volume"'
op|')'
op|','
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|member|check_for_setup_error
dedent|''
dedent|''
name|'def'
name|'check_for_setup_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""No setup necessary for Zadara BE."""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
string|'""" Volume Driver methods """'
newline|'\n'
DECL|member|create_volume
name|'def'
name|'create_volume'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates BE volume."""'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_not_vsa_be_volume'
op|'('
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'super'
op|'('
name|'ZadaraBEDriver'
op|','
name|'self'
op|')'
op|'.'
name|'create_volume'
op|'('
name|'volume'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'int'
op|'('
name|'volume'
op|'['
string|"'size'"
op|']'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'sizestr'
op|'='
string|"'0'"
comment|'# indicates full-partition'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'sizestr'
op|'='
string|"'%s'"
op|'%'
op|'('
name|'int'
op|'('
name|'volume'
op|'['
string|"'size'"
op|']'
op|')'
op|'<<'
number|'30'
op|')'
comment|'# size in bytes'
newline|'\n'
nl|'\n'
comment|'# Set the qos-str to default type sas'
nl|'\n'
dedent|''
name|'qosstr'
op|'='
string|"'SAS_1000'"
newline|'\n'
name|'drive_type'
op|'='
name|'volume'
op|'.'
name|'get'
op|'('
string|"'drive_type'"
op|')'
newline|'\n'
name|'if'
name|'drive_type'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'qosstr'
op|'='
name|'drive_type'
op|'['
string|"'type'"
op|']'
op|'+'
op|'('
string|'"_%s"'
op|'%'
name|'drive_type'
op|'['
string|"'size_gb'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_sync_exec'
op|'('
string|"'/var/lib/zadara/bin/zadara_sncfg'"
op|','
nl|'\n'
string|"'create_qospart'"
op|','
nl|'\n'
string|"'--qos'"
op|','
name|'qosstr'
op|','
nl|'\n'
string|"'--pname'"
op|','
name|'volume'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
string|"'--psize'"
op|','
name|'sizestr'
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|','
nl|'\n'
name|'check_exit_code'
op|'='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ProcessExecutionError'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"VSA BE create_volume for %s failed"'
op|')'
op|','
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'raise'
newline|'\n'
nl|'\n'
dedent|''
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"VSA BE create_volume for %s succeeded"'
op|')'
op|','
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_volume
dedent|''
name|'def'
name|'delete_volume'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deletes BE volume."""'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_not_vsa_be_volume'
op|'('
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'super'
op|'('
name|'ZadaraBEDriver'
op|','
name|'self'
op|')'
op|'.'
name|'delete_volume'
op|'('
name|'volume'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_sync_exec'
op|'('
string|"'/var/lib/zadara/bin/zadara_sncfg'"
op|','
nl|'\n'
string|"'delete_partition'"
op|','
nl|'\n'
string|"'--pname'"
op|','
name|'volume'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|','
nl|'\n'
name|'check_exit_code'
op|'='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ProcessExecutionError'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"VSA BE delete_volume for %s failed"'
op|')'
op|','
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"VSA BE delete_volume for %s suceeded"'
op|')'
op|','
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|local_path
dedent|''
name|'def'
name|'local_path'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'_not_vsa_be_volume'
op|'('
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'super'
op|'('
name|'ZadaraBEDriver'
op|','
name|'self'
op|')'
op|'.'
name|'local_path'
op|'('
name|'volume'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'raise'
name|'exception'
op|'.'
name|'Error'
op|'('
name|'_'
op|'('
string|'"local_path not supported"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|ensure_export
dedent|''
name|'def'
name|'ensure_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""ensure BE export for a volume"""'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_not_vsa_be_volume'
op|'('
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'super'
op|'('
name|'ZadaraBEDriver'
op|','
name|'self'
op|')'
op|'.'
name|'ensure_export'
op|'('
name|'context'
op|','
name|'volume'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'iscsi_target'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'volume_get_iscsi_target_num'
op|'('
name|'context'
op|','
nl|'\n'
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Skipping ensure_export. No iscsi_target "'
op|'+'
nl|'\n'
string|'"provisioned for volume: %d"'
op|')'
op|','
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'ret'
op|'='
name|'self'
op|'.'
name|'_common_be_export'
op|'('
name|'context'
op|','
name|'volume'
op|','
name|'iscsi_target'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ProcessExecutionError'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'return'
name|'ret'
newline|'\n'
nl|'\n'
DECL|member|create_export
dedent|''
name|'def'
name|'create_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""create BE export for a volume"""'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_not_vsa_be_volume'
op|'('
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'super'
op|'('
name|'ZadaraBEDriver'
op|','
name|'self'
op|')'
op|'.'
name|'create_export'
op|'('
name|'context'
op|','
name|'volume'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_ensure_iscsi_targets'
op|'('
name|'context'
op|','
name|'volume'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
name|'iscsi_target'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'volume_allocate_iscsi_target'
op|'('
name|'context'
op|','
nl|'\n'
name|'volume'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'volume'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'ret'
op|'='
name|'self'
op|'.'
name|'_common_be_export'
op|'('
name|'context'
op|','
name|'volume'
op|','
name|'iscsi_target'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'ProcessExecutionError'
newline|'\n'
dedent|''
name|'return'
name|'ret'
newline|'\n'
nl|'\n'
DECL|member|remove_export
dedent|''
name|'def'
name|'remove_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Removes BE export for a volume."""'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_not_vsa_be_volume'
op|'('
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'super'
op|'('
name|'ZadaraBEDriver'
op|','
name|'self'
op|')'
op|'.'
name|'remove_export'
op|'('
name|'context'
op|','
name|'volume'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'iscsi_target'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'volume_get_iscsi_target_num'
op|'('
name|'context'
op|','
nl|'\n'
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Skipping remove_export. No iscsi_target "'
op|'+'
nl|'\n'
string|'"provisioned for volume: %d"'
op|')'
op|','
name|'volume'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_sync_exec'
op|'('
string|"'/var/lib/zadara/bin/zadara_sncfg'"
op|','
nl|'\n'
string|"'remove_export'"
op|','
nl|'\n'
string|"'--pname'"
op|','
name|'volume'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
string|"'--tid'"
op|','
name|'iscsi_target'
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|','
nl|'\n'
name|'check_exit_code'
op|'='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ProcessExecutionError'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"VSA BE remove_export for %s failed"'
op|')'
op|','
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
DECL|member|create_snapshot
dedent|''
dedent|''
name|'def'
name|'create_snapshot'
op|'('
name|'self'
op|','
name|'snapshot'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Nothing required for snapshot"""'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_not_vsa_be_volume'
op|'('
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'super'
op|'('
name|'ZadaraBEDriver'
op|','
name|'self'
op|')'
op|'.'
name|'create_snapshot'
op|'('
name|'volume'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|delete_snapshot
dedent|''
name|'def'
name|'delete_snapshot'
op|'('
name|'self'
op|','
name|'snapshot'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Nothing required to delete a snapshot"""'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_not_vsa_be_volume'
op|'('
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'super'
op|'('
name|'ZadaraBEDriver'
op|','
name|'self'
op|')'
op|'.'
name|'delete_snapshot'
op|'('
name|'volume'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
string|'""" Internal BE Volume methods """'
newline|'\n'
DECL|member|_common_be_export
name|'def'
name|'_common_be_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|','
name|'iscsi_target'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Common logic that asks zadara_sncfg to setup iSCSI target/lun for\n        this volume\n        """'
newline|'\n'
op|'('
name|'out'
op|','
name|'err'
op|')'
op|'='
name|'self'
op|'.'
name|'_sync_exec'
op|'('
nl|'\n'
string|"'/var/lib/zadara/bin/zadara_sncfg'"
op|','
nl|'\n'
string|"'create_export'"
op|','
nl|'\n'
string|"'--pname'"
op|','
name|'volume'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
string|"'--tid'"
op|','
name|'iscsi_target'
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|','
nl|'\n'
name|'check_exit_code'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'result_xml'
op|'='
name|'ElementTree'
op|'.'
name|'fromstring'
op|'('
name|'out'
op|')'
newline|'\n'
name|'response_node'
op|'='
name|'result_xml'
op|'.'
name|'find'
op|'('
string|'"Sn"'
op|')'
newline|'\n'
name|'if'
name|'response_node'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
string|'"Malformed response from zadara_sncfg"'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'Error'
op|'('
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'sn_ip'
op|'='
name|'response_node'
op|'.'
name|'findtext'
op|'('
string|'"SnIp"'
op|')'
newline|'\n'
name|'sn_iqn'
op|'='
name|'response_node'
op|'.'
name|'findtext'
op|'('
string|'"IqnName"'
op|')'
newline|'\n'
name|'iscsi_portal'
op|'='
name|'sn_ip'
op|'+'
string|'":3260,"'
op|'+'
op|'('
string|'"%s"'
op|'%'
name|'iscsi_target'
op|')'
newline|'\n'
nl|'\n'
name|'model_update'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'model_update'
op|'['
string|"'provider_location'"
op|']'
op|'='
op|'('
string|'"%s %s"'
op|'%'
nl|'\n'
op|'('
name|'iscsi_portal'
op|','
nl|'\n'
name|'sn_iqn'
op|')'
op|')'
newline|'\n'
name|'return'
name|'model_update'
newline|'\n'
nl|'\n'
DECL|member|_get_qosgroup_summary
dedent|''
name|'def'
name|'_get_qosgroup_summary'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""gets the list of qosgroups from Zadara BE"""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
op|'('
name|'out'
op|','
name|'err'
op|')'
op|'='
name|'self'
op|'.'
name|'_sync_exec'
op|'('
nl|'\n'
string|"'/var/lib/zadara/bin/zadara_sncfg'"
op|','
nl|'\n'
string|"'get_qosgroups_xml'"
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|','
nl|'\n'
name|'check_exit_code'
op|'='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ProcessExecutionError'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Failed to retrieve QoS info"'
op|')'
op|')'
newline|'\n'
name|'return'
op|'{'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'qos_groups'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'result_xml'
op|'='
name|'ElementTree'
op|'.'
name|'fromstring'
op|'('
name|'out'
op|')'
newline|'\n'
name|'for'
name|'element'
name|'in'
name|'result_xml'
op|'.'
name|'findall'
op|'('
string|"'QosGroup'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'qos_group'
op|'='
op|'{'
op|'}'
newline|'\n'
comment|'# get the name of the group.'
nl|'\n'
comment|'# If we cannot find it, forget this element'
nl|'\n'
name|'group_name'
op|'='
name|'element'
op|'.'
name|'findtext'
op|'('
string|'"Name"'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'group_name'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
nl|'\n'
comment|'# loop through all child nodes & fill up attributes of this group'
nl|'\n'
dedent|''
name|'for'
name|'child'
name|'in'
name|'element'
op|'.'
name|'getchildren'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# two types of elements -  property of qos-group & sub property'
nl|'\n'
comment|'# classify them accordingly'
nl|'\n'
indent|'                '
name|'if'
name|'child'
op|'.'
name|'text'
op|':'
newline|'\n'
indent|'                    '
name|'qos_group'
op|'['
name|'child'
op|'.'
name|'tag'
op|']'
op|'='
name|'int'
op|'('
name|'child'
op|'.'
name|'text'
op|')'
name|'if'
name|'child'
op|'.'
name|'text'
op|'.'
name|'isdigit'
op|'('
op|')'
name|'else'
name|'child'
op|'.'
name|'text'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'subelement'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'subchild'
name|'in'
name|'child'
op|'.'
name|'getchildren'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'subelement'
op|'['
name|'subchild'
op|'.'
name|'tag'
op|']'
op|'='
name|'int'
op|'('
name|'subchild'
op|'.'
name|'text'
op|')'
name|'if'
name|'subchild'
op|'.'
name|'text'
op|'.'
name|'isdigit'
op|'('
op|')'
name|'else'
name|'subchild'
op|'.'
name|'text'
newline|'\n'
dedent|''
name|'qos_group'
op|'['
name|'child'
op|'.'
name|'tag'
op|']'
op|'='
name|'subelement'
newline|'\n'
nl|'\n'
comment|'# Now add this group to the master qos_groups'
nl|'\n'
dedent|''
dedent|''
name|'qos_groups'
op|'['
name|'group_name'
op|']'
op|'='
name|'qos_group'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'qos_groups'
newline|'\n'
nl|'\n'
DECL|member|get_volume_stats
dedent|''
name|'def'
name|'get_volume_stats'
op|'('
name|'self'
op|','
name|'refresh'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return the current state of the volume service. If \'refresh\' is\n           True, run the update first."""'
newline|'\n'
nl|'\n'
name|'drive_info'
op|'='
name|'self'
op|'.'
name|'_get_qosgroup_summary'
op|'('
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'drive_qos_info'"
op|':'
name|'drive_info'
op|'}'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
