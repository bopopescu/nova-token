begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2012 NetApp, Inc.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nVolume driver for NetApp NFS storage.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'suds'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'volume'
op|'.'
name|'netapp'
name|'import'
name|'netapp_opts'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'volume'
name|'import'
name|'nfs'
newline|'\n'
nl|'\n'
name|'from'
name|'suds'
op|'.'
name|'sax'
name|'import'
name|'text'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|netapp_nfs_opts
name|'netapp_nfs_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'synchronous_snapshot_create'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'0'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Does snapshot creation call returns immediately'"
op|')'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
name|'FLAGS'
op|'.'
name|'register_opts'
op|'('
name|'netapp_opts'
op|')'
newline|'\n'
name|'FLAGS'
op|'.'
name|'register_opts'
op|'('
name|'netapp_nfs_opts'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NetAppNFSDriver
name|'class'
name|'NetAppNFSDriver'
op|'('
name|'nfs'
op|'.'
name|'NfsDriver'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Executes commands relating to Volumes."""'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(vish): db is set by Manager'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_execute'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_context'
op|'='
name|'None'
newline|'\n'
name|'super'
op|'('
name|'NetAppNFSDriver'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|set_execute
dedent|''
name|'def'
name|'set_execute'
op|'('
name|'self'
op|','
name|'execute'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_execute'
op|'='
name|'execute'
newline|'\n'
nl|'\n'
DECL|member|do_setup
dedent|''
name|'def'
name|'do_setup'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_context'
op|'='
name|'context'
newline|'\n'
name|'self'
op|'.'
name|'check_for_setup_error'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_client'
op|'='
name|'NetAppNFSDriver'
op|'.'
name|'_get_client'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|check_for_setup_error
dedent|''
name|'def'
name|'check_for_setup_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns an error if prerequisites aren\'t met"""'
newline|'\n'
name|'NetAppNFSDriver'
op|'.'
name|'_check_dfm_flags'
op|'('
op|')'
newline|'\n'
name|'super'
op|'('
name|'NetAppNFSDriver'
op|','
name|'self'
op|')'
op|'.'
name|'check_for_setup_error'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_volume_from_snapshot
dedent|''
name|'def'
name|'create_volume_from_snapshot'
op|'('
name|'self'
op|','
name|'volume'
op|','
name|'snapshot'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates a volume from a snapshot."""'
newline|'\n'
name|'vol_size'
op|'='
name|'volume'
op|'.'
name|'size'
newline|'\n'
name|'snap_size'
op|'='
name|'snapshot'
op|'.'
name|'volume_size'
newline|'\n'
nl|'\n'
name|'if'
name|'vol_size'
op|'!='
name|'snap_size'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|"'Cannot create volume of size %(vol_size)s from '"
nl|'\n'
string|"'snapshot of size %(snap_size)s'"
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
name|'msg'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_clone_volume'
op|'('
name|'snapshot'
op|'.'
name|'name'
op|','
name|'volume'
op|'.'
name|'name'
op|','
name|'snapshot'
op|'.'
name|'volume_id'
op|')'
newline|'\n'
name|'share'
op|'='
name|'self'
op|'.'
name|'_get_volume_location'
op|'('
name|'snapshot'
op|'.'
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
name|'return'
op|'{'
string|"'provider_location'"
op|':'
name|'share'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|create_snapshot
dedent|''
name|'def'
name|'create_snapshot'
op|'('
name|'self'
op|','
name|'snapshot'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates a snapshot."""'
newline|'\n'
name|'self'
op|'.'
name|'_clone_volume'
op|'('
name|'snapshot'
op|'['
string|"'volume_name'"
op|']'
op|','
nl|'\n'
name|'snapshot'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'snapshot'
op|'['
string|"'volume_id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_snapshot
dedent|''
name|'def'
name|'delete_snapshot'
op|'('
name|'self'
op|','
name|'snapshot'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deletes a snapshot."""'
newline|'\n'
name|'nfs_mount'
op|'='
name|'self'
op|'.'
name|'_get_provider_location'
op|'('
name|'snapshot'
op|'.'
name|'volume_id'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'_volume_not_present'
op|'('
name|'nfs_mount'
op|','
name|'snapshot'
op|'.'
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_execute'
op|'('
string|"'rm'"
op|','
name|'self'
op|'.'
name|'_get_volume_path'
op|'('
name|'nfs_mount'
op|','
name|'snapshot'
op|'.'
name|'name'
op|')'
op|','
nl|'\n'
name|'run_as_root'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_check_dfm_flags
name|'def'
name|'_check_dfm_flags'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Raises error if any required configuration flag for OnCommand proxy\n        is missing."""'
newline|'\n'
name|'required_flags'
op|'='
op|'['
string|"'netapp_wsdl_url'"
op|','
nl|'\n'
string|"'netapp_login'"
op|','
nl|'\n'
string|"'netapp_password'"
op|','
nl|'\n'
string|"'netapp_server_hostname'"
op|','
nl|'\n'
string|"'netapp_server_port'"
op|']'
newline|'\n'
name|'for'
name|'flag'
name|'in'
name|'required_flags'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'getattr'
op|'('
name|'FLAGS'
op|','
name|'flag'
op|','
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
name|'_'
op|'('
string|"'%s is not set'"
op|')'
op|'%'
name|'flag'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_get_client
name|'def'
name|'_get_client'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates SOAP _client for ONTAP-7 DataFabric Service."""'
newline|'\n'
name|'client'
op|'='
name|'suds'
op|'.'
name|'client'
op|'.'
name|'Client'
op|'('
name|'FLAGS'
op|'.'
name|'netapp_wsdl_url'
op|','
nl|'\n'
name|'username'
op|'='
name|'FLAGS'
op|'.'
name|'netapp_login'
op|','
nl|'\n'
name|'password'
op|'='
name|'FLAGS'
op|'.'
name|'netapp_password'
op|')'
newline|'\n'
name|'soap_url'
op|'='
string|"'http://%s:%s/apis/soap/v1'"
op|'%'
op|'('
nl|'\n'
name|'FLAGS'
op|'.'
name|'netapp_server_hostname'
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'netapp_server_port'
op|')'
newline|'\n'
name|'client'
op|'.'
name|'set_options'
op|'('
name|'location'
op|'='
name|'soap_url'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'client'
newline|'\n'
nl|'\n'
DECL|member|_get_volume_location
dedent|''
name|'def'
name|'_get_volume_location'
op|'('
name|'self'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns NFS mount address as <nfs_ip_address>:<nfs_mount_dir>"""'
newline|'\n'
name|'nfs_server_ip'
op|'='
name|'self'
op|'.'
name|'_get_host_ip'
op|'('
name|'volume_id'
op|')'
newline|'\n'
name|'export_path'
op|'='
name|'self'
op|'.'
name|'_get_export_path'
op|'('
name|'volume_id'
op|')'
newline|'\n'
name|'return'
op|'('
name|'nfs_server_ip'
op|'+'
string|"':'"
op|'+'
name|'export_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_clone_volume
dedent|''
name|'def'
name|'_clone_volume'
op|'('
name|'self'
op|','
name|'volume_name'
op|','
name|'clone_name'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Clones mounted volume with OnCommand proxy API"""'
newline|'\n'
name|'host_id'
op|'='
name|'self'
op|'.'
name|'_get_host_id'
op|'('
name|'volume_id'
op|')'
newline|'\n'
name|'export_path'
op|'='
name|'self'
op|'.'
name|'_get_full_export_path'
op|'('
name|'volume_id'
op|','
name|'host_id'
op|')'
newline|'\n'
nl|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'_client'
op|'.'
name|'factory'
op|'.'
name|'create'
op|'('
string|"'Request'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'Name'
op|'='
string|"'clone-start'"
newline|'\n'
nl|'\n'
name|'clone_start_args'
op|'='
op|'('
string|"'<source-path>%s/%s</source-path>'"
nl|'\n'
string|"'<destination-path>%s/%s</destination-path>'"
op|')'
newline|'\n'
nl|'\n'
name|'request'
op|'.'
name|'Args'
op|'='
name|'text'
op|'.'
name|'Raw'
op|'('
name|'clone_start_args'
op|'%'
op|'('
name|'export_path'
op|','
nl|'\n'
name|'volume_name'
op|','
nl|'\n'
name|'export_path'
op|','
nl|'\n'
name|'clone_name'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'_client'
op|'.'
name|'service'
op|'.'
name|'ApiProxy'
op|'('
name|'Target'
op|'='
name|'host_id'
op|','
nl|'\n'
name|'Request'
op|'='
name|'request'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'resp'
op|'.'
name|'Status'
op|'=='
string|"'passed'"
name|'and'
name|'FLAGS'
op|'.'
name|'synchronous_snapshot_create'
op|':'
newline|'\n'
indent|'            '
name|'clone_id'
op|'='
name|'resp'
op|'.'
name|'Results'
op|'['
string|"'clone-id'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'clone_id_info'
op|'='
name|'clone_id'
op|'['
string|"'clone-id-info'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'clone_operation_id'
op|'='
name|'int'
op|'('
name|'clone_id_info'
op|'['
string|"'clone-op-id'"
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_wait_for_clone_finished'
op|'('
name|'clone_operation_id'
op|','
name|'host_id'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'resp'
op|'.'
name|'Status'
op|'=='
string|"'failed'"
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
name|'resp'
op|'.'
name|'Reason'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_wait_for_clone_finished
dedent|''
dedent|''
name|'def'
name|'_wait_for_clone_finished'
op|'('
name|'self'
op|','
name|'clone_operation_id'
op|','
name|'host_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Polls ONTAP7 for clone status. Returns once clone is finished.\n        :param clone_operation_id: Identifier of ONTAP clone operation\n        """'
newline|'\n'
name|'clone_list_options'
op|'='
op|'('
string|"'<clone-id>'"
nl|'\n'
string|"'<clone-id-info>'"
nl|'\n'
string|"'<clone-op-id>%d</clone-op-id>'"
nl|'\n'
string|"'<volume-uuid></volume-uuid>'"
nl|'\n'
string|"'</clone-id>'"
nl|'\n'
string|"'</clone-id-info>'"
op|')'
newline|'\n'
nl|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'_client'
op|'.'
name|'factory'
op|'.'
name|'create'
op|'('
string|"'Request'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'Name'
op|'='
string|"'clone-list-status'"
newline|'\n'
name|'request'
op|'.'
name|'Args'
op|'='
name|'text'
op|'.'
name|'Raw'
op|'('
name|'clone_list_options'
op|'%'
name|'clone_operation_id'
op|')'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'_client'
op|'.'
name|'service'
op|'.'
name|'ApiProxy'
op|'('
name|'Target'
op|'='
name|'host_id'
op|','
name|'Request'
op|'='
name|'request'
op|')'
newline|'\n'
nl|'\n'
name|'while'
name|'resp'
op|'.'
name|'Status'
op|'!='
string|"'passed'"
op|':'
newline|'\n'
indent|'            '
name|'time'
op|'.'
name|'sleep'
op|'('
number|'1'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'_client'
op|'.'
name|'service'
op|'.'
name|'ApiProxy'
op|'('
name|'Target'
op|'='
name|'host_id'
op|','
nl|'\n'
name|'Request'
op|'='
name|'request'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_provider_location
dedent|''
dedent|''
name|'def'
name|'_get_provider_location'
op|'('
name|'self'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns provider location for given volume\n        :param volume_id:\n        """'
newline|'\n'
name|'volume'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'volume_get'
op|'('
name|'self'
op|'.'
name|'_context'
op|','
name|'volume_id'
op|')'
newline|'\n'
name|'return'
name|'volume'
op|'.'
name|'provider_location'
newline|'\n'
nl|'\n'
DECL|member|_get_host_ip
dedent|''
name|'def'
name|'_get_host_ip'
op|'('
name|'self'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns IP address for the given volume"""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_get_provider_location'
op|'('
name|'volume_id'
op|')'
op|'.'
name|'split'
op|'('
string|"':'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_get_export_path
dedent|''
name|'def'
name|'_get_export_path'
op|'('
name|'self'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns NFS export path for the given volume"""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_get_provider_location'
op|'('
name|'volume_id'
op|')'
op|'.'
name|'split'
op|'('
string|"':'"
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_get_host_id
dedent|''
name|'def'
name|'_get_host_id'
op|'('
name|'self'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns ID of the ONTAP-7 host"""'
newline|'\n'
name|'host_ip'
op|'='
name|'self'
op|'.'
name|'_get_host_ip'
op|'('
name|'volume_id'
op|')'
newline|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'_client'
op|'.'
name|'service'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'server'
op|'.'
name|'HostListInfoIterStart'
op|'('
name|'ObjectNameOrId'
op|'='
name|'host_ip'
op|')'
newline|'\n'
name|'tag'
op|'='
name|'resp'
op|'.'
name|'Tag'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'res'
op|'='
name|'server'
op|'.'
name|'HostListInfoIterNext'
op|'('
name|'Tag'
op|'='
name|'tag'
op|','
name|'Maximum'
op|'='
number|'1'
op|')'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'res'
op|','
string|"'Hosts'"
op|')'
name|'and'
name|'res'
op|'.'
name|'Hosts'
op|'.'
name|'HostInfo'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'res'
op|'.'
name|'Hosts'
op|'.'
name|'HostInfo'
op|'['
number|'0'
op|']'
op|'.'
name|'HostId'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'.'
name|'HostListInfoIterEnd'
op|'('
name|'Tag'
op|'='
name|'tag'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_full_export_path
dedent|''
dedent|''
name|'def'
name|'_get_full_export_path'
op|'('
name|'self'
op|','
name|'volume_id'
op|','
name|'host_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns full path to the NFS share, e.g. /vol/vol0/home"""'
newline|'\n'
name|'export_path'
op|'='
name|'self'
op|'.'
name|'_get_export_path'
op|'('
name|'volume_id'
op|')'
newline|'\n'
name|'command_args'
op|'='
string|"'<pathname>%s</pathname>'"
newline|'\n'
nl|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'_client'
op|'.'
name|'factory'
op|'.'
name|'create'
op|'('
string|"'Request'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'Name'
op|'='
string|"'nfs-exportfs-storage-path'"
newline|'\n'
name|'request'
op|'.'
name|'Args'
op|'='
name|'text'
op|'.'
name|'Raw'
op|'('
name|'command_args'
op|'%'
name|'export_path'
op|')'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'_client'
op|'.'
name|'service'
op|'.'
name|'ApiProxy'
op|'('
name|'Target'
op|'='
name|'host_id'
op|','
nl|'\n'
name|'Request'
op|'='
name|'request'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'resp'
op|'.'
name|'Status'
op|'=='
string|"'passed'"
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'resp'
op|'.'
name|'Results'
op|'['
string|"'actual-pathname'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'elif'
name|'resp'
op|'.'
name|'Status'
op|'=='
string|"'failed'"
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
name|'resp'
op|'.'
name|'Reason'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_volume_not_present
dedent|''
dedent|''
name|'def'
name|'_volume_not_present'
op|'('
name|'self'
op|','
name|'nfs_mount'
op|','
name|'volume_name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Check if volume exists\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_try_execute'
op|'('
string|"'ls'"
op|','
name|'self'
op|'.'
name|'_get_volume_path'
op|'('
name|'nfs_mount'
op|','
nl|'\n'
name|'volume_name'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ProcessExecutionError'
op|':'
newline|'\n'
comment|"# If the volume isn't present"
nl|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|member|_try_execute
dedent|''
name|'def'
name|'_try_execute'
op|'('
name|'self'
op|','
op|'*'
name|'command'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(vish): Volume commands can partially fail due to timing, but'
nl|'\n'
comment|'#             running them a second time on failure will usually'
nl|'\n'
comment|'#             recover nicely.'
nl|'\n'
indent|'        '
name|'tries'
op|'='
number|'0'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_execute'
op|'('
op|'*'
name|'command'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ProcessExecutionError'
op|':'
newline|'\n'
indent|'                '
name|'tries'
op|'='
name|'tries'
op|'+'
number|'1'
newline|'\n'
name|'if'
name|'tries'
op|'>='
name|'FLAGS'
op|'.'
name|'num_shell_tries'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
newline|'\n'
dedent|''
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|'"Recovering from a failed execute.  "'
nl|'\n'
string|'"Try number %s"'
op|')'
op|','
name|'tries'
op|')'
newline|'\n'
name|'time'
op|'.'
name|'sleep'
op|'('
name|'tries'
op|'**'
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_volume_path
dedent|''
dedent|''
dedent|''
name|'def'
name|'_get_volume_path'
op|'('
name|'self'
op|','
name|'nfs_share'
op|','
name|'volume_name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get volume path (local fs path) for given volume name on given nfs\n        share\n        @param nfs_share string, example 172.18.194.100:/var/nfs\n        @param volume_name string,\n            example volume-91ee65ec-c473-4391-8c09-162b00c68a8c\n        """'
newline|'\n'
name|'return'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'_get_mount_point_for_share'
op|'('
name|'nfs_share'
op|')'
op|','
nl|'\n'
name|'volume_name'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
