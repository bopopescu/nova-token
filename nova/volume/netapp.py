begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2012 NetApp, Inc.'
nl|'\n'
comment|'# Copyright (c) 2012 OpenStack LLC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nVolume driver for NetApp storage systems.\n\nThis driver requires NetApp OnCommand 5.0 and one or more Data\nONTAP 7-mode storage systems with installed iSCSI licenses.\n\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'import'
name|'suds'
newline|'\n'
name|'from'
name|'suds'
name|'import'
name|'client'
newline|'\n'
name|'from'
name|'suds'
op|'.'
name|'sax'
name|'import'
name|'text'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'volume'
name|'import'
name|'driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'volume'
name|'import'
name|'volume_types'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|netapp_opts
name|'netapp_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'netapp_wsdl_url'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'None'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'URL of the WSDL file for the DFM server'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'netapp_login'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'None'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'User name for the DFM server'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'netapp_password'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'None'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Password for the DFM server'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'netapp_server_hostname'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'None'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Hostname for the DFM server'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'netapp_server_port'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'8088'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Port number for the DFM server'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'netapp_storage_service'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'None'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
op|'('
string|"'Storage service to use for provisioning '"
nl|'\n'
string|"'(when volume_type=None)'"
op|')'
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'netapp_storage_service_prefix'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'None'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
op|'('
string|"'Prefix of storage service name to use for '"
nl|'\n'
string|"'provisioning (volume_type name will be appended)'"
op|')'
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'netapp_vfiler'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'None'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Vfiler to use for provisioning'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
name|'FLAGS'
op|'.'
name|'register_opts'
op|'('
name|'netapp_opts'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DfmDataset
name|'class'
name|'DfmDataset'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'id'
op|','
name|'name'
op|','
name|'project'
op|','
name|'type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'id'
op|'='
name|'id'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'project'
op|'='
name|'project'
newline|'\n'
name|'self'
op|'.'
name|'type'
op|'='
name|'type'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DfmLun
dedent|''
dedent|''
name|'class'
name|'DfmLun'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'dataset'
op|','
name|'lunpath'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'dataset'
op|'='
name|'dataset'
newline|'\n'
name|'self'
op|'.'
name|'lunpath'
op|'='
name|'lunpath'
newline|'\n'
name|'self'
op|'.'
name|'id'
op|'='
name|'id'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NetAppISCSIDriver
dedent|''
dedent|''
name|'class'
name|'NetAppISCSIDriver'
op|'('
name|'driver'
op|'.'
name|'ISCSIDriver'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""NetApp iSCSI volume driver."""'
newline|'\n'
nl|'\n'
DECL|variable|IGROUP_PREFIX
name|'IGROUP_PREFIX'
op|'='
string|"'openstack-'"
newline|'\n'
DECL|variable|DATASET_PREFIX
name|'DATASET_PREFIX'
op|'='
string|"'OpenStack_'"
newline|'\n'
DECL|variable|DATASET_METADATA_PROJECT_KEY
name|'DATASET_METADATA_PROJECT_KEY'
op|'='
string|"'OpenStackProject'"
newline|'\n'
DECL|variable|DATASET_METADATA_VOL_TYPE_KEY
name|'DATASET_METADATA_VOL_TYPE_KEY'
op|'='
string|"'OpenStackVolType'"
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'NetAppISCSIDriver'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'discovered_luns'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'discovered_datasets'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'lun_table'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_check_fail
dedent|''
name|'def'
name|'_check_fail'
op|'('
name|'self'
op|','
name|'request'
op|','
name|'response'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Utility routine to handle checking ZAPI failures."""'
newline|'\n'
name|'if'
string|"'failed'"
op|'=='
name|'response'
op|'.'
name|'Status'
op|':'
newline|'\n'
indent|'            '
name|'name'
op|'='
name|'request'
op|'.'
name|'Name'
newline|'\n'
name|'reason'
op|'='
name|'response'
op|'.'
name|'Reason'
newline|'\n'
name|'msg'
op|'='
name|'_'
op|'('
string|"'API %(name)s failed: %(reason)s'"
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
name|'msg'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_client
dedent|''
dedent|''
name|'def'
name|'_create_client'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Instantiate a web services client.\n\n        This method creates a "suds" client to make web services calls to the\n        DFM server. Note that the WSDL file is quite large and may take\n        a few seconds to parse.\n        """'
newline|'\n'
name|'wsdl_url'
op|'='
name|'kwargs'
op|'['
string|"'wsdl_url'"
op|']'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'Using WSDL: %s'"
op|')'
op|'%'
name|'wsdl_url'
op|')'
newline|'\n'
name|'if'
name|'kwargs'
op|'['
string|"'cache'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'client'
op|'='
name|'client'
op|'.'
name|'Client'
op|'('
name|'wsdl_url'
op|','
name|'username'
op|'='
name|'kwargs'
op|'['
string|"'login'"
op|']'
op|','
nl|'\n'
name|'password'
op|'='
name|'kwargs'
op|'['
string|"'password'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'client'
op|'='
name|'client'
op|'.'
name|'Client'
op|'('
name|'wsdl_url'
op|','
name|'username'
op|'='
name|'kwargs'
op|'['
string|"'login'"
op|']'
op|','
nl|'\n'
name|'password'
op|'='
name|'kwargs'
op|'['
string|"'password'"
op|']'
op|','
nl|'\n'
name|'cache'
op|'='
name|'None'
op|')'
newline|'\n'
dedent|''
name|'soap_url'
op|'='
string|"'http://%s:%s/apis/soap/v1'"
op|'%'
op|'('
name|'kwargs'
op|'['
string|"'hostname'"
op|']'
op|','
nl|'\n'
name|'kwargs'
op|'['
string|"'port'"
op|']'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'Using DFM server: %s'"
op|')'
op|'%'
name|'soap_url'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'.'
name|'set_options'
op|'('
name|'location'
op|'='
name|'soap_url'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_set_storage_service
dedent|''
name|'def'
name|'_set_storage_service'
op|'('
name|'self'
op|','
name|'storage_service'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Set the storage service to use for provisioning."""'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'Using storage service: %s'"
op|')'
op|'%'
name|'storage_service'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'storage_service'
op|'='
name|'storage_service'
newline|'\n'
nl|'\n'
DECL|member|_set_storage_service_prefix
dedent|''
name|'def'
name|'_set_storage_service_prefix'
op|'('
name|'self'
op|','
name|'storage_service_prefix'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Set the storage service prefix to use for provisioning."""'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'Using storage service prefix: %s'"
op|')'
op|'%'
nl|'\n'
name|'storage_service_prefix'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'storage_service_prefix'
op|'='
name|'storage_service_prefix'
newline|'\n'
nl|'\n'
DECL|member|_set_vfiler
dedent|''
name|'def'
name|'_set_vfiler'
op|'('
name|'self'
op|','
name|'vfiler'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Set the vfiler to use for provisioning."""'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'Using vfiler: %s'"
op|')'
op|'%'
name|'vfiler'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'vfiler'
op|'='
name|'vfiler'
newline|'\n'
nl|'\n'
DECL|member|_check_flags
dedent|''
name|'def'
name|'_check_flags'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure that the flags we care about are set."""'
newline|'\n'
name|'required_flags'
op|'='
op|'['
string|"'netapp_wsdl_url'"
op|','
string|"'netapp_login'"
op|','
string|"'netapp_password'"
op|','
nl|'\n'
string|"'netapp_server_hostname'"
op|','
string|"'netapp_server_port'"
op|']'
newline|'\n'
name|'for'
name|'flag'
name|'in'
name|'required_flags'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'getattr'
op|'('
name|'FLAGS'
op|','
name|'flag'
op|','
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
name|'_'
op|'('
string|"'%s is not set'"
op|')'
op|'%'
name|'flag'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
op|'('
name|'FLAGS'
op|'.'
name|'netapp_storage_service'
name|'or'
nl|'\n'
name|'FLAGS'
op|'.'
name|'netapp_storage_service_prefix'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
name|'_'
op|'('
string|"'Either netapp_storage_service or '"
nl|'\n'
string|"'netapp_storage_service_prefix must be set'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|do_setup
dedent|''
dedent|''
name|'def'
name|'do_setup'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Setup the NetApp Volume driver.\n\n        Called one time by the manager after the driver is loaded.\n        Validate the flags we care about and setup the suds (web services)\n        client.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_check_flags'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_client'
op|'('
name|'wsdl_url'
op|'='
name|'FLAGS'
op|'.'
name|'netapp_wsdl_url'
op|','
nl|'\n'
name|'login'
op|'='
name|'FLAGS'
op|'.'
name|'netapp_login'
op|','
name|'password'
op|'='
name|'FLAGS'
op|'.'
name|'netapp_password'
op|','
nl|'\n'
name|'hostname'
op|'='
name|'FLAGS'
op|'.'
name|'netapp_server_hostname'
op|','
nl|'\n'
name|'port'
op|'='
name|'FLAGS'
op|'.'
name|'netapp_server_port'
op|','
name|'cache'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_set_storage_service'
op|'('
name|'FLAGS'
op|'.'
name|'netapp_storage_service'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_set_storage_service_prefix'
op|'('
name|'FLAGS'
op|'.'
name|'netapp_storage_service_prefix'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_set_vfiler'
op|'('
name|'FLAGS'
op|'.'
name|'netapp_vfiler'
op|')'
newline|'\n'
nl|'\n'
DECL|member|check_for_setup_error
dedent|''
name|'def'
name|'check_for_setup_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Check that the driver is working and can communicate.\n\n        Invoke a web services API to make sure we can talk to the server.\n        Also perform the discovery of datasets and LUNs from DFM.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'.'
name|'service'
op|'.'
name|'DfmAbout'
op|'('
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Connected to DFM server"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_discover_luns'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_datasets
dedent|''
name|'def'
name|'_get_datasets'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get the list of datasets from DFM."""'
newline|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'service'
newline|'\n'
name|'res'
op|'='
name|'server'
op|'.'
name|'DatasetListInfoIterStart'
op|'('
name|'IncludeMetadata'
op|'='
name|'True'
op|')'
newline|'\n'
name|'tag'
op|'='
name|'res'
op|'.'
name|'Tag'
newline|'\n'
name|'datasets'
op|'='
op|'['
op|']'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                '
name|'res'
op|'='
name|'server'
op|'.'
name|'DatasetListInfoIterNext'
op|'('
name|'Tag'
op|'='
name|'tag'
op|','
name|'Maximum'
op|'='
number|'100'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'res'
op|'.'
name|'Datasets'
op|':'
newline|'\n'
indent|'                    '
name|'break'
newline|'\n'
dedent|''
name|'datasets'
op|'.'
name|'extend'
op|'('
name|'res'
op|'.'
name|'Datasets'
op|'.'
name|'DatasetInfo'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'.'
name|'DatasetListInfoIterEnd'
op|'('
name|'Tag'
op|'='
name|'tag'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'datasets'
newline|'\n'
nl|'\n'
DECL|member|_discover_dataset_luns
dedent|''
name|'def'
name|'_discover_dataset_luns'
op|'('
name|'self'
op|','
name|'dataset'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Discover all of the LUNs in a dataset."""'
newline|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'service'
newline|'\n'
name|'res'
op|'='
name|'server'
op|'.'
name|'DatasetMemberListInfoIterStart'
op|'('
nl|'\n'
name|'DatasetNameOrId'
op|'='
name|'dataset'
op|'.'
name|'id'
op|','
nl|'\n'
name|'IncludeExportsInfo'
op|'='
name|'True'
op|','
nl|'\n'
name|'IncludeIndirect'
op|'='
name|'True'
op|','
nl|'\n'
name|'MemberType'
op|'='
string|"'lun_path'"
op|')'
newline|'\n'
name|'tag'
op|'='
name|'res'
op|'.'
name|'Tag'
newline|'\n'
name|'suffix'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'volume'
op|':'
newline|'\n'
indent|'            '
name|'suffix'
op|'='
string|"'/'"
op|'+'
name|'volume'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                '
name|'res'
op|'='
name|'server'
op|'.'
name|'DatasetMemberListInfoIterNext'
op|'('
name|'Tag'
op|'='
name|'tag'
op|','
nl|'\n'
name|'Maximum'
op|'='
number|'100'
op|')'
newline|'\n'
name|'if'
op|'('
name|'not'
name|'hasattr'
op|'('
name|'res'
op|','
string|"'DatasetMembers'"
op|')'
name|'or'
nl|'\n'
name|'not'
name|'res'
op|'.'
name|'DatasetMembers'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'break'
newline|'\n'
dedent|''
name|'for'
name|'member'
name|'in'
name|'res'
op|'.'
name|'DatasetMembers'
op|'.'
name|'DatasetMemberInfo'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'suffix'
name|'and'
name|'not'
name|'member'
op|'.'
name|'MemberName'
op|'.'
name|'endswith'
op|'('
name|'suffix'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'continue'
newline|'\n'
comment|'# MemberName is the full LUN path in this format:'
nl|'\n'
comment|'# host:/volume/qtree/lun'
nl|'\n'
dedent|''
name|'lun'
op|'='
name|'DfmLun'
op|'('
name|'dataset'
op|','
name|'member'
op|'.'
name|'MemberName'
op|','
name|'member'
op|'.'
name|'MemberId'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'discovered_luns'
op|'.'
name|'append'
op|'('
name|'lun'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'.'
name|'DatasetMemberListInfoIterEnd'
op|'('
name|'Tag'
op|'='
name|'tag'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_discover_luns
dedent|''
dedent|''
name|'def'
name|'_discover_luns'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Discover the LUNs from DFM.\n\n        Discover all of the OpenStack-created datasets and LUNs in the DFM\n        database.\n        """'
newline|'\n'
name|'datasets'
op|'='
name|'self'
op|'.'
name|'_get_datasets'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'discovered_datasets'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'discovered_luns'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'dataset'
name|'in'
name|'datasets'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'dataset'
op|'.'
name|'DatasetName'
op|'.'
name|'startswith'
op|'('
name|'self'
op|'.'
name|'DATASET_PREFIX'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'if'
op|'('
name|'not'
name|'hasattr'
op|'('
name|'dataset'
op|','
string|"'DatasetMetadata'"
op|')'
name|'or'
nl|'\n'
name|'not'
name|'dataset'
op|'.'
name|'DatasetMetadata'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'project'
op|'='
name|'None'
newline|'\n'
name|'type'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'field'
name|'in'
name|'dataset'
op|'.'
name|'DatasetMetadata'
op|'.'
name|'DfmMetadataField'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'field'
op|'.'
name|'FieldName'
op|'=='
name|'self'
op|'.'
name|'DATASET_METADATA_PROJECT_KEY'
op|':'
newline|'\n'
indent|'                    '
name|'project'
op|'='
name|'field'
op|'.'
name|'FieldValue'
newline|'\n'
dedent|''
name|'elif'
name|'field'
op|'.'
name|'FieldName'
op|'=='
name|'self'
op|'.'
name|'DATASET_METADATA_VOL_TYPE_KEY'
op|':'
newline|'\n'
indent|'                    '
name|'type'
op|'='
name|'field'
op|'.'
name|'FieldValue'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'project'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'ds'
op|'='
name|'DfmDataset'
op|'('
name|'dataset'
op|'.'
name|'DatasetId'
op|','
name|'dataset'
op|'.'
name|'DatasetName'
op|','
nl|'\n'
name|'project'
op|','
name|'type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'discovered_datasets'
op|'.'
name|'append'
op|'('
name|'ds'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_discover_dataset_luns'
op|'('
name|'ds'
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
name|'dataset_count'
op|'='
name|'len'
op|'('
name|'self'
op|'.'
name|'discovered_datasets'
op|')'
newline|'\n'
name|'lun_count'
op|'='
name|'len'
op|'('
name|'self'
op|'.'
name|'discovered_luns'
op|')'
newline|'\n'
name|'msg'
op|'='
name|'_'
op|'('
string|'"Discovered %(dataset_count)s datasets and %(lun_count)s LUNs"'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'msg'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'lun_table'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_get_job_progress
dedent|''
name|'def'
name|'_get_job_progress'
op|'('
name|'self'
op|','
name|'job_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get progress of one running DFM job.\n\n        Obtain the latest progress report for the job and return the\n        list of progress events.\n        """'
newline|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'service'
newline|'\n'
name|'res'
op|'='
name|'server'
op|'.'
name|'DpJobProgressEventListIterStart'
op|'('
name|'JobId'
op|'='
name|'job_id'
op|')'
newline|'\n'
name|'tag'
op|'='
name|'res'
op|'.'
name|'Tag'
newline|'\n'
name|'event_list'
op|'='
op|'['
op|']'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                '
name|'res'
op|'='
name|'server'
op|'.'
name|'DpJobProgressEventListIterNext'
op|'('
name|'Tag'
op|'='
name|'tag'
op|','
nl|'\n'
name|'Maximum'
op|'='
number|'100'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'res'
op|','
string|"'ProgressEvents'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'break'
newline|'\n'
dedent|''
name|'event_list'
op|'+='
name|'res'
op|'.'
name|'ProgressEvents'
op|'.'
name|'DpJobProgressEventInfo'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'.'
name|'DpJobProgressEventListIterEnd'
op|'('
name|'Tag'
op|'='
name|'tag'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'event_list'
newline|'\n'
nl|'\n'
DECL|member|_wait_for_job
dedent|''
name|'def'
name|'_wait_for_job'
op|'('
name|'self'
op|','
name|'job_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Wait until a job terminates.\n\n        Poll the job until it completes or an error is detected. Return the\n        final list of progress events if it completes successfully.\n        """'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'events'
op|'='
name|'self'
op|'.'
name|'_get_job_progress'
op|'('
name|'job_id'
op|')'
newline|'\n'
name|'for'
name|'event'
name|'in'
name|'events'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'event'
op|'.'
name|'EventStatus'
op|'=='
string|"'error'"
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
name|'_'
op|'('
string|"'Job failed: %s'"
op|')'
op|'%'
nl|'\n'
op|'('
name|'event'
op|'.'
name|'ErrorMessage'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'event'
op|'.'
name|'EventType'
op|'=='
string|"'job-end'"
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'events'
newline|'\n'
dedent|''
dedent|''
name|'time'
op|'.'
name|'sleep'
op|'('
number|'5'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_dataset_name
dedent|''
dedent|''
name|'def'
name|'_dataset_name'
op|'('
name|'self'
op|','
name|'project'
op|','
name|'ss_type'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return the dataset name for a given project and volume type."""'
newline|'\n'
name|'_project'
op|'='
name|'project'
op|'.'
name|'replace'
op|'('
string|"' '"
op|','
string|"'_'"
op|')'
op|'.'
name|'replace'
op|'('
string|"'-'"
op|','
string|"'_'"
op|')'
newline|'\n'
name|'dataset_name'
op|'='
name|'self'
op|'.'
name|'DATASET_PREFIX'
op|'+'
name|'_project'
newline|'\n'
name|'if'
name|'not'
name|'ss_type'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'dataset_name'
newline|'\n'
dedent|''
name|'_type'
op|'='
name|'ss_type'
op|'.'
name|'replace'
op|'('
string|"' '"
op|','
string|"'_'"
op|')'
op|'.'
name|'replace'
op|'('
string|"'-'"
op|','
string|"'_'"
op|')'
newline|'\n'
name|'return'
name|'dataset_name'
op|'+'
string|"'_'"
op|'+'
name|'_type'
newline|'\n'
nl|'\n'
DECL|member|_get_dataset
dedent|''
name|'def'
name|'_get_dataset'
op|'('
name|'self'
op|','
name|'dataset_name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Lookup a dataset by name in the list of discovered datasets."""'
newline|'\n'
name|'for'
name|'dataset'
name|'in'
name|'self'
op|'.'
name|'discovered_datasets'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'dataset'
op|'.'
name|'name'
op|'=='
name|'dataset_name'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'dataset'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_create_dataset
dedent|''
name|'def'
name|'_create_dataset'
op|'('
name|'self'
op|','
name|'dataset_name'
op|','
name|'project'
op|','
name|'ss_type'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a new dataset using the storage service.\n\n        The export settings are set to create iSCSI LUNs aligned for Linux.\n        Returns the ID of the new dataset.\n        """'
newline|'\n'
name|'if'
name|'ss_type'
name|'and'
name|'not'
name|'self'
op|'.'
name|'storage_service_prefix'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|"'Attempt to use volume_type without specifying '"
nl|'\n'
string|"'netapp_storage_service_prefix flag.'"
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
op|'('
name|'ss_type'
name|'or'
name|'self'
op|'.'
name|'storage_service'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|"'You must set the netapp_storage_service flag in order to '"
nl|'\n'
string|"'create volumes with no volume_type.'"
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'storage_service'
op|'='
name|'self'
op|'.'
name|'storage_service'
newline|'\n'
name|'if'
name|'ss_type'
op|':'
newline|'\n'
indent|'            '
name|'storage_service'
op|'='
name|'self'
op|'.'
name|'storage_service_prefix'
op|'+'
name|'ss_type'
newline|'\n'
nl|'\n'
dedent|''
name|'factory'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'factory'
newline|'\n'
nl|'\n'
name|'lunmap'
op|'='
name|'factory'
op|'.'
name|'create'
op|'('
string|"'DatasetLunMappingInfo'"
op|')'
newline|'\n'
name|'lunmap'
op|'.'
name|'IgroupOsType'
op|'='
string|"'linux'"
newline|'\n'
name|'export'
op|'='
name|'factory'
op|'.'
name|'create'
op|'('
string|"'DatasetExportInfo'"
op|')'
newline|'\n'
name|'export'
op|'.'
name|'DatasetExportProtocol'
op|'='
string|"'iscsi'"
newline|'\n'
name|'export'
op|'.'
name|'DatasetLunMappingInfo'
op|'='
name|'lunmap'
newline|'\n'
name|'detail'
op|'='
name|'factory'
op|'.'
name|'create'
op|'('
string|"'StorageSetInfo'"
op|')'
newline|'\n'
name|'detail'
op|'.'
name|'DpNodeName'
op|'='
string|"'Primary data'"
newline|'\n'
name|'detail'
op|'.'
name|'DatasetExportInfo'
op|'='
name|'export'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'self'
op|','
string|"'vfiler'"
op|')'
name|'and'
name|'self'
op|'.'
name|'vfiler'
op|':'
newline|'\n'
indent|'            '
name|'detail'
op|'.'
name|'ServerNameOrId'
op|'='
name|'self'
op|'.'
name|'vfiler'
newline|'\n'
dedent|''
name|'details'
op|'='
name|'factory'
op|'.'
name|'create'
op|'('
string|"'ArrayOfStorageSetInfo'"
op|')'
newline|'\n'
name|'details'
op|'.'
name|'StorageSetInfo'
op|'='
op|'['
name|'detail'
op|']'
newline|'\n'
name|'field1'
op|'='
name|'factory'
op|'.'
name|'create'
op|'('
string|"'DfmMetadataField'"
op|')'
newline|'\n'
name|'field1'
op|'.'
name|'FieldName'
op|'='
name|'self'
op|'.'
name|'DATASET_METADATA_PROJECT_KEY'
newline|'\n'
name|'field1'
op|'.'
name|'FieldValue'
op|'='
name|'project'
newline|'\n'
name|'field2'
op|'='
name|'factory'
op|'.'
name|'create'
op|'('
string|"'DfmMetadataField'"
op|')'
newline|'\n'
name|'field2'
op|'.'
name|'FieldName'
op|'='
name|'self'
op|'.'
name|'DATASET_METADATA_VOL_TYPE_KEY'
newline|'\n'
name|'field2'
op|'.'
name|'FieldValue'
op|'='
name|'ss_type'
newline|'\n'
name|'metadata'
op|'='
name|'factory'
op|'.'
name|'create'
op|'('
string|"'ArrayOfDfmMetadataField'"
op|')'
newline|'\n'
name|'metadata'
op|'.'
name|'DfmMetadataField'
op|'='
op|'['
name|'field1'
op|','
name|'field2'
op|']'
newline|'\n'
nl|'\n'
name|'res'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'service'
op|'.'
name|'StorageServiceDatasetProvision'
op|'('
nl|'\n'
name|'StorageServiceNameOrId'
op|'='
name|'storage_service'
op|','
nl|'\n'
name|'DatasetName'
op|'='
name|'dataset_name'
op|','
nl|'\n'
name|'AssumeConfirmation'
op|'='
name|'True'
op|','
nl|'\n'
name|'StorageSetDetails'
op|'='
name|'details'
op|','
nl|'\n'
name|'DatasetMetadata'
op|'='
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
name|'ds'
op|'='
name|'DfmDataset'
op|'('
name|'res'
op|'.'
name|'DatasetId'
op|','
name|'dataset_name'
op|','
name|'project'
op|','
name|'ss_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'discovered_datasets'
op|'.'
name|'append'
op|'('
name|'ds'
op|')'
newline|'\n'
name|'return'
name|'ds'
newline|'\n'
nl|'\n'
DECL|member|_provision
dedent|''
name|'def'
name|'_provision'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'description'
op|','
name|'project'
op|','
name|'ss_type'
op|','
name|'size'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Provision a LUN through provisioning manager.\n\n        The LUN will be created inside a dataset associated with the project.\n        If the dataset doesn\'t already exist, we create it using the storage\n        service specified in the nova conf.\n        """'
newline|'\n'
name|'dataset_name'
op|'='
name|'self'
op|'.'
name|'_dataset_name'
op|'('
name|'project'
op|','
name|'ss_type'
op|')'
newline|'\n'
name|'dataset'
op|'='
name|'self'
op|'.'
name|'_get_dataset'
op|'('
name|'dataset_name'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'dataset'
op|':'
newline|'\n'
indent|'            '
name|'dataset'
op|'='
name|'self'
op|'.'
name|'_create_dataset'
op|'('
name|'dataset_name'
op|','
name|'project'
op|','
name|'ss_type'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'info'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'factory'
op|'.'
name|'create'
op|'('
string|"'ProvisionMemberRequestInfo'"
op|')'
newline|'\n'
name|'info'
op|'.'
name|'Name'
op|'='
name|'name'
newline|'\n'
name|'if'
name|'description'
op|':'
newline|'\n'
indent|'            '
name|'info'
op|'.'
name|'Description'
op|'='
name|'description'
newline|'\n'
dedent|''
name|'info'
op|'.'
name|'Size'
op|'='
name|'size'
newline|'\n'
name|'info'
op|'.'
name|'MaximumSnapshotSpace'
op|'='
number|'2'
op|'*'
name|'long'
op|'('
name|'size'
op|')'
newline|'\n'
nl|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'service'
newline|'\n'
name|'lock_id'
op|'='
name|'server'
op|'.'
name|'DatasetEditBegin'
op|'('
name|'DatasetNameOrId'
op|'='
name|'dataset'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'.'
name|'DatasetProvisionMember'
op|'('
name|'EditLockId'
op|'='
name|'lock_id'
op|','
nl|'\n'
name|'ProvisionMemberRequestInfo'
op|'='
name|'info'
op|')'
newline|'\n'
name|'res'
op|'='
name|'server'
op|'.'
name|'DatasetEditCommit'
op|'('
name|'EditLockId'
op|'='
name|'lock_id'
op|','
nl|'\n'
name|'AssumeConfirmation'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'suds'
op|'.'
name|'WebFault'
op|','
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'.'
name|'DatasetEditRollback'
op|'('
name|'EditLockId'
op|'='
name|'lock_id'
op|')'
newline|'\n'
name|'msg'
op|'='
name|'_'
op|'('
string|"'Failed to provision dataset member'"
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'lun_id'
op|'='
name|'None'
newline|'\n'
name|'lunpath'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'for'
name|'info'
name|'in'
name|'res'
op|'.'
name|'JobIds'
op|'.'
name|'JobInfo'
op|':'
newline|'\n'
indent|'            '
name|'events'
op|'='
name|'self'
op|'.'
name|'_wait_for_job'
op|'('
name|'info'
op|'.'
name|'JobId'
op|')'
newline|'\n'
name|'for'
name|'event'
name|'in'
name|'events'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'event'
op|'.'
name|'EventType'
op|'!='
string|"'lun-create'"
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
name|'lunpath'
op|'='
name|'event'
op|'.'
name|'ProgressLunInfo'
op|'.'
name|'LunName'
newline|'\n'
name|'lun_id'
op|'='
name|'event'
op|'.'
name|'ProgressLunInfo'
op|'.'
name|'LunPathId'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'lun_id'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|"'No LUN was created by the provision job'"
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'lun'
op|'='
name|'DfmLun'
op|'('
name|'dataset'
op|','
name|'lunpath'
op|','
name|'lun_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'discovered_luns'
op|'.'
name|'append'
op|'('
name|'lun'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'lun_table'
op|'['
name|'name'
op|']'
op|'='
name|'lun'
newline|'\n'
nl|'\n'
DECL|member|_get_ss_type
dedent|''
name|'def'
name|'_get_ss_type'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get the storage service type for a volume."""'
newline|'\n'
name|'id'
op|'='
name|'volume'
op|'['
string|"'volume_type_id'"
op|']'
newline|'\n'
name|'if'
name|'not'
name|'id'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'volume_type'
op|'='
name|'volume_types'
op|'.'
name|'get_volume_type'
op|'('
name|'None'
op|','
name|'id'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'volume_type'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'volume_type'
op|'['
string|"'name'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|_remove_destroy
dedent|''
name|'def'
name|'_remove_destroy'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'project'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Remove the LUN from the dataset, also destroying it.\n\n        Remove the LUN from the dataset and destroy the actual LUN on the\n        storage system.\n        """'
newline|'\n'
name|'lun'
op|'='
name|'self'
op|'.'
name|'_lookup_lun_for_volume'
op|'('
name|'name'
op|','
name|'project'
op|')'
newline|'\n'
name|'member'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'factory'
op|'.'
name|'create'
op|'('
string|"'DatasetMemberParameter'"
op|')'
newline|'\n'
name|'member'
op|'.'
name|'ObjectNameOrId'
op|'='
name|'lun'
op|'.'
name|'id'
newline|'\n'
name|'members'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'factory'
op|'.'
name|'create'
op|'('
string|"'ArrayOfDatasetMemberParameter'"
op|')'
newline|'\n'
name|'members'
op|'.'
name|'DatasetMemberParameter'
op|'='
op|'['
name|'member'
op|']'
newline|'\n'
nl|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'service'
newline|'\n'
name|'lock_id'
op|'='
name|'server'
op|'.'
name|'DatasetEditBegin'
op|'('
name|'DatasetNameOrId'
op|'='
name|'lun'
op|'.'
name|'dataset'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'.'
name|'DatasetRemoveMember'
op|'('
name|'EditLockId'
op|'='
name|'lock_id'
op|','
name|'Destroy'
op|'='
name|'True'
op|','
nl|'\n'
name|'DatasetMemberParameters'
op|'='
name|'members'
op|')'
newline|'\n'
name|'server'
op|'.'
name|'DatasetEditCommit'
op|'('
name|'EditLockId'
op|'='
name|'lock_id'
op|','
nl|'\n'
name|'AssumeConfirmation'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'suds'
op|'.'
name|'WebFault'
op|','
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'.'
name|'DatasetEditRollback'
op|'('
name|'EditLockId'
op|'='
name|'lock_id'
op|')'
newline|'\n'
name|'msg'
op|'='
name|'_'
op|'('
string|"'Failed to remove and delete dataset member'"
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_volume
dedent|''
dedent|''
name|'def'
name|'create_volume'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Driver entry point for creating a new volume."""'
newline|'\n'
name|'default_size'
op|'='
string|"'104857600'"
comment|'# 100 MB'
newline|'\n'
name|'gigabytes'
op|'='
number|'1073741824L'
comment|'# 2^30'
newline|'\n'
name|'name'
op|'='
name|'volume'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'project'
op|'='
name|'volume'
op|'['
string|"'project_id'"
op|']'
newline|'\n'
name|'display_name'
op|'='
name|'volume'
op|'['
string|"'display_name'"
op|']'
newline|'\n'
name|'display_description'
op|'='
name|'volume'
op|'['
string|"'display_description'"
op|']'
newline|'\n'
name|'description'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'display_name'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'display_description'
op|':'
newline|'\n'
indent|'                '
name|'description'
op|'='
name|'display_name'
op|'+'
string|'"\\n"'
op|'+'
name|'display_description'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'description'
op|'='
name|'display_name'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'display_description'
op|':'
newline|'\n'
indent|'            '
name|'description'
op|'='
name|'display_description'
newline|'\n'
dedent|''
name|'if'
name|'int'
op|'('
name|'volume'
op|'['
string|"'size'"
op|']'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'size'
op|'='
name|'default_size'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'size'
op|'='
name|'str'
op|'('
name|'int'
op|'('
name|'volume'
op|'['
string|"'size'"
op|']'
op|')'
op|'*'
name|'gigabytes'
op|')'
newline|'\n'
dedent|''
name|'ss_type'
op|'='
name|'self'
op|'.'
name|'_get_ss_type'
op|'('
name|'volume'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_provision'
op|'('
name|'name'
op|','
name|'description'
op|','
name|'project'
op|','
name|'ss_type'
op|','
name|'size'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_lookup_lun_for_volume
dedent|''
name|'def'
name|'_lookup_lun_for_volume'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'project'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Lookup the LUN that corresponds to the give volume.\n\n        Initial lookups involve a table scan of all of the discovered LUNs,\n        but later lookups are done instantly from the hashtable.\n        """'
newline|'\n'
name|'if'
name|'name'
name|'in'
name|'self'
op|'.'
name|'lun_table'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'lun_table'
op|'['
name|'name'
op|']'
newline|'\n'
dedent|''
name|'lunpath_suffix'
op|'='
string|"'/'"
op|'+'
name|'name'
newline|'\n'
name|'for'
name|'lun'
name|'in'
name|'self'
op|'.'
name|'discovered_luns'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'lun'
op|'.'
name|'dataset'
op|'.'
name|'project'
op|'!='
name|'project'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'lun'
op|'.'
name|'lunpath'
op|'.'
name|'endswith'
op|'('
name|'lunpath_suffix'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'lun_table'
op|'['
name|'name'
op|']'
op|'='
name|'lun'
newline|'\n'
name|'return'
name|'lun'
newline|'\n'
dedent|''
dedent|''
name|'msg'
op|'='
name|'_'
op|'('
string|'"No entry in LUN table for volume %s"'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
name|'msg'
op|'%'
op|'('
name|'name'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_volume
dedent|''
name|'def'
name|'delete_volume'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Driver entry point for destroying existing volumes."""'
newline|'\n'
name|'name'
op|'='
name|'volume'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'project'
op|'='
name|'volume'
op|'['
string|"'project_id'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_remove_destroy'
op|'('
name|'name'
op|','
name|'project'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_lun_details
dedent|''
name|'def'
name|'_get_lun_details'
op|'('
name|'self'
op|','
name|'lun_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Given the ID of a LUN, get the details about that LUN."""'
newline|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'service'
newline|'\n'
name|'res'
op|'='
name|'server'
op|'.'
name|'LunListInfoIterStart'
op|'('
name|'ObjectNameOrId'
op|'='
name|'lun_id'
op|')'
newline|'\n'
name|'tag'
op|'='
name|'res'
op|'.'
name|'Tag'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'res'
op|'='
name|'server'
op|'.'
name|'LunListInfoIterNext'
op|'('
name|'Tag'
op|'='
name|'tag'
op|','
name|'Maximum'
op|'='
number|'1'
op|')'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'res'
op|','
string|"'Luns'"
op|')'
name|'and'
name|'res'
op|'.'
name|'Luns'
op|'.'
name|'LunInfo'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'res'
op|'.'
name|'Luns'
op|'.'
name|'LunInfo'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'.'
name|'LunListInfoIterEnd'
op|'('
name|'Tag'
op|'='
name|'tag'
op|')'
newline|'\n'
dedent|''
name|'msg'
op|'='
name|'_'
op|'('
string|"'Failed to get LUN details for LUN ID %s'"
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
name|'msg'
op|'%'
name|'lun_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_host_details
dedent|''
name|'def'
name|'_get_host_details'
op|'('
name|'self'
op|','
name|'host_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Given the ID of a host, get the details about it.\n\n        A "host" is a storage system here.\n        """'
newline|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'service'
newline|'\n'
name|'res'
op|'='
name|'server'
op|'.'
name|'HostListInfoIterStart'
op|'('
name|'ObjectNameOrId'
op|'='
name|'host_id'
op|')'
newline|'\n'
name|'tag'
op|'='
name|'res'
op|'.'
name|'Tag'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'res'
op|'='
name|'server'
op|'.'
name|'HostListInfoIterNext'
op|'('
name|'Tag'
op|'='
name|'tag'
op|','
name|'Maximum'
op|'='
number|'1'
op|')'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'res'
op|','
string|"'Hosts'"
op|')'
name|'and'
name|'res'
op|'.'
name|'Hosts'
op|'.'
name|'HostInfo'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'res'
op|'.'
name|'Hosts'
op|'.'
name|'HostInfo'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'.'
name|'HostListInfoIterEnd'
op|'('
name|'Tag'
op|'='
name|'tag'
op|')'
newline|'\n'
dedent|''
name|'msg'
op|'='
name|'_'
op|'('
string|"'Failed to get host details for host ID %s'"
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
name|'msg'
op|'%'
name|'host_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_iqn_for_host
dedent|''
name|'def'
name|'_get_iqn_for_host'
op|'('
name|'self'
op|','
name|'host_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get the iSCSI Target Name for a storage system."""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'factory'
op|'.'
name|'create'
op|'('
string|"'Request'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'Name'
op|'='
string|"'iscsi-node-get-name'"
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'service'
op|'.'
name|'ApiProxy'
op|'('
name|'Target'
op|'='
name|'host_id'
op|','
nl|'\n'
name|'Request'
op|'='
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_fail'
op|'('
name|'request'
op|','
name|'response'
op|')'
newline|'\n'
name|'return'
name|'response'
op|'.'
name|'Results'
op|'['
string|"'node-name'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_api_elem_is_empty
dedent|''
name|'def'
name|'_api_elem_is_empty'
op|'('
name|'self'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return true if the API element should be considered empty.\n\n        Helper routine to figure out if a list returned from a proxy API\n        is empty. This is necessary because the API proxy produces nasty\n        looking XML.\n        """'
newline|'\n'
name|'if'
name|'not'
name|'type'
op|'('
name|'elem'
op|')'
name|'is'
name|'list'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'if'
number|'0'
op|'=='
name|'len'
op|'('
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'child'
op|'='
name|'elem'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'child'
op|','
name|'text'
op|'.'
name|'Text'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'if'
name|'type'
op|'('
name|'child'
op|')'
name|'is'
name|'str'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|member|_get_target_portal_for_host
dedent|''
name|'def'
name|'_get_target_portal_for_host'
op|'('
name|'self'
op|','
name|'host_id'
op|','
name|'host_address'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get iSCSI target portal for a storage system.\n\n        Get the iSCSI Target Portal details for a particular IP address\n        on a storage system.\n        """'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'factory'
op|'.'
name|'create'
op|'('
string|"'Request'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'Name'
op|'='
string|"'iscsi-portal-list-info'"
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'service'
op|'.'
name|'ApiProxy'
op|'('
name|'Target'
op|'='
name|'host_id'
op|','
nl|'\n'
name|'Request'
op|'='
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_fail'
op|'('
name|'request'
op|','
name|'response'
op|')'
newline|'\n'
name|'portal'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'portals'
op|'='
name|'response'
op|'.'
name|'Results'
op|'['
string|"'iscsi-portal-list-entries'"
op|']'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_api_elem_is_empty'
op|'('
name|'portals'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'portal'
newline|'\n'
dedent|''
name|'portal_infos'
op|'='
name|'portals'
op|'['
number|'0'
op|']'
op|'['
string|"'iscsi-portal-list-entry-info'"
op|']'
newline|'\n'
name|'for'
name|'portal_info'
name|'in'
name|'portal_infos'
op|':'
newline|'\n'
indent|'            '
name|'portal'
op|'['
string|"'address'"
op|']'
op|'='
name|'portal_info'
op|'['
string|"'ip-address'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'portal'
op|'['
string|"'port'"
op|']'
op|'='
name|'portal_info'
op|'['
string|"'ip-port'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'portal'
op|'['
string|"'portal'"
op|']'
op|'='
name|'portal_info'
op|'['
string|"'tpgroup-tag'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'host_address'
op|'=='
name|'portal'
op|'['
string|"'address'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'portal'
newline|'\n'
nl|'\n'
DECL|member|_get_export
dedent|''
name|'def'
name|'_get_export'
op|'('
name|'self'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get the iSCSI export details for a volume.\n\n        Looks up the LUN in DFM based on the volume and project name, then get\n        the LUN\'s ID. We store that value in the database instead of the iSCSI\n        details because we will not have the true iSCSI details until masking\n        time (when initialize_connection() is called).\n        """'
newline|'\n'
name|'name'
op|'='
name|'volume'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'project'
op|'='
name|'volume'
op|'['
string|"'project_id'"
op|']'
newline|'\n'
name|'lun'
op|'='
name|'self'
op|'.'
name|'_lookup_lun_for_volume'
op|'('
name|'name'
op|','
name|'project'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'provider_location'"
op|':'
name|'lun'
op|'.'
name|'id'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|ensure_export
dedent|''
name|'def'
name|'ensure_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Driver entry point to get the export info for an existing volume."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_get_export'
op|'('
name|'volume'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_export
dedent|''
name|'def'
name|'create_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Driver entry point to get the export info for a new volume."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_get_export'
op|'('
name|'volume'
op|')'
newline|'\n'
nl|'\n'
DECL|member|remove_export
dedent|''
name|'def'
name|'remove_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Driver exntry point to remove an export for a volume.\n\n        Since exporting is idempotent in this driver, we have nothing\n        to do for unexporting.\n        """'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|_find_igroup_for_initiator
dedent|''
name|'def'
name|'_find_igroup_for_initiator'
op|'('
name|'self'
op|','
name|'host_id'
op|','
name|'initiator_name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get the igroup for an initiator.\n\n        Look for an existing igroup (initiator group) on the storage system\n        containing a given iSCSI initiator and return the name of the igroup.\n        """'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'factory'
op|'.'
name|'create'
op|'('
string|"'Request'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'Name'
op|'='
string|"'igroup-list-info'"
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'service'
op|'.'
name|'ApiProxy'
op|'('
name|'Target'
op|'='
name|'host_id'
op|','
nl|'\n'
name|'Request'
op|'='
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_fail'
op|'('
name|'request'
op|','
name|'response'
op|')'
newline|'\n'
name|'igroups'
op|'='
name|'response'
op|'.'
name|'Results'
op|'['
string|"'initiator-groups'"
op|']'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_api_elem_is_empty'
op|'('
name|'igroups'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'igroup_infos'
op|'='
name|'igroups'
op|'['
number|'0'
op|']'
op|'['
string|"'initiator-group-info'"
op|']'
newline|'\n'
name|'for'
name|'igroup_info'
name|'in'
name|'igroup_infos'
op|':'
newline|'\n'
indent|'            '
name|'if'
op|'('
string|"'iscsi'"
op|'!='
name|'igroup_info'
op|'['
string|"'initiator-group-type'"
op|']'
op|'['
number|'0'
op|']'
name|'or'
nl|'\n'
string|"'linux'"
op|'!='
name|'igroup_info'
op|'['
string|"'initiator-group-os-type'"
op|']'
op|'['
number|'0'
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'igroup_name'
op|'='
name|'igroup_info'
op|'['
string|"'initiator-group-name'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'igroup_name'
op|'.'
name|'startswith'
op|'('
name|'self'
op|'.'
name|'IGROUP_PREFIX'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'initiators'
op|'='
name|'igroup_info'
op|'['
string|"'initiators'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'initiator-info'"
op|']'
newline|'\n'
name|'for'
name|'initiator'
name|'in'
name|'initiators'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'initiator_name'
op|'=='
name|'initiator'
op|'['
string|"'initiator-name'"
op|']'
op|'['
number|'0'
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'igroup_name'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_create_igroup
dedent|''
name|'def'
name|'_create_igroup'
op|'('
name|'self'
op|','
name|'host_id'
op|','
name|'initiator_name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a new igroup.\n\n        Create a new igroup (initiator group) on the storage system to hold\n        the given iSCSI initiator. The group will only have 1 member and will\n        be named "openstack-${initiator_name}".\n        """'
newline|'\n'
name|'igroup_name'
op|'='
name|'self'
op|'.'
name|'IGROUP_PREFIX'
op|'+'
name|'initiator_name'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'factory'
op|'.'
name|'create'
op|'('
string|"'Request'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'Name'
op|'='
string|"'igroup-create'"
newline|'\n'
name|'igroup_create_xml'
op|'='
op|'('
nl|'\n'
string|"'<initiator-group-name>%s</initiator-group-name>'"
nl|'\n'
string|"'<initiator-group-type>iscsi</initiator-group-type>'"
nl|'\n'
string|"'<os-type>linux</os-type><ostype>linux</ostype>'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'Args'
op|'='
name|'text'
op|'.'
name|'Raw'
op|'('
name|'igroup_create_xml'
op|'%'
name|'igroup_name'
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'service'
op|'.'
name|'ApiProxy'
op|'('
name|'Target'
op|'='
name|'host_id'
op|','
nl|'\n'
name|'Request'
op|'='
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_fail'
op|'('
name|'request'
op|','
name|'response'
op|')'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'factory'
op|'.'
name|'create'
op|'('
string|"'Request'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'Name'
op|'='
string|"'igroup-add'"
newline|'\n'
name|'igroup_add_xml'
op|'='
op|'('
nl|'\n'
string|"'<initiator-group-name>%s</initiator-group-name>'"
nl|'\n'
string|"'<initiator>%s</initiator>'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'Args'
op|'='
name|'text'
op|'.'
name|'Raw'
op|'('
name|'igroup_add_xml'
op|'%'
op|'('
name|'igroup_name'
op|','
name|'initiator_name'
op|')'
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'service'
op|'.'
name|'ApiProxy'
op|'('
name|'Target'
op|'='
name|'host_id'
op|','
nl|'\n'
name|'Request'
op|'='
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_fail'
op|'('
name|'request'
op|','
name|'response'
op|')'
newline|'\n'
name|'return'
name|'igroup_name'
newline|'\n'
nl|'\n'
DECL|member|_get_lun_mappping
dedent|''
name|'def'
name|'_get_lun_mappping'
op|'('
name|'self'
op|','
name|'host_id'
op|','
name|'lunpath'
op|','
name|'igroup_name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get the mapping between a LUN and an igroup.\n\n        Check if a given LUN is already mapped to the given igroup (initiator\n        group). If the LUN is mapped, also return the LUN number for the\n        mapping.\n        """'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'factory'
op|'.'
name|'create'
op|'('
string|"'Request'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'Name'
op|'='
string|"'lun-map-list-info'"
newline|'\n'
name|'request'
op|'.'
name|'Args'
op|'='
name|'text'
op|'.'
name|'Raw'
op|'('
string|"'<path>%s</path>'"
op|'%'
op|'('
name|'lunpath'
op|')'
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'service'
op|'.'
name|'ApiProxy'
op|'('
name|'Target'
op|'='
name|'host_id'
op|','
nl|'\n'
name|'Request'
op|'='
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_fail'
op|'('
name|'request'
op|','
name|'response'
op|')'
newline|'\n'
name|'igroups'
op|'='
name|'response'
op|'.'
name|'Results'
op|'['
string|"'initiator-groups'"
op|']'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_api_elem_is_empty'
op|'('
name|'igroups'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'mapped'"
op|':'
name|'False'
op|'}'
newline|'\n'
dedent|''
name|'igroup_infos'
op|'='
name|'igroups'
op|'['
number|'0'
op|']'
op|'['
string|"'initiator-group-info'"
op|']'
newline|'\n'
name|'for'
name|'igroup_info'
name|'in'
name|'igroup_infos'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'igroup_name'
op|'=='
name|'igroup_info'
op|'['
string|"'initiator-group-name'"
op|']'
op|'['
number|'0'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'mapped'"
op|':'
name|'True'
op|','
string|"'lun_num'"
op|':'
name|'igroup_info'
op|'['
string|"'lun-id'"
op|']'
op|'['
number|'0'
op|']'
op|'}'
newline|'\n'
dedent|''
dedent|''
name|'return'
op|'{'
string|"'mapped'"
op|':'
name|'False'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_map_initiator
dedent|''
name|'def'
name|'_map_initiator'
op|'('
name|'self'
op|','
name|'host_id'
op|','
name|'lunpath'
op|','
name|'igroup_name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Map a LUN to an igroup.\n\n        Map the given LUN to the given igroup (initiator group). Return the LUN\n        number that the LUN was mapped to (the filer will choose the lowest\n        available number).\n        """'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'factory'
op|'.'
name|'create'
op|'('
string|"'Request'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'Name'
op|'='
string|"'lun-map'"
newline|'\n'
name|'lun_map_xml'
op|'='
op|'('
string|"'<initiator-group>%s</initiator-group>'"
nl|'\n'
string|"'<path>%s</path>'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'Args'
op|'='
name|'text'
op|'.'
name|'Raw'
op|'('
name|'lun_map_xml'
op|'%'
op|'('
name|'igroup_name'
op|','
name|'lunpath'
op|')'
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'service'
op|'.'
name|'ApiProxy'
op|'('
name|'Target'
op|'='
name|'host_id'
op|','
nl|'\n'
name|'Request'
op|'='
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_fail'
op|'('
name|'request'
op|','
name|'response'
op|')'
newline|'\n'
name|'return'
name|'response'
op|'.'
name|'Results'
op|'['
string|"'lun-id-assigned'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_unmap_initiator
dedent|''
name|'def'
name|'_unmap_initiator'
op|'('
name|'self'
op|','
name|'host_id'
op|','
name|'lunpath'
op|','
name|'igroup_name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Unmap the given LUN from the given igroup (initiator group)."""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'factory'
op|'.'
name|'create'
op|'('
string|"'Request'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'Name'
op|'='
string|"'lun-unmap'"
newline|'\n'
name|'lun_unmap_xml'
op|'='
op|'('
string|"'<initiator-group>%s</initiator-group>'"
nl|'\n'
string|"'<path>%s</path>'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'Args'
op|'='
name|'text'
op|'.'
name|'Raw'
op|'('
name|'lun_unmap_xml'
op|'%'
op|'('
name|'igroup_name'
op|','
name|'lunpath'
op|')'
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'service'
op|'.'
name|'ApiProxy'
op|'('
name|'Target'
op|'='
name|'host_id'
op|','
nl|'\n'
name|'Request'
op|'='
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_fail'
op|'('
name|'request'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_ensure_initiator_mapped
dedent|''
name|'def'
name|'_ensure_initiator_mapped'
op|'('
name|'self'
op|','
name|'host_id'
op|','
name|'lunpath'
op|','
name|'initiator_name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure that a LUN is mapped to a particular initiator.\n\n        Check if a LUN is mapped to a given initiator already and create\n        the mapping if it is not. A new igroup will be created if needed.\n        Returns the LUN number for the mapping between the LUN and initiator\n        in both cases.\n        """'
newline|'\n'
name|'lunpath'
op|'='
string|"'/vol/'"
op|'+'
name|'lunpath'
newline|'\n'
name|'igroup_name'
op|'='
name|'self'
op|'.'
name|'_find_igroup_for_initiator'
op|'('
name|'host_id'
op|','
name|'initiator_name'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'igroup_name'
op|':'
newline|'\n'
indent|'            '
name|'igroup_name'
op|'='
name|'self'
op|'.'
name|'_create_igroup'
op|'('
name|'host_id'
op|','
name|'initiator_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mapping'
op|'='
name|'self'
op|'.'
name|'_get_lun_mappping'
op|'('
name|'host_id'
op|','
name|'lunpath'
op|','
name|'igroup_name'
op|')'
newline|'\n'
name|'if'
name|'mapping'
op|'['
string|"'mapped'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'mapping'
op|'['
string|"'lun_num'"
op|']'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_map_initiator'
op|'('
name|'host_id'
op|','
name|'lunpath'
op|','
name|'igroup_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_ensure_initiator_unmapped
dedent|''
name|'def'
name|'_ensure_initiator_unmapped'
op|'('
name|'self'
op|','
name|'host_id'
op|','
name|'lunpath'
op|','
name|'initiator_name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure that a LUN is not mapped to a particular initiator.\n\n        Check if a LUN is mapped to a given initiator and remove the\n        mapping if it is. This does not destroy the igroup.\n        """'
newline|'\n'
name|'lunpath'
op|'='
string|"'/vol/'"
op|'+'
name|'lunpath'
newline|'\n'
name|'igroup_name'
op|'='
name|'self'
op|'.'
name|'_find_igroup_for_initiator'
op|'('
name|'host_id'
op|','
name|'initiator_name'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'igroup_name'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'mapping'
op|'='
name|'self'
op|'.'
name|'_get_lun_mappping'
op|'('
name|'host_id'
op|','
name|'lunpath'
op|','
name|'igroup_name'
op|')'
newline|'\n'
name|'if'
name|'mapping'
op|'['
string|"'mapped'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_unmap_initiator'
op|'('
name|'host_id'
op|','
name|'lunpath'
op|','
name|'igroup_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|initialize_connection
dedent|''
dedent|''
name|'def'
name|'initialize_connection'
op|'('
name|'self'
op|','
name|'volume'
op|','
name|'connector'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Driver entry point to attach a volume to an instance.\n\n        Do the LUN masking on the storage system so the initiator can access\n        the LUN on the target. Also return the iSCSI properties so the\n        initiator can find the LUN. This implementation does not call\n        _get_iscsi_properties() to get the properties because cannot store the\n        LUN number in the database. We only find out what the LUN number will\n        be during this method call so we construct the properties dictionary\n        ourselves.\n        """'
newline|'\n'
name|'initiator_name'
op|'='
name|'connector'
op|'['
string|"'initiator'"
op|']'
newline|'\n'
name|'lun_id'
op|'='
name|'volume'
op|'['
string|"'provider_location'"
op|']'
newline|'\n'
name|'if'
name|'not'
name|'lun_id'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|'"No LUN ID for volume %s"'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
name|'msg'
op|'%'
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'lun'
op|'='
name|'self'
op|'.'
name|'_get_lun_details'
op|'('
name|'lun_id'
op|')'
newline|'\n'
name|'lun_num'
op|'='
name|'self'
op|'.'
name|'_ensure_initiator_mapped'
op|'('
name|'lun'
op|'.'
name|'HostId'
op|','
name|'lun'
op|'.'
name|'LunPath'
op|','
nl|'\n'
name|'initiator_name'
op|')'
newline|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'_get_host_details'
op|'('
name|'lun'
op|'.'
name|'HostId'
op|')'
newline|'\n'
name|'portal'
op|'='
name|'self'
op|'.'
name|'_get_target_portal_for_host'
op|'('
name|'host'
op|'.'
name|'HostId'
op|','
nl|'\n'
name|'host'
op|'.'
name|'HostAddress'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'portal'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|"'Failed to get target portal for filer: %s'"
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
name|'msg'
op|'%'
name|'host'
op|'.'
name|'HostName'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'iqn'
op|'='
name|'self'
op|'.'
name|'_get_iqn_for_host'
op|'('
name|'host'
op|'.'
name|'HostId'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'iqn'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|"'Failed to get target IQN for filer: %s'"
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
name|'msg'
op|'%'
name|'host'
op|'.'
name|'HostName'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'properties'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'properties'
op|'['
string|"'target_discovered'"
op|']'
op|'='
name|'False'
newline|'\n'
op|'('
name|'address'
op|','
name|'port'
op|')'
op|'='
op|'('
name|'portal'
op|'['
string|"'address'"
op|']'
op|','
name|'portal'
op|'['
string|"'port'"
op|']'
op|')'
newline|'\n'
name|'properties'
op|'['
string|"'target_portal'"
op|']'
op|'='
string|"'%s:%s'"
op|'%'
op|'('
name|'address'
op|','
name|'port'
op|')'
newline|'\n'
name|'properties'
op|'['
string|"'target_iqn'"
op|']'
op|'='
name|'iqn'
newline|'\n'
name|'properties'
op|'['
string|"'target_lun'"
op|']'
op|'='
name|'lun_num'
newline|'\n'
name|'properties'
op|'['
string|"'volume_id'"
op|']'
op|'='
name|'volume'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
name|'auth'
op|'='
name|'volume'
op|'['
string|"'provider_auth'"
op|']'
newline|'\n'
name|'if'
name|'auth'
op|':'
newline|'\n'
indent|'            '
op|'('
name|'auth_method'
op|','
name|'auth_username'
op|','
name|'auth_secret'
op|')'
op|'='
name|'auth'
op|'.'
name|'split'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'properties'
op|'['
string|"'auth_method'"
op|']'
op|'='
name|'auth_method'
newline|'\n'
name|'properties'
op|'['
string|"'auth_username'"
op|']'
op|'='
name|'auth_username'
newline|'\n'
name|'properties'
op|'['
string|"'auth_password'"
op|']'
op|'='
name|'auth_secret'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
op|'{'
nl|'\n'
string|"'driver_volume_type'"
op|':'
string|"'iscsi'"
op|','
nl|'\n'
string|"'data'"
op|':'
name|'properties'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|terminate_connection
dedent|''
name|'def'
name|'terminate_connection'
op|'('
name|'self'
op|','
name|'volume'
op|','
name|'connector'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Driver entry point to unattach a volume from an instance.\n\n        Unmask the LUN on the storage system so the given intiator can no\n        longer access it.\n        """'
newline|'\n'
name|'initiator_name'
op|'='
name|'connector'
op|'['
string|"'initiator'"
op|']'
newline|'\n'
name|'lun_id'
op|'='
name|'volume'
op|'['
string|"'provider_location'"
op|']'
newline|'\n'
name|'if'
name|'not'
name|'lun_id'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|"'No LUN ID for volume %s'"
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
name|'msg'
op|'%'
op|'('
name|'volume'
op|'['
string|"'name'"
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'lun'
op|'='
name|'self'
op|'.'
name|'_get_lun_details'
op|'('
name|'lun_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_ensure_initiator_unmapped'
op|'('
name|'lun'
op|'.'
name|'HostId'
op|','
name|'lun'
op|'.'
name|'LunPath'
op|','
nl|'\n'
name|'initiator_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_is_clone_done
dedent|''
name|'def'
name|'_is_clone_done'
op|'('
name|'self'
op|','
name|'host_id'
op|','
name|'clone_op_id'
op|','
name|'volume_uuid'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Check the status of a clone operation.\n\n        Return True if done, False otherwise.\n        """'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'factory'
op|'.'
name|'create'
op|'('
string|"'Request'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'Name'
op|'='
string|"'clone-list-status'"
newline|'\n'
name|'clone_list_status_xml'
op|'='
op|'('
nl|'\n'
string|"'<clone-id><clone-id-info>'"
nl|'\n'
string|"'<clone-op-id>%s</clone-op-id>'"
nl|'\n'
string|"'<volume-uuid>%s</volume-uuid>'"
nl|'\n'
string|"'</clone-id-info></clone-id>'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'Args'
op|'='
name|'text'
op|'.'
name|'Raw'
op|'('
name|'clone_list_status_xml'
op|'%'
op|'('
name|'clone_op_id'
op|','
nl|'\n'
name|'volume_uuid'
op|')'
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'service'
op|'.'
name|'ApiProxy'
op|'('
name|'Target'
op|'='
name|'host_id'
op|','
nl|'\n'
name|'Request'
op|'='
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_fail'
op|'('
name|'request'
op|','
name|'response'
op|')'
newline|'\n'
name|'status'
op|'='
name|'response'
op|'.'
name|'Results'
op|'['
string|"'status'"
op|']'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_api_elem_is_empty'
op|'('
name|'status'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'ops_info'
op|'='
name|'status'
op|'['
number|'0'
op|']'
op|'['
string|"'ops-info'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'state'
op|'='
name|'ops_info'
op|'['
string|"'clone-state'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'return'
string|"'completed'"
op|'=='
name|'state'
newline|'\n'
nl|'\n'
DECL|member|_clone_lun
dedent|''
name|'def'
name|'_clone_lun'
op|'('
name|'self'
op|','
name|'host_id'
op|','
name|'src_path'
op|','
name|'dest_path'
op|','
name|'snap'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a clone of a NetApp LUN.\n\n        The clone initially consumes no space and is not space reserved.\n        """'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'factory'
op|'.'
name|'create'
op|'('
string|"'Request'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'Name'
op|'='
string|"'clone-start'"
newline|'\n'
name|'clone_start_xml'
op|'='
op|'('
nl|'\n'
string|"'<source-path>%s</source-path><no-snap>%s</no-snap>'"
nl|'\n'
string|"'<destination-path>%s</destination-path>'"
op|')'
newline|'\n'
name|'if'
name|'snap'
op|':'
newline|'\n'
indent|'            '
name|'no_snap'
op|'='
string|"'false'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'no_snap'
op|'='
string|"'true'"
newline|'\n'
dedent|''
name|'request'
op|'.'
name|'Args'
op|'='
name|'text'
op|'.'
name|'Raw'
op|'('
name|'clone_start_xml'
op|'%'
op|'('
name|'src_path'
op|','
name|'no_snap'
op|','
nl|'\n'
name|'dest_path'
op|')'
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'service'
op|'.'
name|'ApiProxy'
op|'('
name|'Target'
op|'='
name|'host_id'
op|','
nl|'\n'
name|'Request'
op|'='
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_fail'
op|'('
name|'request'
op|','
name|'response'
op|')'
newline|'\n'
name|'clone_id'
op|'='
name|'response'
op|'.'
name|'Results'
op|'['
string|"'clone-id'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'clone_id_info'
op|'='
name|'clone_id'
op|'['
string|"'clone-id-info'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'clone_op_id'
op|'='
name|'clone_id_info'
op|'['
string|"'clone-op-id'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'volume_uuid'
op|'='
name|'clone_id_info'
op|'['
string|"'volume-uuid'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'while'
name|'not'
name|'self'
op|'.'
name|'_is_clone_done'
op|'('
name|'host_id'
op|','
name|'clone_op_id'
op|','
name|'volume_uuid'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'time'
op|'.'
name|'sleep'
op|'('
number|'5'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_refresh_dfm_luns
dedent|''
dedent|''
name|'def'
name|'_refresh_dfm_luns'
op|'('
name|'self'
op|','
name|'host_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Refresh the LUN list for one filer in DFM."""'
newline|'\n'
name|'server'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'service'
newline|'\n'
name|'server'
op|'.'
name|'DfmObjectRefresh'
op|'('
name|'ObjectNameOrId'
op|'='
name|'host_id'
op|','
name|'ChildType'
op|'='
string|"'lun_path'"
op|')'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'time'
op|'.'
name|'sleep'
op|'('
number|'15'
op|')'
newline|'\n'
name|'res'
op|'='
name|'server'
op|'.'
name|'DfmMonitorTimestampList'
op|'('
name|'HostNameOrId'
op|'='
name|'host_id'
op|')'
newline|'\n'
name|'for'
name|'timestamp'
name|'in'
name|'res'
op|'.'
name|'DfmMonitoringTimestamp'
op|':'
newline|'\n'
indent|'                '
name|'if'
string|"'lun'"
op|'!='
name|'timestamp'
op|'.'
name|'MonitorName'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'timestamp'
op|'.'
name|'LastMonitoringTimestamp'
op|':'
newline|'\n'
indent|'                    '
name|'return'
newline|'\n'
nl|'\n'
DECL|member|_destroy_lun
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'_destroy_lun'
op|'('
name|'self'
op|','
name|'host_id'
op|','
name|'lun_path'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Destroy a LUN on the filer."""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'factory'
op|'.'
name|'create'
op|'('
string|"'Request'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'Name'
op|'='
string|"'lun-offline'"
newline|'\n'
name|'path_xml'
op|'='
string|"'<path>%s</path>'"
newline|'\n'
name|'request'
op|'.'
name|'Args'
op|'='
name|'text'
op|'.'
name|'Raw'
op|'('
name|'path_xml'
op|'%'
name|'lun_path'
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'service'
op|'.'
name|'ApiProxy'
op|'('
name|'Target'
op|'='
name|'host_id'
op|','
nl|'\n'
name|'Request'
op|'='
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_fail'
op|'('
name|'request'
op|','
name|'response'
op|')'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'factory'
op|'.'
name|'create'
op|'('
string|"'Request'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'Name'
op|'='
string|"'lun-destroy'"
newline|'\n'
name|'request'
op|'.'
name|'Args'
op|'='
name|'text'
op|'.'
name|'Raw'
op|'('
name|'path_xml'
op|'%'
name|'lun_path'
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'service'
op|'.'
name|'ApiProxy'
op|'('
name|'Target'
op|'='
name|'host_id'
op|','
nl|'\n'
name|'Request'
op|'='
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_fail'
op|'('
name|'request'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_resize_volume
dedent|''
name|'def'
name|'_resize_volume'
op|'('
name|'self'
op|','
name|'host_id'
op|','
name|'vol_name'
op|','
name|'new_size'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Resize the volume by the amount requested."""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'factory'
op|'.'
name|'create'
op|'('
string|"'Request'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'Name'
op|'='
string|"'volume-size'"
newline|'\n'
name|'volume_size_xml'
op|'='
op|'('
nl|'\n'
string|"'<volume>%s</volume><new-size>%s</new-size>'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'Args'
op|'='
name|'text'
op|'.'
name|'Raw'
op|'('
name|'volume_size_xml'
op|'%'
op|'('
name|'vol_name'
op|','
name|'new_size'
op|')'
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'service'
op|'.'
name|'ApiProxy'
op|'('
name|'Target'
op|'='
name|'host_id'
op|','
nl|'\n'
name|'Request'
op|'='
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_fail'
op|'('
name|'request'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_create_qtree
dedent|''
name|'def'
name|'_create_qtree'
op|'('
name|'self'
op|','
name|'host_id'
op|','
name|'vol_name'
op|','
name|'qtree_name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a qtree the filer."""'
newline|'\n'
name|'request'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'factory'
op|'.'
name|'create'
op|'('
string|"'Request'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'Name'
op|'='
string|"'qtree-create'"
newline|'\n'
name|'qtree_create_xml'
op|'='
op|'('
nl|'\n'
string|"'<mode>0755</mode><volume>%s</volume><qtree>%s</qtree>'"
op|')'
newline|'\n'
name|'request'
op|'.'
name|'Args'
op|'='
name|'text'
op|'.'
name|'Raw'
op|'('
name|'qtree_create_xml'
op|'%'
op|'('
name|'vol_name'
op|','
name|'qtree_name'
op|')'
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'service'
op|'.'
name|'ApiProxy'
op|'('
name|'Target'
op|'='
name|'host_id'
op|','
nl|'\n'
name|'Request'
op|'='
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_fail'
op|'('
name|'request'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_snapshot
dedent|''
name|'def'
name|'create_snapshot'
op|'('
name|'self'
op|','
name|'snapshot'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Driver entry point for creating a snapshot.\n\n        This driver implements snapshots by using efficient single-file\n        (LUN) cloning.\n        """'
newline|'\n'
name|'vol_name'
op|'='
name|'snapshot'
op|'['
string|"'volume_name'"
op|']'
newline|'\n'
name|'snapshot_name'
op|'='
name|'snapshot'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'project'
op|'='
name|'snapshot'
op|'['
string|"'project_id'"
op|']'
newline|'\n'
name|'lun'
op|'='
name|'self'
op|'.'
name|'_lookup_lun_for_volume'
op|'('
name|'vol_name'
op|','
name|'project'
op|')'
newline|'\n'
name|'lun_id'
op|'='
name|'lun'
op|'.'
name|'id'
newline|'\n'
name|'lun'
op|'='
name|'self'
op|'.'
name|'_get_lun_details'
op|'('
name|'lun_id'
op|')'
newline|'\n'
name|'extra_gb'
op|'='
name|'snapshot'
op|'['
string|"'volume_size'"
op|']'
newline|'\n'
name|'new_size'
op|'='
string|"'+%dg'"
op|'%'
name|'extra_gb'
newline|'\n'
name|'self'
op|'.'
name|'_resize_volume'
op|'('
name|'lun'
op|'.'
name|'HostId'
op|','
name|'lun'
op|'.'
name|'VolumeName'
op|','
name|'new_size'
op|')'
newline|'\n'
comment|'# LunPath is the partial LUN path in this format: volume/qtree/lun'
nl|'\n'
name|'lun_path'
op|'='
name|'str'
op|'('
name|'lun'
op|'.'
name|'LunPath'
op|')'
newline|'\n'
name|'lun_name'
op|'='
name|'lun_path'
op|'['
name|'lun_path'
op|'.'
name|'rfind'
op|'('
string|"'/'"
op|')'
op|'+'
number|'1'
op|':'
op|']'
newline|'\n'
name|'qtree_path'
op|'='
string|"'/vol/%s/%s'"
op|'%'
op|'('
name|'lun'
op|'.'
name|'VolumeName'
op|','
name|'lun'
op|'.'
name|'QtreeName'
op|')'
newline|'\n'
name|'src_path'
op|'='
string|"'%s/%s'"
op|'%'
op|'('
name|'qtree_path'
op|','
name|'lun_name'
op|')'
newline|'\n'
name|'dest_path'
op|'='
string|"'%s/%s'"
op|'%'
op|'('
name|'qtree_path'
op|','
name|'snapshot_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_clone_lun'
op|'('
name|'lun'
op|'.'
name|'HostId'
op|','
name|'src_path'
op|','
name|'dest_path'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_snapshot
dedent|''
name|'def'
name|'delete_snapshot'
op|'('
name|'self'
op|','
name|'snapshot'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Driver entry point for deleting a snapshot."""'
newline|'\n'
name|'vol_name'
op|'='
name|'snapshot'
op|'['
string|"'volume_name'"
op|']'
newline|'\n'
name|'snapshot_name'
op|'='
name|'snapshot'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'project'
op|'='
name|'snapshot'
op|'['
string|"'project_id'"
op|']'
newline|'\n'
name|'lun'
op|'='
name|'self'
op|'.'
name|'_lookup_lun_for_volume'
op|'('
name|'vol_name'
op|','
name|'project'
op|')'
newline|'\n'
name|'lun_id'
op|'='
name|'lun'
op|'.'
name|'id'
newline|'\n'
name|'lun'
op|'='
name|'self'
op|'.'
name|'_get_lun_details'
op|'('
name|'lun_id'
op|')'
newline|'\n'
name|'lun_path'
op|'='
string|"'/vol/%s/%s/%s'"
op|'%'
op|'('
name|'lun'
op|'.'
name|'VolumeName'
op|','
name|'lun'
op|'.'
name|'QtreeName'
op|','
nl|'\n'
name|'snapshot_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_destroy_lun'
op|'('
name|'lun'
op|'.'
name|'HostId'
op|','
name|'lun_path'
op|')'
newline|'\n'
name|'extra_gb'
op|'='
name|'snapshot'
op|'['
string|"'volume_size'"
op|']'
newline|'\n'
name|'new_size'
op|'='
string|"'-%dg'"
op|'%'
name|'extra_gb'
newline|'\n'
name|'self'
op|'.'
name|'_resize_volume'
op|'('
name|'lun'
op|'.'
name|'HostId'
op|','
name|'lun'
op|'.'
name|'VolumeName'
op|','
name|'new_size'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_volume_from_snapshot
dedent|''
name|'def'
name|'create_volume_from_snapshot'
op|'('
name|'self'
op|','
name|'volume'
op|','
name|'snapshot'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Driver entry point for creating a new volume from a snapshot.\n\n        Many would call this "cloning" and in fact we use cloning to implement\n        this feature.\n        """'
newline|'\n'
name|'vol_size'
op|'='
name|'volume'
op|'['
string|"'size'"
op|']'
newline|'\n'
name|'snap_size'
op|'='
name|'snapshot'
op|'['
string|"'volume_size'"
op|']'
newline|'\n'
name|'if'
name|'vol_size'
op|'!='
name|'snap_size'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|"'Cannot create volume of size %(vol_size)s from '"
nl|'\n'
string|"'snapshot of size %(snap_size)s'"
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
name|'msg'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'vol_name'
op|'='
name|'snapshot'
op|'['
string|"'volume_name'"
op|']'
newline|'\n'
name|'snapshot_name'
op|'='
name|'snapshot'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'project'
op|'='
name|'snapshot'
op|'['
string|"'project_id'"
op|']'
newline|'\n'
name|'lun'
op|'='
name|'self'
op|'.'
name|'_lookup_lun_for_volume'
op|'('
name|'vol_name'
op|','
name|'project'
op|')'
newline|'\n'
name|'lun_id'
op|'='
name|'lun'
op|'.'
name|'id'
newline|'\n'
name|'dataset'
op|'='
name|'lun'
op|'.'
name|'dataset'
newline|'\n'
name|'old_type'
op|'='
name|'dataset'
op|'.'
name|'type'
newline|'\n'
name|'new_type'
op|'='
name|'self'
op|'.'
name|'_get_ss_type'
op|'('
name|'volume'
op|')'
newline|'\n'
name|'if'
name|'new_type'
op|'!='
name|'old_type'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|"'Cannot create volume of type %(new_type)s from '"
nl|'\n'
string|"'snapshot of type %(old_type)s'"
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'NovaException'
op|'('
name|'msg'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'lun'
op|'='
name|'self'
op|'.'
name|'_get_lun_details'
op|'('
name|'lun_id'
op|')'
newline|'\n'
name|'extra_gb'
op|'='
name|'vol_size'
newline|'\n'
name|'new_size'
op|'='
string|"'+%dg'"
op|'%'
name|'extra_gb'
newline|'\n'
name|'self'
op|'.'
name|'_resize_volume'
op|'('
name|'lun'
op|'.'
name|'HostId'
op|','
name|'lun'
op|'.'
name|'VolumeName'
op|','
name|'new_size'
op|')'
newline|'\n'
name|'clone_name'
op|'='
name|'volume'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_create_qtree'
op|'('
name|'lun'
op|'.'
name|'HostId'
op|','
name|'lun'
op|'.'
name|'VolumeName'
op|','
name|'clone_name'
op|')'
newline|'\n'
name|'src_path'
op|'='
string|"'/vol/%s/%s/%s'"
op|'%'
op|'('
name|'lun'
op|'.'
name|'VolumeName'
op|','
name|'lun'
op|'.'
name|'QtreeName'
op|','
nl|'\n'
name|'snapshot_name'
op|')'
newline|'\n'
name|'dest_path'
op|'='
string|"'/vol/%s/%s/%s'"
op|'%'
op|'('
name|'lun'
op|'.'
name|'VolumeName'
op|','
name|'clone_name'
op|','
name|'clone_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_clone_lun'
op|'('
name|'lun'
op|'.'
name|'HostId'
op|','
name|'src_path'
op|','
name|'dest_path'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_refresh_dfm_luns'
op|'('
name|'lun'
op|'.'
name|'HostId'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_discover_dataset_luns'
op|'('
name|'dataset'
op|','
name|'clone_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|check_for_export
dedent|''
name|'def'
name|'check_for_export'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'volume_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
