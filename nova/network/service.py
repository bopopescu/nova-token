begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nNetwork Hosts are responsible for allocating ips and setting up network\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'logging'
newline|'\n'
nl|'\n'
name|'import'
name|'IPy'
newline|'\n'
name|'from'
name|'sqlalchemy'
op|'.'
name|'orm'
name|'import'
name|'exc'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'models'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'service'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'auth'
name|'import'
name|'manager'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'exception'
name|'as'
name|'network_exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
name|'import'
name|'linux_net'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'network_type'"
op|','
nl|'\n'
string|"'flat'"
op|','
nl|'\n'
string|"'Service Class for Networking'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'flat_network_bridge'"
op|','
string|"'br100'"
op|','
nl|'\n'
string|"'Bridge for simple network instances'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_list'
op|'('
string|"'flat_network_ips'"
op|','
nl|'\n'
op|'['
string|"'192.168.0.2'"
op|','
string|"'192.168.0.3'"
op|','
string|"'192.168.0.4'"
op|']'
op|','
nl|'\n'
string|"'Available ips for simple network'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'flat_network_network'"
op|','
string|"'192.168.0.0'"
op|','
nl|'\n'
string|"'Network for simple network'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'flat_network_netmask'"
op|','
string|"'255.255.255.0'"
op|','
nl|'\n'
string|"'Netmask for simple network'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'flat_network_gateway'"
op|','
string|"'192.168.0.1'"
op|','
nl|'\n'
string|"'Broadcast for simple network'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'flat_network_broadcast'"
op|','
string|"'192.168.0.255'"
op|','
nl|'\n'
string|"'Broadcast for simple network'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'flat_network_dns'"
op|','
string|"'8.8.4.4'"
op|','
nl|'\n'
string|"'Dns for simple network'"
op|')'
newline|'\n'
nl|'\n'
name|'flags'
op|'.'
name|'DEFINE_integer'
op|'('
string|"'vlan_start'"
op|','
number|'100'
op|','
string|"'First VLAN for private networks'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_integer'
op|'('
string|"'num_networks'"
op|','
number|'1000'
op|','
string|"'Number of networks to support'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'vpn_ip'"
op|','
name|'utils'
op|'.'
name|'get_my_ip'
op|'('
op|')'
op|','
nl|'\n'
string|"'Public IP for the cloudpipe VPN servers'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_integer'
op|'('
string|"'vpn_start'"
op|','
number|'1000'
op|','
string|"'First Vpn port for private networks'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_integer'
op|'('
string|"'network_size'"
op|','
number|'256'
op|','
nl|'\n'
string|"'Number of addresses in each private subnet'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'public_range'"
op|','
string|"'4.4.4.0/24'"
op|','
string|"'Public IP address block'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'private_range'"
op|','
string|"'10.0.0.0/8'"
op|','
string|"'Private IP address block'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_integer'
op|'('
string|"'cnt_vpn_clients'"
op|','
number|'5'
op|','
nl|'\n'
string|"'Number of addresses reserved for vpn clients'"
op|')'
newline|'\n'
nl|'\n'
comment|'# TODO(vish): some better type of dependency injection?'
nl|'\n'
DECL|variable|_driver
name|'_driver'
op|'='
name|'linux_net'
newline|'\n'
nl|'\n'
DECL|function|type_to_class
name|'def'
name|'type_to_class'
op|'('
name|'network_type'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Convert a network_type string into an actual Python class"""'
newline|'\n'
name|'if'
name|'network_type'
op|'=='
string|"'flat'"
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'FlatNetworkService'
newline|'\n'
dedent|''
name|'elif'
name|'network_type'
op|'=='
string|"'vlan'"
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'VlanNetworkService'
newline|'\n'
dedent|''
name|'raise'
name|'exception'
op|'.'
name|'NotFound'
op|'('
string|'"Couldn\'t find %s network type"'
op|'%'
name|'network_type'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|setup_compute_network
dedent|''
name|'def'
name|'setup_compute_network'
op|'('
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Sets up the network on a compute host"""'
newline|'\n'
name|'network'
op|'='
name|'get_network_for_project'
op|'('
name|'project_id'
op|')'
newline|'\n'
name|'srv'
op|'='
name|'type_to_class'
op|'('
name|'network'
op|'.'
name|'kind'
op|')'
newline|'\n'
name|'srv'
op|'.'
name|'setup_compute_network'
op|'('
name|'network'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_network_for_project
dedent|''
name|'def'
name|'get_network_for_project'
op|'('
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get network allocated to project from datastore"""'
newline|'\n'
name|'project'
op|'='
name|'manager'
op|'.'
name|'AuthManager'
op|'('
op|')'
op|'.'
name|'get_project'
op|'('
name|'project_id'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'project'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'exception'
op|'.'
name|'NotFound'
op|'('
string|'"Couldn\'t find project %s"'
op|'%'
name|'project_id'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'project'
op|'.'
name|'network'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_host_for_project
dedent|''
name|'def'
name|'get_host_for_project'
op|'('
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get host allocated to project from datastore"""'
newline|'\n'
name|'return'
name|'get_network_for_project'
op|'('
name|'project_id'
op|')'
op|'.'
name|'node_name'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BaseNetworkService
dedent|''
name|'class'
name|'BaseNetworkService'
op|'('
name|'service'
op|'.'
name|'Service'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Implements common network service functionality\n\n    This class must be subclassed.\n    """'
newline|'\n'
nl|'\n'
DECL|member|set_network_host
name|'def'
name|'set_network_host'
op|'('
name|'self'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Safely sets the host of the projects network"""'
newline|'\n'
name|'network'
op|'='
name|'get_network_for_project'
op|'('
name|'project_id'
op|')'
newline|'\n'
name|'if'
name|'network'
op|'.'
name|'node_name'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'network'
op|'.'
name|'node_name'
newline|'\n'
dedent|''
name|'network'
op|'.'
name|'node_name'
op|'='
name|'FLAGS'
op|'.'
name|'node_name'
newline|'\n'
name|'network'
op|'.'
name|'kind'
op|'='
name|'FLAGS'
op|'.'
name|'network_type'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'network'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_on_set_network_host'
op|'('
name|'network'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exc'
op|'.'
name|'ConcurrentModificationError'
op|':'
newline|'\n'
indent|'            '
name|'network'
op|'.'
name|'refresh'
op|'('
op|')'
comment|'# FIXME is this implemented?'
newline|'\n'
dedent|''
name|'return'
name|'network'
op|'.'
name|'node_name'
newline|'\n'
nl|'\n'
DECL|member|allocate_fixed_ip
dedent|''
name|'def'
name|'allocate_fixed_ip'
op|'('
name|'self'
op|','
name|'project_id'
op|','
name|'instance_id'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Gets fixed ip from the pool"""'
newline|'\n'
name|'network'
op|'='
name|'get_network_for_project'
op|'('
name|'project_id'
op|')'
newline|'\n'
name|'session'
op|'='
name|'models'
op|'.'
name|'NovaBase'
op|'.'
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'query'
op|'='
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'FixedIp'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'network_id'
op|'='
name|'network'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'reserved'
op|'='
name|'False'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'allocated'
op|'='
name|'False'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'leased'
op|'='
name|'False'
op|')'
newline|'\n'
name|'while'
op|'('
name|'True'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fixed_ip'
op|'='
name|'query'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'fixed_ip'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'network_exception'
op|'.'
name|'NoMoreAddresses'
op|'('
op|')'
newline|'\n'
comment|'# FIXME will this set backreference?'
nl|'\n'
dedent|''
name|'fixed_ip'
op|'.'
name|'instance_id'
op|'='
name|'instance_id'
newline|'\n'
name|'fixed_ip'
op|'.'
name|'allocated'
op|'='
name|'True'
newline|'\n'
name|'session'
op|'.'
name|'add'
op|'('
name|'fixed_ip'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'fixed_ip'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'fixed_ip'
op|'.'
name|'ip_str'
newline|'\n'
dedent|''
name|'except'
name|'exc'
op|'.'
name|'ConcurrentModificationError'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|deallocate_fixed_ip
dedent|''
dedent|''
dedent|''
name|'def'
name|'deallocate_fixed_ip'
op|'('
name|'self'
op|','
name|'fixed_ip_str'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns a fixed ip to the pool"""'
newline|'\n'
name|'fixed_ip'
op|'='
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'find_by_ip_str'
op|'('
name|'fixed_ip_str'
op|')'
newline|'\n'
name|'fixed_ip'
op|'.'
name|'instance'
op|'='
name|'None'
newline|'\n'
name|'fixed_ip'
op|'.'
name|'allocated'
op|'='
name|'False'
newline|'\n'
name|'fixed_ip'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_on_set_network_host
dedent|''
name|'def'
name|'_on_set_network_host'
op|'('
name|'self'
op|','
name|'network'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Called when this host becomes the host for a project"""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|setup_compute_network
name|'def'
name|'setup_compute_network'
op|'('
name|'cls'
op|','
name|'network'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Sets up matching network for compute hosts"""'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|allocate_elastic_ip
dedent|''
name|'def'
name|'allocate_elastic_ip'
op|'('
name|'self'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Gets an elastic ip from the pool"""'
newline|'\n'
comment|'# FIXME: add elastic ips through manage command'
nl|'\n'
name|'session'
op|'='
name|'models'
op|'.'
name|'NovaBase'
op|'.'
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'node_name'
op|'='
name|'FLAGS'
op|'.'
name|'node_name'
newline|'\n'
name|'query'
op|'='
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'ElasticIp'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'node_name'
op|'='
name|'node_name'
op|')'
newline|'\n'
name|'query'
op|'='
name|'query'
op|'.'
name|'filter_by'
op|'('
name|'fixed_ip_id'
op|'='
name|'None'
op|')'
newline|'\n'
name|'while'
op|'('
name|'True'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'elastic_ip'
op|'='
name|'query'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'elastic_ip'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'network_exception'
op|'.'
name|'NoMoreAddresses'
op|'('
op|')'
newline|'\n'
dedent|''
name|'elastic_ip'
op|'.'
name|'project_id'
op|'='
name|'project_id'
newline|'\n'
name|'session'
op|'.'
name|'add'
op|'('
name|'elastic_ip'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'elastic_ip'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'elastic_ip'
op|'.'
name|'ip_str'
newline|'\n'
dedent|''
name|'except'
name|'exc'
op|'.'
name|'ConcurrentModificationError'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|associate_elastic_ip
dedent|''
dedent|''
dedent|''
name|'def'
name|'associate_elastic_ip'
op|'('
name|'self'
op|','
name|'elastic_ip_str'
op|','
name|'fixed_ip_str'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Associates an elastic ip to a fixed ip"""'
newline|'\n'
name|'elastic_ip'
op|'='
name|'models'
op|'.'
name|'ElasticIp'
op|'.'
name|'find_by_ip_str'
op|'('
name|'elastic_ip_str'
op|')'
newline|'\n'
name|'fixed_ip'
op|'='
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'find_by_ip_str'
op|'('
name|'fixed_ip_str'
op|')'
newline|'\n'
name|'elastic_ip'
op|'.'
name|'fixed_ip'
op|'='
name|'fixed_ip'
newline|'\n'
name|'_driver'
op|'.'
name|'bind_elastic_ip'
op|'('
name|'elastic_ip_str'
op|')'
newline|'\n'
name|'_driver'
op|'.'
name|'ensure_elastic_forward'
op|'('
name|'elastic_ip_str'
op|','
name|'fixed_ip_str'
op|')'
newline|'\n'
name|'elastic_ip'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|disassociate_elastic_ip
dedent|''
name|'def'
name|'disassociate_elastic_ip'
op|'('
name|'self'
op|','
name|'elastic_ip_str'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Disassociates a elastic ip"""'
newline|'\n'
name|'elastic_ip'
op|'='
name|'models'
op|'.'
name|'ElasticIp'
op|'.'
name|'find_by_ip_str'
op|'('
name|'elastic_ip_str'
op|')'
newline|'\n'
name|'fixed_ip_str'
op|'='
name|'elastic_ip'
op|'.'
name|'fixed_ip'
op|'.'
name|'ip_str'
newline|'\n'
name|'elastic_ip'
op|'.'
name|'fixed_ip'
op|'='
name|'None'
newline|'\n'
name|'_driver'
op|'.'
name|'unbind_elastic_ip'
op|'('
name|'elastic_ip_str'
op|')'
newline|'\n'
name|'_driver'
op|'.'
name|'remove_elastic_forward'
op|'('
name|'elastic_ip_str'
op|','
name|'fixed_ip_str'
op|')'
newline|'\n'
name|'elastic_ip'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|deallocate_elastic_ip
dedent|''
name|'def'
name|'deallocate_elastic_ip'
op|'('
name|'self'
op|','
name|'elastic_ip_str'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns an elastic ip to the pool"""'
newline|'\n'
name|'elastic_ip'
op|'='
name|'models'
op|'.'
name|'ElasticIp'
op|'.'
name|'find_by_ip_str'
op|'('
name|'elastic_ip_str'
op|')'
newline|'\n'
name|'elastic_ip'
op|'.'
name|'project_id'
op|'='
name|'None'
newline|'\n'
name|'elastic_ip'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FlatNetworkService
dedent|''
dedent|''
name|'class'
name|'FlatNetworkService'
op|'('
name|'BaseNetworkService'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Basic network where no vlans are used"""'
newline|'\n'
nl|'\n'
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|setup_compute_network
name|'def'
name|'setup_compute_network'
op|'('
name|'cls'
op|','
name|'network'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Network is created manually"""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|_on_set_network_host
dedent|''
name|'def'
name|'_on_set_network_host'
op|'('
name|'self'
op|','
name|'network'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Called when this host becomes the host for a project"""'
newline|'\n'
comment|'# FIXME should there be two types of network objects in the database?'
nl|'\n'
name|'network'
op|'.'
name|'injected'
op|'='
name|'True'
newline|'\n'
name|'network'
op|'.'
name|'network_str'
op|'='
name|'FLAGS'
op|'.'
name|'flat_network_network'
newline|'\n'
name|'network'
op|'.'
name|'netmask'
op|'='
name|'FLAGS'
op|'.'
name|'flat_network_netmask'
newline|'\n'
name|'network'
op|'.'
name|'bridge'
op|'='
name|'FLAGS'
op|'.'
name|'flat_network_bridge'
newline|'\n'
name|'network'
op|'.'
name|'gateway'
op|'='
name|'FLAGS'
op|'.'
name|'flat_network_gateway'
newline|'\n'
name|'network'
op|'.'
name|'broadcast'
op|'='
name|'FLAGS'
op|'.'
name|'flat_network_broadcast'
newline|'\n'
name|'network'
op|'.'
name|'dns'
op|'='
name|'FLAGS'
op|'.'
name|'flat_network_dns'
newline|'\n'
name|'network'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
comment|'# FIXME add public ips from flags to the datastore'
nl|'\n'
nl|'\n'
DECL|class|VlanNetworkService
dedent|''
dedent|''
name|'class'
name|'VlanNetworkService'
op|'('
name|'BaseNetworkService'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Vlan network with dhcp"""'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'VlanNetworkService'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_ensure_network_indexes'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_ensure_network_indexes
dedent|''
name|'def'
name|'_ensure_network_indexes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(vish): this should probably be removed and added via'
nl|'\n'
comment|'#             admin command or fixtures'
nl|'\n'
indent|'        '
name|'if'
name|'models'
op|'.'
name|'NetworkIndex'
op|'.'
name|'count'
op|'('
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'FLAGS'
op|'.'
name|'num_networks'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'network_index'
op|'='
name|'models'
op|'.'
name|'NetworkIndex'
op|'('
op|')'
newline|'\n'
name|'network_index'
op|'.'
name|'index'
op|'='
name|'i'
newline|'\n'
name|'network_index'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|allocate_fixed_ip
dedent|''
dedent|''
dedent|''
name|'def'
name|'allocate_fixed_ip'
op|'('
name|'self'
op|','
name|'project_id'
op|','
name|'instance_id'
op|','
name|'is_vpn'
op|'='
name|'False'
op|','
nl|'\n'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Gets a fixed ip from the pool"""'
newline|'\n'
name|'network'
op|'='
name|'get_network_for_project'
op|'('
name|'project_id'
op|')'
newline|'\n'
name|'if'
name|'is_vpn'
op|':'
newline|'\n'
indent|'            '
name|'fixed_ip'
op|'='
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'find_by_ip_str'
op|'('
name|'network'
op|'.'
name|'vpn_private_ip_str'
op|')'
newline|'\n'
name|'if'
name|'fixed_ip'
op|'.'
name|'allocated'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'network_exception'
op|'.'
name|'AddressAlreadyAllocated'
op|'('
op|')'
newline|'\n'
comment|'# FIXME will this set backreference?'
nl|'\n'
dedent|''
name|'fixed_ip'
op|'.'
name|'instance_id'
op|'='
name|'instance_id'
newline|'\n'
name|'fixed_ip'
op|'.'
name|'allocated'
op|'='
name|'True'
newline|'\n'
name|'fixed_ip'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'_driver'
op|'.'
name|'ensure_vlan_forward'
op|'('
name|'network'
op|'.'
name|'vpn_public_ip_str'
op|','
nl|'\n'
name|'network'
op|'.'
name|'vpn_public_port'
op|','
nl|'\n'
name|'network'
op|'.'
name|'vpn_private_ip_str'
op|')'
newline|'\n'
name|'ip_str'
op|'='
name|'fixed_ip'
op|'.'
name|'ip_str'
newline|'\n'
name|'logging'
op|'.'
name|'debug'
op|'('
string|'"Allocating vpn IP %s"'
op|','
name|'ip_str'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'parent'
op|'='
name|'super'
op|'('
name|'VlanNetworkService'
op|','
name|'self'
op|')'
newline|'\n'
name|'ip_str'
op|'='
name|'parent'
op|'.'
name|'allocate_fixed_ip'
op|'('
name|'project_id'
op|','
name|'instance_id'
op|')'
newline|'\n'
dedent|''
name|'logging'
op|'.'
name|'debug'
op|'('
string|'"sql %s"'
op|','
name|'FLAGS'
op|'.'
name|'sql_connection'
op|')'
newline|'\n'
name|'_driver'
op|'.'
name|'ensure_vlan_bridge'
op|'('
name|'network'
op|'.'
name|'vlan'
op|','
name|'network'
op|'.'
name|'bridge'
op|')'
newline|'\n'
name|'return'
name|'ip_str'
newline|'\n'
nl|'\n'
DECL|member|deallocate_fixed_ip
dedent|''
name|'def'
name|'deallocate_fixed_ip'
op|'('
name|'self'
op|','
name|'fixed_ip_str'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns an ip to the pool"""'
newline|'\n'
name|'fixed_ip'
op|'='
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'find_by_ip_str'
op|'('
name|'fixed_ip_str'
op|')'
newline|'\n'
name|'if'
name|'fixed_ip'
op|'.'
name|'leased'
op|':'
newline|'\n'
indent|'            '
name|'logging'
op|'.'
name|'debug'
op|'('
string|'"Deallocating IP %s"'
op|','
name|'fixed_ip_str'
op|')'
newline|'\n'
name|'fixed_ip'
op|'.'
name|'allocated'
op|'='
name|'False'
newline|'\n'
comment|'# keep instance id until release occurs'
nl|'\n'
name|'fixed_ip'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'release_ip'
op|'('
name|'fixed_ip_str'
op|')'
newline|'\n'
nl|'\n'
DECL|member|lease_ip
dedent|''
dedent|''
name|'def'
name|'lease_ip'
op|'('
name|'self'
op|','
name|'fixed_ip_str'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Called by bridge when ip is leased"""'
newline|'\n'
name|'logging'
op|'.'
name|'debug'
op|'('
string|'"sql %s"'
op|','
name|'FLAGS'
op|'.'
name|'sql_connection'
op|')'
newline|'\n'
name|'fixed_ip'
op|'='
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'find_by_ip_str'
op|'('
name|'fixed_ip_str'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'fixed_ip'
op|'.'
name|'allocated'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'network_exception'
op|'.'
name|'AddressNotAllocated'
op|'('
name|'fixed_ip_str'
op|')'
newline|'\n'
dedent|''
name|'logging'
op|'.'
name|'debug'
op|'('
string|'"Leasing IP %s"'
op|','
name|'fixed_ip_str'
op|')'
newline|'\n'
name|'fixed_ip'
op|'.'
name|'leased'
op|'='
name|'True'
newline|'\n'
name|'fixed_ip'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|release_ip
dedent|''
name|'def'
name|'release_ip'
op|'('
name|'self'
op|','
name|'fixed_ip_str'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Called by bridge when ip is released"""'
newline|'\n'
name|'fixed_ip'
op|'='
name|'models'
op|'.'
name|'FixedIp'
op|'.'
name|'find_by_ip_str'
op|'('
name|'fixed_ip_str'
op|')'
newline|'\n'
name|'logging'
op|'.'
name|'debug'
op|'('
string|'"Releasing IP %s"'
op|','
name|'fixed_ip_str'
op|')'
newline|'\n'
name|'fixed_ip'
op|'.'
name|'leased'
op|'='
name|'False'
newline|'\n'
name|'fixed_ip'
op|'.'
name|'allocated'
op|'='
name|'False'
newline|'\n'
name|'fixed_ip'
op|'.'
name|'instance'
op|'='
name|'None'
newline|'\n'
name|'fixed_ip'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|restart_nets
dedent|''
name|'def'
name|'restart_nets'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ensure the network for each user is enabled"""'
newline|'\n'
comment|'# FIXME'
nl|'\n'
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|_on_set_network_host
dedent|''
name|'def'
name|'_on_set_network_host'
op|'('
name|'self'
op|','
name|'network'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Called when this host becomes the host for a project"""'
newline|'\n'
name|'index'
op|'='
name|'self'
op|'.'
name|'_get_network_index'
op|'('
name|'network'
op|')'
newline|'\n'
name|'private_net'
op|'='
name|'IPy'
op|'.'
name|'IP'
op|'('
name|'FLAGS'
op|'.'
name|'private_range'
op|')'
newline|'\n'
name|'start'
op|'='
name|'index'
op|'*'
name|'FLAGS'
op|'.'
name|'network_size'
newline|'\n'
comment|'# minus one for the gateway.'
nl|'\n'
name|'network_str'
op|'='
string|'"%s-%s"'
op|'%'
op|'('
name|'private_net'
op|'['
name|'start'
op|']'
op|','
nl|'\n'
name|'private_net'
op|'['
name|'start'
op|'+'
name|'FLAGS'
op|'.'
name|'network_size'
op|'-'
number|'1'
op|']'
op|')'
newline|'\n'
name|'vlan'
op|'='
name|'FLAGS'
op|'.'
name|'vlan_start'
op|'+'
name|'index'
newline|'\n'
name|'project_net'
op|'='
name|'IPy'
op|'.'
name|'IP'
op|'('
name|'network_str'
op|')'
newline|'\n'
name|'network'
op|'.'
name|'network_str'
op|'='
name|'network_str'
newline|'\n'
name|'network'
op|'.'
name|'netmask'
op|'='
name|'str'
op|'('
name|'project_net'
op|'.'
name|'netmask'
op|'('
op|')'
op|')'
newline|'\n'
name|'network'
op|'.'
name|'vlan'
op|'='
name|'vlan'
newline|'\n'
name|'network'
op|'.'
name|'bridge'
op|'='
string|"'br%s'"
op|'%'
name|'vlan'
newline|'\n'
name|'network'
op|'.'
name|'gateway'
op|'='
name|'str'
op|'('
name|'project_net'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'network'
op|'.'
name|'broadcast'
op|'='
name|'str'
op|'('
name|'project_net'
op|'.'
name|'broadcast'
op|'('
op|')'
op|')'
newline|'\n'
name|'network'
op|'.'
name|'vpn_private_ip_str'
op|'='
name|'str'
op|'('
name|'project_net'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
name|'network'
op|'.'
name|'vpn_public_ip_str'
op|'='
name|'FLAGS'
op|'.'
name|'vpn_ip'
newline|'\n'
name|'network'
op|'.'
name|'vpn_public_port'
op|'='
name|'FLAGS'
op|'.'
name|'vpn_start'
op|'+'
name|'index'
newline|'\n'
comment|'# create network fixed ips'
nl|'\n'
name|'BOTTOM_RESERVED'
op|'='
number|'3'
newline|'\n'
name|'TOP_RESERVED'
op|'='
number|'1'
op|'+'
name|'FLAGS'
op|'.'
name|'cnt_vpn_clients'
newline|'\n'
name|'num_ips'
op|'='
name|'len'
op|'('
name|'project_net'
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'num_ips'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fixed_ip'
op|'='
name|'models'
op|'.'
name|'FixedIp'
op|'('
op|')'
newline|'\n'
name|'fixed_ip'
op|'.'
name|'ip_str'
op|'='
name|'str'
op|'('
name|'project_net'
op|'['
name|'i'
op|']'
op|')'
newline|'\n'
name|'if'
name|'i'
op|'<'
name|'BOTTOM_RESERVED'
name|'or'
name|'num_ips'
op|'-'
name|'i'
op|'<'
name|'TOP_RESERVED'
op|':'
newline|'\n'
indent|'                '
name|'fixed_ip'
op|'.'
name|'reserved'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'fixed_ip'
op|'.'
name|'network'
op|'='
name|'network'
newline|'\n'
name|'fixed_ip'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_get_network_index
dedent|''
dedent|''
name|'def'
name|'_get_network_index'
op|'('
name|'self'
op|','
name|'network'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get non-conflicting index for network"""'
newline|'\n'
name|'session'
op|'='
name|'models'
op|'.'
name|'NovaBase'
op|'.'
name|'get_session'
op|'('
op|')'
newline|'\n'
name|'node_name'
op|'='
name|'FLAGS'
op|'.'
name|'node_name'
newline|'\n'
name|'query'
op|'='
name|'session'
op|'.'
name|'query'
op|'('
name|'models'
op|'.'
name|'NetworkIndex'
op|')'
op|'.'
name|'filter_by'
op|'('
name|'network_id'
op|'='
name|'None'
op|')'
newline|'\n'
name|'while'
op|'('
name|'True'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'network_index'
op|'='
name|'query'
op|'.'
name|'first'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'network_index'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'network_exception'
op|'.'
name|'NoMoreNetworks'
op|'('
op|')'
newline|'\n'
dedent|''
name|'network_index'
op|'.'
name|'network'
op|'='
name|'network'
newline|'\n'
name|'session'
op|'.'
name|'add'
op|'('
name|'network_index'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'network_index'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
name|'network_index'
op|'.'
name|'index'
newline|'\n'
dedent|''
name|'except'
name|'exc'
op|'.'
name|'ConcurrentModificationError'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|setup_compute_network
name|'def'
name|'setup_compute_network'
op|'('
name|'cls'
op|','
name|'network'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Sets up matching network for compute hosts"""'
newline|'\n'
name|'_driver'
op|'.'
name|'ensure_vlan_bridge'
op|'('
name|'network'
op|'.'
name|'vlan'
op|','
name|'network'
op|'.'
name|'bridge'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
