begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2012 Nicira Networks'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
comment|'#    @author: Dan Wendlandt Nicira Networks'
nl|'\n'
nl|'\n'
name|'import'
name|'copy'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
op|'.'
name|'quantum'
name|'import'
name|'client'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
comment|'#TODO(danwent): would be nice to have these functions raise QuantumIOErrors'
nl|'\n'
comment|'# to make sure such errors are caught and reported properly'
nl|'\n'
nl|'\n'
nl|'\n'
comment|'#  this is a fake quantum client that just stores all data in a nested dict'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#  example:'
nl|'\n'
comment|'#'
nl|'\n'
comment|"#{'<tenant>':"
nl|'\n'
comment|'# { \'<net-uuid>\' : { \'name\' : "t1-net1",'
nl|'\n'
comment|"#                    'ports' : [ { '<port-uuid'> :"
nl|'\n'
comment|"#                                        {'state': 'Active',"
nl|'\n'
comment|"#                                       'attachment': 'iface-id'},"
nl|'\n'
comment|"#                                       { 'state': 'Down',"
nl|'\n'
comment|"#                                         'attachment' : None}}]"
nl|'\n'
comment|'#                      }'
nl|'\n'
comment|'#   }'
nl|'\n'
comment|'#  }'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeClient
name|'class'
name|'FakeClient'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""A fake Quantum Client for testing"""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'logger'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates a new client to some service.\n        :param logger: logging object to be used by client library\n        """'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'='
name|'logger'
newline|'\n'
name|'self'
op|'.'
name|'tenant_map'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_get_tenant_nets
dedent|''
name|'def'
name|'_get_tenant_nets'
op|'('
name|'self'
op|','
name|'tenant'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'tenant'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|'"\'tenant\' cannot be None"'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'tenant_map'
op|'.'
name|'setdefault'
op|'('
name|'tenant'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_verify_net
dedent|''
name|'def'
name|'_verify_net'
op|'('
name|'self'
op|','
name|'network'
op|','
name|'nets'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'network'
name|'not'
name|'in'
name|'nets'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'client'
op|'.'
name|'QuantumNotFoundException'
op|'('
string|'"no network with uuid %s"'
nl|'\n'
op|'%'
name|'network'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_verify_net_and_port
dedent|''
dedent|''
name|'def'
name|'_verify_net_and_port'
op|'('
name|'self'
op|','
name|'network'
op|','
name|'port'
op|','
name|'nets'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'network'
name|'not'
name|'in'
name|'nets'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'client'
op|'.'
name|'QuantumNotFoundException'
op|'('
string|'"no network with uuid %s"'
nl|'\n'
op|'%'
name|'network'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'port'
name|'not'
name|'in'
name|'nets'
op|'['
name|'network'
op|']'
op|'['
string|"'ports'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'client'
op|'.'
name|'QuantumNotFoundException'
op|'('
string|'"no port with uuid %s"'
nl|'\n'
op|'%'
name|'port'
op|')'
newline|'\n'
nl|'\n'
DECL|member|list_networks
dedent|''
dedent|''
name|'def'
name|'list_networks'
op|'('
name|'self'
op|','
name|'tenant'
op|'='
name|'None'
op|','
name|'filter_ops'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Fetches a list of all networks for a tenant"""'
newline|'\n'
name|'nets'
op|'='
name|'self'
op|'.'
name|'_get_tenant_nets'
op|'('
name|'tenant'
op|')'
newline|'\n'
name|'if'
name|'filter_ops'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|'"Need to implement filters %s in "'
nl|'\n'
string|'"quantum fake client"'
op|'%'
name|'filter_ops'
op|')'
newline|'\n'
dedent|''
name|'return'
op|'{'
string|'"networks"'
op|':'
op|'['
op|'{'
string|'"id"'
op|':'
name|'uuid'
op|'}'
name|'for'
name|'uuid'
name|'in'
name|'nets'
op|'.'
name|'keys'
op|'('
op|')'
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|show_network_details
dedent|''
name|'def'
name|'show_network_details'
op|'('
name|'self'
op|','
name|'network'
op|','
name|'tenant'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Fetches the details of a certain network"""'
newline|'\n'
name|'nets'
op|'='
name|'self'
op|'.'
name|'_get_tenant_nets'
op|'('
name|'tenant'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_net'
op|'('
name|'network'
op|','
name|'nets'
op|')'
newline|'\n'
name|'return'
op|'{'
string|'"network"'
op|':'
op|'{'
string|'"id"'
op|':'
name|'network'
op|','
string|'"name"'
op|':'
name|'nets'
op|'['
name|'network'
op|']'
op|'['
string|'"name"'
op|']'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|create_network
dedent|''
name|'def'
name|'create_network'
op|'('
name|'self'
op|','
name|'body'
op|'='
name|'None'
op|','
name|'tenant'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates a new network"""'
newline|'\n'
name|'nets'
op|'='
name|'self'
op|'.'
name|'_get_tenant_nets'
op|'('
name|'tenant'
op|')'
newline|'\n'
name|'uuid'
op|'='
name|'str'
op|'('
name|'utils'
op|'.'
name|'gen_uuid'
op|'('
op|')'
op|')'
newline|'\n'
name|'name'
op|'='
name|'body'
op|'['
string|'"network"'
op|']'
op|'['
string|'"name"'
op|']'
newline|'\n'
name|'nets'
op|'['
name|'uuid'
op|']'
op|'='
op|'{'
string|'"ports"'
op|':'
op|'{'
op|'}'
op|','
string|'"name"'
op|':'
name|'name'
op|'}'
newline|'\n'
name|'return'
op|'{'
string|'"network"'
op|':'
op|'{'
string|'"id"'
op|':'
name|'uuid'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|update_network
dedent|''
name|'def'
name|'update_network'
op|'('
name|'self'
op|','
name|'network'
op|','
name|'body'
op|'='
name|'None'
op|','
name|'tenant'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Updates a network"""'
newline|'\n'
name|'nets'
op|'='
name|'self'
op|'.'
name|'_get_tenant_nets'
op|'('
name|'tenant'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_net'
op|'('
name|'network'
op|','
name|'nets'
op|')'
newline|'\n'
name|'nets'
op|'['
name|'network'
op|']'
op|'['
string|"'name'"
op|']'
op|'='
name|'body'
op|'['
string|'"network"'
op|']'
op|'['
string|'"name"'
op|']'
newline|'\n'
name|'return'
op|'{'
string|'"network"'
op|':'
op|'{'
string|'"id"'
op|':'
name|'network'
op|','
string|'"name"'
op|':'
name|'nets'
op|'['
name|'networks'
op|']'
op|'['
string|'"name"'
op|']'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|delete_network
dedent|''
name|'def'
name|'delete_network'
op|'('
name|'self'
op|','
name|'network'
op|','
name|'tenant'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deletes the specified network"""'
newline|'\n'
name|'nets'
op|'='
name|'self'
op|'.'
name|'_get_tenant_nets'
op|'('
name|'tenant'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_net'
op|'('
name|'network'
op|','
name|'nets'
op|')'
newline|'\n'
name|'del'
name|'nets'
op|'['
name|'network'
op|']'
newline|'\n'
nl|'\n'
DECL|member|list_ports
dedent|''
name|'def'
name|'list_ports'
op|'('
name|'self'
op|','
name|'network'
op|','
name|'filter_ops'
op|'='
name|'None'
op|','
name|'tenant'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Fetches a list of ports on a given network"""'
newline|'\n'
name|'nets'
op|'='
name|'self'
op|'.'
name|'_get_tenant_nets'
op|'('
name|'tenant'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_net'
op|'('
name|'network'
op|','
name|'nets'
op|')'
newline|'\n'
nl|'\n'
name|'ports'
op|'='
name|'nets'
op|'['
name|'network'
op|']'
op|'['
string|"'ports'"
op|']'
op|'.'
name|'items'
op|'('
op|')'
newline|'\n'
name|'if'
name|'filter_ops'
name|'and'
string|"'attachment'"
name|'in'
name|'filter_ops'
op|':'
newline|'\n'
indent|'            '
name|'a'
op|'='
name|'filter_ops'
op|'.'
name|'pop'
op|'('
string|"'attachment'"
op|')'
newline|'\n'
name|'ports'
op|'='
op|'['
name|'p'
name|'for'
name|'p'
name|'in'
name|'ports'
name|'if'
name|'p'
op|'['
number|'1'
op|']'
op|'['
string|"'attachment'"
op|']'
op|'=='
name|'a'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'filter_ops'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|'"Need to implement files %s in "'
nl|'\n'
string|'"quantum fake client"'
op|'%'
name|'filter_ops'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
op|'{'
string|'"ports"'
op|':'
op|'['
op|'{'
string|"'id'"
op|':'
name|'p'
op|'['
number|'0'
op|']'
op|'}'
name|'for'
name|'p'
name|'in'
name|'ports'
op|']'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|show_port_details
dedent|''
name|'def'
name|'show_port_details'
op|'('
name|'self'
op|','
name|'network'
op|','
name|'port'
op|','
name|'tenant'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Fetches the details of a certain port"""'
newline|'\n'
name|'nets'
op|'='
name|'self'
op|'.'
name|'_get_tenant_nets'
op|'('
name|'tenant'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_net_and_port'
op|'('
name|'network'
op|','
name|'port'
op|','
name|'nets'
op|')'
newline|'\n'
name|'p'
op|'='
name|'nets'
op|'['
name|'network'
op|']'
op|'['
string|"'ports'"
op|']'
op|'['
name|'port'
op|']'
newline|'\n'
name|'return'
op|'{'
string|'"port"'
op|':'
op|'{'
string|'"state"'
op|':'
name|'p'
op|'['
string|'"state"'
op|']'
op|','
string|'"id"'
op|':'
name|'port'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|create_port
dedent|''
name|'def'
name|'create_port'
op|'('
name|'self'
op|','
name|'network'
op|','
name|'body'
op|'='
name|'None'
op|','
name|'tenant'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates a new port on a given network"""'
newline|'\n'
name|'nets'
op|'='
name|'self'
op|'.'
name|'_get_tenant_nets'
op|'('
name|'tenant'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_net'
op|'('
name|'network'
op|','
name|'nets'
op|')'
newline|'\n'
name|'uuid'
op|'='
name|'str'
op|'('
name|'utils'
op|'.'
name|'gen_uuid'
op|'('
op|')'
op|')'
newline|'\n'
name|'nets'
op|'['
name|'network'
op|']'
op|'['
string|"'ports'"
op|']'
op|'['
name|'uuid'
op|']'
op|'='
op|'{'
string|"'attachment'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'state'"
op|':'
name|'body'
op|'['
string|"'port'"
op|']'
op|'['
string|"'state'"
op|']'
op|'}'
newline|'\n'
name|'return'
op|'{'
string|'"port"'
op|':'
op|'{'
string|'"id"'
op|':'
name|'uuid'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|delete_port
dedent|''
name|'def'
name|'delete_port'
op|'('
name|'self'
op|','
name|'network'
op|','
name|'port'
op|','
name|'tenant'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deletes the specified port from a network"""'
newline|'\n'
name|'nets'
op|'='
name|'self'
op|'.'
name|'_get_tenant_nets'
op|'('
name|'tenant'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_net_and_port'
op|'('
name|'network'
op|','
name|'port'
op|','
name|'nets'
op|')'
newline|'\n'
name|'del'
name|'nets'
op|'['
name|'network'
op|']'
op|'['
string|"'ports'"
op|']'
op|'['
name|'port'
op|']'
newline|'\n'
nl|'\n'
DECL|member|set_port_state
dedent|''
name|'def'
name|'set_port_state'
op|'('
name|'self'
op|','
name|'network'
op|','
name|'port'
op|','
name|'body'
op|'='
name|'None'
op|','
name|'tenant'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Sets the state of the specified port"""'
newline|'\n'
name|'nets'
op|'='
name|'self'
op|'.'
name|'_get_tenant_nets'
op|'('
name|'tenant'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_net_and_port'
op|'('
name|'network'
op|','
name|'port'
op|','
name|'nets'
op|')'
newline|'\n'
nl|'\n'
name|'new_state'
op|'='
name|'body'
op|'['
string|"'port'"
op|']'
op|'['
string|"'state'"
op|']'
newline|'\n'
name|'nets'
op|'['
name|'network'
op|']'
op|'['
string|"'ports'"
op|']'
op|'['
name|'port'
op|']'
op|'['
string|"'state'"
op|']'
op|'='
name|'new_state'
newline|'\n'
name|'return'
op|'{'
string|'"port"'
op|':'
op|'{'
string|'"state"'
op|':'
name|'new_state'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|show_port_attachment
dedent|''
name|'def'
name|'show_port_attachment'
op|'('
name|'self'
op|','
name|'network'
op|','
name|'port'
op|','
name|'tenant'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Fetches the attachment-id associated with the specified port"""'
newline|'\n'
name|'nets'
op|'='
name|'self'
op|'.'
name|'_get_tenant_nets'
op|'('
name|'tenant'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_net_and_port'
op|'('
name|'network'
op|','
name|'port'
op|','
name|'nets'
op|')'
newline|'\n'
name|'p'
op|'='
name|'nets'
op|'['
name|'network'
op|']'
op|'['
string|"'ports'"
op|']'
op|'['
name|'port'
op|']'
newline|'\n'
name|'if'
name|'p'
op|'['
string|"'attachment'"
op|']'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|'"attachment"'
op|':'
op|'{'
string|'"id"'
op|':'
name|'p'
op|'['
string|"'attachment'"
op|']'
op|'}'
op|'}'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|'"attachment"'
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|attach_resource
dedent|''
dedent|''
name|'def'
name|'attach_resource'
op|'('
name|'self'
op|','
name|'network'
op|','
name|'port'
op|','
name|'body'
op|'='
name|'None'
op|','
name|'tenant'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'nets'
op|'='
name|'self'
op|'.'
name|'_get_tenant_nets'
op|'('
name|'tenant'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_net_and_port'
op|'('
name|'network'
op|','
name|'port'
op|','
name|'nets'
op|')'
newline|'\n'
name|'nets'
op|'['
name|'network'
op|']'
op|'['
string|"'ports'"
op|']'
op|'['
name|'port'
op|']'
op|'['
string|"'attachment'"
op|']'
op|'='
name|'body'
op|'['
string|"'attachment'"
op|']'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|detach_resource
dedent|''
name|'def'
name|'detach_resource'
op|'('
name|'self'
op|','
name|'network'
op|','
name|'port'
op|','
name|'tenant'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Removes the attachment-id of the specified port"""'
newline|'\n'
name|'nets'
op|'='
name|'self'
op|'.'
name|'_get_tenant_nets'
op|'('
name|'tenant'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_net_and_port'
op|'('
name|'network'
op|','
name|'port'
op|','
name|'nets'
op|')'
newline|'\n'
name|'nets'
op|'['
name|'network'
op|']'
op|'['
string|"'ports'"
op|']'
op|'['
name|'port'
op|']'
op|'['
string|"'attachment'"
op|']'
op|'='
name|'None'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
