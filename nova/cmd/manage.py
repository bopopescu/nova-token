begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2011 X.commerce, a business unit of eBay Inc.'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
comment|'# Interactive shell based on Django:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Copyright (c) 2005, the Lawrence Journal-World'
nl|'\n'
comment|'# All rights reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Redistribution and use in source and binary forms, with or without'
nl|'\n'
comment|'# modification, are permitted provided that the following conditions are met:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#     1. Redistributions of source code must retain the above copyright notice,'
nl|'\n'
comment|'#        this list of conditions and the following disclaimer.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#     2. Redistributions in binary form must reproduce the above copyright'
nl|'\n'
comment|'#        notice, this list of conditions and the following disclaimer in the'
nl|'\n'
comment|'#        documentation and/or other materials provided with the distribution.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#     3. Neither the name of Django nor the names of its contributors may be'
nl|'\n'
comment|'#        used to endorse or promote products derived from this software without'
nl|'\n'
comment|'#        specific prior written permission.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS'
nl|'\n'
comment|'# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT'
nl|'\n'
comment|'# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR'
nl|'\n'
comment|'# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT'
nl|'\n'
comment|'# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,'
nl|'\n'
comment|'# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT'
nl|'\n'
comment|'# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,'
nl|'\n'
comment|'# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY'
nl|'\n'
comment|'# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT'
nl|'\n'
comment|'# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE'
nl|'\n'
comment|'# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""\n  CLI interface for nova management.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'netaddr'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
nl|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'ec2'
name|'import'
name|'ec2utils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'availability_zones'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'flavors'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'config'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
name|'import'
name|'migration'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'cliutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'db'
name|'import'
name|'exception'
name|'as'
name|'db_exc'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'importutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'quota'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'servicegroup'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'version'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'network_manager'"
op|','
string|"'nova.service'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'service_down_time'"
op|','
string|"'nova.service'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'flat_network_bridge'"
op|','
string|"'nova.network.manager'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'num_networks'"
op|','
string|"'nova.network.manager'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'multi_host'"
op|','
string|"'nova.network.manager'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'network_size'"
op|','
string|"'nova.network.manager'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'vlan_start'"
op|','
string|"'nova.network.manager'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'vpn_start'"
op|','
string|"'nova.network.manager'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'default_floating_pool'"
op|','
string|"'nova.network.floating_ips'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'import_opt'
op|'('
string|"'public_interface'"
op|','
string|"'nova.network.linux_net'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|QUOTAS
name|'QUOTAS'
op|'='
name|'quota'
op|'.'
name|'QUOTAS'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# Decorators for actions'
nl|'\n'
DECL|function|args
name|'def'
name|'args'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
DECL|function|_decorator
indent|'    '
name|'def'
name|'_decorator'
op|'('
name|'func'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'func'
op|'.'
name|'__dict__'
op|'.'
name|'setdefault'
op|'('
string|"'args'"
op|','
op|'['
op|']'
op|')'
op|'.'
name|'insert'
op|'('
number|'0'
op|','
op|'('
name|'args'
op|','
name|'kwargs'
op|')'
op|')'
newline|'\n'
name|'return'
name|'func'
newline|'\n'
dedent|''
name|'return'
name|'_decorator'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|param2id
dedent|''
name|'def'
name|'param2id'
op|'('
name|'object_id'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Helper function to convert various volume id types to internal id.\n    args: [object_id], e.g. \'vol-0000000a\' or \'volume-0000000a\' or \'10\'\n    """'
newline|'\n'
name|'if'
string|"'-'"
name|'in'
name|'object_id'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'ec2utils'
op|'.'
name|'ec2_vol_id_to_uuid'
op|'('
name|'object_id'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'object_id'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VpnCommands
dedent|''
dedent|''
name|'class'
name|'VpnCommands'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Class for managing VPNs."""'
newline|'\n'
nl|'\n'
op|'@'
name|'args'
op|'('
string|"'--project'"
op|','
name|'dest'
op|'='
string|"'project_id'"
op|','
name|'metavar'
op|'='
string|"'<Project name>'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Project name'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--ip'"
op|','
name|'metavar'
op|'='
string|"'<IP Address>'"
op|','
name|'help'
op|'='
string|"'IP Address'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--port'"
op|','
name|'metavar'
op|'='
string|"'<Port>'"
op|','
name|'help'
op|'='
string|"'Port'"
op|')'
newline|'\n'
DECL|member|change
name|'def'
name|'change'
op|'('
name|'self'
op|','
name|'project_id'
op|','
name|'ip'
op|','
name|'port'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Change the ip and port for a vpn.\n\n        this will update all networks associated with a project\n        not sure if that\'s the desired behavior or not, patches accepted\n\n        """'
newline|'\n'
comment|"# TODO(tr3buchet): perhaps this shouldn't update all networks"
nl|'\n'
comment|'# associated with a project in the future'
nl|'\n'
name|'admin_context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'networks'
op|'='
name|'db'
op|'.'
name|'project_get_networks'
op|'('
name|'admin_context'
op|','
name|'project_id'
op|')'
newline|'\n'
name|'for'
name|'network'
name|'in'
name|'networks'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'network_update'
op|'('
name|'admin_context'
op|','
nl|'\n'
name|'network'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'vpn_public_address'"
op|':'
name|'ip'
op|','
nl|'\n'
string|"'vpn_public_port'"
op|':'
name|'int'
op|'('
name|'port'
op|')'
op|'}'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ShellCommands
dedent|''
dedent|''
dedent|''
name|'class'
name|'ShellCommands'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|bpython
indent|'    '
name|'def'
name|'bpython'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Runs a bpython shell.\n\n        Falls back to Ipython/python shell if unavailable\n        """'
newline|'\n'
name|'self'
op|'.'
name|'run'
op|'('
string|"'bpython'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|ipython
dedent|''
name|'def'
name|'ipython'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Runs an Ipython shell.\n\n        Falls back to Python shell if unavailable\n        """'
newline|'\n'
name|'self'
op|'.'
name|'run'
op|'('
string|"'ipython'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|python
dedent|''
name|'def'
name|'python'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Runs a python shell.\n\n        Falls back to Python shell if unavailable\n        """'
newline|'\n'
name|'self'
op|'.'
name|'run'
op|'('
string|"'python'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'args'
op|'('
string|"'--shell'"
op|','
name|'metavar'
op|'='
string|"'<bpython|ipython|python >'"
op|','
nl|'\n'
name|'help'
op|'='
string|"'Python shell'"
op|')'
newline|'\n'
DECL|member|run
name|'def'
name|'run'
op|'('
name|'self'
op|','
name|'shell'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Runs a Python interactive interpreter."""'
newline|'\n'
name|'if'
name|'not'
name|'shell'
op|':'
newline|'\n'
indent|'            '
name|'shell'
op|'='
string|"'bpython'"
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'shell'
op|'=='
string|"'bpython'"
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'import'
name|'bpython'
newline|'\n'
name|'bpython'
op|'.'
name|'embed'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'                '
name|'shell'
op|'='
string|"'ipython'"
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'shell'
op|'=='
string|"'ipython'"
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'import'
name|'IPython'
newline|'\n'
comment|'# Explicitly pass an empty list as arguments, because'
nl|'\n'
comment|'# otherwise IPython would use sys.argv from this script.'
nl|'\n'
name|'shell'
op|'='
name|'IPython'
op|'.'
name|'Shell'
op|'.'
name|'IPShell'
op|'('
name|'argv'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
name|'shell'
op|'.'
name|'mainloop'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'                '
name|'shell'
op|'='
string|"'python'"
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'shell'
op|'=='
string|"'python'"
op|':'
newline|'\n'
indent|'            '
name|'import'
name|'code'
newline|'\n'
name|'try'
op|':'
newline|'\n'
comment|"# Try activating rlcompleter, because it's handy."
nl|'\n'
indent|'                '
name|'import'
name|'readline'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|"# We don't have to wrap the following import in a 'try',"
nl|'\n'
comment|"# because we already know 'readline' was imported successfully."
nl|'\n'
indent|'                '
name|'readline'
op|'.'
name|'parse_and_bind'
op|'('
string|'"tab:complete"'
op|')'
newline|'\n'
dedent|''
name|'code'
op|'.'
name|'interact'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'args'
op|'('
string|"'--path'"
op|','
name|'metavar'
op|'='
string|"'<path>'"
op|','
name|'help'
op|'='
string|"'Script path'"
op|')'
newline|'\n'
DECL|member|script
name|'def'
name|'script'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Runs the script from the specified path with flags set properly.\n\n        arguments: path\n        """'
newline|'\n'
name|'exec'
op|'('
name|'compile'
op|'('
name|'open'
op|'('
name|'path'
op|')'
op|'.'
name|'read'
op|'('
op|')'
op|','
name|'path'
op|','
string|"'exec'"
op|')'
op|','
name|'locals'
op|'('
op|')'
op|','
name|'globals'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_db_error
dedent|''
dedent|''
name|'def'
name|'_db_error'
op|'('
name|'caught_exception'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'print'
name|'caught_exception'
newline|'\n'
name|'print'
name|'_'
op|'('
string|'"The above error may show that the database has not "'
nl|'\n'
string|'"been created.\\nPlease create a database using "'
nl|'\n'
string|'"\'nova-manage db sync\' before running this command."'
op|')'
newline|'\n'
name|'exit'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ProjectCommands
dedent|''
name|'class'
name|'ProjectCommands'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Class for managing projects."""'
newline|'\n'
nl|'\n'
op|'@'
name|'args'
op|'('
string|"'--project'"
op|','
name|'dest'
op|'='
string|"'project_id'"
op|','
name|'metavar'
op|'='
string|"'<Project name>'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Project name'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--key'"
op|','
name|'metavar'
op|'='
string|"'<key>'"
op|','
name|'help'
op|'='
string|"'Key'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--value'"
op|','
name|'metavar'
op|'='
string|"'<value>'"
op|','
name|'help'
op|'='
string|"'Value'"
op|')'
newline|'\n'
DECL|member|quota
name|'def'
name|'quota'
op|'('
name|'self'
op|','
name|'project_id'
op|','
name|'key'
op|'='
name|'None'
op|','
name|'value'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create, update or display quotas for project\n\n        If no quota key is provided, the quota will be displayed.\n        If a valid quota key is provided and it does not exist,\n        it will be created. Otherwise, it will be updated.\n        """'
newline|'\n'
nl|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'project_quota'
op|'='
name|'QUOTAS'
op|'.'
name|'get_project_quotas'
op|'('
name|'ctxt'
op|','
name|'project_id'
op|')'
newline|'\n'
comment|'# if key is None, that means we need to show the quotas instead'
nl|'\n'
comment|'# of updating them'
nl|'\n'
name|'if'
name|'key'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'key'
name|'in'
name|'project_quota'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'value'
op|'.'
name|'lower'
op|'('
op|')'
op|'=='
string|"'unlimited'"
op|':'
newline|'\n'
indent|'                    '
name|'value'
op|'='
op|'-'
number|'1'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'db'
op|'.'
name|'quota_update'
op|'('
name|'ctxt'
op|','
name|'project_id'
op|','
name|'key'
op|','
name|'value'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ProjectQuotaNotFound'
op|':'
newline|'\n'
indent|'                    '
name|'db'
op|'.'
name|'quota_create'
op|'('
name|'ctxt'
op|','
name|'project_id'
op|','
name|'key'
op|','
name|'value'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'print'
name|'_'
op|'('
string|"'%(key)s is not a valid quota key. Valid options are: '"
nl|'\n'
string|"'%(options)s.'"
op|')'
op|'%'
op|'{'
string|"'key'"
op|':'
name|'key'
op|','
nl|'\n'
string|"'options'"
op|':'
string|"', '"
op|'.'
name|'join'
op|'('
name|'project_quota'
op|')'
op|'}'
newline|'\n'
name|'return'
op|'('
number|'2'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'print_format'
op|'='
string|'"%-36s %-10s %-10s %-10s"'
newline|'\n'
name|'print'
name|'print_format'
op|'%'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Quota'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'Limit'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'In Use'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'Reserved'"
op|')'
op|')'
newline|'\n'
comment|'# Retrieve the quota after update'
nl|'\n'
name|'project_quota'
op|'='
name|'QUOTAS'
op|'.'
name|'get_project_quotas'
op|'('
name|'ctxt'
op|','
name|'project_id'
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'project_quota'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'value'
op|'['
string|"'limit'"
op|']'
op|'<'
number|'0'
name|'or'
name|'value'
op|'['
string|"'limit'"
op|']'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'value'
op|'['
string|"'limit'"
op|']'
op|'='
string|"'unlimited'"
newline|'\n'
dedent|''
name|'print'
name|'print_format'
op|'%'
op|'('
name|'key'
op|','
name|'value'
op|'['
string|"'limit'"
op|']'
op|','
name|'value'
op|'['
string|"'in_use'"
op|']'
op|','
nl|'\n'
name|'value'
op|'['
string|"'reserved'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'args'
op|'('
string|"'--project'"
op|','
name|'dest'
op|'='
string|"'project_id'"
op|','
name|'metavar'
op|'='
string|"'<Project name>'"
op|','
nl|'\n'
name|'help'
op|'='
string|"'Project name'"
op|')'
newline|'\n'
DECL|member|scrub
name|'def'
name|'scrub'
op|'('
name|'self'
op|','
name|'project_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deletes data associated with project."""'
newline|'\n'
name|'admin_context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'networks'
op|'='
name|'db'
op|'.'
name|'project_get_networks'
op|'('
name|'admin_context'
op|','
name|'project_id'
op|')'
newline|'\n'
name|'for'
name|'network'
name|'in'
name|'networks'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'network_disassociate'
op|'('
name|'admin_context'
op|','
name|'network'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'groups'
op|'='
name|'db'
op|'.'
name|'security_group_get_by_project'
op|'('
name|'admin_context'
op|','
name|'project_id'
op|')'
newline|'\n'
name|'for'
name|'group'
name|'in'
name|'groups'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'security_group_destroy'
op|'('
name|'admin_context'
op|','
name|'group'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|AccountCommands
dedent|''
dedent|''
dedent|''
name|'AccountCommands'
op|'='
name|'ProjectCommands'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FixedIpCommands
name|'class'
name|'FixedIpCommands'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Class for managing fixed ip."""'
newline|'\n'
nl|'\n'
op|'@'
name|'args'
op|'('
string|"'--host'"
op|','
name|'metavar'
op|'='
string|"'<host>'"
op|','
name|'help'
op|'='
string|"'Host'"
op|')'
newline|'\n'
DECL|member|list
name|'def'
name|'list'
op|'('
name|'self'
op|','
name|'host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Lists all fixed ips (optionally by host)."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'host'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'fixed_ips'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_all'
op|'('
name|'ctxt'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'fixed_ips'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_host'
op|'('
name|'ctxt'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'_'
op|'('
string|'"error: %s"'
op|')'
op|'%'
name|'ex'
newline|'\n'
name|'return'
op|'('
number|'2'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'instances'
op|'='
name|'db'
op|'.'
name|'instance_get_all'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|')'
newline|'\n'
name|'instances_by_uuid'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'instance'
name|'in'
name|'instances'
op|':'
newline|'\n'
indent|'            '
name|'instances_by_uuid'
op|'['
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|']'
op|'='
name|'instance'
newline|'\n'
nl|'\n'
dedent|''
name|'print'
string|'"%-18s\\t%-15s\\t%-15s\\t%s"'
op|'%'
op|'('
name|'_'
op|'('
string|"'network'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'IP address'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'hostname'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'host'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'all_networks'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'try'
op|':'
newline|'\n'
comment|'# use network_get_all to retrieve all existing networks'
nl|'\n'
comment|'# this is to ensure that IPs associated with deleted networks'
nl|'\n'
comment|'# will not throw exceptions.'
nl|'\n'
indent|'            '
name|'for'
name|'network'
name|'in'
name|'db'
op|'.'
name|'network_get_all'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'all_networks'
op|'['
name|'network'
op|'.'
name|'id'
op|']'
op|'='
name|'network'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NoNetworksFound'
op|':'
newline|'\n'
comment|'# do not have any networks, so even if there are IPs, these'
nl|'\n'
comment|'# IPs should have been deleted ones, so return.'
nl|'\n'
indent|'            '
name|'print'
name|'_'
op|'('
string|"'No fixed IP found.'"
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'has_ip'
op|'='
name|'False'
newline|'\n'
name|'for'
name|'fixed_ip'
name|'in'
name|'fixed_ips'
op|':'
newline|'\n'
indent|'            '
name|'hostname'
op|'='
name|'None'
newline|'\n'
name|'host'
op|'='
name|'None'
newline|'\n'
name|'network'
op|'='
name|'all_networks'
op|'.'
name|'get'
op|'('
name|'fixed_ip'
op|'['
string|"'network_id'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'network'
op|':'
newline|'\n'
indent|'                '
name|'has_ip'
op|'='
name|'True'
newline|'\n'
name|'if'
name|'fixed_ip'
op|'.'
name|'get'
op|'('
string|"'instance_uuid'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'instance'
op|'='
name|'instances_by_uuid'
op|'.'
name|'get'
op|'('
name|'fixed_ip'
op|'['
string|"'instance_uuid'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'instance'
op|':'
newline|'\n'
indent|'                        '
name|'hostname'
op|'='
name|'instance'
op|'['
string|"'hostname'"
op|']'
newline|'\n'
name|'host'
op|'='
name|'instance'
op|'['
string|"'host'"
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'print'
name|'_'
op|'('
string|"'WARNING: fixed ip %s allocated to missing'"
nl|'\n'
string|"' instance'"
op|')'
op|'%'
name|'str'
op|'('
name|'fixed_ip'
op|'['
string|"'address'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'print'
string|'"%-18s\\t%-15s\\t%-15s\\t%s"'
op|'%'
op|'('
nl|'\n'
name|'network'
op|'['
string|"'cidr'"
op|']'
op|','
nl|'\n'
name|'fixed_ip'
op|'['
string|"'address'"
op|']'
op|','
nl|'\n'
name|'hostname'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'has_ip'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'_'
op|'('
string|"'No fixed IP found.'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'args'
op|'('
string|"'--address'"
op|','
name|'metavar'
op|'='
string|"'<ip address>'"
op|','
name|'help'
op|'='
string|"'IP address'"
op|')'
newline|'\n'
DECL|member|reserve
name|'def'
name|'reserve'
op|'('
name|'self'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Mark fixed ip as reserved\n\n        arguments: address\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_set_reserved'
op|'('
name|'address'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'args'
op|'('
string|"'--address'"
op|','
name|'metavar'
op|'='
string|"'<ip address>'"
op|','
name|'help'
op|'='
string|"'IP address'"
op|')'
newline|'\n'
DECL|member|unreserve
name|'def'
name|'unreserve'
op|'('
name|'self'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Mark fixed ip as free to use\n\n        arguments: address\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_set_reserved'
op|'('
name|'address'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_set_reserved
dedent|''
name|'def'
name|'_set_reserved'
op|'('
name|'self'
op|','
name|'address'
op|','
name|'reserved'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'fixed_ip'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get_by_address'
op|'('
name|'ctxt'
op|','
name|'address'
op|')'
newline|'\n'
name|'if'
name|'fixed_ip'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'NotFound'
op|'('
string|"'Could not find address'"
op|')'
newline|'\n'
dedent|''
name|'db'
op|'.'
name|'fixed_ip_update'
op|'('
name|'ctxt'
op|','
name|'fixed_ip'
op|'['
string|"'address'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'reserved'"
op|':'
name|'reserved'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'_'
op|'('
string|'"error: %s"'
op|')'
op|'%'
name|'ex'
newline|'\n'
name|'return'
op|'('
number|'2'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FloatingIpCommands
dedent|''
dedent|''
dedent|''
name|'class'
name|'FloatingIpCommands'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Class for managing floating ip."""'
newline|'\n'
nl|'\n'
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|address_to_hosts
name|'def'
name|'address_to_hosts'
op|'('
name|'addresses'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Iterate over hosts within an address range.\n\n        If an explicit range specifier is missing, the parameter is\n        interpreted as a specific individual address.\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
name|'netaddr'
op|'.'
name|'IPAddress'
op|'('
name|'addresses'
op|')'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'net'
op|'='
name|'netaddr'
op|'.'
name|'IPNetwork'
op|'('
name|'addresses'
op|')'
newline|'\n'
name|'if'
name|'net'
op|'.'
name|'size'
op|'<'
number|'4'
op|':'
newline|'\n'
indent|'                '
name|'reason'
op|'='
name|'_'
op|'('
string|'"/%s should be specified as single address(es) "'
nl|'\n'
string|'"not in cidr format"'
op|')'
op|'%'
name|'net'
op|'.'
name|'prefixlen'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'InvalidInput'
op|'('
name|'reason'
op|'='
name|'reason'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'net'
op|'.'
name|'size'
op|'>='
number|'1000000'
op|':'
newline|'\n'
comment|'# NOTE(dripton): If we generate a million IPs and put them in'
nl|'\n'
comment|'# the database, the system will slow to a crawl and/or run'
nl|'\n'
comment|'# out of memory and crash.  This is clearly a misconfiguration.'
nl|'\n'
indent|'                '
name|'reason'
op|'='
name|'_'
op|'('
string|'"Too many IP addresses will be generated.  Please "'
nl|'\n'
string|'"increase /%s to reduce the number generated."'
nl|'\n'
op|')'
op|'%'
name|'net'
op|'.'
name|'prefixlen'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'InvalidInput'
op|'('
name|'reason'
op|'='
name|'reason'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'net'
op|'.'
name|'iter_hosts'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'args'
op|'('
string|"'--ip_range'"
op|','
name|'metavar'
op|'='
string|"'<range>'"
op|','
name|'help'
op|'='
string|"'IP range'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--pool'"
op|','
name|'metavar'
op|'='
string|"'<pool>'"
op|','
name|'help'
op|'='
string|"'Optional pool'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--interface'"
op|','
name|'metavar'
op|'='
string|"'<interface>'"
op|','
name|'help'
op|'='
string|"'Optional interface'"
op|')'
newline|'\n'
DECL|member|create
name|'def'
name|'create'
op|'('
name|'self'
op|','
name|'ip_range'
op|','
name|'pool'
op|'='
name|'None'
op|','
name|'interface'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates floating ips for zone by range."""'
newline|'\n'
name|'admin_context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'pool'
op|':'
newline|'\n'
indent|'            '
name|'pool'
op|'='
name|'CONF'
op|'.'
name|'default_floating_pool'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'interface'
op|':'
newline|'\n'
indent|'            '
name|'interface'
op|'='
name|'CONF'
op|'.'
name|'public_interface'
newline|'\n'
nl|'\n'
dedent|''
name|'ips'
op|'='
op|'('
op|'{'
string|"'address'"
op|':'
name|'str'
op|'('
name|'address'
op|')'
op|','
string|"'pool'"
op|':'
name|'pool'
op|','
string|"'interface'"
op|':'
name|'interface'
op|'}'
nl|'\n'
name|'for'
name|'address'
name|'in'
name|'self'
op|'.'
name|'address_to_hosts'
op|'('
name|'ip_range'
op|')'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'db'
op|'.'
name|'floating_ip_bulk_create'
op|'('
name|'admin_context'
op|','
name|'ips'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'FloatingIpExists'
name|'as'
name|'exc'
op|':'
newline|'\n'
comment|'# NOTE(simplylizz): Maybe logging would be better here'
nl|'\n'
comment|"# instead of printing, but logging isn't used here and I"
nl|'\n'
comment|"# don't know why."
nl|'\n'
indent|'            '
name|'print'
op|'('
string|"'error: %s'"
op|'%'
name|'exc'
op|')'
newline|'\n'
name|'return'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'args'
op|'('
string|"'--ip_range'"
op|','
name|'metavar'
op|'='
string|"'<range>'"
op|','
name|'help'
op|'='
string|"'IP range'"
op|')'
newline|'\n'
DECL|member|delete
name|'def'
name|'delete'
op|'('
name|'self'
op|','
name|'ip_range'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deletes floating ips by range."""'
newline|'\n'
name|'admin_context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'ips'
op|'='
op|'('
op|'{'
string|"'address'"
op|':'
name|'str'
op|'('
name|'address'
op|')'
op|'}'
nl|'\n'
name|'for'
name|'address'
name|'in'
name|'self'
op|'.'
name|'address_to_hosts'
op|'('
name|'ip_range'
op|')'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'floating_ip_bulk_destroy'
op|'('
name|'admin_context'
op|','
name|'ips'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'args'
op|'('
string|"'--host'"
op|','
name|'metavar'
op|'='
string|"'<host>'"
op|','
name|'help'
op|'='
string|"'Host'"
op|')'
newline|'\n'
DECL|member|list
name|'def'
name|'list'
op|'('
name|'self'
op|','
name|'host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Lists all floating ips (optionally by host).\n\n        Note: if host is given, only active floating IPs are returned\n        """'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'host'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'floating_ips'
op|'='
name|'db'
op|'.'
name|'floating_ip_get_all'
op|'('
name|'ctxt'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'floating_ips'
op|'='
name|'db'
op|'.'
name|'floating_ip_get_all_by_host'
op|'('
name|'ctxt'
op|','
name|'host'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NoFloatingIpsDefined'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'_'
op|'('
string|'"No floating IP addresses have been defined."'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'for'
name|'floating_ip'
name|'in'
name|'floating_ips'
op|':'
newline|'\n'
indent|'            '
name|'instance_uuid'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'floating_ip'
op|'['
string|"'fixed_ip_id'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'fixed_ip'
op|'='
name|'db'
op|'.'
name|'fixed_ip_get'
op|'('
name|'ctxt'
op|','
name|'floating_ip'
op|'['
string|"'fixed_ip_id'"
op|']'
op|')'
newline|'\n'
name|'instance_uuid'
op|'='
name|'fixed_ip'
op|'['
string|"'instance_uuid'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'print'
string|'"%s\\t%s\\t%s\\t%s\\t%s"'
op|'%'
op|'('
name|'floating_ip'
op|'['
string|"'project_id'"
op|']'
op|','
nl|'\n'
name|'floating_ip'
op|'['
string|"'address'"
op|']'
op|','
nl|'\n'
name|'instance_uuid'
op|','
nl|'\n'
name|'floating_ip'
op|'['
string|"'pool'"
op|']'
op|','
nl|'\n'
name|'floating_ip'
op|'['
string|"'interface'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NetworkCommands
dedent|''
dedent|''
dedent|''
name|'class'
name|'NetworkCommands'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Class for managing networks."""'
newline|'\n'
nl|'\n'
op|'@'
name|'args'
op|'('
string|"'--label'"
op|','
name|'metavar'
op|'='
string|"'<label>'"
op|','
name|'help'
op|'='
string|"'Label for network (ex: public)'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--fixed_range_v4'"
op|','
name|'dest'
op|'='
string|"'cidr'"
op|','
name|'metavar'
op|'='
string|"'<x.x.x.x/yy>'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'IPv4 subnet (ex: 10.0.0.0/8)'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--num_networks'"
op|','
name|'metavar'
op|'='
string|"'<number>'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Number of networks to create'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--network_size'"
op|','
name|'metavar'
op|'='
string|"'<number>'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Number of IPs per network'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--vlan'"
op|','
name|'dest'
op|'='
string|"'vlan_start'"
op|','
name|'metavar'
op|'='
string|"'<vlan id>'"
op|','
name|'help'
op|'='
string|"'vlan id'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--vpn'"
op|','
name|'dest'
op|'='
string|"'vpn_start'"
op|','
name|'help'
op|'='
string|"'vpn start'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--fixed_range_v6'"
op|','
name|'dest'
op|'='
string|"'cidr_v6'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'IPv6 subnet (ex: fe80::/64'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--gateway'"
op|','
name|'help'
op|'='
string|"'gateway'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--gateway_v6'"
op|','
name|'help'
op|'='
string|"'ipv6 gateway'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--bridge'"
op|','
name|'metavar'
op|'='
string|"'<bridge>'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'VIFs on this network are connected to this bridge'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--bridge_interface'"
op|','
name|'metavar'
op|'='
string|"'<bridge interface>'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'the bridge is connected to this interface'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--multi_host'"
op|','
name|'metavar'
op|'='
string|'"<\'T\'|\'F\'>"'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Multi host'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--dns1'"
op|','
name|'metavar'
op|'='
string|'"<DNS Address>"'
op|','
name|'help'
op|'='
string|"'First DNS'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--dns2'"
op|','
name|'metavar'
op|'='
string|'"<DNS Address>"'
op|','
name|'help'
op|'='
string|"'Second DNS'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--uuid'"
op|','
name|'metavar'
op|'='
string|'"<network uuid>"'
op|','
name|'help'
op|'='
string|"'Network UUID'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--fixed_cidr'"
op|','
name|'metavar'
op|'='
string|"'<x.x.x.x/yy>'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'IPv4 subnet for fixed IPS (ex: 10.20.0.0/16)'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--project_id'"
op|','
name|'metavar'
op|'='
string|'"<project id>"'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Project id'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--priority'"
op|','
name|'metavar'
op|'='
string|'"<number>"'
op|','
name|'help'
op|'='
string|"'Network interface priority'"
op|')'
newline|'\n'
DECL|member|create
name|'def'
name|'create'
op|'('
name|'self'
op|','
name|'label'
op|'='
name|'None'
op|','
name|'cidr'
op|'='
name|'None'
op|','
name|'num_networks'
op|'='
name|'None'
op|','
nl|'\n'
name|'network_size'
op|'='
name|'None'
op|','
name|'multi_host'
op|'='
name|'None'
op|','
name|'vlan_start'
op|'='
name|'None'
op|','
nl|'\n'
name|'vpn_start'
op|'='
name|'None'
op|','
name|'cidr_v6'
op|'='
name|'None'
op|','
name|'gateway'
op|'='
name|'None'
op|','
nl|'\n'
name|'gateway_v6'
op|'='
name|'None'
op|','
name|'bridge'
op|'='
name|'None'
op|','
name|'bridge_interface'
op|'='
name|'None'
op|','
nl|'\n'
name|'dns1'
op|'='
name|'None'
op|','
name|'dns2'
op|'='
name|'None'
op|','
name|'project_id'
op|'='
name|'None'
op|','
name|'priority'
op|'='
name|'None'
op|','
nl|'\n'
name|'uuid'
op|'='
name|'None'
op|','
name|'fixed_cidr'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates fixed ips for host by range."""'
newline|'\n'
name|'kwargs'
op|'='
name|'dict'
op|'('
op|'('
op|'('
name|'k'
op|','
name|'v'
op|')'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'locals'
op|'('
op|')'
op|'.'
name|'iteritems'
op|'('
op|')'
nl|'\n'
name|'if'
name|'v'
name|'and'
name|'k'
op|'!='
string|'"self"'
op|')'
op|')'
newline|'\n'
name|'if'
name|'multi_host'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'kwargs'
op|'['
string|"'multi_host'"
op|']'
op|'='
name|'multi_host'
op|'=='
string|"'T'"
newline|'\n'
dedent|''
name|'net_manager'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'CONF'
op|'.'
name|'network_manager'
op|')'
newline|'\n'
name|'net_manager'
op|'.'
name|'create_networks'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|list
dedent|''
name|'def'
name|'list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""List all created networks."""'
newline|'\n'
name|'_fmt'
op|'='
string|'"%-5s\\t%-18s\\t%-15s\\t%-15s\\t%-15s\\t%-15s\\t%-15s\\t%-15s\\t%-15s"'
newline|'\n'
name|'print'
name|'_fmt'
op|'%'
op|'('
name|'_'
op|'('
string|"'id'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'IPv4'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'IPv6'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'start address'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'DNS1'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'DNS2'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'VlanID'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'project'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|'"uuid"'
op|')'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
comment|'# Since network_get_all can throw exception.NoNetworksFound'
nl|'\n'
comment|'# for this command to show a nice result, this exception'
nl|'\n'
comment|'# should be caught and handled as such.'
nl|'\n'
indent|'            '
name|'networks'
op|'='
name|'db'
op|'.'
name|'network_get_all'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NoNetworksFound'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'_'
op|'('
string|"'No networks found'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'network'
name|'in'
name|'networks'
op|':'
newline|'\n'
indent|'                '
name|'print'
name|'_fmt'
op|'%'
op|'('
name|'network'
op|'.'
name|'id'
op|','
nl|'\n'
name|'network'
op|'.'
name|'cidr'
op|','
nl|'\n'
name|'network'
op|'.'
name|'cidr_v6'
op|','
nl|'\n'
name|'network'
op|'.'
name|'dhcp_start'
op|','
nl|'\n'
name|'network'
op|'.'
name|'dns1'
op|','
nl|'\n'
name|'network'
op|'.'
name|'dns2'
op|','
nl|'\n'
name|'network'
op|'.'
name|'vlan'
op|','
nl|'\n'
name|'network'
op|'.'
name|'project_id'
op|','
nl|'\n'
name|'network'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'args'
op|'('
string|"'--fixed_range'"
op|','
name|'metavar'
op|'='
string|"'<x.x.x.x/yy>'"
op|','
name|'help'
op|'='
string|"'Network to delete'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--uuid'"
op|','
name|'metavar'
op|'='
string|"'<uuid>'"
op|','
name|'help'
op|'='
string|"'UUID of network to delete'"
op|')'
newline|'\n'
DECL|member|delete
name|'def'
name|'delete'
op|'('
name|'self'
op|','
name|'fixed_range'
op|'='
name|'None'
op|','
name|'uuid'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deletes a network."""'
newline|'\n'
nl|'\n'
name|'if'
name|'fixed_range'
name|'is'
name|'None'
name|'and'
name|'uuid'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
name|'_'
op|'('
string|'"Please specify either fixed_range or uuid"'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'net_manager'
op|'='
name|'importutils'
op|'.'
name|'import_object'
op|'('
name|'CONF'
op|'.'
name|'network_manager'
op|')'
newline|'\n'
name|'if'
string|'"QuantumManager"'
name|'in'
name|'CONF'
op|'.'
name|'network_manager'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'uuid'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
name|'_'
op|'('
string|'"UUID is required to delete "'
nl|'\n'
string|'"Quantum Networks"'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'fixed_range'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
name|'_'
op|'('
string|'"Deleting by fixed_range is not supported "'
nl|'\n'
string|'"with the QuantumManager"'
op|')'
op|')'
newline|'\n'
comment|'# delete the network'
nl|'\n'
dedent|''
dedent|''
name|'net_manager'
op|'.'
name|'delete_network'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'fixed_range'
op|','
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'args'
op|'('
string|"'--fixed_range'"
op|','
name|'metavar'
op|'='
string|"'<x.x.x.x/yy>'"
op|','
name|'help'
op|'='
string|"'Network to modify'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--project'"
op|','
name|'metavar'
op|'='
string|"'<project name>'"
op|','
nl|'\n'
name|'help'
op|'='
string|"'Project name to associate'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--host'"
op|','
name|'metavar'
op|'='
string|"'<host>'"
op|','
name|'help'
op|'='
string|"'Host to associate'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--disassociate-project'"
op|','
name|'action'
op|'='
string|'"store_true"'
op|','
name|'dest'
op|'='
string|"'dis_project'"
op|','
nl|'\n'
name|'default'
op|'='
name|'False'
op|','
name|'help'
op|'='
string|"'Disassociate Network from Project'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--disassociate-host'"
op|','
name|'action'
op|'='
string|'"store_true"'
op|','
name|'dest'
op|'='
string|"'dis_host'"
op|','
nl|'\n'
name|'default'
op|'='
name|'False'
op|','
name|'help'
op|'='
string|"'Disassociate Host from Project'"
op|')'
newline|'\n'
DECL|member|modify
name|'def'
name|'modify'
op|'('
name|'self'
op|','
name|'fixed_range'
op|','
name|'project'
op|'='
name|'None'
op|','
name|'host'
op|'='
name|'None'
op|','
nl|'\n'
name|'dis_project'
op|'='
name|'None'
op|','
name|'dis_host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Associate/Disassociate Network with Project and/or Host\n        arguments: network project host\n        leave any field blank to ignore it\n        """'
newline|'\n'
name|'admin_context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'network'
op|'='
name|'db'
op|'.'
name|'network_get_by_cidr'
op|'('
name|'admin_context'
op|','
name|'fixed_range'
op|')'
newline|'\n'
name|'net'
op|'='
op|'{'
op|'}'
newline|'\n'
comment|'#User can choose the following actions each for project and host.'
nl|'\n'
comment|'#1) Associate (set not None value given by project/host parameter)'
nl|'\n'
comment|'#2) Disassociate (set None by disassociate parameter)'
nl|'\n'
comment|"#3) Keep unchanged (project/host key is not added to 'net')"
nl|'\n'
name|'if'
name|'dis_project'
op|':'
newline|'\n'
indent|'            '
name|'net'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'dis_host'
op|':'
newline|'\n'
indent|'            '
name|'net'
op|'['
string|"'host'"
op|']'
op|'='
name|'None'
newline|'\n'
nl|'\n'
comment|'# The --disassociate-X are boolean options, but if they user'
nl|'\n'
comment|'# mistakenly provides a value, it will be used as a positional argument'
nl|'\n'
comment|'# and be erroneously interepreted as some other parameter (e.g.'
nl|'\n'
comment|'# a project instead of host value). The safest thing to do is error-out'
nl|'\n'
comment|'# with a message indicating that there is probably a problem with'
nl|'\n'
comment|'# how the disassociate modifications are being used.'
nl|'\n'
dedent|''
name|'if'
name|'dis_project'
name|'or'
name|'dis_host'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'project'
name|'or'
name|'host'
op|':'
newline|'\n'
indent|'                '
name|'error_msg'
op|'='
string|'"ERROR: Unexpected arguments provided. Please "'
string|'"use separate commands."'
newline|'\n'
name|'print'
op|'('
name|'error_msg'
op|')'
newline|'\n'
name|'return'
op|'('
number|'1'
op|')'
newline|'\n'
dedent|''
name|'db'
op|'.'
name|'network_update'
op|'('
name|'admin_context'
op|','
name|'network'
op|'['
string|"'id'"
op|']'
op|','
name|'net'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'project'
op|':'
newline|'\n'
indent|'            '
name|'net'
op|'['
string|"'project_id'"
op|']'
op|'='
name|'project'
newline|'\n'
dedent|''
name|'if'
name|'host'
op|':'
newline|'\n'
indent|'            '
name|'net'
op|'['
string|"'host'"
op|']'
op|'='
name|'host'
newline|'\n'
nl|'\n'
dedent|''
name|'db'
op|'.'
name|'network_update'
op|'('
name|'admin_context'
op|','
name|'network'
op|'['
string|"'id'"
op|']'
op|','
name|'net'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VmCommands
dedent|''
dedent|''
name|'class'
name|'VmCommands'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Class for mangaging VM instances."""'
newline|'\n'
nl|'\n'
op|'@'
name|'args'
op|'('
string|"'--host'"
op|','
name|'metavar'
op|'='
string|"'<host>'"
op|','
name|'help'
op|'='
string|"'Host'"
op|')'
newline|'\n'
DECL|member|list
name|'def'
name|'list'
op|'('
name|'self'
op|','
name|'host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Show a list of all instances."""'
newline|'\n'
nl|'\n'
name|'print'
op|'('
string|'"%-10s %-15s %-10s %-10s %-26s %-9s %-9s %-9s"'
nl|'\n'
string|'"  %-10s %-10s %-10s %-5s"'
op|'%'
op|'('
name|'_'
op|'('
string|"'instance'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'node'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'type'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'state'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'launched'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'image'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'kernel'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'ramdisk'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'project'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'user'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'zone'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'index'"
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'host'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'instances'
op|'='
name|'db'
op|'.'
name|'instance_get_all'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'instances'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_host'
op|'('
nl|'\n'
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'instance'
name|'in'
name|'instances'
op|':'
newline|'\n'
indent|'            '
name|'instance_type'
op|'='
name|'flavors'
op|'.'
name|'extract_flavor'
op|'('
name|'instance'
op|')'
newline|'\n'
name|'print'
op|'('
string|'"%-10s %-15s %-10s %-10s %-26s %-9s %-9s %-9s"'
nl|'\n'
string|'" %-10s %-10s %-10s %-5d"'
op|'%'
op|'('
name|'instance'
op|'['
string|"'display_name'"
op|']'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'host'"
op|']'
op|','
nl|'\n'
name|'instance_type'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'vm_state'"
op|']'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'launched_at'"
op|']'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'image_ref'"
op|']'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'kernel_id'"
op|']'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'ramdisk_id'"
op|']'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'project_id'"
op|']'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'user_id'"
op|']'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'availability_zone'"
op|']'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'launch_index'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServiceCommands
dedent|''
dedent|''
dedent|''
name|'class'
name|'ServiceCommands'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Enable and disable running services."""'
newline|'\n'
nl|'\n'
op|'@'
name|'args'
op|'('
string|"'--host'"
op|','
name|'metavar'
op|'='
string|"'<host>'"
op|','
name|'help'
op|'='
string|"'Host'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--service'"
op|','
name|'metavar'
op|'='
string|"'<service>'"
op|','
name|'help'
op|'='
string|"'Nova service'"
op|')'
newline|'\n'
DECL|member|list
name|'def'
name|'list'
op|'('
name|'self'
op|','
name|'host'
op|'='
name|'None'
op|','
name|'service'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Show a list of all running services. Filter by host & service name.\n        """'
newline|'\n'
name|'servicegroup_api'
op|'='
name|'servicegroup'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'services'
op|'='
name|'db'
op|'.'
name|'service_get_all'
op|'('
name|'ctxt'
op|')'
newline|'\n'
name|'services'
op|'='
name|'availability_zones'
op|'.'
name|'set_availability_zones'
op|'('
name|'ctxt'
op|','
name|'services'
op|')'
newline|'\n'
name|'if'
name|'host'
op|':'
newline|'\n'
indent|'            '
name|'services'
op|'='
op|'['
name|'s'
name|'for'
name|'s'
name|'in'
name|'services'
name|'if'
name|'s'
op|'['
string|"'host'"
op|']'
op|'=='
name|'host'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'service'
op|':'
newline|'\n'
indent|'            '
name|'services'
op|'='
op|'['
name|'s'
name|'for'
name|'s'
name|'in'
name|'services'
name|'if'
name|'s'
op|'['
string|"'binary'"
op|']'
op|'=='
name|'service'
op|']'
newline|'\n'
dedent|''
name|'print_format'
op|'='
string|'"%-16s %-36s %-16s %-10s %-5s %-10s"'
newline|'\n'
name|'print'
name|'print_format'
op|'%'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Binary'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'Host'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'Zone'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'Status'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'State'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'Updated_At'"
op|')'
op|')'
newline|'\n'
name|'for'
name|'svc'
name|'in'
name|'services'
op|':'
newline|'\n'
indent|'            '
name|'alive'
op|'='
name|'servicegroup_api'
op|'.'
name|'service_is_up'
op|'('
name|'svc'
op|')'
newline|'\n'
name|'art'
op|'='
op|'('
name|'alive'
name|'and'
string|'":-)"'
op|')'
name|'or'
string|'"XXX"'
newline|'\n'
name|'active'
op|'='
string|"'enabled'"
newline|'\n'
name|'if'
name|'svc'
op|'['
string|"'disabled'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'active'
op|'='
string|"'disabled'"
newline|'\n'
dedent|''
name|'print'
name|'print_format'
op|'%'
op|'('
name|'svc'
op|'['
string|"'binary'"
op|']'
op|','
name|'svc'
op|'['
string|"'host'"
op|']'
op|','
nl|'\n'
name|'svc'
op|'['
string|"'availability_zone'"
op|']'
op|','
name|'active'
op|','
name|'art'
op|','
nl|'\n'
name|'svc'
op|'['
string|"'updated_at'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'args'
op|'('
string|"'--host'"
op|','
name|'metavar'
op|'='
string|"'<host>'"
op|','
name|'help'
op|'='
string|"'Host'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--service'"
op|','
name|'metavar'
op|'='
string|"'<service>'"
op|','
name|'help'
op|'='
string|"'Nova service'"
op|')'
newline|'\n'
DECL|member|enable
name|'def'
name|'enable'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'service'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Enable scheduling for a service."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'svc'
op|'='
name|'db'
op|'.'
name|'service_get_by_args'
op|'('
name|'ctxt'
op|','
name|'host'
op|','
name|'service'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_update'
op|'('
name|'ctxt'
op|','
name|'svc'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
string|"'disabled'"
op|':'
name|'False'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'_'
op|'('
string|'"error: %s"'
op|')'
op|'%'
name|'ex'
newline|'\n'
name|'return'
op|'('
number|'2'
op|')'
newline|'\n'
dedent|''
name|'print'
name|'_'
op|'('
string|'"Service %(service)s on host %(host)s enabled."'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'args'
op|'('
string|"'--host'"
op|','
name|'metavar'
op|'='
string|"'<host>'"
op|','
name|'help'
op|'='
string|"'Host'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--service'"
op|','
name|'metavar'
op|'='
string|"'<service>'"
op|','
name|'help'
op|'='
string|"'Nova service'"
op|')'
newline|'\n'
DECL|member|disable
name|'def'
name|'disable'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'service'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Disable scheduling for a service."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'svc'
op|'='
name|'db'
op|'.'
name|'service_get_by_args'
op|'('
name|'ctxt'
op|','
name|'host'
op|','
name|'service'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'service_update'
op|'('
name|'ctxt'
op|','
name|'svc'
op|'['
string|"'id'"
op|']'
op|','
op|'{'
string|"'disabled'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'_'
op|'('
string|'"error: %s"'
op|')'
op|'%'
name|'ex'
newline|'\n'
name|'return'
op|'('
number|'2'
op|')'
newline|'\n'
dedent|''
name|'print'
name|'_'
op|'('
string|'"Service %(service)s on host %(host)s disabled."'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_show_host_resources
dedent|''
name|'def'
name|'_show_host_resources'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Shows the physical/usage resource given by hosts.\n\n        :param context: security context\n        :param host: hostname\n        :returns:\n            example format is below::\n\n                {\'resource\':D, \'usage\':{proj_id1:D, proj_id2:D}}\n                D: {\'vcpus\': 3, \'memory_mb\': 2048, \'local_gb\': 2048,\n                    \'vcpus_used\': 12, \'memory_mb_used\': 10240,\n                    \'local_gb_used\': 64}\n\n        """'
newline|'\n'
comment|'# Getting compute node info and related instances info'
nl|'\n'
name|'service_ref'
op|'='
name|'db'
op|'.'
name|'service_get_by_compute_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
newline|'\n'
name|'instance_refs'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_host'
op|'('
name|'context'
op|','
nl|'\n'
name|'service_ref'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Getting total available/used resource'
nl|'\n'
name|'compute_ref'
op|'='
name|'service_ref'
op|'['
string|"'compute_node'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'resource'
op|'='
op|'{'
string|"'vcpus'"
op|':'
name|'compute_ref'
op|'['
string|"'vcpus'"
op|']'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
name|'compute_ref'
op|'['
string|"'memory_mb'"
op|']'
op|','
nl|'\n'
string|"'local_gb'"
op|':'
name|'compute_ref'
op|'['
string|"'local_gb'"
op|']'
op|','
nl|'\n'
string|"'vcpus_used'"
op|':'
name|'compute_ref'
op|'['
string|"'vcpus_used'"
op|']'
op|','
nl|'\n'
string|"'memory_mb_used'"
op|':'
name|'compute_ref'
op|'['
string|"'memory_mb_used'"
op|']'
op|','
nl|'\n'
string|"'local_gb_used'"
op|':'
name|'compute_ref'
op|'['
string|"'local_gb_used'"
op|']'
op|'}'
newline|'\n'
name|'usage'
op|'='
name|'dict'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'instance_refs'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'resource'"
op|':'
name|'resource'
op|','
string|"'usage'"
op|':'
name|'usage'
op|'}'
newline|'\n'
nl|'\n'
comment|'# Getting usage resource per project'
nl|'\n'
dedent|''
name|'project_ids'
op|'='
op|'['
name|'i'
op|'['
string|"'project_id'"
op|']'
name|'for'
name|'i'
name|'in'
name|'instance_refs'
op|']'
newline|'\n'
name|'project_ids'
op|'='
name|'list'
op|'('
name|'set'
op|'('
name|'project_ids'
op|')'
op|')'
newline|'\n'
name|'for'
name|'project_id'
name|'in'
name|'project_ids'
op|':'
newline|'\n'
indent|'            '
name|'vcpus'
op|'='
op|'['
name|'i'
op|'['
string|"'vcpus'"
op|']'
name|'for'
name|'i'
name|'in'
name|'instance_refs'
nl|'\n'
name|'if'
name|'i'
op|'['
string|"'project_id'"
op|']'
op|'=='
name|'project_id'
op|']'
newline|'\n'
nl|'\n'
name|'mem'
op|'='
op|'['
name|'i'
op|'['
string|"'memory_mb'"
op|']'
name|'for'
name|'i'
name|'in'
name|'instance_refs'
nl|'\n'
name|'if'
name|'i'
op|'['
string|"'project_id'"
op|']'
op|'=='
name|'project_id'
op|']'
newline|'\n'
nl|'\n'
name|'root'
op|'='
op|'['
name|'i'
op|'['
string|"'root_gb'"
op|']'
name|'for'
name|'i'
name|'in'
name|'instance_refs'
nl|'\n'
name|'if'
name|'i'
op|'['
string|"'project_id'"
op|']'
op|'=='
name|'project_id'
op|']'
newline|'\n'
nl|'\n'
name|'ephemeral'
op|'='
op|'['
name|'i'
op|'['
string|"'ephemeral_gb'"
op|']'
name|'for'
name|'i'
name|'in'
name|'instance_refs'
nl|'\n'
name|'if'
name|'i'
op|'['
string|"'project_id'"
op|']'
op|'=='
name|'project_id'
op|']'
newline|'\n'
nl|'\n'
name|'usage'
op|'['
name|'project_id'
op|']'
op|'='
op|'{'
string|"'vcpus'"
op|':'
name|'sum'
op|'('
name|'vcpus'
op|')'
op|','
nl|'\n'
string|"'memory_mb'"
op|':'
name|'sum'
op|'('
name|'mem'
op|')'
op|','
nl|'\n'
string|"'root_gb'"
op|':'
name|'sum'
op|'('
name|'root'
op|')'
op|','
nl|'\n'
string|"'ephemeral_gb'"
op|':'
name|'sum'
op|'('
name|'ephemeral'
op|')'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
op|'{'
string|"'resource'"
op|':'
name|'resource'
op|','
string|"'usage'"
op|':'
name|'usage'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'args'
op|'('
string|"'--host'"
op|','
name|'metavar'
op|'='
string|"'<host>'"
op|','
name|'help'
op|'='
string|"'Host'"
op|')'
newline|'\n'
DECL|member|describe_resource
name|'def'
name|'describe_resource'
op|'('
name|'self'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Describes cpu/memory/hdd info for host.\n\n        :param host: hostname.\n\n        """'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_show_host_resources'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'result'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'_'
op|'('
string|"'An unexpected error has occurred.'"
op|')'
newline|'\n'
name|'print'
name|'_'
op|'('
string|"'[Result]'"
op|')'
op|','
name|'result'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# Printing a total and used_now'
nl|'\n'
comment|'# (NOTE)The host name width 16 characters'
nl|'\n'
indent|'            '
name|'print'
string|"'%(a)-25s%(b)16s%(c)8s%(d)8s%(e)8s'"
op|'%'
op|'{'
string|'"a"'
op|':'
name|'_'
op|'('
string|"'HOST'"
op|')'
op|','
nl|'\n'
string|'"b"'
op|':'
name|'_'
op|'('
string|"'PROJECT'"
op|')'
op|','
nl|'\n'
string|'"c"'
op|':'
name|'_'
op|'('
string|"'cpu'"
op|')'
op|','
nl|'\n'
string|'"d"'
op|':'
name|'_'
op|'('
string|"'mem(mb)'"
op|')'
op|','
nl|'\n'
string|'"e"'
op|':'
name|'_'
op|'('
string|"'hdd'"
op|')'
op|'}'
newline|'\n'
name|'print'
op|'('
string|"'%(a)-16s(total)%(b)26s%(c)8s%(d)8s'"
op|'%'
nl|'\n'
op|'{'
string|'"a"'
op|':'
name|'host'
op|','
nl|'\n'
string|'"b"'
op|':'
name|'result'
op|'['
string|"'resource'"
op|']'
op|'['
string|"'vcpus'"
op|']'
op|','
nl|'\n'
string|'"c"'
op|':'
name|'result'
op|'['
string|"'resource'"
op|']'
op|'['
string|"'memory_mb'"
op|']'
op|','
nl|'\n'
string|'"d"'
op|':'
name|'result'
op|'['
string|"'resource'"
op|']'
op|'['
string|"'local_gb'"
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'print'
op|'('
string|"'%(a)-16s(used_now)%(b)23s%(c)8s%(d)8s'"
op|'%'
nl|'\n'
op|'{'
string|'"a"'
op|':'
name|'host'
op|','
nl|'\n'
string|'"b"'
op|':'
name|'result'
op|'['
string|"'resource'"
op|']'
op|'['
string|"'vcpus_used'"
op|']'
op|','
nl|'\n'
string|'"c"'
op|':'
name|'result'
op|'['
string|"'resource'"
op|']'
op|'['
string|"'memory_mb_used'"
op|']'
op|','
nl|'\n'
string|'"d"'
op|':'
name|'result'
op|'['
string|"'resource'"
op|']'
op|'['
string|"'local_gb_used'"
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# Printing a used_max'
nl|'\n'
name|'cpu_sum'
op|'='
number|'0'
newline|'\n'
name|'mem_sum'
op|'='
number|'0'
newline|'\n'
name|'hdd_sum'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'p_id'
op|','
name|'val'
name|'in'
name|'result'
op|'['
string|"'usage'"
op|']'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'cpu_sum'
op|'+='
name|'val'
op|'['
string|"'vcpus'"
op|']'
newline|'\n'
name|'mem_sum'
op|'+='
name|'val'
op|'['
string|"'memory_mb'"
op|']'
newline|'\n'
name|'hdd_sum'
op|'+='
name|'val'
op|'['
string|"'root_gb'"
op|']'
newline|'\n'
name|'hdd_sum'
op|'+='
name|'val'
op|'['
string|"'ephemeral_gb'"
op|']'
newline|'\n'
dedent|''
name|'print'
string|"'%(a)-16s(used_max)%(b)23s%(c)8s%(d)8s'"
op|'%'
op|'{'
string|'"a"'
op|':'
name|'host'
op|','
nl|'\n'
string|'"b"'
op|':'
name|'cpu_sum'
op|','
nl|'\n'
string|'"c"'
op|':'
name|'mem_sum'
op|','
nl|'\n'
string|'"d"'
op|':'
name|'hdd_sum'
op|'}'
newline|'\n'
nl|'\n'
name|'for'
name|'p_id'
op|','
name|'val'
name|'in'
name|'result'
op|'['
string|"'usage'"
op|']'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|"'%(a)-25s%(b)16s%(c)8s%(d)8s%(e)8s'"
op|'%'
op|'{'
nl|'\n'
string|'"a"'
op|':'
name|'host'
op|','
nl|'\n'
string|'"b"'
op|':'
name|'p_id'
op|','
nl|'\n'
string|'"c"'
op|':'
name|'val'
op|'['
string|"'vcpus'"
op|']'
op|','
nl|'\n'
string|'"d"'
op|':'
name|'val'
op|'['
string|"'memory_mb'"
op|']'
op|','
nl|'\n'
string|'"e"'
op|':'
name|'val'
op|'['
string|"'root_gb'"
op|']'
op|'+'
name|'val'
op|'['
string|"'ephemeral_gb'"
op|']'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HostCommands
dedent|''
dedent|''
dedent|''
dedent|''
name|'class'
name|'HostCommands'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""List hosts."""'
newline|'\n'
nl|'\n'
DECL|member|list
name|'def'
name|'list'
op|'('
name|'self'
op|','
name|'zone'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Show a list of all physical hosts. Filter by zone.\n        args: [zone]\n        """'
newline|'\n'
name|'print'
string|'"%-25s\\t%-15s"'
op|'%'
op|'('
name|'_'
op|'('
string|"'host'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'zone'"
op|')'
op|')'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'services'
op|'='
name|'db'
op|'.'
name|'service_get_all'
op|'('
name|'ctxt'
op|')'
newline|'\n'
name|'services'
op|'='
name|'availability_zones'
op|'.'
name|'set_availability_zones'
op|'('
name|'ctxt'
op|','
name|'services'
op|')'
newline|'\n'
name|'if'
name|'zone'
op|':'
newline|'\n'
indent|'            '
name|'services'
op|'='
op|'['
name|'s'
name|'for'
name|'s'
name|'in'
name|'services'
name|'if'
name|'s'
op|'['
string|"'availability_zone'"
op|']'
op|'=='
name|'zone'
op|']'
newline|'\n'
dedent|''
name|'hosts'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'srv'
name|'in'
name|'services'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
op|'['
name|'h'
name|'for'
name|'h'
name|'in'
name|'hosts'
name|'if'
name|'h'
op|'['
string|"'host'"
op|']'
op|'=='
name|'srv'
op|'['
string|"'host'"
op|']'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'hosts'
op|'.'
name|'append'
op|'('
name|'srv'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'h'
name|'in'
name|'hosts'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|'"%-25s\\t%-15s"'
op|'%'
op|'('
name|'h'
op|'['
string|"'host'"
op|']'
op|','
name|'h'
op|'['
string|"'availability_zone'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DbCommands
dedent|''
dedent|''
dedent|''
name|'class'
name|'DbCommands'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Class for managing the database."""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'args'
op|'('
string|"'--version'"
op|','
name|'metavar'
op|'='
string|"'<version>'"
op|','
name|'help'
op|'='
string|"'Database version'"
op|')'
newline|'\n'
DECL|member|sync
name|'def'
name|'sync'
op|'('
name|'self'
op|','
name|'version'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Sync the database up to the most recent version."""'
newline|'\n'
name|'return'
name|'migration'
op|'.'
name|'db_sync'
op|'('
name|'version'
op|')'
newline|'\n'
nl|'\n'
DECL|member|version
dedent|''
name|'def'
name|'version'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Print the current database version."""'
newline|'\n'
name|'print'
name|'migration'
op|'.'
name|'db_version'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'args'
op|'('
string|"'--max_rows'"
op|','
name|'metavar'
op|'='
string|"'<number>'"
op|','
nl|'\n'
name|'help'
op|'='
string|"'Maximum number of deleted rows to archive'"
op|')'
newline|'\n'
DECL|member|archive_deleted_rows
name|'def'
name|'archive_deleted_rows'
op|'('
name|'self'
op|','
name|'max_rows'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Move up to max_rows deleted rows from production tables to shadow\n        tables.\n        """'
newline|'\n'
name|'if'
name|'max_rows'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'max_rows'
op|'='
name|'int'
op|'('
name|'max_rows'
op|')'
newline|'\n'
name|'if'
name|'max_rows'
op|'<'
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'print'
name|'_'
op|'('
string|'"Must supply a positive value for max_rows"'
op|')'
newline|'\n'
name|'return'
op|'('
number|'1'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'admin_context'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'archive_deleted_rows'
op|'('
name|'admin_context'
op|','
name|'max_rows'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceTypeCommands
dedent|''
dedent|''
name|'class'
name|'InstanceTypeCommands'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Class for managing instance types / flavors."""'
newline|'\n'
nl|'\n'
DECL|member|_print_instance_types
name|'def'
name|'_print_instance_types'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'val'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'is_public'
op|'='
op|'('
string|"'private'"
op|','
string|"'public'"
op|')'
op|'['
name|'val'
op|'['
string|'"is_public"'
op|']'
op|'=='
number|'1'
op|']'
newline|'\n'
name|'print'
op|'('
string|'"%s: Memory: %sMB, VCPUS: %s, Root: %sGB, Ephemeral: %sGb, "'
nl|'\n'
string|'"FlavorID: %s, Swap: %sMB, RXTX Factor: %s, %s, ExtraSpecs %s"'
op|')'
op|'%'
op|'('
nl|'\n'
name|'name'
op|','
name|'val'
op|'['
string|'"memory_mb"'
op|']'
op|','
name|'val'
op|'['
string|'"vcpus"'
op|']'
op|','
name|'val'
op|'['
string|'"root_gb"'
op|']'
op|','
nl|'\n'
name|'val'
op|'['
string|'"ephemeral_gb"'
op|']'
op|','
name|'val'
op|'['
string|'"flavorid"'
op|']'
op|','
name|'val'
op|'['
string|'"swap"'
op|']'
op|','
nl|'\n'
name|'val'
op|'['
string|'"rxtx_factor"'
op|']'
op|','
name|'is_public'
op|','
name|'val'
op|'['
string|'"extra_specs"'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'args'
op|'('
string|"'--name'"
op|','
name|'metavar'
op|'='
string|"'<name>'"
op|','
nl|'\n'
name|'help'
op|'='
string|"'Name of instance type/flavor'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--memory'"
op|','
name|'metavar'
op|'='
string|"'<memory size>'"
op|','
name|'help'
op|'='
string|"'Memory size'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--cpu'"
op|','
name|'dest'
op|'='
string|"'vcpus'"
op|','
name|'metavar'
op|'='
string|"'<num cores>'"
op|','
name|'help'
op|'='
string|"'Number cpus'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--root_gb'"
op|','
name|'metavar'
op|'='
string|"'<root_gb>'"
op|','
name|'help'
op|'='
string|"'Root disk size'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--ephemeral_gb'"
op|','
name|'metavar'
op|'='
string|"'<ephemeral_gb>'"
op|','
nl|'\n'
name|'help'
op|'='
string|"'Ephemeral disk size'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--flavor'"
op|','
name|'dest'
op|'='
string|"'flavorid'"
op|','
name|'metavar'
op|'='
string|"'<flavor  id>'"
op|','
nl|'\n'
name|'help'
op|'='
string|"'Flavor ID'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--swap'"
op|','
name|'metavar'
op|'='
string|"'<swap>'"
op|','
name|'help'
op|'='
string|"'Swap'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--rxtx_factor'"
op|','
name|'metavar'
op|'='
string|"'<rxtx_factor>'"
op|','
name|'help'
op|'='
string|"'rxtx_factor'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--is_public'"
op|','
name|'metavar'
op|'='
string|"'<is_public>'"
op|','
nl|'\n'
name|'help'
op|'='
string|"'Make flavor accessible to the public'"
op|')'
newline|'\n'
DECL|member|create
name|'def'
name|'create'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'memory'
op|','
name|'vcpus'
op|','
name|'root_gb'
op|','
name|'ephemeral_gb'
op|'='
number|'0'
op|','
nl|'\n'
name|'flavorid'
op|'='
name|'None'
op|','
name|'swap'
op|'='
number|'0'
op|','
name|'rxtx_factor'
op|'='
number|'1.0'
op|','
name|'is_public'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates instance types / flavors."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'flavors'
op|'.'
name|'create'
op|'('
name|'name'
op|','
name|'memory'
op|','
name|'vcpus'
op|','
name|'root_gb'
op|','
nl|'\n'
name|'ephemeral_gb'
op|'='
name|'ephemeral_gb'
op|','
name|'flavorid'
op|'='
name|'flavorid'
op|','
nl|'\n'
name|'swap'
op|'='
name|'swap'
op|','
name|'rxtx_factor'
op|'='
name|'rxtx_factor'
op|','
nl|'\n'
name|'is_public'
op|'='
name|'is_public'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InvalidInput'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'_'
op|'('
string|'"Must supply valid parameters to create instance_type"'
op|')'
newline|'\n'
name|'print'
name|'e'
newline|'\n'
name|'return'
op|'('
number|'1'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceTypeExists'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'_'
op|'('
string|'"Instance Type exists."'
op|')'
newline|'\n'
name|'print'
name|'_'
op|'('
string|'"Please ensure instance_type name and flavorid are "'
nl|'\n'
string|'"unique."'
op|')'
newline|'\n'
name|'print'
name|'_'
op|'('
string|'"Currently defined instance_type names and flavorids:"'
op|')'
newline|'\n'
name|'print'
newline|'\n'
name|'self'
op|'.'
name|'list'
op|'('
op|')'
newline|'\n'
name|'return'
op|'('
number|'2'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'_'
op|'('
string|'"Unknown error"'
op|')'
newline|'\n'
name|'return'
op|'('
number|'3'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'_'
op|'('
string|'"%s created"'
op|')'
op|'%'
name|'name'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'args'
op|'('
string|"'--name'"
op|','
name|'metavar'
op|'='
string|"'<name>'"
op|','
name|'help'
op|'='
string|"'Name of instance type/flavor'"
op|')'
newline|'\n'
DECL|member|delete
name|'def'
name|'delete'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Marks instance types / flavors as deleted."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'flavors'
op|'.'
name|'destroy'
op|'('
name|'name'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceTypeNotFound'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'_'
op|'('
string|'"Valid instance type name is required"'
op|')'
newline|'\n'
name|'return'
op|'('
number|'1'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'_'
op|'('
string|'"DB Error: %s"'
op|')'
op|'%'
name|'e'
newline|'\n'
name|'return'
op|'('
number|'2'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
number|'3'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'_'
op|'('
string|'"%s deleted"'
op|')'
op|'%'
name|'name'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'args'
op|'('
string|"'--name'"
op|','
name|'metavar'
op|'='
string|"'<name>'"
op|','
name|'help'
op|'='
string|"'Name of instance type/flavor'"
op|')'
newline|'\n'
DECL|member|list
name|'def'
name|'list'
op|'('
name|'self'
op|','
name|'name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Lists all active or specific instance types / flavors."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'name'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'inst_types'
op|'='
name|'flavors'
op|'.'
name|'get_all_flavors'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'inst_types'
op|'='
name|'flavors'
op|'.'
name|'get_flavor_by_name'
op|'('
name|'name'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'_db_error'
op|'('
name|'e'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'isinstance'
op|'('
name|'inst_types'
op|'.'
name|'values'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'inst_types'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_print_instance_types'
op|'('
name|'k'
op|','
name|'v'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_print_instance_types'
op|'('
name|'name'
op|','
name|'inst_types'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'args'
op|'('
string|"'--name'"
op|','
name|'metavar'
op|'='
string|"'<name>'"
op|','
name|'help'
op|'='
string|"'Name of instance type/flavor'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--key'"
op|','
name|'metavar'
op|'='
string|"'<key>'"
op|','
name|'help'
op|'='
string|"'The key of the key/value pair'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--value'"
op|','
name|'metavar'
op|'='
string|"'<value>'"
op|','
name|'help'
op|'='
string|"'The value of the key/value pair'"
op|')'
newline|'\n'
DECL|member|set_key
name|'def'
name|'set_key'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'key'
op|','
name|'value'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Add key/value pair to specified instance type\'s extra_specs."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'inst_type'
op|'='
name|'flavors'
op|'.'
name|'get_flavor_by_name'
op|'('
name|'name'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceTypeNotFoundByName'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'print'
name|'e'
newline|'\n'
name|'return'
op|'('
number|'2'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'ext_spec'
op|'='
op|'{'
name|'key'
op|':'
name|'value'
op|'}'
newline|'\n'
name|'db'
op|'.'
name|'instance_type_extra_specs_update_or_create'
op|'('
nl|'\n'
name|'ctxt'
op|','
nl|'\n'
name|'inst_type'
op|'['
string|'"flavorid"'
op|']'
op|','
nl|'\n'
name|'ext_spec'
op|')'
newline|'\n'
name|'print'
name|'_'
op|'('
string|'"Key %(key)s set to %(value)s on instance"'
nl|'\n'
string|'" type %(name)s"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'_db_error'
op|'('
name|'e'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'args'
op|'('
string|"'--name'"
op|','
name|'metavar'
op|'='
string|"'<name>'"
op|','
name|'help'
op|'='
string|"'Name of instance type/flavor'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--key'"
op|','
name|'metavar'
op|'='
string|"'<key>'"
op|','
name|'help'
op|'='
string|"'The key to be deleted'"
op|')'
newline|'\n'
DECL|member|unset_key
name|'def'
name|'unset_key'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Delete the specified extra spec for instance type."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'inst_type'
op|'='
name|'flavors'
op|'.'
name|'get_flavor_by_name'
op|'('
name|'name'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'InstanceTypeNotFoundByName'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'print'
name|'e'
newline|'\n'
name|'return'
op|'('
number|'2'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'instance_type_extra_specs_delete'
op|'('
nl|'\n'
name|'ctxt'
op|','
nl|'\n'
name|'inst_type'
op|'['
string|'"flavorid"'
op|']'
op|','
nl|'\n'
name|'key'
op|')'
newline|'\n'
nl|'\n'
name|'print'
name|'_'
op|'('
string|'"Key %(key)s on instance type %(name)s unset"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'db_exc'
op|'.'
name|'DBError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'_db_error'
op|'('
name|'e'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AgentBuildCommands
dedent|''
dedent|''
dedent|''
name|'class'
name|'AgentBuildCommands'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Class for managing agent builds."""'
newline|'\n'
nl|'\n'
DECL|member|create
name|'def'
name|'create'
op|'('
name|'self'
op|','
name|'os'
op|','
name|'architecture'
op|','
name|'version'
op|','
name|'url'
op|','
name|'md5hash'
op|','
nl|'\n'
name|'hypervisor'
op|'='
string|"'xen'"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates a new agent build."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'agent_build_create'
op|'('
name|'ctxt'
op|','
op|'{'
string|"'hypervisor'"
op|':'
name|'hypervisor'
op|','
nl|'\n'
string|"'os'"
op|':'
name|'os'
op|','
nl|'\n'
string|"'architecture'"
op|':'
name|'architecture'
op|','
nl|'\n'
string|"'version'"
op|':'
name|'version'
op|','
nl|'\n'
string|"'url'"
op|':'
name|'url'
op|','
nl|'\n'
string|"'md5hash'"
op|':'
name|'md5hash'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete
dedent|''
name|'def'
name|'delete'
op|'('
name|'self'
op|','
name|'os'
op|','
name|'architecture'
op|','
name|'hypervisor'
op|'='
string|"'xen'"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deletes an existing agent build."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'agent_build_ref'
op|'='
name|'db'
op|'.'
name|'agent_build_get_by_triple'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'hypervisor'
op|','
name|'os'
op|','
name|'architecture'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'agent_build_destroy'
op|'('
name|'ctxt'
op|','
name|'agent_build_ref'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|list
dedent|''
name|'def'
name|'list'
op|'('
name|'self'
op|','
name|'hypervisor'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Lists all agent builds.\n\n        arguments: <none>\n        """'
newline|'\n'
name|'fmt'
op|'='
string|'"%-10s  %-8s  %12s  %s"'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'by_hypervisor'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'agent_build'
name|'in'
name|'db'
op|'.'
name|'agent_build_get_all'
op|'('
name|'ctxt'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'buildlist'
op|'='
name|'by_hypervisor'
op|'.'
name|'get'
op|'('
name|'agent_build'
op|'.'
name|'hypervisor'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'buildlist'
op|':'
newline|'\n'
indent|'                '
name|'buildlist'
op|'='
name|'by_hypervisor'
op|'['
name|'agent_build'
op|'.'
name|'hypervisor'
op|']'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'buildlist'
op|'.'
name|'append'
op|'('
name|'agent_build'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'key'
op|','
name|'buildlist'
name|'in'
name|'by_hypervisor'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'hypervisor'
name|'and'
name|'key'
op|'!='
name|'hypervisor'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'print'
name|'_'
op|'('
string|"'Hypervisor: %s'"
op|')'
op|'%'
name|'key'
newline|'\n'
name|'print'
name|'fmt'
op|'%'
op|'('
string|"'-'"
op|'*'
number|'10'
op|','
string|"'-'"
op|'*'
number|'8'
op|','
string|"'-'"
op|'*'
number|'12'
op|','
string|"'-'"
op|'*'
number|'32'
op|')'
newline|'\n'
name|'for'
name|'agent_build'
name|'in'
name|'buildlist'
op|':'
newline|'\n'
indent|'                '
name|'print'
name|'fmt'
op|'%'
op|'('
name|'agent_build'
op|'.'
name|'os'
op|','
name|'agent_build'
op|'.'
name|'architecture'
op|','
nl|'\n'
name|'agent_build'
op|'.'
name|'version'
op|','
name|'agent_build'
op|'.'
name|'md5hash'
op|')'
newline|'\n'
name|'print'
string|"'    %s'"
op|'%'
name|'agent_build'
op|'.'
name|'url'
newline|'\n'
nl|'\n'
dedent|''
name|'print'
newline|'\n'
nl|'\n'
DECL|member|modify
dedent|''
dedent|''
name|'def'
name|'modify'
op|'('
name|'self'
op|','
name|'os'
op|','
name|'architecture'
op|','
name|'version'
op|','
name|'url'
op|','
name|'md5hash'
op|','
nl|'\n'
name|'hypervisor'
op|'='
string|"'xen'"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Update an existing agent build."""'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'agent_build_ref'
op|'='
name|'db'
op|'.'
name|'agent_build_get_by_triple'
op|'('
name|'ctxt'
op|','
nl|'\n'
name|'hypervisor'
op|','
name|'os'
op|','
name|'architecture'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'agent_build_update'
op|'('
name|'ctxt'
op|','
name|'agent_build_ref'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'version'"
op|':'
name|'version'
op|','
nl|'\n'
string|"'url'"
op|':'
name|'url'
op|','
nl|'\n'
string|"'md5hash'"
op|':'
name|'md5hash'
op|'}'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|GetLogCommands
dedent|''
dedent|''
name|'class'
name|'GetLogCommands'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get logging information."""'
newline|'\n'
nl|'\n'
DECL|member|errors
name|'def'
name|'errors'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get all of the errors from the log files."""'
newline|'\n'
name|'error_found'
op|'='
number|'0'
newline|'\n'
name|'if'
name|'CONF'
op|'.'
name|'log_dir'
op|':'
newline|'\n'
indent|'            '
name|'logs'
op|'='
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'os'
op|'.'
name|'listdir'
op|'('
name|'CONF'
op|'.'
name|'log_dir'
op|')'
name|'if'
name|'x'
op|'.'
name|'endswith'
op|'('
string|"'.log'"
op|')'
op|']'
newline|'\n'
name|'for'
name|'file'
name|'in'
name|'logs'
op|':'
newline|'\n'
indent|'                '
name|'log_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'CONF'
op|'.'
name|'log_dir'
op|','
name|'file'
op|')'
newline|'\n'
name|'lines'
op|'='
op|'['
name|'line'
op|'.'
name|'strip'
op|'('
op|')'
name|'for'
name|'line'
name|'in'
name|'open'
op|'('
name|'log_file'
op|','
string|'"r"'
op|')'
op|']'
newline|'\n'
name|'lines'
op|'.'
name|'reverse'
op|'('
op|')'
newline|'\n'
name|'print_name'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'index'
op|','
name|'line'
name|'in'
name|'enumerate'
op|'('
name|'lines'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'line'
op|'.'
name|'find'
op|'('
string|'" ERROR "'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'                        '
name|'error_found'
op|'+='
number|'1'
newline|'\n'
name|'if'
name|'print_name'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                            '
name|'print'
name|'log_file'
op|'+'
string|'":-"'
newline|'\n'
name|'print_name'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'linenum'
op|'='
name|'len'
op|'('
name|'lines'
op|')'
op|'-'
name|'index'
newline|'\n'
name|'print'
name|'_'
op|'('
string|"'Line %(linenum)d : %(line)s'"
op|')'
op|'%'
name|'locals'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'if'
name|'error_found'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'_'
op|'('
string|"'No errors in logfiles!'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|syslog
dedent|''
dedent|''
name|'def'
name|'syslog'
op|'('
name|'self'
op|','
name|'num_entries'
op|'='
number|'10'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get <num_entries> of the nova syslog events."""'
newline|'\n'
name|'entries'
op|'='
name|'int'
op|'('
name|'num_entries'
op|')'
newline|'\n'
name|'count'
op|'='
number|'0'
newline|'\n'
name|'log_file'
op|'='
string|"''"
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
string|"'/var/log/syslog'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'log_file'
op|'='
string|"'/var/log/syslog'"
newline|'\n'
dedent|''
name|'elif'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
string|"'/var/log/messages'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'log_file'
op|'='
string|"'/var/log/messages'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'_'
op|'('
string|"'Unable to find system log file!'"
op|')'
newline|'\n'
name|'return'
op|'('
number|'1'
op|')'
newline|'\n'
dedent|''
name|'lines'
op|'='
op|'['
name|'line'
op|'.'
name|'strip'
op|'('
op|')'
name|'for'
name|'line'
name|'in'
name|'open'
op|'('
name|'log_file'
op|','
string|'"r"'
op|')'
op|']'
newline|'\n'
name|'lines'
op|'.'
name|'reverse'
op|'('
op|')'
newline|'\n'
name|'print'
name|'_'
op|'('
string|"'Last %s nova syslog entries:-'"
op|')'
op|'%'
op|'('
name|'entries'
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'lines'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'line'
op|'.'
name|'find'
op|'('
string|'"nova"'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'count'
op|'+='
number|'1'
newline|'\n'
name|'print'
string|'"%s"'
op|'%'
op|'('
name|'line'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'count'
op|'=='
name|'entries'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'count'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'_'
op|'('
string|"'No nova entries in syslog!'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CellCommands
dedent|''
dedent|''
dedent|''
name|'class'
name|'CellCommands'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Commands for managing cells."""'
newline|'\n'
nl|'\n'
op|'@'
name|'args'
op|'('
string|"'--name'"
op|','
name|'metavar'
op|'='
string|"'<name>'"
op|','
name|'help'
op|'='
string|"'Name for the new cell'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--cell_type'"
op|','
name|'metavar'
op|'='
string|"'<parent|child>'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Whether the cell is a parent or child'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--username'"
op|','
name|'metavar'
op|'='
string|"'<username>'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Username for the message broker in this cell'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--password'"
op|','
name|'metavar'
op|'='
string|"'<password>'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Password for the message broker in this cell'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--hostname'"
op|','
name|'metavar'
op|'='
string|"'<hostname>'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Address of the message broker in this cell'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--port'"
op|','
name|'metavar'
op|'='
string|"'<number>'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Port number of the message broker in this cell'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--virtual_host'"
op|','
name|'metavar'
op|'='
string|"'<virtual_host>'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'The virtual host of the message broker in this cell'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--woffset'"
op|','
name|'metavar'
op|'='
string|"'<float>'"
op|')'
newline|'\n'
op|'@'
name|'args'
op|'('
string|"'--wscale'"
op|','
name|'metavar'
op|'='
string|"'<float>'"
op|')'
newline|'\n'
DECL|member|create
name|'def'
name|'create'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'cell_type'
op|'='
string|"'child'"
op|','
name|'username'
op|'='
name|'None'
op|','
name|'password'
op|'='
name|'None'
op|','
nl|'\n'
name|'hostname'
op|'='
name|'None'
op|','
name|'port'
op|'='
name|'None'
op|','
name|'virtual_host'
op|'='
name|'None'
op|','
nl|'\n'
name|'woffset'
op|'='
name|'None'
op|','
name|'wscale'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'if'
name|'cell_type'
name|'not'
name|'in'
op|'['
string|"'parent'"
op|','
string|"'child'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|'"Error: cell type must be \'parent\' or \'child\'"'
newline|'\n'
name|'return'
op|'('
number|'2'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'is_parent'
op|'='
name|'cell_type'
op|'=='
string|"'parent'"
newline|'\n'
name|'values'
op|'='
op|'{'
string|"'name'"
op|':'
name|'name'
op|','
nl|'\n'
string|"'is_parent'"
op|':'
name|'is_parent'
op|','
nl|'\n'
string|"'username'"
op|':'
name|'username'
op|','
nl|'\n'
string|"'password'"
op|':'
name|'password'
op|','
nl|'\n'
string|"'rpc_host'"
op|':'
name|'hostname'
op|','
nl|'\n'
string|"'rpc_port'"
op|':'
name|'int'
op|'('
name|'port'
op|')'
op|','
nl|'\n'
string|"'rpc_virtual_host'"
op|':'
name|'virtual_host'
op|','
nl|'\n'
string|"'weight_offset'"
op|':'
name|'float'
op|'('
name|'woffset'
op|')'
op|','
nl|'\n'
string|"'weight_scale'"
op|':'
name|'float'
op|'('
name|'wscale'
op|')'
op|'}'
newline|'\n'
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'cell_create'
op|'('
name|'ctxt'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'args'
op|'('
string|"'--cell_name'"
op|','
name|'metavar'
op|'='
string|"'<cell_name>'"
op|','
nl|'\n'
name|'help'
op|'='
string|"'Name of the cell to delete'"
op|')'
newline|'\n'
DECL|member|delete
name|'def'
name|'delete'
op|'('
name|'self'
op|','
name|'cell_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'db'
op|'.'
name|'cell_delete'
op|'('
name|'ctxt'
op|','
name|'cell_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|list
dedent|''
name|'def'
name|'list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctxt'
op|'='
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
newline|'\n'
name|'cells'
op|'='
name|'db'
op|'.'
name|'cell_get_all'
op|'('
name|'ctxt'
op|')'
newline|'\n'
name|'fmt'
op|'='
string|'"%3s  %-10s  %-6s  %-10s  %-15s  %-5s  %-10s"'
newline|'\n'
name|'print'
name|'fmt'
op|'%'
op|'('
string|"'Id'"
op|','
string|"'Name'"
op|','
string|"'Type'"
op|','
string|"'Username'"
op|','
string|"'Hostname'"
op|','
nl|'\n'
string|"'Port'"
op|','
string|"'VHost'"
op|')'
newline|'\n'
name|'print'
name|'fmt'
op|'%'
op|'('
string|"'-'"
op|'*'
number|'3'
op|','
string|"'-'"
op|'*'
number|'10'
op|','
string|"'-'"
op|'*'
number|'6'
op|','
string|"'-'"
op|'*'
number|'10'
op|','
string|"'-'"
op|'*'
number|'15'
op|','
nl|'\n'
string|"'-'"
op|'*'
number|'5'
op|','
string|"'-'"
op|'*'
number|'10'
op|')'
newline|'\n'
name|'for'
name|'cell'
name|'in'
name|'cells'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'fmt'
op|'%'
op|'('
name|'cell'
op|'.'
name|'id'
op|','
name|'cell'
op|'.'
name|'name'
op|','
nl|'\n'
string|"'parent'"
name|'if'
name|'cell'
op|'.'
name|'is_parent'
name|'else'
string|"'child'"
op|','
nl|'\n'
name|'cell'
op|'.'
name|'username'
op|','
name|'cell'
op|'.'
name|'rpc_host'
op|','
nl|'\n'
name|'cell'
op|'.'
name|'rpc_port'
op|','
name|'cell'
op|'.'
name|'rpc_virtual_host'
op|')'
newline|'\n'
dedent|''
name|'print'
name|'fmt'
op|'%'
op|'('
string|"'-'"
op|'*'
number|'3'
op|','
string|"'-'"
op|'*'
number|'10'
op|','
string|"'-'"
op|'*'
number|'6'
op|','
string|"'-'"
op|'*'
number|'10'
op|','
string|"'-'"
op|'*'
number|'15'
op|','
nl|'\n'
string|"'-'"
op|'*'
number|'5'
op|','
string|"'-'"
op|'*'
number|'10'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|CATEGORIES
dedent|''
dedent|''
name|'CATEGORIES'
op|'='
op|'{'
nl|'\n'
string|"'account'"
op|':'
name|'AccountCommands'
op|','
nl|'\n'
string|"'agent'"
op|':'
name|'AgentBuildCommands'
op|','
nl|'\n'
string|"'cell'"
op|':'
name|'CellCommands'
op|','
nl|'\n'
string|"'db'"
op|':'
name|'DbCommands'
op|','
nl|'\n'
string|"'fixed'"
op|':'
name|'FixedIpCommands'
op|','
nl|'\n'
string|"'flavor'"
op|':'
name|'InstanceTypeCommands'
op|','
nl|'\n'
string|"'floating'"
op|':'
name|'FloatingIpCommands'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'HostCommands'
op|','
nl|'\n'
string|"'instance_type'"
op|':'
name|'InstanceTypeCommands'
op|','
nl|'\n'
string|"'logs'"
op|':'
name|'GetLogCommands'
op|','
nl|'\n'
string|"'network'"
op|':'
name|'NetworkCommands'
op|','
nl|'\n'
string|"'project'"
op|':'
name|'ProjectCommands'
op|','
nl|'\n'
string|"'service'"
op|':'
name|'ServiceCommands'
op|','
nl|'\n'
string|"'shell'"
op|':'
name|'ShellCommands'
op|','
nl|'\n'
string|"'vm'"
op|':'
name|'VmCommands'
op|','
nl|'\n'
string|"'vpn'"
op|':'
name|'VpnCommands'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|methods_of
name|'def'
name|'methods_of'
op|'('
name|'obj'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get all callable methods of an object that don\'t start with underscore\n\n    returns a list of tuples of the form (method_name, method)\n    """'
newline|'\n'
name|'result'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'dir'
op|'('
name|'obj'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'callable'
op|'('
name|'getattr'
op|'('
name|'obj'
op|','
name|'i'
op|')'
op|')'
name|'and'
name|'not'
name|'i'
op|'.'
name|'startswith'
op|'('
string|"'_'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'.'
name|'append'
op|'('
op|'('
name|'i'
op|','
name|'getattr'
op|'('
name|'obj'
op|','
name|'i'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|add_command_parsers
dedent|''
name|'def'
name|'add_command_parsers'
op|'('
name|'subparsers'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'parser'
op|'='
name|'subparsers'
op|'.'
name|'add_parser'
op|'('
string|"'version'"
op|')'
newline|'\n'
nl|'\n'
name|'parser'
op|'='
name|'subparsers'
op|'.'
name|'add_parser'
op|'('
string|"'bash-completion'"
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'add_argument'
op|'('
string|"'query_category'"
op|','
name|'nargs'
op|'='
string|"'?'"
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'category'
name|'in'
name|'CATEGORIES'
op|':'
newline|'\n'
indent|'        '
name|'command_object'
op|'='
name|'CATEGORIES'
op|'['
name|'category'
op|']'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'parser'
op|'='
name|'subparsers'
op|'.'
name|'add_parser'
op|'('
name|'category'
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'set_defaults'
op|'('
name|'command_object'
op|'='
name|'command_object'
op|')'
newline|'\n'
nl|'\n'
name|'category_subparsers'
op|'='
name|'parser'
op|'.'
name|'add_subparsers'
op|'('
name|'dest'
op|'='
string|"'action'"
op|')'
newline|'\n'
nl|'\n'
name|'for'
op|'('
name|'action'
op|','
name|'action_fn'
op|')'
name|'in'
name|'methods_of'
op|'('
name|'command_object'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'parser'
op|'='
name|'category_subparsers'
op|'.'
name|'add_parser'
op|'('
name|'action'
op|')'
newline|'\n'
nl|'\n'
name|'action_kwargs'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'args'
op|','
name|'kwargs'
name|'in'
name|'getattr'
op|'('
name|'action_fn'
op|','
string|"'args'"
op|','
op|'['
op|']'
op|')'
op|':'
newline|'\n'
comment|'# FIXME(markmc): hack to assume dest is the arg name without'
nl|'\n'
comment|'# the leading hyphens if no dest is supplied'
nl|'\n'
indent|'                '
name|'kwargs'
op|'.'
name|'setdefault'
op|'('
string|"'dest'"
op|','
name|'args'
op|'['
number|'0'
op|']'
op|'['
number|'2'
op|':'
op|']'
op|')'
newline|'\n'
name|'if'
name|'kwargs'
op|'['
string|"'dest'"
op|']'
op|'.'
name|'startswith'
op|'('
string|"'action_kwarg_'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'action_kwargs'
op|'.'
name|'append'
op|'('
nl|'\n'
name|'kwargs'
op|'['
string|"'dest'"
op|']'
op|'['
name|'len'
op|'('
string|"'action_kwarg_'"
op|')'
op|':'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'action_kwargs'
op|'.'
name|'append'
op|'('
name|'kwargs'
op|'['
string|"'dest'"
op|']'
op|')'
newline|'\n'
name|'kwargs'
op|'['
string|"'dest'"
op|']'
op|'='
string|"'action_kwarg_'"
op|'+'
name|'kwargs'
op|'['
string|"'dest'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'parser'
op|'.'
name|'add_argument'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'parser'
op|'.'
name|'set_defaults'
op|'('
name|'action_fn'
op|'='
name|'action_fn'
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'set_defaults'
op|'('
name|'action_kwargs'
op|'='
name|'action_kwargs'
op|')'
newline|'\n'
nl|'\n'
name|'parser'
op|'.'
name|'add_argument'
op|'('
string|"'action_args'"
op|','
name|'nargs'
op|'='
string|"'*'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|category_opt
dedent|''
dedent|''
dedent|''
name|'category_opt'
op|'='
name|'cfg'
op|'.'
name|'SubCommandOpt'
op|'('
string|"'category'"
op|','
nl|'\n'
DECL|variable|title
name|'title'
op|'='
string|"'Command categories'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Available categories'"
op|','
nl|'\n'
DECL|variable|handler
name|'handler'
op|'='
name|'add_command_parsers'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|main
name|'def'
name|'main'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Parse options and call the appropriate class/method."""'
newline|'\n'
name|'CONF'
op|'.'
name|'register_cli_opt'
op|'('
name|'category_opt'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'config'
op|'.'
name|'parse_args'
op|'('
name|'sys'
op|'.'
name|'argv'
op|')'
newline|'\n'
name|'logging'
op|'.'
name|'setup'
op|'('
string|'"nova"'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'cfg'
op|'.'
name|'ConfigFilesNotFoundError'
op|':'
newline|'\n'
indent|'        '
name|'cfgfile'
op|'='
name|'CONF'
op|'.'
name|'config_file'
op|'['
op|'-'
number|'1'
op|']'
name|'if'
name|'CONF'
op|'.'
name|'config_file'
name|'else'
name|'None'
newline|'\n'
name|'if'
name|'cfgfile'
name|'and'
name|'not'
name|'os'
op|'.'
name|'access'
op|'('
name|'cfgfile'
op|','
name|'os'
op|'.'
name|'R_OK'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'st'
op|'='
name|'os'
op|'.'
name|'stat'
op|'('
name|'cfgfile'
op|')'
newline|'\n'
name|'print'
name|'_'
op|'('
string|'"Could not read %s. Re-running with sudo"'
op|')'
op|'%'
name|'cfgfile'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'os'
op|'.'
name|'execvp'
op|'('
string|"'sudo'"
op|','
op|'['
string|"'sudo'"
op|','
string|"'-u'"
op|','
string|"'#%s'"
op|'%'
name|'st'
op|'.'
name|'st_uid'
op|']'
op|'+'
name|'sys'
op|'.'
name|'argv'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'                '
name|'print'
name|'_'
op|'('
string|"'sudo failed, continuing as if nothing happened'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'print'
name|'_'
op|'('
string|"'Please re-run nova-manage as root.'"
op|')'
newline|'\n'
name|'return'
op|'('
number|'2'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'CONF'
op|'.'
name|'category'
op|'.'
name|'name'
op|'=='
string|'"version"'
op|':'
newline|'\n'
indent|'        '
name|'print'
name|'version'
op|'.'
name|'version_string_with_package'
op|'('
op|')'
newline|'\n'
name|'return'
op|'('
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'CONF'
op|'.'
name|'category'
op|'.'
name|'name'
op|'=='
string|'"bash-completion"'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'CONF'
op|'.'
name|'category'
op|'.'
name|'query_category'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|'" "'
op|'.'
name|'join'
op|'('
name|'CATEGORIES'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'CONF'
op|'.'
name|'category'
op|'.'
name|'query_category'
name|'in'
name|'CATEGORIES'
op|':'
newline|'\n'
indent|'            '
name|'fn'
op|'='
name|'CATEGORIES'
op|'['
name|'CONF'
op|'.'
name|'category'
op|'.'
name|'query_category'
op|']'
newline|'\n'
name|'command_object'
op|'='
name|'fn'
op|'('
op|')'
newline|'\n'
name|'actions'
op|'='
name|'methods_of'
op|'('
name|'command_object'
op|')'
newline|'\n'
name|'print'
string|'" "'
op|'.'
name|'join'
op|'('
op|'['
name|'k'
name|'for'
op|'('
name|'k'
op|','
name|'v'
op|')'
name|'in'
name|'actions'
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
op|'('
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'fn'
op|'='
name|'CONF'
op|'.'
name|'category'
op|'.'
name|'action_fn'
newline|'\n'
name|'fn_args'
op|'='
op|'['
name|'arg'
op|'.'
name|'decode'
op|'('
string|"'utf-8'"
op|')'
name|'for'
name|'arg'
name|'in'
name|'CONF'
op|'.'
name|'category'
op|'.'
name|'action_args'
op|']'
newline|'\n'
name|'fn_kwargs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'k'
name|'in'
name|'CONF'
op|'.'
name|'category'
op|'.'
name|'action_kwargs'
op|':'
newline|'\n'
indent|'        '
name|'v'
op|'='
name|'getattr'
op|'('
name|'CONF'
op|'.'
name|'category'
op|','
string|"'action_kwarg_'"
op|'+'
name|'k'
op|')'
newline|'\n'
name|'if'
name|'v'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'isinstance'
op|'('
name|'v'
op|','
name|'basestring'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'v'
op|'='
name|'v'
op|'.'
name|'decode'
op|'('
string|"'utf-8'"
op|')'
newline|'\n'
dedent|''
name|'fn_kwargs'
op|'['
name|'k'
op|']'
op|'='
name|'v'
newline|'\n'
nl|'\n'
comment|'# call the action with the remaining arguments'
nl|'\n'
comment|'# check arguments'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'cliutils'
op|'.'
name|'validate_args'
op|'('
name|'fn'
op|','
op|'*'
name|'fn_args'
op|','
op|'**'
name|'fn_kwargs'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'cliutils'
op|'.'
name|'MissingArgs'
name|'as'
name|'e'
op|':'
newline|'\n'
comment|"# NOTE(mikal): this isn't the most helpful error message ever. It is"
nl|'\n'
comment|"# long, and tells you a lot of things you probably don't want to know"
nl|'\n'
comment|'# if you just got a single arg wrong.'
nl|'\n'
indent|'        '
name|'print'
name|'fn'
op|'.'
name|'__doc__'
newline|'\n'
name|'CONF'
op|'.'
name|'print_help'
op|'('
op|')'
newline|'\n'
name|'print'
name|'e'
newline|'\n'
name|'return'
op|'('
number|'1'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'ret'
op|'='
name|'fn'
op|'('
op|'*'
name|'fn_args'
op|','
op|'**'
name|'fn_kwargs'
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'cleanup'
op|'('
op|')'
newline|'\n'
name|'return'
op|'('
name|'ret'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'        '
name|'print'
name|'_'
op|'('
string|'"Command failed, please check log for more info"'
op|')'
newline|'\n'
name|'raise'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
