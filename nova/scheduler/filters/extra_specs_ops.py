begin_unit
comment|'# Copyright (c) 2011 OpenStack Foundation'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'operator'
newline|'\n'
nl|'\n'
comment|'# 1. The following operations are supported:'
nl|'\n'
comment|'#   =, s==, s!=, s>=, s>, s<=, s<, <in>, <all-in>, <or>, ==, !=, >=, <='
nl|'\n'
comment|'# 2. Note that <or> is handled in a different way below.'
nl|'\n'
comment|'# 3. If the first word in the extra_specs is not one of the operators,'
nl|'\n'
comment|'#   it is ignored.'
nl|'\n'
name|'op_methods'
op|'='
op|'{'
string|"'='"
op|':'
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'float'
op|'('
name|'x'
op|')'
op|'>='
name|'float'
op|'('
name|'y'
op|')'
op|','
nl|'\n'
string|"'<in>'"
op|':'
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'y'
name|'in'
name|'x'
op|','
nl|'\n'
string|"'<all-in>'"
op|':'
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'all'
op|'('
name|'val'
name|'in'
name|'x'
name|'for'
name|'val'
name|'in'
name|'y'
op|')'
op|','
nl|'\n'
string|"'=='"
op|':'
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'float'
op|'('
name|'x'
op|')'
op|'=='
name|'float'
op|'('
name|'y'
op|')'
op|','
nl|'\n'
string|"'!='"
op|':'
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'float'
op|'('
name|'x'
op|')'
op|'!='
name|'float'
op|'('
name|'y'
op|')'
op|','
nl|'\n'
string|"'>='"
op|':'
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'float'
op|'('
name|'x'
op|')'
op|'>='
name|'float'
op|'('
name|'y'
op|')'
op|','
nl|'\n'
string|"'<='"
op|':'
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'float'
op|'('
name|'x'
op|')'
op|'<='
name|'float'
op|'('
name|'y'
op|')'
op|','
nl|'\n'
string|"'s=='"
op|':'
name|'operator'
op|'.'
name|'eq'
op|','
nl|'\n'
string|"'s!='"
op|':'
name|'operator'
op|'.'
name|'ne'
op|','
nl|'\n'
string|"'s<'"
op|':'
name|'operator'
op|'.'
name|'lt'
op|','
nl|'\n'
string|"'s<='"
op|':'
name|'operator'
op|'.'
name|'le'
op|','
nl|'\n'
string|"'s>'"
op|':'
name|'operator'
op|'.'
name|'gt'
op|','
nl|'\n'
string|"'s>='"
op|':'
name|'operator'
op|'.'
name|'ge'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|match
name|'def'
name|'match'
op|'('
name|'value'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'words'
op|'='
name|'req'
op|'.'
name|'split'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'op'
op|'='
name|'method'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'words'
op|':'
newline|'\n'
indent|'        '
name|'op'
op|'='
name|'words'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
name|'method'
op|'='
name|'op_methods'
op|'.'
name|'get'
op|'('
name|'op'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'op'
op|'!='
string|"'<or>'"
name|'and'
name|'not'
name|'method'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'value'
op|'=='
name|'req'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'value'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'op'
op|'=='
string|"'<or>'"
op|':'
comment|'# Ex: <or> v1 <or> v2 <or> v3'
newline|'\n'
indent|'        '
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'words'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
op|'=='
name|'value'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'words'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'words'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
comment|'# remove a keyword <or>'
newline|'\n'
name|'if'
name|'not'
name|'words'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'words'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'op'
op|'=='
string|"'<all-in>'"
op|':'
comment|'# requires a list not a string'
newline|'\n'
indent|'            '
name|'return'
name|'method'
op|'('
name|'value'
op|','
name|'words'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'method'
op|'('
name|'value'
op|','
name|'words'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'False'
newline|'\n'
dedent|''
endmarker|''
end_unit
