begin_unit
comment|'# Copyright (c) 2011 OpenStack Foundation'
nl|'\n'
comment|'# Copyright (c) 2012 Cloudscaling'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'oslo_log'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'i18n'
name|'import'
name|'_LW'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
name|'import'
name|'filters'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
op|'.'
name|'filters'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|ram_allocation_ratio_opt
name|'ram_allocation_ratio_opt'
op|'='
name|'cfg'
op|'.'
name|'FloatOpt'
op|'('
string|"'ram_allocation_ratio'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'1.5'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Virtual ram to physical ram allocation ratio which affects '"
nl|'\n'
string|"'all ram filters. This configuration specifies a global ratio '"
nl|'\n'
string|"'for RamFilter. For AggregateRamFilter, it will fall back to '"
nl|'\n'
string|"'this configuration value if no per-aggregate setting found.'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'register_opt'
op|'('
name|'ram_allocation_ratio_opt'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BaseRamFilter
name|'class'
name|'BaseRamFilter'
op|'('
name|'filters'
op|'.'
name|'BaseHostFilter'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|_get_ram_allocation_ratio
indent|'    '
name|'def'
name|'_get_ram_allocation_ratio'
op|'('
name|'self'
op|','
name|'host_state'
op|','
name|'filter_properties'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
newline|'\n'
nl|'\n'
DECL|member|host_passes
dedent|''
name|'def'
name|'host_passes'
op|'('
name|'self'
op|','
name|'host_state'
op|','
name|'filter_properties'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Only return hosts with sufficient available RAM."""'
newline|'\n'
name|'instance_type'
op|'='
name|'filter_properties'
op|'.'
name|'get'
op|'('
string|"'instance_type'"
op|')'
newline|'\n'
name|'requested_ram'
op|'='
name|'instance_type'
op|'['
string|"'memory_mb'"
op|']'
newline|'\n'
name|'free_ram_mb'
op|'='
name|'host_state'
op|'.'
name|'free_ram_mb'
newline|'\n'
name|'total_usable_ram_mb'
op|'='
name|'host_state'
op|'.'
name|'total_usable_ram_mb'
newline|'\n'
nl|'\n'
name|'ram_allocation_ratio'
op|'='
name|'self'
op|'.'
name|'_get_ram_allocation_ratio'
op|'('
name|'host_state'
op|','
nl|'\n'
name|'filter_properties'
op|')'
newline|'\n'
nl|'\n'
name|'memory_mb_limit'
op|'='
name|'total_usable_ram_mb'
op|'*'
name|'ram_allocation_ratio'
newline|'\n'
name|'used_ram_mb'
op|'='
name|'total_usable_ram_mb'
op|'-'
name|'free_ram_mb'
newline|'\n'
name|'usable_ram'
op|'='
name|'memory_mb_limit'
op|'-'
name|'used_ram_mb'
newline|'\n'
name|'if'
name|'not'
name|'usable_ram'
op|'>='
name|'requested_ram'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|'"%(host_state)s does not have %(requested_ram)s MB "'
nl|'\n'
string|'"usable ram, it only has %(usable_ram)s MB usable ram."'
op|','
nl|'\n'
op|'{'
string|"'host_state'"
op|':'
name|'host_state'
op|','
nl|'\n'
string|"'requested_ram'"
op|':'
name|'requested_ram'
op|','
nl|'\n'
string|"'usable_ram'"
op|':'
name|'usable_ram'
op|'}'
op|')'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
nl|'\n'
comment|'# save oversubscription limit for compute node to test against:'
nl|'\n'
dedent|''
name|'host_state'
op|'.'
name|'limits'
op|'['
string|"'memory_mb'"
op|']'
op|'='
name|'memory_mb_limit'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RamFilter
dedent|''
dedent|''
name|'class'
name|'RamFilter'
op|'('
name|'BaseRamFilter'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Ram Filter with over subscription flag."""'
newline|'\n'
nl|'\n'
DECL|member|_get_ram_allocation_ratio
name|'def'
name|'_get_ram_allocation_ratio'
op|'('
name|'self'
op|','
name|'host_state'
op|','
name|'filter_properties'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'CONF'
op|'.'
name|'ram_allocation_ratio'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AggregateRamFilter
dedent|''
dedent|''
name|'class'
name|'AggregateRamFilter'
op|'('
name|'BaseRamFilter'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""AggregateRamFilter with per-aggregate ram subscription flag.\n\n    Fall back to global ram_allocation_ratio if no per-aggregate setting found.\n    """'
newline|'\n'
nl|'\n'
DECL|member|_get_ram_allocation_ratio
name|'def'
name|'_get_ram_allocation_ratio'
op|'('
name|'self'
op|','
name|'host_state'
op|','
name|'filter_properties'
op|')'
op|':'
newline|'\n'
comment|'# TODO(uni): DB query in filter is a performance hit, especially for'
nl|'\n'
comment|'# system with lots of hosts. Will need a general solution here to fix'
nl|'\n'
comment|'# all filters with aggregate DB call things.'
nl|'\n'
indent|'        '
name|'aggregate_vals'
op|'='
name|'utils'
op|'.'
name|'aggregate_values_from_key'
op|'('
nl|'\n'
name|'host_state'
op|','
nl|'\n'
string|"'ram_allocation_ratio'"
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'ratio'
op|'='
name|'utils'
op|'.'
name|'validate_num_values'
op|'('
nl|'\n'
name|'aggregate_vals'
op|','
name|'CONF'
op|'.'
name|'ram_allocation_ratio'
op|','
name|'cast_to'
op|'='
name|'float'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_LW'
op|'('
string|'"Could not decode ram_allocation_ratio: \'%s\'"'
op|')'
op|','
name|'e'
op|')'
newline|'\n'
name|'ratio'
op|'='
name|'CONF'
op|'.'
name|'ram_allocation_ratio'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'ratio'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
