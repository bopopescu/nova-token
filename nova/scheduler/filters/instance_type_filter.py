begin_unit
comment|'# Copyright (c) 2011 Openstack, LLC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
nl|'\n'
name|'import'
name|'nova'
op|'.'
name|'scheduler'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
op|'.'
name|'filters'
name|'import'
name|'abstract_filter'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InstanceTypeFilter
name|'class'
name|'InstanceTypeFilter'
op|'('
name|'abstract_filter'
op|'.'
name|'AbstractHostFilter'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""HostFilter hard-coded to work with InstanceType records."""'
newline|'\n'
DECL|member|instance_type_to_filter
name|'def'
name|'instance_type_to_filter'
op|'('
name|'self'
op|','
name|'instance_type'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Use instance_type to filter hosts."""'
newline|'\n'
name|'return'
op|'('
name|'self'
op|'.'
name|'_full_name'
op|'('
op|')'
op|','
name|'instance_type'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_satisfies_extra_specs
dedent|''
name|'def'
name|'_satisfies_extra_specs'
op|'('
name|'self'
op|','
name|'capabilities'
op|','
name|'instance_type'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Check that the capabilities provided by the compute service\n        satisfy the extra specs associated with the instance type"""'
newline|'\n'
name|'if'
string|"'extra_specs'"
name|'not'
name|'in'
name|'instance_type'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
comment|'# NOTE(lorinh): For now, we are just checking exact matching on the'
nl|'\n'
comment|'# values. Later on, we want to handle numerical'
nl|'\n'
comment|'# values so we can represent things like number of GPU cards'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'instance_type'
op|'['
string|"'extra_specs'"
op|']'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'capabilities'
op|'['
name|'key'
op|']'
op|'!='
name|'value'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'False'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|filter_hosts
dedent|''
name|'def'
name|'filter_hosts'
op|'('
name|'self'
op|','
name|'zone_manager'
op|','
name|'query'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return a list of hosts that can create instance_type."""'
newline|'\n'
name|'instance_type'
op|'='
name|'query'
newline|'\n'
name|'selected_hosts'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'host'
op|','
name|'services'
name|'in'
name|'zone_manager'
op|'.'
name|'service_states'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'capabilities'
op|'='
name|'services'
op|'.'
name|'get'
op|'('
string|"'compute'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'capabilities'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'host_ram_mb'
op|'='
name|'capabilities'
op|'['
string|"'host_memory_free'"
op|']'
newline|'\n'
name|'disk_bytes'
op|'='
name|'capabilities'
op|'['
string|"'disk_available'"
op|']'
newline|'\n'
name|'spec_ram'
op|'='
name|'instance_type'
op|'['
string|"'memory_mb'"
op|']'
newline|'\n'
name|'spec_disk'
op|'='
name|'instance_type'
op|'['
string|"'local_gb'"
op|']'
newline|'\n'
name|'extra_specs'
op|'='
name|'instance_type'
op|'['
string|"'extra_specs'"
op|']'
newline|'\n'
nl|'\n'
name|'if'
op|'('
op|'('
name|'host_ram_mb'
op|'>='
name|'spec_ram'
op|')'
name|'and'
op|'('
name|'disk_bytes'
op|'>='
name|'spec_disk'
op|')'
name|'and'
nl|'\n'
name|'self'
op|'.'
name|'_satisfies_extra_specs'
op|'('
name|'capabilities'
op|','
name|'instance_type'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'selected_hosts'
op|'.'
name|'append'
op|'('
op|'('
name|'host'
op|','
name|'capabilities'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'selected_hosts'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# host entries (currently) are like:'
nl|'\n'
comment|"#    {'host_name-description': 'Default install of XenServer',"
nl|'\n'
comment|"#    'host_hostname': 'xs-mini',"
nl|'\n'
comment|"#    'host_memory_total': 8244539392,"
nl|'\n'
comment|"#    'host_memory_overhead': 184225792,"
nl|'\n'
comment|"#    'host_memory_free': 3868327936,"
nl|'\n'
comment|"#    'host_memory_free_computed': 3840843776,"
nl|'\n'
comment|"#    'host_other_config': {},"
nl|'\n'
comment|"#    'host_ip_address': '192.168.1.109',"
nl|'\n'
comment|"#    'host_cpu_info': {},"
nl|'\n'
comment|"#    'disk_available': 32954957824,"
nl|'\n'
comment|"#    'disk_total': 50394562560,"
nl|'\n'
comment|"#    'disk_used': 17439604736,"
nl|'\n'
comment|"#    'host_uuid': 'cedb9b39-9388-41df-8891-c5c9a0c0fe5f',"
nl|'\n'
comment|"#    'host_name_label': 'xs-mini'}"
nl|'\n'
nl|'\n'
comment|'# instance_type table has:'
nl|'\n'
comment|'# name = Column(String(255), unique=True)'
nl|'\n'
comment|'# memory_mb = Column(Integer)'
nl|'\n'
comment|'# vcpus = Column(Integer)'
nl|'\n'
comment|'# local_gb = Column(Integer)'
nl|'\n'
comment|'# flavorid = Column(Integer, unique=True)'
nl|'\n'
comment|'# swap = Column(Integer, nullable=False, default=0)'
nl|'\n'
comment|'# rxtx_quota = Column(Integer, nullable=False, default=0)'
nl|'\n'
comment|'# rxtx_cap = Column(Integer, nullable=False, default=0)'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
