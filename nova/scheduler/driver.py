begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2010 Openstack, LLC.'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nScheduler base class that all Schedulers should inherit from\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'logging'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'rpc'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'ec2'
name|'import'
name|'cloud'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'power_state'
newline|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_integer'
op|'('
string|"'service_down_time'"
op|','
number|'60'
op|','
nl|'\n'
string|"'maximum time since last checkin for up service'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NoValidHost
name|'class'
name|'NoValidHost'
op|'('
name|'exception'
op|'.'
name|'Error'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""There is no valid host for the command."""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Scheduler
dedent|''
name|'class'
name|'Scheduler'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""The base class that all Scheduler clases should inherit from."""'
newline|'\n'
nl|'\n'
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|service_is_up
name|'def'
name|'service_is_up'
op|'('
name|'service'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Check whether a service is up based on last heartbeat."""'
newline|'\n'
name|'last_heartbeat'
op|'='
name|'service'
op|'['
string|"'updated_at'"
op|']'
name|'or'
name|'service'
op|'['
string|"'created_at'"
op|']'
newline|'\n'
comment|'# Timestamps in DB are UTC.'
nl|'\n'
name|'elapsed'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'-'
name|'last_heartbeat'
newline|'\n'
name|'return'
name|'elapsed'
op|'<'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'seconds'
op|'='
name|'FLAGS'
op|'.'
name|'service_down_time'
op|')'
newline|'\n'
nl|'\n'
DECL|member|hosts_up
dedent|''
name|'def'
name|'hosts_up'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'topic'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return the list of hosts that have a running service for topic."""'
newline|'\n'
nl|'\n'
name|'services'
op|'='
name|'db'
op|'.'
name|'service_get_all_by_topic'
op|'('
name|'context'
op|','
name|'topic'
op|')'
newline|'\n'
name|'return'
op|'['
name|'service'
op|'.'
name|'host'
nl|'\n'
name|'for'
name|'service'
name|'in'
name|'services'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'service_is_up'
op|'('
name|'service'
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|member|schedule
dedent|''
name|'def'
name|'schedule'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'topic'
op|','
op|'*'
name|'_args'
op|','
op|'**'
name|'_kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Must override at least this method for scheduler to work."""'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
name|'_'
op|'('
string|'"Must implement a fallback schedule"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|schedule_live_migration
dedent|''
name|'def'
name|'schedule_live_migration'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
name|'dest'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" live migration method """'
newline|'\n'
nl|'\n'
comment|'# Whether instance exists and running'
nl|'\n'
comment|'# try-catch clause is necessary because only internal_id is shown'
nl|'\n'
comment|'# when NotFound exception occurs. it isnot understandable to admins.'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'ec2_id'
op|'='
name|'instance_ref'
op|'['
string|"'hostname'"
op|']'
newline|'\n'
name|'internal_id'
op|'='
name|'instance_ref'
op|'['
string|"'internal_id'"
op|']'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|"'Unexpected error: instance is not found'"
op|')'
newline|'\n'
name|'e'
op|'.'
name|'args'
op|'+='
op|'('
string|"'\\n'"
op|'+'
name|'msg'
op|','
op|')'
newline|'\n'
name|'raise'
name|'e'
newline|'\n'
nl|'\n'
comment|'# Checking instance state.'
nl|'\n'
dedent|''
name|'if'
name|'power_state'
op|'.'
name|'RUNNING'
op|'!='
name|'instance_ref'
op|'['
string|"'state'"
op|']'
name|'or'
string|"'running'"
op|'!='
name|'instance_ref'
op|'['
string|"'state_description'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|"'Instance(%s) is not running'"
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'Invalid'
op|'('
name|'msg'
op|'%'
name|'ec2_id'
op|')'
newline|'\n'
nl|'\n'
comment|'# Checking destination host exists'
nl|'\n'
dedent|''
name|'dhost_ref'
op|'='
name|'db'
op|'.'
name|'host_get_by_name'
op|'('
name|'context'
op|','
name|'dest'
op|')'
newline|'\n'
nl|'\n'
comment|'# Checking whether The host where instance is running'
nl|'\n'
comment|'# and dest is not same.'
nl|'\n'
name|'src'
op|'='
name|'instance_ref'
op|'['
string|"'host'"
op|']'
newline|'\n'
name|'if'
name|'dest'
op|'=='
name|'src'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|"'%s is where %s is running now. choose other host.'"
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'Invalid'
op|'('
name|'msg'
op|'%'
op|'('
name|'dest'
op|','
name|'ec2_id'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Checking dest is compute node.'
nl|'\n'
dedent|''
name|'services'
op|'='
name|'db'
op|'.'
name|'service_get_all_by_topic'
op|'('
name|'context'
op|','
string|"'compute'"
op|')'
newline|'\n'
name|'if'
name|'dest'
name|'not'
name|'in'
op|'['
name|'service'
op|'.'
name|'host'
name|'for'
name|'service'
name|'in'
name|'services'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|"'%s must be compute node'"
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'Invalid'
op|'('
name|'msg'
op|'%'
name|'dest'
op|')'
newline|'\n'
nl|'\n'
comment|'# Checking dest host is alive.'
nl|'\n'
dedent|''
name|'service'
op|'='
op|'['
name|'service'
name|'for'
name|'service'
name|'in'
name|'services'
name|'if'
name|'service'
op|'.'
name|'host'
op|'=='
name|'dest'
op|']'
newline|'\n'
name|'service'
op|'='
name|'service'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'service_is_up'
op|'('
name|'service'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|"'%s is not alive(time synchronize problem?)'"
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'Invalid'
op|'('
name|'msg'
op|'%'
name|'dest'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(masumotok): Below pre-checkings are followed by'
nl|'\n'
comment|'# http://wiki.libvirt.org/page/TodoPreMigrationChecks'
nl|'\n'
nl|'\n'
comment|'# Checking hypervisor is same.'
nl|'\n'
dedent|''
name|'orighost'
op|'='
name|'instance_ref'
op|'['
string|"'launched_on'"
op|']'
newline|'\n'
name|'ohost_ref'
op|'='
name|'db'
op|'.'
name|'host_get_by_name'
op|'('
name|'context'
op|','
name|'orighost'
op|')'
newline|'\n'
nl|'\n'
name|'otype'
op|'='
name|'ohost_ref'
op|'['
string|"'hypervisor_type'"
op|']'
newline|'\n'
name|'dtype'
op|'='
name|'dhost_ref'
op|'['
string|"'hypervisor_type'"
op|']'
newline|'\n'
name|'if'
name|'otype'
op|'!='
name|'dtype'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|"'Different hypervisor type(%s->%s)'"
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'Invalid'
op|'('
name|'msg'
op|'%'
op|'('
name|'otype'
op|','
name|'dtype'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Checkng hypervisor version.'
nl|'\n'
dedent|''
name|'oversion'
op|'='
name|'ohost_ref'
op|'['
string|"'hypervisor_version'"
op|']'
newline|'\n'
name|'dversion'
op|'='
name|'dhost_ref'
op|'['
string|"'hypervisor_version'"
op|']'
newline|'\n'
name|'if'
name|'oversion'
op|'>'
name|'dversion'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|"'Older hypervisor version(%s->%s)'"
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'Invalid'
op|'('
name|'msg'
op|'%'
op|'('
name|'oversion'
op|','
name|'dversion'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Checking cpuinfo.'
nl|'\n'
dedent|''
name|'cpuinfo'
op|'='
name|'ohost_ref'
op|'['
string|"'cpu_info'"
op|']'
newline|'\n'
name|'if'
name|'str'
op|'!='
name|'type'
op|'('
name|'cpuinfo'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|"'Unexpected err: not found cpu_info for %s on DB.hosts'"
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'Invalid'
op|'('
name|'msg'
op|'%'
name|'orighost'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'ret'
op|'='
name|'rpc'
op|'.'
name|'call'
op|'('
name|'context'
op|','
nl|'\n'
name|'db'
op|'.'
name|'queue_get_for'
op|'('
name|'context'
op|','
name|'FLAGS'
op|'.'
name|'compute_topic'
op|','
name|'dest'
op|')'
op|','
nl|'\n'
op|'{'
string|'"method"'
op|':'
string|"'compareCPU'"
op|','
nl|'\n'
string|'"args"'
op|':'
op|'{'
string|"'xml'"
op|':'
name|'cpuinfo'
op|'}'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'int'
op|'!='
name|'type'
op|'('
name|'ret'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ret'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
number|'0'
op|'>='
name|'ret'
op|':'
newline|'\n'
indent|'            '
name|'u'
op|'='
string|"'http://libvirt.org/html/libvirt-libvirt.html'"
newline|'\n'
name|'u'
op|'+='
string|"'#virCPUCompareResult'"
newline|'\n'
name|'msg'
op|'='
string|"'%s doesnt have compatibility to %s(where %s launching at)\\n'"
newline|'\n'
name|'msg'
op|'+='
string|"'result:%d \\n'"
newline|'\n'
name|'msg'
op|'+='
string|"'Refer to %s'"
newline|'\n'
name|'msg'
op|'='
name|'_'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'Invalid'
op|'('
name|'msg'
op|'%'
op|'('
name|'dest'
op|','
name|'src'
op|','
name|'ec2_id'
op|','
name|'ret'
op|','
name|'u'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Checking dst host still has enough capacities.'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'has_enough_resource'
op|'('
name|'context'
op|','
name|'instance_id'
op|','
name|'dest'
op|')'
newline|'\n'
nl|'\n'
comment|'# Changing instance_state.'
nl|'\n'
name|'db'
op|'.'
name|'instance_set_state'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance_id'
op|','
nl|'\n'
name|'power_state'
op|'.'
name|'PAUSED'
op|','
nl|'\n'
string|"'migrating'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Changing volume state'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'vol'
name|'in'
name|'db'
op|'.'
name|'volume_get_all_by_instance'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'db'
op|'.'
name|'volume_update'
op|'('
name|'context'
op|','
nl|'\n'
name|'vol'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'status'"
op|':'
string|"'migrating'"
op|'}'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NotFound'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
comment|'# Requesting live migration.'
nl|'\n'
dedent|''
name|'return'
name|'src'
newline|'\n'
nl|'\n'
DECL|member|has_enough_resource
dedent|''
name|'def'
name|'has_enough_resource'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_id'
op|','
name|'dest'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Check if destination host has enough resource for live migration"""'
newline|'\n'
nl|'\n'
comment|'# Getting instance information'
nl|'\n'
name|'instance_ref'
op|'='
name|'db'
op|'.'
name|'instance_get'
op|'('
name|'context'
op|','
name|'instance_id'
op|')'
newline|'\n'
name|'ec2_id'
op|'='
name|'instance_ref'
op|'['
string|"'hostname'"
op|']'
newline|'\n'
name|'vcpus'
op|'='
name|'instance_ref'
op|'['
string|"'vcpus'"
op|']'
newline|'\n'
name|'mem'
op|'='
name|'instance_ref'
op|'['
string|"'memory_mb'"
op|']'
newline|'\n'
name|'hdd'
op|'='
name|'instance_ref'
op|'['
string|"'local_gb'"
op|']'
newline|'\n'
nl|'\n'
comment|'# Gettin host information'
nl|'\n'
name|'host_ref'
op|'='
name|'db'
op|'.'
name|'host_get_by_name'
op|'('
name|'context'
op|','
name|'dest'
op|')'
newline|'\n'
name|'total_cpu'
op|'='
name|'int'
op|'('
name|'host_ref'
op|'['
string|"'vcpus'"
op|']'
op|')'
newline|'\n'
name|'total_mem'
op|'='
name|'int'
op|'('
name|'host_ref'
op|'['
string|"'memory_mb'"
op|']'
op|')'
newline|'\n'
name|'total_hdd'
op|'='
name|'int'
op|'('
name|'host_ref'
op|'['
string|"'local_gb'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'instances_ref'
op|'='
name|'db'
op|'.'
name|'instance_get_all_by_host'
op|'('
name|'context'
op|','
name|'dest'
op|')'
newline|'\n'
name|'for'
name|'i_ref'
name|'in'
name|'instances_ref'
op|':'
newline|'\n'
indent|'            '
name|'total_cpu'
op|'-='
name|'int'
op|'('
name|'i_ref'
op|'['
string|"'vcpus'"
op|']'
op|')'
newline|'\n'
name|'total_mem'
op|'-='
name|'int'
op|'('
name|'i_ref'
op|'['
string|"'memory_mb'"
op|']'
op|')'
newline|'\n'
name|'total_hdd'
op|'-='
name|'int'
op|'('
name|'i_ref'
op|'['
string|"'local_gb'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Checking host has enough information'
nl|'\n'
dedent|''
name|'logging'
op|'.'
name|'debug'
op|'('
string|"'host(%s) remains vcpu:%s mem:%s hdd:%s,'"
op|'%'
nl|'\n'
op|'('
name|'dest'
op|','
name|'total_cpu'
op|','
name|'total_mem'
op|','
name|'total_hdd'
op|')'
op|')'
newline|'\n'
name|'logging'
op|'.'
name|'debug'
op|'('
string|"'instance(%s) has vcpu:%s mem:%s hdd:%s,'"
op|'%'
nl|'\n'
op|'('
name|'ec2_id'
op|','
name|'vcpus'
op|','
name|'mem'
op|','
name|'hdd'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'total_cpu'
op|'<='
name|'vcpus'
name|'or'
name|'total_mem'
op|'<='
name|'mem'
name|'or'
name|'total_hdd'
op|'<='
name|'hdd'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
string|"'%s doesnt have enough resource for %s'"
op|'%'
op|'('
name|'dest'
op|','
name|'ec2_id'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'NotEmpty'
op|'('
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'logging'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'%s has enough resource for %s'"
op|')'
op|'%'
op|'('
name|'dest'
op|','
name|'ec2_id'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
