begin_unit
comment|'# Copyright (c) 2011 Openstack, LLC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nManage communication with child zones and keep state for them.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'traceback'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'greenpool'
newline|'\n'
name|'from'
name|'novaclient'
name|'import'
name|'v1_1'
name|'as'
name|'novaclient'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|zone_manager_opts
name|'zone_manager_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'zone_db_check_interval'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'60'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Seconds between getting fresh zone info from db.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'zone_failures_to_offline'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'3'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Number of consecutive errors before offlining a zone'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
name|'FLAGS'
op|'.'
name|'register_opts'
op|'('
name|'zone_manager_opts'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ZoneState
name|'class'
name|'ZoneState'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Holds state for a particular zone."""'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'is_active'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'capabilities'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'attempt'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'last_seen'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'.'
name|'min'
newline|'\n'
name|'self'
op|'.'
name|'last_exception'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'last_exception_time'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'zone_info'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|update_zone_info
dedent|''
name|'def'
name|'update_zone_info'
op|'('
name|'self'
op|','
name|'zone'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Update zone credentials from db"""'
newline|'\n'
name|'self'
op|'.'
name|'zone_info'
op|'='
name|'dict'
op|'('
name|'zone'
op|'.'
name|'iteritems'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|update_metadata
dedent|''
name|'def'
name|'update_metadata'
op|'('
name|'self'
op|','
name|'zone_metadata'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Update zone metadata after successful communications with\n           child zone."""'
newline|'\n'
name|'self'
op|'.'
name|'last_seen'
op|'='
name|'utils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'attempt'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'capabilities'
op|'='
name|'dict'
op|'('
nl|'\n'
op|'['
op|'('
name|'k'
op|','
name|'v'
op|')'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'zone_metadata'
op|'.'
name|'iteritems'
op|'('
op|')'
name|'if'
name|'k'
op|'!='
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'is_active'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|get_zone_info
dedent|''
name|'def'
name|'get_zone_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_fields_to_return'
op|'='
op|'['
string|"'api_url'"
op|','
string|"'id'"
op|','
string|"'weight_scale'"
op|','
nl|'\n'
string|"'weight_offset'"
op|']'
newline|'\n'
name|'zone_info'
op|'='
name|'dict'
op|'('
name|'is_active'
op|'='
name|'self'
op|'.'
name|'is_active'
op|','
nl|'\n'
name|'capabilities'
op|'='
name|'self'
op|'.'
name|'capabilities'
op|')'
newline|'\n'
name|'for'
name|'field'
name|'in'
name|'db_fields_to_return'
op|':'
newline|'\n'
indent|'            '
name|'zone_info'
op|'['
name|'field'
op|']'
op|'='
name|'self'
op|'.'
name|'zone_info'
op|'['
name|'field'
op|']'
newline|'\n'
dedent|''
name|'return'
name|'zone_info'
newline|'\n'
nl|'\n'
DECL|member|log_error
dedent|''
name|'def'
name|'log_error'
op|'('
name|'self'
op|','
name|'exception'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Something went wrong. Check to see if zone should be\n           marked as offline."""'
newline|'\n'
name|'self'
op|'.'
name|'last_exception'
op|'='
name|'exception'
newline|'\n'
name|'self'
op|'.'
name|'last_exception_time'
op|'='
name|'utils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'api_url'
op|'='
name|'self'
op|'.'
name|'zone_info'
op|'['
string|"'api_url'"
op|']'
newline|'\n'
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_'
op|'('
string|'"\'%(exception)s\' error talking to "'
nl|'\n'
string|'"zone %(api_url)s"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'max_errors'
op|'='
name|'FLAGS'
op|'.'
name|'zone_failures_to_offline'
newline|'\n'
name|'self'
op|'.'
name|'attempt'
op|'+='
number|'1'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'attempt'
op|'>='
name|'max_errors'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'is_active'
op|'='
name|'False'
newline|'\n'
name|'LOG'
op|'.'
name|'error'
op|'('
name|'_'
op|'('
string|'"No answer from zone %(api_url)s "'
nl|'\n'
string|'"after %(max_errors)d "'
nl|'\n'
string|'"attempts. Marking inactive."'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|call_novaclient
dedent|''
dedent|''
name|'def'
name|'call_novaclient'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Call novaclient. Broken out for testing purposes. Note that\n        we have to use the admin credentials for this since there is no\n        available context."""'
newline|'\n'
name|'username'
op|'='
name|'self'
op|'.'
name|'zone_info'
op|'['
string|"'username'"
op|']'
newline|'\n'
name|'password'
op|'='
name|'self'
op|'.'
name|'zone_info'
op|'['
string|"'password'"
op|']'
newline|'\n'
name|'api_url'
op|'='
name|'self'
op|'.'
name|'zone_info'
op|'['
string|"'api_url'"
op|']'
newline|'\n'
name|'region_name'
op|'='
name|'self'
op|'.'
name|'zone_info'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'client'
op|'='
name|'novaclient'
op|'.'
name|'Client'
op|'('
name|'username'
op|','
name|'password'
op|','
name|'None'
op|','
name|'api_url'
op|','
nl|'\n'
name|'region_name'
op|')'
newline|'\n'
name|'return'
name|'client'
op|'.'
name|'zones'
op|'.'
name|'info'
op|'('
op|')'
op|'.'
name|'_info'
newline|'\n'
nl|'\n'
DECL|member|poll
dedent|''
name|'def'
name|'poll'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Eventlet worker to poll a self."""'
newline|'\n'
name|'if'
string|"'api_url'"
name|'not'
name|'in'
name|'self'
op|'.'
name|'zone_info'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'name'
op|'='
name|'self'
op|'.'
name|'zone_info'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'api_url'
op|'='
name|'self'
op|'.'
name|'zone_info'
op|'['
string|"'api_url'"
op|']'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Polling zone: %(name)s @ %(api_url)s"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'update_metadata'
op|'('
name|'self'
op|'.'
name|'call_novaclient'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'log_error'
op|'('
name|'traceback'
op|'.'
name|'format_exc'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ZoneManager
dedent|''
dedent|''
dedent|''
name|'class'
name|'ZoneManager'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Keeps the zone states updated."""'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'last_zone_db_check'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'.'
name|'min'
newline|'\n'
name|'self'
op|'.'
name|'zone_states'
op|'='
op|'{'
op|'}'
comment|'# { <zone_id> : ZoneState }'
newline|'\n'
name|'self'
op|'.'
name|'green_pool'
op|'='
name|'greenpool'
op|'.'
name|'GreenPool'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_zone_list
dedent|''
name|'def'
name|'get_zone_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return the list of zones we know about."""'
newline|'\n'
name|'return'
op|'['
name|'zone'
op|'.'
name|'get_zone_info'
op|'('
op|')'
name|'for'
name|'zone'
name|'in'
name|'self'
op|'.'
name|'zone_states'
op|'.'
name|'values'
op|'('
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_refresh_from_db
dedent|''
name|'def'
name|'_refresh_from_db'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Make our zone state map match the db."""'
newline|'\n'
comment|'# Add/update existing zones ...'
nl|'\n'
name|'zones'
op|'='
name|'db'
op|'.'
name|'zone_get_all'
op|'('
name|'context'
op|')'
newline|'\n'
name|'existing'
op|'='
name|'self'
op|'.'
name|'zone_states'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'db_keys'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'zone'
name|'in'
name|'zones'
op|':'
newline|'\n'
indent|'            '
name|'zone_id'
op|'='
name|'zone'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'db_keys'
op|'.'
name|'append'
op|'('
name|'zone_id'
op|')'
newline|'\n'
name|'if'
name|'zone_id'
name|'not'
name|'in'
name|'existing'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'zone_states'
op|'['
name|'zone_id'
op|']'
op|'='
name|'ZoneState'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'zone_states'
op|'['
name|'zone_id'
op|']'
op|'.'
name|'update_zone_info'
op|'('
name|'zone'
op|')'
newline|'\n'
nl|'\n'
comment|'# Cleanup zones removed from db ...'
nl|'\n'
dedent|''
name|'keys'
op|'='
name|'self'
op|'.'
name|'zone_states'
op|'.'
name|'keys'
op|'('
op|')'
comment|"# since we're deleting"
newline|'\n'
name|'for'
name|'zone_id'
name|'in'
name|'keys'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'zone_id'
name|'not'
name|'in'
name|'db_keys'
op|':'
newline|'\n'
indent|'                '
name|'del'
name|'self'
op|'.'
name|'zone_states'
op|'['
name|'zone_id'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_poll_zones
dedent|''
dedent|''
dedent|''
name|'def'
name|'_poll_zones'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Try to connect to each child zone and get update."""'
newline|'\n'
DECL|function|_worker
name|'def'
name|'_worker'
op|'('
name|'zone_state'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'zone_state'
op|'.'
name|'poll'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'green_pool'
op|'.'
name|'imap'
op|'('
name|'_worker'
op|','
name|'self'
op|'.'
name|'zone_states'
op|'.'
name|'values'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|update
dedent|''
name|'def'
name|'update'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Update status for all zones.  This should be called\n        periodically to refresh the zone states.\n        """'
newline|'\n'
name|'diff'
op|'='
name|'utils'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'-'
name|'self'
op|'.'
name|'last_zone_db_check'
newline|'\n'
name|'if'
name|'diff'
op|'.'
name|'seconds'
op|'>='
name|'FLAGS'
op|'.'
name|'zone_db_check_interval'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Updating zone cache from db."'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'last_zone_db_check'
op|'='
name|'utils'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_refresh_from_db'
op|'('
name|'context'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_poll_zones'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
