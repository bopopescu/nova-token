begin_unit
comment|'# Copyright (c) 2015 Ericsson AB'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nAffinity Weighers.  Weigh hosts by the number of instances from a given host.\n\nAffinityWeigher implements the soft-affinity policy for server groups by\npreferring the hosts that has more instances from the given group.\n\nAntiAffinityWeigher implements the soft-anti-affinity policy for server groups\nby preferring the hosts that has less instances from the given group.\n\n"""'
newline|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'oslo_log'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'i18n'
name|'import'
name|'_LW'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
name|'import'
name|'weights'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_SoftAffinityWeigherBase
name|'class'
name|'_SoftAffinityWeigherBase'
op|'('
name|'weights'
op|'.'
name|'BaseHostWeigher'
op|')'
op|':'
newline|'\n'
DECL|variable|policy_name
indent|'    '
name|'policy_name'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_weigh_object
name|'def'
name|'_weigh_object'
op|'('
name|'self'
op|','
name|'host_state'
op|','
name|'request_spec'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Higher weights win."""'
newline|'\n'
name|'if'
name|'not'
name|'request_spec'
op|'.'
name|'instance_group'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
dedent|''
name|'policies'
op|'='
name|'request_spec'
op|'.'
name|'instance_group'
op|'.'
name|'policies'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'policy_name'
name|'not'
name|'in'
name|'policies'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
dedent|''
name|'instances'
op|'='
name|'set'
op|'('
name|'host_state'
op|'.'
name|'instances'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
newline|'\n'
name|'members'
op|'='
name|'set'
op|'('
name|'request_spec'
op|'.'
name|'instance_group'
op|'.'
name|'members'
op|')'
newline|'\n'
name|'member_on_host'
op|'='
name|'instances'
op|'.'
name|'intersection'
op|'('
name|'members'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'len'
op|'('
name|'member_on_host'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerGroupSoftAffinityWeigher
dedent|''
dedent|''
name|'class'
name|'ServerGroupSoftAffinityWeigher'
op|'('
name|'_SoftAffinityWeigherBase'
op|')'
op|':'
newline|'\n'
DECL|variable|policy_name
indent|'    '
name|'policy_name'
op|'='
string|"'soft-affinity'"
newline|'\n'
DECL|variable|warning_sent
name|'warning_sent'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|weight_multiplier
name|'def'
name|'weight_multiplier'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
op|'('
name|'CONF'
op|'.'
name|'soft_affinity_weight_multiplier'
op|'<'
number|'0'
name|'and'
nl|'\n'
name|'not'
name|'self'
op|'.'
name|'warning_sent'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'_LW'
op|'('
string|"'For the soft_affinity_weight_multiplier only a '"
nl|'\n'
string|"'positive value is meaningful as a negative value '"
nl|'\n'
string|"'would mean that the affinity weigher would '"
nl|'\n'
string|"'prefer non-collocating placement.'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'warning_sent'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'CONF'
op|'.'
name|'soft_affinity_weight_multiplier'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerGroupSoftAntiAffinityWeigher
dedent|''
dedent|''
name|'class'
name|'ServerGroupSoftAntiAffinityWeigher'
op|'('
name|'_SoftAffinityWeigherBase'
op|')'
op|':'
newline|'\n'
DECL|variable|policy_name
indent|'    '
name|'policy_name'
op|'='
string|"'soft-anti-affinity'"
newline|'\n'
DECL|variable|warning_sent
name|'warning_sent'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|weight_multiplier
name|'def'
name|'weight_multiplier'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
op|'('
name|'CONF'
op|'.'
name|'soft_anti_affinity_weight_multiplier'
op|'<'
number|'0'
name|'and'
nl|'\n'
name|'not'
name|'self'
op|'.'
name|'warning_sent'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'_LW'
op|'('
string|"'For the soft_anti_affinity_weight_multiplier only a '"
nl|'\n'
string|"'positive value is meaningful as a negative value '"
nl|'\n'
string|"'would mean that the anti-affinity weigher would '"
nl|'\n'
string|"'prefer collocating placement.'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'warning_sent'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'CONF'
op|'.'
name|'soft_anti_affinity_weight_multiplier'
newline|'\n'
nl|'\n'
DECL|member|_weigh_object
dedent|''
name|'def'
name|'_weigh_object'
op|'('
name|'self'
op|','
name|'host_state'
op|','
name|'request_spec'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'weight'
op|'='
name|'super'
op|'('
name|'ServerGroupSoftAntiAffinityWeigher'
op|','
name|'self'
op|')'
op|'.'
name|'_weigh_object'
op|'('
nl|'\n'
name|'host_state'
op|','
name|'request_spec'
op|')'
newline|'\n'
name|'return'
op|'-'
number|'1'
op|'*'
name|'weight'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
