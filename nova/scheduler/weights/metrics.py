begin_unit
comment|'# Copyright (c) 2011 OpenStack Foundation'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nMetrics Weigher.  Weigh hosts by their metrics.\n\nThis weigher can compute the weight based on the compute node host\'s various\nmetrics. The to-be weighed metrics and their weighing ratio are specified\nin the configuration file as the followings:\n\n    metrics_weight_setting = name1=1.0, name2=-1.0\n\n    The final weight would be name1.value * 1.0 + name2.value * -1.0.\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'gettextutils'
name|'import'
name|'_'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
name|'import'
name|'weights'
newline|'\n'
nl|'\n'
DECL|variable|metrics_weight_opts
name|'metrics_weight_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'FloatOpt'
op|'('
string|"'weight_multiplier'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'1.0'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Multiplier used for weighing metrics.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'ListOpt'
op|'('
string|"'weight_setting'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
op|'['
op|']'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'How the metrics are going to be weighed. This '"
nl|'\n'
string|'\'should be in the form of "<name1>=<ratio1>, \''
nl|'\n'
string|'\'<name2>=<ratio2>, ...", where <nameX> is one \''
nl|'\n'
string|"'of the metric to be weighed, and <ratioX> is '"
nl|'\n'
string|'\'the corresponding ratio. So for "name1=1.0, \''
nl|'\n'
string|'\'name2=-1.0" The final weight would be \''
nl|'\n'
string|"'name1.value * 1.0 + name2.value * -1.0.'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'register_opts'
op|'('
name|'metrics_weight_opts'
op|','
name|'group'
op|'='
string|"'metrics'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MetricsWeigher
name|'class'
name|'MetricsWeigher'
op|'('
name|'weights'
op|'.'
name|'BaseHostWeigher'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_parse_setting'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_parse_setting
dedent|''
name|'def'
name|'_parse_setting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'setting'
op|'='
op|'['
op|']'
newline|'\n'
name|'bad'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'item'
name|'in'
name|'CONF'
op|'.'
name|'metrics'
op|'.'
name|'weight_setting'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
op|'('
name|'name'
op|','
name|'ratio'
op|')'
op|'='
name|'item'
op|'.'
name|'split'
op|'('
string|"'='"
op|')'
newline|'\n'
name|'ratio'
op|'='
name|'float'
op|'('
name|'ratio'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                '
name|'name'
op|'='
name|'None'
newline|'\n'
name|'ratio'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'name'
name|'and'
name|'ratio'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'setting'
op|'.'
name|'append'
op|'('
op|'('
name|'name'
op|','
name|'ratio'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'bad'
op|'.'
name|'append'
op|'('
name|'item'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'bad'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'error'
op|'('
name|'_'
op|'('
string|'"Ignoring the invalid elements of"'
nl|'\n'
string|'" metrics_weight_setting: %s"'
op|')'
op|','
nl|'\n'
string|'","'
op|'.'
name|'join'
op|'('
name|'bad'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_weight_multiplier
dedent|''
dedent|''
name|'def'
name|'_weight_multiplier'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Override the weight multiplier."""'
newline|'\n'
name|'return'
name|'CONF'
op|'.'
name|'metrics'
op|'.'
name|'weight_multiplier'
newline|'\n'
nl|'\n'
DECL|member|_weigh_object
dedent|''
name|'def'
name|'_weigh_object'
op|'('
name|'self'
op|','
name|'host_state'
op|','
name|'weight_properties'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'value'
op|'='
number|'0.0'
newline|'\n'
nl|'\n'
name|'for'
op|'('
name|'name'
op|','
name|'ratio'
op|')'
name|'in'
name|'self'
op|'.'
name|'setting'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'value'
op|'+='
name|'host_state'
op|'.'
name|'metrics'
op|'['
name|'name'
op|']'
op|'.'
name|'value'
op|'*'
name|'ratio'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'ComputeHostMetricNotFound'
op|'('
nl|'\n'
name|'host'
op|'='
name|'host_state'
op|'.'
name|'host'
op|','
nl|'\n'
name|'node'
op|'='
name|'host_state'
op|'.'
name|'nodename'
op|','
nl|'\n'
name|'name'
op|'='
name|'name'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'value'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
