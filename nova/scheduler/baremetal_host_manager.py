begin_unit
comment|'# Copyright (c) 2012 NTT DOCOMO, INC.'
nl|'\n'
comment|'# Copyright (c) 2011 OpenStack Foundation'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nManage hosts in the current zone.\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
name|'import'
name|'host_manager'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BaremetalNodeState
name|'class'
name|'BaremetalNodeState'
op|'('
name|'host_manager'
op|'.'
name|'HostState'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Mutable and immutable information tracked for a host.\n    This is an attempt to remove the ad-hoc data structures\n    previously used and lock down access.\n    """'
newline|'\n'
nl|'\n'
DECL|member|update_from_compute_node
name|'def'
name|'update_from_compute_node'
op|'('
name|'self'
op|','
name|'compute'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Update information about a host from its compute_node info."""'
newline|'\n'
name|'all_ram_mb'
op|'='
name|'compute'
op|'['
string|"'memory_mb'"
op|']'
newline|'\n'
nl|'\n'
name|'free_disk_mb'
op|'='
name|'compute'
op|'['
string|"'free_disk_gb'"
op|']'
op|'*'
number|'1024'
newline|'\n'
name|'free_ram_mb'
op|'='
name|'compute'
op|'['
string|"'free_ram_mb'"
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'free_ram_mb'
op|'='
name|'free_ram_mb'
newline|'\n'
name|'self'
op|'.'
name|'total_usable_ram_mb'
op|'='
name|'all_ram_mb'
newline|'\n'
name|'self'
op|'.'
name|'free_disk_mb'
op|'='
name|'free_disk_mb'
newline|'\n'
name|'self'
op|'.'
name|'vcpus_total'
op|'='
name|'compute'
op|'['
string|"'vcpus'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'vcpus_used'
op|'='
name|'compute'
op|'['
string|"'vcpus_used'"
op|']'
newline|'\n'
nl|'\n'
name|'stats'
op|'='
name|'compute'
op|'.'
name|'get'
op|'('
string|"'stats'"
op|','
string|"'{}'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stats'
op|'='
name|'jsonutils'
op|'.'
name|'loads'
op|'('
name|'stats'
op|')'
newline|'\n'
nl|'\n'
DECL|member|consume_from_instance
dedent|''
name|'def'
name|'consume_from_instance'
op|'('
name|'self'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'free_ram_mb'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'free_disk_mb'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'vcpus_used'
op|'='
name|'self'
op|'.'
name|'vcpus_total'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|new_host_state
dedent|''
dedent|''
name|'def'
name|'new_host_state'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'node'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Returns an instance of BaremetalNodeState or HostState according to\n    compute[\'cpu_info\']. If \'cpu_info\' equals \'baremetal cpu\', it returns an\n    instance of BaremetalNodeState. If not, returns an instance of HostState.\n    """'
newline|'\n'
name|'compute'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'compute'"
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'compute'
name|'and'
name|'compute'
op|'.'
name|'get'
op|'('
string|"'cpu_info'"
op|')'
op|'=='
string|"'baremetal cpu'"
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'BaremetalNodeState'
op|'('
name|'host'
op|','
name|'node'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'host_manager'
op|'.'
name|'HostState'
op|'('
name|'host'
op|','
name|'node'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BaremetalHostManager
dedent|''
dedent|''
name|'class'
name|'BaremetalHostManager'
op|'('
name|'host_manager'
op|'.'
name|'HostManager'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Bare-Metal HostManager class."""'
newline|'\n'
nl|'\n'
comment|'# Override.'
nl|'\n'
comment|'# Yes, this is not a class, and it is OK'
nl|'\n'
DECL|variable|host_state_cls
name|'host_state_cls'
op|'='
name|'new_host_state'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'BaremetalHostManager'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
