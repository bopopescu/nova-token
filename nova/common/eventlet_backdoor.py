begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2012 Openstack, LLC.'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'gc'
newline|'\n'
name|'import'
name|'traceback'
newline|'\n'
nl|'\n'
name|'import'
name|'eventlet'
newline|'\n'
name|'import'
name|'eventlet'
op|'.'
name|'backdoor'
newline|'\n'
name|'import'
name|'greenlet'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
DECL|variable|eventlet_backdoor_opts
name|'eventlet_backdoor_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'backdoor_port'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'None'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'port for eventlet backdoor to listen'"
op|')'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
name|'FLAGS'
op|'.'
name|'register_opts'
op|'('
name|'eventlet_backdoor_opts'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|dont_use_this
name|'def'
name|'dont_use_this'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'print'
string|'"Don\'t use this, just disconnect instead"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|find_objects
dedent|''
name|'def'
name|'find_objects'
op|'('
name|'t'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'filter'
op|'('
name|'lambda'
name|'o'
op|':'
name|'isinstance'
op|'('
name|'o'
op|','
name|'t'
op|')'
op|','
name|'gc'
op|'.'
name|'get_objects'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|print_greenthreads
dedent|''
name|'def'
name|'print_greenthreads'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'for'
name|'i'
op|','
name|'gt'
name|'in'
name|'enumerate'
op|'('
name|'find_objects'
op|'('
name|'greenlet'
op|'.'
name|'greenlet'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
name|'i'
op|','
name|'gt'
newline|'\n'
name|'traceback'
op|'.'
name|'print_stack'
op|'('
name|'gt'
op|'.'
name|'gr_frame'
op|')'
newline|'\n'
name|'print'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|backdoor_locals
dedent|''
dedent|''
name|'backdoor_locals'
op|'='
op|'{'
nl|'\n'
string|"'_'"
op|':'
name|'None'
op|','
comment|"# So it doesn't interfere with the global"
nl|'\n'
string|"'exit'"
op|':'
name|'dont_use_this'
op|','
comment|"# So we don't exit the entire process"
nl|'\n'
string|"'quit'"
op|':'
name|'dont_use_this'
op|','
comment|"# So we don't exit the entire process"
nl|'\n'
string|"'fo'"
op|':'
name|'find_objects'
op|','
nl|'\n'
string|"'pgt'"
op|':'
name|'print_greenthreads'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|initialize_if_enabled
name|'def'
name|'initialize_if_enabled'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'FLAGS'
op|'.'
name|'backdoor_port'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'eventlet'
op|'.'
name|'backdoor'
op|'.'
name|'backdoor_server'
op|','
nl|'\n'
name|'eventlet'
op|'.'
name|'listen'
op|'('
op|'('
string|"'localhost'"
op|','
name|'FLAGS'
op|'.'
name|'backdoor_port'
op|')'
op|')'
op|','
nl|'\n'
name|'locals'
op|'='
name|'backdoor_locals'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
