begin_unit
comment|'#!/usr/bin/env python'
nl|'\n'
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
comment|'# Copyright [2010] [Anso Labs, LLC]'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'#    you may not use this file except in compliance with the License.'
nl|'\n'
comment|'#    You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#        http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'
nl|'\n'
comment|'#    See the License for the specific language governing permissions and'
nl|'\n'
comment|'#    limitations under the License.'
nl|'\n'
nl|'\n'
string|'"""\nNova users and user management, including RBAC hooks.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'logging'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'shutil'
newline|'\n'
name|'import'
name|'tempfile'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
name|'import'
name|'zipfile'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'ldap'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'e'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'fakeldap'
name|'as'
name|'ldap'
newline|'\n'
nl|'\n'
dedent|''
name|'import'
name|'fakeldap'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'datastore'
newline|'\n'
nl|'\n'
comment|'# TODO(termie): clean up these imports'
nl|'\n'
name|'import'
name|'signer'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'crypto'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'import'
name|'access'
name|'as'
name|'simplerbac'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'objectstore'
comment|'# for flags'
newline|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
nl|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'ldap_url'"
op|','
string|"'ldap://localhost'"
op|','
string|"'Point this at your ldap server'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'ldap_password'"
op|','
string|"'changeme'"
op|','
string|"'LDAP password'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'user_dn'"
op|','
string|"'cn=Manager,dc=example,dc=com'"
op|','
string|"'DN of admin user'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'user_unit'"
op|','
string|"'Users'"
op|','
string|"'OID for Users'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'ldap_subtree'"
op|','
string|"'ou=Users,dc=example,dc=com'"
op|','
string|"'OU for Users'"
op|')'
newline|'\n'
nl|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'ldap_sysadmin'"
op|','
nl|'\n'
string|"'cn=sysadmins,ou=Groups,dc=example,dc=com'"
op|','
string|"'OU for Sysadmins'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'ldap_netadmin'"
op|','
nl|'\n'
string|"'cn=netadmins,ou=Groups,dc=example,dc=com'"
op|','
string|"'OU for NetAdmins'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'ldap_cloudadmin'"
op|','
nl|'\n'
string|"'cn=cloudadmins,ou=Groups,dc=example,dc=com'"
op|','
string|"'OU for Cloud Admins'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'ldap_itsec'"
op|','
nl|'\n'
string|"'cn=itsec,ou=Groups,dc=example,dc=com'"
op|','
string|"'OU for ItSec'"
op|')'
newline|'\n'
nl|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'credentials_template'"
op|','
nl|'\n'
name|'utils'
op|'.'
name|'abspath'
op|'('
string|"'auth/novarc.template'"
op|')'
op|','
nl|'\n'
string|"'Template for creating users rc file'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'credential_key_file'"
op|','
string|"'pk.pem'"
op|','
nl|'\n'
string|"'Filename of private key in credentials zip'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'credential_cert_file'"
op|','
string|"'cert.pem'"
op|','
nl|'\n'
string|"'Filename of certificate in credentials zip'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'credential_rc_file'"
op|','
string|"'novarc'"
op|','
nl|'\n'
string|"'Filename of rc in credentials zip'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|_log
name|'_log'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|"'auth'"
op|')'
newline|'\n'
name|'_log'
op|'.'
name|'setLevel'
op|'('
name|'logging'
op|'.'
name|'WARN'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|UserError
name|'class'
name|'UserError'
op|'('
name|'exception'
op|'.'
name|'ApiError'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
DECL|class|InvalidKeyPair
dedent|''
name|'class'
name|'InvalidKeyPair'
op|'('
name|'exception'
op|'.'
name|'ApiError'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
DECL|class|User
dedent|''
name|'class'
name|'User'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'id'
op|','
name|'name'
op|','
name|'access'
op|','
name|'secret'
op|','
name|'admin'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'manager'
op|'='
name|'UserManager'
op|'.'
name|'instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'id'
op|'='
name|'id'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'access'
op|'='
name|'access'
newline|'\n'
name|'self'
op|'.'
name|'secret'
op|'='
name|'secret'
newline|'\n'
name|'self'
op|'.'
name|'admin'
op|'='
name|'admin'
newline|'\n'
name|'self'
op|'.'
name|'keeper'
op|'='
name|'datastore'
op|'.'
name|'Keeper'
op|'('
name|'prefix'
op|'='
string|'"user"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|is_admin
dedent|''
name|'def'
name|'is_admin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'admin'
newline|'\n'
nl|'\n'
DECL|member|has_role
dedent|''
name|'def'
name|'has_role'
op|'('
name|'self'
op|','
name|'role_type'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'has_role'
op|'('
name|'self'
op|'.'
name|'id'
op|','
name|'role_type'
op|')'
newline|'\n'
nl|'\n'
DECL|member|is_authorized
dedent|''
name|'def'
name|'is_authorized'
op|'('
name|'self'
op|','
name|'owner_id'
op|','
name|'action'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'is_admin'
op|'('
op|')'
name|'or'
name|'owner_id'
op|'=='
name|'self'
op|'.'
name|'id'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'if'
name|'action'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'project'
op|'='
name|'None'
comment|'#(Fixme)'
newline|'\n'
name|'target_object'
op|'='
name|'None'
comment|'# (Fixme, should be passed in)'
newline|'\n'
name|'return'
name|'simplerbac'
op|'.'
name|'is_allowed'
op|'('
name|'action'
op|','
name|'self'
op|','
name|'project'
op|','
name|'target_object'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_credentials
dedent|''
name|'def'
name|'get_credentials'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rc'
op|'='
name|'self'
op|'.'
name|'generate_rc'
op|'('
op|')'
newline|'\n'
name|'private_key'
op|','
name|'signed_cert'
op|'='
name|'self'
op|'.'
name|'generate_x509_cert'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'tmpdir'
op|'='
name|'tempfile'
op|'.'
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
name|'zf'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tmpdir'
op|','
string|'"temp.zip"'
op|')'
newline|'\n'
name|'zippy'
op|'='
name|'zipfile'
op|'.'
name|'ZipFile'
op|'('
name|'zf'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'zippy'
op|'.'
name|'writestr'
op|'('
name|'FLAGS'
op|'.'
name|'credential_rc_file'
op|','
name|'rc'
op|')'
newline|'\n'
name|'zippy'
op|'.'
name|'writestr'
op|'('
name|'FLAGS'
op|'.'
name|'credential_key_file'
op|','
name|'private_key'
op|')'
newline|'\n'
name|'zippy'
op|'.'
name|'writestr'
op|'('
name|'FLAGS'
op|'.'
name|'credential_cert_file'
op|','
name|'signed_cert'
op|')'
newline|'\n'
name|'zippy'
op|'.'
name|'writestr'
op|'('
name|'FLAGS'
op|'.'
name|'ca_file'
op|','
name|'crypto'
op|'.'
name|'fetch_ca'
op|'('
name|'self'
op|'.'
name|'id'
op|')'
op|')'
newline|'\n'
name|'zippy'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'zf'
op|','
string|"'rb'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'            '
name|'buffer'
op|'='
name|'f'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'tmpdir'
op|')'
newline|'\n'
name|'return'
name|'buffer'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|generate_rc
dedent|''
name|'def'
name|'generate_rc'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rc'
op|'='
name|'open'
op|'('
name|'FLAGS'
op|'.'
name|'credentials_template'
op|')'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'rc'
op|'='
name|'rc'
op|'%'
op|'{'
string|"'access'"
op|':'
name|'self'
op|'.'
name|'access'
op|','
nl|'\n'
string|"'secret'"
op|':'
name|'self'
op|'.'
name|'secret'
op|','
nl|'\n'
string|"'ec2'"
op|':'
name|'FLAGS'
op|'.'
name|'ec2_url'
op|','
nl|'\n'
string|"'s3'"
op|':'
string|"'http://%s:%s'"
op|'%'
op|'('
name|'FLAGS'
op|'.'
name|'s3_host'
op|','
name|'FLAGS'
op|'.'
name|'s3_port'
op|')'
op|','
nl|'\n'
string|"'nova'"
op|':'
name|'FLAGS'
op|'.'
name|'ca_file'
op|','
nl|'\n'
string|"'cert'"
op|':'
name|'FLAGS'
op|'.'
name|'credential_cert_file'
op|','
nl|'\n'
string|"'key'"
op|':'
name|'FLAGS'
op|'.'
name|'credential_key_file'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'return'
name|'rc'
newline|'\n'
nl|'\n'
DECL|member|generate_key_pair
dedent|''
name|'def'
name|'generate_key_pair'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'generate_key_pair'
op|'('
name|'self'
op|'.'
name|'id'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|generate_x509_cert
dedent|''
name|'def'
name|'generate_x509_cert'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'generate_x509_cert'
op|'('
name|'self'
op|'.'
name|'id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_key_pair
dedent|''
name|'def'
name|'create_key_pair'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'public_key'
op|','
name|'fingerprint'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'create_key_pair'
op|'('
name|'self'
op|'.'
name|'id'
op|','
nl|'\n'
name|'name'
op|','
nl|'\n'
name|'public_key'
op|','
nl|'\n'
name|'fingerprint'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_key_pair
dedent|''
name|'def'
name|'get_key_pair'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'get_key_pair'
op|'('
name|'self'
op|'.'
name|'id'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_key_pair
dedent|''
name|'def'
name|'delete_key_pair'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'delete_key_pair'
op|'('
name|'self'
op|'.'
name|'id'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_key_pairs
dedent|''
name|'def'
name|'get_key_pairs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'get_key_pairs'
op|'('
name|'self'
op|'.'
name|'id'
op|')'
newline|'\n'
nl|'\n'
DECL|class|KeyPair
dedent|''
dedent|''
name|'class'
name|'KeyPair'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'owner'
op|','
name|'public_key'
op|','
name|'fingerprint'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'manager'
op|'='
name|'UserManager'
op|'.'
name|'instance'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'owner'
op|'='
name|'owner'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'public_key'
op|'='
name|'public_key'
newline|'\n'
name|'self'
op|'.'
name|'fingerprint'
op|'='
name|'fingerprint'
newline|'\n'
nl|'\n'
DECL|member|delete
dedent|''
name|'def'
name|'delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'delete_key_pair'
op|'('
name|'self'
op|'.'
name|'owner'
op|','
name|'self'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|class|UserManager
dedent|''
dedent|''
name|'class'
name|'UserManager'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'hasattr'
op|'('
name|'self'
op|'.'
name|'__class__'
op|','
string|"'_instance'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Attempted to instantiate singleton'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|instance
name|'def'
name|'instance'
op|'('
name|'cls'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'cls'
op|','
string|"'_instance'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'inst'
op|'='
name|'UserManager'
op|'('
op|')'
newline|'\n'
name|'cls'
op|'.'
name|'_instance'
op|'='
name|'inst'
newline|'\n'
name|'if'
name|'FLAGS'
op|'.'
name|'fake_users'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'inst'
op|'.'
name|'create_user'
op|'('
string|"'fake'"
op|','
string|"'fake'"
op|','
string|"'fake'"
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
name|'pass'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'inst'
op|'.'
name|'create_user'
op|'('
string|"'user'"
op|','
string|"'user'"
op|','
string|"'user'"
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
name|'pass'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'inst'
op|'.'
name|'create_user'
op|'('
string|"'admin'"
op|','
string|"'admin'"
op|','
string|"'admin'"
op|','
name|'True'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'cls'
op|'.'
name|'_instance'
newline|'\n'
nl|'\n'
DECL|member|authenticate
dedent|''
name|'def'
name|'authenticate'
op|'('
name|'self'
op|','
name|'params'
op|','
name|'signature'
op|','
name|'verb'
op|'='
string|"'GET'"
op|','
name|'server_string'
op|'='
string|"'127.0.0.1:8773'"
op|','
name|'path'
op|'='
string|"'/'"
op|')'
op|':'
newline|'\n'
comment|'# TODO: Check for valid timestamp'
nl|'\n'
indent|'        '
name|'access_key'
op|'='
name|'params'
op|'['
string|"'AWSAccessKeyId'"
op|']'
newline|'\n'
name|'user'
op|'='
name|'self'
op|'.'
name|'get_user_from_access_key'
op|'('
name|'access_key'
op|')'
newline|'\n'
name|'if'
name|'user'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
comment|"# hmac can't handle unicode, so encode ensures that secret isn't unicode"
nl|'\n'
dedent|''
name|'expected_signature'
op|'='
name|'signer'
op|'.'
name|'Signer'
op|'('
name|'user'
op|'.'
name|'secret'
op|'.'
name|'encode'
op|'('
op|')'
op|')'
op|'.'
name|'generate'
op|'('
name|'params'
op|','
name|'verb'
op|','
name|'server_string'
op|','
name|'path'
op|')'
newline|'\n'
name|'_log'
op|'.'
name|'debug'
op|'('
string|"'user.secret: %s'"
op|','
name|'user'
op|'.'
name|'secret'
op|')'
newline|'\n'
name|'_log'
op|'.'
name|'debug'
op|'('
string|"'expected_signature: %s'"
op|','
name|'expected_signature'
op|')'
newline|'\n'
name|'_log'
op|'.'
name|'debug'
op|'('
string|"'signature: %s'"
op|','
name|'signature'
op|')'
newline|'\n'
name|'if'
name|'signature'
op|'=='
name|'expected_signature'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'user'
newline|'\n'
nl|'\n'
DECL|member|has_role
dedent|''
dedent|''
name|'def'
name|'has_role'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'role'
op|','
name|'project'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
comment|'# Map role to ldap group'
nl|'\n'
indent|'        '
name|'group'
op|'='
name|'FLAGS'
op|'.'
name|'__getitem__'
op|'('
string|'"ldap_%s"'
op|'%'
name|'role'
op|')'
newline|'\n'
name|'with'
name|'LDAPWrapper'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'conn'
op|'.'
name|'is_member_of'
op|'('
name|'user'
op|','
name|'group'
op|')'
newline|'\n'
nl|'\n'
DECL|member|add_role
dedent|''
dedent|''
name|'def'
name|'add_role'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'role'
op|','
name|'project'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
comment|'# TODO: Project-specific roles'
nl|'\n'
indent|'        '
name|'group'
op|'='
name|'FLAGS'
op|'.'
name|'__getitem__'
op|'('
string|'"ldap_%s"'
op|'%'
name|'role'
op|')'
newline|'\n'
name|'with'
name|'LDAPWrapper'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'conn'
op|'.'
name|'add_to_group'
op|'('
name|'user'
op|','
name|'group'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_user
dedent|''
dedent|''
name|'def'
name|'get_user'
op|'('
name|'self'
op|','
name|'uid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'LDAPWrapper'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'conn'
op|'.'
name|'find_user'
op|'('
name|'uid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_user_from_access_key
dedent|''
dedent|''
name|'def'
name|'get_user_from_access_key'
op|'('
name|'self'
op|','
name|'access_key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'LDAPWrapper'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'conn'
op|'.'
name|'find_user_by_access_key'
op|'('
name|'access_key'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_users
dedent|''
dedent|''
name|'def'
name|'get_users'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'LDAPWrapper'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'conn'
op|'.'
name|'find_users'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_user
dedent|''
dedent|''
name|'def'
name|'create_user'
op|'('
name|'self'
op|','
name|'uid'
op|','
name|'access'
op|'='
name|'None'
op|','
name|'secret'
op|'='
name|'None'
op|','
name|'admin'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'access'
op|'=='
name|'None'
op|':'
name|'access'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'secret'
op|'=='
name|'None'
op|':'
name|'secret'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'with'
name|'LDAPWrapper'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'u'
op|'='
name|'conn'
op|'.'
name|'create_user'
op|'('
name|'uid'
op|','
name|'access'
op|','
name|'secret'
op|','
name|'admin'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'u'
newline|'\n'
nl|'\n'
DECL|member|delete_user
dedent|''
name|'def'
name|'delete_user'
op|'('
name|'self'
op|','
name|'uid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'LDAPWrapper'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'.'
name|'delete_user'
op|'('
name|'uid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|generate_key_pair
dedent|''
dedent|''
name|'def'
name|'generate_key_pair'
op|'('
name|'self'
op|','
name|'uid'
op|','
name|'key_name'
op|')'
op|':'
newline|'\n'
comment|'# generating key pair is slow so delay generation'
nl|'\n'
comment|'# until after check'
nl|'\n'
indent|'        '
name|'with'
name|'LDAPWrapper'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'conn'
op|'.'
name|'user_exists'
op|'('
name|'uid'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'UserError'
op|'('
string|'"User "'
op|'+'
name|'uid'
op|'+'
string|'" doesn\'t exist"'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'conn'
op|'.'
name|'key_pair_exists'
op|'('
name|'uid'
op|','
name|'key_name'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'InvalidKeyPair'
op|'('
string|'"The keypair \'"'
op|'+'
nl|'\n'
name|'key_name'
op|'+'
nl|'\n'
string|'"\' already exists."'
op|','
nl|'\n'
string|'"Duplicate"'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'private_key'
op|','
name|'public_key'
op|','
name|'fingerprint'
op|'='
name|'crypto'
op|'.'
name|'generate_key_pair'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'create_key_pair'
op|'('
name|'uid'
op|','
name|'key_name'
op|','
name|'public_key'
op|','
name|'fingerprint'
op|')'
newline|'\n'
name|'return'
name|'private_key'
op|','
name|'fingerprint'
newline|'\n'
nl|'\n'
DECL|member|create_key_pair
dedent|''
name|'def'
name|'create_key_pair'
op|'('
name|'self'
op|','
name|'uid'
op|','
name|'key_name'
op|','
name|'public_key'
op|','
name|'fingerprint'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'LDAPWrapper'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'conn'
op|'.'
name|'create_key_pair'
op|'('
name|'uid'
op|','
name|'key_name'
op|','
name|'public_key'
op|','
name|'fingerprint'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_key_pair
dedent|''
dedent|''
name|'def'
name|'get_key_pair'
op|'('
name|'self'
op|','
name|'uid'
op|','
name|'key_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'LDAPWrapper'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'conn'
op|'.'
name|'find_key_pair'
op|'('
name|'uid'
op|','
name|'key_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_key_pairs
dedent|''
dedent|''
name|'def'
name|'get_key_pairs'
op|'('
name|'self'
op|','
name|'uid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'LDAPWrapper'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'conn'
op|'.'
name|'find_key_pairs'
op|'('
name|'uid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_key_pair
dedent|''
dedent|''
name|'def'
name|'delete_key_pair'
op|'('
name|'self'
op|','
name|'uid'
op|','
name|'key_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'LDAPWrapper'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'.'
name|'delete_key_pair'
op|'('
name|'uid'
op|','
name|'key_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_signed_zip
dedent|''
dedent|''
name|'def'
name|'get_signed_zip'
op|'('
name|'self'
op|','
name|'uid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'user'
op|'='
name|'self'
op|'.'
name|'get_user'
op|'('
name|'uid'
op|')'
newline|'\n'
name|'return'
name|'user'
op|'.'
name|'get_credentials'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|generate_x509_cert
dedent|''
name|'def'
name|'generate_x509_cert'
op|'('
name|'self'
op|','
name|'uid'
op|')'
op|':'
newline|'\n'
indent|'        '
op|'('
name|'private_key'
op|','
name|'csr'
op|')'
op|'='
name|'crypto'
op|'.'
name|'generate_x509_cert'
op|'('
name|'self'
op|'.'
name|'__cert_subject'
op|'('
name|'uid'
op|')'
op|')'
newline|'\n'
comment|'# TODO - This should be async call back to the cloud controller'
nl|'\n'
name|'signed_cert'
op|'='
name|'crypto'
op|'.'
name|'sign_csr'
op|'('
name|'csr'
op|','
name|'uid'
op|')'
newline|'\n'
name|'return'
op|'('
name|'private_key'
op|','
name|'signed_cert'
op|')'
newline|'\n'
nl|'\n'
DECL|member|sign_cert
dedent|''
name|'def'
name|'sign_cert'
op|'('
name|'self'
op|','
name|'csr'
op|','
name|'uid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'crypto'
op|'.'
name|'sign_csr'
op|'('
name|'csr'
op|','
name|'uid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__cert_subject
dedent|''
name|'def'
name|'__cert_subject'
op|'('
name|'self'
op|','
name|'uid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|'"/C=US/ST=California/L=The_Mission/O=AnsoLabs/OU=Nova/CN=%s-%s"'
op|'%'
op|'('
name|'uid'
op|','
name|'str'
op|'('
name|'datetime'
op|'.'
name|'datetime'
op|'.'
name|'utcnow'
op|'('
op|')'
op|'.'
name|'isoformat'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LDAPWrapper
dedent|''
dedent|''
name|'class'
name|'LDAPWrapper'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'user'
op|'='
name|'FLAGS'
op|'.'
name|'user_dn'
newline|'\n'
name|'self'
op|'.'
name|'passwd'
op|'='
name|'FLAGS'
op|'.'
name|'ldap_password'
newline|'\n'
nl|'\n'
DECL|member|__enter__
dedent|''
name|'def'
name|'__enter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'connect'
op|'('
op|')'
newline|'\n'
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|__exit__
dedent|''
name|'def'
name|'__exit__'
op|'('
name|'self'
op|','
name|'type'
op|','
name|'value'
op|','
name|'traceback'
op|')'
op|':'
newline|'\n'
comment|"#logging.info('type, value, traceback: %s, %s, %s', type, value, traceback)"
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'conn'
op|'.'
name|'unbind_s'
op|'('
op|')'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|member|connect
dedent|''
name|'def'
name|'connect'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" connect to ldap as admin user """'
newline|'\n'
name|'if'
name|'FLAGS'
op|'.'
name|'fake_users'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'conn'
op|'='
name|'fakeldap'
op|'.'
name|'initialize'
op|'('
name|'FLAGS'
op|'.'
name|'ldap_url'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'assert'
op|'('
name|'ldap'
op|'.'
name|'__name__'
op|'!='
string|"'fakeldap'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'='
name|'ldap'
op|'.'
name|'initialize'
op|'('
name|'FLAGS'
op|'.'
name|'ldap_url'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'conn'
op|'.'
name|'simple_bind_s'
op|'('
name|'self'
op|'.'
name|'user'
op|','
name|'self'
op|'.'
name|'passwd'
op|')'
newline|'\n'
nl|'\n'
DECL|member|find_object
dedent|''
name|'def'
name|'find_object'
op|'('
name|'self'
op|','
name|'dn'
op|','
name|'query'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'objects'
op|'='
name|'self'
op|'.'
name|'find_objects'
op|'('
name|'dn'
op|','
name|'query'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'objects'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'objects'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|member|find_objects
dedent|''
name|'def'
name|'find_objects'
op|'('
name|'self'
op|','
name|'dn'
op|','
name|'query'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'res'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'search_s'
op|'('
name|'dn'
op|','
name|'ldap'
op|'.'
name|'SCOPE_SUBTREE'
op|','
name|'query'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|']'
newline|'\n'
comment|'# just return the attributes'
nl|'\n'
dedent|''
name|'return'
op|'['
name|'x'
op|'['
number|'1'
op|']'
name|'for'
name|'x'
name|'in'
name|'res'
op|']'
newline|'\n'
nl|'\n'
DECL|member|find_users
dedent|''
name|'def'
name|'find_users'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'attrs'
op|'='
name|'self'
op|'.'
name|'find_objects'
op|'('
name|'FLAGS'
op|'.'
name|'ldap_subtree'
op|','
string|"'(objectclass=novaUser)'"
op|')'
newline|'\n'
name|'return'
op|'['
name|'self'
op|'.'
name|'__to_user'
op|'('
name|'attr'
op|')'
name|'for'
name|'attr'
name|'in'
name|'attrs'
op|']'
newline|'\n'
nl|'\n'
DECL|member|find_key_pairs
dedent|''
name|'def'
name|'find_key_pairs'
op|'('
name|'self'
op|','
name|'uid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dn'
op|'='
string|"'uid=%s,%s'"
op|'%'
op|'('
name|'uid'
op|','
name|'FLAGS'
op|'.'
name|'ldap_subtree'
op|')'
newline|'\n'
name|'attrs'
op|'='
name|'self'
op|'.'
name|'find_objects'
op|'('
name|'dn'
op|','
string|"'(objectclass=novaKeyPair)'"
op|')'
newline|'\n'
name|'return'
op|'['
name|'self'
op|'.'
name|'__to_key_pair'
op|'('
name|'uid'
op|','
name|'attr'
op|')'
name|'for'
name|'attr'
name|'in'
name|'attrs'
op|']'
newline|'\n'
nl|'\n'
DECL|member|find_user
dedent|''
name|'def'
name|'find_user'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dn'
op|'='
string|"'uid=%s,%s'"
op|'%'
op|'('
name|'name'
op|','
name|'FLAGS'
op|'.'
name|'ldap_subtree'
op|')'
newline|'\n'
name|'attr'
op|'='
name|'self'
op|'.'
name|'find_object'
op|'('
name|'dn'
op|','
string|"'(objectclass=novaUser)'"
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'__to_user'
op|'('
name|'attr'
op|')'
newline|'\n'
nl|'\n'
DECL|member|user_exists
dedent|''
name|'def'
name|'user_exists'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'find_user'
op|'('
name|'name'
op|')'
op|'!='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|find_key_pair
dedent|''
name|'def'
name|'find_key_pair'
op|'('
name|'self'
op|','
name|'uid'
op|','
name|'key_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dn'
op|'='
string|"'cn=%s,uid=%s,%s'"
op|'%'
op|'('
name|'key_name'
op|','
nl|'\n'
name|'uid'
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'ldap_subtree'
op|')'
newline|'\n'
name|'attr'
op|'='
name|'self'
op|'.'
name|'find_object'
op|'('
name|'dn'
op|','
string|"'(objectclass=novaKeyPair)'"
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'__to_key_pair'
op|'('
name|'uid'
op|','
name|'attr'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_key_pairs
dedent|''
name|'def'
name|'delete_key_pairs'
op|'('
name|'self'
op|','
name|'uid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'keys'
op|'='
name|'self'
op|'.'
name|'find_key_pairs'
op|'('
name|'uid'
op|')'
newline|'\n'
name|'if'
name|'keys'
op|'!='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
name|'in'
name|'keys'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'delete_key_pair'
op|'('
name|'uid'
op|','
name|'key'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|key_pair_exists
dedent|''
dedent|''
dedent|''
name|'def'
name|'key_pair_exists'
op|'('
name|'self'
op|','
name|'uid'
op|','
name|'key_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'find_key_pair'
op|'('
name|'uid'
op|','
name|'key_name'
op|')'
op|'!='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|create_user
dedent|''
name|'def'
name|'create_user'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'access_key'
op|','
name|'secret_key'
op|','
name|'is_admin'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'user_exists'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'UserError'
op|'('
string|'"LDAP user "'
op|'+'
name|'name'
op|'+'
string|'" already exists"'
op|')'
newline|'\n'
dedent|''
name|'attr'
op|'='
op|'['
nl|'\n'
op|'('
string|"'objectclass'"
op|','
op|'['
string|"'person'"
op|','
nl|'\n'
string|"'organizationalPerson'"
op|','
nl|'\n'
string|"'inetOrgPerson'"
op|','
nl|'\n'
string|"'novaUser'"
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'ou'"
op|','
op|'['
name|'FLAGS'
op|'.'
name|'user_unit'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'uid'"
op|','
op|'['
name|'name'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'sn'"
op|','
op|'['
name|'name'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'cn'"
op|','
op|'['
name|'name'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'secretKey'"
op|','
op|'['
name|'secret_key'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'accessKey'"
op|','
op|'['
name|'access_key'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'isAdmin'"
op|','
op|'['
name|'str'
op|'('
name|'is_admin'
op|')'
op|'.'
name|'upper'
op|'('
op|')'
op|']'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'add_s'
op|'('
string|"'uid=%s,%s'"
op|'%'
op|'('
name|'name'
op|','
name|'FLAGS'
op|'.'
name|'ldap_subtree'
op|')'
op|','
nl|'\n'
name|'attr'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'__to_user'
op|'('
name|'dict'
op|'('
name|'attr'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_project
dedent|''
name|'def'
name|'create_project'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'project_manager'
op|')'
op|':'
newline|'\n'
comment|'# PM can be user object or string containing DN'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|is_member_of
dedent|''
name|'def'
name|'is_member_of'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|add_to_group
dedent|''
name|'def'
name|'add_to_group'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|remove_from_group
dedent|''
name|'def'
name|'remove_from_group'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|create_key_pair
dedent|''
name|'def'
name|'create_key_pair'
op|'('
name|'self'
op|','
name|'uid'
op|','
name|'key_name'
op|','
name|'public_key'
op|','
name|'fingerprint'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""create\'s a public key in the directory underneath the user"""'
newline|'\n'
comment|'# TODO(vish): possibly refactor this to store keys in their own ou'
nl|'\n'
comment|'#   and put dn reference in the user object'
nl|'\n'
name|'attr'
op|'='
op|'['
nl|'\n'
op|'('
string|"'objectclass'"
op|','
op|'['
string|"'novaKeyPair'"
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'cn'"
op|','
op|'['
name|'key_name'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'sshPublicKey'"
op|','
op|'['
name|'public_key'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'keyFingerprint'"
op|','
op|'['
name|'fingerprint'
op|']'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'add_s'
op|'('
string|"'cn=%s,uid=%s,%s'"
op|'%'
op|'('
name|'key_name'
op|','
nl|'\n'
name|'uid'
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'ldap_subtree'
op|')'
op|','
nl|'\n'
name|'attr'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'__to_key_pair'
op|'('
name|'uid'
op|','
name|'dict'
op|'('
name|'attr'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|find_user_by_access_key
dedent|''
name|'def'
name|'find_user_by_access_key'
op|'('
name|'self'
op|','
name|'access'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'query'
op|'='
string|"'('"
op|'+'
string|"'accessKey'"
op|'+'
string|"'='"
op|'+'
name|'access'
op|'+'
string|"')'"
newline|'\n'
name|'dn'
op|'='
name|'FLAGS'
op|'.'
name|'ldap_subtree'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'__to_user'
op|'('
name|'self'
op|'.'
name|'find_object'
op|'('
name|'dn'
op|','
name|'query'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_key_pair
dedent|''
name|'def'
name|'delete_key_pair'
op|'('
name|'self'
op|','
name|'uid'
op|','
name|'key_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'key_pair_exists'
op|'('
name|'uid'
op|','
name|'key_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'UserError'
op|'('
string|'"Key Pair "'
op|'+'
nl|'\n'
name|'key_name'
op|'+'
nl|'\n'
string|'" doesn\'t exist for user "'
op|'+'
nl|'\n'
name|'uid'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'conn'
op|'.'
name|'delete_s'
op|'('
string|"'cn=%s,uid=%s,%s'"
op|'%'
op|'('
name|'key_name'
op|','
name|'uid'
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'ldap_subtree'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_user
dedent|''
name|'def'
name|'delete_user'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'user_exists'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'UserError'
op|'('
string|'"User "'
op|'+'
nl|'\n'
name|'name'
op|'+'
nl|'\n'
string|'" doesn\'t exist"'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'delete_key_pairs'
op|'('
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'delete_s'
op|'('
string|"'uid=%s,%s'"
op|'%'
op|'('
name|'name'
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'ldap_subtree'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__to_user
dedent|''
name|'def'
name|'__to_user'
op|'('
name|'self'
op|','
name|'attr'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'attr'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'User'
op|'('
nl|'\n'
name|'id'
op|'='
name|'attr'
op|'['
string|"'uid'"
op|']'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'name'
op|'='
name|'attr'
op|'['
string|"'uid'"
op|']'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'access'
op|'='
name|'attr'
op|'['
string|"'accessKey'"
op|']'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'secret'
op|'='
name|'attr'
op|'['
string|"'secretKey'"
op|']'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'admin'
op|'='
op|'('
name|'attr'
op|'['
string|"'isAdmin'"
op|']'
op|'['
number|'0'
op|']'
op|'=='
string|"'TRUE'"
op|')'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__to_key_pair
dedent|''
name|'def'
name|'__to_key_pair'
op|'('
name|'self'
op|','
name|'owner'
op|','
name|'attr'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'attr'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'KeyPair'
op|'('
nl|'\n'
name|'owner'
op|'='
name|'owner'
op|','
nl|'\n'
name|'name'
op|'='
name|'attr'
op|'['
string|"'cn'"
op|']'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'public_key'
op|'='
name|'attr'
op|'['
string|"'sshPublicKey'"
op|']'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'fingerprint'
op|'='
name|'attr'
op|'['
string|"'keyFingerprint'"
op|']'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
