begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nNova authentication management\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'shutil'
newline|'\n'
name|'import'
name|'string'
comment|'# pylint: disable=W0402'
newline|'\n'
name|'import'
name|'tempfile'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
name|'import'
name|'zipfile'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'context'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'crypto'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'db'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'flags'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'auth'
name|'import'
name|'signer'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|FLAGS
name|'FLAGS'
op|'='
name|'flags'
op|'.'
name|'FLAGS'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_list'
op|'('
string|"'allowed_roles'"
op|','
nl|'\n'
op|'['
string|"'cloudadmin'"
op|','
string|"'itsec'"
op|','
string|"'sysadmin'"
op|','
string|"'netadmin'"
op|','
string|"'developer'"
op|']'
op|','
nl|'\n'
string|"'Allowed roles for project'"
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(vish): a user with one of these roles will be a superuser and'
nl|'\n'
comment|'#             have access to all api commands'
nl|'\n'
name|'flags'
op|'.'
name|'DEFINE_list'
op|'('
string|"'superuser_roles'"
op|','
op|'['
string|"'cloudadmin'"
op|']'
op|','
nl|'\n'
string|"'Roles that ignore authorization checking completely'"
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(vish): a user with one of these roles will have it for every'
nl|'\n'
comment|'#             project, even if he or she is not a member of the project'
nl|'\n'
name|'flags'
op|'.'
name|'DEFINE_list'
op|'('
string|"'global_roles'"
op|','
op|'['
string|"'cloudadmin'"
op|','
string|"'itsec'"
op|']'
op|','
nl|'\n'
string|"'Roles that apply to all projects'"
op|')'
newline|'\n'
nl|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'credentials_template'"
op|','
nl|'\n'
name|'utils'
op|'.'
name|'abspath'
op|'('
string|"'auth/novarc.template'"
op|')'
op|','
nl|'\n'
string|"'Template for creating users rc file'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'vpn_client_template'"
op|','
nl|'\n'
name|'utils'
op|'.'
name|'abspath'
op|'('
string|"'cloudpipe/client.ovpn.template'"
op|')'
op|','
nl|'\n'
string|"'Template for creating users vpn file'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'credential_vpn_file'"
op|','
string|"'nova-vpn.conf'"
op|','
nl|'\n'
string|"'Filename of certificate in credentials zip'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'credential_key_file'"
op|','
string|"'pk.pem'"
op|','
nl|'\n'
string|"'Filename of private key in credentials zip'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'credential_cert_file'"
op|','
string|"'cert.pem'"
op|','
nl|'\n'
string|"'Filename of certificate in credentials zip'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'credential_rc_file'"
op|','
string|"'%src'"
op|','
nl|'\n'
string|"'Filename of rc in credentials zip, %s will be '"
nl|'\n'
string|"'replaced by name of the region (nova by default)'"
op|')'
newline|'\n'
name|'flags'
op|'.'
name|'DEFINE_string'
op|'('
string|"'auth_driver'"
op|','
string|"'nova.auth.dbdriver.DbDriver'"
op|','
nl|'\n'
string|"'Driver that auth manager uses'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|"'nova.auth.manager'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
name|'if'
name|'FLAGS'
op|'.'
name|'memcached_servers'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'memcache'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'    '
name|'from'
name|'nova'
name|'import'
name|'fakememcache'
name|'as'
name|'memcache'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AuthBase
dedent|''
name|'class'
name|'AuthBase'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Base class for objects relating to auth\n\n    Objects derived from this class should be stupid data objects with\n    an id member. They may optionally contain methods that delegate to\n    AuthManager, but should not implement logic themselves.\n    """'
newline|'\n'
nl|'\n'
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|safe_id
name|'def'
name|'safe_id'
op|'('
name|'cls'
op|','
name|'obj'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Safely get object id.\n\n        This method will return the id of the object if the object\n        is of this class, otherwise it will return the original object.\n        This allows methods to accept objects or ids as paramaters.\n        """'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'obj'
op|','
name|'cls'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'obj'
op|'.'
name|'id'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'obj'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|User
dedent|''
dedent|''
dedent|''
name|'class'
name|'User'
op|'('
name|'AuthBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Object representing a user\n\n    The following attributes are defined:\n    :id:       A system identifier for the user.  A string (for LDAP)\n    :name:     The user name, potentially in some more friendly format\n    :access:   The \'username\' for EC2 authentication\n    :secret:   The \'password\' for EC2 authenticatoin\n    :admin:    ???\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'id'
op|','
name|'name'
op|','
name|'access'
op|','
name|'secret'
op|','
name|'admin'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'AuthBase'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'assert'
name|'isinstance'
op|'('
name|'id'
op|','
name|'basestring'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'id'
op|'='
name|'id'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'access'
op|'='
name|'access'
newline|'\n'
name|'self'
op|'.'
name|'secret'
op|'='
name|'secret'
newline|'\n'
name|'self'
op|'.'
name|'admin'
op|'='
name|'admin'
newline|'\n'
nl|'\n'
DECL|member|is_superuser
dedent|''
name|'def'
name|'is_superuser'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'AuthManager'
op|'('
op|')'
op|'.'
name|'is_superuser'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|is_admin
dedent|''
name|'def'
name|'is_admin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'AuthManager'
op|'('
op|')'
op|'.'
name|'is_admin'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|has_role
dedent|''
name|'def'
name|'has_role'
op|'('
name|'self'
op|','
name|'role'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'AuthManager'
op|'('
op|')'
op|'.'
name|'has_role'
op|'('
name|'self'
op|','
name|'role'
op|')'
newline|'\n'
nl|'\n'
DECL|member|add_role
dedent|''
name|'def'
name|'add_role'
op|'('
name|'self'
op|','
name|'role'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'AuthManager'
op|'('
op|')'
op|'.'
name|'add_role'
op|'('
name|'self'
op|','
name|'role'
op|')'
newline|'\n'
nl|'\n'
DECL|member|remove_role
dedent|''
name|'def'
name|'remove_role'
op|'('
name|'self'
op|','
name|'role'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'AuthManager'
op|'('
op|')'
op|'.'
name|'remove_role'
op|'('
name|'self'
op|','
name|'role'
op|')'
newline|'\n'
nl|'\n'
DECL|member|is_project_member
dedent|''
name|'def'
name|'is_project_member'
op|'('
name|'self'
op|','
name|'project'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'AuthManager'
op|'('
op|')'
op|'.'
name|'is_project_member'
op|'('
name|'self'
op|','
name|'project'
op|')'
newline|'\n'
nl|'\n'
DECL|member|is_project_manager
dedent|''
name|'def'
name|'is_project_manager'
op|'('
name|'self'
op|','
name|'project'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'AuthManager'
op|'('
op|')'
op|'.'
name|'is_project_manager'
op|'('
name|'self'
op|','
name|'project'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|'"User(\'%s\', \'%s\', \'%s\', \'%s\', %s)"'
op|'%'
op|'('
name|'self'
op|'.'
name|'id'
op|','
nl|'\n'
name|'self'
op|'.'
name|'name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'access'
op|','
nl|'\n'
name|'self'
op|'.'
name|'secret'
op|','
nl|'\n'
name|'self'
op|'.'
name|'admin'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Project
dedent|''
dedent|''
name|'class'
name|'Project'
op|'('
name|'AuthBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents a Project returned from the datastore"""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'id'
op|','
name|'name'
op|','
name|'project_manager_id'
op|','
name|'description'
op|','
name|'member_ids'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'AuthBase'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'id'
op|'='
name|'id'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'project_manager_id'
op|'='
name|'project_manager_id'
newline|'\n'
name|'self'
op|'.'
name|'description'
op|'='
name|'description'
newline|'\n'
name|'self'
op|'.'
name|'member_ids'
op|'='
name|'member_ids'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|project_manager
name|'def'
name|'project_manager'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'AuthManager'
op|'('
op|')'
op|'.'
name|'get_user'
op|'('
name|'self'
op|'.'
name|'project_manager_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|vpn_ip
name|'def'
name|'vpn_ip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ip'
op|','
name|'_port'
op|'='
name|'AuthManager'
op|'('
op|')'
op|'.'
name|'get_project_vpn_data'
op|'('
name|'self'
op|')'
newline|'\n'
name|'return'
name|'ip'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|vpn_port
name|'def'
name|'vpn_port'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_ip'
op|','
name|'port'
op|'='
name|'AuthManager'
op|'('
op|')'
op|'.'
name|'get_project_vpn_data'
op|'('
name|'self'
op|')'
newline|'\n'
name|'return'
name|'port'
newline|'\n'
nl|'\n'
DECL|member|has_manager
dedent|''
name|'def'
name|'has_manager'
op|'('
name|'self'
op|','
name|'user'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'AuthManager'
op|'('
op|')'
op|'.'
name|'is_project_manager'
op|'('
name|'user'
op|','
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|has_member
dedent|''
name|'def'
name|'has_member'
op|'('
name|'self'
op|','
name|'user'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'AuthManager'
op|'('
op|')'
op|'.'
name|'is_project_member'
op|'('
name|'user'
op|','
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|add_role
dedent|''
name|'def'
name|'add_role'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'role'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'AuthManager'
op|'('
op|')'
op|'.'
name|'add_role'
op|'('
name|'user'
op|','
name|'role'
op|','
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|remove_role
dedent|''
name|'def'
name|'remove_role'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'role'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'AuthManager'
op|'('
op|')'
op|'.'
name|'remove_role'
op|'('
name|'user'
op|','
name|'role'
op|','
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|has_role
dedent|''
name|'def'
name|'has_role'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'role'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'AuthManager'
op|'('
op|')'
op|'.'
name|'has_role'
op|'('
name|'user'
op|','
name|'role'
op|','
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_credentials
dedent|''
name|'def'
name|'get_credentials'
op|'('
name|'self'
op|','
name|'user'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'AuthManager'
op|'('
op|')'
op|'.'
name|'get_credentials'
op|'('
name|'user'
op|','
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|'"Project(\'%s\', \'%s\', \'%s\', \'%s\', %s)"'
op|'%'
op|'('
name|'self'
op|'.'
name|'id'
op|','
name|'self'
op|'.'
name|'name'
op|','
name|'self'
op|'.'
name|'project_manager_id'
op|','
name|'self'
op|'.'
name|'description'
op|','
nl|'\n'
name|'self'
op|'.'
name|'member_ids'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AuthManager
dedent|''
dedent|''
name|'class'
name|'AuthManager'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Manager Singleton for dealing with Users, Projects, and Keypairs\n\n    Methods accept objects or ids.\n\n    AuthManager uses a driver object to make requests to the data backend.\n    See ldapdriver for reference.\n\n    AuthManager also manages associated data related to Auth objects that\n    need to be more accessible, such as vpn ips and ports.\n    """'
newline|'\n'
nl|'\n'
DECL|variable|_instance
name|'_instance'
op|'='
name|'None'
newline|'\n'
DECL|variable|mc
name|'mc'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__new__
name|'def'
name|'__new__'
op|'('
name|'cls'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns the AuthManager singleton"""'
newline|'\n'
name|'if'
name|'not'
name|'cls'
op|'.'
name|'_instance'
name|'or'
op|'('
string|"'new'"
name|'in'
name|'kwargs'
name|'and'
name|'kwargs'
op|'['
string|"'new'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cls'
op|'.'
name|'_instance'
op|'='
name|'super'
op|'('
name|'AuthManager'
op|','
name|'cls'
op|')'
op|'.'
name|'__new__'
op|'('
name|'cls'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'cls'
op|'.'
name|'_instance'
newline|'\n'
nl|'\n'
DECL|member|__init__
dedent|''
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'driver'
op|'='
name|'None'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Inits the driver from parameter or flag\n\n        __init__ is run every time AuthManager() is called, so we only\n        reset the driver if it is not set or a new driver is specified.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'network_manager'
op|'='
name|'utils'
op|'.'
name|'import_object'
op|'('
name|'FLAGS'
op|'.'
name|'network_manager'
op|')'
newline|'\n'
name|'if'
name|'driver'
name|'or'
name|'not'
name|'getattr'
op|'('
name|'self'
op|','
string|"'driver'"
op|','
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'driver'
op|'='
name|'utils'
op|'.'
name|'import_class'
op|'('
name|'driver'
name|'or'
name|'FLAGS'
op|'.'
name|'auth_driver'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'AuthManager'
op|'.'
name|'mc'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'AuthManager'
op|'.'
name|'mc'
op|'='
name|'memcache'
op|'.'
name|'Client'
op|'('
name|'FLAGS'
op|'.'
name|'memcached_servers'
op|','
name|'debug'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|authenticate
dedent|''
dedent|''
name|'def'
name|'authenticate'
op|'('
name|'self'
op|','
name|'access'
op|','
name|'signature'
op|','
name|'params'
op|','
name|'verb'
op|'='
string|"'GET'"
op|','
nl|'\n'
name|'server_string'
op|'='
string|"'127.0.0.1:8773'"
op|','
name|'path'
op|'='
string|"'/'"
op|','
nl|'\n'
name|'check_type'
op|'='
string|"'ec2'"
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Authenticates AWS request using access key and signature\n\n        If the project is not specified, attempts to authenticate to\n        a project with the same name as the user. This way, older tools\n        that have no project knowledge will still work.\n\n        @type access: str\n        @param access: Access key for user in the form "access:project".\n\n        @type signature: str\n        @param signature: Signature of the request.\n\n        @type params: list of str\n        @param params: Web paramaters used for the signature.\n\n        @type verb: str\n        @param verb: Web request verb (\'GET\' or \'POST\').\n\n        @type server_string: str\n        @param server_string: Web request server string.\n\n        @type path: str\n        @param path: Web request path.\n\n        @type check_type: str\n        @param check_type: Type of signature to check. \'ec2\' for EC2, \'s3\' for\n                           S3. Any other value will cause signature not to be\n                           checked.\n\n        @type headers: list\n        @param headers: HTTP headers passed with the request (only needed for\n                        s3 signature checks)\n\n        @rtype: tuple (User, Project)\n        @return: User and project that the request represents.\n        """'
newline|'\n'
comment|'# TODO(vish): check for valid timestamp'
nl|'\n'
op|'('
name|'access_key'
op|','
name|'_sep'
op|','
name|'project_id'
op|')'
op|'='
name|'access'
op|'.'
name|'partition'
op|'('
string|"':'"
op|')'
newline|'\n'
nl|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'Looking up user: %r'"
op|')'
op|','
name|'access_key'
op|')'
newline|'\n'
name|'user'
op|'='
name|'self'
op|'.'
name|'get_user_from_access_key'
op|'('
name|'access_key'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'user: %r'"
op|','
name|'user'
op|')'
newline|'\n'
name|'if'
name|'user'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Failed authorization for access key %s"'
op|')'
op|','
name|'access_key'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'AccessKeyNotFound'
op|'('
name|'access_key'
op|'='
name|'access_key'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(vish): if we stop using project name as id we need better'
nl|'\n'
comment|'#             logic to find a default project for user'
nl|'\n'
dedent|''
name|'if'
name|'project_id'
op|'=='
string|"''"
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|'"Using project name = user name (%s)"'
op|')'
op|','
name|'user'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'project_id'
op|'='
name|'user'
op|'.'
name|'name'
newline|'\n'
nl|'\n'
dedent|''
name|'project'
op|'='
name|'self'
op|'.'
name|'get_project'
op|'('
name|'project_id'
op|')'
newline|'\n'
name|'if'
name|'project'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'pjid'
op|'='
name|'project_id'
newline|'\n'
name|'uname'
op|'='
name|'user'
op|'.'
name|'name'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"failed authorization: no project named %(pjid)s"'
nl|'\n'
string|'" (user=%(uname)s)"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'ProjectNotFound'
op|'('
name|'project_id'
op|'='
name|'project_id'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'is_admin'
op|'('
name|'user'
op|')'
name|'and'
name|'not'
name|'self'
op|'.'
name|'is_project_member'
op|'('
name|'user'
op|','
nl|'\n'
name|'project'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'uname'
op|'='
name|'user'
op|'.'
name|'name'
newline|'\n'
name|'uid'
op|'='
name|'user'
op|'.'
name|'id'
newline|'\n'
name|'pjname'
op|'='
name|'project'
op|'.'
name|'name'
newline|'\n'
name|'pjid'
op|'='
name|'project'
op|'.'
name|'id'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Failed authorization: user %(uname)s not admin"'
nl|'\n'
string|'" and not member of project %(pjname)s"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'ProjectMembershipNotFound'
op|'('
name|'project_id'
op|'='
name|'pjid'
op|','
nl|'\n'
name|'user_id'
op|'='
name|'uid'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'check_type'
op|'=='
string|"'s3'"
op|':'
newline|'\n'
indent|'            '
name|'sign'
op|'='
name|'signer'
op|'.'
name|'Signer'
op|'('
name|'user'
op|'.'
name|'secret'
op|'.'
name|'encode'
op|'('
op|')'
op|')'
newline|'\n'
name|'expected_signature'
op|'='
name|'sign'
op|'.'
name|'s3_authorization'
op|'('
name|'headers'
op|','
name|'verb'
op|','
name|'path'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'user.secret: %s'"
op|')'
op|','
name|'user'
op|'.'
name|'secret'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'expected_signature: %s'"
op|')'
op|','
name|'expected_signature'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'signature: %s'"
op|')'
op|','
name|'signature'
op|')'
newline|'\n'
name|'if'
name|'signature'
op|'!='
name|'expected_signature'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Invalid signature for user %s"'
op|')'
op|','
name|'user'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'InvalidSignature'
op|'('
name|'signature'
op|'='
name|'signature'
op|','
nl|'\n'
name|'user'
op|'='
name|'user'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'check_type'
op|'=='
string|"'ec2'"
op|':'
newline|'\n'
comment|"# NOTE(vish): hmac can't handle unicode, so encode ensures that"
nl|'\n'
comment|"#             secret isn't unicode"
nl|'\n'
indent|'            '
name|'expected_signature'
op|'='
name|'signer'
op|'.'
name|'Signer'
op|'('
name|'user'
op|'.'
name|'secret'
op|'.'
name|'encode'
op|'('
op|')'
op|')'
op|'.'
name|'generate'
op|'('
nl|'\n'
name|'params'
op|','
name|'verb'
op|','
name|'server_string'
op|','
name|'path'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'user.secret: %s'"
op|')'
op|','
name|'user'
op|'.'
name|'secret'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'expected_signature: %s'"
op|')'
op|','
name|'expected_signature'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'signature: %s'"
op|')'
op|','
name|'signature'
op|')'
newline|'\n'
name|'if'
name|'signature'
op|'!='
name|'expected_signature'
op|':'
newline|'\n'
indent|'                '
op|'('
name|'addr_str'
op|','
name|'port_str'
op|')'
op|'='
name|'utils'
op|'.'
name|'parse_server_string'
op|'('
name|'server_string'
op|')'
newline|'\n'
comment|'# If the given server_string contains port num, try without it.'
nl|'\n'
name|'if'
name|'port_str'
op|'!='
string|"''"
op|':'
newline|'\n'
indent|'                    '
name|'host_only_signature'
op|'='
name|'signer'
op|'.'
name|'Signer'
op|'('
nl|'\n'
name|'user'
op|'.'
name|'secret'
op|'.'
name|'encode'
op|'('
op|')'
op|')'
op|'.'
name|'generate'
op|'('
name|'params'
op|','
name|'verb'
op|','
nl|'\n'
name|'addr_str'
op|','
name|'path'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'debug'
op|'('
name|'_'
op|'('
string|"'host_only_signature: %s'"
op|')'
op|','
nl|'\n'
name|'host_only_signature'
op|')'
newline|'\n'
name|'if'
name|'signature'
op|'=='
name|'host_only_signature'
op|':'
newline|'\n'
indent|'                        '
name|'return'
op|'('
name|'user'
op|','
name|'project'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Invalid signature for user %s"'
op|')'
op|','
name|'user'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'InvalidSignature'
op|'('
name|'signature'
op|'='
name|'signature'
op|','
nl|'\n'
name|'user'
op|'='
name|'user'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
op|'('
name|'user'
op|','
name|'project'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_access_key
dedent|''
name|'def'
name|'get_access_key'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'project'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get an access key that includes user and project"""'
newline|'\n'
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'user'
op|','
name|'User'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'user'
op|'='
name|'self'
op|'.'
name|'get_user'
op|'('
name|'user'
op|')'
newline|'\n'
dedent|''
name|'return'
string|'"%s:%s"'
op|'%'
op|'('
name|'user'
op|'.'
name|'access'
op|','
name|'Project'
op|'.'
name|'safe_id'
op|'('
name|'project'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|is_superuser
dedent|''
name|'def'
name|'is_superuser'
op|'('
name|'self'
op|','
name|'user'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Checks for superuser status, allowing user to bypass authorization\n\n        @type user: User or uid\n        @param user: User to check.\n\n        @rtype: bool\n        @return: True for superuser.\n        """'
newline|'\n'
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'user'
op|','
name|'User'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'user'
op|'='
name|'self'
op|'.'
name|'get_user'
op|'('
name|'user'
op|')'
newline|'\n'
comment|'# NOTE(vish): admin flag on user represents superuser'
nl|'\n'
dedent|''
name|'if'
name|'user'
op|'.'
name|'admin'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'for'
name|'role'
name|'in'
name|'FLAGS'
op|'.'
name|'superuser_roles'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'has_role'
op|'('
name|'user'
op|','
name|'role'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|is_admin
dedent|''
dedent|''
dedent|''
name|'def'
name|'is_admin'
op|'('
name|'self'
op|','
name|'user'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Checks for admin status, allowing user to access all projects\n\n        @type user: User or uid\n        @param user: User to check.\n\n        @rtype: bool\n        @return: True for admin.\n        """'
newline|'\n'
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'user'
op|','
name|'User'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'user'
op|'='
name|'self'
op|'.'
name|'get_user'
op|'('
name|'user'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'is_superuser'
op|'('
name|'user'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'for'
name|'role'
name|'in'
name|'FLAGS'
op|'.'
name|'global_roles'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'has_role'
op|'('
name|'user'
op|','
name|'role'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|_build_mc_key
dedent|''
dedent|''
dedent|''
name|'def'
name|'_build_mc_key'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'role'
op|','
name|'project'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'key_parts'
op|'='
op|'['
string|"'rolecache'"
op|','
name|'User'
op|'.'
name|'safe_id'
op|'('
name|'user'
op|')'
op|','
name|'str'
op|'('
name|'role'
op|')'
op|']'
newline|'\n'
name|'if'
name|'project'
op|':'
newline|'\n'
indent|'            '
name|'key_parts'
op|'.'
name|'append'
op|'('
name|'Project'
op|'.'
name|'safe_id'
op|'('
name|'project'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
string|"'-'"
op|'.'
name|'join'
op|'('
name|'key_parts'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_clear_mc_key
dedent|''
name|'def'
name|'_clear_mc_key'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'role'
op|','
name|'project'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(anthony): it would be better to delete the key'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'mc'
op|'.'
name|'set'
op|'('
name|'self'
op|'.'
name|'_build_mc_key'
op|'('
name|'user'
op|','
name|'role'
op|','
name|'project'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_has_role
dedent|''
name|'def'
name|'_has_role'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'role'
op|','
name|'project'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mc_key'
op|'='
name|'self'
op|'.'
name|'_build_mc_key'
op|'('
name|'user'
op|','
name|'role'
op|','
name|'project'
op|')'
newline|'\n'
name|'rslt'
op|'='
name|'self'
op|'.'
name|'mc'
op|'.'
name|'get'
op|'('
name|'mc_key'
op|')'
newline|'\n'
name|'if'
name|'rslt'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'driver'
op|'('
op|')'
name|'as'
name|'drv'
op|':'
newline|'\n'
indent|'                '
name|'rslt'
op|'='
name|'drv'
op|'.'
name|'has_role'
op|'('
name|'user'
op|','
name|'role'
op|','
name|'project'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mc'
op|'.'
name|'set'
op|'('
name|'mc_key'
op|','
name|'rslt'
op|')'
newline|'\n'
name|'return'
name|'rslt'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'rslt'
newline|'\n'
nl|'\n'
DECL|member|has_role
dedent|''
dedent|''
name|'def'
name|'has_role'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'role'
op|','
name|'project'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Checks existence of role for user\n\n        If project is not specified, checks for a global role. If project\n        is specified, checks for the union of the global role and the\n        project role.\n\n        Role \'projectmanager\' only works for projects and simply checks to\n        see if the user is the project_manager of the specified project. It\n        is the same as calling is_project_manager(user, project).\n\n        @type user: User or uid\n        @param user: User to check.\n\n        @type role: str\n        @param role: Role to check.\n\n        @type project: Project or project_id\n        @param project: Project in which to look for local role.\n\n        @rtype: bool\n        @return: True if the user has the role.\n        """'
newline|'\n'
name|'if'
name|'role'
op|'=='
string|"'projectmanager'"
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'project'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'Error'
op|'('
name|'_'
op|'('
string|'"Must specify project"'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'is_project_manager'
op|'('
name|'user'
op|','
name|'project'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'global_role'
op|'='
name|'self'
op|'.'
name|'_has_role'
op|'('
name|'User'
op|'.'
name|'safe_id'
op|'('
name|'user'
op|')'
op|','
nl|'\n'
name|'role'
op|','
nl|'\n'
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'global_role'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'global_role'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'project'
name|'or'
name|'role'
name|'in'
name|'FLAGS'
op|'.'
name|'global_roles'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'global_role'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_has_role'
op|'('
name|'User'
op|'.'
name|'safe_id'
op|'('
name|'user'
op|')'
op|','
nl|'\n'
name|'role'
op|','
nl|'\n'
name|'Project'
op|'.'
name|'safe_id'
op|'('
name|'project'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|add_role
dedent|''
name|'def'
name|'add_role'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'role'
op|','
name|'project'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Adds role for user\n\n        If project is not specified, adds a global role. If project\n        is specified, adds a local role.\n\n        The \'projectmanager\' role is special and can\'t be added or removed.\n\n        @type user: User or uid\n        @param user: User to which to add role.\n\n        @type role: str\n        @param role: Role to add.\n\n        @type project: Project or project_id\n        @param project: Project in which to add local role.\n        """'
newline|'\n'
name|'if'
name|'role'
name|'not'
name|'in'
name|'FLAGS'
op|'.'
name|'allowed_roles'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'UserRoleNotFound'
op|'('
name|'role_id'
op|'='
name|'role'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'project'
name|'is'
name|'not'
name|'None'
name|'and'
name|'role'
name|'in'
name|'FLAGS'
op|'.'
name|'global_roles'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
op|'.'
name|'GlobalRoleNotAllowed'
op|'('
name|'role_id'
op|'='
name|'role'
op|')'
newline|'\n'
dedent|''
name|'uid'
op|'='
name|'User'
op|'.'
name|'safe_id'
op|'('
name|'user'
op|')'
newline|'\n'
name|'pid'
op|'='
name|'Project'
op|'.'
name|'safe_id'
op|'('
name|'project'
op|')'
newline|'\n'
name|'if'
name|'project'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Adding role %(role)s to user %(uid)s"'
nl|'\n'
string|'" in project %(pid)s"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Adding sitewide role %(role)s to user %(uid)s"'
op|')'
nl|'\n'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'self'
op|'.'
name|'driver'
op|'('
op|')'
name|'as'
name|'drv'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_clear_mc_key'
op|'('
name|'uid'
op|','
name|'role'
op|','
name|'pid'
op|')'
newline|'\n'
name|'drv'
op|'.'
name|'add_role'
op|'('
name|'uid'
op|','
name|'role'
op|','
name|'pid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|remove_role
dedent|''
dedent|''
name|'def'
name|'remove_role'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'role'
op|','
name|'project'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Removes role for user\n\n        If project is not specified, removes a global role. If project\n        is specified, removes a local role.\n\n        The \'projectmanager\' role is special and can\'t be added or removed.\n\n        @type user: User or uid\n        @param user: User from which to remove role.\n\n        @type role: str\n        @param role: Role to remove.\n\n        @type project: Project or project_id\n        @param project: Project in which to remove local role.\n        """'
newline|'\n'
name|'uid'
op|'='
name|'User'
op|'.'
name|'safe_id'
op|'('
name|'user'
op|')'
newline|'\n'
name|'pid'
op|'='
name|'Project'
op|'.'
name|'safe_id'
op|'('
name|'project'
op|')'
newline|'\n'
name|'if'
name|'project'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Removing role %(role)s from user %(uid)s"'
nl|'\n'
string|'" on project %(pid)s"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Removing sitewide role %(role)s"'
nl|'\n'
string|'" from user %(uid)s"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'self'
op|'.'
name|'driver'
op|'('
op|')'
name|'as'
name|'drv'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_clear_mc_key'
op|'('
name|'uid'
op|','
name|'role'
op|','
name|'pid'
op|')'
newline|'\n'
name|'drv'
op|'.'
name|'remove_role'
op|'('
name|'uid'
op|','
name|'role'
op|','
name|'pid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|get_roles
name|'def'
name|'get_roles'
op|'('
name|'project_roles'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get list of allowed roles"""'
newline|'\n'
name|'if'
name|'project_roles'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'list'
op|'('
name|'set'
op|'('
name|'FLAGS'
op|'.'
name|'allowed_roles'
op|')'
op|'-'
name|'set'
op|'('
name|'FLAGS'
op|'.'
name|'global_roles'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'FLAGS'
op|'.'
name|'allowed_roles'
newline|'\n'
nl|'\n'
DECL|member|get_user_roles
dedent|''
dedent|''
name|'def'
name|'get_user_roles'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'project'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get user global or per-project roles"""'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'driver'
op|'('
op|')'
name|'as'
name|'drv'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'drv'
op|'.'
name|'get_user_roles'
op|'('
name|'User'
op|'.'
name|'safe_id'
op|'('
name|'user'
op|')'
op|','
nl|'\n'
name|'Project'
op|'.'
name|'safe_id'
op|'('
name|'project'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_active_roles
dedent|''
dedent|''
name|'def'
name|'get_active_roles'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'project'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get all active roles for context"""'
newline|'\n'
name|'if'
name|'project'
op|':'
newline|'\n'
indent|'            '
name|'roles'
op|'='
name|'FLAGS'
op|'.'
name|'allowed_roles'
newline|'\n'
name|'roles'
op|'.'
name|'append'
op|'('
string|"'projectmanager'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'roles'
op|'='
name|'FLAGS'
op|'.'
name|'global_roles'
newline|'\n'
dedent|''
name|'return'
op|'['
name|'role'
name|'for'
name|'role'
name|'in'
name|'roles'
name|'if'
name|'self'
op|'.'
name|'has_role'
op|'('
name|'user'
op|','
name|'role'
op|','
name|'project'
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_project
dedent|''
name|'def'
name|'get_project'
op|'('
name|'self'
op|','
name|'pid'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get project object by id"""'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'driver'
op|'('
op|')'
name|'as'
name|'drv'
op|':'
newline|'\n'
indent|'            '
name|'project_dict'
op|'='
name|'drv'
op|'.'
name|'get_project'
op|'('
name|'pid'
op|')'
newline|'\n'
name|'if'
name|'project_dict'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'Project'
op|'('
op|'**'
name|'project_dict'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_projects
dedent|''
dedent|''
dedent|''
name|'def'
name|'get_projects'
op|'('
name|'self'
op|','
name|'user'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Retrieves list of projects, optionally filtered by user"""'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'driver'
op|'('
op|')'
name|'as'
name|'drv'
op|':'
newline|'\n'
indent|'            '
name|'project_list'
op|'='
name|'drv'
op|'.'
name|'get_projects'
op|'('
name|'User'
op|'.'
name|'safe_id'
op|'('
name|'user'
op|')'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'project_list'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
op|']'
newline|'\n'
dedent|''
name|'return'
op|'['
name|'Project'
op|'('
op|'**'
name|'project_dict'
op|')'
name|'for'
name|'project_dict'
name|'in'
name|'project_list'
op|']'
newline|'\n'
nl|'\n'
DECL|member|create_project
dedent|''
dedent|''
name|'def'
name|'create_project'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'manager_user'
op|','
name|'description'
op|'='
name|'None'
op|','
nl|'\n'
name|'member_users'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a project\n\n        @type name: str\n        @param name: Name of the project to create. The name will also be\n        used as the project id.\n\n        @type manager_user: User or uid\n        @param manager_user: This user will be the project manager.\n\n        @type description: str\n        @param project: Description of the project. If no description is\n        specified, the name of the project will be used.\n\n        @type member_users: list of User or uid\n        @param: Initial project members. The project manager will always be\n        added as a member, even if he isn\'t specified in this list.\n\n        @rtype: Project\n        @return: The new project.\n        """'
newline|'\n'
name|'if'
name|'member_users'
op|':'
newline|'\n'
indent|'            '
name|'member_users'
op|'='
op|'['
name|'User'
op|'.'
name|'safe_id'
op|'('
name|'u'
op|')'
name|'for'
name|'u'
name|'in'
name|'member_users'
op|']'
newline|'\n'
dedent|''
name|'with'
name|'self'
op|'.'
name|'driver'
op|'('
op|')'
name|'as'
name|'drv'
op|':'
newline|'\n'
indent|'            '
name|'project_dict'
op|'='
name|'drv'
op|'.'
name|'create_project'
op|'('
name|'name'
op|','
nl|'\n'
name|'User'
op|'.'
name|'safe_id'
op|'('
name|'manager_user'
op|')'
op|','
nl|'\n'
name|'description'
op|','
nl|'\n'
name|'member_users'
op|')'
newline|'\n'
name|'if'
name|'project_dict'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Created project %(name)s with"'
nl|'\n'
string|'" manager %(manager_user)s"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
name|'project'
op|'='
name|'Project'
op|'('
op|'**'
name|'project_dict'
op|')'
newline|'\n'
name|'return'
name|'project'
newline|'\n'
nl|'\n'
DECL|member|modify_project
dedent|''
dedent|''
dedent|''
name|'def'
name|'modify_project'
op|'('
name|'self'
op|','
name|'project'
op|','
name|'manager_user'
op|'='
name|'None'
op|','
name|'description'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Modify a project\n\n        @type name: Project or project_id\n        @param project: The project to modify.\n\n        @type manager_user: User or uid\n        @param manager_user: This user will be the new project manager.\n\n        @type description: str\n        @param project: This will be the new description of the project.\n\n        """'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"modifying project %s"'
op|')'
op|','
name|'Project'
op|'.'
name|'safe_id'
op|'('
name|'project'
op|')'
op|')'
newline|'\n'
name|'if'
name|'manager_user'
op|':'
newline|'\n'
indent|'            '
name|'manager_user'
op|'='
name|'User'
op|'.'
name|'safe_id'
op|'('
name|'manager_user'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'self'
op|'.'
name|'driver'
op|'('
op|')'
name|'as'
name|'drv'
op|':'
newline|'\n'
indent|'            '
name|'drv'
op|'.'
name|'modify_project'
op|'('
name|'Project'
op|'.'
name|'safe_id'
op|'('
name|'project'
op|')'
op|','
nl|'\n'
name|'manager_user'
op|','
nl|'\n'
name|'description'
op|')'
newline|'\n'
nl|'\n'
DECL|member|add_to_project
dedent|''
dedent|''
name|'def'
name|'add_to_project'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'project'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Add user to project"""'
newline|'\n'
name|'uid'
op|'='
name|'User'
op|'.'
name|'safe_id'
op|'('
name|'user'
op|')'
newline|'\n'
name|'pid'
op|'='
name|'Project'
op|'.'
name|'safe_id'
op|'('
name|'project'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Adding user %(uid)s to project %(pid)s"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'driver'
op|'('
op|')'
name|'as'
name|'drv'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'drv'
op|'.'
name|'add_to_project'
op|'('
name|'User'
op|'.'
name|'safe_id'
op|'('
name|'user'
op|')'
op|','
nl|'\n'
name|'Project'
op|'.'
name|'safe_id'
op|'('
name|'project'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|is_project_manager
dedent|''
dedent|''
name|'def'
name|'is_project_manager'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'project'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Checks if user is project manager"""'
newline|'\n'
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'project'
op|','
name|'Project'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'project'
op|'='
name|'self'
op|'.'
name|'get_project'
op|'('
name|'project'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'User'
op|'.'
name|'safe_id'
op|'('
name|'user'
op|')'
op|'=='
name|'project'
op|'.'
name|'project_manager_id'
newline|'\n'
nl|'\n'
DECL|member|is_project_member
dedent|''
name|'def'
name|'is_project_member'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'project'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Checks to see if user is a member of project"""'
newline|'\n'
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'project'
op|','
name|'Project'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'project'
op|'='
name|'self'
op|'.'
name|'get_project'
op|'('
name|'project'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'User'
op|'.'
name|'safe_id'
op|'('
name|'user'
op|')'
name|'in'
name|'project'
op|'.'
name|'member_ids'
newline|'\n'
nl|'\n'
DECL|member|remove_from_project
dedent|''
name|'def'
name|'remove_from_project'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'project'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Removes a user from a project"""'
newline|'\n'
name|'uid'
op|'='
name|'User'
op|'.'
name|'safe_id'
op|'('
name|'user'
op|')'
newline|'\n'
name|'pid'
op|'='
name|'Project'
op|'.'
name|'safe_id'
op|'('
name|'project'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Remove user %(uid)s from project %(pid)s"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'driver'
op|'('
op|')'
name|'as'
name|'drv'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'drv'
op|'.'
name|'remove_from_project'
op|'('
name|'uid'
op|','
name|'pid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|get_project_vpn_data
name|'def'
name|'get_project_vpn_data'
op|'('
name|'project'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Gets vpn ip and port for project\n\n        @type project: Project or project_id\n        @param project: Project from which to get associated vpn data\n\n        @rvalue: tuple of (str, str)\n        @return: A tuple containing (ip, port) or None, None if vpn has\n        not been allocated for user.\n        """'
newline|'\n'
nl|'\n'
name|'networks'
op|'='
name|'db'
op|'.'
name|'project_get_networks'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'Project'
op|'.'
name|'safe_id'
op|'('
name|'project'
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'networks'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
comment|'# TODO(tr3buchet): not sure what you guys plan on doing with this'
nl|'\n'
comment|"# but it's possible for a project to have multiple sets of vpn data"
nl|'\n'
comment|"# for now I'm just returning the first one"
nl|'\n'
dedent|''
name|'network'
op|'='
name|'networks'
op|'['
number|'0'
op|']'
newline|'\n'
name|'return'
op|'('
name|'network'
op|'['
string|"'vpn_public_address'"
op|']'
op|','
nl|'\n'
name|'network'
op|'['
string|"'vpn_public_port'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_project
dedent|''
name|'def'
name|'delete_project'
op|'('
name|'self'
op|','
name|'project'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deletes a project"""'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Deleting project %s"'
op|')'
op|','
name|'Project'
op|'.'
name|'safe_id'
op|'('
name|'project'
op|')'
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'driver'
op|'('
op|')'
name|'as'
name|'drv'
op|':'
newline|'\n'
indent|'            '
name|'drv'
op|'.'
name|'delete_project'
op|'('
name|'Project'
op|'.'
name|'safe_id'
op|'('
name|'project'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_user
dedent|''
dedent|''
name|'def'
name|'get_user'
op|'('
name|'self'
op|','
name|'uid'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Retrieves a user by id"""'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'driver'
op|'('
op|')'
name|'as'
name|'drv'
op|':'
newline|'\n'
indent|'            '
name|'user_dict'
op|'='
name|'drv'
op|'.'
name|'get_user'
op|'('
name|'uid'
op|')'
newline|'\n'
name|'if'
name|'user_dict'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'User'
op|'('
op|'**'
name|'user_dict'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_user_from_access_key
dedent|''
dedent|''
dedent|''
name|'def'
name|'get_user_from_access_key'
op|'('
name|'self'
op|','
name|'access_key'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Retrieves a user by access key"""'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'driver'
op|'('
op|')'
name|'as'
name|'drv'
op|':'
newline|'\n'
indent|'            '
name|'user_dict'
op|'='
name|'drv'
op|'.'
name|'get_user_from_access_key'
op|'('
name|'access_key'
op|')'
newline|'\n'
name|'if'
name|'user_dict'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'User'
op|'('
op|'**'
name|'user_dict'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_users
dedent|''
dedent|''
dedent|''
name|'def'
name|'get_users'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Retrieves a list of all users"""'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'driver'
op|'('
op|')'
name|'as'
name|'drv'
op|':'
newline|'\n'
indent|'            '
name|'user_list'
op|'='
name|'drv'
op|'.'
name|'get_users'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'user_list'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
op|']'
newline|'\n'
dedent|''
name|'return'
op|'['
name|'User'
op|'('
op|'**'
name|'user_dict'
op|')'
name|'for'
name|'user_dict'
name|'in'
name|'user_list'
op|']'
newline|'\n'
nl|'\n'
DECL|member|create_user
dedent|''
dedent|''
name|'def'
name|'create_user'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'access'
op|'='
name|'None'
op|','
name|'secret'
op|'='
name|'None'
op|','
name|'admin'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Creates a user\n\n        @type name: str\n        @param name: Name of the user to create.\n\n        @type access: str\n        @param access: Access Key (defaults to a random uuid)\n\n        @type secret: str\n        @param secret: Secret Key (defaults to a random uuid)\n\n        @type admin: bool\n        @param admin: Whether to set the admin flag. The admin flag gives\n        superuser status regardless of roles specifed for the user.\n\n        @type create_project: bool\n        @param: Whether to create a project for the user with the same name.\n\n        @rtype: User\n        @return: The new user.\n        """'
newline|'\n'
name|'if'
name|'access'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'access'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'secret'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'secret'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'self'
op|'.'
name|'driver'
op|'('
op|')'
name|'as'
name|'drv'
op|':'
newline|'\n'
indent|'            '
name|'user_dict'
op|'='
name|'drv'
op|'.'
name|'create_user'
op|'('
name|'name'
op|','
name|'access'
op|','
name|'secret'
op|','
name|'admin'
op|')'
newline|'\n'
name|'if'
name|'user_dict'
op|':'
newline|'\n'
indent|'                '
name|'rv'
op|'='
name|'User'
op|'('
op|'**'
name|'user_dict'
op|')'
newline|'\n'
name|'rvname'
op|'='
name|'rv'
op|'.'
name|'name'
newline|'\n'
name|'rvadmin'
op|'='
name|'rv'
op|'.'
name|'admin'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Created user %(rvname)s"'
nl|'\n'
string|'" (admin: %(rvadmin)r)"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
name|'return'
name|'rv'
newline|'\n'
nl|'\n'
DECL|member|delete_user
dedent|''
dedent|''
dedent|''
name|'def'
name|'delete_user'
op|'('
name|'self'
op|','
name|'user'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deletes a user\n\n        Additionally deletes all users key_pairs"""'
newline|'\n'
name|'uid'
op|'='
name|'User'
op|'.'
name|'safe_id'
op|'('
name|'user'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Deleting user %s"'
op|')'
op|','
name|'uid'
op|')'
newline|'\n'
name|'db'
op|'.'
name|'key_pair_destroy_all_by_user'
op|'('
name|'context'
op|'.'
name|'get_admin_context'
op|'('
op|')'
op|','
nl|'\n'
name|'uid'
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'driver'
op|'('
op|')'
name|'as'
name|'drv'
op|':'
newline|'\n'
indent|'            '
name|'drv'
op|'.'
name|'delete_user'
op|'('
name|'uid'
op|')'
newline|'\n'
nl|'\n'
DECL|member|modify_user
dedent|''
dedent|''
name|'def'
name|'modify_user'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'access_key'
op|'='
name|'None'
op|','
name|'secret_key'
op|'='
name|'None'
op|','
name|'admin'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Modify credentials for a user"""'
newline|'\n'
name|'uid'
op|'='
name|'User'
op|'.'
name|'safe_id'
op|'('
name|'user'
op|')'
newline|'\n'
name|'if'
name|'access_key'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Access Key change for user %s"'
op|')'
op|','
name|'uid'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'secret_key'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Secret Key change for user %s"'
op|')'
op|','
name|'uid'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'admin'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'audit'
op|'('
name|'_'
op|'('
string|'"Admin status set to %(admin)r"'
nl|'\n'
string|'" for user %(uid)s"'
op|')'
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'self'
op|'.'
name|'driver'
op|'('
op|')'
name|'as'
name|'drv'
op|':'
newline|'\n'
indent|'            '
name|'drv'
op|'.'
name|'modify_user'
op|'('
name|'uid'
op|','
name|'access_key'
op|','
name|'secret_key'
op|','
name|'admin'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|get_key_pairs
name|'def'
name|'get_key_pairs'
op|'('
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'db'
op|'.'
name|'key_pair_get_all_by_user'
op|'('
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
name|'context'
op|'.'
name|'user_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_credentials
dedent|''
name|'def'
name|'get_credentials'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'project'
op|'='
name|'None'
op|','
name|'use_dmz'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get credential zip for user in project"""'
newline|'\n'
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'user'
op|','
name|'User'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'user'
op|'='
name|'self'
op|'.'
name|'get_user'
op|'('
name|'user'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'project'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'project'
op|'='
name|'user'
op|'.'
name|'id'
newline|'\n'
dedent|''
name|'pid'
op|'='
name|'Project'
op|'.'
name|'safe_id'
op|'('
name|'project'
op|')'
newline|'\n'
name|'private_key'
op|','
name|'signed_cert'
op|'='
name|'crypto'
op|'.'
name|'generate_x509_cert'
op|'('
name|'user'
op|'.'
name|'id'
op|','
name|'pid'
op|')'
newline|'\n'
nl|'\n'
name|'tmpdir'
op|'='
name|'tempfile'
op|'.'
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
name|'zf'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tmpdir'
op|','
string|'"temp.zip"'
op|')'
newline|'\n'
name|'zippy'
op|'='
name|'zipfile'
op|'.'
name|'ZipFile'
op|'('
name|'zf'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'if'
name|'use_dmz'
name|'and'
name|'FLAGS'
op|'.'
name|'region_list'
op|':'
newline|'\n'
indent|'            '
name|'regions'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'item'
name|'in'
name|'FLAGS'
op|'.'
name|'region_list'
op|':'
newline|'\n'
indent|'                '
name|'region'
op|','
name|'_sep'
op|','
name|'region_host'
op|'='
name|'item'
op|'.'
name|'partition'
op|'('
string|'"="'
op|')'
newline|'\n'
name|'regions'
op|'['
name|'region'
op|']'
op|'='
name|'region_host'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'regions'
op|'='
op|'{'
string|"'nova'"
op|':'
name|'FLAGS'
op|'.'
name|'ec2_host'
op|'}'
newline|'\n'
dedent|''
name|'for'
name|'region'
op|','
name|'host'
name|'in'
name|'regions'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'rc'
op|'='
name|'self'
op|'.'
name|'__generate_rc'
op|'('
name|'user'
op|','
nl|'\n'
name|'pid'
op|','
nl|'\n'
name|'use_dmz'
op|','
nl|'\n'
name|'host'
op|')'
newline|'\n'
name|'zippy'
op|'.'
name|'writestr'
op|'('
name|'FLAGS'
op|'.'
name|'credential_rc_file'
op|'%'
name|'region'
op|','
name|'rc'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'zippy'
op|'.'
name|'writestr'
op|'('
name|'FLAGS'
op|'.'
name|'credential_key_file'
op|','
name|'private_key'
op|')'
newline|'\n'
name|'zippy'
op|'.'
name|'writestr'
op|'('
name|'FLAGS'
op|'.'
name|'credential_cert_file'
op|','
name|'signed_cert'
op|')'
newline|'\n'
nl|'\n'
op|'('
name|'vpn_ip'
op|','
name|'vpn_port'
op|')'
op|'='
name|'self'
op|'.'
name|'get_project_vpn_data'
op|'('
name|'project'
op|')'
newline|'\n'
name|'if'
name|'vpn_ip'
op|':'
newline|'\n'
indent|'            '
name|'configfile'
op|'='
name|'open'
op|'('
name|'FLAGS'
op|'.'
name|'vpn_client_template'
op|','
string|'"r"'
op|')'
newline|'\n'
name|'s'
op|'='
name|'string'
op|'.'
name|'Template'
op|'('
name|'configfile'
op|'.'
name|'read'
op|'('
op|')'
op|')'
newline|'\n'
name|'configfile'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'config'
op|'='
name|'s'
op|'.'
name|'substitute'
op|'('
name|'keyfile'
op|'='
name|'FLAGS'
op|'.'
name|'credential_key_file'
op|','
nl|'\n'
name|'certfile'
op|'='
name|'FLAGS'
op|'.'
name|'credential_cert_file'
op|','
nl|'\n'
name|'ip'
op|'='
name|'vpn_ip'
op|','
nl|'\n'
name|'port'
op|'='
name|'vpn_port'
op|')'
newline|'\n'
name|'zippy'
op|'.'
name|'writestr'
op|'('
name|'FLAGS'
op|'.'
name|'credential_vpn_file'
op|','
name|'config'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'warn'
op|'('
name|'_'
op|'('
string|'"No vpn data for project %s"'
op|')'
op|','
name|'pid'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'zippy'
op|'.'
name|'writestr'
op|'('
name|'FLAGS'
op|'.'
name|'ca_file'
op|','
name|'crypto'
op|'.'
name|'fetch_ca'
op|'('
name|'pid'
op|')'
op|')'
newline|'\n'
name|'zippy'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'zf'
op|','
string|"'rb'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'            '
name|'read_buffer'
op|'='
name|'f'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'tmpdir'
op|')'
newline|'\n'
name|'return'
name|'read_buffer'
newline|'\n'
nl|'\n'
DECL|member|get_environment_rc
dedent|''
name|'def'
name|'get_environment_rc'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'project'
op|'='
name|'None'
op|','
name|'use_dmz'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get environment rc for user in project"""'
newline|'\n'
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'user'
op|','
name|'User'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'user'
op|'='
name|'self'
op|'.'
name|'get_user'
op|'('
name|'user'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'project'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'project'
op|'='
name|'user'
op|'.'
name|'id'
newline|'\n'
dedent|''
name|'pid'
op|'='
name|'Project'
op|'.'
name|'safe_id'
op|'('
name|'project'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'__generate_rc'
op|'('
name|'user'
op|','
name|'pid'
op|','
name|'use_dmz'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|__generate_rc
name|'def'
name|'__generate_rc'
op|'('
name|'user'
op|','
name|'pid'
op|','
name|'use_dmz'
op|'='
name|'True'
op|','
name|'host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Generate rc file for user"""'
newline|'\n'
name|'if'
name|'use_dmz'
op|':'
newline|'\n'
indent|'            '
name|'ec2_host'
op|'='
name|'FLAGS'
op|'.'
name|'ec2_dmz_host'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'ec2_host'
op|'='
name|'FLAGS'
op|'.'
name|'ec2_host'
newline|'\n'
comment|'# NOTE(vish): Always use the dmz since it is used from inside the'
nl|'\n'
comment|'#             instance'
nl|'\n'
dedent|''
name|'s3_host'
op|'='
name|'FLAGS'
op|'.'
name|'s3_dmz'
newline|'\n'
name|'if'
name|'host'
op|':'
newline|'\n'
indent|'            '
name|'s3_host'
op|'='
name|'host'
newline|'\n'
name|'ec2_host'
op|'='
name|'host'
newline|'\n'
dedent|''
name|'rc'
op|'='
name|'open'
op|'('
name|'FLAGS'
op|'.'
name|'credentials_template'
op|')'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'rc'
op|'='
name|'rc'
op|'%'
op|'{'
string|"'access'"
op|':'
name|'user'
op|'.'
name|'access'
op|','
nl|'\n'
string|"'project'"
op|':'
name|'pid'
op|','
nl|'\n'
string|"'secret'"
op|':'
name|'user'
op|'.'
name|'secret'
op|','
nl|'\n'
string|"'ec2'"
op|':'
string|"'%s://%s:%s%s'"
op|'%'
op|'('
name|'FLAGS'
op|'.'
name|'ec2_scheme'
op|','
nl|'\n'
name|'ec2_host'
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'ec2_port'
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'ec2_path'
op|')'
op|','
nl|'\n'
string|"'s3'"
op|':'
string|"'http://%s:%s'"
op|'%'
op|'('
name|'s3_host'
op|','
name|'FLAGS'
op|'.'
name|'s3_port'
op|')'
op|','
nl|'\n'
string|"'os'"
op|':'
string|"'%s://%s:%s%s'"
op|'%'
op|'('
name|'FLAGS'
op|'.'
name|'osapi_scheme'
op|','
nl|'\n'
name|'ec2_host'
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'osapi_port'
op|','
nl|'\n'
name|'FLAGS'
op|'.'
name|'osapi_path'
op|')'
op|','
nl|'\n'
string|"'user'"
op|':'
name|'user'
op|'.'
name|'name'
op|','
nl|'\n'
string|"'nova'"
op|':'
name|'FLAGS'
op|'.'
name|'ca_file'
op|','
nl|'\n'
string|"'cert'"
op|':'
name|'FLAGS'
op|'.'
name|'credential_cert_file'
op|','
nl|'\n'
string|"'key'"
op|':'
name|'FLAGS'
op|'.'
name|'credential_key_file'
op|'}'
newline|'\n'
name|'return'
name|'rc'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
