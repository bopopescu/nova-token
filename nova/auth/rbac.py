begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Role-based access control decorators to use fpr wrapping other\nmethods with."""'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|allow
name|'def'
name|'allow'
op|'('
op|'*'
name|'roles'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Allow the given roles access the wrapped function."""'
newline|'\n'
nl|'\n'
DECL|function|wrap
name|'def'
name|'wrap'
op|'('
name|'func'
op|')'
op|':'
comment|'# pylint: disable-msg=C0111'
newline|'\n'
nl|'\n'
DECL|function|wrapped_func
indent|'        '
name|'def'
name|'wrapped_func'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'*'
name|'args'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
op|':'
comment|'# pylint: disable-msg=C0111'
newline|'\n'
indent|'            '
name|'if'
name|'context'
op|'.'
name|'user'
op|'.'
name|'is_superuser'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'func'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'role'
name|'in'
name|'roles'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'__matches_role'
op|'('
name|'context'
op|','
name|'role'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'func'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'raise'
name|'exception'
op|'.'
name|'NotAuthorized'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'wrapped_func'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'wrap'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|deny
dedent|''
name|'def'
name|'deny'
op|'('
op|'*'
name|'roles'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Deny the given roles access the wrapped function."""'
newline|'\n'
nl|'\n'
DECL|function|wrap
name|'def'
name|'wrap'
op|'('
name|'func'
op|')'
op|':'
comment|'# pylint: disable-msg=C0111'
newline|'\n'
nl|'\n'
DECL|function|wrapped_func
indent|'        '
name|'def'
name|'wrapped_func'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'*'
name|'args'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
op|':'
comment|'# pylint: disable-msg=C0111'
newline|'\n'
indent|'            '
name|'if'
name|'context'
op|'.'
name|'user'
op|'.'
name|'is_superuser'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'func'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'role'
name|'in'
name|'roles'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'__matches_role'
op|'('
name|'context'
op|','
name|'role'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'exception'
op|'.'
name|'NotAuthorized'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'func'
op|'('
name|'self'
op|','
name|'context'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'wrapped_func'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'wrap'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|__matches_role
dedent|''
name|'def'
name|'__matches_role'
op|'('
name|'context'
op|','
name|'role'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Check if a role is allowed."""'
newline|'\n'
name|'if'
name|'role'
op|'=='
string|"'all'"
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'if'
name|'role'
op|'=='
string|"'none'"
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'return'
name|'context'
op|'.'
name|'project'
op|'.'
name|'has_role'
op|'('
name|'context'
op|'.'
name|'user'
op|'.'
name|'id'
op|','
name|'role'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
