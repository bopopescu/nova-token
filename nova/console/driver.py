begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2010 Openstack, LLC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nConsoleProxy base class that all ConsoleProxies should inherit from\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConsoleProxy
name|'class'
name|'ConsoleProxy'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""The base class for all ConsoleProxy driver classes."""'
newline|'\n'
nl|'\n'
op|'@'
name|'property'
newline|'\n'
DECL|member|console_type
name|'def'
name|'console_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
op|'('
string|'"Must specify type in subclass"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|setup_console
dedent|''
name|'def'
name|'setup_console'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'console'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Sets up actual proxies"""'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
string|'"Must implement setup in subclass"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|teardown_console
dedent|''
name|'def'
name|'teardown_console'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'console'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Tears down actual proxies"""'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
string|'"Must implement teardown in subclass"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|init_host
dedent|''
name|'def'
name|'init_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Start up any config\'ed consoles on start"""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|generate_password
dedent|''
name|'def'
name|'generate_password'
op|'('
name|'self'
op|','
name|'length'
op|'='
number|'8'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns random console password"""'
newline|'\n'
name|'return'
name|'os'
op|'.'
name|'urandom'
op|'('
name|'length'
op|'*'
number|'2'
op|')'
op|'.'
name|'encode'
op|'('
string|"'base64'"
op|')'
op|'['
op|':'
name|'length'
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_port
dedent|''
name|'def'
name|'get_port'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""get available port for consoles that need one"""'
newline|'\n'
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|fix_pool_password
dedent|''
name|'def'
name|'fix_pool_password'
op|'('
name|'self'
op|','
name|'password'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Trim password to length, and any other massaging"""'
newline|'\n'
name|'return'
name|'password'
newline|'\n'
nl|'\n'
DECL|member|fix_console_password
dedent|''
name|'def'
name|'fix_console_password'
op|'('
name|'self'
op|','
name|'password'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Trim password to length, and any other massaging"""'
newline|'\n'
name|'return'
name|'password'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
