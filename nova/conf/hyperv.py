begin_unit
comment|'# Copyright (c) 2016 TUBITAK BILGEM'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|hyperv_opt_group
name|'hyperv_opt_group'
op|'='
name|'cfg'
op|'.'
name|'OptGroup'
op|'('
string|'"hyperv"'
op|','
nl|'\n'
DECL|variable|title
name|'title'
op|'='
string|'"The Hyper-V feature"'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nThe hyperv feature allows you to configure the Hyper-V hypervisor\ndriver to be used within an OpenStack deployment.\n"""'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|dynamic_memory_ratio_opt
name|'dynamic_memory_ratio_opt'
op|'='
name|'cfg'
op|'.'
name|'FloatOpt'
op|'('
string|"'dynamic_memory_ratio'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'1.0'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nDynamic memory ratio\n\nEnables dynamic memory allocation (ballooning) when set to a value\ngreater than 1. The value expresses the ratio between the total RAM\nassigned to an instance and its startup RAM amount. For example a\nratio of 2.0 for an instance with 1024MB of RAM implies 512MB of\nRAM allocated at startup.\n\nPossible values:\n\n* 1.0: Disables dynamic memory allocation (Default).\n* Float values greater than 1.0: Enables allocation of total implied\n  RAM divided by this value for startup.\n\nServices which consume this:\n\n* nova-compute\n\nRelated options:\n\n* None\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|enable_instance_metrics_collection_opt
name|'enable_instance_metrics_collection_opt'
op|'='
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
nl|'\n'
string|"'enable_instance_metrics_collection'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'False'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nEnable instance metrics collection\n\nEnables metrics collections for an instance by using Hyper-V\'s\nmetric APIs. Collected data can by retrieved by other apps and\nservices, e.g.: Ceilometer.\n\nPossible values:\n\n* True: Enables metrics collection.\n* False: Disables metric collection (Default).\n\nServices which consume this:\n\n* nova-compute\n\nRelated options:\n\n* None\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|instances_path_share_opt
name|'instances_path_share_opt'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'instances_path_share'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|'""'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nInstances path share\n\nThe name of a Windows share mapped to the "instances_path" dir\nand used by the resize feature to copy files to the target host.\nIf left blank, an administrative share (hidden network share) will\nbe used, looking for the same "instances_path" used locally.\n\nPossible values:\n\n* "": An administrative share will be used (Default).\n* Name of a Windows share.\n\nServices which consume this:\n\n* nova-compute\n\nRelated options:\n\n* "instances_path": The directory which will be used if this option\n  here is left blank.\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|limit_cpu_features_opt
name|'limit_cpu_features_opt'
op|'='
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
string|"'limit_cpu_features'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'False'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nLimit CPU features\n\nThis flag is needed to support live migration to hosts with\ndifferent CPU features and checked during instance creation\nin order to limit the CPU features used by the instance.\n\nPossible values:\n\n* True: Limit processor-specific features.\n* False: Do not limit processor-specific features (Default).\n\nServices which consume this:\n\n* nova-compute\n\nRelated options:\n\n* None\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|mounted_disk_query_retry_count_opt
name|'mounted_disk_query_retry_count_opt'
op|'='
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
nl|'\n'
string|"'mounted_disk_query_retry_count'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'10'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nThe number of times to retry checking for a disk mounted via iSCSI.\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|mounted_disk_query_retry_interval_opt
name|'mounted_disk_query_retry_interval_opt'
op|'='
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
nl|'\n'
string|"'mounted_disk_query_retry_interval'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'5'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nInterval between checks for a mounted iSCSI disk, in seconds.\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|power_state_check_timeframe_opt
name|'power_state_check_timeframe_opt'
op|'='
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'power_state_check_timeframe'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'60'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nThe timeframe to be checked for instance power state changes.\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|power_state_event_polling_interval_opt
name|'power_state_event_polling_interval_opt'
op|'='
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
nl|'\n'
string|"'power_state_event_polling_interval'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'2'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nInstance power state change event polling frequency.\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|qemu_img_cmd_opt
name|'qemu_img_cmd_opt'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'qemu_img_cmd'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|'"qemu-img.exe"'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nPath of qemu-img command which is used to convert\nbetween different image types\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|vswitch_name_opt
name|'vswitch_name_opt'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'vswitch_name'"
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nExternal virtual switch Name, if not provided,\nthe first external virtual switch is used\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|wait_soft_reboot_seconds_opt
name|'wait_soft_reboot_seconds_opt'
op|'='
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'wait_soft_reboot_seconds'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'60'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nNumber of seconds to wait for instance to shut down after\nsoft reboot request is made. We fall back to hard reboot\nif instance does not shutdown within this window.\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|config_drive_cdrom_opt
name|'config_drive_cdrom_opt'
op|'='
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
string|"'config_drive_cdrom'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'False'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nAttaches the Config Drive image as a cdrom drive\ninstead of a disk drive\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|config_drive_inject_password_opt
name|'config_drive_inject_password_opt'
op|'='
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
string|"'config_drive_inject_password'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'False'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nSets the admin password in the config drive image\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|volume_attach_retry_count_opt
name|'volume_attach_retry_count_opt'
op|'='
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'volume_attach_retry_count'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'10'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nThe number of times to retry to attach a volume\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|volume_attach_retry_interval_opt
name|'volume_attach_retry_interval_opt'
op|'='
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'volume_attach_retry_interval'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'5'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nInterval between volume attachment attempts, in seconds\n"""'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|ALL_OPTS
name|'ALL_OPTS'
op|'='
op|'['
name|'dynamic_memory_ratio_opt'
op|','
nl|'\n'
name|'enable_instance_metrics_collection_opt'
op|','
nl|'\n'
name|'instances_path_share_opt'
op|','
nl|'\n'
name|'limit_cpu_features_opt'
op|','
nl|'\n'
name|'mounted_disk_query_retry_count_opt'
op|','
nl|'\n'
name|'mounted_disk_query_retry_interval_opt'
op|','
nl|'\n'
name|'power_state_check_timeframe_opt'
op|','
nl|'\n'
name|'power_state_event_polling_interval_opt'
op|','
nl|'\n'
name|'qemu_img_cmd_opt'
op|','
nl|'\n'
name|'vswitch_name_opt'
op|','
nl|'\n'
name|'wait_soft_reboot_seconds_opt'
op|','
nl|'\n'
name|'config_drive_cdrom_opt'
op|','
nl|'\n'
name|'config_drive_inject_password_opt'
op|','
nl|'\n'
name|'volume_attach_retry_count_opt'
op|','
nl|'\n'
name|'volume_attach_retry_interval_opt'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|register_opts
name|'def'
name|'register_opts'
op|'('
name|'conf'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'conf'
op|'.'
name|'register_opts'
op|'('
name|'ALL_OPTS'
op|','
name|'group'
op|'='
name|'hyperv_opt_group'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|list_opts
dedent|''
name|'def'
name|'list_opts'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'{'
name|'hyperv_opt_group'
op|':'
name|'ALL_OPTS'
op|'}'
newline|'\n'
dedent|''
endmarker|''
end_unit
