begin_unit
comment|'# Copyright 2015 OpenStack Foundation'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
DECL|variable|DEFAULT_GROUP_NAME
name|'DEFAULT_GROUP_NAME'
op|'='
string|'"DEFAULT"'
newline|'\n'
comment|'# The scheduler has options in several groups'
nl|'\n'
DECL|variable|METRICS_GROUP_NAME
name|'METRICS_GROUP_NAME'
op|'='
string|'"metrics"'
newline|'\n'
DECL|variable|TRUSTED_GROUP_NAME
name|'TRUSTED_GROUP_NAME'
op|'='
string|'"trusted_computing"'
newline|'\n'
DECL|variable|UPGRADE_GROUP_NAME
name|'UPGRADE_GROUP_NAME'
op|'='
string|'"upgrade_levels"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|host_subset_size_opt
name|'host_subset_size_opt'
op|'='
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|'"scheduler_host_subset_size"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'1'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nNew instances will be scheduled on a host chosen randomly from a subset of the\nN best hosts, where N is the value set by this option.  Valid values are 1 or\ngreater. Any value less than one will be treated as 1.\n\nSetting this to a value greater than 1 will reduce the chance that multiple\nscheduler processes handling similar requests will select the same host,\ncreating a potential race condition. By selecting a host randomly from the N\nhosts that best fit the request, the chance of a conflict is reduced. However,\nthe higher you set this value, the less optimal the chosen host may be for a\ngiven request.\n\nThis option is only used by the FilterScheduler and its subclasses; if you use\na different scheduler, this option has no effect.\n\n* Services that use this:\n\n    ``nova-scheduler``\n\n* Related options:\n\n    None\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|bm_default_filter_opt
name|'bm_default_filter_opt'
op|'='
name|'cfg'
op|'.'
name|'ListOpt'
op|'('
string|'"baremetal_scheduler_default_filters"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
op|'['
nl|'\n'
string|'"RetryFilter"'
op|','
nl|'\n'
string|'"AvailabilityZoneFilter"'
op|','
nl|'\n'
string|'"ComputeFilter"'
op|','
nl|'\n'
string|'"ComputeCapabilitiesFilter"'
op|','
nl|'\n'
string|'"ImagePropertiesFilter"'
op|','
nl|'\n'
string|'"ExactRamFilter"'
op|','
nl|'\n'
string|'"ExactDiskFilter"'
op|','
nl|'\n'
string|'"ExactCoreFilter"'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nThis option specifies the filters used for filtering baremetal hosts. The value\nshould be a list of strings, with each string being the name of a filter class\nto be used. When used, they will be applied in order, so place your most\nrestrictive filters first to make the filtering process more efficient.\n\nThis option is only used by the FilterScheduler and its subclasses; if you use\na different scheduler, this option has no effect.\n\n* Services that use this:\n\n    ``nova-scheduler``\n\n* Related options:\n\n    If the \'scheduler_use_baremetal_filters\' option is False, this option has\n    no effect.\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|use_bm_filters_opt
name|'use_bm_filters_opt'
op|'='
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
string|'"scheduler_use_baremetal_filters"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'False'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nSet this to True to tell the nova scheduler that it should use the filters\nspecified in the \'baremetal_scheduler_default_filters\' option. If you are not\nscheduling baremetal nodes, leave this at the default setting of False.\n\nThis option is only used by the FilterScheduler and its subclasses; if you use\na different scheduler, this option has no effect.\n\n* Services that use this:\n\n    ``nova-scheduler``\n\n* Related options:\n\n    If this option is set to True, then the filters specified in the\n    \'baremetal_scheduler_default_filters\' are used instead of the filters\n    specified in \'scheduler_default_filters\'.\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|host_mgr_avail_filt_opt
name|'host_mgr_avail_filt_opt'
op|'='
name|'cfg'
op|'.'
name|'MultiStrOpt'
op|'('
string|'"scheduler_available_filters"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
op|'['
string|'"nova.scheduler.filters.all_filters"'
op|']'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nThis is an unordered list of the filter classes the Nova scheduler may apply.\nOnly the filters specified in the \'scheduler_default_filters\' option will be\nused, but any filter appearing in that option must also be included in this\nlist.\n\nBy default, this is set to all filters that are included with Nova. If you wish\nto change this, replace this with a list of strings, where each element is the\npath to a filter.\n\nThis option is only used by the FilterScheduler and its subclasses; if you use\na different scheduler, this option has no effect.\n\n* Services that use this:\n\n    ``nova-scheduler``\n\n* Related options:\n\n    scheduler_default_filters\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|host_mgr_default_filt_opt
name|'host_mgr_default_filt_opt'
op|'='
name|'cfg'
op|'.'
name|'ListOpt'
op|'('
string|'"scheduler_default_filters"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
op|'['
nl|'\n'
string|'"RetryFilter"'
op|','
nl|'\n'
string|'"AvailabilityZoneFilter"'
op|','
nl|'\n'
string|'"RamFilter"'
op|','
nl|'\n'
string|'"DiskFilter"'
op|','
nl|'\n'
string|'"ComputeFilter"'
op|','
nl|'\n'
string|'"ComputeCapabilitiesFilter"'
op|','
nl|'\n'
string|'"ImagePropertiesFilter"'
op|','
nl|'\n'
string|'"ServerGroupAntiAffinityFilter"'
op|','
nl|'\n'
string|'"ServerGroupAffinityFilter"'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nThis option is the list of filter class names that will be used for filtering\nhosts. The use of \'default\' in the name of this option implies that other\nfilters may sometimes be used, but that is not the case. These filters will be\napplied in the order they are listed, so place your most restrictive filters\nfirst to make the filtering process more efficient.\n\nThis option is only used by the FilterScheduler and its subclasses; if you use\na different scheduler, this option has no effect.\n\n* Services that use this:\n\n    ``nova-scheduler``\n\n* Related options:\n\n    All of the filters in this option *must* be present in the\n    \'scheduler_available_filters\' option, or a SchedulerHostFilterNotFound\n    exception will be raised.\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|host_mgr_sched_wgt_cls_opt
name|'host_mgr_sched_wgt_cls_opt'
op|'='
name|'cfg'
op|'.'
name|'ListOpt'
op|'('
string|'"scheduler_weight_classes"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
op|'['
string|'"nova.scheduler.weights.all_weighers"'
op|']'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nThis is a list of weigher class names. Only hosts which pass the filters are\nweighed. The weight for any host starts at 0, and the weighers order these\nhosts by adding to or subtracting from the weight assigned by the previous\nweigher. Weights may become negative.\n\nAn instance will be scheduled to one of the N most-weighted hosts, where N is\n\'scheduler_host_subset_size\'.\n\nBy default, this is set to all weighers that are included with Nova. If you\nwish to change this, replace this with a list of strings, where each element is\nthe path to a weigher.\n\nThis option is only used by the FilterScheduler and its subclasses; if you use\na different scheduler, this option has no effect.\n\n* Services that use this:\n\n    ``nova-scheduler``\n\n* Related options:\n\n    None\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|host_mgr_tracks_inst_chg_opt
name|'host_mgr_tracks_inst_chg_opt'
op|'='
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
string|'"scheduler_tracks_instance_changes"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'True'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nThe scheduler may need information about the instances on a host in order to\nevaluate its filters and weighers. The most common need for this information is\nfor the (anti-)affinity filters, which need to choose a host based on the\ninstances already running on a host.\n\nIf the configured filters and weighers do not need this information, disabling\nthis option will improve performance. It may also be disabled when the tracking\noverhead proves too heavy, although this will cause classes requiring host\nusage data to query the database on each request instead.\n\nThis option is only used by the FilterScheduler and its subclasses; if you use\na different scheduler, this option has no effect.\n\n* Services that use this:\n\n    ``nova-scheduler``\n\n* Related options:\n\n    None\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|rpc_sched_topic_opt
name|'rpc_sched_topic_opt'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|'"scheduler_topic"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|'"scheduler"'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nThis is the message queue topic that the scheduler \'listens\' on. It is used\nwhen the scheduler service is started up to configure the queue, and whenever\nan RPC call to the scheduler is made. There is almost never any reason to ever\nchange this value.\n\n* Services that use this:\n\n    ``nova-scheduler``\n\n* Related options:\n\n    None\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|scheduler_json_config_location_opt
name|'scheduler_json_config_location_opt'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
nl|'\n'
string|'"scheduler_json_config_location"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|'""'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nThe absolute path to the scheduler configuration JSON file, if any. This file\nlocation is monitored by the scheduler for changes and reloads it if needed. It\nis converted from JSON to a Python data structure, and passed into the\nfiltering and weighing functions of the scheduler, which can use it for dynamic\nconfiguration.\n\n* Services that use this:\n\n    ``nova-scheduler``\n\n* Related options:\n\n    None\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|sched_driver_host_mgr_opt
name|'sched_driver_host_mgr_opt'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|'"scheduler_host_manager"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|'"nova.scheduler.host_manager.HostManager"'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nThe scheduler host manager class to use. Aside from the default, the only other\noption as of the Mitaka release is\n\'nova.scheduler.ironic_host_manager.IronicHostManager\', which should be used if\nyou\'re using Ironic to provision bare-metal instances.\n\n* Services that use this:\n\n    ``nova-scheduler``\n\n* Related options:\n\n    None\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|driver_opt
name|'driver_opt'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|'"scheduler_driver"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|'"nova.scheduler.filter_scheduler.FilterScheduler"'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nThe class of the driver used by the scheduler. This should be the full Python\npath to the class to be used. If nothing is specified in this option, the\nFilterScheduler is used.\n\nOther options are:\n\n    * \'nova.scheduler.caching_scheduler.CachingScheduler\' which aggressively\n    caches the system state for better individual scheduler performance at\n    the risk of more retries when running multiple schedulers.\n\n    * \'nova.scheduler.chance.ChanceScheduler\' which simply picks a host at\n    random.\n\n* Services that use this:\n\n    ``nova-scheduler``\n\n* Related options:\n\n    None\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|driver_period_opt
name|'driver_period_opt'
op|'='
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|'"scheduler_driver_task_period"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'60'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nThis value controls how often (in seconds) to run periodic tasks in the\nscheduler. The specific tasks that are run for each period are determined by\nthe particular scheduler being used.\n\nIf this is larger than the nova-service \'service_down_time\' setting, Nova may\nreport the scheduler service as down. This is because the scheduler driver is\nresponsible for sending a heartbeat and it will only do that as often as this\noption allows. As each scheduler can work a little differently than the others,\nbe sure to test this with your selected scheduler.\n\n* Services that use this:\n\n    ``nova-scheduler``\n\n* Related options:\n\n    ``nova-service service_down_time``\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|disk_allocation_ratio_opt
name|'disk_allocation_ratio_opt'
op|'='
name|'cfg'
op|'.'
name|'FloatOpt'
op|'('
string|'"disk_allocation_ratio"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'1.0'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nThis is the virtual disk to physical disk allocation ratio used by the\ndisk_filter.py script to determine if a host has sufficient disk space to fit a\nrequested instance. A ratio greater than 1.0 will result in over-subscription\nof the available physical disk, which can be useful for more efficiently\npacking instances created with images that don\'t use the entire virtual disk,\nsuch as sparse or compressed images. It can be set to a value between 0.0 and\n1.0 in order to preserve a percentage of the disk for uses other than\ninstances.\n\nThis option is only used by the FilterScheduler and its subclasses; if you use\na different scheduler, this option has no effect.\n\n* Services that use this:\n\n    ``nova-scheduler``\n\n* Related options:\n\n    None\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|isolated_img_opt
name|'isolated_img_opt'
op|'='
name|'cfg'
op|'.'
name|'ListOpt'
op|'('
string|'"isolated_images"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
op|'['
op|']'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nIf there is a need to restrict some images to only run on certain designated\nhosts, list those image UUIDs here.\n\nThis option is only used by the FilterScheduler and its subclasses; if you use\na different scheduler, this option has no effect. Also note that this setting\nonly affects scheduling if the \'IsolatedHostsFilter\' filter is enabled.\n\n* Services that use this:\n\n    ``nova-scheduler``\n\n* Related options:\n\n    scheduler/isolated_hosts\n    scheduler/restrict_isolated_hosts_to_isolated_images\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|isolated_host_opt
name|'isolated_host_opt'
op|'='
name|'cfg'
op|'.'
name|'ListOpt'
op|'('
string|'"isolated_hosts"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
op|'['
op|']'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nIf there is a need to restrict some images to only run on certain designated\nhosts, list those host names here.\n\nThis option is only used by the FilterScheduler and its subclasses; if you use\na different scheduler, this option has no effect. Also note that this setting\nonly affects scheduling if the \'IsolatedHostsFilter\' filter is enabled.\n\n* Services that use this:\n\n    ``nova-scheduler``\n\n* Related options:\n\n    scheduler/isolated_images\n    scheduler/restrict_isolated_hosts_to_isolated_images\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|restrict_iso_host_img_opt
name|'restrict_iso_host_img_opt'
op|'='
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
nl|'\n'
string|'"restrict_isolated_hosts_to_isolated_images"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'True'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nThis setting determines if the scheduler\'s isolated_hosts filter will allow\nnon-isolated images on a host designated as an isolated host. When set to True\n(the default), non-isolated images will not be allowed to be built on isolated\nhosts. When False, non-isolated images can be built on both isolated and\nnon-isolated hosts alike.\n\nThis option is only used by the FilterScheduler and its subclasses; if you use\na different scheduler, this option has no effect. Also note that this setting\nonly affects scheduling if the \'IsolatedHostsFilter\' filter is enabled. Even\nthen, this option doesn\'t affect the behavior of requests for isolated images,\nwhich will *always* be restricted to isolated hosts.\n\n* Services that use this:\n\n    ``nova-scheduler``\n\n* Related options:\n\n    scheduler/isolated_images\n    scheduler/isolated_hosts\n"""'
op|')'
newline|'\n'
nl|'\n'
comment|'# This option specifies an option group, so register separately'
nl|'\n'
DECL|variable|rpcapi_cap_opt
name|'rpcapi_cap_opt'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|'"scheduler"'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nSets a version cap (limit) for messages sent to scheduler services. In the\nsituation where there were multiple scheduler services running, and they were\nnot being upgraded together, you would set this to the lowest deployed version\nto guarantee that other services never send messages that any of your running\nschedulers cannot understand.\n\nThis is rarely needed in practice as most deployments run a single scheduler.\nIt exists mainly for design compatibility with the other services, such as\ncompute, which are routinely upgraded in a rolling fashion.\n\n* Services that use this:\n\n    ``nova-compute, nova-conductor``\n\n* Related options:\n\n    None\n"""'
op|')'
newline|'\n'
nl|'\n'
comment|'# These opts are registered as a separate OptGroup'
nl|'\n'
DECL|variable|trusted_opts
name|'trusted_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|'"attestation_server"'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nThe host to use as the attestation server.\n\nCloud computing pools can involve thousands of compute nodes located at\ndifferent geographical locations, making it difficult for cloud providers to\nidentify a node\'s trustworthiness. When using the Trusted filter, users can\nrequest that their VMs only be placed on nodes that have been verified by the\nattestation server specified in this option.\n\nThe value is a string, and can be either an IP address or FQDN.\n\nThis option is only used by the FilterScheduler and its subclasses; if you use\na different scheduler, this option has no effect. Also note that this setting\nonly affects scheduling if the \'TrustedFilter\' filter is enabled.\n\n* Services that use this:\n\n    ``nova-scheduler``\n\n* Related options:\n\n    attestation_server_ca_file\n    attestation_port\n    attestation_api_url\n    attestation_auth_blob\n    attestation_auth_timeout\n    attestation_insecure_ssl\n"""'
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|'"attestation_server_ca_file"'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nThe absolute path to the certificate to use for authentication when connecting\nto the attestation server. See the `attestation_server` help text for more\ninformation about host verification.\n\nThe value is a string, and must point to a file that is readable by the\nscheduler.\n\nThis option is only used by the FilterScheduler and its subclasses; if you use\na different scheduler, this option has no effect. Also note that this setting\nonly affects scheduling if the \'TrustedFilter\' filter is enabled.\n\n* Services that use this:\n\n    ``nova-scheduler``\n\n* Related options:\n\n    attestation_server\n    attestation_port\n    attestation_api_url\n    attestation_auth_blob\n    attestation_auth_timeout\n    attestation_insecure_ssl\n"""'
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|'"attestation_port"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|'"8443"'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nThe port to use when connecting to the attestation server. See the\n`attestation_server` help text for more information about host verification.\n\nValid values are strings, not integers, but must be digits only.\n\nThis option is only used by the FilterScheduler and its subclasses; if you use\na different scheduler, this option has no effect. Also note that this setting\nonly affects scheduling if the \'TrustedFilter\' filter is enabled.\n\n* Services that use this:\n\n    ``nova-scheduler``\n\n* Related options:\n\n    attestation_server\n    attestation_server_ca_file\n    attestation_api_url\n    attestation_auth_blob\n    attestation_auth_timeout\n    attestation_insecure_ssl\n"""'
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|'"attestation_api_url"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|'"/OpenAttestationWebServices/V1.0"'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nThe URL on the attestation server to use. See the `attestation_server` help\ntext for more information about host verification.\n\nThis value must be just that path portion of the full URL, as it will be joined\nto the host specified in the attestation_server option.\n\nThis option is only used by the FilterScheduler and its subclasses; if you use\na different scheduler, this option has no effect. Also note that this setting\nonly affects scheduling if the \'TrustedFilter\' filter is enabled.\n\n* Services that use this:\n\n    ``nova-scheduler``\n\n* Related options:\n\n    attestation_server\n    attestation_server_ca_file\n    attestation_port\n    attestation_auth_blob\n    attestation_auth_timeout\n    attestation_insecure_ssl\n"""'
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|'"attestation_auth_blob"'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nAttestation servers require a specific blob that is used to authenticate. The\ncontent and format of the blob are determined by the particular attestation\nserver being used. There is no default value; you must supply the value as\nspecified by your attestation service. See the `attestation_server` help text\nfor more information about host verification.\n\nThis option is only used by the FilterScheduler and its subclasses; if you use\na different scheduler, this option has no effect. Also note that this setting\nonly affects scheduling if the \'TrustedFilter\' filter is enabled.\n\n* Services that use this:\n\n    ``nova-scheduler``\n\n* Related options:\n\n    attestation_server\n    attestation_server_ca_file\n    attestation_port\n    attestation_api_url\n    attestation_auth_timeout\n    attestation_insecure_ssl\n"""'
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|'"attestation_auth_timeout"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'60'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nThis value controls how long a successful attestation is cached. Once this\nperiod has elapsed, a new attestation request will be made. See the\n`attestation_server` help text for more information about host verification.\n\nThe value is in seconds. Valid values must be positive integers for any\ncaching; setting this to zero or a negative value will result in calls to the\nattestation_server for every request, which may impact performance.\n\nThis option is only used by the FilterScheduler and its subclasses; if you use\na different scheduler, this option has no effect. Also note that this setting\nonly affects scheduling if the \'TrustedFilter\' filter is enabled.\n\n* Services that use this:\n\n    ``nova-scheduler``\n\n* Related options:\n\n    attestation_server\n    attestation_server_ca_file\n    attestation_port\n    attestation_api_url\n    attestation_auth_blob\n    attestation_insecure_ssl\n"""'
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
string|'"attestation_insecure_ssl"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'False'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nWhen set to True, the SSL certificate verification is skipped for the\nattestation service. See the `attestation_server` help text for more\ninformation about host verification.\n\nValid values are True or False. The default is False.\n\nThis option is only used by the FilterScheduler and its subclasses; if you use\na different scheduler, this option has no effect. Also note that this setting\nonly affects scheduling if the \'TrustedFilter\' filter is enabled.\n\n* Services that use this:\n\n    ``nova-scheduler``\n\n* Related options:\n\n    attestation_server\n    attestation_server_ca_file\n    attestation_port\n    attestation_api_url\n    attestation_auth_blob\n    attestation_auth_timeout\n"""'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|max_io_ops_per_host_opt
name|'max_io_ops_per_host_opt'
op|'='
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|'"max_io_ops_per_host"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'8'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|'"Tells filters to ignore hosts that have this many or more "'
nl|'\n'
string|'"instances currently in build, resize, snapshot, migrate, rescue "'
nl|'\n'
string|'"or unshelve task states"'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|agg_img_prop_iso_namespace_opt
name|'agg_img_prop_iso_namespace_opt'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
nl|'\n'
string|'"aggregate_image_properties_isolation_namespace"'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|'"Force the filter to consider only keys matching the given "'
nl|'\n'
string|'"namespace."'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|agg_img_prop_iso_separator_opt
name|'agg_img_prop_iso_separator_opt'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
nl|'\n'
string|'"aggregate_image_properties_isolation_separator"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|'"."'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|'"The separator used between the namespace and keys"'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|max_instances_per_host_opt
name|'max_instances_per_host_opt'
op|'='
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|'"max_instances_per_host"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'50'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|'"Ignore hosts that have too many instances"'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|ram_weight_mult_opt
name|'ram_weight_mult_opt'
op|'='
name|'cfg'
op|'.'
name|'FloatOpt'
op|'('
string|'"ram_weight_multiplier"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'1.0'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|'"Multiplier used for weighing ram. Negative numbers mean to "'
nl|'\n'
string|'"stack vs spread."'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|io_ops_weight_mult_opt
name|'io_ops_weight_mult_opt'
op|'='
name|'cfg'
op|'.'
name|'FloatOpt'
op|'('
string|'"io_ops_weight_multiplier"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
op|'-'
number|'1.0'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|'"Multiplier used for weighing host io ops. Negative numbers mean "'
nl|'\n'
string|'"a preference to choose light workload compute hosts."'
op|')'
newline|'\n'
nl|'\n'
comment|'# These opts are registered as a separate OptGroup'
nl|'\n'
DECL|variable|metrics_weight_opts
name|'metrics_weight_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'FloatOpt'
op|'('
string|'"weight_multiplier"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'1.0'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|'"Multiplier used for weighing metrics."'
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'ListOpt'
op|'('
string|'"weight_setting"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
op|'['
op|']'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|'"How the metrics are going to be weighed. This should be in "'
nl|'\n'
string|'"the form of \'<name1>=<ratio1>, <name2>=<ratio2>, ...\', "'
nl|'\n'
string|'"where <nameX> is one of the metrics to be weighed, and "'
nl|'\n'
string|'"<ratioX> is the corresponding ratio. So for "'
nl|'\n'
string|'"\'name1=1.0, name2=-1.0\' The final weight would be "'
nl|'\n'
string|'"name1.value * 1.0 + name2.value * -1.0."'
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
string|'"required"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'True'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|'"How to treat the unavailable metrics. When a metric is NOT "'
nl|'\n'
string|'"available for a host, if it is set to be True, it would "'
nl|'\n'
string|'"raise an exception, so it is recommended to use the "'
nl|'\n'
string|'"scheduler filter MetricFilter to filter out those hosts. If "'
nl|'\n'
string|'"it is set to be False, the unavailable metric would be "'
nl|'\n'
string|'"treated as a negative factor in weighing process, the "'
nl|'\n'
string|'"returned value would be set by the option "'
nl|'\n'
string|'"weight_of_unavailable."'
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'FloatOpt'
op|'('
string|'"weight_of_unavailable"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'float'
op|'('
op|'-'
number|'10000.0'
op|')'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|'"The final weight value to be returned if required is set to "'
nl|'\n'
string|'"False and any one of the metrics set by weight_setting is "'
nl|'\n'
string|'"unavailable."'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|scheduler_max_att_opt
name|'scheduler_max_att_opt'
op|'='
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|'"scheduler_max_attempts"'
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'3'
op|','
nl|'\n'
DECL|variable|min
name|'min'
op|'='
number|'1'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|'"Maximum number of attempts to schedule an instance"'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|soft_affinity_weight_opt
name|'soft_affinity_weight_opt'
op|'='
name|'cfg'
op|'.'
name|'FloatOpt'
op|'('
string|"'soft_affinity_weight_multiplier'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'1.0'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Multiplier used for weighing hosts '"
nl|'\n'
string|"'for group soft-affinity. Only a '"
nl|'\n'
string|"'positive value is meaningful. Negative '"
nl|'\n'
string|"'means that the behavior will change to '"
nl|'\n'
string|"'the opposite, which is soft-anti-affinity.'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|soft_anti_affinity_weight_opt
name|'soft_anti_affinity_weight_opt'
op|'='
name|'cfg'
op|'.'
name|'FloatOpt'
op|'('
nl|'\n'
string|"'soft_anti_affinity_weight_multiplier'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'1.0'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Multiplier used for weighing hosts '"
nl|'\n'
string|"'for group soft-anti-affinity. Only a '"
nl|'\n'
string|"'positive value is meaningful. Negative '"
nl|'\n'
string|"'means that the behavior will change to '"
nl|'\n'
string|"'the opposite, which is soft-affinity.'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|default_opts
name|'default_opts'
op|'='
op|'['
name|'host_subset_size_opt'
op|','
nl|'\n'
name|'bm_default_filter_opt'
op|','
nl|'\n'
name|'use_bm_filters_opt'
op|','
nl|'\n'
name|'host_mgr_avail_filt_opt'
op|','
nl|'\n'
name|'host_mgr_default_filt_opt'
op|','
nl|'\n'
name|'host_mgr_sched_wgt_cls_opt'
op|','
nl|'\n'
name|'host_mgr_tracks_inst_chg_opt'
op|','
nl|'\n'
name|'rpc_sched_topic_opt'
op|','
nl|'\n'
name|'sched_driver_host_mgr_opt'
op|','
nl|'\n'
name|'driver_opt'
op|','
nl|'\n'
name|'driver_period_opt'
op|','
nl|'\n'
name|'scheduler_json_config_location_opt'
op|','
nl|'\n'
name|'disk_allocation_ratio_opt'
op|','
nl|'\n'
name|'isolated_img_opt'
op|','
nl|'\n'
name|'isolated_host_opt'
op|','
nl|'\n'
name|'restrict_iso_host_img_opt'
op|','
nl|'\n'
name|'max_io_ops_per_host_opt'
op|','
nl|'\n'
name|'agg_img_prop_iso_namespace_opt'
op|','
nl|'\n'
name|'agg_img_prop_iso_separator_opt'
op|','
nl|'\n'
name|'max_instances_per_host_opt'
op|','
nl|'\n'
name|'ram_weight_mult_opt'
op|','
nl|'\n'
name|'io_ops_weight_mult_opt'
op|','
nl|'\n'
name|'scheduler_max_att_opt'
op|','
nl|'\n'
name|'soft_affinity_weight_opt'
op|','
nl|'\n'
name|'soft_anti_affinity_weight_opt'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|register_opts
name|'def'
name|'register_opts'
op|'('
name|'conf'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'conf'
op|'.'
name|'register_opts'
op|'('
name|'default_opts'
op|')'
newline|'\n'
name|'conf'
op|'.'
name|'register_opt'
op|'('
name|'rpcapi_cap_opt'
op|','
name|'UPGRADE_GROUP_NAME'
op|')'
newline|'\n'
name|'trust_group'
op|'='
name|'cfg'
op|'.'
name|'OptGroup'
op|'('
name|'name'
op|'='
name|'TRUSTED_GROUP_NAME'
op|','
nl|'\n'
name|'title'
op|'='
string|'"Trust parameters"'
op|')'
newline|'\n'
name|'conf'
op|'.'
name|'register_group'
op|'('
name|'trust_group'
op|')'
newline|'\n'
name|'conf'
op|'.'
name|'register_opts'
op|'('
name|'trusted_opts'
op|','
name|'group'
op|'='
name|'trust_group'
op|')'
newline|'\n'
name|'conf'
op|'.'
name|'register_opts'
op|'('
name|'metrics_weight_opts'
op|','
name|'group'
op|'='
name|'METRICS_GROUP_NAME'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|list_opts
dedent|''
name|'def'
name|'list_opts'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'{'
name|'DEFAULT_GROUP_NAME'
op|':'
name|'default_opts'
op|','
nl|'\n'
name|'UPGRADE_GROUP_NAME'
op|':'
op|'['
name|'rpcapi_cap_opt'
op|']'
op|','
nl|'\n'
name|'TRUSTED_GROUP_NAME'
op|':'
name|'trusted_opts'
op|','
nl|'\n'
name|'METRICS_GROUP_NAME'
op|':'
name|'metrics_weight_opts'
op|','
nl|'\n'
op|'}'
newline|'\n'
dedent|''
endmarker|''
end_unit
