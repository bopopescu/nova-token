begin_unit
comment|'# Copyright (c) 2016 OpenStack Foundation'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'keystoneauth1'
name|'import'
name|'loading'
name|'as'
name|'ks_loading'
newline|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
DECL|variable|cinder_group
name|'cinder_group'
op|'='
name|'cfg'
op|'.'
name|'OptGroup'
op|'('
nl|'\n'
string|"'cinder'"
op|','
nl|'\n'
DECL|variable|title
name|'title'
op|'='
string|"'Cinder Options'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|cinder_opts
name|'cinder_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'catalog_info'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'volumev2:cinderv2:publicURL'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Info to match when looking for cinder in the service '"
nl|'\n'
string|"'catalog. Format is: separated values of the form: '"
nl|'\n'
string|"'<service_type>:<service_name>:<endpoint_type>'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'endpoint_template'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Override service catalog lookup with template for cinder '"
nl|'\n'
string|"'endpoint e.g. http://localhost:8776/v1/%(project_id)s'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'os_region_name'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Region name of this node'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'http_retries'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'3'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Number of cinderclient retries on failed http calls'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
string|"'cross_az_attach'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'True'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Allow attach between instance and volume in different '"
nl|'\n'
string|"'availability zones. If False, volumes attached to an '"
nl|'\n'
string|"'instance must be in the same availability zone in '"
nl|'\n'
string|"'Cinder as the instance availability zone in Nova. '"
nl|'\n'
string|"'This also means care should be taken when booting an '"
nl|'\n'
string|'\'instance from a volume where source is not "volume" \''
nl|'\n'
string|"'because Nova will attempt to create a volume using '"
nl|'\n'
string|"'the same availability zone as what is assigned to the '"
nl|'\n'
string|"'instance. If that AZ is not in Cinder (or '"
nl|'\n'
string|"'allow_availability_zone_fallback=False in cinder.conf), '"
nl|'\n'
string|"'the volume create request will fail and the instance '"
nl|'\n'
string|"'will fail the build request.'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|deprecated
name|'deprecated'
op|'='
op|'{'
string|"'timeout'"
op|':'
op|'['
name|'cfg'
op|'.'
name|'DeprecatedOpt'
op|'('
string|"'http_timeout'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
name|'cinder_group'
op|'.'
name|'name'
op|')'
op|']'
op|','
nl|'\n'
string|"'cafile'"
op|':'
op|'['
name|'cfg'
op|'.'
name|'DeprecatedOpt'
op|'('
string|"'ca_certificates_file'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
name|'cinder_group'
op|'.'
name|'name'
op|')'
op|']'
op|','
nl|'\n'
string|"'insecure'"
op|':'
op|'['
name|'cfg'
op|'.'
name|'DeprecatedOpt'
op|'('
string|"'api_insecure'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
name|'cinder_group'
op|'.'
name|'name'
op|')'
op|']'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|register_opts
name|'def'
name|'register_opts'
op|'('
name|'conf'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'conf'
op|'.'
name|'register_group'
op|'('
name|'cinder_group'
op|')'
newline|'\n'
name|'conf'
op|'.'
name|'register_opts'
op|'('
name|'cinder_opts'
op|','
name|'group'
op|'='
name|'cinder_group'
op|')'
newline|'\n'
name|'ks_loading'
op|'.'
name|'register_session_conf_options'
op|'('
name|'conf'
op|','
nl|'\n'
name|'cinder_group'
op|'.'
name|'name'
op|','
nl|'\n'
name|'deprecated_opts'
op|'='
name|'deprecated'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|list_opts
dedent|''
name|'def'
name|'list_opts'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'{'
nl|'\n'
name|'cinder_group'
op|'.'
name|'name'
op|':'
name|'cinder_opts'
nl|'\n'
op|'}'
newline|'\n'
dedent|''
endmarker|''
end_unit
