begin_unit
comment|'# Copyright 2016 OpenStack Foundation'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
nl|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
DECL|variable|upgrade_group
name|'upgrade_group'
op|'='
name|'cfg'
op|'.'
name|'OptGroup'
op|'('
string|"'upgrade_levels'"
op|','
nl|'\n'
DECL|variable|title
name|'title'
op|'='
string|"'Upgrade levels Options'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|rpcapi_cap_cells_opt
name|'rpcapi_cap_cells_opt'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'cells'"
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nCells version\n\nCells client-side RPC API version. Use this option to set a version\ncap for messages sent to local cells services.\n\nPossible values:\n\n* None: This is the default value.\n* grizzly: message version 1.6.\n* havana: message version 1.24.\n* icehouse: message version 1.27.\n* juno: message version 1.29.\n* kilo: message version 1.34.\n* liberty: message version 1.37.\n\nServices which consume this:\n\n* nova-cells\n\nRelated options:\n\n* None\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|rpcapi_cap_intercell_opt
name|'rpcapi_cap_intercell_opt'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'intercell'"
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nIntercell version\n\nIntercell RPC API is the client side of the Cell<->Cell RPC API.\nUse this option to set a version cap for messages sent between\ncells services.\n\nPossible values:\n\n* None: This is the default value.\n* grizzly: message version 1.0.\n\nServices which consume this:\n\n* nova-cells\n\nRelated options:\n\n* None\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|rpcapi_cap_cert_opt
name|'rpcapi_cap_cert_opt'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|'"cert"'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\n\nSpecifies the maximum version for messages sent from cert services. This should\nbe the minimum value that is supported by all of the deployed cert services.\n\nPossible values:\n\nAny valid OpenStack release name, in lower case, such as \'mitaka\' or \'liberty\'.\nAlternatively, it can be any string representing a version number in the format\n\'N.N\'; for example, possible values might be \'1.12\' or \'2.0\'.\n\nServices which consume this:\n\n* nova-cert\n\nRelated options:\n\n* None\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|rpcapi_cap_compute_opt
name|'rpcapi_cap_compute_opt'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'compute'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Set a version cap for messages sent to compute services. '"
nl|'\n'
string|'\'Set this option to "auto" if you want to let the compute RPC \''
nl|'\n'
string|"'module automatically determine what version to use based on '"
nl|'\n'
string|"'the service versions in the deployment. '"
nl|'\n'
string|"'Otherwise, you can set this to a specific version to pin this '"
nl|'\n'
string|"'service to messages at a particular level. '"
nl|'\n'
string|"'All services of a single type (i.e. compute) should be '"
nl|'\n'
string|"'configured to use the same version, and it should be set '"
nl|'\n'
string|"'to the minimum commonly-supported version of all those '"
nl|'\n'
string|"'services in the deployment.'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|rpcapi_cap_scheduler_opt
name|'rpcapi_cap_scheduler_opt'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|'"scheduler"'
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nSets a version cap (limit) for messages sent to scheduler services. In the\nsituation where there were multiple scheduler services running, and they were\nnot being upgraded together, you would set this to the lowest deployed version\nto guarantee that other services never send messages that any of your running\nschedulers cannot understand.\n\nThis is rarely needed in practice as most deployments run a single scheduler.\nIt exists mainly for design compatibility with the other services, such as\ncompute, which are routinely upgraded in a rolling fashion.\n\nServices that use this:\n\n* nova-compute, nova-conductor\n\nRelated options:\n\n* None\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|rpcapi_cap_conductor_opt
name|'rpcapi_cap_conductor_opt'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'conductor'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Set a version cap for messages sent to conductor services'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|rpcapi_cap_console_opt
name|'rpcapi_cap_console_opt'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'console'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Set a version cap for messages sent to console services'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|rpcapi_cap_consoleauth_opt
name|'rpcapi_cap_consoleauth_opt'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'consoleauth'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Set a version cap for messages sent to consoleauth services'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|rpcapi_cap_network_opt
name|'rpcapi_cap_network_opt'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'network'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Set a version cap for messages sent to network services'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|rpcapi_cap_baseapi_opt
name|'rpcapi_cap_baseapi_opt'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'baseapi'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Set a version cap for messages sent to the base api in any '"
nl|'\n'
string|"'service'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|ALL_OPTS
name|'ALL_OPTS'
op|'='
op|'['
name|'rpcapi_cap_cells_opt'
op|','
nl|'\n'
name|'rpcapi_cap_intercell_opt'
op|','
nl|'\n'
name|'rpcapi_cap_cert_opt'
op|','
nl|'\n'
name|'rpcapi_cap_compute_opt'
op|','
nl|'\n'
name|'rpcapi_cap_scheduler_opt'
op|','
nl|'\n'
name|'rpcapi_cap_conductor_opt'
op|','
nl|'\n'
name|'rpcapi_cap_console_opt'
op|','
nl|'\n'
name|'rpcapi_cap_consoleauth_opt'
op|','
nl|'\n'
name|'rpcapi_cap_network_opt'
op|','
nl|'\n'
name|'rpcapi_cap_baseapi_opt'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|register_opts
name|'def'
name|'register_opts'
op|'('
name|'conf'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'conf'
op|'.'
name|'register_group'
op|'('
name|'upgrade_group'
op|')'
newline|'\n'
name|'conf'
op|'.'
name|'register_opts'
op|'('
name|'ALL_OPTS'
op|','
name|'group'
op|'='
name|'upgrade_group'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|list_opts
dedent|''
name|'def'
name|'list_opts'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'{'
name|'upgrade_group'
op|':'
name|'ALL_OPTS'
op|'}'
newline|'\n'
dedent|''
endmarker|''
end_unit
