begin_unit
comment|'# Copyright (c) 2010 OpenStack Foundation'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
DECL|variable|vnc_group
name|'vnc_group'
op|'='
name|'cfg'
op|'.'
name|'OptGroup'
op|'('
nl|'\n'
string|"'vnc'"
op|','
nl|'\n'
DECL|variable|title
name|'title'
op|'='
string|"'VNC options'"
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nVirtual Network Computer (VNC) can be used to provide remote desktop\nconsole access to instances for tenants and/or administrators."""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|enabled
name|'enabled'
op|'='
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
nl|'\n'
string|"'enabled'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'True'
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
DECL|variable|deprecated_name
name|'deprecated_name'
op|'='
string|"'vnc_enabled'"
op|','
nl|'\n'
name|'help'
op|'='
string|'"""Enable VNC related features.\n\nGuests will get created with graphical devices to support this. Clients\n(for example Horizon) can then establish a VNC connection to the guest.\n\nPossible values:\n\n* True: Enables the feature\n* False: Disables the feature\n\nServices which consume this:\n\n* ``nova-compute``\n\nRelated options:\n\n* None\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|keymap
name|'keymap'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
nl|'\n'
string|"'keymap'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'en-us'"
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
DECL|variable|deprecated_name
name|'deprecated_name'
op|'='
string|"'vnc_keymap'"
op|','
nl|'\n'
name|'help'
op|'='
string|'"""Keymap for VNC.\n\nThe keyboard mapping (keymap) determines which keyboard layout a VNC\nsession should use by default.\n\nPossible values:\n\n* A keyboard layout which is supported by the underlying hypervisor on\n  this node. This is usually an \'IETF language tag\' (for example\n  \'en-us\').  If you use QEMU as hypervisor, you should find the  list\n  of supported keyboard layouts at ``/usr/share/qemu/keymaps``.\n\nServices which consume this:\n\n* ``nova-compute``\n\nRelated options:\n\n* None\n"""'
op|')'
newline|'\n'
nl|'\n'
comment|'# TODO(sfinucan): This should be an IPOpt'
nl|'\n'
DECL|variable|vncserver_listen
name|'vncserver_listen'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
nl|'\n'
string|"'vncserver_listen'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'127.0.0.1'"
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nThe IP address on which an instance should listen to for incoming VNC\nconnection requests on this node.\n\nPossible values:\n\n* An IP address\n\nServices which consume this:\n\n* ``nova-compute``\n\nRelated options:\n\n* None\n"""'
op|')'
newline|'\n'
nl|'\n'
comment|'# TODO(sfinucan): This should be an IPOpt'
nl|'\n'
DECL|variable|vncserver_proxyclient_address
name|'vncserver_proxyclient_address'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
nl|'\n'
string|"'vncserver_proxyclient_address'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'127.0.0.1'"
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nPrivate, internal address of VNC console proxy.\n\nThe VNC proxy is an OpenStack component that enables compute service\nusers to access their instances through VNC clients.\n\nThis option sets the private address to which proxy clients, such as\n``nova-xvpvncproxy``, should connect to.\n\nPossible values:\n\n* An IP address\n\nServices which consume this:\n\n* ``nova-compute``\n\nRelated options:\n\n* None\n"""'
op|')'
newline|'\n'
nl|'\n'
comment|'# TODO(sfinucan): This should be an IPOpt'
nl|'\n'
DECL|variable|novncproxy_host
name|'novncproxy_host'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
nl|'\n'
string|"'novncproxy_host'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'0.0.0.0'"
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nIP address that the noVNC console proxy should bind to.\n\nThe VNC proxy is an OpenStack component that enables compute service\nusers to access their instances through VNC clients. noVNC provides\nVNC support through a websocket-based client.\n\nThis option sets the private address to which the noVNC console proxy\nservice should bind to.\n\nPossible values:\n\n* An IP address\n\nServices which consume this:\n\n* ``nova-compute``\n\nRelated options:\n\n* novncproxy_port\n* novncproxy_base_url\n"""'
op|')'
newline|'\n'
nl|'\n'
comment|'# TODO(sfinucan): This should be a PortOpt'
nl|'\n'
DECL|variable|novncproxy_port
name|'novncproxy_port'
op|'='
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
nl|'\n'
string|"'novncproxy_port'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'6080'
op|','
nl|'\n'
DECL|variable|min
name|'min'
op|'='
number|'1'
op|','
nl|'\n'
DECL|variable|max
name|'max'
op|'='
number|'65535'
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nPort that the noVNC console proxy should bind to.\n\nThe VNC proxy is an OpenStack component that enables compute service\nusers to access their instances through VNC clients. noVNC provides\nVNC support through a websocket-based client.\n\nThis option sets the private port to which the noVNC console proxy\nservice should bind to.\n\nPossible values:\n\n* A port number\n\nServices which consume this:\n\n* ``nova-compute``\n\nRelated options:\n\n* novncproxy_host\n* novncproxy_base_url\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|novncproxy_base_url
name|'novncproxy_base_url'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
nl|'\n'
string|"'novncproxy_base_url'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'http://127.0.0.1:6080/vnc_auto.html'"
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nPublic address of noVNC VNC console proxy.\n\nThe VNC proxy is an OpenStack component that enables compute service\nusers to access their instances through VNC clients. noVNC provides\nVNC support through a websocket-based client.\n\nThis option sets the public base URL to which client systems will\nconnect. noVNC clients can use this address to connect to the noVNC\ninstance and, by extension, the VNC sessions.\n\nPossible values:\n\n* A URL\n\nServices which consume this:\n\n* ``nova-compute``\n\nRelated options:\n\n* novncproxy_host\n* novncproxy_port\n"""'
op|')'
newline|'\n'
nl|'\n'
comment|'# TODO(sfinucan): This should be an IPOpt'
nl|'\n'
DECL|variable|xvpvncproxy_host
name|'xvpvncproxy_host'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
nl|'\n'
string|"'xvpvncproxy_host'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'0.0.0.0'"
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nIP address that the XVP VNC console proxy should bind to.\n\nThe VNC proxy is an OpenStack component that enables compute service\nusers to access their instances through VNC clients. Xen provides\nthe Xenserver VNC Proxy, or XVP, as an alternative to the\nwebsocket-based noVNC proxy used by Libvirt. In contrast to noVNC,\nXVP clients are Java-based.\n\nThis option sets the private address to which the XVP VNC console proxy\nservice should bind to.\n\nPossible values:\n\n* An IP address\n\nServices which consume this:\n\n* ``nova-compute``\n\nRelated options:\n\n* xvpvncproxy_port\n* xvpvncproxy_base_url\n"""'
op|')'
newline|'\n'
nl|'\n'
comment|'# TODO(sfinucan): This should be a PortOpt'
nl|'\n'
DECL|variable|xvpvncproxy_port
name|'xvpvncproxy_port'
op|'='
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
nl|'\n'
string|"'xvpvncproxy_port'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'6081'
op|','
nl|'\n'
DECL|variable|min
name|'min'
op|'='
number|'1'
op|','
nl|'\n'
DECL|variable|max
name|'max'
op|'='
number|'65535'
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nPort that the XVP VNC console proxy should bind to.\n\nThe VNC proxy is an OpenStack component that enables compute service\nusers to access their instances through VNC clients. Xen provides\nthe Xenserver VNC Proxy, or XVP, as an alternative to the\nwebsocket-based noVNC proxy used by Libvirt. In contrast to noVNC,\nXVP clients are Java-based.\n\nThis option sets the private port to which the XVP VNC console proxy\nservice should bind to.\n\nPossible values:\n\n* A port number\n\nServices which consume this:\n\n* ``nova-compute``\n\nRelated options:\n\n* xvpvncproxy_host\n* xvpvncproxy_base_url\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|xvpvncproxy_base_url
name|'xvpvncproxy_base_url'
op|'='
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
nl|'\n'
string|"'xvpvncproxy_base_url'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'http://127.0.0.1:6081/console'"
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
name|'help'
op|'='
string|'"""\nPublic address of XVP VNC console proxy.\n\nThe VNC proxy is an OpenStack component that enables compute service\nusers to access their instances through VNC clients. Xen provides\nthe Xenserver VNC Proxy, or XVP, as an alternative to the\nwebsocket-based noVNC proxy used by Libvirt. In contrast to noVNC,\nXVP clients are Java-based.\n\nThis option sets the public base URL to which client systems will\nconnect. XVP clients can use this address to connect to the XVP\ninstance and, by extension, the VNC sessions.\n\nPossible values:\n\n* A URL\n\nServices which consume this:\n\n* ``nova-compute``\n\nRelated options:\n\n* xvpvncproxy_host\n* xvpvncproxy_port\n"""'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|ALL_OPTS
name|'ALL_OPTS'
op|'='
op|'['
nl|'\n'
name|'enabled'
op|','
nl|'\n'
name|'keymap'
op|','
nl|'\n'
name|'vncserver_listen'
op|','
nl|'\n'
name|'vncserver_proxyclient_address'
op|','
nl|'\n'
name|'novncproxy_host'
op|','
nl|'\n'
name|'novncproxy_port'
op|','
nl|'\n'
name|'novncproxy_base_url'
op|','
nl|'\n'
name|'xvpvncproxy_host'
op|','
nl|'\n'
name|'xvpvncproxy_port'
op|','
nl|'\n'
name|'xvpvncproxy_base_url'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|CLI_OPTS
name|'CLI_OPTS'
op|'='
op|'['
nl|'\n'
name|'novncproxy_host'
op|','
nl|'\n'
name|'novncproxy_port'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|register_opts
name|'def'
name|'register_opts'
op|'('
name|'conf'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'conf'
op|'.'
name|'register_group'
op|'('
name|'vnc_group'
op|')'
newline|'\n'
name|'conf'
op|'.'
name|'register_opts'
op|'('
name|'ALL_OPTS'
op|','
name|'group'
op|'='
name|'vnc_group'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|register_cli_opts
dedent|''
name|'def'
name|'register_cli_opts'
op|'('
name|'conf'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'conf'
op|'.'
name|'register_cli_opts'
op|'('
name|'CLI_OPTS'
op|','
name|'group'
op|'='
name|'vnc_group'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|list_opts
dedent|''
name|'def'
name|'list_opts'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'{'
name|'vnc_group'
op|':'
name|'ALL_OPTS'
op|'}'
newline|'\n'
dedent|''
endmarker|''
end_unit
