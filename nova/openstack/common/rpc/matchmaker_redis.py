begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'#    Copyright 2013 Cloudscaling Group, Inc'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
string|'"""\nThe MatchMaker classes should accept a Topic or Fanout exchange key and\nreturn keys for direct exchanges, per (approximate) AMQP parlance.\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'importutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'rpc'
name|'import'
name|'matchmaker'
name|'as'
name|'mm_common'
newline|'\n'
nl|'\n'
DECL|variable|redis
name|'redis'
op|'='
name|'importutils'
op|'.'
name|'try_import'
op|'('
string|"'redis'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|matchmaker_redis_opts
name|'matchmaker_redis_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'host'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'127.0.0.1'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Host to locate redis'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'port'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'6379'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Use this port to connect to redis host.'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'password'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'None'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Password for Redis server. (optional)'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
DECL|variable|opt_group
name|'opt_group'
op|'='
name|'cfg'
op|'.'
name|'OptGroup'
op|'('
name|'name'
op|'='
string|"'matchmaker_redis'"
op|','
nl|'\n'
DECL|variable|title
name|'title'
op|'='
string|"'Options for Redis-based MatchMaker'"
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'register_group'
op|'('
name|'opt_group'
op|')'
newline|'\n'
name|'CONF'
op|'.'
name|'register_opts'
op|'('
name|'matchmaker_redis_opts'
op|','
name|'opt_group'
op|')'
newline|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RedisExchange
name|'class'
name|'RedisExchange'
op|'('
name|'mm_common'
op|'.'
name|'Exchange'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'matchmaker'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'matchmaker'
op|'='
name|'matchmaker'
newline|'\n'
name|'self'
op|'.'
name|'redis'
op|'='
name|'matchmaker'
op|'.'
name|'redis'
newline|'\n'
name|'super'
op|'('
name|'RedisExchange'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RedisTopicExchange
dedent|''
dedent|''
name|'class'
name|'RedisTopicExchange'
op|'('
name|'RedisExchange'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Exchange where all topic keys are split, sending to second half.\n    i.e. "compute.host" sends a message to "compute" running on "host"\n    """'
newline|'\n'
DECL|member|run
name|'def'
name|'run'
op|'('
name|'self'
op|','
name|'topic'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'member_name'
op|'='
name|'self'
op|'.'
name|'redis'
op|'.'
name|'srandmember'
op|'('
name|'topic'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'member_name'
op|':'
newline|'\n'
comment|'# If this happens, there are no'
nl|'\n'
comment|'# longer any members.'
nl|'\n'
indent|'                '
name|'break'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'matchmaker'
op|'.'
name|'is_alive'
op|'('
name|'topic'
op|','
name|'member_name'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'host'
op|'='
name|'member_name'
op|'.'
name|'split'
op|'('
string|"'.'"
op|','
number|'1'
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'return'
op|'['
op|'('
name|'member_name'
op|','
name|'host'
op|')'
op|']'
newline|'\n'
dedent|''
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RedisFanoutExchange
dedent|''
dedent|''
name|'class'
name|'RedisFanoutExchange'
op|'('
name|'RedisExchange'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Return a list of all hosts.\n    """'
newline|'\n'
DECL|member|run
name|'def'
name|'run'
op|'('
name|'self'
op|','
name|'topic'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'topic'
op|'='
name|'topic'
op|'.'
name|'split'
op|'('
string|"'~'"
op|','
number|'1'
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'hosts'
op|'='
name|'self'
op|'.'
name|'redis'
op|'.'
name|'smembers'
op|'('
name|'topic'
op|')'
newline|'\n'
name|'good_hosts'
op|'='
name|'filter'
op|'('
nl|'\n'
name|'lambda'
name|'host'
op|':'
name|'self'
op|'.'
name|'matchmaker'
op|'.'
name|'is_alive'
op|'('
name|'topic'
op|','
name|'host'
op|')'
op|','
name|'hosts'
op|')'
newline|'\n'
nl|'\n'
name|'return'
op|'['
op|'('
name|'x'
op|','
name|'x'
op|'.'
name|'split'
op|'('
string|"'.'"
op|','
number|'1'
op|')'
op|'['
number|'1'
op|']'
op|')'
name|'for'
name|'x'
name|'in'
name|'good_hosts'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MatchMakerRedis
dedent|''
dedent|''
name|'class'
name|'MatchMakerRedis'
op|'('
name|'mm_common'
op|'.'
name|'HeartbeatMatchMakerBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    MatchMaker registering and looking-up hosts with a Redis server.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'MatchMakerRedis'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'redis'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ImportError'
op|'('
string|'"Failed to import module redis."'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'redis'
op|'='
name|'redis'
op|'.'
name|'StrictRedis'
op|'('
nl|'\n'
name|'host'
op|'='
name|'CONF'
op|'.'
name|'matchmaker_redis'
op|'.'
name|'host'
op|','
nl|'\n'
name|'port'
op|'='
name|'CONF'
op|'.'
name|'matchmaker_redis'
op|'.'
name|'port'
op|','
nl|'\n'
name|'password'
op|'='
name|'CONF'
op|'.'
name|'matchmaker_redis'
op|'.'
name|'password'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'add_binding'
op|'('
name|'mm_common'
op|'.'
name|'FanoutBinding'
op|'('
op|')'
op|','
name|'RedisFanoutExchange'
op|'('
name|'self'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'add_binding'
op|'('
name|'mm_common'
op|'.'
name|'DirectBinding'
op|'('
op|')'
op|','
name|'mm_common'
op|'.'
name|'DirectExchange'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'add_binding'
op|'('
name|'mm_common'
op|'.'
name|'TopicBinding'
op|'('
op|')'
op|','
name|'RedisTopicExchange'
op|'('
name|'self'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|ack_alive
dedent|''
name|'def'
name|'ack_alive'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'topic'
op|'='
string|'"%s.%s"'
op|'%'
op|'('
name|'key'
op|','
name|'host'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'redis'
op|'.'
name|'expire'
op|'('
name|'topic'
op|','
name|'CONF'
op|'.'
name|'matchmaker_heartbeat_ttl'
op|')'
op|':'
newline|'\n'
comment|'# If we could not update the expiration, the key'
nl|'\n'
comment|'# might have been pruned. Re-register, creating a new'
nl|'\n'
comment|'# key in Redis.'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'register'
op|'('
name|'self'
op|'.'
name|'topic_host'
op|'['
name|'host'
op|']'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
DECL|member|is_alive
dedent|''
dedent|''
name|'def'
name|'is_alive'
op|'('
name|'self'
op|','
name|'topic'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'redis'
op|'.'
name|'ttl'
op|'('
name|'host'
op|')'
op|'=='
op|'-'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'expire'
op|'('
name|'topic'
op|','
name|'host'
op|')'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|expire
dedent|''
name|'def'
name|'expire'
op|'('
name|'self'
op|','
name|'topic'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'self'
op|'.'
name|'redis'
op|'.'
name|'pipeline'
op|'('
op|')'
name|'as'
name|'pipe'
op|':'
newline|'\n'
indent|'            '
name|'pipe'
op|'.'
name|'multi'
op|'('
op|')'
newline|'\n'
name|'pipe'
op|'.'
name|'delete'
op|'('
name|'host'
op|')'
newline|'\n'
name|'pipe'
op|'.'
name|'srem'
op|'('
name|'topic'
op|','
name|'host'
op|')'
newline|'\n'
name|'pipe'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|backend_register
dedent|''
dedent|''
name|'def'
name|'backend_register'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'key_host'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'self'
op|'.'
name|'redis'
op|'.'
name|'pipeline'
op|'('
op|')'
name|'as'
name|'pipe'
op|':'
newline|'\n'
indent|'            '
name|'pipe'
op|'.'
name|'multi'
op|'('
op|')'
newline|'\n'
name|'pipe'
op|'.'
name|'sadd'
op|'('
name|'key'
op|','
name|'key_host'
op|')'
newline|'\n'
nl|'\n'
comment|'# No value is needed, we just'
nl|'\n'
comment|"# care if it exists. Sets aren't viable"
nl|'\n'
comment|'# because only keys can expire.'
nl|'\n'
name|'pipe'
op|'.'
name|'set'
op|'('
name|'key_host'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
name|'pipe'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|backend_unregister
dedent|''
dedent|''
name|'def'
name|'backend_unregister'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'key_host'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'self'
op|'.'
name|'redis'
op|'.'
name|'pipeline'
op|'('
op|')'
name|'as'
name|'pipe'
op|':'
newline|'\n'
indent|'            '
name|'pipe'
op|'.'
name|'multi'
op|'('
op|')'
newline|'\n'
name|'pipe'
op|'.'
name|'srem'
op|'('
name|'key'
op|','
name|'key_host'
op|')'
newline|'\n'
name|'pipe'
op|'.'
name|'delete'
op|'('
name|'key_host'
op|')'
newline|'\n'
name|'pipe'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
