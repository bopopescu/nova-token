begin_unit
nl|'\n'
comment|'#    Copyright 2012 OpenStack LLC'
nl|'\n'
comment|'#    Copyright 2012-2013 Hewlett-Packard Development Company, L.P.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nUtilities for consuming the version from pkg_resources.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'pkg_resources'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VersionInfo
name|'class'
name|'VersionInfo'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'package'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Object that understands versioning for a package\n        :param package: name of the python package, such as glance, or\n                        python-glanceclient\n        """'
newline|'\n'
name|'self'
op|'.'
name|'package'
op|'='
name|'package'
newline|'\n'
name|'self'
op|'.'
name|'release'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'version'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_cached_version'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_get_version_from_pkg_resources
dedent|''
name|'def'
name|'_get_version_from_pkg_resources'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get the version of the package from the pkg_resources record\n        associated with the package."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'requirement'
op|'='
name|'pkg_resources'
op|'.'
name|'Requirement'
op|'.'
name|'parse'
op|'('
name|'self'
op|'.'
name|'package'
op|')'
newline|'\n'
name|'provider'
op|'='
name|'pkg_resources'
op|'.'
name|'get_provider'
op|'('
name|'requirement'
op|')'
newline|'\n'
name|'return'
name|'provider'
op|'.'
name|'version'
newline|'\n'
dedent|''
name|'except'
name|'pkg_resources'
op|'.'
name|'DistributionNotFound'
op|':'
newline|'\n'
comment|'# The most likely cause for this is running tests in a tree with'
nl|'\n'
comment|'# produced from a tarball where the package itself has not been'
nl|'\n'
comment|'# installed into anything. Check for a PKG-INFO file.'
nl|'\n'
indent|'            '
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'setup'
newline|'\n'
name|'return'
name|'setup'
op|'.'
name|'get_version_from_pkg_info'
op|'('
name|'self'
op|'.'
name|'package'
op|')'
newline|'\n'
nl|'\n'
DECL|member|release_string
dedent|''
dedent|''
name|'def'
name|'release_string'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return the full version of the package including suffixes indicating\n        VCS status.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'release'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'release'
op|'='
name|'self'
op|'.'
name|'_get_version_from_pkg_resources'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'release'
newline|'\n'
nl|'\n'
DECL|member|version_string
dedent|''
name|'def'
name|'version_string'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return the short version minus any alpha/beta tags."""'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'version'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'parts'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'part'
name|'in'
name|'self'
op|'.'
name|'release_string'
op|'('
op|')'
op|'.'
name|'split'
op|'('
string|"'.'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'part'
op|'['
number|'0'
op|']'
op|'.'
name|'isdigit'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'parts'
op|'.'
name|'append'
op|'('
name|'part'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'version'
op|'='
string|'"."'
op|'.'
name|'join'
op|'('
name|'parts'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'version'
newline|'\n'
nl|'\n'
comment|'# Compatibility functions'
nl|'\n'
DECL|variable|canonical_version_string
dedent|''
name|'canonical_version_string'
op|'='
name|'version_string'
newline|'\n'
DECL|variable|version_string_with_vcs
name|'version_string_with_vcs'
op|'='
name|'release_string'
newline|'\n'
nl|'\n'
DECL|member|cached_version_string
name|'def'
name|'cached_version_string'
op|'('
name|'self'
op|','
name|'prefix'
op|'='
string|'""'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Generate an object which will expand in a string context to\n        the results of version_string(). We do this so that don\'t\n        call into pkg_resources every time we start up a program when\n        passing version information into the CONF constructor, but\n        rather only do the calculation when and if a version is requested\n        """'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'_cached_version'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_cached_version'
op|'='
string|'"%s%s"'
op|'%'
op|'('
name|'prefix'
op|','
nl|'\n'
name|'self'
op|'.'
name|'version_string'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_cached_version'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
