begin_unit
comment|'# Copyright 2013 Red Hat, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Provides thread and stack-trace views\n\nThis module provides a collection of views for\nvisualizing threads, green threads, and stack traces\nin human-readable form.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'report'
op|'.'
name|'views'
op|'.'
name|'jinja_view'
name|'as'
name|'jv'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|StackTraceView
name|'class'
name|'StackTraceView'
op|'('
name|'jv'
op|'.'
name|'JinjaView'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""A Stack Trace View\n\n    This view displays stack trace models defined by\n    :class:`openstack.common.report.models.threading.StackTraceModel`\n    """'
newline|'\n'
nl|'\n'
DECL|variable|VIEW_TEXT
name|'VIEW_TEXT'
op|'='
op|'('
nl|'\n'
string|'"{% if root_exception is not none %}"'
nl|'\n'
string|'"Exception: {{ root_exception }}\\n"'
nl|'\n'
string|'"------------------------------------\\n"'
nl|'\n'
string|'"\\n"'
nl|'\n'
string|'"{% endif %}"'
nl|'\n'
string|'"{% for line in lines %}\\n"'
nl|'\n'
string|'"{{ line.filename }}:{{ line.line }} in {{ line.name }}\\n"'
nl|'\n'
string|'"    {% if line.code is not none %}"'
nl|'\n'
string|'"`{{ line.code }}`"'
nl|'\n'
string|'"{% else %}"'
nl|'\n'
string|'"(source not found)"'
nl|'\n'
string|'"{% endif %}\\n"'
nl|'\n'
string|'"{% else %}\\n"'
nl|'\n'
string|'"No Traceback!\\n"'
nl|'\n'
string|'"{% endfor %}"'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|GreenThreadView
dedent|''
name|'class'
name|'GreenThreadView'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""A Green Thread View\n\n    This view displays a green thread provided by the data\n    model :class:`openstack.common.report.models.threading.GreenThreadModel`  # noqa\n    """'
newline|'\n'
nl|'\n'
DECL|variable|FORMAT_STR
name|'FORMAT_STR'
op|'='
string|'"------{thread_str: ^60}------"'
op|'+'
string|'"\\n"'
op|'+'
string|'"{stack_trace}"'
newline|'\n'
nl|'\n'
DECL|member|__call__
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'model'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'FORMAT_STR'
op|'.'
name|'format'
op|'('
nl|'\n'
name|'thread_str'
op|'='
string|'" Green Thread "'
op|','
nl|'\n'
name|'stack_trace'
op|'='
name|'model'
op|'.'
name|'stack_trace'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ThreadView
dedent|''
dedent|''
name|'class'
name|'ThreadView'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""A Thread Collection View\n\n    This view displays a python thread provided by the data\n    model :class:`openstack.common.report.models.threading.ThreadModel`  # noqa\n    """'
newline|'\n'
nl|'\n'
DECL|variable|FORMAT_STR
name|'FORMAT_STR'
op|'='
string|'"------{thread_str: ^60}------"'
op|'+'
string|'"\\n"'
op|'+'
string|'"{stack_trace}"'
newline|'\n'
nl|'\n'
DECL|member|__call__
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'model'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'FORMAT_STR'
op|'.'
name|'format'
op|'('
nl|'\n'
name|'thread_str'
op|'='
string|'" Thread #{0} "'
op|'.'
name|'format'
op|'('
name|'model'
op|'.'
name|'thread_id'
op|')'
op|','
nl|'\n'
name|'stack_trace'
op|'='
name|'model'
op|'.'
name|'stack_trace'
nl|'\n'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
