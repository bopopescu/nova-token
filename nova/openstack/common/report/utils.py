begin_unit
comment|'# Copyright 2013 Red Hat, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Various utilities for report generation\n\nThis module includes various utilities\nused in generating reports.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'gc'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|StringWithAttrs
name|'class'
name|'StringWithAttrs'
op|'('
name|'str'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""A String that can have arbitrary attributes\n    """'
newline|'\n'
nl|'\n'
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_find_objects
dedent|''
name|'def'
name|'_find_objects'
op|'('
name|'t'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Find Objects in the GC State\n\n    This horribly hackish method locates objects of a\n    given class in the current python instance\'s garbage\n    collection state.  In case you couldn\'t tell, this is\n    horribly hackish, but is necessary for locating all\n    green threads, since they don\'t keep track of themselves\n    like normal threads do in python.\n\n    :param class t: the class of object to locate\n    :rtype: list\n    :returns: a list of objects of the given type\n    """'
newline|'\n'
nl|'\n'
name|'return'
op|'['
name|'o'
name|'for'
name|'o'
name|'in'
name|'gc'
op|'.'
name|'get_objects'
op|'('
op|')'
name|'if'
name|'isinstance'
op|'('
name|'o'
op|','
name|'t'
op|')'
op|']'
newline|'\n'
dedent|''
endmarker|''
end_unit
