begin_unit
comment|'# Copyright 2012 OpenStack LLC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'imp'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'pkg_resources'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'notifier'
name|'import'
name|'api'
name|'as'
name|'notifier_api'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|PluginManager
name|'class'
name|'PluginManager'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Manages plugin entrypoints and loading.\n\n    For a service to implement this plugin interface for callback purposes:\n\n      - Make use of the openstack-common notifier system\n      - Instantiate this manager in each process (passing in\n        project and service name)\n\n    For an API service to extend itself using this plugin interface,\n    it needs to query the plugin_extension_factory provided by\n    the already-instantiated PluginManager.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'project_name'
op|','
name|'service_name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Construct Plugin Manager; load and initialize plugins.\n\n        project_name (e.g. \'nova\' or \'glance\') is used\n        to construct the entry point that identifies plugins.\n\n        The service_name (e.g. \'compute\') is passed on to\n        each plugin as a raw string for it to do what it will.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_project_name'
op|'='
name|'project_name'
newline|'\n'
name|'self'
op|'.'
name|'_service_name'
op|'='
name|'service_name'
newline|'\n'
name|'self'
op|'.'
name|'plugins'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|load_plugins
dedent|''
name|'def'
name|'load_plugins'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'plugins'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'entrypoint'
name|'in'
name|'pkg_resources'
op|'.'
name|'iter_entry_points'
op|'('
string|"'%s.plugin'"
op|'%'
nl|'\n'
name|'self'
op|'.'
name|'_project_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'pluginclass'
op|'='
name|'entrypoint'
op|'.'
name|'load'
op|'('
op|')'
newline|'\n'
name|'plugin'
op|'='
name|'pluginclass'
op|'('
name|'self'
op|'.'
name|'_service_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'plugins'
op|'.'
name|'append'
op|'('
name|'plugin'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'exc'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'error'
op|'('
name|'_'
op|'('
string|'"Failed to load plugin %(plug)s: %(exc)s"'
op|')'
op|'%'
nl|'\n'
op|'{'
string|"'plug'"
op|':'
name|'entrypoint'
op|','
string|"'exc'"
op|':'
name|'exc'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# Register individual notifiers.'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'plugin'
name|'in'
name|'self'
op|'.'
name|'plugins'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'notifier'
name|'in'
name|'plugin'
op|'.'
name|'notifiers'
op|':'
newline|'\n'
indent|'                '
name|'notifier_api'
op|'.'
name|'add_driver'
op|'('
name|'notifier'
op|')'
newline|'\n'
nl|'\n'
DECL|member|plugin_extension_factory
dedent|''
dedent|''
dedent|''
name|'def'
name|'plugin_extension_factory'
op|'('
name|'self'
op|','
name|'ext_mgr'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'plugin'
name|'in'
name|'self'
op|'.'
name|'plugins'
op|':'
newline|'\n'
indent|'            '
name|'descriptors'
op|'='
name|'plugin'
op|'.'
name|'api_extension_descriptors'
newline|'\n'
name|'for'
name|'descriptor'
name|'in'
name|'descriptors'
op|':'
newline|'\n'
indent|'                '
name|'ext_mgr'
op|'.'
name|'load_extension'
op|'('
name|'descriptor'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
