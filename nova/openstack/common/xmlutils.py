begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2013 IBM Corp.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'xml'
op|'.'
name|'dom'
name|'import'
name|'minidom'
newline|'\n'
name|'from'
name|'xml'
op|'.'
name|'parsers'
name|'import'
name|'expat'
newline|'\n'
name|'from'
name|'xml'
name|'import'
name|'sax'
newline|'\n'
name|'from'
name|'xml'
op|'.'
name|'sax'
name|'import'
name|'expatreader'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ProtectedExpatParser
name|'class'
name|'ProtectedExpatParser'
op|'('
name|'expatreader'
op|'.'
name|'ExpatParser'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""An expat parser which disables DTD\'s and entities by default."""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'forbid_dtd'
op|'='
name|'True'
op|','
name|'forbid_entities'
op|'='
name|'True'
op|','
nl|'\n'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# Python 2.x old style class'
nl|'\n'
indent|'        '
name|'expatreader'
op|'.'
name|'ExpatParser'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'forbid_dtd'
op|'='
name|'forbid_dtd'
newline|'\n'
name|'self'
op|'.'
name|'forbid_entities'
op|'='
name|'forbid_entities'
newline|'\n'
nl|'\n'
DECL|member|start_doctype_decl
dedent|''
name|'def'
name|'start_doctype_decl'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'sysid'
op|','
name|'pubid'
op|','
name|'has_internal_subset'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
op|'('
string|'"Inline DTD forbidden"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|entity_decl
dedent|''
name|'def'
name|'entity_decl'
op|'('
name|'self'
op|','
name|'entityName'
op|','
name|'is_parameter_entity'
op|','
name|'value'
op|','
name|'base'
op|','
nl|'\n'
name|'systemId'
op|','
name|'publicId'
op|','
name|'notationName'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
op|'('
string|'"<!ENTITY> entity declaration forbidden"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|unparsed_entity_decl
dedent|''
name|'def'
name|'unparsed_entity_decl'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'base'
op|','
name|'sysid'
op|','
name|'pubid'
op|','
name|'notation_name'
op|')'
op|':'
newline|'\n'
comment|'# expat 1.2'
nl|'\n'
indent|'        '
name|'raise'
name|'ValueError'
op|'('
string|'"<!ENTITY> unparsed entity forbidden"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|external_entity_ref
dedent|''
name|'def'
name|'external_entity_ref'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'base'
op|','
name|'systemId'
op|','
name|'publicId'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
op|'('
string|'"<!ENTITY> external entity forbidden"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|notation_decl
dedent|''
name|'def'
name|'notation_decl'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'base'
op|','
name|'sysid'
op|','
name|'pubid'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
op|'('
string|'"<!ENTITY> notation forbidden"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|reset
dedent|''
name|'def'
name|'reset'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expatreader'
op|'.'
name|'ExpatParser'
op|'.'
name|'reset'
op|'('
name|'self'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'forbid_dtd'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_parser'
op|'.'
name|'StartDoctypeDeclHandler'
op|'='
name|'self'
op|'.'
name|'start_doctype_decl'
newline|'\n'
name|'self'
op|'.'
name|'_parser'
op|'.'
name|'EndDoctypeDeclHandler'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'forbid_entities'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_parser'
op|'.'
name|'EntityDeclHandler'
op|'='
name|'self'
op|'.'
name|'entity_decl'
newline|'\n'
name|'self'
op|'.'
name|'_parser'
op|'.'
name|'UnparsedEntityDeclHandler'
op|'='
name|'self'
op|'.'
name|'unparsed_entity_decl'
newline|'\n'
name|'self'
op|'.'
name|'_parser'
op|'.'
name|'ExternalEntityRefHandler'
op|'='
name|'self'
op|'.'
name|'external_entity_ref'
newline|'\n'
name|'self'
op|'.'
name|'_parser'
op|'.'
name|'NotationDeclHandler'
op|'='
name|'self'
op|'.'
name|'notation_decl'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_parser'
op|'.'
name|'SkippedEntityHandler'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'except'
name|'AttributeError'
op|':'
newline|'\n'
comment|'# some pyexpat versions do not support SkippedEntity'
nl|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|safe_minidom_parse_string
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'safe_minidom_parse_string'
op|'('
name|'xml_string'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Parse an XML string using minidom safely.\n\n    """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'minidom'
op|'.'
name|'parseString'
op|'('
name|'xml_string'
op|','
name|'parser'
op|'='
name|'ProtectedExpatParser'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'sax'
op|'.'
name|'SAXParseException'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'expat'
op|'.'
name|'ExpatError'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
