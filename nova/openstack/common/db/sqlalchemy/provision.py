begin_unit
comment|'# Copyright 2013 Mirantis.inc'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Provision test environment for specific DB backends"""'
newline|'\n'
nl|'\n'
name|'import'
name|'argparse'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'random'
newline|'\n'
name|'import'
name|'string'
newline|'\n'
nl|'\n'
name|'from'
name|'six'
name|'import'
name|'moves'
newline|'\n'
name|'import'
name|'sqlalchemy'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'db'
name|'import'
name|'exception'
name|'as'
name|'exc'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|SQL_CONNECTION
name|'SQL_CONNECTION'
op|'='
name|'os'
op|'.'
name|'getenv'
op|'('
string|"'OS_TEST_DBAPI_ADMIN_CONNECTION'"
op|','
string|"'sqlite://'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_gen_credentials
name|'def'
name|'_gen_credentials'
op|'('
op|'*'
name|'names'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Generate credentials."""'
newline|'\n'
name|'auth_dict'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'name'
name|'in'
name|'names'
op|':'
newline|'\n'
indent|'        '
name|'val'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'random'
op|'.'
name|'choice'
op|'('
name|'string'
op|'.'
name|'ascii_lowercase'
op|')'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'moves'
op|'.'
name|'range'
op|'('
number|'10'
op|')'
op|')'
newline|'\n'
name|'auth_dict'
op|'['
name|'name'
op|']'
op|'='
name|'val'
newline|'\n'
dedent|''
name|'return'
name|'auth_dict'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_get_engine
dedent|''
name|'def'
name|'_get_engine'
op|'('
name|'uri'
op|'='
name|'SQL_CONNECTION'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Engine creation\n\n    By default the uri is SQL_CONNECTION which is admin credentials.\n    Call the function without arguments to get admin connection. Admin\n    connection required to create temporary user and database for each\n    particular test. Otherwise use existing connection to recreate connection\n    to the temporary database.\n    """'
newline|'\n'
name|'return'
name|'sqlalchemy'
op|'.'
name|'create_engine'
op|'('
name|'uri'
op|','
name|'poolclass'
op|'='
name|'sqlalchemy'
op|'.'
name|'pool'
op|'.'
name|'NullPool'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_execute_sql
dedent|''
name|'def'
name|'_execute_sql'
op|'('
name|'engine'
op|','
name|'sql'
op|','
name|'driver'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Initialize connection, execute sql query and close it."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'engine'
op|'.'
name|'connect'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'driver'
op|'=='
string|"'postgresql'"
op|':'
newline|'\n'
indent|'                '
name|'conn'
op|'.'
name|'connection'
op|'.'
name|'set_isolation_level'
op|'('
number|'0'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'s'
name|'in'
name|'sql'
op|':'
newline|'\n'
indent|'                '
name|'conn'
op|'.'
name|'execute'
op|'('
name|'s'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'except'
name|'sqlalchemy'
op|'.'
name|'exc'
op|'.'
name|'OperationalError'
op|':'
newline|'\n'
indent|'        '
name|'msg'
op|'='
op|'('
string|"'%s does not match database admin '"
nl|'\n'
string|"'credentials or database does not exist.'"
op|')'
newline|'\n'
name|'raise'
name|'exc'
op|'.'
name|'DBConnectionError'
op|'('
name|'msg'
op|'%'
name|'SQL_CONNECTION'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|create_database
dedent|''
dedent|''
name|'def'
name|'create_database'
op|'('
name|'engine'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Provide temporary user and database for each particular test."""'
newline|'\n'
name|'driver'
op|'='
name|'engine'
op|'.'
name|'name'
newline|'\n'
nl|'\n'
name|'auth'
op|'='
name|'_gen_credentials'
op|'('
string|"'database'"
op|','
string|"'user'"
op|','
string|"'passwd'"
op|')'
newline|'\n'
nl|'\n'
name|'sqls'
op|'='
op|'{'
nl|'\n'
string|"'mysql'"
op|':'
op|'['
nl|'\n'
string|'"drop database if exists %(database)s;"'
op|','
nl|'\n'
string|'"grant all on %(database)s.* to \'%(user)s\'@\'localhost\'"'
nl|'\n'
string|'" identified by \'%(passwd)s\';"'
op|','
nl|'\n'
string|'"create database %(database)s;"'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'postgresql'"
op|':'
op|'['
nl|'\n'
string|'"drop database if exists %(database)s;"'
op|','
nl|'\n'
string|'"drop user if exists %(user)s;"'
op|','
nl|'\n'
string|'"create user %(user)s with password \'%(passwd)s\';"'
op|','
nl|'\n'
string|'"create database %(database)s owner %(user)s;"'
op|','
nl|'\n'
op|']'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'if'
name|'driver'
op|'=='
string|"'sqlite'"
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'sqlite:////tmp/%s'"
op|'%'
name|'auth'
op|'['
string|"'database'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'sql_rows'
op|'='
name|'sqls'
op|'['
name|'driver'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
op|'('
string|"'Unsupported RDBMS %s'"
op|'%'
name|'driver'
op|')'
newline|'\n'
dedent|''
name|'sql_query'
op|'='
name|'map'
op|'('
name|'lambda'
name|'x'
op|':'
name|'x'
op|'%'
name|'auth'
op|','
name|'sql_rows'
op|')'
newline|'\n'
nl|'\n'
name|'_execute_sql'
op|'('
name|'engine'
op|','
name|'sql_query'
op|','
name|'driver'
op|')'
newline|'\n'
nl|'\n'
name|'params'
op|'='
name|'auth'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'params'
op|'['
string|"'backend'"
op|']'
op|'='
name|'driver'
newline|'\n'
name|'return'
string|'"%(backend)s://%(user)s:%(passwd)s@localhost/%(database)s"'
op|'%'
name|'params'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|drop_database
dedent|''
name|'def'
name|'drop_database'
op|'('
name|'engine'
op|','
name|'current_uri'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Drop temporary database and user after each particular test."""'
newline|'\n'
name|'engine'
op|'='
name|'_get_engine'
op|'('
name|'current_uri'
op|')'
newline|'\n'
name|'admin_engine'
op|'='
name|'_get_engine'
op|'('
op|')'
newline|'\n'
name|'driver'
op|'='
name|'engine'
op|'.'
name|'name'
newline|'\n'
name|'auth'
op|'='
op|'{'
string|"'database'"
op|':'
name|'engine'
op|'.'
name|'url'
op|'.'
name|'database'
op|','
string|"'user'"
op|':'
name|'engine'
op|'.'
name|'url'
op|'.'
name|'username'
op|'}'
newline|'\n'
nl|'\n'
name|'if'
name|'driver'
op|'=='
string|"'sqlite'"
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'remove'
op|'('
name|'auth'
op|'['
string|"'database'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'sqls'
op|'='
op|'{'
nl|'\n'
string|"'mysql'"
op|':'
op|'['
nl|'\n'
string|'"drop database if exists %(database)s;"'
op|','
nl|'\n'
string|'"drop user \'%(user)s\'@\'localhost\';"'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'postgresql'"
op|':'
op|'['
nl|'\n'
string|'"drop database if exists %(database)s;"'
op|','
nl|'\n'
string|'"drop user if exists %(user)s;"'
op|','
nl|'\n'
op|']'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'sql_rows'
op|'='
name|'sqls'
op|'['
name|'driver'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
op|'('
string|"'Unsupported RDBMS %s'"
op|'%'
name|'driver'
op|')'
newline|'\n'
dedent|''
name|'sql_query'
op|'='
name|'map'
op|'('
name|'lambda'
name|'x'
op|':'
name|'x'
op|'%'
name|'auth'
op|','
name|'sql_rows'
op|')'
newline|'\n'
nl|'\n'
name|'_execute_sql'
op|'('
name|'admin_engine'
op|','
name|'sql_query'
op|','
name|'driver'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|main
dedent|''
name|'def'
name|'main'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Controller to handle commands\n\n    ::create: Create test user and database with random names.\n    ::drop: Drop user and database created by previous command.\n    """'
newline|'\n'
name|'parser'
op|'='
name|'argparse'
op|'.'
name|'ArgumentParser'
op|'('
nl|'\n'
name|'description'
op|'='
string|"'Controller to handle database creation and dropping'"
nl|'\n'
string|"' commands.'"
op|','
nl|'\n'
name|'epilog'
op|'='
string|"'Under normal circumstances is not used directly.'"
nl|'\n'
string|"' Used in .testr.conf to automate test database creation'"
nl|'\n'
string|"' and dropping processes.'"
op|')'
newline|'\n'
name|'subparsers'
op|'='
name|'parser'
op|'.'
name|'add_subparsers'
op|'('
nl|'\n'
name|'help'
op|'='
string|"'Subcommands to manipulate temporary test databases.'"
op|')'
newline|'\n'
nl|'\n'
name|'create'
op|'='
name|'subparsers'
op|'.'
name|'add_parser'
op|'('
nl|'\n'
string|"'create'"
op|','
nl|'\n'
name|'help'
op|'='
string|"'Create temporary test '"
nl|'\n'
string|"'databases and users.'"
op|')'
newline|'\n'
name|'create'
op|'.'
name|'set_defaults'
op|'('
name|'which'
op|'='
string|"'create'"
op|')'
newline|'\n'
name|'create'
op|'.'
name|'add_argument'
op|'('
nl|'\n'
string|"'instances_count'"
op|','
nl|'\n'
name|'type'
op|'='
name|'int'
op|','
nl|'\n'
name|'help'
op|'='
string|"'Number of databases to create.'"
op|')'
newline|'\n'
nl|'\n'
name|'drop'
op|'='
name|'subparsers'
op|'.'
name|'add_parser'
op|'('
nl|'\n'
string|"'drop'"
op|','
nl|'\n'
name|'help'
op|'='
string|"'Drop temporary test databases and users.'"
op|')'
newline|'\n'
name|'drop'
op|'.'
name|'set_defaults'
op|'('
name|'which'
op|'='
string|"'drop'"
op|')'
newline|'\n'
name|'drop'
op|'.'
name|'add_argument'
op|'('
nl|'\n'
string|"'instances'"
op|','
nl|'\n'
name|'nargs'
op|'='
string|"'+'"
op|','
nl|'\n'
name|'help'
op|'='
string|"'List of databases uri to be dropped.'"
op|')'
newline|'\n'
nl|'\n'
name|'args'
op|'='
name|'parser'
op|'.'
name|'parse_args'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'engine'
op|'='
name|'_get_engine'
op|'('
op|')'
newline|'\n'
name|'which'
op|'='
name|'args'
op|'.'
name|'which'
newline|'\n'
nl|'\n'
name|'if'
name|'which'
op|'=='
string|'"create"'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'int'
op|'('
name|'args'
op|'.'
name|'instances_count'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
name|'create_database'
op|'('
name|'engine'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'which'
op|'=='
string|'"drop"'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'db'
name|'in'
name|'args'
op|'.'
name|'instances'
op|':'
newline|'\n'
indent|'            '
name|'drop_database'
op|'('
name|'engine'
op|','
name|'db'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|'"__main__"'
op|':'
newline|'\n'
indent|'    '
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
