begin_unit
comment|'#  Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#  not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#  a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#       http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#  Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#  License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#  under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'copy'
newline|'\n'
nl|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|database_opts
name|'database_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'sqlite_db'"
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'nova.sqlite'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'The file name to use with SQLite'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
string|"'sqlite_synchronous'"
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'True'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'If True, SQLite uses synchronous mode'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'backend'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'sqlalchemy'"
op|','
nl|'\n'
DECL|variable|deprecated_name
name|'deprecated_name'
op|'='
string|"'db_backend'"
op|','
nl|'\n'
DECL|variable|deprecated_group
name|'deprecated_group'
op|'='
string|"'DEFAULT'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'The backend to use for db'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'connection'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'The SQLAlchemy connection string used to connect to the '"
nl|'\n'
string|"'database'"
op|','
nl|'\n'
DECL|variable|secret
name|'secret'
op|'='
name|'True'
op|','
nl|'\n'
DECL|variable|deprecated_opts
name|'deprecated_opts'
op|'='
op|'['
name|'cfg'
op|'.'
name|'DeprecatedOpt'
op|'('
string|"'sql_connection'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
string|"'DEFAULT'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'DeprecatedOpt'
op|'('
string|"'sql_connection'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
string|"'DATABASE'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'DeprecatedOpt'
op|'('
string|"'connection'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
string|"'sql'"
op|')'
op|','
op|']'
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'StrOpt'
op|'('
string|"'mysql_sql_mode'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
string|"'TRADITIONAL'"
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'The SQL mode to be used for MySQL sessions. '"
nl|'\n'
string|"'This option, including the default, overrides any '"
nl|'\n'
string|"'server-set SQL mode. To use whatever SQL mode '"
nl|'\n'
string|"'is set by the server configuration, '"
nl|'\n'
string|"'set this to no value. Example: mysql_sql_mode='"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'idle_timeout'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'3600'
op|','
nl|'\n'
DECL|variable|deprecated_opts
name|'deprecated_opts'
op|'='
op|'['
name|'cfg'
op|'.'
name|'DeprecatedOpt'
op|'('
string|"'sql_idle_timeout'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
string|"'DEFAULT'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'DeprecatedOpt'
op|'('
string|"'sql_idle_timeout'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
string|"'DATABASE'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'DeprecatedOpt'
op|'('
string|"'idle_timeout'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
string|"'sql'"
op|')'
op|']'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Timeout before idle sql connections are reaped'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'min_pool_size'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'1'
op|','
nl|'\n'
DECL|variable|deprecated_opts
name|'deprecated_opts'
op|'='
op|'['
name|'cfg'
op|'.'
name|'DeprecatedOpt'
op|'('
string|"'sql_min_pool_size'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
string|"'DEFAULT'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'DeprecatedOpt'
op|'('
string|"'sql_min_pool_size'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
string|"'DATABASE'"
op|')'
op|']'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Minimum number of SQL connections to keep open in a '"
nl|'\n'
string|"'pool'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'max_pool_size'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'None'
op|','
nl|'\n'
DECL|variable|deprecated_opts
name|'deprecated_opts'
op|'='
op|'['
name|'cfg'
op|'.'
name|'DeprecatedOpt'
op|'('
string|"'sql_max_pool_size'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
string|"'DEFAULT'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'DeprecatedOpt'
op|'('
string|"'sql_max_pool_size'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
string|"'DATABASE'"
op|')'
op|']'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Maximum number of SQL connections to keep open in a '"
nl|'\n'
string|"'pool'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'max_retries'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'10'
op|','
nl|'\n'
DECL|variable|deprecated_opts
name|'deprecated_opts'
op|'='
op|'['
name|'cfg'
op|'.'
name|'DeprecatedOpt'
op|'('
string|"'sql_max_retries'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
string|"'DEFAULT'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'DeprecatedOpt'
op|'('
string|"'sql_max_retries'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
string|"'DATABASE'"
op|')'
op|']'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Maximum db connection retries during startup. '"
nl|'\n'
string|"'(setting -1 implies an infinite retry count)'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'retry_interval'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'10'
op|','
nl|'\n'
DECL|variable|deprecated_opts
name|'deprecated_opts'
op|'='
op|'['
name|'cfg'
op|'.'
name|'DeprecatedOpt'
op|'('
string|"'sql_retry_interval'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
string|"'DEFAULT'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'DeprecatedOpt'
op|'('
string|"'reconnect_interval'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
string|"'DATABASE'"
op|')'
op|']'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Interval between retries of opening a sql connection'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'max_overflow'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'None'
op|','
nl|'\n'
DECL|variable|deprecated_opts
name|'deprecated_opts'
op|'='
op|'['
name|'cfg'
op|'.'
name|'DeprecatedOpt'
op|'('
string|"'sql_max_overflow'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
string|"'DEFAULT'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'DeprecatedOpt'
op|'('
string|"'sqlalchemy_max_overflow'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
string|"'DATABASE'"
op|')'
op|']'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'If set, use this value for max_overflow with sqlalchemy'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'connection_debug'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'0'
op|','
nl|'\n'
DECL|variable|deprecated_opts
name|'deprecated_opts'
op|'='
op|'['
name|'cfg'
op|'.'
name|'DeprecatedOpt'
op|'('
string|"'sql_connection_debug'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
string|"'DEFAULT'"
op|')'
op|']'
op|','
nl|'\n'
name|'help'
op|'='
string|"'Verbosity of SQL debugging information. 0=None, '"
nl|'\n'
string|"'100=Everything'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
string|"'connection_trace'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'False'
op|','
nl|'\n'
DECL|variable|deprecated_opts
name|'deprecated_opts'
op|'='
op|'['
name|'cfg'
op|'.'
name|'DeprecatedOpt'
op|'('
string|"'sql_connection_trace'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
string|"'DEFAULT'"
op|')'
op|']'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Add python stack traces to SQL as comment strings'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'pool_timeout'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'None'
op|','
nl|'\n'
DECL|variable|deprecated_opts
name|'deprecated_opts'
op|'='
op|'['
name|'cfg'
op|'.'
name|'DeprecatedOpt'
op|'('
string|"'sqlalchemy_pool_timeout'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
string|"'DATABASE'"
op|')'
op|']'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'If set, use this value for pool_timeout with sqlalchemy'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
string|"'use_db_reconnect'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'False'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Enable the experimental use of database reconnect '"
nl|'\n'
string|"'on connection lost'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'db_retry_interval'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'1'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'seconds between db connection retries'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
string|"'db_inc_retry_interval'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'True'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Whether to increase interval between db connection '"
nl|'\n'
string|"'retries, up to db_max_retry_interval'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'db_max_retry_interval'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'10'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'max seconds between db connection retries, if '"
nl|'\n'
string|"'db_inc_retry_interval is enabled'"
op|')'
op|','
nl|'\n'
name|'cfg'
op|'.'
name|'IntOpt'
op|'('
string|"'db_max_retries'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
number|'20'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'maximum db connection retries before error is raised. '"
nl|'\n'
string|"'(setting -1 implies an infinite retry count)'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'register_opts'
op|'('
name|'database_opts'
op|','
string|"'database'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|set_defaults
name|'def'
name|'set_defaults'
op|'('
name|'sql_connection'
op|','
name|'sqlite_db'
op|','
name|'max_pool_size'
op|'='
name|'None'
op|','
nl|'\n'
name|'max_overflow'
op|'='
name|'None'
op|','
name|'pool_timeout'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Set defaults for configuration variables."""'
newline|'\n'
name|'cfg'
op|'.'
name|'set_defaults'
op|'('
name|'database_opts'
op|','
nl|'\n'
name|'connection'
op|'='
name|'sql_connection'
op|','
nl|'\n'
name|'sqlite_db'
op|'='
name|'sqlite_db'
op|')'
newline|'\n'
comment|'# Update the QueuePool defaults'
nl|'\n'
name|'if'
name|'max_pool_size'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'cfg'
op|'.'
name|'set_defaults'
op|'('
name|'database_opts'
op|','
nl|'\n'
name|'max_pool_size'
op|'='
name|'max_pool_size'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'max_overflow'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'cfg'
op|'.'
name|'set_defaults'
op|'('
name|'database_opts'
op|','
nl|'\n'
name|'max_overflow'
op|'='
name|'max_overflow'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'pool_timeout'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'cfg'
op|'.'
name|'set_defaults'
op|'('
name|'database_opts'
op|','
nl|'\n'
name|'pool_timeout'
op|'='
name|'pool_timeout'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|list_opts
dedent|''
dedent|''
name|'def'
name|'list_opts'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Returns a list of oslo.config options available in the library.\n\n    The returned list includes all oslo.config options which may be registered\n    at runtime by the library.\n\n    Each element of the list is a tuple. The first element is the name of the\n    group under which the list of elements in the second element will be\n    registered. A group name of None corresponds to the [DEFAULT] group in\n    config files.\n\n    The purpose of this is to allow tools like the Oslo sample config file\n    generator to discover the options exposed to users by this library.\n\n    :returns: a list of (group_name, opts) tuples\n    """'
newline|'\n'
name|'return'
op|'['
op|'('
string|"'database'"
op|','
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'database_opts'
op|')'
op|')'
op|']'
newline|'\n'
dedent|''
endmarker|''
end_unit
