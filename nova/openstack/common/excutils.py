begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2011 OpenStack LLC.'
nl|'\n'
comment|'# Copyright 2012, Red Hat, Inc.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nException related utilities.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'contextlib'
newline|'\n'
name|'import'
name|'logging'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'traceback'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'gettextutils'
name|'import'
name|'_'
newline|'\n'
nl|'\n'
nl|'\n'
op|'@'
name|'contextlib'
op|'.'
name|'contextmanager'
newline|'\n'
DECL|function|save_and_reraise_exception
name|'def'
name|'save_and_reraise_exception'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Save current exception, run some code and then re-raise.\n\n    In some cases the exception context can be cleared, resulting in None\n    being attempted to be re-raised after an exception handler is run. This\n    can happen when eventlet switches greenthreads or when running an\n    exception handler, code raises and catches an exception. In both\n    cases the exception context will be cleared.\n\n    To work around this, we save the exception state, run handler code, and\n    then re-raise the original exception. If another exception occurs, the\n    saved exception is logged and the new exception is re-raised.\n    """'
newline|'\n'
name|'type_'
op|','
name|'value'
op|','
name|'tb'
op|'='
name|'sys'
op|'.'
name|'exc_info'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'yield'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'        '
name|'logging'
op|'.'
name|'error'
op|'('
name|'_'
op|'('
string|"'Original exception being dropped: %s'"
op|')'
op|','
nl|'\n'
name|'traceback'
op|'.'
name|'format_exception'
op|'('
name|'type_'
op|','
name|'value'
op|','
name|'tb'
op|')'
op|')'
newline|'\n'
name|'raise'
newline|'\n'
dedent|''
name|'raise'
name|'type_'
op|','
name|'value'
op|','
name|'tb'
newline|'\n'
dedent|''
endmarker|''
end_unit
