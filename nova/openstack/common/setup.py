begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2011 OpenStack LLC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nUtilities with minimum-depends for use in setup.py\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
name|'import'
name|'subprocess'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|parse_mailmap
name|'def'
name|'parse_mailmap'
op|'('
name|'mailmap'
op|'='
string|"'.mailmap'"
op|')'
op|':'
newline|'\n'
indent|'    '
name|'mapping'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'mailmap'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fp'
op|'='
name|'open'
op|'('
name|'mailmap'
op|','
string|"'r'"
op|')'
newline|'\n'
name|'for'
name|'l'
name|'in'
name|'fp'
op|':'
newline|'\n'
indent|'            '
name|'l'
op|'='
name|'l'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'l'
op|'.'
name|'startswith'
op|'('
string|"'#'"
op|')'
name|'and'
string|"' '"
name|'in'
name|'l'
op|':'
newline|'\n'
indent|'                '
name|'canonical_email'
op|','
name|'alias'
op|'='
name|'l'
op|'.'
name|'split'
op|'('
string|"' '"
op|')'
newline|'\n'
name|'mapping'
op|'['
name|'alias'
op|']'
op|'='
name|'canonical_email'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'mapping'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|canonicalize_emails
dedent|''
name|'def'
name|'canonicalize_emails'
op|'('
name|'changelog'
op|','
name|'mapping'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Takes in a string and an email alias mapping and replaces all\n       instances of the aliases in the string with their real email.\n    """'
newline|'\n'
name|'for'
name|'alias'
op|','
name|'email'
name|'in'
name|'mapping'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'changelog'
op|'='
name|'changelog'
op|'.'
name|'replace'
op|'('
name|'alias'
op|','
name|'email'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'changelog'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# Get requirements from the first file that exists'
nl|'\n'
DECL|function|get_reqs_from_files
dedent|''
name|'def'
name|'get_reqs_from_files'
op|'('
name|'requirements_files'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'reqs_in'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'requirements_file'
name|'in'
name|'requirements_files'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'requirements_file'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'open'
op|'('
name|'requirements_file'
op|','
string|"'r'"
op|')'
op|'.'
name|'read'
op|'('
op|')'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|parse_requirements
dedent|''
name|'def'
name|'parse_requirements'
op|'('
name|'requirements_files'
op|'='
op|'['
string|"'requirements.txt'"
op|','
nl|'\n'
string|"'tools/pip-requires'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'requirements'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'get_reqs_from_files'
op|'('
name|'requirements_files'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'re'
op|'.'
name|'match'
op|'('
string|"r'\\s*-e\\s+'"
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'requirements'
op|'.'
name|'append'
op|'('
name|'re'
op|'.'
name|'sub'
op|'('
string|"r'\\s*-e\\s+.*#egg=(.*)$'"
op|','
string|"r'\\1'"
op|','
nl|'\n'
name|'line'
op|')'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'re'
op|'.'
name|'match'
op|'('
string|"r'\\s*-f\\s+'"
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'requirements'
op|'.'
name|'append'
op|'('
name|'line'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'requirements'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|parse_dependency_links
dedent|''
name|'def'
name|'parse_dependency_links'
op|'('
name|'requirements_files'
op|'='
op|'['
string|"'requirements.txt'"
op|','
nl|'\n'
string|"'tools/pip-requires'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'dependency_links'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'get_reqs_from_files'
op|'('
name|'requirements_files'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'re'
op|'.'
name|'match'
op|'('
string|"r'(\\s*#)|(\\s*$)'"
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'re'
op|'.'
name|'match'
op|'('
string|"r'\\s*-[ef]\\s+'"
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'dependency_links'
op|'.'
name|'append'
op|'('
name|'re'
op|'.'
name|'sub'
op|'('
string|"r'\\s*-[ef]\\s+'"
op|','
string|"''"
op|','
name|'line'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'dependency_links'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|write_requirements
dedent|''
name|'def'
name|'write_requirements'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'venv'
op|'='
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'VIRTUAL_ENV'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'venv'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'open'
op|'('
string|'"requirements.txt"'
op|','
string|'"w"'
op|')'
name|'as'
name|'req_file'
op|':'
newline|'\n'
indent|'            '
name|'output'
op|'='
name|'subprocess'
op|'.'
name|'Popen'
op|'('
op|'['
string|'"pip"'
op|','
string|'"-E"'
op|','
name|'venv'
op|','
string|'"freeze"'
op|','
string|'"-l"'
op|']'
op|','
nl|'\n'
name|'stdout'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
op|')'
newline|'\n'
name|'requirements'
op|'='
name|'output'
op|'.'
name|'communicate'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'req_file'
op|'.'
name|'write'
op|'('
name|'requirements'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_run_shell_command
dedent|''
dedent|''
dedent|''
name|'def'
name|'_run_shell_command'
op|'('
name|'cmd'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'output'
op|'='
name|'subprocess'
op|'.'
name|'Popen'
op|'('
op|'['
string|'"/bin/sh"'
op|','
string|'"-c"'
op|','
name|'cmd'
op|']'
op|','
nl|'\n'
name|'stdout'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
op|')'
newline|'\n'
name|'return'
name|'output'
op|'.'
name|'communicate'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|write_vcsversion
dedent|''
name|'def'
name|'write_vcsversion'
op|'('
name|'location'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Produce a vcsversion dict that mimics the old one produced by bzr.\n    """'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
string|"'.git'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'branch_nick_cmd'
op|'='
string|'\'git branch | grep -Ei "\\* (.*)" | cut -f2 -d" "\''
newline|'\n'
name|'branch_nick'
op|'='
name|'_run_shell_command'
op|'('
name|'branch_nick_cmd'
op|')'
newline|'\n'
name|'revid_cmd'
op|'='
string|'"git rev-parse HEAD"'
newline|'\n'
name|'revid'
op|'='
name|'_run_shell_command'
op|'('
name|'revid_cmd'
op|')'
op|'.'
name|'split'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'revno_cmd'
op|'='
string|'"git log --oneline | wc -l"'
newline|'\n'
name|'revno'
op|'='
name|'_run_shell_command'
op|'('
name|'revno_cmd'
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'location'
op|','
string|"'w'"
op|')'
name|'as'
name|'version_file'
op|':'
newline|'\n'
indent|'            '
name|'version_file'
op|'.'
name|'write'
op|'('
string|'"""\n# This file is automatically generated by setup.py, So don\'t edit it. :)\nversion_info = {\n    \'branch_nick\': \'%s\',\n    \'revision_id\': \'%s\',\n    \'revno\': %s\n}\n"""'
op|'%'
op|'('
name|'branch_nick'
op|','
name|'revid'
op|','
name|'revno'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|write_git_changelog
dedent|''
dedent|''
dedent|''
name|'def'
name|'write_git_changelog'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Write a changelog based on the git changelog."""'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
string|"'.git'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'git_log_cmd'
op|'='
string|"'git log --stat'"
newline|'\n'
name|'changelog'
op|'='
name|'_run_shell_command'
op|'('
name|'git_log_cmd'
op|')'
newline|'\n'
name|'mailmap'
op|'='
name|'parse_mailmap'
op|'('
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
string|'"ChangeLog"'
op|','
string|'"w"'
op|')'
name|'as'
name|'changelog_file'
op|':'
newline|'\n'
indent|'            '
name|'changelog_file'
op|'.'
name|'write'
op|'('
name|'canonicalize_emails'
op|'('
name|'changelog'
op|','
name|'mailmap'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|generate_authors
dedent|''
dedent|''
dedent|''
name|'def'
name|'generate_authors'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create AUTHORS file using git commits."""'
newline|'\n'
name|'jenkins_email'
op|'='
string|"'jenkins@review.openstack.org'"
newline|'\n'
name|'old_authors'
op|'='
string|"'AUTHORS.in'"
newline|'\n'
name|'new_authors'
op|'='
string|"'AUTHORS'"
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
string|"'.git'"
op|')'
op|':'
newline|'\n'
comment|"# don't include jenkins email address in AUTHORS file"
nl|'\n'
indent|'        '
name|'git_log_cmd'
op|'='
string|'"git log --format=\'%aN <%aE>\' | sort -u | "'
string|'"grep -v "'
op|'+'
name|'jenkins_email'
newline|'\n'
name|'changelog'
op|'='
name|'_run_shell_command'
op|'('
name|'git_log_cmd'
op|')'
newline|'\n'
name|'mailmap'
op|'='
name|'parse_mailmap'
op|'('
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'new_authors'
op|','
string|"'w'"
op|')'
name|'as'
name|'new_authors_fh'
op|':'
newline|'\n'
indent|'            '
name|'new_authors_fh'
op|'.'
name|'write'
op|'('
name|'canonicalize_emails'
op|'('
name|'changelog'
op|','
name|'mailmap'
op|')'
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'old_authors'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'open'
op|'('
name|'old_authors'
op|','
string|'"r"'
op|')'
name|'as'
name|'old_authors_fh'
op|':'
newline|'\n'
indent|'                    '
name|'new_authors_fh'
op|'.'
name|'write'
op|'('
string|"'\\n'"
op|'+'
name|'old_authors_fh'
op|'.'
name|'read'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
