begin_unit
comment|'# Copyright 2011 OpenStack LLC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
op|'.'
name|'gettextutils'
name|'import'
name|'_'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'importutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|list_notifier_drivers_opt
name|'list_notifier_drivers_opt'
op|'='
name|'cfg'
op|'.'
name|'MultiStrOpt'
op|'('
string|"'list_notifier_drivers'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
op|'['
string|"'nova.openstack.common.notifier.no_op_notifier'"
op|']'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'List of drivers to send notifications'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'register_opt'
op|'('
name|'list_notifier_drivers_opt'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|drivers
name|'drivers'
op|'='
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ImportFailureNotifier
name|'class'
name|'ImportFailureNotifier'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Noisily re-raises some exception over-and-over when notify is called."""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'exception'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'exception'
op|'='
name|'exception'
newline|'\n'
nl|'\n'
DECL|member|notify
dedent|''
name|'def'
name|'notify'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'self'
op|'.'
name|'exception'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_get_drivers
dedent|''
dedent|''
name|'def'
name|'_get_drivers'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Instantiates and returns drivers based on the flag values."""'
newline|'\n'
name|'global'
name|'drivers'
newline|'\n'
name|'if'
name|'drivers'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'drivers'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'notification_driver'
name|'in'
name|'CONF'
op|'.'
name|'list_notifier_drivers'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'drivers'
op|'.'
name|'append'
op|'('
name|'importutils'
op|'.'
name|'import_module'
op|'('
name|'notification_driver'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'drivers'
op|'.'
name|'append'
op|'('
name|'ImportFailureNotifier'
op|'('
name|'e'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'drivers'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|add_driver
dedent|''
name|'def'
name|'add_driver'
op|'('
name|'notification_driver'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Add a notification driver at runtime."""'
newline|'\n'
comment|'# Make sure the driver list is initialized.'
nl|'\n'
name|'_get_drivers'
op|'('
op|')'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'notification_driver'
op|','
name|'basestring'
op|')'
op|':'
newline|'\n'
comment|'# Load and add'
nl|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'drivers'
op|'.'
name|'append'
op|'('
name|'importutils'
op|'.'
name|'import_module'
op|'('
name|'notification_driver'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'drivers'
op|'.'
name|'append'
op|'('
name|'ImportFailureNotifier'
op|'('
name|'e'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# Driver is already loaded; just add the object.'
nl|'\n'
indent|'        '
name|'drivers'
op|'.'
name|'append'
op|'('
name|'notification_driver'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_object_name
dedent|''
dedent|''
name|'def'
name|'_object_name'
op|'('
name|'obj'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'name'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'obj'
op|','
string|"'__module__'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'name'
op|'.'
name|'append'
op|'('
name|'obj'
op|'.'
name|'__module__'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'hasattr'
op|'('
name|'obj'
op|','
string|"'__name__'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'name'
op|'.'
name|'append'
op|'('
name|'obj'
op|'.'
name|'__name__'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'name'
op|'.'
name|'append'
op|'('
name|'obj'
op|'.'
name|'__class__'
op|'.'
name|'__name__'
op|')'
newline|'\n'
dedent|''
name|'return'
string|"'.'"
op|'.'
name|'join'
op|'('
name|'name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|remove_driver
dedent|''
name|'def'
name|'remove_driver'
op|'('
name|'notification_driver'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Remove a notification driver at runtime."""'
newline|'\n'
comment|'# Make sure the driver list is initialized.'
nl|'\n'
name|'_get_drivers'
op|'('
op|')'
newline|'\n'
name|'removed'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'notification_driver'
name|'in'
name|'drivers'
op|':'
newline|'\n'
comment|"# We're removing an object.  Easy."
nl|'\n'
indent|'        '
name|'drivers'
op|'.'
name|'remove'
op|'('
name|'notification_driver'
op|')'
newline|'\n'
name|'removed'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|"# We're removing a driver by name.  Search for it."
nl|'\n'
indent|'        '
name|'for'
name|'driver'
name|'in'
name|'drivers'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'_object_name'
op|'('
name|'driver'
op|')'
op|'=='
name|'notification_driver'
op|':'
newline|'\n'
indent|'                '
name|'drivers'
op|'.'
name|'remove'
op|'('
name|'driver'
op|')'
newline|'\n'
name|'removed'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'not'
name|'removed'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
op|'('
string|'"Cannot remove; %s is not in list"'
op|'%'
nl|'\n'
name|'notification_driver'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|notify
dedent|''
dedent|''
name|'def'
name|'notify'
op|'('
name|'context'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Passes notification to multiple notifiers in a list."""'
newline|'\n'
name|'for'
name|'driver'
name|'in'
name|'_get_drivers'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'driver'
op|'.'
name|'notify'
op|'('
name|'context'
op|','
name|'message'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|'"Problem \'%(e)s\' attempting to send to "'
nl|'\n'
string|'"notification driver %(driver)s."'
op|')'
op|','
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_reset_drivers
dedent|''
dedent|''
dedent|''
name|'def'
name|'_reset_drivers'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Used by unit tests to reset the drivers."""'
newline|'\n'
name|'global'
name|'drivers'
newline|'\n'
name|'drivers'
op|'='
name|'None'
newline|'\n'
dedent|''
endmarker|''
end_unit
