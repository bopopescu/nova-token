begin_unit
comment|'# Copyright (c) 2013 The Johns Hopkins University/Applied Physics Laboratory'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
nl|'\n'
name|'from'
name|'castellan'
name|'import'
name|'options'
name|'as'
name|'castellan_opts'
newline|'\n'
name|'from'
name|'oslo_config'
name|'import'
name|'cfg'
newline|'\n'
name|'from'
name|'oslo_log'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'importutils'
newline|'\n'
nl|'\n'
name|'import'
name|'nova'
op|'.'
name|'conf'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'i18n'
name|'import'
name|'_LW'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'nova'
op|'.'
name|'conf'
op|'.'
name|'CONF'
newline|'\n'
nl|'\n'
nl|'\n'
name|'castellan_opts'
op|'.'
name|'set_defaults'
op|'('
name|'CONF'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(kfarr): This line can be removed when a value is assigned in DevStack'
nl|'\n'
name|'CONF'
op|'.'
name|'set_default'
op|'('
string|"'api_class'"
op|','
string|"'nova.keymgr.conf_key_mgr.ConfKeyManager'"
op|','
nl|'\n'
DECL|variable|group
name|'group'
op|'='
string|"'key_manager'"
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(kfarr): For backwards compatibility, everything below this comment'
nl|'\n'
comment|'# is deprecated for removal'
nl|'\n'
DECL|variable|api_class
name|'api_class'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
DECL|variable|api_class
indent|'    '
name|'api_class'
op|'='
name|'CONF'
op|'.'
name|'key_manager'
op|'.'
name|'api_class'
newline|'\n'
dedent|''
name|'except'
name|'cfg'
op|'.'
name|'NoSuchOptError'
op|':'
newline|'\n'
indent|'    '
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_LW'
op|'('
string|'"key_manager.api_class is not set, will use deprecated "'
nl|'\n'
string|'"option keymgr.api_class if set"'
op|')'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
DECL|variable|api_class
indent|'        '
name|'api_class'
op|'='
name|'CONF'
op|'.'
name|'keymgr'
op|'.'
name|'api_class'
newline|'\n'
dedent|''
name|'except'
name|'cfg'
op|'.'
name|'NoSuchOptError'
op|':'
newline|'\n'
indent|'        '
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_LW'
op|'('
string|'"keymgr.api_class is not set"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|deprecated_barbican
dedent|''
dedent|''
name|'deprecated_barbican'
op|'='
string|"'nova.keymgr.barbican.BarbicanKeyManager'"
newline|'\n'
DECL|variable|barbican
name|'barbican'
op|'='
string|"'castellan.key_manager.barbican_key_manager.BarbicanKeyManager'"
newline|'\n'
DECL|variable|deprecated_mock
name|'deprecated_mock'
op|'='
string|"'nova.tests.unit.keymgr.mock_key_mgr.MockKeyManager'"
newline|'\n'
DECL|variable|castellan_mock
name|'castellan_mock'
op|'='
op|'('
string|"'castellan.tests.unit.key_manager.mock_key_manager.'"
nl|'\n'
string|"'MockKeyManager'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|log_deprecated_warning
name|'def'
name|'log_deprecated_warning'
op|'('
name|'deprecated'
op|','
name|'castellan'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_LW'
op|'('
string|'"key manager api_class set to use deprecated option "'
nl|'\n'
string|'"%(deprecated)s, using %(castellan)s instead"'
op|')'
op|','
nl|'\n'
op|'{'
string|"'deprecated'"
op|':'
name|'deprecated'
op|','
string|"'castellan'"
op|':'
name|'castellan'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'api_class'
op|'=='
name|'deprecated_barbican'
op|':'
newline|'\n'
indent|'    '
name|'log_deprecated_warning'
op|'('
name|'deprecated_barbican'
op|','
name|'barbican'
op|')'
newline|'\n'
name|'api_class'
op|'='
name|'barbican'
newline|'\n'
dedent|''
name|'elif'
name|'api_class'
op|'=='
name|'deprecated_mock'
op|':'
newline|'\n'
indent|'    '
name|'log_deprecated_warning'
op|'('
name|'deprecated_mock'
op|','
name|'castellan_mock'
op|')'
newline|'\n'
DECL|variable|api_class
name|'api_class'
op|'='
name|'castellan_mock'
newline|'\n'
dedent|''
name|'elif'
name|'api_class'
name|'is'
name|'None'
op|':'
newline|'\n'
comment|'# TODO(kfarr): key_manager.api_class should be set in DevStack, and this'
nl|'\n'
comment|'# block can be removed'
nl|'\n'
indent|'    '
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_LW'
op|'('
string|'"key manager not set, using insecure default %s"'
op|')'
op|','
nl|'\n'
name|'castellan_mock'
op|')'
newline|'\n'
DECL|variable|api_class
name|'api_class'
op|'='
name|'castellan_mock'
newline|'\n'
nl|'\n'
dedent|''
name|'CONF'
op|'.'
name|'set_override'
op|'('
string|"'api_class'"
op|','
name|'api_class'
op|','
string|"'key_manager'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|API
name|'def'
name|'API'
op|'('
name|'conf'
op|'='
name|'CONF'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'cls'
op|'='
name|'importutils'
op|'.'
name|'import_class'
op|'('
name|'CONF'
op|'.'
name|'key_manager'
op|'.'
name|'api_class'
op|')'
newline|'\n'
name|'return'
name|'cls'
op|'('
name|'conf'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
