begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2011 OpenStack, LLC.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
nl|'\n'
name|'import'
name|'ConfigParser'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'string'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'rootwrap'
name|'import'
name|'filters'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|build_filter
name|'def'
name|'build_filter'
op|'('
name|'class_name'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Returns a filter object of class class_name"""'
newline|'\n'
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'filters'
op|','
name|'class_name'
op|')'
op|':'
newline|'\n'
comment|'# TODO(ttx): Log the error (whenever nova-rootwrap has a log file)'
nl|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'filterclass'
op|'='
name|'getattr'
op|'('
name|'filters'
op|','
name|'class_name'
op|')'
newline|'\n'
name|'return'
name|'filterclass'
op|'('
op|'*'
name|'args'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|load_filters
dedent|''
name|'def'
name|'load_filters'
op|'('
name|'filters_path'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Load filters from a list of directories"""'
newline|'\n'
name|'filterlist'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'filterdir'
name|'in'
name|'filters_path'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'filterdir'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
dedent|''
name|'for'
name|'filterfile'
name|'in'
name|'os'
op|'.'
name|'listdir'
op|'('
name|'filterdir'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'filterconfig'
op|'='
name|'ConfigParser'
op|'.'
name|'RawConfigParser'
op|'('
op|')'
newline|'\n'
name|'filterconfig'
op|'.'
name|'read'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'filterdir'
op|','
name|'filterfile'
op|')'
op|')'
newline|'\n'
name|'for'
op|'('
name|'name'
op|','
name|'value'
op|')'
name|'in'
name|'filterconfig'
op|'.'
name|'items'
op|'('
string|'"Filters"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'filterdefinition'
op|'='
op|'['
name|'string'
op|'.'
name|'strip'
op|'('
name|'s'
op|')'
name|'for'
name|'s'
name|'in'
name|'value'
op|'.'
name|'split'
op|'('
string|"','"
op|')'
op|']'
newline|'\n'
name|'newfilter'
op|'='
name|'build_filter'
op|'('
op|'*'
name|'filterdefinition'
op|')'
newline|'\n'
name|'if'
name|'newfilter'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
name|'filterlist'
op|'.'
name|'append'
op|'('
name|'newfilter'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'filterlist'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|match_filter
dedent|''
name|'def'
name|'match_filter'
op|'('
name|'filters'
op|','
name|'userargs'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Checks user command and arguments through command filters and\n    returns the first matching filter, or None is none matched.\n    """'
newline|'\n'
nl|'\n'
name|'found_filter'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'for'
name|'f'
name|'in'
name|'filters'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'f'
op|'.'
name|'match'
op|'('
name|'userargs'
op|')'
op|':'
newline|'\n'
comment|'# Try other filters if executable is absent'
nl|'\n'
indent|'            '
name|'if'
name|'not'
name|'os'
op|'.'
name|'access'
op|'('
name|'f'
op|'.'
name|'exec_path'
op|','
name|'os'
op|'.'
name|'X_OK'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'found_filter'
op|':'
newline|'\n'
indent|'                    '
name|'found_filter'
op|'='
name|'f'
newline|'\n'
dedent|''
name|'continue'
newline|'\n'
comment|'# Otherwise return matching filter for execution'
nl|'\n'
dedent|''
name|'return'
name|'f'
newline|'\n'
nl|'\n'
comment|'# No filter matched or first missing executable'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'found_filter'
newline|'\n'
dedent|''
endmarker|''
end_unit
