begin_unit
comment|'#    Copyright 2013 IBM Corp.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Handles database requests from other nova services."""'
newline|'\n'
nl|'\n'
name|'import'
name|'copy'
newline|'\n'
name|'import'
name|'itertools'
newline|'\n'
nl|'\n'
name|'from'
name|'oslo_log'
name|'import'
name|'log'
name|'as'
name|'logging'
newline|'\n'
name|'import'
name|'oslo_messaging'
name|'as'
name|'messaging'
newline|'\n'
name|'from'
name|'oslo_serialization'
name|'import'
name|'jsonutils'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'excutils'
newline|'\n'
name|'from'
name|'oslo_utils'
name|'import'
name|'timeutils'
newline|'\n'
name|'import'
name|'six'
newline|'\n'
nl|'\n'
name|'from'
name|'nova'
op|'.'
name|'api'
op|'.'
name|'ec2'
name|'import'
name|'ec2utils'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'block_device'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'cells'
name|'import'
name|'rpcapi'
name|'as'
name|'cells_rpcapi'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'api'
name|'as'
name|'compute_api'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'rpcapi'
name|'as'
name|'compute_rpcapi'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'task_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'utils'
name|'as'
name|'compute_utils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'compute'
name|'import'
name|'vm_states'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'conductor'
op|'.'
name|'tasks'
name|'import'
name|'live_migrate'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'db'
name|'import'
name|'base'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'exception'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'i18n'
name|'import'
name|'_'
op|','
name|'_LE'
op|','
name|'_LW'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'image'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'manager'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'network'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'network'
op|'.'
name|'security_group'
name|'import'
name|'openstack_driver'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'notifications'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'objects'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'objects'
name|'import'
name|'base'
name|'as'
name|'nova_object'
newline|'\n'
name|'from'
name|'nova'
name|'import'
name|'quota'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
name|'import'
name|'client'
name|'as'
name|'scheduler_client'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'scheduler'
name|'import'
name|'utils'
name|'as'
name|'scheduler_utils'
newline|'\n'
nl|'\n'
DECL|variable|LOG
name|'LOG'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
comment|'# Instead of having a huge list of arguments to instance_update(), we just'
nl|'\n'
comment|'# accept a dict of fields to update and use this whitelist to validate it.'
nl|'\n'
DECL|variable|allowed_updates
name|'allowed_updates'
op|'='
op|'['
string|"'task_state'"
op|','
string|"'vm_state'"
op|','
string|"'expected_task_state'"
op|','
nl|'\n'
string|"'power_state'"
op|','
string|"'access_ip_v4'"
op|','
string|"'access_ip_v6'"
op|','
nl|'\n'
string|"'launched_at'"
op|','
string|"'terminated_at'"
op|','
string|"'host'"
op|','
string|"'node'"
op|','
nl|'\n'
string|"'memory_mb'"
op|','
string|"'vcpus'"
op|','
string|"'root_gb'"
op|','
string|"'ephemeral_gb'"
op|','
nl|'\n'
string|"'instance_type_id'"
op|','
string|"'root_device_name'"
op|','
string|"'launched_on'"
op|','
nl|'\n'
string|"'progress'"
op|','
string|"'vm_mode'"
op|','
string|"'default_ephemeral_device'"
op|','
nl|'\n'
string|"'default_swap_device'"
op|','
string|"'root_device_name'"
op|','
nl|'\n'
string|"'system_metadata'"
op|','
string|"'updated_at'"
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
comment|'# Fields that we want to convert back into a datetime object.'
nl|'\n'
DECL|variable|datetime_fields
name|'datetime_fields'
op|'='
op|'['
string|"'launched_at'"
op|','
string|"'terminated_at'"
op|','
string|"'updated_at'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConductorManager
name|'class'
name|'ConductorManager'
op|'('
name|'manager'
op|'.'
name|'Manager'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Mission: Conduct things.\n\n    The methods in the base API for nova-conductor are various proxy operations\n    performed on behalf of the nova-compute service running on compute nodes.\n    Compute nodes are not allowed to directly access the database, so this set\n    of methods allows them to get specific work done without locally accessing\n    the database.\n\n    The nova-conductor service also exposes an API in the \'compute_task\'\n    namespace.  See the ComputeTaskManager class for details.\n    """'
newline|'\n'
nl|'\n'
DECL|variable|target
name|'target'
op|'='
name|'messaging'
op|'.'
name|'Target'
op|'('
name|'version'
op|'='
string|"'2.1'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ConductorManager'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'service_name'
op|'='
string|"'conductor'"
op|','
nl|'\n'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'security_group_api'
op|'='
op|'('
nl|'\n'
name|'openstack_driver'
op|'.'
name|'get_openstack_security_group_driver'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_network_api'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_compute_api'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'compute_task_mgr'
op|'='
name|'ComputeTaskManager'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_rpcapi'
op|'='
name|'cells_rpcapi'
op|'.'
name|'CellsAPI'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'additional_endpoints'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'compute_task_mgr'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|network_api
name|'def'
name|'network_api'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(danms): We need to instantiate our network_api on first use'
nl|'\n'
comment|'# to avoid the circular dependency that exists between our init'
nl|'\n'
comment|"# and network_api's"
nl|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'_network_api'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_network_api'
op|'='
name|'network'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_network_api'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|compute_api
name|'def'
name|'compute_api'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'_compute_api'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_compute_api'
op|'='
name|'compute_api'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_compute_api'
newline|'\n'
nl|'\n'
DECL|member|ping
dedent|''
name|'def'
name|'ping'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'arg'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(russellb) This method can be removed in 2.0 of this API.  It is'
nl|'\n'
comment|'# now a part of the base rpc API.'
nl|'\n'
indent|'        '
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
op|'{'
string|"'service'"
op|':'
string|"'conductor'"
op|','
string|"'arg'"
op|':'
name|'arg'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'messaging'
op|'.'
name|'expected_exceptions'
op|'('
name|'KeyError'
op|','
name|'ValueError'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InvalidUUID'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'UnexpectedTaskStateError'
op|')'
newline|'\n'
DECL|member|instance_update
name|'def'
name|'instance_update'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'updates'
op|','
name|'service'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'updates'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'key'
name|'not'
name|'in'
name|'allowed_updates'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'error'
op|'('
name|'_LE'
op|'('
string|'"Instance update attempted for "'
nl|'\n'
string|'"\'%(key)s\' on %(instance_uuid)s"'
op|')'
op|','
nl|'\n'
op|'{'
string|"'key'"
op|':'
name|'key'
op|','
string|"'instance_uuid'"
op|':'
name|'instance_uuid'
op|'}'
op|')'
newline|'\n'
name|'raise'
name|'KeyError'
op|'('
string|'"unexpected update keyword \'%s\'"'
op|'%'
name|'key'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'key'
name|'in'
name|'datetime_fields'
name|'and'
name|'isinstance'
op|'('
name|'value'
op|','
name|'six'
op|'.'
name|'string_types'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'updates'
op|'['
name|'key'
op|']'
op|'='
name|'timeutils'
op|'.'
name|'parse_strtime'
op|'('
name|'value'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(danms): the send_update() call below is going to want to know'
nl|'\n'
comment|'# about the flavor, so we need to join the appropriate things here,'
nl|'\n'
comment|'# and objectify the result.'
nl|'\n'
dedent|''
dedent|''
name|'old_ref'
op|','
name|'instance_ref'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'instance_update_and_get_original'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance_uuid'
op|','
name|'updates'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'inst_obj'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'context'
op|','
name|'objects'
op|'.'
name|'Instance'
op|'('
op|')'
op|','
nl|'\n'
name|'instance_ref'
op|','
name|'expected_attrs'
op|'='
op|'['
string|"'system_metadata'"
op|']'
op|')'
newline|'\n'
name|'notifications'
op|'.'
name|'send_update'
op|'('
name|'context'
op|','
name|'old_ref'
op|','
name|'inst_obj'
op|','
name|'service'
op|')'
newline|'\n'
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'instance_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'messaging'
op|'.'
name|'expected_exceptions'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|')'
newline|'\n'
DECL|member|instance_get_by_uuid
name|'def'
name|'instance_get_by_uuid'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'columns_to_join'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'db'
op|'.'
name|'instance_get_by_uuid'
op|'('
name|'context'
op|','
name|'instance_uuid'
op|','
nl|'\n'
name|'columns_to_join'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|instance_get_all_by_host
dedent|''
name|'def'
name|'instance_get_all_by_host'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'host'
op|','
name|'node'
op|','
nl|'\n'
name|'columns_to_join'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'node'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'instance_get_all_by_host_and_node'
op|'('
nl|'\n'
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
name|'host'
op|','
name|'node'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'instance_get_all_by_host'
op|'('
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
name|'host'
op|','
nl|'\n'
name|'columns_to_join'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|migration_get_in_progress_by_host_and_node
dedent|''
name|'def'
name|'migration_get_in_progress_by_host_and_node'
op|'('
name|'self'
op|','
name|'context'
op|','
nl|'\n'
name|'host'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'migrations'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'migration_get_in_progress_by_host_and_node'
op|'('
nl|'\n'
name|'context'
op|','
name|'host'
op|','
name|'node'
op|')'
newline|'\n'
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'migrations'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'messaging'
op|'.'
name|'expected_exceptions'
op|'('
name|'exception'
op|'.'
name|'AggregateHostExists'
op|')'
newline|'\n'
DECL|member|aggregate_host_add
name|'def'
name|'aggregate_host_add'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'aggregate'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host_ref'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'aggregate_host_add'
op|'('
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
nl|'\n'
name|'aggregate'
op|'['
string|"'id'"
op|']'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'host_ref'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'messaging'
op|'.'
name|'expected_exceptions'
op|'('
name|'exception'
op|'.'
name|'AggregateHostNotFound'
op|')'
newline|'\n'
DECL|member|aggregate_host_delete
name|'def'
name|'aggregate_host_delete'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'aggregate'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'db'
op|'.'
name|'aggregate_host_delete'
op|'('
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
nl|'\n'
name|'aggregate'
op|'['
string|"'id'"
op|']'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
DECL|member|aggregate_metadata_get_by_host
dedent|''
name|'def'
name|'aggregate_metadata_get_by_host'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'host'
op|','
nl|'\n'
name|'key'
op|'='
string|"'availability_zone'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'aggregate_metadata_get_by_host'
op|'('
name|'context'
op|','
name|'host'
op|','
name|'key'
op|')'
newline|'\n'
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(hanlind): This can be removed in version 3.0 of the RPC API'
nl|'\n'
DECL|member|bw_usage_update
dedent|''
name|'def'
name|'bw_usage_update'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'uuid'
op|','
name|'mac'
op|','
name|'start_period'
op|','
nl|'\n'
name|'bw_in'
op|','
name|'bw_out'
op|','
name|'last_ctr_in'
op|','
name|'last_ctr_out'
op|','
nl|'\n'
name|'last_refreshed'
op|','
name|'update_cells'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
op|'['
name|'bw_in'
op|','
name|'bw_out'
op|','
name|'last_ctr_in'
op|','
name|'last_ctr_out'
op|']'
op|'.'
name|'count'
op|'('
name|'None'
op|')'
op|'!='
number|'4'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'db'
op|'.'
name|'bw_usage_update'
op|'('
name|'context'
op|','
name|'uuid'
op|','
name|'mac'
op|','
name|'start_period'
op|','
nl|'\n'
name|'bw_in'
op|','
name|'bw_out'
op|','
name|'last_ctr_in'
op|','
name|'last_ctr_out'
op|','
nl|'\n'
name|'last_refreshed'
op|','
nl|'\n'
name|'update_cells'
op|'='
name|'update_cells'
op|')'
newline|'\n'
dedent|''
name|'usage'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'bw_usage_get'
op|'('
name|'context'
op|','
name|'uuid'
op|','
name|'start_period'
op|','
name|'mac'
op|')'
newline|'\n'
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'usage'
op|')'
newline|'\n'
nl|'\n'
DECL|member|provider_fw_rule_get_all
dedent|''
name|'def'
name|'provider_fw_rule_get_all'
op|'('
name|'self'
op|','
name|'context'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rules'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'provider_fw_rule_get_all'
op|'('
name|'context'
op|')'
newline|'\n'
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'rules'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(danms): This can be removed in version 3.0 of the RPC API'
nl|'\n'
DECL|member|agent_build_get_by_triple
dedent|''
name|'def'
name|'agent_build_get_by_triple'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'hypervisor'
op|','
name|'os'
op|','
name|'architecture'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'info'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'agent_build_get_by_triple'
op|'('
name|'context'
op|','
name|'hypervisor'
op|','
name|'os'
op|','
nl|'\n'
name|'architecture'
op|')'
newline|'\n'
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'info'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(ndipanov): This can be removed in version 3.0 of the RPC API'
nl|'\n'
DECL|member|block_device_mapping_update_or_create
dedent|''
name|'def'
name|'block_device_mapping_update_or_create'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'values'
op|','
name|'create'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'create'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'bdm'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'block_device_mapping_update_or_create'
op|'('
name|'context'
op|','
nl|'\n'
name|'values'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'create'
name|'is'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'bdm'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'block_device_mapping_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'bdm'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'block_device_mapping_update'
op|'('
name|'context'
op|','
nl|'\n'
name|'values'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'values'
op|')'
newline|'\n'
dedent|''
name|'bdm_obj'
op|'='
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'context'
op|','
name|'objects'
op|'.'
name|'BlockDeviceMapping'
op|'('
op|')'
op|','
name|'bdm'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cells_rpcapi'
op|'.'
name|'bdm_update_or_create_at_top'
op|'('
name|'context'
op|','
name|'bdm_obj'
op|','
nl|'\n'
name|'create'
op|'='
name|'create'
op|')'
newline|'\n'
nl|'\n'
DECL|member|block_device_mapping_get_all_by_instance
dedent|''
name|'def'
name|'block_device_mapping_get_all_by_instance'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'legacy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bdms'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'block_device_mapping_get_all_by_instance'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'legacy'
op|':'
newline|'\n'
indent|'            '
name|'bdms'
op|'='
name|'block_device'
op|'.'
name|'legacy_mapping'
op|'('
name|'bdms'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'bdms'
op|')'
newline|'\n'
nl|'\n'
DECL|member|instance_get_all_by_filters
dedent|''
name|'def'
name|'instance_get_all_by_filters'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'filters'
op|','
name|'sort_key'
op|','
nl|'\n'
name|'sort_dir'
op|','
name|'columns_to_join'
op|','
nl|'\n'
name|'use_slave'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'instance_get_all_by_filters'
op|'('
nl|'\n'
name|'context'
op|','
name|'filters'
op|','
name|'sort_key'
op|','
name|'sort_dir'
op|','
nl|'\n'
name|'columns_to_join'
op|'='
name|'columns_to_join'
op|','
name|'use_slave'
op|'='
name|'use_slave'
op|')'
newline|'\n'
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|instance_get_active_by_window
dedent|''
name|'def'
name|'instance_get_active_by_window'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'begin'
op|','
name|'end'
op|','
nl|'\n'
name|'project_id'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
comment|'# Unused, but cannot remove until major RPC version bump'
nl|'\n'
indent|'        '
name|'result'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'instance_get_active_by_window'
op|'('
name|'context'
op|','
name|'begin'
op|','
name|'end'
op|','
nl|'\n'
name|'project_id'
op|','
name|'host'
op|')'
newline|'\n'
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|instance_get_active_by_window_joined
dedent|''
name|'def'
name|'instance_get_active_by_window_joined'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'begin'
op|','
name|'end'
op|','
nl|'\n'
name|'project_id'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'instance_get_active_by_window_joined'
op|'('
nl|'\n'
name|'context'
op|','
name|'begin'
op|','
name|'end'
op|','
name|'project_id'
op|','
name|'host'
op|')'
newline|'\n'
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|instance_destroy
dedent|''
name|'def'
name|'instance_destroy'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'instance_destroy'
op|'('
name|'context'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|instance_fault_create
dedent|''
name|'def'
name|'instance_fault_create'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'instance_fault_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(kerrin): The last_refreshed argument is unused by this method'
nl|'\n'
comment|'# and can be removed in v3.0 of the RPC API.'
nl|'\n'
DECL|member|vol_usage_update
dedent|''
name|'def'
name|'vol_usage_update'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'vol_id'
op|','
name|'rd_req'
op|','
name|'rd_bytes'
op|','
name|'wr_req'
op|','
nl|'\n'
name|'wr_bytes'
op|','
name|'instance'
op|','
name|'last_refreshed'
op|','
name|'update_totals'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vol_usage'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'vol_usage_update'
op|'('
name|'context'
op|','
name|'vol_id'
op|','
nl|'\n'
name|'rd_req'
op|','
name|'rd_bytes'
op|','
nl|'\n'
name|'wr_req'
op|','
name|'wr_bytes'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'project_id'"
op|']'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'user_id'"
op|']'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'availability_zone'"
op|']'
op|','
nl|'\n'
name|'update_totals'
op|')'
newline|'\n'
nl|'\n'
comment|'# We have just updated the database, so send the notification now'
nl|'\n'
name|'self'
op|'.'
name|'notifier'
op|'.'
name|'info'
op|'('
name|'context'
op|','
string|"'volume.usage'"
op|','
nl|'\n'
name|'compute_utils'
op|'.'
name|'usage_volume_info'
op|'('
name|'vol_usage'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'messaging'
op|'.'
name|'expected_exceptions'
op|'('
name|'exception'
op|'.'
name|'ComputeHostNotFound'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'HostBinaryNotFound'
op|')'
newline|'\n'
DECL|member|service_get_all_by
name|'def'
name|'service_get_all_by'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'topic'
op|','
name|'host'
op|','
name|'binary'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'any'
op|'('
op|'('
name|'topic'
op|','
name|'host'
op|','
name|'binary'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'service_get_all'
op|'('
name|'context'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'all'
op|'('
op|'('
name|'topic'
op|','
name|'host'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'topic'
op|'=='
string|"'compute'"
op|':'
newline|'\n'
indent|'                '
name|'result'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'service_get_by_compute_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
newline|'\n'
comment|'# NOTE(sbauza): Only Juno computes are still calling this'
nl|'\n'
comment|'# conductor method for getting service_get_by_compute_node,'
nl|'\n'
comment|'# but expect a compute_node field so we can safely add it.'
nl|'\n'
name|'result'
op|'['
string|"'compute_node'"
nl|'\n'
op|']'
op|'='
name|'objects'
op|'.'
name|'ComputeNodeList'
op|'.'
name|'get_all_by_host'
op|'('
nl|'\n'
name|'context'
op|','
name|'result'
op|'['
string|"'host'"
op|']'
op|')'
newline|'\n'
comment|'# FIXME(comstud) Potentially remove this on bump to v3.0'
nl|'\n'
name|'result'
op|'='
op|'['
name|'result'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'result'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'service_get_by_host_and_topic'
op|'('
name|'context'
op|','
nl|'\n'
name|'host'
op|','
name|'topic'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'all'
op|'('
op|'('
name|'host'
op|','
name|'binary'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'service_get_by_host_and_binary'
op|'('
nl|'\n'
name|'context'
op|','
name|'host'
op|','
name|'binary'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'topic'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'service_get_all_by_topic'
op|'('
name|'context'
op|','
name|'topic'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'host'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'service_get_all_by_host'
op|'('
name|'context'
op|','
name|'host'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'messaging'
op|'.'
name|'expected_exceptions'
op|'('
name|'exception'
op|'.'
name|'InstanceActionNotFound'
op|')'
newline|'\n'
DECL|member|action_event_start
name|'def'
name|'action_event_start'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'evt'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'action_event_start'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'evt'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'messaging'
op|'.'
name|'expected_exceptions'
op|'('
name|'exception'
op|'.'
name|'InstanceActionNotFound'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InstanceActionEventNotFound'
op|')'
newline|'\n'
DECL|member|action_event_finish
name|'def'
name|'action_event_finish'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'evt'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'action_event_finish'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'evt'
op|')'
newline|'\n'
nl|'\n'
DECL|member|service_create
dedent|''
name|'def'
name|'service_create'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'svc'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'service_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'svc'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'messaging'
op|'.'
name|'expected_exceptions'
op|'('
name|'exception'
op|'.'
name|'ServiceNotFound'
op|')'
newline|'\n'
DECL|member|service_destroy
name|'def'
name|'service_destroy'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'service_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'db'
op|'.'
name|'service_destroy'
op|'('
name|'context'
op|','
name|'service_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|compute_node_create
dedent|''
name|'def'
name|'compute_node_create'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'compute_node_create'
op|'('
name|'context'
op|','
name|'values'
op|')'
newline|'\n'
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|compute_node_update
dedent|''
name|'def'
name|'compute_node_update'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'node'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'compute_node_update'
op|'('
name|'context'
op|','
name|'node'
op|'['
string|"'id'"
op|']'
op|','
name|'values'
op|')'
newline|'\n'
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|compute_node_delete
dedent|''
name|'def'
name|'compute_node_delete'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'compute_node_delete'
op|'('
name|'context'
op|','
name|'node'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'messaging'
op|'.'
name|'expected_exceptions'
op|'('
name|'exception'
op|'.'
name|'ServiceNotFound'
op|')'
newline|'\n'
DECL|member|service_update
name|'def'
name|'service_update'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'service'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'svc'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'service_update'
op|'('
name|'context'
op|','
name|'service'
op|'['
string|"'id'"
op|']'
op|','
name|'values'
op|')'
newline|'\n'
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'svc'
op|')'
newline|'\n'
nl|'\n'
DECL|member|task_log_get
dedent|''
name|'def'
name|'task_log_get'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'task_name'
op|','
name|'begin'
op|','
name|'end'
op|','
name|'host'
op|','
name|'state'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'task_log_get'
op|'('
name|'context'
op|','
name|'task_name'
op|','
name|'begin'
op|','
name|'end'
op|','
name|'host'
op|','
nl|'\n'
name|'state'
op|')'
newline|'\n'
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|task_log_begin_task
dedent|''
name|'def'
name|'task_log_begin_task'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'task_name'
op|','
name|'begin'
op|','
name|'end'
op|','
name|'host'
op|','
nl|'\n'
name|'task_items'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'task_log_begin_task'
op|'('
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
name|'task_name'
op|','
nl|'\n'
name|'begin'
op|','
name|'end'
op|','
name|'host'
op|','
name|'task_items'
op|','
nl|'\n'
name|'message'
op|')'
newline|'\n'
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|task_log_end_task
dedent|''
name|'def'
name|'task_log_end_task'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'task_name'
op|','
name|'begin'
op|','
name|'end'
op|','
name|'host'
op|','
nl|'\n'
name|'errors'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'self'
op|'.'
name|'db'
op|'.'
name|'task_log_end_task'
op|'('
name|'context'
op|'.'
name|'elevated'
op|'('
op|')'
op|','
name|'task_name'
op|','
nl|'\n'
name|'begin'
op|','
name|'end'
op|','
name|'host'
op|','
name|'errors'
op|','
name|'message'
op|')'
newline|'\n'
name|'return'
name|'jsonutils'
op|'.'
name|'to_primitive'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
comment|'# NOTE(hanlind): This can be removed in version 3.0 of the RPC API'
nl|'\n'
DECL|member|notify_usage_exists
dedent|''
name|'def'
name|'notify_usage_exists'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'current_period'
op|','
nl|'\n'
name|'ignore_missing_network_data'
op|','
nl|'\n'
name|'system_metadata'
op|','
name|'extra_usage_info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'instance'
op|','
name|'objects'
op|'.'
name|'Instance'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'attrs'
op|'='
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|']'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'_from_db_object'
op|'('
name|'context'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'Instance'
op|'('
op|')'
op|','
nl|'\n'
name|'instance'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
name|'attrs'
op|')'
newline|'\n'
dedent|''
name|'compute_utils'
op|'.'
name|'notify_usage_exists'
op|'('
name|'self'
op|'.'
name|'notifier'
op|','
name|'context'
op|','
name|'instance'
op|','
nl|'\n'
name|'current_period'
op|','
nl|'\n'
name|'ignore_missing_network_data'
op|','
nl|'\n'
name|'system_metadata'
op|','
name|'extra_usage_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|security_groups_trigger_handler
dedent|''
name|'def'
name|'security_groups_trigger_handler'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'event'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'security_group_api'
op|'.'
name|'trigger_handler'
op|'('
name|'event'
op|','
name|'context'
op|','
op|'*'
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|member|security_groups_trigger_members_refresh
dedent|''
name|'def'
name|'security_groups_trigger_members_refresh'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'group_ids'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'security_group_api'
op|'.'
name|'trigger_members_refresh'
op|'('
name|'context'
op|','
name|'group_ids'
op|')'
newline|'\n'
nl|'\n'
DECL|member|network_migrate_instance_start
dedent|''
name|'def'
name|'network_migrate_instance_start'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'migration'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'network_api'
op|'.'
name|'migrate_instance_start'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'migration'
op|')'
newline|'\n'
nl|'\n'
DECL|member|network_migrate_instance_finish
dedent|''
name|'def'
name|'network_migrate_instance_finish'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'migration'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'network_api'
op|'.'
name|'migrate_instance_finish'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'migration'
op|')'
newline|'\n'
nl|'\n'
DECL|member|quota_commit
dedent|''
name|'def'
name|'quota_commit'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'reservations'
op|','
name|'project_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'user_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'quota'
op|'.'
name|'QUOTAS'
op|'.'
name|'commit'
op|'('
name|'context'
op|','
name|'reservations'
op|','
name|'project_id'
op|'='
name|'project_id'
op|','
nl|'\n'
name|'user_id'
op|'='
name|'user_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|quota_rollback
dedent|''
name|'def'
name|'quota_rollback'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'reservations'
op|','
name|'project_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'user_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'quota'
op|'.'
name|'QUOTAS'
op|'.'
name|'rollback'
op|'('
name|'context'
op|','
name|'reservations'
op|','
name|'project_id'
op|'='
name|'project_id'
op|','
nl|'\n'
name|'user_id'
op|'='
name|'user_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_ec2_ids
dedent|''
name|'def'
name|'get_ec2_ids'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ec2_ids'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'ec2_ids'
op|'['
string|"'instance-id'"
op|']'
op|'='
name|'ec2utils'
op|'.'
name|'id_to_ec2_inst_id'
op|'('
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'ec2_ids'
op|'['
string|"'ami-id'"
op|']'
op|'='
name|'ec2utils'
op|'.'
name|'glance_id_to_ec2_id'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'image_ref'"
op|']'
op|')'
newline|'\n'
name|'for'
name|'image_type'
name|'in'
op|'['
string|"'kernel'"
op|','
string|"'ramdisk'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'image_id'
op|'='
name|'instance'
op|'.'
name|'get'
op|'('
string|"'%s_id'"
op|'%'
name|'image_type'
op|')'
newline|'\n'
name|'if'
name|'image_id'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'ec2_image_type'
op|'='
name|'ec2utils'
op|'.'
name|'image_type'
op|'('
name|'image_type'
op|')'
newline|'\n'
name|'ec2_id'
op|'='
name|'ec2utils'
op|'.'
name|'glance_id_to_ec2_id'
op|'('
name|'context'
op|','
name|'image_id'
op|','
nl|'\n'
name|'ec2_image_type'
op|')'
newline|'\n'
name|'ec2_ids'
op|'['
string|"'%s-id'"
op|'%'
name|'image_type'
op|']'
op|'='
name|'ec2_id'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'ec2_ids'
newline|'\n'
nl|'\n'
DECL|member|compute_unrescue
dedent|''
name|'def'
name|'compute_unrescue'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'compute_api'
op|'.'
name|'unrescue'
op|'('
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_object_dispatch
dedent|''
name|'def'
name|'_object_dispatch'
op|'('
name|'self'
op|','
name|'target'
op|','
name|'method'
op|','
name|'args'
op|','
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Dispatch a call to an object method.\n\n        This ensures that object methods get called and any exception\n        that is raised gets wrapped in an ExpectedException for forwarding\n        back to the caller (without spamming the conductor logs).\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
comment|'# NOTE(danms): Keep the getattr inside the try block since'
nl|'\n'
comment|'# a missing method is really a client problem'
nl|'\n'
indent|'            '
name|'return'
name|'getattr'
op|'('
name|'target'
op|','
name|'method'
op|')'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'messaging'
op|'.'
name|'ExpectedException'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|object_class_action
dedent|''
dedent|''
name|'def'
name|'object_class_action'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'objname'
op|','
name|'objmethod'
op|','
nl|'\n'
name|'objver'
op|','
name|'args'
op|','
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Perform a classmethod action on an object."""'
newline|'\n'
name|'objclass'
op|'='
name|'nova_object'
op|'.'
name|'NovaObject'
op|'.'
name|'obj_class_from_name'
op|'('
name|'objname'
op|','
nl|'\n'
name|'objver'
op|')'
newline|'\n'
name|'args'
op|'='
name|'tuple'
op|'('
op|'['
name|'context'
op|']'
op|'+'
name|'list'
op|'('
name|'args'
op|')'
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_object_dispatch'
op|'('
name|'objclass'
op|','
name|'objmethod'
op|','
name|'args'
op|','
name|'kwargs'
op|')'
newline|'\n'
comment|'# NOTE(danms): The RPC layer will convert to primitives for us,'
nl|'\n'
comment|'# but in this case, we need to honor the version the client is'
nl|'\n'
comment|'# asking for, so we do it before returning here.'
nl|'\n'
name|'return'
op|'('
name|'result'
op|'.'
name|'obj_to_primitive'
op|'('
name|'target_version'
op|'='
name|'objver'
op|')'
nl|'\n'
name|'if'
name|'isinstance'
op|'('
name|'result'
op|','
name|'nova_object'
op|'.'
name|'NovaObject'
op|')'
name|'else'
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|object_action
dedent|''
name|'def'
name|'object_action'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'objinst'
op|','
name|'objmethod'
op|','
name|'args'
op|','
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Perform an action on an object."""'
newline|'\n'
name|'oldobj'
op|'='
name|'objinst'
op|'.'
name|'obj_clone'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'self'
op|'.'
name|'_object_dispatch'
op|'('
name|'objinst'
op|','
name|'objmethod'
op|','
name|'args'
op|','
name|'kwargs'
op|')'
newline|'\n'
name|'updates'
op|'='
name|'dict'
op|'('
op|')'
newline|'\n'
comment|'# NOTE(danms): Diff the object with the one passed to us and'
nl|'\n'
comment|'# generate a list of changes to forward back'
nl|'\n'
name|'for'
name|'name'
op|','
name|'field'
name|'in'
name|'objinst'
op|'.'
name|'fields'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'objinst'
op|'.'
name|'obj_attr_is_set'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
comment|'# Avoid demand-loading anything'
nl|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'if'
op|'('
name|'not'
name|'oldobj'
op|'.'
name|'obj_attr_is_set'
op|'('
name|'name'
op|')'
name|'or'
nl|'\n'
name|'getattr'
op|'('
name|'oldobj'
op|','
name|'name'
op|')'
op|'!='
name|'getattr'
op|'('
name|'objinst'
op|','
name|'name'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'updates'
op|'['
name|'name'
op|']'
op|'='
name|'field'
op|'.'
name|'to_primitive'
op|'('
name|'objinst'
op|','
name|'name'
op|','
nl|'\n'
name|'getattr'
op|'('
name|'objinst'
op|','
name|'name'
op|')'
op|')'
newline|'\n'
comment|'# This is safe since a field named this would conflict with the'
nl|'\n'
comment|'# method anyway'
nl|'\n'
dedent|''
dedent|''
name|'updates'
op|'['
string|"'obj_what_changed'"
op|']'
op|'='
name|'objinst'
op|'.'
name|'obj_what_changed'
op|'('
op|')'
newline|'\n'
name|'return'
name|'updates'
op|','
name|'result'
newline|'\n'
nl|'\n'
DECL|member|object_backport
dedent|''
name|'def'
name|'object_backport'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'objinst'
op|','
name|'target_version'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'objinst'
op|'.'
name|'obj_to_primitive'
op|'('
name|'target_version'
op|'='
name|'target_version'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ComputeTaskManager
dedent|''
dedent|''
name|'class'
name|'ComputeTaskManager'
op|'('
name|'base'
op|'.'
name|'Base'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Namespace for compute methods.\n\n    This class presents an rpc API for nova-conductor under the \'compute_task\'\n    namespace.  The methods here are compute operations that are invoked\n    by the API service.  These methods see the operation to completion, which\n    may involve coordinating activities on multiple compute nodes.\n    """'
newline|'\n'
nl|'\n'
DECL|variable|target
name|'target'
op|'='
name|'messaging'
op|'.'
name|'Target'
op|'('
name|'namespace'
op|'='
string|"'compute_task'"
op|','
name|'version'
op|'='
string|"'1.11'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ComputeTaskManager'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_rpcapi'
op|'='
name|'compute_rpcapi'
op|'.'
name|'ComputeAPI'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'image_api'
op|'='
name|'image'
op|'.'
name|'API'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'scheduler_client'
op|'='
name|'scheduler_client'
op|'.'
name|'SchedulerClient'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'messaging'
op|'.'
name|'expected_exceptions'
op|'('
name|'exception'
op|'.'
name|'NoValidHost'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'ComputeServiceUnavailable'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InvalidHypervisorType'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InvalidCPUInfo'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'UnableToMigrateToSelf'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'DestinationHypervisorTooOld'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InvalidLocalStorage'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InvalidSharedStorage'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'HypervisorUnavailable'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'MigrationPreCheckError'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'LiveMigrationWithOldNovaNotSafe'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'UnsupportedPolicyException'
op|')'
newline|'\n'
DECL|member|migrate_server
name|'def'
name|'migrate_server'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'scheduler_hint'
op|','
name|'live'
op|','
name|'rebuild'
op|','
nl|'\n'
name|'flavor'
op|','
name|'block_migration'
op|','
name|'disk_over_commit'
op|','
name|'reservations'
op|'='
name|'None'
op|','
nl|'\n'
name|'clean_shutdown'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'instance'
name|'and'
name|'not'
name|'isinstance'
op|'('
name|'instance'
op|','
name|'nova_object'
op|'.'
name|'NovaObject'
op|')'
op|':'
newline|'\n'
comment|'# NOTE(danms): Until v2 of the RPC API, we need to tolerate'
nl|'\n'
comment|'# old-world instance objects here'
nl|'\n'
indent|'            '
name|'attrs'
op|'='
op|'['
string|"'metadata'"
op|','
string|"'system_metadata'"
op|','
string|"'info_cache'"
op|','
nl|'\n'
string|"'security_groups'"
op|']'
newline|'\n'
name|'instance'
op|'='
name|'objects'
op|'.'
name|'Instance'
op|'.'
name|'_from_db_object'
op|'('
nl|'\n'
name|'context'
op|','
name|'objects'
op|'.'
name|'Instance'
op|'('
op|')'
op|','
name|'instance'
op|','
nl|'\n'
name|'expected_attrs'
op|'='
name|'attrs'
op|')'
newline|'\n'
comment|'# NOTE(melwitt): Remove this in version 2.0 of the RPC API'
nl|'\n'
dedent|''
name|'if'
name|'flavor'
name|'and'
name|'not'
name|'isinstance'
op|'('
name|'flavor'
op|','
name|'objects'
op|'.'
name|'Flavor'
op|')'
op|':'
newline|'\n'
comment|'# Code downstream may expect extra_specs to be populated since it'
nl|'\n'
comment|'# is receiving an object, so lookup the flavor to ensure this.'
nl|'\n'
indent|'            '
name|'flavor'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'.'
name|'get_by_id'
op|'('
name|'context'
op|','
name|'flavor'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'live'
name|'and'
name|'not'
name|'rebuild'
name|'and'
name|'not'
name|'flavor'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_live_migrate'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'scheduler_hint'
op|','
nl|'\n'
name|'block_migration'
op|','
name|'disk_over_commit'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'not'
name|'live'
name|'and'
name|'not'
name|'rebuild'
name|'and'
name|'flavor'
op|':'
newline|'\n'
indent|'            '
name|'instance_uuid'
op|'='
name|'instance'
op|'['
string|"'uuid'"
op|']'
newline|'\n'
name|'with'
name|'compute_utils'
op|'.'
name|'EventReporter'
op|'('
name|'context'
op|','
string|"'cold_migrate'"
op|','
nl|'\n'
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_cold_migrate'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'flavor'
op|','
nl|'\n'
name|'scheduler_hint'
op|'['
string|"'filter_properties'"
op|']'
op|','
nl|'\n'
name|'reservations'
op|','
name|'clean_shutdown'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cold_migrate
dedent|''
dedent|''
name|'def'
name|'_cold_migrate'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'flavor'
op|','
name|'filter_properties'
op|','
nl|'\n'
name|'reservations'
op|','
name|'clean_shutdown'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'image_ref'
op|'='
name|'instance'
op|'.'
name|'image_ref'
newline|'\n'
name|'image'
op|'='
name|'compute_utils'
op|'.'
name|'get_image_metadata'
op|'('
nl|'\n'
name|'context'
op|','
name|'self'
op|'.'
name|'image_api'
op|','
name|'image_ref'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
name|'request_spec'
op|'='
name|'scheduler_utils'
op|'.'
name|'build_request_spec'
op|'('
nl|'\n'
name|'context'
op|','
name|'image'
op|','
op|'['
name|'instance'
op|']'
op|','
name|'instance_type'
op|'='
name|'flavor'
op|')'
newline|'\n'
nl|'\n'
name|'quotas'
op|'='
name|'objects'
op|'.'
name|'Quotas'
op|'.'
name|'from_reservations'
op|'('
name|'context'
op|','
nl|'\n'
name|'reservations'
op|','
nl|'\n'
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'scheduler_utils'
op|'.'
name|'setup_instance_group'
op|'('
name|'context'
op|','
name|'request_spec'
op|','
nl|'\n'
name|'filter_properties'
op|')'
newline|'\n'
name|'scheduler_utils'
op|'.'
name|'populate_retry'
op|'('
name|'filter_properties'
op|','
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
name|'hosts'
op|'='
name|'self'
op|'.'
name|'scheduler_client'
op|'.'
name|'select_destinations'
op|'('
nl|'\n'
name|'context'
op|','
name|'request_spec'
op|','
name|'filter_properties'
op|')'
newline|'\n'
name|'host_state'
op|'='
name|'hosts'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NoValidHost'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'vm_state'
op|'='
name|'instance'
op|'.'
name|'vm_state'
newline|'\n'
name|'if'
name|'not'
name|'vm_state'
op|':'
newline|'\n'
indent|'                '
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
dedent|''
name|'updates'
op|'='
op|'{'
string|"'vm_state'"
op|':'
name|'vm_state'
op|','
string|"'task_state'"
op|':'
name|'None'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_set_vm_state_and_notify'
op|'('
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'migrate_server'"
op|','
nl|'\n'
name|'updates'
op|','
name|'ex'
op|','
name|'request_spec'
op|')'
newline|'\n'
name|'quotas'
op|'.'
name|'rollback'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|"# if the flavor IDs match, it's migrate; otherwise resize"
nl|'\n'
name|'if'
name|'flavor'
op|'['
string|"'id'"
op|']'
op|'=='
name|'instance'
op|'['
string|"'instance_type_id'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'_'
op|'('
string|'"No valid host found for cold migrate"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'='
name|'_'
op|'('
string|'"No valid host found for resize"'
op|')'
newline|'\n'
dedent|''
name|'raise'
name|'exception'
op|'.'
name|'NoValidHost'
op|'('
name|'reason'
op|'='
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'UnsupportedPolicyException'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'excutils'
op|'.'
name|'save_and_reraise_exception'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'vm_state'
op|'='
name|'instance'
op|'.'
name|'vm_state'
newline|'\n'
name|'if'
name|'not'
name|'vm_state'
op|':'
newline|'\n'
indent|'                    '
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ACTIVE'
newline|'\n'
dedent|''
name|'updates'
op|'='
op|'{'
string|"'vm_state'"
op|':'
name|'vm_state'
op|','
string|"'task_state'"
op|':'
name|'None'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_set_vm_state_and_notify'
op|'('
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'migrate_server'"
op|','
nl|'\n'
name|'updates'
op|','
name|'ex'
op|','
name|'request_spec'
op|')'
newline|'\n'
name|'quotas'
op|'.'
name|'rollback'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'scheduler_utils'
op|'.'
name|'populate_filter_properties'
op|'('
name|'filter_properties'
op|','
nl|'\n'
name|'host_state'
op|')'
newline|'\n'
comment|'# context is not serializable'
nl|'\n'
name|'filter_properties'
op|'.'
name|'pop'
op|'('
string|"'context'"
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
op|'('
name|'host'
op|','
name|'node'
op|')'
op|'='
op|'('
name|'host_state'
op|'['
string|"'host'"
op|']'
op|','
name|'host_state'
op|'['
string|"'nodename'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_rpcapi'
op|'.'
name|'prep_resize'
op|'('
nl|'\n'
name|'context'
op|','
name|'image'
op|','
name|'instance'
op|','
nl|'\n'
name|'flavor'
op|','
name|'host'
op|','
nl|'\n'
name|'reservations'
op|','
name|'request_spec'
op|'='
name|'request_spec'
op|','
nl|'\n'
name|'filter_properties'
op|'='
name|'filter_properties'
op|','
name|'node'
op|'='
name|'node'
op|','
nl|'\n'
name|'clean_shutdown'
op|'='
name|'clean_shutdown'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'excutils'
op|'.'
name|'save_and_reraise_exception'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'updates'
op|'='
op|'{'
string|"'vm_state'"
op|':'
name|'instance'
op|'.'
name|'vm_state'
op|','
nl|'\n'
string|"'task_state'"
op|':'
name|'None'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_set_vm_state_and_notify'
op|'('
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'migrate_server'"
op|','
nl|'\n'
name|'updates'
op|','
name|'ex'
op|','
name|'request_spec'
op|')'
newline|'\n'
name|'quotas'
op|'.'
name|'rollback'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_set_vm_state_and_notify
dedent|''
dedent|''
dedent|''
name|'def'
name|'_set_vm_state_and_notify'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance_uuid'
op|','
name|'method'
op|','
name|'updates'
op|','
nl|'\n'
name|'ex'
op|','
name|'request_spec'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'scheduler_utils'
op|'.'
name|'set_vm_state_and_notify'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance_uuid'
op|','
string|"'compute_task'"
op|','
name|'method'
op|','
name|'updates'
op|','
nl|'\n'
name|'ex'
op|','
name|'request_spec'
op|','
name|'self'
op|'.'
name|'db'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_live_migrate
dedent|''
name|'def'
name|'_live_migrate'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'scheduler_hint'
op|','
nl|'\n'
name|'block_migration'
op|','
name|'disk_over_commit'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'destination'
op|'='
name|'scheduler_hint'
op|'.'
name|'get'
op|'('
string|'"host"'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_set_vm_state
name|'def'
name|'_set_vm_state'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'ex'
op|','
name|'vm_state'
op|'='
name|'None'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'request_spec'
op|'='
op|'{'
string|"'instance_properties'"
op|':'
op|'{'
nl|'\n'
string|"'uuid'"
op|':'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'scheduler_utils'
op|'.'
name|'set_vm_state_and_notify'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'compute_task'"
op|','
string|"'migrate_server'"
op|','
nl|'\n'
name|'dict'
op|'('
name|'vm_state'
op|'='
name|'vm_state'
op|','
nl|'\n'
name|'task_state'
op|'='
name|'task_state'
op|','
nl|'\n'
name|'expected_task_state'
op|'='
name|'task_states'
op|'.'
name|'MIGRATING'
op|','
op|')'
op|','
nl|'\n'
name|'ex'
op|','
name|'request_spec'
op|','
name|'self'
op|'.'
name|'db'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'live_migrate'
op|'.'
name|'execute'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'destination'
op|','
nl|'\n'
name|'block_migration'
op|','
name|'disk_over_commit'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'exception'
op|'.'
name|'NoValidHost'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'ComputeServiceUnavailable'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InvalidHypervisorType'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InvalidCPUInfo'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'UnableToMigrateToSelf'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'DestinationHypervisorTooOld'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InvalidLocalStorage'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InvalidSharedStorage'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'HypervisorUnavailable'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InstanceInvalidState'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'MigrationPreCheckError'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'LiveMigrationWithOldNovaNotSafe'
op|')'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'excutils'
op|'.'
name|'save_and_reraise_exception'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# TODO(johngarbutt) - eventually need instance actions here'
nl|'\n'
indent|'                '
name|'_set_vm_state'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'ex'
op|','
name|'instance'
op|'.'
name|'vm_state'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'error'
op|'('
name|'_LE'
op|'('
string|"'Migration of instance %(instance_id)s to host'"
nl|'\n'
string|"' %(dest)s unexpectedly failed.'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'instance_id'"
op|':'
name|'instance'
op|'['
string|"'uuid'"
op|']'
op|','
string|"'dest'"
op|':'
name|'destination'
op|'}'
op|','
nl|'\n'
name|'exc_info'
op|'='
name|'True'
op|')'
newline|'\n'
name|'_set_vm_state'
op|'('
name|'context'
op|','
name|'instance'
op|','
name|'ex'
op|','
name|'vm_states'
op|'.'
name|'ERROR'
op|','
nl|'\n'
name|'instance'
op|'['
string|"'task_state'"
op|']'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'MigrationError'
op|'('
name|'reason'
op|'='
name|'six'
op|'.'
name|'text_type'
op|'('
name|'ex'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|build_instances
dedent|''
dedent|''
name|'def'
name|'build_instances'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instances'
op|','
name|'image'
op|','
name|'filter_properties'
op|','
nl|'\n'
name|'admin_password'
op|','
name|'injected_files'
op|','
name|'requested_networks'
op|','
nl|'\n'
name|'security_groups'
op|','
name|'block_device_mapping'
op|'='
name|'None'
op|','
name|'legacy_bdm'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
comment|'# TODO(ndipanov): Remove block_device_mapping and legacy_bdm in version'
nl|'\n'
comment|'#                 2.0 of the RPC API.'
nl|'\n'
indent|'        '
name|'request_spec'
op|'='
name|'scheduler_utils'
op|'.'
name|'build_request_spec'
op|'('
name|'context'
op|','
name|'image'
op|','
nl|'\n'
name|'instances'
op|')'
newline|'\n'
comment|'# TODO(danms): Remove this in version 2.0 of the RPC API'
nl|'\n'
name|'if'
op|'('
name|'requested_networks'
name|'and'
nl|'\n'
name|'not'
name|'isinstance'
op|'('
name|'requested_networks'
op|','
nl|'\n'
name|'objects'
op|'.'
name|'NetworkRequestList'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'requested_networks'
op|'='
name|'objects'
op|'.'
name|'NetworkRequestList'
op|'('
nl|'\n'
name|'objects'
op|'='
op|'['
name|'objects'
op|'.'
name|'NetworkRequest'
op|'.'
name|'from_tuple'
op|'('
name|'t'
op|')'
nl|'\n'
name|'for'
name|'t'
name|'in'
name|'requested_networks'
op|']'
op|')'
newline|'\n'
comment|'# TODO(melwitt): Remove this in version 2.0 of the RPC API'
nl|'\n'
dedent|''
name|'flavor'
op|'='
name|'filter_properties'
op|'.'
name|'get'
op|'('
string|"'instance_type'"
op|')'
newline|'\n'
name|'if'
name|'flavor'
name|'and'
name|'not'
name|'isinstance'
op|'('
name|'flavor'
op|','
name|'objects'
op|'.'
name|'Flavor'
op|')'
op|':'
newline|'\n'
comment|'# Code downstream may expect extra_specs to be populated since it'
nl|'\n'
comment|'# is receiving an object, so lookup the flavor to ensure this.'
nl|'\n'
indent|'            '
name|'flavor'
op|'='
name|'objects'
op|'.'
name|'Flavor'
op|'.'
name|'get_by_id'
op|'('
name|'context'
op|','
name|'flavor'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'filter_properties'
op|'='
name|'dict'
op|'('
name|'filter_properties'
op|','
name|'instance_type'
op|'='
name|'flavor'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'scheduler_utils'
op|'.'
name|'setup_instance_group'
op|'('
name|'context'
op|','
name|'request_spec'
op|','
nl|'\n'
name|'filter_properties'
op|')'
newline|'\n'
comment|'# check retry policy. Rather ugly use of instances[0]...'
nl|'\n'
comment|"# but if we've exceeded max retries... then we really only"
nl|'\n'
comment|'# have a single instance.'
nl|'\n'
name|'scheduler_utils'
op|'.'
name|'populate_retry'
op|'('
name|'filter_properties'
op|','
nl|'\n'
name|'instances'
op|'['
number|'0'
op|']'
op|'.'
name|'uuid'
op|')'
newline|'\n'
name|'hosts'
op|'='
name|'self'
op|'.'
name|'scheduler_client'
op|'.'
name|'select_destinations'
op|'('
name|'context'
op|','
nl|'\n'
name|'request_spec'
op|','
name|'filter_properties'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'exc'
op|':'
newline|'\n'
indent|'            '
name|'updates'
op|'='
op|'{'
string|"'vm_state'"
op|':'
name|'vm_states'
op|'.'
name|'ERROR'
op|','
string|"'task_state'"
op|':'
name|'None'
op|'}'
newline|'\n'
name|'for'
name|'instance'
name|'in'
name|'instances'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_set_vm_state_and_notify'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|','
string|"'build_instances'"
op|','
name|'updates'
op|','
nl|'\n'
name|'exc'
op|','
name|'request_spec'
op|')'
newline|'\n'
dedent|''
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
op|'('
name|'instance'
op|','
name|'host'
op|')'
name|'in'
name|'itertools'
op|'.'
name|'izip'
op|'('
name|'instances'
op|','
name|'hosts'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'instance'
op|'.'
name|'refresh'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'exception'
op|'.'
name|'InstanceNotFound'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'InstanceInfoCacheNotFound'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'LOG'
op|'.'
name|'debug'
op|'('
string|"'Instance deleted during build'"
op|','
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'local_filter_props'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'filter_properties'
op|')'
newline|'\n'
name|'scheduler_utils'
op|'.'
name|'populate_filter_properties'
op|'('
name|'local_filter_props'
op|','
nl|'\n'
name|'host'
op|')'
newline|'\n'
comment|"# The block_device_mapping passed from the api doesn't contain"
nl|'\n'
comment|'# instance specific information'
nl|'\n'
name|'bdms'
op|'='
name|'objects'
op|'.'
name|'BlockDeviceMappingList'
op|'.'
name|'get_by_instance_uuid'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'compute_rpcapi'
op|'.'
name|'build_and_run_instance'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance'
op|'='
name|'instance'
op|','
name|'host'
op|'='
name|'host'
op|'['
string|"'host'"
op|']'
op|','
name|'image'
op|'='
name|'image'
op|','
nl|'\n'
name|'request_spec'
op|'='
name|'request_spec'
op|','
nl|'\n'
name|'filter_properties'
op|'='
name|'local_filter_props'
op|','
nl|'\n'
name|'admin_password'
op|'='
name|'admin_password'
op|','
nl|'\n'
name|'injected_files'
op|'='
name|'injected_files'
op|','
nl|'\n'
name|'requested_networks'
op|'='
name|'requested_networks'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'security_groups'
op|','
nl|'\n'
name|'block_device_mapping'
op|'='
name|'bdms'
op|','
name|'node'
op|'='
name|'host'
op|'['
string|"'nodename'"
op|']'
op|','
nl|'\n'
name|'limits'
op|'='
name|'host'
op|'['
string|"'limits'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_delete_image
dedent|''
dedent|''
name|'def'
name|'_delete_image'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image_id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'image_api'
op|'.'
name|'delete'
op|'('
name|'context'
op|','
name|'image_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_schedule_instances
dedent|''
name|'def'
name|'_schedule_instances'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'image'
op|','
name|'filter_properties'
op|','
nl|'\n'
op|'*'
name|'instances'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'request_spec'
op|'='
name|'scheduler_utils'
op|'.'
name|'build_request_spec'
op|'('
name|'context'
op|','
name|'image'
op|','
nl|'\n'
name|'instances'
op|')'
newline|'\n'
name|'scheduler_utils'
op|'.'
name|'setup_instance_group'
op|'('
name|'context'
op|','
name|'request_spec'
op|','
nl|'\n'
name|'filter_properties'
op|')'
newline|'\n'
name|'hosts'
op|'='
name|'self'
op|'.'
name|'scheduler_client'
op|'.'
name|'select_destinations'
op|'('
name|'context'
op|','
nl|'\n'
name|'request_spec'
op|','
name|'filter_properties'
op|')'
newline|'\n'
name|'return'
name|'hosts'
newline|'\n'
nl|'\n'
DECL|member|unshelve_instance
dedent|''
name|'def'
name|'unshelve_instance'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sys_meta'
op|'='
name|'instance'
op|'.'
name|'system_metadata'
newline|'\n'
nl|'\n'
DECL|function|safe_image_show
name|'def'
name|'safe_image_show'
op|'('
name|'ctx'
op|','
name|'image_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'image_id'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'image_api'
op|'.'
name|'get'
op|'('
name|'ctx'
op|','
name|'image_id'
op|','
name|'show_deleted'
op|'='
name|'False'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'exception'
op|'.'
name|'ImageNotFound'
op|'('
name|'image_id'
op|'='
string|"''"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'instance'
op|'.'
name|'vm_state'
op|'=='
name|'vm_states'
op|'.'
name|'SHELVED'
op|':'
newline|'\n'
indent|'            '
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'task_states'
op|'.'
name|'POWERING_ON'
newline|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
name|'expected_task_state'
op|'='
name|'task_states'
op|'.'
name|'UNSHELVING'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_rpcapi'
op|'.'
name|'start_instance'
op|'('
name|'context'
op|','
name|'instance'
op|')'
newline|'\n'
name|'snapshot_id'
op|'='
name|'sys_meta'
op|'.'
name|'get'
op|'('
string|"'shelved_image_id'"
op|')'
newline|'\n'
name|'if'
name|'snapshot_id'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_delete_image'
op|'('
name|'context'
op|','
name|'snapshot_id'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'instance'
op|'.'
name|'vm_state'
op|'=='
name|'vm_states'
op|'.'
name|'SHELVED_OFFLOADED'
op|':'
newline|'\n'
indent|'            '
name|'image'
op|'='
name|'None'
newline|'\n'
name|'image_id'
op|'='
name|'sys_meta'
op|'.'
name|'get'
op|'('
string|"'shelved_image_id'"
op|')'
newline|'\n'
comment|'# No need to check for image if image_id is None as'
nl|'\n'
comment|'# "shelved_image_id" key is not set for volume backed'
nl|'\n'
comment|'# instance during the shelve process'
nl|'\n'
name|'if'
name|'image_id'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'compute_utils'
op|'.'
name|'EventReporter'
op|'('
nl|'\n'
name|'context'
op|','
string|"'get_image_info'"
op|','
name|'instance'
op|'.'
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'try'
op|':'
newline|'\n'
indent|'                        '
name|'image'
op|'='
name|'safe_image_show'
op|'('
name|'context'
op|','
name|'image_id'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'ImageNotFound'
op|':'
newline|'\n'
indent|'                        '
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
newline|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'reason'
op|'='
name|'_'
op|'('
string|"'Unshelve attempted but the image %s '"
nl|'\n'
string|"'cannot be found.'"
op|')'
op|'%'
name|'image_id'
newline|'\n'
nl|'\n'
name|'LOG'
op|'.'
name|'error'
op|'('
name|'reason'
op|','
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
name|'raise'
name|'exception'
op|'.'
name|'UnshelveException'
op|'('
nl|'\n'
name|'instance_id'
op|'='
name|'instance'
op|'.'
name|'uuid'
op|','
name|'reason'
op|'='
name|'reason'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'compute_utils'
op|'.'
name|'EventReporter'
op|'('
name|'context'
op|','
string|"'schedule_instances'"
op|','
nl|'\n'
name|'instance'
op|'.'
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'filter_properties'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'hosts'
op|'='
name|'self'
op|'.'
name|'_schedule_instances'
op|'('
name|'context'
op|','
name|'image'
op|','
nl|'\n'
name|'filter_properties'
op|','
nl|'\n'
name|'instance'
op|')'
newline|'\n'
name|'host_state'
op|'='
name|'hosts'
op|'['
number|'0'
op|']'
newline|'\n'
name|'scheduler_utils'
op|'.'
name|'populate_filter_properties'
op|'('
nl|'\n'
name|'filter_properties'
op|','
name|'host_state'
op|')'
newline|'\n'
op|'('
name|'host'
op|','
name|'node'
op|')'
op|'='
op|'('
name|'host_state'
op|'['
string|"'host'"
op|']'
op|','
name|'host_state'
op|'['
string|"'nodename'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'compute_rpcapi'
op|'.'
name|'unshelve_instance'
op|'('
nl|'\n'
name|'context'
op|','
name|'instance'
op|','
name|'host'
op|','
name|'image'
op|'='
name|'image'
op|','
nl|'\n'
name|'filter_properties'
op|'='
name|'filter_properties'
op|','
name|'node'
op|'='
name|'node'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|'('
name|'exception'
op|'.'
name|'NoValidHost'
op|','
nl|'\n'
name|'exception'
op|'.'
name|'UnsupportedPolicyException'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'None'
newline|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_LW'
op|'('
string|'"No valid host found for unshelve instance"'
op|')'
op|','
nl|'\n'
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'excutils'
op|'.'
name|'save_and_reraise_exception'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'instance'
op|'.'
name|'task_state'
op|'='
name|'None'
newline|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'error'
op|'('
name|'_LE'
op|'('
string|'"Unshelve attempted but an error "'
nl|'\n'
string|'"has occurred"'
op|')'
op|','
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'LOG'
op|'.'
name|'error'
op|'('
name|'_LE'
op|'('
string|"'Unshelve attempted but vm_state not SHELVED or '"
nl|'\n'
string|"'SHELVED_OFFLOADED'"
op|')'
op|','
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'vm_state'
op|'='
name|'vm_states'
op|'.'
name|'ERROR'
newline|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'key'
name|'in'
op|'['
string|"'shelved_at'"
op|','
string|"'shelved_image_id'"
op|','
string|"'shelved_host'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'key'
name|'in'
name|'sys_meta'
op|':'
newline|'\n'
indent|'                '
name|'del'
op|'('
name|'sys_meta'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'instance'
op|'.'
name|'system_metadata'
op|'='
name|'sys_meta'
newline|'\n'
name|'instance'
op|'.'
name|'save'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|rebuild_instance
dedent|''
name|'def'
name|'rebuild_instance'
op|'('
name|'self'
op|','
name|'context'
op|','
name|'instance'
op|','
name|'orig_image_ref'
op|','
name|'image_ref'
op|','
nl|'\n'
name|'injected_files'
op|','
name|'new_pass'
op|','
name|'orig_sys_metadata'
op|','
nl|'\n'
name|'bdms'
op|','
name|'recreate'
op|','
name|'on_shared_storage'
op|','
nl|'\n'
name|'preserve_ephemeral'
op|'='
name|'False'
op|','
name|'host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'with'
name|'compute_utils'
op|'.'
name|'EventReporter'
op|'('
name|'context'
op|','
string|"'rebuild_server'"
op|','
nl|'\n'
name|'instance'
op|'.'
name|'uuid'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'host'
op|':'
newline|'\n'
comment|'# NOTE(lcostantino): Retrieve scheduler filters for the'
nl|'\n'
comment|'# instance when the feature is available'
nl|'\n'
indent|'                '
name|'filter_properties'
op|'='
op|'{'
string|"'ignore_hosts'"
op|':'
op|'['
name|'instance'
op|'.'
name|'host'
op|']'
op|'}'
newline|'\n'
name|'request_spec'
op|'='
name|'scheduler_utils'
op|'.'
name|'build_request_spec'
op|'('
name|'context'
op|','
nl|'\n'
name|'image_ref'
op|','
nl|'\n'
op|'['
name|'instance'
op|']'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'scheduler_utils'
op|'.'
name|'setup_instance_group'
op|'('
name|'context'
op|','
name|'request_spec'
op|','
nl|'\n'
name|'filter_properties'
op|')'
newline|'\n'
name|'hosts'
op|'='
name|'self'
op|'.'
name|'scheduler_client'
op|'.'
name|'select_destinations'
op|'('
name|'context'
op|','
nl|'\n'
name|'request_spec'
op|','
nl|'\n'
name|'filter_properties'
op|')'
newline|'\n'
name|'host'
op|'='
name|'hosts'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
op|'['
string|"'host'"
op|']'
newline|'\n'
dedent|''
name|'except'
name|'exception'
op|'.'
name|'NoValidHost'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'                    '
name|'with'
name|'excutils'
op|'.'
name|'save_and_reraise_exception'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'_set_vm_state_and_notify'
op|'('
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'rebuild_server'"
op|','
nl|'\n'
op|'{'
string|"'vm_state'"
op|':'
name|'instance'
op|'.'
name|'vm_state'
op|','
nl|'\n'
string|"'task_state'"
op|':'
name|'None'
op|'}'
op|','
name|'ex'
op|','
name|'request_spec'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_LW'
op|'('
string|'"No valid host found for rebuild"'
op|')'
op|','
nl|'\n'
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'exception'
op|'.'
name|'UnsupportedPolicyException'
name|'as'
name|'ex'
op|':'
newline|'\n'
indent|'                    '
name|'with'
name|'excutils'
op|'.'
name|'save_and_reraise_exception'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'_set_vm_state_and_notify'
op|'('
name|'context'
op|','
name|'instance'
op|'.'
name|'uuid'
op|','
nl|'\n'
string|"'rebuild_server'"
op|','
nl|'\n'
op|'{'
string|"'vm_state'"
op|':'
name|'instance'
op|'.'
name|'vm_state'
op|','
nl|'\n'
string|"'task_state'"
op|':'
name|'None'
op|'}'
op|','
name|'ex'
op|','
name|'request_spec'
op|')'
newline|'\n'
name|'LOG'
op|'.'
name|'warning'
op|'('
name|'_LW'
op|'('
string|'"Server with unsupported policy "'
nl|'\n'
string|'"cannot be rebuilt"'
op|')'
op|','
nl|'\n'
name|'instance'
op|'='
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'self'
op|'.'
name|'compute_rpcapi'
op|'.'
name|'rebuild_instance'
op|'('
name|'context'
op|','
nl|'\n'
name|'instance'
op|'='
name|'instance'
op|','
nl|'\n'
name|'new_pass'
op|'='
name|'new_pass'
op|','
nl|'\n'
name|'injected_files'
op|'='
name|'injected_files'
op|','
nl|'\n'
name|'image_ref'
op|'='
name|'image_ref'
op|','
nl|'\n'
name|'orig_image_ref'
op|'='
name|'orig_image_ref'
op|','
nl|'\n'
name|'orig_sys_metadata'
op|'='
name|'orig_sys_metadata'
op|','
nl|'\n'
name|'bdms'
op|'='
name|'bdms'
op|','
nl|'\n'
name|'recreate'
op|'='
name|'recreate'
op|','
nl|'\n'
name|'on_shared_storage'
op|'='
name|'on_shared_storage'
op|','
nl|'\n'
name|'preserve_ephemeral'
op|'='
name|'preserve_ephemeral'
op|','
nl|'\n'
name|'host'
op|'='
name|'host'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
