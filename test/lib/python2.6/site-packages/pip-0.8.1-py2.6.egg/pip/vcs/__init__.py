begin_unit
string|'"""Handles all VCS (version control) support"""'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'shutil'
newline|'\n'
name|'import'
name|'urlparse'
newline|'\n'
name|'import'
name|'urllib'
newline|'\n'
nl|'\n'
name|'from'
name|'pip'
op|'.'
name|'exceptions'
name|'import'
name|'BadCommand'
newline|'\n'
name|'from'
name|'pip'
op|'.'
name|'log'
name|'import'
name|'logger'
newline|'\n'
name|'from'
name|'pip'
op|'.'
name|'util'
name|'import'
name|'display_path'
op|','
name|'backup_dir'
op|','
name|'find_command'
op|','
name|'ask'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|__all__
name|'__all__'
op|'='
op|'['
string|"'vcs'"
op|','
string|"'get_src_requirement'"
op|','
string|"'import_vcs_support'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VcsSupport
name|'class'
name|'VcsSupport'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|variable|_registry
indent|'    '
name|'_registry'
op|'='
op|'{'
op|'}'
newline|'\n'
DECL|variable|schemes
name|'schemes'
op|'='
op|'['
string|"'ssh'"
op|','
string|"'git'"
op|','
string|"'hg'"
op|','
string|"'bzr'"
op|','
string|"'sftp'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Register more schemes with urlparse for various version control systems'
nl|'\n'
indent|'        '
name|'urlparse'
op|'.'
name|'uses_netloc'
op|'.'
name|'extend'
op|'('
name|'self'
op|'.'
name|'schemes'
op|')'
newline|'\n'
name|'urlparse'
op|'.'
name|'uses_fragment'
op|'.'
name|'extend'
op|'('
name|'self'
op|'.'
name|'schemes'
op|')'
newline|'\n'
name|'super'
op|'('
name|'VcsSupport'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_registry'
op|'.'
name|'__iter__'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|backends
name|'def'
name|'backends'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_registry'
op|'.'
name|'values'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|dirnames
name|'def'
name|'dirnames'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
name|'backend'
op|'.'
name|'dirname'
name|'for'
name|'backend'
name|'in'
name|'self'
op|'.'
name|'backends'
op|']'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|all_schemes
name|'def'
name|'all_schemes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'schemes'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'backend'
name|'in'
name|'self'
op|'.'
name|'backends'
op|':'
newline|'\n'
indent|'            '
name|'schemes'
op|'.'
name|'extend'
op|'('
name|'backend'
op|'.'
name|'schemes'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'schemes'
newline|'\n'
nl|'\n'
DECL|member|register
dedent|''
name|'def'
name|'register'
op|'('
name|'self'
op|','
name|'cls'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'cls'
op|','
string|"'name'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'logger'
op|'.'
name|'warn'
op|'('
string|"'Cannot register VCS %s'"
op|'%'
name|'cls'
op|'.'
name|'__name__'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'if'
name|'cls'
op|'.'
name|'name'
name|'not'
name|'in'
name|'self'
op|'.'
name|'_registry'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_registry'
op|'['
name|'cls'
op|'.'
name|'name'
op|']'
op|'='
name|'cls'
newline|'\n'
nl|'\n'
DECL|member|unregister
dedent|''
dedent|''
name|'def'
name|'unregister'
op|'('
name|'self'
op|','
name|'cls'
op|'='
name|'None'
op|','
name|'name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'name'
name|'in'
name|'self'
op|'.'
name|'_registry'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'self'
op|'.'
name|'_registry'
op|'['
name|'name'
op|']'
newline|'\n'
dedent|''
name|'elif'
name|'cls'
name|'in'
name|'self'
op|'.'
name|'_registry'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'self'
op|'.'
name|'_registry'
op|'['
name|'cls'
op|'.'
name|'name'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'logger'
op|'.'
name|'warn'
op|'('
string|"'Cannot unregister because no class or name given'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_backend_name
dedent|''
dedent|''
name|'def'
name|'get_backend_name'
op|'('
name|'self'
op|','
name|'location'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Return the name of the version control backend if found at given\n        location, e.g. vcs.get_backend_name(\'/path/to/vcs/checkout\')\n        """'
newline|'\n'
name|'for'
name|'vc_type'
name|'in'
name|'self'
op|'.'
name|'_registry'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'location'
op|','
name|'vc_type'
op|'.'
name|'dirname'
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'vc_type'
op|'.'
name|'name'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|get_backend
dedent|''
name|'def'
name|'get_backend'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'name'
op|'='
name|'name'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'if'
name|'name'
name|'in'
name|'self'
op|'.'
name|'_registry'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_registry'
op|'['
name|'name'
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_backend_from_location
dedent|''
dedent|''
name|'def'
name|'get_backend_from_location'
op|'('
name|'self'
op|','
name|'location'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'vc_type'
op|'='
name|'self'
op|'.'
name|'get_backend_name'
op|'('
name|'location'
op|')'
newline|'\n'
name|'if'
name|'vc_type'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'get_backend'
op|'('
name|'vc_type'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|vcs
dedent|''
dedent|''
name|'vcs'
op|'='
name|'VcsSupport'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|VersionControl
name|'class'
name|'VersionControl'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|variable|name
indent|'    '
name|'name'
op|'='
string|"''"
newline|'\n'
DECL|variable|dirname
name|'dirname'
op|'='
string|"''"
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'url'
op|'='
name|'None'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'url'
op|'='
name|'url'
newline|'\n'
name|'self'
op|'.'
name|'_cmd'
op|'='
name|'None'
newline|'\n'
name|'super'
op|'('
name|'VersionControl'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_filter
dedent|''
name|'def'
name|'_filter'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'('
name|'logger'
op|'.'
name|'INFO'
op|','
name|'line'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_is_local_repository
dedent|''
name|'def'
name|'_is_local_repository'
op|'('
name|'self'
op|','
name|'repo'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n           posix absolute paths start with os.path.sep,\n           win32 ones ones start with drive (like c:\\\\folder)\n        """'
newline|'\n'
name|'drive'
op|','
name|'tail'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'splitdrive'
op|'('
name|'repo'
op|')'
newline|'\n'
name|'return'
name|'repo'
op|'.'
name|'startswith'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'sep'
op|')'
name|'or'
name|'drive'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|cmd
name|'def'
name|'cmd'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'_cmd'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_cmd'
newline|'\n'
dedent|''
name|'command'
op|'='
name|'find_command'
op|'('
name|'self'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'if'
name|'command'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'BadCommand'
op|'('
string|"'Cannot find command %r'"
op|'%'
name|'self'
op|'.'
name|'name'
op|')'
newline|'\n'
dedent|''
name|'logger'
op|'.'
name|'info'
op|'('
string|"'Found command %r at %r'"
op|'%'
op|'('
name|'self'
op|'.'
name|'name'
op|','
name|'command'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_cmd'
op|'='
name|'command'
newline|'\n'
name|'return'
name|'command'
newline|'\n'
nl|'\n'
DECL|member|get_url_rev
dedent|''
name|'def'
name|'get_url_rev'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns the correct repository URL and revision by parsing the given\n        repository URL\n        """'
newline|'\n'
name|'url'
op|'='
name|'self'
op|'.'
name|'url'
op|'.'
name|'split'
op|'('
string|"'+'"
op|','
number|'1'
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'scheme'
op|','
name|'netloc'
op|','
name|'path'
op|','
name|'query'
op|','
name|'frag'
op|'='
name|'urlparse'
op|'.'
name|'urlsplit'
op|'('
name|'url'
op|')'
newline|'\n'
name|'rev'
op|'='
name|'None'
newline|'\n'
name|'if'
string|"'@'"
name|'in'
name|'path'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|','
name|'rev'
op|'='
name|'path'
op|'.'
name|'rsplit'
op|'('
string|"'@'"
op|','
number|'1'
op|')'
newline|'\n'
dedent|''
name|'url'
op|'='
name|'urlparse'
op|'.'
name|'urlunsplit'
op|'('
op|'('
name|'scheme'
op|','
name|'netloc'
op|','
name|'path'
op|','
name|'query'
op|','
string|"''"
op|')'
op|')'
newline|'\n'
name|'return'
name|'url'
op|','
name|'rev'
newline|'\n'
nl|'\n'
DECL|member|get_info
dedent|''
name|'def'
name|'get_info'
op|'('
name|'self'
op|','
name|'location'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns (url, revision), where both are strings\n        """'
newline|'\n'
name|'assert'
name|'not'
name|'location'
op|'.'
name|'rstrip'
op|'('
string|"'/'"
op|')'
op|'.'
name|'endswith'
op|'('
name|'self'
op|'.'
name|'dirname'
op|')'
op|','
string|"'Bad directory: %s'"
op|'%'
name|'location'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'get_url'
op|'('
name|'location'
op|')'
op|','
name|'self'
op|'.'
name|'get_revision'
op|'('
name|'location'
op|')'
newline|'\n'
nl|'\n'
DECL|member|normalize_url
dedent|''
name|'def'
name|'normalize_url'
op|'('
name|'self'
op|','
name|'url'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Normalize a URL for comparison by unquoting it and removing any trailing slash.\n        """'
newline|'\n'
name|'return'
name|'urllib'
op|'.'
name|'unquote'
op|'('
name|'url'
op|')'
op|'.'
name|'rstrip'
op|'('
string|"'/'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|compare_urls
dedent|''
name|'def'
name|'compare_urls'
op|'('
name|'self'
op|','
name|'url1'
op|','
name|'url2'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Compare two repo URLs for identity, ignoring incidental differences.\n        """'
newline|'\n'
name|'return'
op|'('
name|'self'
op|'.'
name|'normalize_url'
op|'('
name|'url1'
op|')'
op|'=='
name|'self'
op|'.'
name|'normalize_url'
op|'('
name|'url2'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|parse_vcs_bundle_file
dedent|''
name|'def'
name|'parse_vcs_bundle_file'
op|'('
name|'self'
op|','
name|'content'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Takes the contents of the bundled text file that explains how to revert\n        the stripped off version control data of the given package and returns\n        the URL and revision of it.\n        """'
newline|'\n'
name|'raise'
name|'NotImplementedError'
newline|'\n'
nl|'\n'
DECL|member|obtain
dedent|''
name|'def'
name|'obtain'
op|'('
name|'self'
op|','
name|'dest'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Called when installing or updating an editable package, takes the\n        source path of the checkout.\n        """'
newline|'\n'
name|'raise'
name|'NotImplementedError'
newline|'\n'
nl|'\n'
DECL|member|switch
dedent|''
name|'def'
name|'switch'
op|'('
name|'self'
op|','
name|'dest'
op|','
name|'url'
op|','
name|'rev_options'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Switch the repo at ``dest`` to point to ``URL``.\n        """'
newline|'\n'
name|'raise'
name|'NotImplemented'
newline|'\n'
nl|'\n'
DECL|member|update
dedent|''
name|'def'
name|'update'
op|'('
name|'self'
op|','
name|'dest'
op|','
name|'rev_options'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Update an already-existing repo to the given ``rev_options``.\n        """'
newline|'\n'
name|'raise'
name|'NotImplementedError'
newline|'\n'
nl|'\n'
DECL|member|check_destination
dedent|''
name|'def'
name|'check_destination'
op|'('
name|'self'
op|','
name|'dest'
op|','
name|'url'
op|','
name|'rev_options'
op|','
name|'rev_display'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Prepare a location to receive a checkout/clone.\n\n        Return True if the location is ready for (and requires) a\n        checkout/clone, False otherwise.\n        """'
newline|'\n'
name|'checkout'
op|'='
name|'True'
newline|'\n'
name|'prompt'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'dest'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'checkout'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'dest'
op|','
name|'self'
op|'.'
name|'dirname'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'existing_url'
op|'='
name|'self'
op|'.'
name|'get_url'
op|'('
name|'dest'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'compare_urls'
op|'('
name|'existing_url'
op|','
name|'url'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'logger'
op|'.'
name|'info'
op|'('
string|"'%s in %s exists, and has correct URL (%s)'"
nl|'\n'
op|'%'
op|'('
name|'self'
op|'.'
name|'repo_name'
op|'.'
name|'title'
op|'('
op|')'
op|','
name|'display_path'
op|'('
name|'dest'
op|')'
op|','
name|'url'
op|')'
op|')'
newline|'\n'
name|'logger'
op|'.'
name|'notify'
op|'('
string|"'Updating %s %s%s'"
nl|'\n'
op|'%'
op|'('
name|'display_path'
op|'('
name|'dest'
op|')'
op|','
name|'self'
op|'.'
name|'repo_name'
op|','
name|'rev_display'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'update'
op|'('
name|'dest'
op|','
name|'rev_options'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'logger'
op|'.'
name|'warn'
op|'('
string|"'%s %s in %s exists with URL %s'"
nl|'\n'
op|'%'
op|'('
name|'self'
op|'.'
name|'name'
op|','
name|'self'
op|'.'
name|'repo_name'
op|','
name|'display_path'
op|'('
name|'dest'
op|')'
op|','
name|'existing_url'
op|')'
op|')'
newline|'\n'
name|'prompt'
op|'='
op|'('
string|"'(s)witch, (i)gnore, (w)ipe, (b)ackup '"
op|','
op|'('
string|"'s'"
op|','
string|"'i'"
op|','
string|"'w'"
op|','
string|"'b'"
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'logger'
op|'.'
name|'warn'
op|'('
string|"'Directory %s already exists, and is not a %s %s.'"
nl|'\n'
op|'%'
op|'('
name|'dest'
op|','
name|'self'
op|'.'
name|'name'
op|','
name|'self'
op|'.'
name|'repo_name'
op|')'
op|')'
newline|'\n'
name|'prompt'
op|'='
op|'('
string|"'(i)gnore, (w)ipe, (b)ackup '"
op|','
op|'('
string|"'i'"
op|','
string|"'w'"
op|','
string|"'b'"
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'prompt'
op|':'
newline|'\n'
indent|'            '
name|'logger'
op|'.'
name|'warn'
op|'('
string|"'The plan is to install the %s repository %s'"
nl|'\n'
op|'%'
op|'('
name|'self'
op|'.'
name|'name'
op|','
name|'url'
op|')'
op|')'
newline|'\n'
name|'response'
op|'='
name|'ask'
op|'('
string|"'What to do?  %s'"
op|'%'
name|'prompt'
op|'['
number|'0'
op|']'
op|','
name|'prompt'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'response'
op|'=='
string|"'s'"
op|':'
newline|'\n'
indent|'                '
name|'logger'
op|'.'
name|'notify'
op|'('
string|"'Switching %s %s to %s%s'"
nl|'\n'
op|'%'
op|'('
name|'self'
op|'.'
name|'repo_name'
op|','
name|'display_path'
op|'('
name|'dest'
op|')'
op|','
name|'url'
op|','
name|'rev_display'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'switch'
op|'('
name|'dest'
op|','
name|'url'
op|','
name|'rev_options'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'response'
op|'=='
string|"'i'"
op|':'
newline|'\n'
comment|'# do nothing'
nl|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'elif'
name|'response'
op|'=='
string|"'w'"
op|':'
newline|'\n'
indent|'                '
name|'logger'
op|'.'
name|'warn'
op|'('
string|"'Deleting %s'"
op|'%'
name|'display_path'
op|'('
name|'dest'
op|')'
op|')'
newline|'\n'
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'dest'
op|')'
newline|'\n'
name|'checkout'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'elif'
name|'response'
op|'=='
string|"'b'"
op|':'
newline|'\n'
indent|'                '
name|'dest_dir'
op|'='
name|'backup_dir'
op|'('
name|'dest'
op|')'
newline|'\n'
name|'logger'
op|'.'
name|'warn'
op|'('
string|"'Backing up %s to %s'"
nl|'\n'
op|'%'
op|'('
name|'display_path'
op|'('
name|'dest'
op|')'
op|','
name|'dest_dir'
op|')'
op|')'
newline|'\n'
name|'shutil'
op|'.'
name|'move'
op|'('
name|'dest'
op|','
name|'dest_dir'
op|')'
newline|'\n'
name|'checkout'
op|'='
name|'True'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'checkout'
newline|'\n'
nl|'\n'
DECL|member|unpack
dedent|''
name|'def'
name|'unpack'
op|'('
name|'self'
op|','
name|'location'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
newline|'\n'
nl|'\n'
DECL|member|get_src_requirement
dedent|''
name|'def'
name|'get_src_requirement'
op|'('
name|'self'
op|','
name|'dist'
op|','
name|'location'
op|','
name|'find_tags'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_src_requirement
dedent|''
dedent|''
name|'def'
name|'get_src_requirement'
op|'('
name|'dist'
op|','
name|'location'
op|','
name|'find_tags'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'version_control'
op|'='
name|'vcs'
op|'.'
name|'get_backend_from_location'
op|'('
name|'location'
op|')'
newline|'\n'
name|'if'
name|'version_control'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'version_control'
op|'('
op|')'
op|'.'
name|'get_src_requirement'
op|'('
name|'dist'
op|','
name|'location'
op|','
name|'find_tags'
op|')'
newline|'\n'
dedent|''
name|'logger'
op|'.'
name|'warn'
op|'('
string|"'cannot determine version of editable source in %s (is not SVN checkout, Git clone, Mercurial clone or Bazaar branch)'"
op|'%'
name|'location'
op|')'
newline|'\n'
name|'return'
name|'dist'
op|'.'
name|'as_requirement'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
