begin_unit
string|'"""Routines related to PyPI, indexes"""'
newline|'\n'
nl|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
name|'import'
name|'mimetypes'
newline|'\n'
name|'import'
name|'threading'
newline|'\n'
name|'import'
name|'posixpath'
newline|'\n'
name|'import'
name|'pkg_resources'
newline|'\n'
name|'import'
name|'urllib'
newline|'\n'
name|'import'
name|'urllib2'
newline|'\n'
name|'import'
name|'urlparse'
newline|'\n'
name|'import'
name|'httplib'
newline|'\n'
name|'import'
name|'random'
newline|'\n'
name|'import'
name|'socket'
newline|'\n'
name|'import'
name|'string'
newline|'\n'
name|'from'
name|'Queue'
name|'import'
name|'Queue'
newline|'\n'
name|'from'
name|'Queue'
name|'import'
name|'Empty'
name|'as'
name|'QueueEmpty'
newline|'\n'
name|'from'
name|'pip'
op|'.'
name|'log'
name|'import'
name|'logger'
newline|'\n'
name|'from'
name|'pip'
op|'.'
name|'util'
name|'import'
name|'Inf'
newline|'\n'
name|'from'
name|'pip'
op|'.'
name|'util'
name|'import'
name|'normalize_name'
op|','
name|'splitext'
newline|'\n'
name|'from'
name|'pip'
op|'.'
name|'exceptions'
name|'import'
name|'DistributionNotFound'
newline|'\n'
name|'from'
name|'pip'
op|'.'
name|'backwardcompat'
name|'import'
name|'WindowsError'
op|','
name|'product'
newline|'\n'
name|'from'
name|'pip'
op|'.'
name|'download'
name|'import'
name|'urlopen'
op|','
name|'path_to_url2'
op|','
name|'url_to_path'
op|','
name|'geturl'
op|','
name|'Urllib2HeadRequest'
newline|'\n'
nl|'\n'
DECL|variable|__all__
name|'__all__'
op|'='
op|'['
string|"'PackageFinder'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|DEFAULT_MIRROR_URL
name|'DEFAULT_MIRROR_URL'
op|'='
string|'"last.pypi.python.org"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|PackageFinder
name|'class'
name|'PackageFinder'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""This finds packages.\n\n    This is meant to match easy_install\'s technique for looking for\n    packages, by reading pages and looking for appropriate links\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'find_links'
op|','
name|'index_urls'
op|','
nl|'\n'
name|'use_mirrors'
op|'='
name|'False'
op|','
name|'mirrors'
op|'='
name|'None'
op|','
name|'main_mirror_url'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'find_links'
op|'='
name|'find_links'
newline|'\n'
name|'self'
op|'.'
name|'index_urls'
op|'='
name|'index_urls'
newline|'\n'
name|'self'
op|'.'
name|'dependency_links'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'cache'
op|'='
name|'PageCache'
op|'('
op|')'
newline|'\n'
comment|'# These are boring links that have already been logged somehow:'
nl|'\n'
name|'self'
op|'.'
name|'logged_links'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'if'
name|'use_mirrors'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'mirror_urls'
op|'='
name|'self'
op|'.'
name|'_get_mirror_urls'
op|'('
name|'mirrors'
op|','
name|'main_mirror_url'
op|')'
newline|'\n'
name|'logger'
op|'.'
name|'info'
op|'('
string|"'Using PyPI mirrors: %s'"
op|'%'
string|"', '"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'mirror_urls'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'mirror_urls'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|add_dependency_links
dedent|''
dedent|''
name|'def'
name|'add_dependency_links'
op|'('
name|'self'
op|','
name|'links'
op|')'
op|':'
newline|'\n'
comment|"## FIXME: this shouldn't be global list this, it should only"
nl|'\n'
comment|'## apply to requirements of the package that specifies the'
nl|'\n'
comment|'## dependency_links value'
nl|'\n'
comment|'## FIXME: also, we should track comes_from (i.e., use Link)'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'dependency_links'
op|'.'
name|'extend'
op|'('
name|'links'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_sort_locations
name|'def'
name|'_sort_locations'
op|'('
name|'locations'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Sort locations into "files" (archives) and "urls", and return\n        a pair of lists (files,urls)\n        """'
newline|'\n'
name|'files'
op|'='
op|'['
op|']'
newline|'\n'
name|'urls'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
comment|'# puts the url for the given file path into the appropriate'
nl|'\n'
comment|'# list'
nl|'\n'
DECL|function|sort_path
name|'def'
name|'sort_path'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'url'
op|'='
name|'path_to_url2'
op|'('
name|'path'
op|')'
newline|'\n'
name|'if'
name|'mimetypes'
op|'.'
name|'guess_type'
op|'('
name|'url'
op|','
name|'strict'
op|'='
name|'False'
op|')'
op|'['
number|'0'
op|']'
op|'=='
string|"'text/html'"
op|':'
newline|'\n'
indent|'                '
name|'urls'
op|'.'
name|'append'
op|'('
name|'url'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'files'
op|'.'
name|'append'
op|'('
name|'url'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'url'
name|'in'
name|'locations'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'url'
op|'.'
name|'startswith'
op|'('
string|"'file:'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'path'
op|'='
name|'url_to_path'
op|'('
name|'url'
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'realpath'
op|'('
name|'path'
op|')'
newline|'\n'
name|'for'
name|'item'
name|'in'
name|'os'
op|'.'
name|'listdir'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'sort_path'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'path'
op|','
name|'item'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isfile'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'sort_path'
op|'('
name|'path'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'urls'
op|'.'
name|'append'
op|'('
name|'url'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'files'
op|','
name|'urls'
newline|'\n'
nl|'\n'
DECL|member|find_requirement
dedent|''
name|'def'
name|'find_requirement'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'upgrade'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'url_name'
op|'='
name|'req'
op|'.'
name|'url_name'
newline|'\n'
comment|'# Only check main index if index URL is given:'
nl|'\n'
name|'main_index_url'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'index_urls'
op|':'
newline|'\n'
comment|'# Check that we have the url_name correctly spelled:'
nl|'\n'
indent|'            '
name|'main_index_url'
op|'='
name|'Link'
op|'('
name|'posixpath'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'index_urls'
op|'['
number|'0'
op|']'
op|','
name|'url_name'
op|')'
op|')'
newline|'\n'
comment|"# This will also cache the page, so it's okay that we get it again later:"
nl|'\n'
name|'page'
op|'='
name|'self'
op|'.'
name|'_get_page'
op|'('
name|'main_index_url'
op|','
name|'req'
op|')'
newline|'\n'
name|'if'
name|'page'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'url_name'
op|'='
name|'self'
op|'.'
name|'_find_url_name'
op|'('
name|'Link'
op|'('
name|'self'
op|'.'
name|'index_urls'
op|'['
number|'0'
op|']'
op|')'
op|','
name|'url_name'
op|','
name|'req'
op|')'
name|'or'
name|'req'
op|'.'
name|'url_name'
newline|'\n'
nl|'\n'
comment|'# Combine index URLs with mirror URLs here to allow'
nl|'\n'
comment|'# adding more index URLs from requirements files'
nl|'\n'
dedent|''
dedent|''
name|'all_index_urls'
op|'='
name|'self'
op|'.'
name|'index_urls'
op|'+'
name|'self'
op|'.'
name|'mirror_urls'
newline|'\n'
nl|'\n'
DECL|function|mkurl_pypi_url
name|'def'
name|'mkurl_pypi_url'
op|'('
name|'url'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'loc'
op|'='
name|'posixpath'
op|'.'
name|'join'
op|'('
name|'url'
op|','
name|'url_name'
op|')'
newline|'\n'
comment|'# For maximum compatibility with easy_install, ensure the path'
nl|'\n'
comment|"# ends in a trailing slash.  Although this isn't in the spec"
nl|'\n'
comment|'# (and PyPI can handle it without the slash) some other index'
nl|'\n'
comment|"# implementations might break if they relied on easy_install's behavior."
nl|'\n'
name|'if'
name|'not'
name|'loc'
op|'.'
name|'endswith'
op|'('
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'loc'
op|'='
name|'loc'
op|'+'
string|"'/'"
newline|'\n'
dedent|''
name|'return'
name|'loc'
newline|'\n'
dedent|''
name|'if'
name|'url_name'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'locations'
op|'='
op|'['
nl|'\n'
name|'mkurl_pypi_url'
op|'('
name|'url'
op|')'
nl|'\n'
name|'for'
name|'url'
name|'in'
name|'all_index_urls'
op|']'
op|'+'
name|'self'
op|'.'
name|'find_links'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'locations'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'find_links'
op|')'
newline|'\n'
dedent|''
name|'locations'
op|'.'
name|'extend'
op|'('
name|'self'
op|'.'
name|'dependency_links'
op|')'
newline|'\n'
name|'for'
name|'version'
name|'in'
name|'req'
op|'.'
name|'absolute_versions'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'url_name'
name|'is'
name|'not'
name|'None'
name|'and'
name|'main_index_url'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'locations'
op|'='
op|'['
nl|'\n'
name|'posixpath'
op|'.'
name|'join'
op|'('
name|'main_index_url'
op|'.'
name|'url'
op|','
name|'version'
op|')'
op|']'
op|'+'
name|'locations'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'file_locations'
op|','
name|'url_locations'
op|'='
name|'self'
op|'.'
name|'_sort_locations'
op|'('
name|'locations'
op|')'
newline|'\n'
nl|'\n'
name|'locations'
op|'='
op|'['
name|'Link'
op|'('
name|'url'
op|')'
name|'for'
name|'url'
name|'in'
name|'url_locations'
op|']'
newline|'\n'
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'URLs to search for versions for %s:'"
op|'%'
name|'req'
op|')'
newline|'\n'
name|'for'
name|'location'
name|'in'
name|'locations'
op|':'
newline|'\n'
indent|'            '
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'* %s'"
op|'%'
name|'location'
op|')'
newline|'\n'
dedent|''
name|'found_versions'
op|'='
op|'['
op|']'
newline|'\n'
name|'found_versions'
op|'.'
name|'extend'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_package_versions'
op|'('
nl|'\n'
op|'['
name|'Link'
op|'('
name|'url'
op|','
string|"'-f'"
op|')'
name|'for'
name|'url'
name|'in'
name|'self'
op|'.'
name|'find_links'
op|']'
op|','
name|'req'
op|'.'
name|'name'
op|'.'
name|'lower'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'page_versions'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'page'
name|'in'
name|'self'
op|'.'
name|'_get_pages'
op|'('
name|'locations'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'Analyzing links from page %s'"
op|'%'
name|'page'
op|'.'
name|'url'
op|')'
newline|'\n'
name|'logger'
op|'.'
name|'indent'
op|'+='
number|'2'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'page_versions'
op|'.'
name|'extend'
op|'('
name|'self'
op|'.'
name|'_package_versions'
op|'('
name|'page'
op|'.'
name|'links'
op|','
name|'req'
op|'.'
name|'name'
op|'.'
name|'lower'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'logger'
op|'.'
name|'indent'
op|'-='
number|'2'
newline|'\n'
dedent|''
dedent|''
name|'dependency_versions'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'_package_versions'
op|'('
nl|'\n'
op|'['
name|'Link'
op|'('
name|'url'
op|')'
name|'for'
name|'url'
name|'in'
name|'self'
op|'.'
name|'dependency_links'
op|']'
op|','
name|'req'
op|'.'
name|'name'
op|'.'
name|'lower'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'if'
name|'dependency_versions'
op|':'
newline|'\n'
indent|'            '
name|'logger'
op|'.'
name|'info'
op|'('
string|"'dependency_links found: %s'"
op|'%'
string|"', '"
op|'.'
name|'join'
op|'('
op|'['
name|'link'
op|'.'
name|'url'
name|'for'
name|'parsed'
op|','
name|'link'
op|','
name|'version'
name|'in'
name|'dependency_versions'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'file_versions'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'_package_versions'
op|'('
nl|'\n'
op|'['
name|'Link'
op|'('
name|'url'
op|')'
name|'for'
name|'url'
name|'in'
name|'file_locations'
op|']'
op|','
name|'req'
op|'.'
name|'name'
op|'.'
name|'lower'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'found_versions'
name|'and'
name|'not'
name|'page_versions'
name|'and'
name|'not'
name|'dependency_versions'
name|'and'
name|'not'
name|'file_versions'
op|':'
newline|'\n'
indent|'            '
name|'logger'
op|'.'
name|'fatal'
op|'('
string|"'Could not find any downloads that satisfy the requirement %s'"
op|'%'
name|'req'
op|')'
newline|'\n'
name|'raise'
name|'DistributionNotFound'
op|'('
string|"'No distributions at all found for %s'"
op|'%'
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'req'
op|'.'
name|'satisfied_by'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'found_versions'
op|'.'
name|'append'
op|'('
op|'('
name|'req'
op|'.'
name|'satisfied_by'
op|'.'
name|'parsed_version'
op|','
name|'Inf'
op|','
name|'req'
op|'.'
name|'satisfied_by'
op|'.'
name|'version'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'file_versions'
op|':'
newline|'\n'
indent|'            '
name|'file_versions'
op|'.'
name|'sort'
op|'('
name|'reverse'
op|'='
name|'True'
op|')'
newline|'\n'
name|'logger'
op|'.'
name|'info'
op|'('
string|"'Local files found: %s'"
op|'%'
string|"', '"
op|'.'
name|'join'
op|'('
op|'['
name|'url_to_path'
op|'('
name|'link'
op|'.'
name|'url'
op|')'
name|'for'
name|'parsed'
op|','
name|'link'
op|','
name|'version'
name|'in'
name|'file_versions'
op|']'
op|')'
op|')'
newline|'\n'
name|'found_versions'
op|'='
name|'file_versions'
op|'+'
name|'found_versions'
newline|'\n'
dedent|''
name|'all_versions'
op|'='
name|'found_versions'
op|'+'
name|'page_versions'
op|'+'
name|'dependency_versions'
newline|'\n'
name|'applicable_versions'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
op|'('
name|'parsed_version'
op|','
name|'link'
op|','
name|'version'
op|')'
name|'in'
name|'all_versions'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'version'
name|'not'
name|'in'
name|'req'
op|'.'
name|'req'
op|':'
newline|'\n'
indent|'                '
name|'logger'
op|'.'
name|'info'
op|'('
string|'"Ignoring link %s, version %s doesn\'t match %s"'
nl|'\n'
op|'%'
op|'('
name|'link'
op|','
name|'version'
op|','
string|"','"
op|'.'
name|'join'
op|'('
op|'['
string|"''"
op|'.'
name|'join'
op|'('
name|'s'
op|')'
name|'for'
name|'s'
name|'in'
name|'req'
op|'.'
name|'req'
op|'.'
name|'specs'
op|']'
op|')'
op|')'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'applicable_versions'
op|'.'
name|'append'
op|'('
op|'('
name|'link'
op|','
name|'version'
op|')'
op|')'
newline|'\n'
dedent|''
name|'applicable_versions'
op|'='
name|'sorted'
op|'('
name|'applicable_versions'
op|','
name|'key'
op|'='
name|'lambda'
name|'v'
op|':'
name|'pkg_resources'
op|'.'
name|'parse_version'
op|'('
name|'v'
op|'['
number|'1'
op|']'
op|')'
op|','
name|'reverse'
op|'='
name|'True'
op|')'
newline|'\n'
name|'existing_applicable'
op|'='
name|'bool'
op|'('
op|'['
name|'link'
name|'for'
name|'link'
op|','
name|'version'
name|'in'
name|'applicable_versions'
name|'if'
name|'link'
name|'is'
name|'Inf'
op|']'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'upgrade'
name|'and'
name|'existing_applicable'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'applicable_versions'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
name|'is'
name|'Inf'
op|':'
newline|'\n'
indent|'                '
name|'logger'
op|'.'
name|'info'
op|'('
string|"'Existing installed version (%s) is most up-to-date and satisfies requirement'"
nl|'\n'
op|'%'
name|'req'
op|'.'
name|'satisfied_by'
op|'.'
name|'version'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'logger'
op|'.'
name|'info'
op|'('
string|"'Existing installed version (%s) satisfies requirement (most up-to-date version is %s)'"
nl|'\n'
op|'%'
op|'('
name|'req'
op|'.'
name|'satisfied_by'
op|'.'
name|'version'
op|','
name|'applicable_versions'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'applicable_versions'
op|':'
newline|'\n'
indent|'            '
name|'logger'
op|'.'
name|'fatal'
op|'('
string|"'Could not find a version that satisfies the requirement %s (from versions: %s)'"
nl|'\n'
op|'%'
op|'('
name|'req'
op|','
string|"', '"
op|'.'
name|'join'
op|'('
op|'['
name|'version'
name|'for'
name|'parsed_version'
op|','
name|'link'
op|','
name|'version'
name|'in'
name|'found_versions'
op|']'
op|')'
op|')'
op|')'
newline|'\n'
name|'raise'
name|'DistributionNotFound'
op|'('
string|"'No distributions matching the version for %s'"
op|'%'
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'applicable_versions'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
name|'is'
name|'Inf'
op|':'
newline|'\n'
comment|'# We have an existing version, and its the best version'
nl|'\n'
indent|'            '
name|'logger'
op|'.'
name|'info'
op|'('
string|"'Installed version (%s) is most up-to-date (past versions: %s)'"
nl|'\n'
op|'%'
op|'('
name|'req'
op|'.'
name|'satisfied_by'
op|'.'
name|'version'
op|','
string|"', '"
op|'.'
name|'join'
op|'('
op|'['
name|'version'
name|'for'
name|'link'
op|','
name|'version'
name|'in'
name|'applicable_versions'
op|'['
number|'1'
op|':'
op|']'
op|']'
op|')'
name|'or'
string|"'none'"
op|')'
op|')'
newline|'\n'
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'applicable_versions'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'logger'
op|'.'
name|'info'
op|'('
string|"'Using version %s (newest of versions: %s)'"
op|'%'
nl|'\n'
op|'('
name|'applicable_versions'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|','
string|"', '"
op|'.'
name|'join'
op|'('
op|'['
name|'version'
name|'for'
name|'link'
op|','
name|'version'
name|'in'
name|'applicable_versions'
op|']'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'applicable_versions'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_find_url_name
dedent|''
name|'def'
name|'_find_url_name'
op|'('
name|'self'
op|','
name|'index_url'
op|','
name|'url_name'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Finds the true URL name of a package, when the given name isn\'t quite correct.\n        This is usually used to implement case-insensitivity."""'
newline|'\n'
name|'if'
name|'not'
name|'index_url'
op|'.'
name|'url'
op|'.'
name|'endswith'
op|'('
string|"'/'"
op|')'
op|':'
newline|'\n'
comment|'# Vaguely part of the PyPI API... weird but true.'
nl|'\n'
comment|'## FIXME: bad to modify this?'
nl|'\n'
indent|'            '
name|'index_url'
op|'.'
name|'url'
op|'+='
string|"'/'"
newline|'\n'
dedent|''
name|'page'
op|'='
name|'self'
op|'.'
name|'_get_page'
op|'('
name|'index_url'
op|','
name|'req'
op|')'
newline|'\n'
name|'if'
name|'page'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'logger'
op|'.'
name|'fatal'
op|'('
string|"'Cannot fetch index base URL %s'"
op|'%'
name|'index_url'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'norm_name'
op|'='
name|'normalize_name'
op|'('
name|'req'
op|'.'
name|'url_name'
op|')'
newline|'\n'
name|'for'
name|'link'
name|'in'
name|'page'
op|'.'
name|'links'
op|':'
newline|'\n'
indent|'            '
name|'base'
op|'='
name|'posixpath'
op|'.'
name|'basename'
op|'('
name|'link'
op|'.'
name|'path'
op|'.'
name|'rstrip'
op|'('
string|"'/'"
op|')'
op|')'
newline|'\n'
name|'if'
name|'norm_name'
op|'=='
name|'normalize_name'
op|'('
name|'base'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'logger'
op|'.'
name|'notify'
op|'('
string|"'Real name of requirement %s is %s'"
op|'%'
op|'('
name|'url_name'
op|','
name|'base'
op|')'
op|')'
newline|'\n'
name|'return'
name|'base'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_get_pages
dedent|''
name|'def'
name|'_get_pages'
op|'('
name|'self'
op|','
name|'locations'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Yields (page, page_url) from the given locations, skipping\n        locations that have errors, and adding download/homepage links"""'
newline|'\n'
name|'pending_queue'
op|'='
name|'Queue'
op|'('
op|')'
newline|'\n'
name|'for'
name|'location'
name|'in'
name|'locations'
op|':'
newline|'\n'
indent|'            '
name|'pending_queue'
op|'.'
name|'put'
op|'('
name|'location'
op|')'
newline|'\n'
dedent|''
name|'done'
op|'='
op|'['
op|']'
newline|'\n'
name|'seen'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'threads'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'min'
op|'('
number|'10'
op|','
name|'len'
op|'('
name|'locations'
op|')'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'t'
op|'='
name|'threading'
op|'.'
name|'Thread'
op|'('
name|'target'
op|'='
name|'self'
op|'.'
name|'_get_queued_page'
op|','
name|'args'
op|'='
op|'('
name|'req'
op|','
name|'pending_queue'
op|','
name|'done'
op|','
name|'seen'
op|')'
op|')'
newline|'\n'
name|'t'
op|'.'
name|'setDaemon'
op|'('
name|'True'
op|')'
newline|'\n'
name|'threads'
op|'.'
name|'append'
op|'('
name|'t'
op|')'
newline|'\n'
name|'t'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
dedent|''
name|'for'
name|'t'
name|'in'
name|'threads'
op|':'
newline|'\n'
indent|'            '
name|'t'
op|'.'
name|'join'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'done'
newline|'\n'
nl|'\n'
DECL|variable|_log_lock
dedent|''
name|'_log_lock'
op|'='
name|'threading'
op|'.'
name|'Lock'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_queued_page
name|'def'
name|'_get_queued_page'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'pending_queue'
op|','
name|'done'
op|','
name|'seen'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'while'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'location'
op|'='
name|'pending_queue'
op|'.'
name|'get'
op|'('
name|'False'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'QueueEmpty'
op|':'
newline|'\n'
indent|'                '
name|'return'
newline|'\n'
dedent|''
name|'if'
name|'location'
name|'in'
name|'seen'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'seen'
op|'.'
name|'add'
op|'('
name|'location'
op|')'
newline|'\n'
name|'page'
op|'='
name|'self'
op|'.'
name|'_get_page'
op|'('
name|'location'
op|','
name|'req'
op|')'
newline|'\n'
name|'if'
name|'page'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'done'
op|'.'
name|'append'
op|'('
name|'page'
op|')'
newline|'\n'
name|'for'
name|'link'
name|'in'
name|'page'
op|'.'
name|'rel_links'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pending_queue'
op|'.'
name|'put'
op|'('
name|'link'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|_egg_fragment_re
dedent|''
dedent|''
dedent|''
name|'_egg_fragment_re'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"r'#egg=([^&]*)'"
op|')'
newline|'\n'
DECL|variable|_egg_info_re
name|'_egg_info_re'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"r'([a-z0-9_.]+)-([a-z0-9_.-]+)'"
op|','
name|'re'
op|'.'
name|'I'
op|')'
newline|'\n'
DECL|variable|_py_version_re
name|'_py_version_re'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"r'-py([123]\\.[0-9])$'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_sort_links
name|'def'
name|'_sort_links'
op|'('
name|'self'
op|','
name|'links'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Returns elements of links in order, non-egg links first, egg links second, while eliminating duplicates"'
newline|'\n'
name|'eggs'
op|','
name|'no_eggs'
op|'='
op|'['
op|']'
op|','
op|'['
op|']'
newline|'\n'
name|'seen'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'link'
name|'in'
name|'links'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'link'
name|'not'
name|'in'
name|'seen'
op|':'
newline|'\n'
indent|'                '
name|'seen'
op|'.'
name|'add'
op|'('
name|'link'
op|')'
newline|'\n'
name|'if'
name|'link'
op|'.'
name|'egg_fragment'
op|':'
newline|'\n'
indent|'                    '
name|'eggs'
op|'.'
name|'append'
op|'('
name|'link'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'no_eggs'
op|'.'
name|'append'
op|'('
name|'link'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'no_eggs'
op|'+'
name|'eggs'
newline|'\n'
nl|'\n'
DECL|member|_package_versions
dedent|''
name|'def'
name|'_package_versions'
op|'('
name|'self'
op|','
name|'links'
op|','
name|'search_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'link'
name|'in'
name|'self'
op|'.'
name|'_sort_links'
op|'('
name|'links'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'v'
name|'in'
name|'self'
op|'.'
name|'_link_package_versions'
op|'('
name|'link'
op|','
name|'search_name'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'yield'
name|'v'
newline|'\n'
nl|'\n'
DECL|member|_link_package_versions
dedent|''
dedent|''
dedent|''
name|'def'
name|'_link_package_versions'
op|'('
name|'self'
op|','
name|'link'
op|','
name|'search_name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Return an iterable of triples (pkg_resources_version_key,\n        link, python_version) that can be extracted from the given\n        link.\n\n        Meant to be overridden by subclasses, not called by clients.\n        """'
newline|'\n'
name|'if'
name|'link'
op|'.'
name|'egg_fragment'
op|':'
newline|'\n'
indent|'            '
name|'egg_info'
op|'='
name|'link'
op|'.'
name|'egg_fragment'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'egg_info'
op|','
name|'ext'
op|'='
name|'link'
op|'.'
name|'splitext'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'ext'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'link'
name|'not'
name|'in'
name|'self'
op|'.'
name|'logged_links'
op|':'
newline|'\n'
indent|'                    '
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'Skipping link %s; not a file'"
op|'%'
name|'link'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logged_links'
op|'.'
name|'add'
op|'('
name|'link'
op|')'
newline|'\n'
dedent|''
name|'return'
op|'['
op|']'
newline|'\n'
dedent|''
name|'if'
name|'egg_info'
op|'.'
name|'endswith'
op|'('
string|"'.tar'"
op|')'
op|':'
newline|'\n'
comment|'# Special double-extension case:'
nl|'\n'
indent|'                '
name|'egg_info'
op|'='
name|'egg_info'
op|'['
op|':'
op|'-'
number|'4'
op|']'
newline|'\n'
name|'ext'
op|'='
string|"'.tar'"
op|'+'
name|'ext'
newline|'\n'
dedent|''
name|'if'
name|'ext'
name|'not'
name|'in'
op|'('
string|"'.tar.gz'"
op|','
string|"'.tar.bz2'"
op|','
string|"'.tar'"
op|','
string|"'.tgz'"
op|','
string|"'.zip'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'link'
name|'not'
name|'in'
name|'self'
op|'.'
name|'logged_links'
op|':'
newline|'\n'
indent|'                    '
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'Skipping link %s; unknown archive format: %s'"
op|'%'
op|'('
name|'link'
op|','
name|'ext'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logged_links'
op|'.'
name|'add'
op|'('
name|'link'
op|')'
newline|'\n'
dedent|''
name|'return'
op|'['
op|']'
newline|'\n'
dedent|''
dedent|''
name|'version'
op|'='
name|'self'
op|'.'
name|'_egg_info_matches'
op|'('
name|'egg_info'
op|','
name|'search_name'
op|','
name|'link'
op|')'
newline|'\n'
name|'if'
name|'version'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'Skipping link %s; wrong project name (not %s)'"
op|'%'
op|'('
name|'link'
op|','
name|'search_name'
op|')'
op|')'
newline|'\n'
name|'return'
op|'['
op|']'
newline|'\n'
dedent|''
name|'match'
op|'='
name|'self'
op|'.'
name|'_py_version_re'
op|'.'
name|'search'
op|'('
name|'version'
op|')'
newline|'\n'
name|'if'
name|'match'
op|':'
newline|'\n'
indent|'            '
name|'version'
op|'='
name|'version'
op|'['
op|':'
name|'match'
op|'.'
name|'start'
op|'('
op|')'
op|']'
newline|'\n'
name|'py_version'
op|'='
name|'match'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
newline|'\n'
name|'if'
name|'py_version'
op|'!='
name|'sys'
op|'.'
name|'version'
op|'['
op|':'
number|'3'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'Skipping %s because Python version is incorrect'"
op|'%'
name|'link'
op|')'
newline|'\n'
name|'return'
op|'['
op|']'
newline|'\n'
dedent|''
dedent|''
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'Found link %s, version: %s'"
op|'%'
op|'('
name|'link'
op|','
name|'version'
op|')'
op|')'
newline|'\n'
name|'return'
op|'['
op|'('
name|'pkg_resources'
op|'.'
name|'parse_version'
op|'('
name|'version'
op|')'
op|','
nl|'\n'
name|'link'
op|','
nl|'\n'
name|'version'
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_egg_info_matches
dedent|''
name|'def'
name|'_egg_info_matches'
op|'('
name|'self'
op|','
name|'egg_info'
op|','
name|'search_name'
op|','
name|'link'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'match'
op|'='
name|'self'
op|'.'
name|'_egg_info_re'
op|'.'
name|'search'
op|'('
name|'egg_info'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'match'
op|':'
newline|'\n'
indent|'            '
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'Could not parse version from link: %s'"
op|'%'
name|'link'
op|')'
newline|'\n'
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'name'
op|'='
name|'match'
op|'.'
name|'group'
op|'('
number|'0'
op|')'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
comment|'# To match the "safe" name that pkg_resources creates:'
nl|'\n'
name|'name'
op|'='
name|'name'
op|'.'
name|'replace'
op|'('
string|"'_'"
op|','
string|"'-'"
op|')'
newline|'\n'
name|'if'
name|'name'
op|'.'
name|'startswith'
op|'('
name|'search_name'
op|'.'
name|'lower'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'match'
op|'.'
name|'group'
op|'('
number|'0'
op|')'
op|'['
name|'len'
op|'('
name|'search_name'
op|')'
op|':'
op|']'
op|'.'
name|'lstrip'
op|'('
string|"'-'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_get_page
dedent|''
dedent|''
name|'def'
name|'_get_page'
op|'('
name|'self'
op|','
name|'link'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'HTMLPage'
op|'.'
name|'get_page'
op|'('
name|'link'
op|','
name|'req'
op|','
name|'cache'
op|'='
name|'self'
op|'.'
name|'cache'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_mirror_urls
dedent|''
name|'def'
name|'_get_mirror_urls'
op|'('
name|'self'
op|','
name|'mirrors'
op|'='
name|'None'
op|','
name|'main_mirror_url'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Retrieves a list of URLs from the main mirror DNS entry\n        unless a list of mirror URLs are passed.\n        """'
newline|'\n'
name|'if'
name|'not'
name|'mirrors'
op|':'
newline|'\n'
indent|'            '
name|'mirrors'
op|'='
name|'get_mirrors'
op|'('
name|'main_mirror_url'
op|')'
newline|'\n'
comment|'# Should this be made "less random"? E.g. netselect like?'
nl|'\n'
name|'random'
op|'.'
name|'shuffle'
op|'('
name|'mirrors'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mirror_urls'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'mirror_url'
name|'in'
name|'mirrors'
op|':'
newline|'\n'
comment|'# Make sure we have a valid URL'
nl|'\n'
indent|'            '
name|'if'
name|'not'
op|'('
string|'"http://"'
name|'or'
string|'"https://"'
name|'or'
string|'"file://"'
op|')'
name|'in'
name|'mirror_url'
op|':'
newline|'\n'
indent|'                '
name|'mirror_url'
op|'='
string|'"http://%s"'
op|'%'
name|'mirror_url'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'mirror_url'
op|'.'
name|'endswith'
op|'('
string|'"/simple"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'mirror_url'
op|'='
string|'"%s/simple/"'
op|'%'
name|'mirror_url'
newline|'\n'
dedent|''
name|'mirror_urls'
op|'.'
name|'add'
op|'('
name|'mirror_url'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'list'
op|'('
name|'mirror_urls'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|PageCache
dedent|''
dedent|''
name|'class'
name|'PageCache'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Cache of HTML pages"""'
newline|'\n'
nl|'\n'
DECL|variable|failure_limit
name|'failure_limit'
op|'='
number|'3'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_failures'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_pages'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_archives'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|too_many_failures
dedent|''
name|'def'
name|'too_many_failures'
op|'('
name|'self'
op|','
name|'url'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_failures'
op|'.'
name|'get'
op|'('
name|'url'
op|','
number|'0'
op|')'
op|'>='
name|'self'
op|'.'
name|'failure_limit'
newline|'\n'
nl|'\n'
DECL|member|get_page
dedent|''
name|'def'
name|'get_page'
op|'('
name|'self'
op|','
name|'url'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_pages'
op|'.'
name|'get'
op|'('
name|'url'
op|')'
newline|'\n'
nl|'\n'
DECL|member|is_archive
dedent|''
name|'def'
name|'is_archive'
op|'('
name|'self'
op|','
name|'url'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_archives'
op|'.'
name|'get'
op|'('
name|'url'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|set_is_archive
dedent|''
name|'def'
name|'set_is_archive'
op|'('
name|'self'
op|','
name|'url'
op|','
name|'value'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_archives'
op|'['
name|'url'
op|']'
op|'='
name|'value'
newline|'\n'
nl|'\n'
DECL|member|add_page_failure
dedent|''
name|'def'
name|'add_page_failure'
op|'('
name|'self'
op|','
name|'url'
op|','
name|'level'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_failures'
op|'['
name|'url'
op|']'
op|'='
name|'self'
op|'.'
name|'_failures'
op|'.'
name|'get'
op|'('
name|'url'
op|','
number|'0'
op|')'
op|'+'
name|'level'
newline|'\n'
nl|'\n'
DECL|member|add_page
dedent|''
name|'def'
name|'add_page'
op|'('
name|'self'
op|','
name|'urls'
op|','
name|'page'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'url'
name|'in'
name|'urls'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_pages'
op|'['
name|'url'
op|']'
op|'='
name|'page'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HTMLPage
dedent|''
dedent|''
dedent|''
name|'class'
name|'HTMLPage'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents one page, along with its URL"""'
newline|'\n'
nl|'\n'
comment|'## FIXME: these regexes are horrible hacks:'
nl|'\n'
DECL|variable|_homepage_re
name|'_homepage_re'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"r'<th>\\s*home\\s*page'"
op|','
name|'re'
op|'.'
name|'I'
op|')'
newline|'\n'
DECL|variable|_download_re
name|'_download_re'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"r'<th>\\s*download\\s+url'"
op|','
name|'re'
op|'.'
name|'I'
op|')'
newline|'\n'
comment|"## These aren't so aweful:"
nl|'\n'
name|'_rel_re'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|'"""<[^>]*\\srel\\s*=\\s*[\'"]?([^\'">]+)[^>]*>"""'
op|','
name|'re'
op|'.'
name|'I'
op|')'
newline|'\n'
DECL|variable|_href_re
name|'_href_re'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|'\'href=(?:"([^"]*)"|\\\'([^\\\']*)\\\'|([^>\\\\s\\\\n]*))\''
op|','
name|'re'
op|'.'
name|'I'
op|'|'
name|'re'
op|'.'
name|'S'
op|')'
newline|'\n'
name|'_base_re'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|'r"""<base\\s+href\\s*=\\s*[\'"]?([^\'">]+)"""'
op|','
name|'re'
op|'.'
name|'I'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'content'
op|','
name|'url'
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'content'
op|'='
name|'content'
newline|'\n'
name|'self'
op|'.'
name|'url'
op|'='
name|'url'
newline|'\n'
name|'self'
op|'.'
name|'headers'
op|'='
name|'headers'
newline|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'url'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|get_page
name|'def'
name|'get_page'
op|'('
name|'cls'
op|','
name|'link'
op|','
name|'req'
op|','
name|'cache'
op|'='
name|'None'
op|','
name|'skip_archives'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'url'
op|'='
name|'link'
op|'.'
name|'url'
newline|'\n'
name|'url'
op|'='
name|'url'
op|'.'
name|'split'
op|'('
string|"'#'"
op|','
number|'1'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'cache'
op|'.'
name|'too_many_failures'
op|'('
name|'url'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
comment|'# Check for VCS schemes that do not support lookup as web pages.'
nl|'\n'
dedent|''
name|'from'
name|'pip'
op|'.'
name|'vcs'
name|'import'
name|'VcsSupport'
newline|'\n'
name|'for'
name|'scheme'
name|'in'
name|'VcsSupport'
op|'.'
name|'schemes'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'url'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
name|'scheme'
op|')'
name|'and'
name|'url'
op|'['
name|'len'
op|'('
name|'scheme'
op|')'
op|']'
name|'in'
string|"'+:'"
op|':'
newline|'\n'
indent|'                '
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'Cannot look at %(scheme)s URL %(link)s'"
op|'%'
name|'locals'
op|'('
op|')'
op|')'
newline|'\n'
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'cache'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'inst'
op|'='
name|'cache'
op|'.'
name|'get_page'
op|'('
name|'url'
op|')'
newline|'\n'
name|'if'
name|'inst'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'inst'
newline|'\n'
dedent|''
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'skip_archives'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'cache'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'cache'
op|'.'
name|'is_archive'
op|'('
name|'url'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'return'
name|'None'
newline|'\n'
dedent|''
dedent|''
name|'filename'
op|'='
name|'link'
op|'.'
name|'filename'
newline|'\n'
name|'for'
name|'bad_ext'
name|'in'
op|'['
string|"'.tar'"
op|','
string|"'.tar.gz'"
op|','
string|"'.tar.bz2'"
op|','
string|"'.tgz'"
op|','
string|"'.zip'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'filename'
op|'.'
name|'endswith'
op|'('
name|'bad_ext'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'content_type'
op|'='
name|'cls'
op|'.'
name|'_get_content_type'
op|'('
name|'url'
op|')'
newline|'\n'
name|'if'
name|'content_type'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
string|"'text/html'"
op|')'
op|':'
newline|'\n'
indent|'                            '
name|'break'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                            '
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'Skipping page %s because of Content-Type: %s'"
op|'%'
op|'('
name|'link'
op|','
name|'content_type'
op|')'
op|')'
newline|'\n'
name|'if'
name|'cache'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                                '
name|'cache'
op|'.'
name|'set_is_archive'
op|'('
name|'url'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'None'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'Getting page %s'"
op|'%'
name|'url'
op|')'
newline|'\n'
nl|'\n'
comment|'# Tack index.html onto file:// URLs that point to directories'
nl|'\n'
op|'('
name|'scheme'
op|','
name|'netloc'
op|','
name|'path'
op|','
name|'params'
op|','
name|'query'
op|','
name|'fragment'
op|')'
op|'='
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'url'
op|')'
newline|'\n'
name|'if'
name|'scheme'
op|'=='
string|"'file'"
name|'and'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'urllib'
op|'.'
name|'url2pathname'
op|'('
name|'path'
op|')'
op|')'
op|':'
newline|'\n'
comment|"# add trailing slash if not present so urljoin doesn't trim final segment"
nl|'\n'
indent|'                '
name|'if'
name|'not'
name|'url'
op|'.'
name|'endswith'
op|'('
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'url'
op|'+='
string|"'/'"
newline|'\n'
dedent|''
name|'url'
op|'='
name|'urlparse'
op|'.'
name|'urljoin'
op|'('
name|'url'
op|','
string|"'index.html'"
op|')'
newline|'\n'
name|'logger'
op|'.'
name|'debug'
op|'('
string|"' file: URL is directory, getting %s'"
op|'%'
name|'url'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'resp'
op|'='
name|'urlopen'
op|'('
name|'url'
op|')'
newline|'\n'
nl|'\n'
name|'real_url'
op|'='
name|'geturl'
op|'('
name|'resp'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'resp'
op|'.'
name|'info'
op|'('
op|')'
newline|'\n'
name|'inst'
op|'='
name|'cls'
op|'('
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
op|','
name|'real_url'
op|','
name|'headers'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'urllib2'
op|'.'
name|'HTTPError'
op|','
name|'urllib2'
op|'.'
name|'URLError'
op|','
name|'socket'
op|'.'
name|'timeout'
op|','
name|'socket'
op|'.'
name|'error'
op|','
name|'OSError'
op|','
name|'WindowsError'
op|')'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'desc'
op|'='
name|'str'
op|'('
name|'e'
op|')'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'e'
op|','
name|'socket'
op|'.'
name|'timeout'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'log_meth'
op|'='
name|'logger'
op|'.'
name|'info'
newline|'\n'
name|'level'
op|'='
number|'1'
newline|'\n'
name|'desc'
op|'='
string|"'timed out'"
newline|'\n'
dedent|''
name|'elif'
name|'isinstance'
op|'('
name|'e'
op|','
name|'urllib2'
op|'.'
name|'URLError'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'log_meth'
op|'='
name|'logger'
op|'.'
name|'info'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'e'
op|','
string|"'reason'"
op|')'
name|'and'
name|'isinstance'
op|'('
name|'e'
op|'.'
name|'reason'
op|','
name|'socket'
op|'.'
name|'timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'desc'
op|'='
string|"'timed out'"
newline|'\n'
name|'level'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'level'
op|'='
number|'2'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'isinstance'
op|'('
name|'e'
op|','
name|'urllib2'
op|'.'
name|'HTTPError'
op|')'
name|'and'
name|'e'
op|'.'
name|'code'
op|'=='
number|'404'
op|':'
newline|'\n'
comment|'## FIXME: notify?'
nl|'\n'
indent|'                '
name|'log_meth'
op|'='
name|'logger'
op|'.'
name|'info'
newline|'\n'
name|'level'
op|'='
number|'2'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'log_meth'
op|'='
name|'logger'
op|'.'
name|'info'
newline|'\n'
name|'level'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'log_meth'
op|'('
string|"'Could not fetch URL %s: %s'"
op|'%'
op|'('
name|'link'
op|','
name|'desc'
op|')'
op|')'
newline|'\n'
name|'log_meth'
op|'('
string|"'Will skip URL %s when looking for download links for %s'"
op|'%'
op|'('
name|'link'
op|'.'
name|'url'
op|','
name|'req'
op|')'
op|')'
newline|'\n'
name|'if'
name|'cache'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'cache'
op|'.'
name|'add_page_failure'
op|'('
name|'url'
op|','
name|'level'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'cache'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'cache'
op|'.'
name|'add_page'
op|'('
op|'['
name|'url'
op|','
name|'real_url'
op|']'
op|','
name|'inst'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'inst'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|_get_content_type
name|'def'
name|'_get_content_type'
op|'('
name|'url'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get the Content-Type of the given url, using a HEAD request"""'
newline|'\n'
name|'scheme'
op|','
name|'netloc'
op|','
name|'path'
op|','
name|'query'
op|','
name|'fragment'
op|'='
name|'urlparse'
op|'.'
name|'urlsplit'
op|'('
name|'url'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'scheme'
name|'in'
op|'('
string|"'http'"
op|','
string|"'https'"
op|','
string|"'ftp'"
op|','
string|"'ftps'"
op|')'
op|':'
newline|'\n'
comment|'## FIXME: some warning or something?'
nl|'\n'
comment|'## assertion error?'
nl|'\n'
indent|'            '
name|'return'
string|"''"
newline|'\n'
dedent|''
name|'req'
op|'='
name|'Urllib2HeadRequest'
op|'('
name|'url'
op|','
name|'headers'
op|'='
op|'{'
string|"'Host'"
op|':'
name|'netloc'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'urlopen'
op|'('
name|'req'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'hasattr'
op|'('
name|'resp'
op|','
string|"'code'"
op|')'
name|'and'
name|'resp'
op|'.'
name|'code'
op|'!='
number|'200'
name|'and'
name|'scheme'
name|'not'
name|'in'
op|'('
string|"'ftp'"
op|','
string|"'ftps'"
op|')'
op|':'
newline|'\n'
comment|"## FIXME: doesn't handle redirects"
nl|'\n'
indent|'                '
name|'return'
string|"''"
newline|'\n'
dedent|''
name|'return'
name|'resp'
op|'.'
name|'info'
op|'('
op|')'
op|'.'
name|'get'
op|'('
string|"'content-type'"
op|','
string|"''"
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|base_url
name|'def'
name|'base_url'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'self'
op|','
string|'"_base_url"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'match'
op|'='
name|'self'
op|'.'
name|'_base_re'
op|'.'
name|'search'
op|'('
name|'self'
op|'.'
name|'content'
op|')'
newline|'\n'
name|'if'
name|'match'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_base_url'
op|'='
name|'match'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_base_url'
op|'='
name|'self'
op|'.'
name|'url'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'self'
op|'.'
name|'_base_url'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|links
name|'def'
name|'links'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Yields all links in the page"""'
newline|'\n'
name|'for'
name|'match'
name|'in'
name|'self'
op|'.'
name|'_href_re'
op|'.'
name|'finditer'
op|'('
name|'self'
op|'.'
name|'content'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'url'
op|'='
name|'match'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
name|'or'
name|'match'
op|'.'
name|'group'
op|'('
number|'2'
op|')'
name|'or'
name|'match'
op|'.'
name|'group'
op|'('
number|'3'
op|')'
newline|'\n'
name|'url'
op|'='
name|'self'
op|'.'
name|'clean_link'
op|'('
name|'urlparse'
op|'.'
name|'urljoin'
op|'('
name|'self'
op|'.'
name|'base_url'
op|','
name|'url'
op|')'
op|')'
newline|'\n'
name|'yield'
name|'Link'
op|'('
name|'url'
op|','
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|rel_links
dedent|''
dedent|''
name|'def'
name|'rel_links'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'url'
name|'in'
name|'self'
op|'.'
name|'explicit_rel_links'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'yield'
name|'url'
newline|'\n'
dedent|''
name|'for'
name|'url'
name|'in'
name|'self'
op|'.'
name|'scraped_rel_links'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'yield'
name|'url'
newline|'\n'
nl|'\n'
DECL|member|explicit_rel_links
dedent|''
dedent|''
name|'def'
name|'explicit_rel_links'
op|'('
name|'self'
op|','
name|'rels'
op|'='
op|'('
string|"'homepage'"
op|','
string|"'download'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Yields all links with the given relations"""'
newline|'\n'
name|'for'
name|'match'
name|'in'
name|'self'
op|'.'
name|'_rel_re'
op|'.'
name|'finditer'
op|'('
name|'self'
op|'.'
name|'content'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'found_rels'
op|'='
name|'match'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'split'
op|'('
op|')'
newline|'\n'
name|'for'
name|'rel'
name|'in'
name|'rels'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'rel'
name|'in'
name|'found_rels'
op|':'
newline|'\n'
indent|'                    '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'match'
op|'='
name|'self'
op|'.'
name|'_href_re'
op|'.'
name|'search'
op|'('
name|'match'
op|'.'
name|'group'
op|'('
number|'0'
op|')'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'match'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'url'
op|'='
name|'match'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
name|'or'
name|'match'
op|'.'
name|'group'
op|'('
number|'2'
op|')'
name|'or'
name|'match'
op|'.'
name|'group'
op|'('
number|'3'
op|')'
newline|'\n'
name|'url'
op|'='
name|'self'
op|'.'
name|'clean_link'
op|'('
name|'urlparse'
op|'.'
name|'urljoin'
op|'('
name|'self'
op|'.'
name|'base_url'
op|','
name|'url'
op|')'
op|')'
newline|'\n'
name|'yield'
name|'Link'
op|'('
name|'url'
op|','
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|scraped_rel_links
dedent|''
dedent|''
name|'def'
name|'scraped_rel_links'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'regex'
name|'in'
op|'('
name|'self'
op|'.'
name|'_homepage_re'
op|','
name|'self'
op|'.'
name|'_download_re'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'match'
op|'='
name|'regex'
op|'.'
name|'search'
op|'('
name|'self'
op|'.'
name|'content'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'match'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'href_match'
op|'='
name|'self'
op|'.'
name|'_href_re'
op|'.'
name|'search'
op|'('
name|'self'
op|'.'
name|'content'
op|','
name|'pos'
op|'='
name|'match'
op|'.'
name|'end'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'href_match'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'url'
op|'='
name|'match'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
name|'or'
name|'match'
op|'.'
name|'group'
op|'('
number|'2'
op|')'
name|'or'
name|'match'
op|'.'
name|'group'
op|'('
number|'3'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'url'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'url'
op|'='
name|'self'
op|'.'
name|'clean_link'
op|'('
name|'urlparse'
op|'.'
name|'urljoin'
op|'('
name|'self'
op|'.'
name|'base_url'
op|','
name|'url'
op|')'
op|')'
newline|'\n'
name|'yield'
name|'Link'
op|'('
name|'url'
op|','
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|_clean_re
dedent|''
dedent|''
name|'_clean_re'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"r'[^a-z0-9$&+,/:;=?@.#%_\\\\|-]'"
op|','
name|'re'
op|'.'
name|'I'
op|')'
newline|'\n'
nl|'\n'
DECL|member|clean_link
name|'def'
name|'clean_link'
op|'('
name|'self'
op|','
name|'url'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Makes sure a link is fully encoded.  That is, if a \' \' shows up in\n        the link, it will be rewritten to %20 (while not over-quoting\n        % or other characters)."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_clean_re'
op|'.'
name|'sub'
op|'('
nl|'\n'
name|'lambda'
name|'match'
op|':'
string|"'%%%2x'"
op|'%'
name|'ord'
op|'('
name|'match'
op|'.'
name|'group'
op|'('
number|'0'
op|')'
op|')'
op|','
name|'url'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Link
dedent|''
dedent|''
name|'class'
name|'Link'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'url'
op|','
name|'comes_from'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'url'
op|'='
name|'url'
newline|'\n'
name|'self'
op|'.'
name|'comes_from'
op|'='
name|'comes_from'
newline|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'comes_from'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'%s (from %s)'"
op|'%'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'comes_from'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'url'
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'<Link %s>'"
op|'%'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|__eq__
dedent|''
name|'def'
name|'__eq__'
op|'('
name|'self'
op|','
name|'other'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'url'
op|'=='
name|'other'
op|'.'
name|'url'
newline|'\n'
nl|'\n'
DECL|member|__hash__
dedent|''
name|'def'
name|'__hash__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'hash'
op|'('
name|'self'
op|'.'
name|'url'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|filename
name|'def'
name|'filename'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'url'
op|'='
name|'self'
op|'.'
name|'url'
newline|'\n'
name|'url'
op|'='
name|'url'
op|'.'
name|'split'
op|'('
string|"'#'"
op|','
number|'1'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'url'
op|'='
name|'url'
op|'.'
name|'split'
op|'('
string|"'?'"
op|','
number|'1'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'url'
op|'='
name|'url'
op|'.'
name|'rstrip'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'name'
op|'='
name|'posixpath'
op|'.'
name|'basename'
op|'('
name|'url'
op|')'
newline|'\n'
name|'assert'
name|'name'
op|','
op|'('
nl|'\n'
string|"'URL %r produced no filename'"
op|'%'
name|'url'
op|')'
newline|'\n'
name|'return'
name|'name'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|scheme
name|'def'
name|'scheme'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'urlparse'
op|'.'
name|'urlsplit'
op|'('
name|'self'
op|'.'
name|'url'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|path
name|'def'
name|'path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'urlparse'
op|'.'
name|'urlsplit'
op|'('
name|'self'
op|'.'
name|'url'
op|')'
op|'['
number|'2'
op|']'
newline|'\n'
nl|'\n'
DECL|member|splitext
dedent|''
name|'def'
name|'splitext'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'splitext'
op|'('
name|'posixpath'
op|'.'
name|'basename'
op|'('
name|'self'
op|'.'
name|'path'
op|'.'
name|'rstrip'
op|'('
string|"'/'"
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|_egg_fragment_re
dedent|''
name|'_egg_fragment_re'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"r'#egg=([^&]*)'"
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'property'
newline|'\n'
DECL|member|egg_fragment
name|'def'
name|'egg_fragment'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'match'
op|'='
name|'self'
op|'.'
name|'_egg_fragment_re'
op|'.'
name|'search'
op|'('
name|'self'
op|'.'
name|'url'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'match'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'match'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|_md5_re
dedent|''
name|'_md5_re'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"r'md5=([a-f0-9]+)'"
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'property'
newline|'\n'
DECL|member|md5_hash
name|'def'
name|'md5_hash'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'match'
op|'='
name|'self'
op|'.'
name|'_md5_re'
op|'.'
name|'search'
op|'('
name|'self'
op|'.'
name|'url'
op|')'
newline|'\n'
name|'if'
name|'match'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'match'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|show_url
name|'def'
name|'show_url'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'posixpath'
op|'.'
name|'basename'
op|'('
name|'self'
op|'.'
name|'url'
op|'.'
name|'split'
op|'('
string|"'#'"
op|','
number|'1'
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'split'
op|'('
string|"'?'"
op|','
number|'1'
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_requirement_from_url
dedent|''
dedent|''
name|'def'
name|'get_requirement_from_url'
op|'('
name|'url'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Get a requirement from the URL, if possible.  This looks for #egg\n    in the URL"""'
newline|'\n'
name|'link'
op|'='
name|'Link'
op|'('
name|'url'
op|')'
newline|'\n'
name|'egg_info'
op|'='
name|'link'
op|'.'
name|'egg_fragment'
newline|'\n'
name|'if'
name|'not'
name|'egg_info'
op|':'
newline|'\n'
indent|'        '
name|'egg_info'
op|'='
name|'splitext'
op|'('
name|'link'
op|'.'
name|'filename'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'return'
name|'package_to_requirement'
op|'('
name|'egg_info'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|package_to_requirement
dedent|''
name|'def'
name|'package_to_requirement'
op|'('
name|'package_name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Translate a name like Foo-1.2 to Foo==1.3"""'
newline|'\n'
name|'match'
op|'='
name|'re'
op|'.'
name|'search'
op|'('
string|"r'^(.*?)(-dev|-\\d.*)'"
op|','
name|'package_name'
op|')'
newline|'\n'
name|'if'
name|'match'
op|':'
newline|'\n'
indent|'        '
name|'name'
op|'='
name|'match'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
newline|'\n'
name|'version'
op|'='
name|'match'
op|'.'
name|'group'
op|'('
number|'2'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'name'
op|'='
name|'package_name'
newline|'\n'
name|'version'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'if'
name|'version'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'%s==%s'"
op|'%'
op|'('
name|'name'
op|','
name|'version'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'name'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_mirrors
dedent|''
dedent|''
name|'def'
name|'get_mirrors'
op|'('
name|'hostname'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return the list of mirrors from the last record found on the DNS\n    entry::\n\n    >>> from pip.index import get_mirrors\n    >>> get_mirrors()\n    [\'a.pypi.python.org\', \'b.pypi.python.org\', \'c.pypi.python.org\',\n    \'d.pypi.python.org\']\n\n    Originally written for the distutils2 project by Alexis Metaireau.\n    """'
newline|'\n'
name|'if'
name|'hostname'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'hostname'
op|'='
name|'DEFAULT_MIRROR_URL'
newline|'\n'
nl|'\n'
comment|'# return the last mirror registered on PyPI.'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'hostname'
op|'='
name|'socket'
op|'.'
name|'gethostbyname_ex'
op|'('
name|'hostname'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'socket'
op|'.'
name|'gaierror'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
op|']'
newline|'\n'
dedent|''
name|'end_letter'
op|'='
name|'hostname'
op|'.'
name|'split'
op|'('
string|'"."'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
comment|'# determine the list from the last one.'
nl|'\n'
name|'return'
op|'['
string|'"%s.%s"'
op|'%'
op|'('
name|'s'
op|','
name|'end_letter'
op|'['
number|'1'
op|']'
op|')'
name|'for'
name|'s'
name|'in'
name|'string_range'
op|'('
name|'end_letter'
op|'['
number|'0'
op|']'
op|')'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|string_range
dedent|''
name|'def'
name|'string_range'
op|'('
name|'last'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Compute the range of string between "a" and last.\n\n    This works for simple "a to z" lists, but also for "a to zz" lists.\n    """'
newline|'\n'
name|'for'
name|'k'
name|'in'
name|'range'
op|'('
name|'len'
op|'('
name|'last'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'x'
name|'in'
name|'product'
op|'('
name|'string'
op|'.'
name|'ascii_lowercase'
op|','
name|'repeat'
op|'='
name|'k'
op|'+'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'x'
op|')'
newline|'\n'
name|'yield'
name|'result'
newline|'\n'
name|'if'
name|'result'
op|'=='
name|'last'
op|':'
newline|'\n'
indent|'                '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
