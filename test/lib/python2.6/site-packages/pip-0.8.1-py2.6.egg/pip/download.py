begin_unit
name|'import'
name|'xmlrpclib'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
name|'import'
name|'getpass'
newline|'\n'
name|'import'
name|'urllib'
newline|'\n'
name|'import'
name|'urllib2'
newline|'\n'
name|'import'
name|'urlparse'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'mimetypes'
newline|'\n'
name|'import'
name|'shutil'
newline|'\n'
name|'import'
name|'tempfile'
newline|'\n'
name|'from'
name|'pip'
op|'.'
name|'backwardcompat'
name|'import'
name|'md5'
op|','
name|'copytree'
newline|'\n'
name|'from'
name|'pip'
op|'.'
name|'exceptions'
name|'import'
name|'InstallationError'
newline|'\n'
name|'from'
name|'pip'
op|'.'
name|'util'
name|'import'
op|'('
name|'splitext'
op|','
nl|'\n'
name|'format_size'
op|','
name|'display_path'
op|','
name|'backup_dir'
op|','
name|'ask'
op|','
nl|'\n'
name|'unpack_file'
op|','
name|'create_download_cache_folder'
op|','
name|'cache_download'
op|')'
newline|'\n'
name|'from'
name|'pip'
op|'.'
name|'vcs'
name|'import'
name|'vcs'
newline|'\n'
name|'from'
name|'pip'
op|'.'
name|'log'
name|'import'
name|'logger'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|__all__
name|'__all__'
op|'='
op|'['
string|"'xmlrpclib_transport'"
op|','
string|"'get_file_content'"
op|','
string|"'urlopen'"
op|','
nl|'\n'
string|"'is_url'"
op|','
string|"'url_to_path'"
op|','
string|"'path_to_url'"
op|','
string|"'path_to_url2'"
op|','
nl|'\n'
string|"'geturl'"
op|','
string|"'is_archive_file'"
op|','
string|"'unpack_vcs_link'"
op|','
nl|'\n'
string|"'unpack_file_url'"
op|','
string|"'is_vcs_url'"
op|','
string|"'is_file_url'"
op|','
string|"'unpack_http_url'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|xmlrpclib_transport
name|'xmlrpclib_transport'
op|'='
name|'xmlrpclib'
op|'.'
name|'Transport'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_file_content
name|'def'
name|'get_file_content'
op|'('
name|'url'
op|','
name|'comes_from'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Gets the content of a file; it may be a filename, file: URL, or\n    http: URL.  Returns (location, content)"""'
newline|'\n'
name|'match'
op|'='
name|'_scheme_re'
op|'.'
name|'search'
op|'('
name|'url'
op|')'
newline|'\n'
name|'if'
name|'match'
op|':'
newline|'\n'
indent|'        '
name|'scheme'
op|'='
name|'match'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'if'
op|'('
name|'scheme'
op|'=='
string|"'file'"
name|'and'
name|'comes_from'
nl|'\n'
name|'and'
name|'comes_from'
op|'.'
name|'startswith'
op|'('
string|"'http'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'InstallationError'
op|'('
nl|'\n'
string|"'Requirements file %s references URL %s, which is local'"
nl|'\n'
op|'%'
op|'('
name|'comes_from'
op|','
name|'url'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'scheme'
op|'=='
string|"'file'"
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
name|'url'
op|'.'
name|'split'
op|'('
string|"':'"
op|','
number|'1'
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'path'
op|'='
name|'path'
op|'.'
name|'replace'
op|'('
string|"'\\\\'"
op|','
string|"'/'"
op|')'
newline|'\n'
name|'match'
op|'='
name|'_url_slash_drive_re'
op|'.'
name|'match'
op|'('
name|'path'
op|')'
newline|'\n'
name|'if'
name|'match'
op|':'
newline|'\n'
indent|'                '
name|'path'
op|'='
name|'match'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
op|'+'
string|"':'"
op|'+'
name|'path'
op|'.'
name|'split'
op|'('
string|"'|'"
op|','
number|'1'
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
dedent|''
name|'path'
op|'='
name|'urllib'
op|'.'
name|'unquote'
op|'('
name|'path'
op|')'
newline|'\n'
name|'if'
name|'path'
op|'.'
name|'startswith'
op|'('
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'path'
op|'='
string|"'/'"
op|'+'
name|'path'
op|'.'
name|'lstrip'
op|'('
string|"'/'"
op|')'
newline|'\n'
dedent|''
name|'url'
op|'='
name|'path'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'## FIXME: catch some errors'
nl|'\n'
indent|'            '
name|'resp'
op|'='
name|'urlopen'
op|'('
name|'url'
op|')'
newline|'\n'
name|'return'
name|'geturl'
op|'('
name|'resp'
op|')'
op|','
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'f'
op|'='
name|'open'
op|'('
name|'url'
op|')'
newline|'\n'
name|'content'
op|'='
name|'f'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'IOError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'InstallationError'
op|'('
string|"'Could not open requirements file: %s'"
op|'%'
name|'str'
op|'('
name|'e'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'url'
op|','
name|'content'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|_scheme_re
dedent|''
name|'_scheme_re'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"r'^(http|https|file):'"
op|','
name|'re'
op|'.'
name|'I'
op|')'
newline|'\n'
DECL|variable|_url_slash_drive_re
name|'_url_slash_drive_re'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"r'/*([a-z])\\|'"
op|','
name|'re'
op|'.'
name|'I'
op|')'
newline|'\n'
nl|'\n'
DECL|class|URLOpener
name|'class'
name|'URLOpener'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    pip\'s own URL helper that adds HTTP auth and proxy support\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'passman'
op|'='
name|'urllib2'
op|'.'
name|'HTTPPasswordMgrWithDefaultRealm'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'url'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        If the given url contains auth info or if a normal request gets a 401\n        response, an attempt is made to fetch the resource using basic HTTP\n        auth.\n\n        """'
newline|'\n'
name|'url'
op|','
name|'username'
op|','
name|'password'
op|'='
name|'self'
op|'.'
name|'extract_credentials'
op|'('
name|'url'
op|')'
newline|'\n'
name|'if'
name|'username'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'response'
op|'='
name|'urllib2'
op|'.'
name|'urlopen'
op|'('
name|'self'
op|'.'
name|'get_request'
op|'('
name|'url'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'urllib2'
op|'.'
name|'HTTPError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'e'
op|'.'
name|'code'
op|'!='
number|'401'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'self'
op|'.'
name|'get_response'
op|'('
name|'url'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'response'
op|'='
name|'self'
op|'.'
name|'get_response'
op|'('
name|'url'
op|','
name|'username'
op|','
name|'password'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'response'
newline|'\n'
nl|'\n'
DECL|member|get_request
dedent|''
name|'def'
name|'get_request'
op|'('
name|'self'
op|','
name|'url'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Wraps the URL to retrieve to protects against "creative"\n        interpretation of the RFC: http://bugs.python.org/issue8732\n        """'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'url'
op|','
name|'basestring'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'url'
op|'='
name|'urllib2'
op|'.'
name|'Request'
op|'('
name|'url'
op|','
name|'headers'
op|'='
op|'{'
string|"'Accept-encoding'"
op|':'
string|"'identity'"
op|'}'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'url'
newline|'\n'
nl|'\n'
DECL|member|get_response
dedent|''
name|'def'
name|'get_response'
op|'('
name|'self'
op|','
name|'url'
op|','
name|'username'
op|'='
name|'None'
op|','
name|'password'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        does the dirty work of actually getting the rsponse object using urllib2\n        and its HTTP auth builtins.\n        """'
newline|'\n'
name|'scheme'
op|','
name|'netloc'
op|','
name|'path'
op|','
name|'query'
op|','
name|'frag'
op|'='
name|'urlparse'
op|'.'
name|'urlsplit'
op|'('
name|'url'
op|')'
newline|'\n'
name|'pass_url'
op|'='
name|'urlparse'
op|'.'
name|'urlunsplit'
op|'('
op|'('
string|"'_none_'"
op|','
name|'netloc'
op|','
name|'path'
op|','
name|'query'
op|','
name|'frag'
op|')'
op|')'
op|'.'
name|'replace'
op|'('
string|"'_none_://'"
op|','
string|"''"
op|','
number|'1'
op|')'
newline|'\n'
name|'req'
op|'='
name|'self'
op|'.'
name|'get_request'
op|'('
name|'url'
op|')'
newline|'\n'
nl|'\n'
name|'stored_username'
op|','
name|'stored_password'
op|'='
name|'self'
op|'.'
name|'passman'
op|'.'
name|'find_user_password'
op|'('
name|'None'
op|','
name|'netloc'
op|')'
newline|'\n'
comment|'# see if we have a password stored'
nl|'\n'
name|'if'
name|'stored_username'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'username'
name|'is'
name|'None'
name|'and'
name|'self'
op|'.'
name|'prompting'
op|':'
newline|'\n'
indent|'                '
name|'username'
op|'='
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'raw_input'
op|'('
string|"'User for %s: '"
op|'%'
name|'netloc'
op|')'
op|')'
newline|'\n'
name|'password'
op|'='
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'getpass'
op|'.'
name|'getpass'
op|'('
string|"'Password: '"
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'username'
name|'and'
name|'password'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'passman'
op|'.'
name|'add_password'
op|'('
name|'None'
op|','
name|'netloc'
op|','
name|'username'
op|','
name|'password'
op|')'
newline|'\n'
dedent|''
name|'stored_username'
op|','
name|'stored_password'
op|'='
name|'self'
op|'.'
name|'passman'
op|'.'
name|'find_user_password'
op|'('
name|'None'
op|','
name|'netloc'
op|')'
newline|'\n'
dedent|''
name|'authhandler'
op|'='
name|'urllib2'
op|'.'
name|'HTTPBasicAuthHandler'
op|'('
name|'self'
op|'.'
name|'passman'
op|')'
newline|'\n'
name|'opener'
op|'='
name|'urllib2'
op|'.'
name|'build_opener'
op|'('
name|'authhandler'
op|')'
newline|'\n'
comment|'# FIXME: should catch a 401 and offer to let the user reenter credentials'
nl|'\n'
name|'return'
name|'opener'
op|'.'
name|'open'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|setup
dedent|''
name|'def'
name|'setup'
op|'('
name|'self'
op|','
name|'proxystr'
op|'='
string|"''"
op|','
name|'prompting'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Sets the proxy handler given the option passed on the command\n        line.  If an empty string is passed it looks at the HTTP_PROXY\n        environment variable.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'prompting'
op|'='
name|'prompting'
newline|'\n'
name|'proxy'
op|'='
name|'self'
op|'.'
name|'get_proxy'
op|'('
name|'proxystr'
op|')'
newline|'\n'
name|'if'
name|'proxy'
op|':'
newline|'\n'
indent|'            '
name|'proxy_support'
op|'='
name|'urllib2'
op|'.'
name|'ProxyHandler'
op|'('
op|'{'
string|'"http"'
op|':'
name|'proxy'
op|','
string|'"ftp"'
op|':'
name|'proxy'
op|'}'
op|')'
newline|'\n'
name|'opener'
op|'='
name|'urllib2'
op|'.'
name|'build_opener'
op|'('
name|'proxy_support'
op|','
name|'urllib2'
op|'.'
name|'CacheFTPHandler'
op|')'
newline|'\n'
name|'urllib2'
op|'.'
name|'install_opener'
op|'('
name|'opener'
op|')'
newline|'\n'
nl|'\n'
DECL|member|parse_credentials
dedent|''
dedent|''
name|'def'
name|'parse_credentials'
op|'('
name|'self'
op|','
name|'netloc'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|'"@"'
name|'in'
name|'netloc'
op|':'
newline|'\n'
indent|'            '
name|'userinfo'
op|'='
name|'netloc'
op|'.'
name|'rsplit'
op|'('
string|'"@"'
op|','
number|'1'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
string|'":"'
name|'in'
name|'userinfo'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'userinfo'
op|'.'
name|'split'
op|'('
string|'":"'
op|','
number|'1'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'userinfo'
op|','
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'None'
op|','
name|'None'
newline|'\n'
nl|'\n'
DECL|member|extract_credentials
dedent|''
name|'def'
name|'extract_credentials'
op|'('
name|'self'
op|','
name|'url'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Extracts user/password from a url.\n\n        Returns a tuple:\n            (url-without-auth, username, password)\n        """'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'url'
op|','
name|'urllib2'
op|'.'
name|'Request'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'urlparse'
op|'.'
name|'urlsplit'
op|'('
name|'url'
op|'.'
name|'get_full_url'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'urlparse'
op|'.'
name|'urlsplit'
op|'('
name|'url'
op|')'
newline|'\n'
dedent|''
name|'scheme'
op|','
name|'netloc'
op|','
name|'path'
op|','
name|'query'
op|','
name|'frag'
op|'='
name|'result'
newline|'\n'
nl|'\n'
name|'username'
op|','
name|'password'
op|'='
name|'self'
op|'.'
name|'parse_credentials'
op|'('
name|'netloc'
op|')'
newline|'\n'
name|'if'
name|'username'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'url'
op|','
name|'None'
op|','
name|'None'
newline|'\n'
dedent|''
name|'elif'
name|'password'
name|'is'
name|'None'
name|'and'
name|'self'
op|'.'
name|'prompting'
op|':'
newline|'\n'
comment|'# remove the auth credentials from the url part'
nl|'\n'
indent|'            '
name|'netloc'
op|'='
name|'netloc'
op|'.'
name|'replace'
op|'('
string|"'%s@'"
op|'%'
name|'username'
op|','
string|"''"
op|','
number|'1'
op|')'
newline|'\n'
comment|'# prompt for the password'
nl|'\n'
name|'prompt'
op|'='
string|"'Password for %s@%s: '"
op|'%'
op|'('
name|'username'
op|','
name|'netloc'
op|')'
newline|'\n'
name|'password'
op|'='
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'getpass'
op|'.'
name|'getpass'
op|'('
name|'prompt'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# remove the auth credentials from the url part'
nl|'\n'
indent|'            '
name|'netloc'
op|'='
name|'netloc'
op|'.'
name|'replace'
op|'('
string|"'%s:%s@'"
op|'%'
op|'('
name|'username'
op|','
name|'password'
op|')'
op|','
string|"''"
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'target_url'
op|'='
name|'urlparse'
op|'.'
name|'urlunsplit'
op|'('
op|'('
name|'scheme'
op|','
name|'netloc'
op|','
name|'path'
op|','
name|'query'
op|','
name|'frag'
op|')'
op|')'
newline|'\n'
name|'return'
name|'target_url'
op|','
name|'username'
op|','
name|'password'
newline|'\n'
nl|'\n'
DECL|member|get_proxy
dedent|''
name|'def'
name|'get_proxy'
op|'('
name|'self'
op|','
name|'proxystr'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get the proxy given the option passed on the command line.\n        If an empty string is passed it looks at the HTTP_PROXY\n        environment variable.\n        """'
newline|'\n'
name|'if'
name|'not'
name|'proxystr'
op|':'
newline|'\n'
indent|'            '
name|'proxystr'
op|'='
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'HTTP_PROXY'"
op|','
string|"''"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'proxystr'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'@'"
name|'in'
name|'proxystr'
op|':'
newline|'\n'
indent|'                '
name|'user_password'
op|','
name|'server_port'
op|'='
name|'proxystr'
op|'.'
name|'split'
op|'('
string|"'@'"
op|','
number|'1'
op|')'
newline|'\n'
name|'if'
string|"':'"
name|'in'
name|'user_password'
op|':'
newline|'\n'
indent|'                    '
name|'user'
op|','
name|'password'
op|'='
name|'user_password'
op|'.'
name|'split'
op|'('
string|"':'"
op|','
number|'1'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'user'
op|'='
name|'user_password'
newline|'\n'
name|'prompt'
op|'='
string|"'Password for %s@%s: '"
op|'%'
op|'('
name|'user'
op|','
name|'server_port'
op|')'
newline|'\n'
name|'password'
op|'='
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'getpass'
op|'.'
name|'getpass'
op|'('
name|'prompt'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
string|"'%s:%s@%s'"
op|'%'
op|'('
name|'user'
op|','
name|'password'
op|','
name|'server_port'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'proxystr'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|variable|urlopen
dedent|''
dedent|''
dedent|''
name|'urlopen'
op|'='
name|'URLOpener'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|is_url
name|'def'
name|'is_url'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Returns true if the name looks like a URL"""'
newline|'\n'
name|'if'
string|"':'"
name|'not'
name|'in'
name|'name'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'scheme'
op|'='
name|'name'
op|'.'
name|'split'
op|'('
string|"':'"
op|','
number|'1'
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'return'
name|'scheme'
name|'in'
op|'['
string|"'http'"
op|','
string|"'https'"
op|','
string|"'file'"
op|','
string|"'ftp'"
op|']'
op|'+'
name|'vcs'
op|'.'
name|'all_schemes'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|url_to_path
dedent|''
name|'def'
name|'url_to_path'
op|'('
name|'url'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Convert a file: URL to a path.\n    """'
newline|'\n'
name|'assert'
name|'url'
op|'.'
name|'startswith'
op|'('
string|"'file:'"
op|')'
op|','
op|'('
nl|'\n'
string|'"You can only turn file: urls into filenames (not %r)"'
op|'%'
name|'url'
op|')'
newline|'\n'
name|'path'
op|'='
name|'url'
op|'['
name|'len'
op|'('
string|"'file:'"
op|')'
op|':'
op|']'
op|'.'
name|'lstrip'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'path'
op|'='
name|'urllib'
op|'.'
name|'unquote'
op|'('
name|'path'
op|')'
newline|'\n'
name|'if'
name|'_url_drive_re'
op|'.'
name|'match'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
name|'path'
op|'['
number|'0'
op|']'
op|'+'
string|"':'"
op|'+'
name|'path'
op|'['
number|'2'
op|':'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
string|"'/'"
op|'+'
name|'path'
newline|'\n'
dedent|''
name|'return'
name|'path'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|_drive_re
dedent|''
name|'_drive_re'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"'^([a-z]):'"
op|','
name|'re'
op|'.'
name|'I'
op|')'
newline|'\n'
DECL|variable|_url_drive_re
name|'_url_drive_re'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"'^([a-z])[:|]'"
op|','
name|'re'
op|'.'
name|'I'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|path_to_url
name|'def'
name|'path_to_url'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Convert a path to a file: URL.  The path will be made absolute.\n    """'
newline|'\n'
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'normcase'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'abspath'
op|'('
name|'path'
op|')'
op|')'
newline|'\n'
name|'if'
name|'_drive_re'
op|'.'
name|'match'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
name|'path'
op|'['
number|'0'
op|']'
op|'+'
string|"'|'"
op|'+'
name|'path'
op|'['
number|'2'
op|':'
op|']'
newline|'\n'
dedent|''
name|'url'
op|'='
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'path'
op|')'
newline|'\n'
name|'url'
op|'='
name|'url'
op|'.'
name|'replace'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'sep'
op|','
string|"'/'"
op|')'
newline|'\n'
name|'url'
op|'='
name|'url'
op|'.'
name|'lstrip'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'return'
string|"'file:///'"
op|'+'
name|'url'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|path_to_url2
dedent|''
name|'def'
name|'path_to_url2'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Convert a path to a file: URL.  The path will be made absolute and have\n    quoted path parts.\n    """'
newline|'\n'
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'normpath'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'abspath'
op|'('
name|'path'
op|')'
op|')'
newline|'\n'
name|'drive'
op|','
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'splitdrive'
op|'('
name|'path'
op|')'
newline|'\n'
name|'filepath'
op|'='
name|'path'
op|'.'
name|'split'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'sep'
op|')'
newline|'\n'
name|'url'
op|'='
string|"'/'"
op|'.'
name|'join'
op|'('
op|'['
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'part'
op|')'
name|'for'
name|'part'
name|'in'
name|'filepath'
op|']'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'drive'
op|':'
newline|'\n'
indent|'        '
name|'url'
op|'='
name|'url'
op|'.'
name|'lstrip'
op|'('
string|"'/'"
op|')'
newline|'\n'
dedent|''
name|'return'
string|"'file:///'"
op|'+'
name|'drive'
op|'+'
name|'url'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|geturl
dedent|''
name|'def'
name|'geturl'
op|'('
name|'urllib2_resp'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Use instead of urllib.addinfourl.geturl(), which appears to have\n    some issues with dropping the double slash for certain schemes\n    (e.g. file://).  This implementation is probably over-eager, as it\n    always restores \'://\' if it is missing, and it appears some url\n    schemata aren\'t always followed by \'//\' after the colon, but as\n    far as I know pip doesn\'t need any of those.\n    The URI RFC can be found at: http://tools.ietf.org/html/rfc1630\n\n    This function assumes that\n        scheme:/foo/bar\n    is the same as\n        scheme:///foo/bar\n    """'
newline|'\n'
name|'url'
op|'='
name|'urllib2_resp'
op|'.'
name|'geturl'
op|'('
op|')'
newline|'\n'
name|'scheme'
op|','
name|'rest'
op|'='
name|'url'
op|'.'
name|'split'
op|'('
string|"':'"
op|','
number|'1'
op|')'
newline|'\n'
name|'if'
name|'rest'
op|'.'
name|'startswith'
op|'('
string|"'//'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'url'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# FIXME: write a good test to cover it'
nl|'\n'
indent|'        '
name|'return'
string|"'%s://%s'"
op|'%'
op|'('
name|'scheme'
op|','
name|'rest'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|is_archive_file
dedent|''
dedent|''
name|'def'
name|'is_archive_file'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return True if `name` is a considered as an archive file."""'
newline|'\n'
name|'archives'
op|'='
op|'('
string|"'.zip'"
op|','
string|"'.tar.gz'"
op|','
string|"'.tar.bz2'"
op|','
string|"'.tgz'"
op|','
string|"'.tar'"
op|','
string|"'.pybundle'"
op|')'
newline|'\n'
name|'ext'
op|'='
name|'splitext'
op|'('
name|'name'
op|')'
op|'['
number|'1'
op|']'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'if'
name|'ext'
name|'in'
name|'archives'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'return'
name|'False'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|unpack_vcs_link
dedent|''
name|'def'
name|'unpack_vcs_link'
op|'('
name|'link'
op|','
name|'location'
op|','
name|'only_download'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'vcs_backend'
op|'='
name|'_get_used_vcs_backend'
op|'('
name|'link'
op|')'
newline|'\n'
name|'if'
name|'only_download'
op|':'
newline|'\n'
indent|'        '
name|'vcs_backend'
op|'.'
name|'export'
op|'('
name|'location'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'vcs_backend'
op|'.'
name|'unpack'
op|'('
name|'location'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|unpack_file_url
dedent|''
dedent|''
name|'def'
name|'unpack_file_url'
op|'('
name|'link'
op|','
name|'location'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'source'
op|'='
name|'url_to_path'
op|'('
name|'link'
op|'.'
name|'url'
op|')'
newline|'\n'
name|'content_type'
op|'='
name|'mimetypes'
op|'.'
name|'guess_type'
op|'('
name|'source'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'source'
op|')'
op|':'
newline|'\n'
comment|'# delete the location since shutil will create it again :('
nl|'\n'
indent|'        '
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'location'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'location'
op|')'
newline|'\n'
dedent|''
name|'copytree'
op|'('
name|'source'
op|','
name|'location'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'unpack_file'
op|'('
name|'source'
op|','
name|'location'
op|','
name|'content_type'
op|','
name|'link'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_get_used_vcs_backend
dedent|''
dedent|''
name|'def'
name|'_get_used_vcs_backend'
op|'('
name|'link'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'for'
name|'backend'
name|'in'
name|'vcs'
op|'.'
name|'backends'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'link'
op|'.'
name|'scheme'
name|'in'
name|'backend'
op|'.'
name|'schemes'
op|':'
newline|'\n'
indent|'            '
name|'vcs_backend'
op|'='
name|'backend'
op|'('
name|'link'
op|'.'
name|'url'
op|')'
newline|'\n'
name|'return'
name|'vcs_backend'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|is_vcs_url
dedent|''
dedent|''
dedent|''
name|'def'
name|'is_vcs_url'
op|'('
name|'link'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'bool'
op|'('
name|'_get_used_vcs_backend'
op|'('
name|'link'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|is_file_url
dedent|''
name|'def'
name|'is_file_url'
op|'('
name|'link'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'link'
op|'.'
name|'url'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
string|"'file:'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_check_md5
dedent|''
name|'def'
name|'_check_md5'
op|'('
name|'download_hash'
op|','
name|'link'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'download_hash'
op|'='
name|'download_hash'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
name|'if'
name|'download_hash'
op|'!='
name|'link'
op|'.'
name|'md5_hash'
op|':'
newline|'\n'
indent|'        '
name|'logger'
op|'.'
name|'fatal'
op|'('
string|'"MD5 hash of the package %s (%s) doesn\'t match the expected hash %s!"'
nl|'\n'
op|'%'
op|'('
name|'link'
op|','
name|'download_hash'
op|','
name|'link'
op|'.'
name|'md5_hash'
op|')'
op|')'
newline|'\n'
name|'raise'
name|'InstallationError'
op|'('
string|"'Bad MD5 hash for package %s'"
op|'%'
name|'link'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_get_md5_from_file
dedent|''
dedent|''
name|'def'
name|'_get_md5_from_file'
op|'('
name|'target_file'
op|','
name|'link'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'download_hash'
op|'='
name|'md5'
op|'('
op|')'
newline|'\n'
name|'fp'
op|'='
name|'open'
op|'('
name|'target_file'
op|','
string|"'rb'"
op|')'
newline|'\n'
name|'while'
number|'1'
op|':'
newline|'\n'
indent|'        '
name|'chunk'
op|'='
name|'fp'
op|'.'
name|'read'
op|'('
number|'4096'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'chunk'
op|':'
newline|'\n'
indent|'            '
name|'break'
newline|'\n'
dedent|''
name|'download_hash'
op|'.'
name|'update'
op|'('
name|'chunk'
op|')'
newline|'\n'
dedent|''
name|'fp'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'return'
name|'download_hash'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_download_url
dedent|''
name|'def'
name|'_download_url'
op|'('
name|'resp'
op|','
name|'link'
op|','
name|'temp_location'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'fp'
op|'='
name|'open'
op|'('
name|'temp_location'
op|','
string|"'wb'"
op|')'
newline|'\n'
name|'download_hash'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'link'
op|'.'
name|'md5_hash'
op|':'
newline|'\n'
indent|'        '
name|'download_hash'
op|'='
name|'md5'
op|'('
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'total_length'
op|'='
name|'int'
op|'('
name|'resp'
op|'.'
name|'info'
op|'('
op|')'
op|'['
string|"'content-length'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'ValueError'
op|','
name|'KeyError'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'total_length'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'downloaded'
op|'='
number|'0'
newline|'\n'
name|'show_progress'
op|'='
name|'total_length'
op|'>'
number|'40'
op|'*'
number|'1000'
name|'or'
name|'not'
name|'total_length'
newline|'\n'
name|'show_url'
op|'='
name|'link'
op|'.'
name|'show_url'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'show_progress'
op|':'
newline|'\n'
comment|'## FIXME: the URL can get really long in this message:'
nl|'\n'
indent|'            '
name|'if'
name|'total_length'
op|':'
newline|'\n'
indent|'                '
name|'logger'
op|'.'
name|'start_progress'
op|'('
string|"'Downloading %s (%s): '"
op|'%'
op|'('
name|'show_url'
op|','
name|'format_size'
op|'('
name|'total_length'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'logger'
op|'.'
name|'start_progress'
op|'('
string|"'Downloading %s (unknown size): '"
op|'%'
name|'show_url'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'logger'
op|'.'
name|'notify'
op|'('
string|"'Downloading %s'"
op|'%'
name|'show_url'
op|')'
newline|'\n'
dedent|''
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'Downloading from URL %s'"
op|'%'
name|'link'
op|')'
newline|'\n'
nl|'\n'
name|'while'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'chunk'
op|'='
name|'resp'
op|'.'
name|'read'
op|'('
number|'4096'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'chunk'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'downloaded'
op|'+='
name|'len'
op|'('
name|'chunk'
op|')'
newline|'\n'
name|'if'
name|'show_progress'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'total_length'
op|':'
newline|'\n'
indent|'                    '
name|'logger'
op|'.'
name|'show_progress'
op|'('
string|"'%s'"
op|'%'
name|'format_size'
op|'('
name|'downloaded'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'logger'
op|'.'
name|'show_progress'
op|'('
string|"'%3i%%  %s'"
op|'%'
op|'('
number|'100'
op|'*'
name|'downloaded'
op|'/'
name|'total_length'
op|','
name|'format_size'
op|'('
name|'downloaded'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'link'
op|'.'
name|'md5_hash'
op|':'
newline|'\n'
indent|'                '
name|'download_hash'
op|'.'
name|'update'
op|'('
name|'chunk'
op|')'
newline|'\n'
dedent|''
name|'fp'
op|'.'
name|'write'
op|'('
name|'chunk'
op|')'
newline|'\n'
dedent|''
name|'fp'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'show_progress'
op|':'
newline|'\n'
indent|'            '
name|'logger'
op|'.'
name|'end_progress'
op|'('
string|"'%s downloaded'"
op|'%'
name|'format_size'
op|'('
name|'downloaded'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'download_hash'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_copy_file
dedent|''
name|'def'
name|'_copy_file'
op|'('
name|'filename'
op|','
name|'location'
op|','
name|'content_type'
op|','
name|'link'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'copy'
op|'='
name|'True'
newline|'\n'
name|'download_location'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'location'
op|','
name|'link'
op|'.'
name|'filename'
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'download_location'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'ask'
op|'('
string|"'The file %s exists. (i)gnore, (w)ipe, (b)ackup '"
nl|'\n'
op|'%'
name|'display_path'
op|'('
name|'download_location'
op|')'
op|','
op|'('
string|"'i'"
op|','
string|"'w'"
op|','
string|"'b'"
op|')'
op|')'
newline|'\n'
name|'if'
name|'response'
op|'=='
string|"'i'"
op|':'
newline|'\n'
indent|'            '
name|'copy'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'elif'
name|'response'
op|'=='
string|"'w'"
op|':'
newline|'\n'
indent|'            '
name|'logger'
op|'.'
name|'warn'
op|'('
string|"'Deleting %s'"
op|'%'
name|'display_path'
op|'('
name|'download_location'
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'remove'
op|'('
name|'download_location'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'response'
op|'=='
string|"'b'"
op|':'
newline|'\n'
indent|'            '
name|'dest_file'
op|'='
name|'backup_dir'
op|'('
name|'download_location'
op|')'
newline|'\n'
name|'logger'
op|'.'
name|'warn'
op|'('
string|"'Backing up %s to %s'"
nl|'\n'
op|'%'
op|'('
name|'display_path'
op|'('
name|'download_location'
op|')'
op|','
name|'display_path'
op|'('
name|'dest_file'
op|')'
op|')'
op|')'
newline|'\n'
name|'shutil'
op|'.'
name|'move'
op|'('
name|'download_location'
op|','
name|'dest_file'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'copy'
op|':'
newline|'\n'
indent|'        '
name|'shutil'
op|'.'
name|'copy'
op|'('
name|'filename'
op|','
name|'download_location'
op|')'
newline|'\n'
name|'logger'
op|'.'
name|'indent'
op|'-='
number|'2'
newline|'\n'
name|'logger'
op|'.'
name|'notify'
op|'('
string|"'Saved %s'"
op|'%'
name|'display_path'
op|'('
name|'download_location'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|unpack_http_url
dedent|''
dedent|''
name|'def'
name|'unpack_http_url'
op|'('
name|'link'
op|','
name|'location'
op|','
name|'download_cache'
op|','
name|'only_download'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'temp_dir'
op|'='
name|'tempfile'
op|'.'
name|'mkdtemp'
op|'('
string|"'-unpack'"
op|','
string|"'pip-'"
op|')'
newline|'\n'
name|'target_url'
op|'='
name|'link'
op|'.'
name|'url'
op|'.'
name|'split'
op|'('
string|"'#'"
op|','
number|'1'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'target_file'
op|'='
name|'None'
newline|'\n'
name|'download_hash'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'download_cache'
op|':'
newline|'\n'
indent|'        '
name|'target_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'download_cache'
op|','
nl|'\n'
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'target_url'
op|','
string|"''"
op|')'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'download_cache'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'create_download_cache_folder'
op|'('
name|'download_cache'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
op|'('
name|'target_file'
nl|'\n'
name|'and'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'target_file'
op|')'
nl|'\n'
name|'and'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'target_file'
op|'+'
string|"'.content-type'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fp'
op|'='
name|'open'
op|'('
name|'target_file'
op|'+'
string|"'.content-type'"
op|')'
newline|'\n'
name|'content_type'
op|'='
name|'fp'
op|'.'
name|'read'
op|'('
op|')'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'fp'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'if'
name|'link'
op|'.'
name|'md5_hash'
op|':'
newline|'\n'
indent|'            '
name|'download_hash'
op|'='
name|'_get_md5_from_file'
op|'('
name|'target_file'
op|','
name|'link'
op|')'
newline|'\n'
dedent|''
name|'temp_location'
op|'='
name|'target_file'
newline|'\n'
name|'logger'
op|'.'
name|'notify'
op|'('
string|"'Using download cache from %s'"
op|'%'
name|'target_file'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'resp'
op|'='
name|'_get_response_from_url'
op|'('
name|'target_url'
op|','
name|'link'
op|')'
newline|'\n'
name|'content_type'
op|'='
name|'resp'
op|'.'
name|'info'
op|'('
op|')'
op|'['
string|"'content-type'"
op|']'
newline|'\n'
name|'filename'
op|'='
name|'link'
op|'.'
name|'filename'
newline|'\n'
name|'ext'
op|'='
name|'splitext'
op|'('
name|'filename'
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'ext'
op|':'
newline|'\n'
indent|'            '
name|'ext'
op|'='
name|'mimetypes'
op|'.'
name|'guess_extension'
op|'('
name|'content_type'
op|')'
newline|'\n'
name|'if'
name|'ext'
op|':'
newline|'\n'
indent|'                '
name|'filename'
op|'+='
name|'ext'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'ext'
name|'and'
name|'link'
op|'.'
name|'url'
op|'!='
name|'geturl'
op|'('
name|'resp'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ext'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'splitext'
op|'('
name|'geturl'
op|'('
name|'resp'
op|')'
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'if'
name|'ext'
op|':'
newline|'\n'
indent|'                '
name|'filename'
op|'+='
name|'ext'
newline|'\n'
dedent|''
dedent|''
name|'temp_location'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'temp_dir'
op|','
name|'filename'
op|')'
newline|'\n'
name|'download_hash'
op|'='
name|'_download_url'
op|'('
name|'resp'
op|','
name|'link'
op|','
name|'temp_location'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'link'
op|'.'
name|'md5_hash'
op|':'
newline|'\n'
indent|'        '
name|'_check_md5'
op|'('
name|'download_hash'
op|','
name|'link'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'only_download'
op|':'
newline|'\n'
indent|'        '
name|'_copy_file'
op|'('
name|'temp_location'
op|','
name|'location'
op|','
name|'content_type'
op|','
name|'link'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'unpack_file'
op|'('
name|'temp_location'
op|','
name|'location'
op|','
name|'content_type'
op|','
name|'link'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'target_file'
name|'and'
name|'target_file'
op|'!='
name|'temp_location'
op|':'
newline|'\n'
indent|'        '
name|'cache_download'
op|'('
name|'target_file'
op|','
name|'temp_location'
op|','
name|'content_type'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'target_file'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'temp_location'
op|')'
newline|'\n'
dedent|''
name|'os'
op|'.'
name|'rmdir'
op|'('
name|'temp_dir'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_get_response_from_url
dedent|''
name|'def'
name|'_get_response_from_url'
op|'('
name|'target_url'
op|','
name|'link'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'resp'
op|'='
name|'urlopen'
op|'('
name|'target_url'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'urllib2'
op|'.'
name|'HTTPError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'        '
name|'logger'
op|'.'
name|'fatal'
op|'('
string|'"HTTP error %s while getting %s"'
op|'%'
op|'('
name|'e'
op|'.'
name|'code'
op|','
name|'link'
op|')'
op|')'
newline|'\n'
name|'raise'
newline|'\n'
dedent|''
name|'except'
name|'IOError'
op|','
name|'e'
op|':'
newline|'\n'
comment|'# Typically an FTP error'
nl|'\n'
indent|'        '
name|'logger'
op|'.'
name|'fatal'
op|'('
string|'"Error %s while getting %s"'
op|'%'
op|'('
name|'e'
op|','
name|'link'
op|')'
op|')'
newline|'\n'
name|'raise'
newline|'\n'
dedent|''
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
DECL|class|Urllib2HeadRequest
dedent|''
name|'class'
name|'Urllib2HeadRequest'
op|'('
name|'urllib2'
op|'.'
name|'Request'
op|')'
op|':'
newline|'\n'
DECL|member|get_method
indent|'    '
name|'def'
name|'get_method'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|'"HEAD"'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
