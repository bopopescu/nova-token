begin_unit
comment|'#!/usr/bin/env python'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'optparse'
newline|'\n'
nl|'\n'
name|'import'
name|'subprocess'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
name|'import'
name|'difflib'
newline|'\n'
nl|'\n'
name|'from'
name|'pip'
op|'.'
name|'basecommand'
name|'import'
name|'command_dict'
op|','
name|'load_command'
op|','
name|'load_all_commands'
op|','
name|'command_names'
newline|'\n'
name|'from'
name|'pip'
op|'.'
name|'baseparser'
name|'import'
name|'parser'
newline|'\n'
name|'from'
name|'pip'
op|'.'
name|'exceptions'
name|'import'
name|'InstallationError'
newline|'\n'
name|'from'
name|'pip'
op|'.'
name|'log'
name|'import'
name|'logger'
newline|'\n'
name|'from'
name|'pip'
op|'.'
name|'util'
name|'import'
name|'get_installed_distributions'
newline|'\n'
name|'from'
name|'pip'
op|'.'
name|'backwardcompat'
name|'import'
name|'walk_packages'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|autocomplete
name|'def'
name|'autocomplete'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Command and option completion for the main option parser (and options)\n    and its subcommands (and options).\n\n    Enable by sourcing one of the completion shell scripts (bash or zsh).\n    """'
newline|'\n'
comment|"# Don't complete if user hasn't sourced bash_completion file."
nl|'\n'
name|'if'
string|"'PIP_AUTO_COMPLETE'"
name|'not'
name|'in'
name|'os'
op|'.'
name|'environ'
op|':'
newline|'\n'
indent|'        '
name|'return'
newline|'\n'
dedent|''
name|'cwords'
op|'='
name|'os'
op|'.'
name|'environ'
op|'['
string|"'COMP_WORDS'"
op|']'
op|'.'
name|'split'
op|'('
op|')'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
name|'cword'
op|'='
name|'int'
op|'('
name|'os'
op|'.'
name|'environ'
op|'['
string|"'COMP_CWORD'"
op|']'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'current'
op|'='
name|'cwords'
op|'['
name|'cword'
op|'-'
number|'1'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'IndexError'
op|':'
newline|'\n'
indent|'        '
name|'current'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'load_all_commands'
op|'('
op|')'
newline|'\n'
name|'subcommands'
op|'='
op|'['
name|'cmd'
name|'for'
name|'cmd'
op|','
name|'cls'
name|'in'
name|'command_dict'
op|'.'
name|'items'
op|'('
op|')'
name|'if'
name|'not'
name|'cls'
op|'.'
name|'hidden'
op|']'
newline|'\n'
name|'options'
op|'='
op|'['
op|']'
newline|'\n'
comment|'# subcommand'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'subcommand_name'
op|'='
op|'['
name|'w'
name|'for'
name|'w'
name|'in'
name|'cwords'
name|'if'
name|'w'
name|'in'
name|'subcommands'
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'IndexError'
op|':'
newline|'\n'
indent|'        '
name|'subcommand_name'
op|'='
name|'None'
newline|'\n'
comment|'# subcommand options'
nl|'\n'
dedent|''
name|'if'
name|'subcommand_name'
op|':'
newline|'\n'
comment|"# special case: 'help' subcommand has no options"
nl|'\n'
indent|'        '
name|'if'
name|'subcommand_name'
op|'=='
string|"'help'"
op|':'
newline|'\n'
indent|'            '
name|'sys'
op|'.'
name|'exit'
op|'('
number|'1'
op|')'
newline|'\n'
comment|'# special case: list locally installed dists for uninstall command'
nl|'\n'
dedent|''
name|'if'
name|'subcommand_name'
op|'=='
string|"'uninstall'"
name|'and'
name|'not'
name|'current'
op|'.'
name|'startswith'
op|'('
string|"'-'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'installed'
op|'='
op|'['
op|']'
newline|'\n'
name|'lc'
op|'='
name|'current'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'for'
name|'dist'
name|'in'
name|'get_installed_distributions'
op|'('
name|'local_only'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'dist'
op|'.'
name|'key'
op|'.'
name|'startswith'
op|'('
name|'lc'
op|')'
name|'and'
name|'dist'
op|'.'
name|'key'
name|'not'
name|'in'
name|'cwords'
op|'['
number|'1'
op|':'
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'installed'
op|'.'
name|'append'
op|'('
name|'dist'
op|'.'
name|'key'
op|')'
newline|'\n'
comment|'# if there are no dists installed, fall back to option completion'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'installed'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'dist'
name|'in'
name|'installed'
op|':'
newline|'\n'
indent|'                    '
name|'print'
name|'dist'
newline|'\n'
dedent|''
name|'sys'
op|'.'
name|'exit'
op|'('
number|'1'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'subcommand'
op|'='
name|'command_dict'
op|'.'
name|'get'
op|'('
name|'subcommand_name'
op|')'
newline|'\n'
name|'options'
op|'+='
op|'['
op|'('
name|'opt'
op|'.'
name|'get_opt_string'
op|'('
op|')'
op|','
name|'opt'
op|'.'
name|'nargs'
op|')'
nl|'\n'
name|'for'
name|'opt'
name|'in'
name|'subcommand'
op|'.'
name|'parser'
op|'.'
name|'option_list'
nl|'\n'
name|'if'
name|'opt'
op|'.'
name|'help'
op|'!='
name|'optparse'
op|'.'
name|'SUPPRESS_HELP'
op|']'
newline|'\n'
comment|'# filter out previously specified options from available options'
nl|'\n'
name|'prev_opts'
op|'='
op|'['
name|'x'
op|'.'
name|'split'
op|'('
string|"'='"
op|')'
op|'['
number|'0'
op|']'
name|'for'
name|'x'
name|'in'
name|'cwords'
op|'['
number|'1'
op|':'
name|'cword'
op|'-'
number|'1'
op|']'
op|']'
newline|'\n'
name|'options'
op|'='
name|'filter'
op|'('
name|'lambda'
op|'('
name|'x'
op|','
name|'v'
op|')'
op|':'
name|'x'
name|'not'
name|'in'
name|'prev_opts'
op|','
name|'options'
op|')'
newline|'\n'
comment|'# filter options by current input'
nl|'\n'
name|'options'
op|'='
op|'['
op|'('
name|'k'
op|','
name|'v'
op|')'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'options'
name|'if'
name|'k'
op|'.'
name|'startswith'
op|'('
name|'current'
op|')'
op|']'
newline|'\n'
name|'for'
name|'option'
name|'in'
name|'options'
op|':'
newline|'\n'
indent|'            '
name|'opt_label'
op|'='
name|'option'
op|'['
number|'0'
op|']'
newline|'\n'
comment|"# append '=' to options which require args"
nl|'\n'
name|'if'
name|'option'
op|'['
number|'1'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'opt_label'
op|'+='
string|"'='"
newline|'\n'
dedent|''
name|'print'
name|'opt_label'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# show options of main parser only when necessary'
nl|'\n'
indent|'        '
name|'if'
name|'current'
op|'.'
name|'startswith'
op|'('
string|"'-'"
op|')'
name|'or'
name|'current'
op|'.'
name|'startswith'
op|'('
string|"'--'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'subcommands'
op|'+='
op|'['
name|'opt'
op|'.'
name|'get_opt_string'
op|'('
op|')'
nl|'\n'
name|'for'
name|'opt'
name|'in'
name|'parser'
op|'.'
name|'option_list'
nl|'\n'
name|'if'
name|'opt'
op|'.'
name|'help'
op|'!='
name|'optparse'
op|'.'
name|'SUPPRESS_HELP'
op|']'
newline|'\n'
dedent|''
name|'print'
string|"' '"
op|'.'
name|'join'
op|'('
name|'filter'
op|'('
name|'lambda'
name|'x'
op|':'
name|'x'
op|'.'
name|'startswith'
op|'('
name|'current'
op|')'
op|','
name|'subcommands'
op|')'
op|')'
newline|'\n'
dedent|''
name|'sys'
op|'.'
name|'exit'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|version_control
dedent|''
name|'def'
name|'version_control'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# Import all the version control support modules:'
nl|'\n'
indent|'    '
name|'from'
name|'pip'
name|'import'
name|'vcs'
newline|'\n'
name|'for'
name|'importer'
op|','
name|'modname'
op|','
name|'ispkg'
name|'in'
name|'walk_packages'
op|'('
name|'path'
op|'='
name|'vcs'
op|'.'
name|'__path__'
op|','
name|'prefix'
op|'='
name|'vcs'
op|'.'
name|'__name__'
op|'+'
string|"'.'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'__import__'
op|'('
name|'modname'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|main
dedent|''
dedent|''
name|'def'
name|'main'
op|'('
name|'initial_args'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'initial_args'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'initial_args'
op|'='
name|'sys'
op|'.'
name|'argv'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
dedent|''
name|'autocomplete'
op|'('
op|')'
newline|'\n'
name|'version_control'
op|'('
op|')'
newline|'\n'
name|'options'
op|','
name|'args'
op|'='
name|'parser'
op|'.'
name|'parse_args'
op|'('
name|'initial_args'
op|')'
newline|'\n'
name|'if'
name|'options'
op|'.'
name|'help'
name|'and'
name|'not'
name|'args'
op|':'
newline|'\n'
indent|'        '
name|'args'
op|'='
op|'['
string|"'help'"
op|']'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'args'
op|':'
newline|'\n'
indent|'        '
name|'parser'
op|'.'
name|'error'
op|'('
string|'\'You must give a command (use "pip help" to see a list of commands)\''
op|')'
newline|'\n'
dedent|''
name|'command'
op|'='
name|'args'
op|'['
number|'0'
op|']'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'load_command'
op|'('
name|'command'
op|')'
newline|'\n'
name|'if'
name|'command'
name|'not'
name|'in'
name|'command_dict'
op|':'
newline|'\n'
indent|'        '
name|'close_commands'
op|'='
name|'difflib'
op|'.'
name|'get_close_matches'
op|'('
name|'command'
op|','
name|'command_names'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'close_commands'
op|':'
newline|'\n'
indent|'            '
name|'guess'
op|'='
name|'close_commands'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'args'
op|'['
number|'1'
op|':'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'guess'
op|'='
string|'"%s %s"'
op|'%'
op|'('
name|'guess'
op|','
string|'" "'
op|'.'
name|'join'
op|'('
name|'args'
op|'['
number|'1'
op|':'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'guess'
op|'='
string|"'install %s'"
op|'%'
name|'command'
newline|'\n'
dedent|''
name|'error_dict'
op|'='
op|'{'
string|"'arg'"
op|':'
name|'command'
op|','
string|"'guess'"
op|':'
name|'guess'
op|','
nl|'\n'
string|"'script'"
op|':'
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'sys'
op|'.'
name|'argv'
op|'['
number|'0'
op|']'
op|')'
op|'}'
newline|'\n'
name|'parser'
op|'.'
name|'error'
op|'('
string|"'No command by the name %(script)s %(arg)s\\n  '"
nl|'\n'
string|'\'(maybe you meant "%(script)s %(guess)s")\''
op|'%'
name|'error_dict'
op|')'
newline|'\n'
dedent|''
name|'command'
op|'='
name|'command_dict'
op|'['
name|'command'
op|']'
newline|'\n'
name|'return'
name|'command'
op|'.'
name|'main'
op|'('
name|'initial_args'
op|','
name|'args'
op|'['
number|'1'
op|':'
op|']'
op|','
name|'options'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'############################################################'
nl|'\n'
comment|'## Writing freeze files'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|FrozenRequirement
dedent|''
name|'class'
name|'FrozenRequirement'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'req'
op|','
name|'editable'
op|','
name|'comments'
op|'='
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'req'
op|'='
name|'req'
newline|'\n'
name|'self'
op|'.'
name|'editable'
op|'='
name|'editable'
newline|'\n'
name|'self'
op|'.'
name|'comments'
op|'='
name|'comments'
newline|'\n'
nl|'\n'
DECL|variable|_rev_re
dedent|''
name|'_rev_re'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"r'-r(\\d+)$'"
op|')'
newline|'\n'
DECL|variable|_date_re
name|'_date_re'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"r'-(20\\d\\d\\d\\d\\d\\d)$'"
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|from_dist
name|'def'
name|'from_dist'
op|'('
name|'cls'
op|','
name|'dist'
op|','
name|'dependency_links'
op|','
name|'find_tags'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'location'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'normcase'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'abspath'
op|'('
name|'dist'
op|'.'
name|'location'
op|')'
op|')'
newline|'\n'
name|'comments'
op|'='
op|'['
op|']'
newline|'\n'
name|'from'
name|'pip'
op|'.'
name|'vcs'
name|'import'
name|'vcs'
op|','
name|'get_src_requirement'
newline|'\n'
name|'if'
name|'vcs'
op|'.'
name|'get_backend_name'
op|'('
name|'location'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'editable'
op|'='
name|'True'
newline|'\n'
name|'req'
op|'='
name|'get_src_requirement'
op|'('
name|'dist'
op|','
name|'location'
op|','
name|'find_tags'
op|')'
newline|'\n'
name|'if'
name|'req'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'logger'
op|'.'
name|'warn'
op|'('
string|"'Could not determine repository location of %s'"
op|'%'
name|'location'
op|')'
newline|'\n'
name|'comments'
op|'.'
name|'append'
op|'('
string|"'## !! Could not determine repository location'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'dist'
op|'.'
name|'as_requirement'
op|'('
op|')'
newline|'\n'
name|'editable'
op|'='
name|'False'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'editable'
op|'='
name|'False'
newline|'\n'
name|'req'
op|'='
name|'dist'
op|'.'
name|'as_requirement'
op|'('
op|')'
newline|'\n'
name|'specs'
op|'='
name|'req'
op|'.'
name|'specs'
newline|'\n'
name|'assert'
name|'len'
op|'('
name|'specs'
op|')'
op|'=='
number|'1'
name|'and'
name|'specs'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|'=='
string|"'=='"
newline|'\n'
name|'version'
op|'='
name|'specs'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
newline|'\n'
name|'ver_match'
op|'='
name|'cls'
op|'.'
name|'_rev_re'
op|'.'
name|'search'
op|'('
name|'version'
op|')'
newline|'\n'
name|'date_match'
op|'='
name|'cls'
op|'.'
name|'_date_re'
op|'.'
name|'search'
op|'('
name|'version'
op|')'
newline|'\n'
name|'if'
name|'ver_match'
name|'or'
name|'date_match'
op|':'
newline|'\n'
indent|'                '
name|'svn_backend'
op|'='
name|'vcs'
op|'.'
name|'get_backend'
op|'('
string|"'svn'"
op|')'
newline|'\n'
name|'if'
name|'svn_backend'
op|':'
newline|'\n'
indent|'                    '
name|'svn_location'
op|'='
name|'svn_backend'
op|'('
nl|'\n'
op|')'
op|'.'
name|'get_location'
op|'('
name|'dist'
op|','
name|'dependency_links'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'svn_location'
op|':'
newline|'\n'
indent|'                    '
name|'logger'
op|'.'
name|'warn'
op|'('
nl|'\n'
string|"'Warning: cannot find svn location for %s'"
op|'%'
name|'req'
op|')'
newline|'\n'
name|'comments'
op|'.'
name|'append'
op|'('
string|"'## FIXME: could not find svn URL in dependency_links for this package:'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'comments'
op|'.'
name|'append'
op|'('
string|"'# Installing as editable to satisfy requirement %s:'"
op|'%'
name|'req'
op|')'
newline|'\n'
name|'if'
name|'ver_match'
op|':'
newline|'\n'
indent|'                        '
name|'rev'
op|'='
name|'ver_match'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'rev'
op|'='
string|"'{%s}'"
op|'%'
name|'date_match'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
newline|'\n'
dedent|''
name|'editable'
op|'='
name|'True'
newline|'\n'
name|'req'
op|'='
string|"'%s@%s#egg=%s'"
op|'%'
op|'('
name|'svn_location'
op|','
name|'rev'
op|','
name|'cls'
op|'.'
name|'egg_name'
op|'('
name|'dist'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'cls'
op|'('
name|'dist'
op|'.'
name|'project_name'
op|','
name|'req'
op|','
name|'editable'
op|','
name|'comments'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|egg_name
name|'def'
name|'egg_name'
op|'('
name|'dist'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'name'
op|'='
name|'dist'
op|'.'
name|'egg_name'
op|'('
op|')'
newline|'\n'
name|'match'
op|'='
name|'re'
op|'.'
name|'search'
op|'('
string|"r'-py\\d\\.\\d$'"
op|','
name|'name'
op|')'
newline|'\n'
name|'if'
name|'match'
op|':'
newline|'\n'
indent|'            '
name|'name'
op|'='
name|'name'
op|'['
op|':'
name|'match'
op|'.'
name|'start'
op|'('
op|')'
op|']'
newline|'\n'
dedent|''
name|'return'
name|'name'
newline|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'self'
op|'.'
name|'req'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'editable'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
string|"'-e %s'"
op|'%'
name|'req'
newline|'\n'
dedent|''
name|'return'
string|"'\\n'"
op|'.'
name|'join'
op|'('
name|'list'
op|'('
name|'self'
op|'.'
name|'comments'
op|')'
op|'+'
op|'['
name|'str'
op|'('
name|'req'
op|')'
op|']'
op|')'
op|'+'
string|"'\\n'"
newline|'\n'
nl|'\n'
comment|'############################################################'
nl|'\n'
comment|'## Requirement files'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|call_subprocess
dedent|''
dedent|''
name|'def'
name|'call_subprocess'
op|'('
name|'cmd'
op|','
name|'show_stdout'
op|'='
name|'True'
op|','
nl|'\n'
name|'filter_stdout'
op|'='
name|'None'
op|','
name|'cwd'
op|'='
name|'None'
op|','
nl|'\n'
name|'raise_on_returncode'
op|'='
name|'True'
op|','
nl|'\n'
name|'command_level'
op|'='
name|'logger'
op|'.'
name|'DEBUG'
op|','
name|'command_desc'
op|'='
name|'None'
op|','
nl|'\n'
name|'extra_environ'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'command_desc'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'cmd_parts'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'part'
name|'in'
name|'cmd'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"' '"
name|'in'
name|'part'
name|'or'
string|"'\\n'"
name|'in'
name|'part'
name|'or'
string|'\'"\''
name|'in'
name|'part'
name|'or'
string|'"\'"'
name|'in'
name|'part'
op|':'
newline|'\n'
indent|'                '
name|'part'
op|'='
string|'\'"%s"\''
op|'%'
name|'part'
op|'.'
name|'replace'
op|'('
string|'\'"\''
op|','
string|'\'\\\\"\''
op|')'
newline|'\n'
dedent|''
name|'cmd_parts'
op|'.'
name|'append'
op|'('
name|'part'
op|')'
newline|'\n'
dedent|''
name|'command_desc'
op|'='
string|"' '"
op|'.'
name|'join'
op|'('
name|'cmd_parts'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'show_stdout'
op|':'
newline|'\n'
indent|'        '
name|'stdout'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'stdout'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
newline|'\n'
dedent|''
name|'logger'
op|'.'
name|'log'
op|'('
name|'command_level'
op|','
string|'"Running command %s"'
op|'%'
name|'command_desc'
op|')'
newline|'\n'
name|'env'
op|'='
name|'os'
op|'.'
name|'environ'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'if'
name|'extra_environ'
op|':'
newline|'\n'
indent|'        '
name|'env'
op|'.'
name|'update'
op|'('
name|'extra_environ'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'proc'
op|'='
name|'subprocess'
op|'.'
name|'Popen'
op|'('
nl|'\n'
name|'cmd'
op|','
name|'stderr'
op|'='
name|'subprocess'
op|'.'
name|'STDOUT'
op|','
name|'stdin'
op|'='
name|'None'
op|','
name|'stdout'
op|'='
name|'stdout'
op|','
nl|'\n'
name|'cwd'
op|'='
name|'cwd'
op|','
name|'env'
op|'='
name|'env'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'e'
op|':'
newline|'\n'
indent|'        '
name|'logger'
op|'.'
name|'fatal'
op|'('
nl|'\n'
string|'"Error %s while executing command %s"'
op|'%'
op|'('
name|'e'
op|','
name|'command_desc'
op|')'
op|')'
newline|'\n'
name|'raise'
newline|'\n'
dedent|''
name|'all_output'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'stdout'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'stdout'
op|'='
name|'proc'
op|'.'
name|'stdout'
newline|'\n'
name|'while'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'line'
op|'='
name|'stdout'
op|'.'
name|'readline'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'line'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'line'
op|'='
name|'line'
op|'.'
name|'rstrip'
op|'('
op|')'
newline|'\n'
name|'all_output'
op|'.'
name|'append'
op|'('
name|'line'
op|'+'
string|"'\\n'"
op|')'
newline|'\n'
name|'if'
name|'filter_stdout'
op|':'
newline|'\n'
indent|'                '
name|'level'
op|'='
name|'filter_stdout'
op|'('
name|'line'
op|')'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'level'
op|','
name|'tuple'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'level'
op|','
name|'line'
op|'='
name|'level'
newline|'\n'
dedent|''
name|'logger'
op|'.'
name|'log'
op|'('
name|'level'
op|','
name|'line'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'logger'
op|'.'
name|'stdout_level_matches'
op|'('
name|'level'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'logger'
op|'.'
name|'show_progress'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'logger'
op|'.'
name|'info'
op|'('
name|'line'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'returned_stdout'
op|','
name|'returned_stderr'
op|'='
name|'proc'
op|'.'
name|'communicate'
op|'('
op|')'
newline|'\n'
name|'all_output'
op|'='
op|'['
name|'returned_stdout'
name|'or'
string|"''"
op|']'
newline|'\n'
dedent|''
name|'proc'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'if'
name|'proc'
op|'.'
name|'returncode'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'raise_on_returncode'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'all_output'
op|':'
newline|'\n'
indent|'                '
name|'logger'
op|'.'
name|'notify'
op|'('
string|"'Complete output from command %s:'"
op|'%'
name|'command_desc'
op|')'
newline|'\n'
name|'logger'
op|'.'
name|'notify'
op|'('
string|"'\\n'"
op|'.'
name|'join'
op|'('
name|'all_output'
op|')'
op|'+'
string|"'\\n----------------------------------------'"
op|')'
newline|'\n'
dedent|''
name|'raise'
name|'InstallationError'
op|'('
nl|'\n'
string|'"Command %s failed with error code %s"'
nl|'\n'
op|'%'
op|'('
name|'command_desc'
op|','
name|'proc'
op|'.'
name|'returncode'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'logger'
op|'.'
name|'warn'
op|'('
nl|'\n'
string|'"Command %s had error code %s"'
nl|'\n'
op|'%'
op|'('
name|'command_desc'
op|','
name|'proc'
op|'.'
name|'returncode'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'stdout'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"''"
op|'.'
name|'join'
op|'('
name|'all_output'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
DECL|variable|exit
indent|'    '
name|'exit'
op|'='
name|'main'
op|'('
op|')'
newline|'\n'
name|'if'
name|'exit'
op|':'
newline|'\n'
indent|'        '
name|'sys'
op|'.'
name|'exit'
op|'('
name|'exit'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
