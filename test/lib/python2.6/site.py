begin_unit
string|'"""Append module search paths for third-party packages to sys.path.\n\n****************************************************************\n* This module is automatically imported during initialization. *\n****************************************************************\n\nIn earlier versions of Python (up to 1.5a3), scripts or modules that\nneeded to use site-specific modules would place ``import site\'\'\nsomewhere near the top of their code.  Because of the automatic\nimport, this is no longer necessary (but code that does it still\nworks).\n\nThis will append site-specific paths to the module search path.  On\nUnix, it starts with sys.prefix and sys.exec_prefix (if different) and\nappends lib/python<version>/site-packages as well as lib/site-python.\nIt also supports the Debian convention of\nlib/python<version>/dist-packages.  On other platforms (mainly Mac and\nWindows), it uses just sys.prefix (and sys.exec_prefix, if different,\nbut this is unlikely).  The resulting directories, if they exist, are\nappended to sys.path, and also inspected for path configuration files.\n\nFOR DEBIAN, this sys.path is augmented with directories in /usr/local.\nLocal addons go into /usr/local/lib/python<version>/site-packages\n(resp. /usr/local/lib/site-python), Debian addons install into\n/usr/{lib,share}/python<version>/dist-packages.\n\nA path configuration file is a file whose name has the form\n<package>.pth; its contents are additional directories (one per line)\nto be added to sys.path.  Non-existing directories (or\nnon-directories) are never added to sys.path; no directory is added to\nsys.path more than once.  Blank lines and lines beginning with\n\'#\' are skipped. Lines starting with \'import\' are executed.\n\nFor example, suppose sys.prefix and sys.exec_prefix are set to\n/usr/local and there is a directory /usr/local/lib/python2.X/site-packages\nwith three subdirectories, foo, bar and spam, and two path\nconfiguration files, foo.pth and bar.pth.  Assume foo.pth contains the\nfollowing:\n\n  # foo package configuration\n  foo\n  bar\n  bletch\n\nand bar.pth contains:\n\n  # bar package configuration\n  bar\n\nThen the following directories are added to sys.path, in this order:\n\n  /usr/local/lib/python2.X/site-packages/bar\n  /usr/local/lib/python2.X/site-packages/foo\n\nNote that bletch is omitted because it doesn\'t exist; bar precedes foo\nbecause bar.pth comes alphabetically before foo.pth; and spam is\nomitted because it is not mentioned in either path configuration file.\n\nAfter these path manipulations, an attempt is made to import a module\nnamed sitecustomize, which can perform arbitrary additional\nsite-specific customizations.  If this import fails with an\nImportError exception, it is silently ignored.\n\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'__builtin__'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'set'
newline|'\n'
dedent|''
name|'except'
name|'NameError'
op|':'
newline|'\n'
indent|'    '
name|'from'
name|'sets'
name|'import'
name|'Set'
name|'as'
name|'set'
newline|'\n'
nl|'\n'
comment|'# Prefixes for site-packages; add additional prefixes like /usr/local here'
nl|'\n'
DECL|variable|PREFIXES
dedent|''
name|'PREFIXES'
op|'='
op|'['
name|'sys'
op|'.'
name|'prefix'
op|','
name|'sys'
op|'.'
name|'exec_prefix'
op|']'
newline|'\n'
comment|'# Enable per user site-packages directory'
nl|'\n'
comment|'# set it to False to disable the feature or True to force the feature'
nl|'\n'
DECL|variable|ENABLE_USER_SITE
name|'ENABLE_USER_SITE'
op|'='
name|'None'
newline|'\n'
comment|'# for distutils.commands.install'
nl|'\n'
DECL|variable|USER_SITE
name|'USER_SITE'
op|'='
name|'None'
newline|'\n'
DECL|variable|USER_BASE
name|'USER_BASE'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|variable|_is_pypy
name|'_is_pypy'
op|'='
name|'hasattr'
op|'('
name|'sys'
op|','
string|"'pypy_version_info'"
op|')'
newline|'\n'
name|'_is_jython'
op|'='
name|'sys'
op|'.'
name|'platform'
op|'['
op|':'
number|'4'
op|']'
op|'=='
string|"'java'"
newline|'\n'
name|'if'
name|'_is_jython'
op|':'
newline|'\n'
DECL|variable|ModuleType
indent|'    '
name|'ModuleType'
op|'='
name|'type'
op|'('
name|'os'
op|')'
newline|'\n'
nl|'\n'
DECL|function|makepath
dedent|''
name|'def'
name|'makepath'
op|'('
op|'*'
name|'paths'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
op|'*'
name|'paths'
op|')'
newline|'\n'
name|'if'
name|'_is_jython'
name|'and'
op|'('
name|'dir'
op|'=='
string|"'__classpath__'"
name|'or'
nl|'\n'
name|'dir'
op|'.'
name|'startswith'
op|'('
string|"'__pyclasspath__'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'dir'
op|','
name|'dir'
newline|'\n'
dedent|''
name|'dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'abspath'
op|'('
name|'dir'
op|')'
newline|'\n'
name|'return'
name|'dir'
op|','
name|'os'
op|'.'
name|'path'
op|'.'
name|'normcase'
op|'('
name|'dir'
op|')'
newline|'\n'
nl|'\n'
DECL|function|abs__file__
dedent|''
name|'def'
name|'abs__file__'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Set all module\' __file__ attribute to an absolute path"""'
newline|'\n'
name|'for'
name|'m'
name|'in'
name|'sys'
op|'.'
name|'modules'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
op|'('
op|'('
name|'_is_jython'
name|'and'
name|'not'
name|'isinstance'
op|'('
name|'m'
op|','
name|'ModuleType'
op|')'
op|')'
name|'or'
nl|'\n'
name|'hasattr'
op|'('
name|'m'
op|','
string|"'__loader__'"
op|')'
op|')'
op|':'
newline|'\n'
comment|"# only modules need the abspath in Jython. and don't mess"
nl|'\n'
comment|'# with a PEP 302-supplied __file__'
nl|'\n'
indent|'            '
name|'continue'
newline|'\n'
dedent|''
name|'f'
op|'='
name|'getattr'
op|'('
name|'m'
op|','
string|"'__file__'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'f'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
dedent|''
name|'m'
op|'.'
name|'__file__'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'abspath'
op|'('
name|'f'
op|')'
newline|'\n'
nl|'\n'
DECL|function|removeduppaths
dedent|''
dedent|''
name|'def'
name|'removeduppaths'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'""" Remove duplicate entries from sys.path along with making them\n    absolute"""'
newline|'\n'
comment|'# This ensures that the initial path provided by the interpreter contains'
nl|'\n'
comment|"# only absolute pathnames, even if we're running from the build directory."
nl|'\n'
name|'L'
op|'='
op|'['
op|']'
newline|'\n'
name|'known_paths'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'dir'
name|'in'
name|'sys'
op|'.'
name|'path'
op|':'
newline|'\n'
comment|'# Filter out duplicate paths (on case-insensitive file systems also'
nl|'\n'
comment|'# if they only differ in case); turn relative paths into absolute'
nl|'\n'
comment|'# paths.'
nl|'\n'
indent|'        '
name|'dir'
op|','
name|'dircase'
op|'='
name|'makepath'
op|'('
name|'dir'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'dircase'
name|'in'
name|'known_paths'
op|':'
newline|'\n'
indent|'            '
name|'L'
op|'.'
name|'append'
op|'('
name|'dir'
op|')'
newline|'\n'
name|'known_paths'
op|'.'
name|'add'
op|'('
name|'dircase'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'sys'
op|'.'
name|'path'
op|'['
op|':'
op|']'
op|'='
name|'L'
newline|'\n'
name|'return'
name|'known_paths'
newline|'\n'
nl|'\n'
comment|'# XXX This should not be part of site.py, since it is needed even when'
nl|'\n'
comment|'# using the -S option for Python.  See http://www.python.org/sf/586680'
nl|'\n'
DECL|function|addbuilddir
dedent|''
name|'def'
name|'addbuilddir'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Append ./build/lib.<platform> in case we\'re running in the build dir\n    (especially for Guido :-)"""'
newline|'\n'
name|'from'
name|'distutils'
op|'.'
name|'util'
name|'import'
name|'get_platform'
newline|'\n'
name|'s'
op|'='
string|'"build/lib.%s-%.3s"'
op|'%'
op|'('
name|'get_platform'
op|'('
op|')'
op|','
name|'sys'
op|'.'
name|'version'
op|')'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'sys'
op|','
string|"'gettotalrefcount'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'s'
op|'+='
string|"'-pydebug'"
newline|'\n'
dedent|''
name|'s'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'sys'
op|'.'
name|'path'
op|'['
op|'-'
number|'1'
op|']'
op|')'
op|','
name|'s'
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'path'
op|'.'
name|'append'
op|'('
name|'s'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_init_pathinfo
dedent|''
name|'def'
name|'_init_pathinfo'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Return a set containing all existing directory entries from sys.path"""'
newline|'\n'
name|'d'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'dir'
name|'in'
name|'sys'
op|'.'
name|'path'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'dir'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'dir'
op|','
name|'dircase'
op|'='
name|'makepath'
op|'('
name|'dir'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'add'
op|'('
name|'dircase'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'TypeError'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|function|addpackage
dedent|''
name|'def'
name|'addpackage'
op|'('
name|'sitedir'
op|','
name|'name'
op|','
name|'known_paths'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Add a new path to known_paths by combining sitedir and \'name\' or execute\n    sitedir if it starts with \'import\'"""'
newline|'\n'
name|'if'
name|'known_paths'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'_init_pathinfo'
op|'('
op|')'
newline|'\n'
name|'reset'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'reset'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'fullname'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'sitedir'
op|','
name|'name'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'f'
op|'='
name|'open'
op|'('
name|'fullname'
op|','
string|'"rU"'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'IOError'
op|':'
newline|'\n'
indent|'        '
name|'return'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'line'
name|'in'
name|'f'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'line'
op|'.'
name|'startswith'
op|'('
string|'"#"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'line'
op|'.'
name|'startswith'
op|'('
string|'"import"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'exec'
name|'line'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'line'
op|'='
name|'line'
op|'.'
name|'rstrip'
op|'('
op|')'
newline|'\n'
name|'dir'
op|','
name|'dircase'
op|'='
name|'makepath'
op|'('
name|'sitedir'
op|','
name|'line'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'dircase'
name|'in'
name|'known_paths'
name|'and'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'dir'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'sys'
op|'.'
name|'path'
op|'.'
name|'append'
op|'('
name|'dir'
op|')'
newline|'\n'
name|'known_paths'
op|'.'
name|'add'
op|'('
name|'dircase'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'        '
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'reset'
op|':'
newline|'\n'
indent|'        '
name|'known_paths'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'known_paths'
newline|'\n'
nl|'\n'
DECL|function|addsitedir
dedent|''
name|'def'
name|'addsitedir'
op|'('
name|'sitedir'
op|','
name|'known_paths'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Add \'sitedir\' argument to sys.path if missing and handle .pth files in\n    \'sitedir\'"""'
newline|'\n'
name|'if'
name|'known_paths'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'known_paths'
op|'='
name|'_init_pathinfo'
op|'('
op|')'
newline|'\n'
name|'reset'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'reset'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'sitedir'
op|','
name|'sitedircase'
op|'='
name|'makepath'
op|'('
name|'sitedir'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'sitedircase'
name|'in'
name|'known_paths'
op|':'
newline|'\n'
indent|'        '
name|'sys'
op|'.'
name|'path'
op|'.'
name|'append'
op|'('
name|'sitedir'
op|')'
comment|'# Add path component'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'names'
op|'='
name|'os'
op|'.'
name|'listdir'
op|'('
name|'sitedir'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'os'
op|'.'
name|'error'
op|':'
newline|'\n'
indent|'        '
name|'return'
newline|'\n'
dedent|''
name|'names'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'for'
name|'name'
name|'in'
name|'names'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'name'
op|'.'
name|'endswith'
op|'('
name|'os'
op|'.'
name|'extsep'
op|'+'
string|'"pth"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'addpackage'
op|'('
name|'sitedir'
op|','
name|'name'
op|','
name|'known_paths'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'reset'
op|':'
newline|'\n'
indent|'        '
name|'known_paths'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'known_paths'
newline|'\n'
nl|'\n'
DECL|function|addsitepackages
dedent|''
name|'def'
name|'addsitepackages'
op|'('
name|'known_paths'
op|','
name|'sys_prefix'
op|'='
name|'sys'
op|'.'
name|'prefix'
op|','
name|'exec_prefix'
op|'='
name|'sys'
op|'.'
name|'exec_prefix'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Add site-packages (and possibly site-python) to sys.path"""'
newline|'\n'
name|'prefixes'
op|'='
op|'['
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'sys_prefix'
op|','
string|'"local"'
op|')'
op|','
name|'sys_prefix'
op|']'
newline|'\n'
name|'if'
name|'exec_prefix'
op|'!='
name|'sys_prefix'
op|':'
newline|'\n'
indent|'        '
name|'prefixes'
op|'.'
name|'append'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'exec_prefix'
op|','
string|'"local"'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'prefix'
name|'in'
name|'prefixes'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'prefix'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'sys'
op|'.'
name|'platform'
name|'in'
op|'('
string|"'os2emx'"
op|','
string|"'riscos'"
op|')'
name|'or'
name|'_is_jython'
op|':'
newline|'\n'
indent|'                '
name|'sitedirs'
op|'='
op|'['
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'prefix'
op|','
string|'"Lib"'
op|','
string|'"site-packages"'
op|')'
op|']'
newline|'\n'
dedent|''
name|'elif'
name|'_is_pypy'
op|':'
newline|'\n'
indent|'                '
name|'sitedirs'
op|'='
op|'['
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'prefix'
op|','
string|"'site-packages'"
op|')'
op|']'
newline|'\n'
dedent|''
name|'elif'
name|'sys'
op|'.'
name|'platform'
op|'=='
string|"'darwin'"
name|'and'
name|'prefix'
op|'=='
name|'sys_prefix'
op|':'
newline|'\n'
nl|'\n'
indent|'                '
name|'if'
name|'prefix'
op|'.'
name|'startswith'
op|'('
string|'"/System/Library/Frameworks/"'
op|')'
op|':'
comment|"# Apple's Python"
newline|'\n'
nl|'\n'
indent|'                    '
name|'sitedirs'
op|'='
op|'['
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
string|'"/Library/Python"'
op|','
name|'sys'
op|'.'
name|'version'
op|'['
op|':'
number|'3'
op|']'
op|','
string|'"site-packages"'
op|')'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'prefix'
op|','
string|'"Extras"'
op|','
string|'"lib"'
op|','
string|'"python"'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'else'
op|':'
comment|'# any other Python distros on OSX work this way'
newline|'\n'
indent|'                    '
name|'sitedirs'
op|'='
op|'['
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'prefix'
op|','
string|'"lib"'
op|','
nl|'\n'
string|'"python"'
op|'+'
name|'sys'
op|'.'
name|'version'
op|'['
op|':'
number|'3'
op|']'
op|','
string|'"site-packages"'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'elif'
name|'os'
op|'.'
name|'sep'
op|'=='
string|"'/'"
op|':'
newline|'\n'
indent|'                '
name|'sitedirs'
op|'='
op|'['
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'prefix'
op|','
nl|'\n'
string|'"lib"'
op|','
nl|'\n'
string|'"python"'
op|'+'
name|'sys'
op|'.'
name|'version'
op|'['
op|':'
number|'3'
op|']'
op|','
nl|'\n'
string|'"site-packages"'
op|')'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'prefix'
op|','
string|'"lib"'
op|','
string|'"site-python"'
op|')'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'prefix'
op|','
string|'"python"'
op|'+'
name|'sys'
op|'.'
name|'version'
op|'['
op|':'
number|'3'
op|']'
op|','
string|'"lib-dynload"'
op|')'
op|']'
newline|'\n'
name|'lib64_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'prefix'
op|','
string|'"lib64"'
op|','
string|'"python"'
op|'+'
name|'sys'
op|'.'
name|'version'
op|'['
op|':'
number|'3'
op|']'
op|','
string|'"site-packages"'
op|')'
newline|'\n'
name|'if'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'lib64_dir'
op|')'
name|'and'
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'realpath'
op|'('
name|'lib64_dir'
op|')'
name|'not'
name|'in'
op|'['
name|'os'
op|'.'
name|'path'
op|'.'
name|'realpath'
op|'('
name|'p'
op|')'
name|'for'
name|'p'
name|'in'
name|'sitedirs'
op|']'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'sitedirs'
op|'.'
name|'append'
op|'('
name|'lib64_dir'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
comment|'# sys.getobjects only available in --with-pydebug build'
nl|'\n'
indent|'                    '
name|'sys'
op|'.'
name|'getobjects'
newline|'\n'
name|'sitedirs'
op|'.'
name|'insert'
op|'('
number|'0'
op|','
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'sitedirs'
op|'['
number|'0'
op|']'
op|','
string|"'debug'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'AttributeError'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
comment|'# Debian-specific dist-packages directories:'
nl|'\n'
dedent|''
name|'sitedirs'
op|'.'
name|'append'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'prefix'
op|','
string|'"lib"'
op|','
nl|'\n'
string|'"python"'
op|'+'
name|'sys'
op|'.'
name|'version'
op|'['
op|':'
number|'3'
op|']'
op|','
nl|'\n'
string|'"dist-packages"'
op|')'
op|')'
newline|'\n'
name|'sitedirs'
op|'.'
name|'append'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'prefix'
op|','
string|'"local/lib"'
op|','
nl|'\n'
string|'"python"'
op|'+'
name|'sys'
op|'.'
name|'version'
op|'['
op|':'
number|'3'
op|']'
op|','
nl|'\n'
string|'"dist-packages"'
op|')'
op|')'
newline|'\n'
name|'sitedirs'
op|'.'
name|'append'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'prefix'
op|','
string|'"lib"'
op|','
string|'"dist-python"'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'sitedirs'
op|'='
op|'['
name|'prefix'
op|','
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'prefix'
op|','
string|'"lib"'
op|','
string|'"site-packages"'
op|')'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'sys'
op|'.'
name|'platform'
op|'=='
string|"'darwin'"
op|':'
newline|'\n'
comment|'# for framework builds *only* we add the standard Apple'
nl|'\n'
comment|'# locations. Currently only per-user, but /Library and'
nl|'\n'
comment|'# /Network/Library could be added too'
nl|'\n'
indent|'                '
name|'if'
string|"'Python.framework'"
name|'in'
name|'prefix'
op|':'
newline|'\n'
indent|'                    '
name|'home'
op|'='
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'HOME'"
op|')'
newline|'\n'
name|'if'
name|'home'
op|':'
newline|'\n'
indent|'                        '
name|'sitedirs'
op|'.'
name|'append'
op|'('
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'home'
op|','
nl|'\n'
string|"'Library'"
op|','
nl|'\n'
string|"'Python'"
op|','
nl|'\n'
name|'sys'
op|'.'
name|'version'
op|'['
op|':'
number|'3'
op|']'
op|','
nl|'\n'
string|"'site-packages'"
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'for'
name|'sitedir'
name|'in'
name|'sitedirs'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'sitedir'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'addsitedir'
op|'('
name|'sitedir'
op|','
name|'known_paths'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|function|check_enableusersite
dedent|''
name|'def'
name|'check_enableusersite'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Check if user site directory is safe for inclusion\n\n    The function tests for the command line flag (including environment var),\n    process uid/gid equal to effective uid/gid.\n\n    None: Disabled for security reasons\n    False: Disabled by user (command line option)\n    True: Safe and enabled\n    """'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'sys'
op|','
string|"'flags'"
op|')'
name|'and'
name|'getattr'
op|'('
name|'sys'
op|'.'
name|'flags'
op|','
string|"'no_user_site'"
op|','
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'hasattr'
op|'('
name|'os'
op|','
string|'"getuid"'
op|')'
name|'and'
name|'hasattr'
op|'('
name|'os'
op|','
string|'"geteuid"'
op|')'
op|':'
newline|'\n'
comment|'# check process uid == effective uid'
nl|'\n'
indent|'        '
name|'if'
name|'os'
op|'.'
name|'geteuid'
op|'('
op|')'
op|'!='
name|'os'
op|'.'
name|'getuid'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'hasattr'
op|'('
name|'os'
op|','
string|'"getgid"'
op|')'
name|'and'
name|'hasattr'
op|'('
name|'os'
op|','
string|'"getegid"'
op|')'
op|':'
newline|'\n'
comment|'# check process gid == effective gid'
nl|'\n'
indent|'        '
name|'if'
name|'os'
op|'.'
name|'getegid'
op|'('
op|')'
op|'!='
name|'os'
op|'.'
name|'getgid'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|function|addusersitepackages
dedent|''
name|'def'
name|'addusersitepackages'
op|'('
name|'known_paths'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Add a per user site-package to sys.path\n\n    Each user has its own python directory with site-packages in the\n    home directory.\n\n    USER_BASE is the root directory for all Python versions\n\n    USER_SITE is the user specific site-packages directory\n\n    USER_SITE/.. can be used for data.\n    """'
newline|'\n'
name|'global'
name|'USER_BASE'
op|','
name|'USER_SITE'
op|','
name|'ENABLE_USER_SITE'
newline|'\n'
name|'env_base'
op|'='
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|'"PYTHONUSERBASE"'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|function|joinuser
name|'def'
name|'joinuser'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'os'
op|'.'
name|'path'
op|'.'
name|'expanduser'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
op|'*'
name|'args'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"#if sys.platform in ('os2emx', 'riscos'):"
nl|'\n'
comment|"#    # Don't know what to put here"
nl|'\n'
comment|"#    USER_BASE = ''"
nl|'\n'
comment|"#    USER_SITE = ''"
nl|'\n'
dedent|''
name|'if'
name|'os'
op|'.'
name|'name'
op|'=='
string|'"nt"'
op|':'
newline|'\n'
indent|'        '
name|'base'
op|'='
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|'"APPDATA"'
op|')'
name|'or'
string|'"~"'
newline|'\n'
name|'if'
name|'env_base'
op|':'
newline|'\n'
indent|'            '
name|'USER_BASE'
op|'='
name|'env_base'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'USER_BASE'
op|'='
name|'joinuser'
op|'('
name|'base'
op|','
string|'"Python"'
op|')'
newline|'\n'
dedent|''
name|'USER_SITE'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'USER_BASE'
op|','
nl|'\n'
string|'"Python"'
op|'+'
name|'sys'
op|'.'
name|'version'
op|'['
number|'0'
op|']'
op|'+'
name|'sys'
op|'.'
name|'version'
op|'['
number|'2'
op|']'
op|','
nl|'\n'
string|'"site-packages"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'env_base'
op|':'
newline|'\n'
indent|'            '
name|'USER_BASE'
op|'='
name|'env_base'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'USER_BASE'
op|'='
name|'joinuser'
op|'('
string|'"~"'
op|','
string|'".local"'
op|')'
newline|'\n'
dedent|''
name|'USER_SITE'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'USER_BASE'
op|','
string|'"lib"'
op|','
nl|'\n'
string|'"python"'
op|'+'
name|'sys'
op|'.'
name|'version'
op|'['
op|':'
number|'3'
op|']'
op|','
nl|'\n'
string|'"site-packages"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'ENABLE_USER_SITE'
name|'and'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'USER_SITE'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'addsitedir'
op|'('
name|'USER_SITE'
op|','
name|'known_paths'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'ENABLE_USER_SITE'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'dist_libdir'
name|'in'
op|'('
string|'"lib"'
op|','
string|'"local/lib"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'user_site'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'USER_BASE'
op|','
name|'dist_libdir'
op|','
nl|'\n'
string|'"python"'
op|'+'
name|'sys'
op|'.'
name|'version'
op|'['
op|':'
number|'3'
op|']'
op|','
nl|'\n'
string|'"dist-packages"'
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'user_site'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'addsitedir'
op|'('
name|'user_site'
op|','
name|'known_paths'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'known_paths'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|setBEGINLIBPATH
dedent|''
name|'def'
name|'setBEGINLIBPATH'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""The OS/2 EMX port has optional extension modules that do double duty\n    as DLLs (and must use the .DLL file extension) for other extensions.\n    The library search path needs to be amended so these will be found\n    during module import.  Use BEGINLIBPATH so that these are at the start\n    of the library search path.\n\n    """'
newline|'\n'
name|'dllpath'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'sys'
op|'.'
name|'prefix'
op|','
string|'"Lib"'
op|','
string|'"lib-dynload"'
op|')'
newline|'\n'
name|'libpath'
op|'='
name|'os'
op|'.'
name|'environ'
op|'['
string|"'BEGINLIBPATH'"
op|']'
op|'.'
name|'split'
op|'('
string|"';'"
op|')'
newline|'\n'
name|'if'
name|'libpath'
op|'['
op|'-'
number|'1'
op|']'
op|':'
newline|'\n'
indent|'        '
name|'libpath'
op|'.'
name|'append'
op|'('
name|'dllpath'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'libpath'
op|'['
op|'-'
number|'1'
op|']'
op|'='
name|'dllpath'
newline|'\n'
dedent|''
name|'os'
op|'.'
name|'environ'
op|'['
string|"'BEGINLIBPATH'"
op|']'
op|'='
string|"';'"
op|'.'
name|'join'
op|'('
name|'libpath'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|setquit
dedent|''
name|'def'
name|'setquit'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Define new built-ins \'quit\' and \'exit\'.\n    These are simply strings that display a hint on how to exit.\n\n    """'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'sep'
op|'=='
string|"':'"
op|':'
newline|'\n'
indent|'        '
name|'eof'
op|'='
string|"'Cmd-Q'"
newline|'\n'
dedent|''
name|'elif'
name|'os'
op|'.'
name|'sep'
op|'=='
string|"'\\\\'"
op|':'
newline|'\n'
indent|'        '
name|'eof'
op|'='
string|"'Ctrl-Z plus Return'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'eof'
op|'='
string|"'Ctrl-D (i.e. EOF)'"
newline|'\n'
nl|'\n'
DECL|class|Quitter
dedent|''
name|'class'
name|'Quitter'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'        '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'Use %s() or %s to exit'"
op|'%'
op|'('
name|'self'
op|'.'
name|'name'
op|','
name|'eof'
op|')'
newline|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'code'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
comment|'# Shells like IDLE catch the SystemExit, but listen when their'
nl|'\n'
comment|'# stdin wrapper is closed.'
nl|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'sys'
op|'.'
name|'stdin'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'raise'
name|'SystemExit'
op|'('
name|'code'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'__builtin__'
op|'.'
name|'quit'
op|'='
name|'Quitter'
op|'('
string|"'quit'"
op|')'
newline|'\n'
name|'__builtin__'
op|'.'
name|'exit'
op|'='
name|'Quitter'
op|'('
string|"'exit'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_Printer
dedent|''
name|'class'
name|'_Printer'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""interactive prompt objects for printing the license text, a list of\n    contributors and the copyright notice."""'
newline|'\n'
nl|'\n'
DECL|variable|MAXLINES
name|'MAXLINES'
op|'='
number|'23'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'data'
op|','
name|'files'
op|'='
op|'('
op|')'
op|','
name|'dirs'
op|'='
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'__name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'__data'
op|'='
name|'data'
newline|'\n'
name|'self'
op|'.'
name|'__files'
op|'='
name|'files'
newline|'\n'
name|'self'
op|'.'
name|'__dirs'
op|'='
name|'dirs'
newline|'\n'
name|'self'
op|'.'
name|'__lines'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__setup
dedent|''
name|'def'
name|'__setup'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'__lines'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'data'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'dir'
name|'in'
name|'self'
op|'.'
name|'__dirs'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'filename'
name|'in'
name|'self'
op|'.'
name|'__files'
op|':'
newline|'\n'
indent|'                '
name|'filename'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'dir'
op|','
name|'filename'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'fp'
op|'='
name|'file'
op|'('
name|'filename'
op|','
string|'"rU"'
op|')'
newline|'\n'
name|'data'
op|'='
name|'fp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'fp'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
name|'except'
name|'IOError'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'data'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'data'
op|'='
name|'self'
op|'.'
name|'__data'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'__lines'
op|'='
name|'data'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'__linecnt'
op|'='
name|'len'
op|'('
name|'self'
op|'.'
name|'__lines'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'__setup'
op|'('
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'__lines'
op|')'
op|'<='
name|'self'
op|'.'
name|'MAXLINES'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|'"\\n"'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'__lines'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|'"Type %s() to see the full %s text"'
op|'%'
op|'('
op|'('
name|'self'
op|'.'
name|'__name'
op|','
op|')'
op|'*'
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'__setup'
op|'('
op|')'
newline|'\n'
name|'prompt'
op|'='
string|"'Hit Return for more, or q (and Return) to quit: '"
newline|'\n'
name|'lineno'
op|'='
number|'0'
newline|'\n'
name|'while'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'lineno'
op|','
name|'lineno'
op|'+'
name|'self'
op|'.'
name|'MAXLINES'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'print'
name|'self'
op|'.'
name|'__lines'
op|'['
name|'i'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'IndexError'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'lineno'
op|'+='
name|'self'
op|'.'
name|'MAXLINES'
newline|'\n'
name|'key'
op|'='
name|'None'
newline|'\n'
name|'while'
name|'key'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'key'
op|'='
name|'raw_input'
op|'('
name|'prompt'
op|')'
newline|'\n'
name|'if'
name|'key'
name|'not'
name|'in'
op|'('
string|"''"
op|','
string|"'q'"
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'key'
op|'='
name|'None'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'key'
op|'=='
string|"'q'"
op|':'
newline|'\n'
indent|'                    '
name|'break'
newline|'\n'
nl|'\n'
DECL|function|setcopyright
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'setcopyright'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Set \'copyright\' and \'credits\' in __builtin__"""'
newline|'\n'
name|'__builtin__'
op|'.'
name|'copyright'
op|'='
name|'_Printer'
op|'('
string|'"copyright"'
op|','
name|'sys'
op|'.'
name|'copyright'
op|')'
newline|'\n'
name|'if'
name|'_is_jython'
op|':'
newline|'\n'
indent|'        '
name|'__builtin__'
op|'.'
name|'credits'
op|'='
name|'_Printer'
op|'('
nl|'\n'
string|'"credits"'
op|','
nl|'\n'
string|'"Jython is maintained by the Jython developers (www.jython.org)."'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'_is_pypy'
op|':'
newline|'\n'
indent|'        '
name|'__builtin__'
op|'.'
name|'credits'
op|'='
name|'_Printer'
op|'('
nl|'\n'
string|'"credits"'
op|','
nl|'\n'
string|'"PyPy is maintained by the PyPy developers: http://codespeak.net/pypy"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'__builtin__'
op|'.'
name|'credits'
op|'='
name|'_Printer'
op|'('
string|'"credits"'
op|','
string|'"""\\\n    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands\n    for supporting Python development.  See www.python.org for more information."""'
op|')'
newline|'\n'
dedent|''
name|'here'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'os'
op|'.'
name|'__file__'
op|')'
newline|'\n'
name|'__builtin__'
op|'.'
name|'license'
op|'='
name|'_Printer'
op|'('
nl|'\n'
string|'"license"'
op|','
string|'"See http://www.python.org/%.3s/license.html"'
op|'%'
name|'sys'
op|'.'
name|'version'
op|','
nl|'\n'
op|'['
string|'"LICENSE.txt"'
op|','
string|'"LICENSE"'
op|']'
op|','
nl|'\n'
op|'['
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'here'
op|','
name|'os'
op|'.'
name|'pardir'
op|')'
op|','
name|'here'
op|','
name|'os'
op|'.'
name|'curdir'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_Helper
dedent|''
name|'class'
name|'_Helper'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Define the built-in \'help\'.\n    This is a wrapper around pydoc.help (with a twist).\n\n    """'
newline|'\n'
nl|'\n'
DECL|member|__repr__
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|'"Type help() for interactive help, "'
string|'"or help(object) for help about object."'
newline|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwds'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'import'
name|'pydoc'
newline|'\n'
name|'return'
name|'pydoc'
op|'.'
name|'help'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwds'
op|')'
newline|'\n'
nl|'\n'
DECL|function|sethelper
dedent|''
dedent|''
name|'def'
name|'sethelper'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'__builtin__'
op|'.'
name|'help'
op|'='
name|'_Helper'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|aliasmbcs
dedent|''
name|'def'
name|'aliasmbcs'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""On Windows, some default encodings are not provided by Python,\n    while they are always available as "mbcs" in each locale. Make\n    them usable by aliasing to "mbcs" in such a case."""'
newline|'\n'
name|'if'
name|'sys'
op|'.'
name|'platform'
op|'=='
string|"'win32'"
op|':'
newline|'\n'
indent|'        '
name|'import'
name|'locale'
op|','
name|'codecs'
newline|'\n'
name|'enc'
op|'='
name|'locale'
op|'.'
name|'getdefaultlocale'
op|'('
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'if'
name|'enc'
op|'.'
name|'startswith'
op|'('
string|"'cp'"
op|')'
op|':'
comment|'# "cp***" ?'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'codecs'
op|'.'
name|'lookup'
op|'('
name|'enc'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'LookupError'
op|':'
newline|'\n'
indent|'                '
name|'import'
name|'encodings'
newline|'\n'
name|'encodings'
op|'.'
name|'_cache'
op|'['
name|'enc'
op|']'
op|'='
name|'encodings'
op|'.'
name|'_unknown'
newline|'\n'
name|'encodings'
op|'.'
name|'aliases'
op|'.'
name|'aliases'
op|'['
name|'enc'
op|']'
op|'='
string|"'mbcs'"
newline|'\n'
nl|'\n'
DECL|function|setencoding
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'setencoding'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Set the string encoding used by the Unicode implementation.  The\n    default is \'ascii\', but if you\'re willing to experiment, you can\n    change this."""'
newline|'\n'
name|'encoding'
op|'='
string|'"ascii"'
comment|'# Default value set by _PyUnicode_Init()'
newline|'\n'
name|'if'
number|'0'
op|':'
newline|'\n'
comment|'# Enable to support locale aware default string encodings.'
nl|'\n'
indent|'        '
name|'import'
name|'locale'
newline|'\n'
name|'loc'
op|'='
name|'locale'
op|'.'
name|'getdefaultlocale'
op|'('
op|')'
newline|'\n'
name|'if'
name|'loc'
op|'['
number|'1'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'encoding'
op|'='
name|'loc'
op|'['
number|'1'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'if'
number|'0'
op|':'
newline|'\n'
comment|'# Enable to switch off string to Unicode coercion and implicit'
nl|'\n'
comment|'# Unicode to string conversion.'
nl|'\n'
indent|'        '
name|'encoding'
op|'='
string|'"undefined"'
newline|'\n'
dedent|''
name|'if'
name|'encoding'
op|'!='
string|'"ascii"'
op|':'
newline|'\n'
comment|'# On Non-Unicode builds this will raise an AttributeError...'
nl|'\n'
indent|'        '
name|'sys'
op|'.'
name|'setdefaultencoding'
op|'('
name|'encoding'
op|')'
comment|'# Needs Python Unicode build !'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|execsitecustomize
dedent|''
dedent|''
name|'def'
name|'execsitecustomize'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Run custom site specific code, if available."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'import'
name|'sitecustomize'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|virtual_install_main_packages
dedent|''
dedent|''
name|'def'
name|'virtual_install_main_packages'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'__file__'
op|')'
op|','
string|"'orig-prefix.txt'"
op|')'
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'real_prefix'
op|'='
name|'f'
op|'.'
name|'read'
op|'('
op|')'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'pos'
op|'='
number|'2'
newline|'\n'
name|'if'
name|'sys'
op|'.'
name|'path'
op|'['
number|'0'
op|']'
op|'=='
string|"''"
op|':'
newline|'\n'
indent|'        '
name|'pos'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'if'
name|'sys'
op|'.'
name|'platform'
op|'=='
string|"'win32'"
op|':'
newline|'\n'
indent|'        '
name|'paths'
op|'='
op|'['
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'sys'
op|'.'
name|'real_prefix'
op|','
string|"'Lib'"
op|')'
op|','
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'sys'
op|'.'
name|'real_prefix'
op|','
string|"'DLLs'"
op|')'
op|']'
newline|'\n'
dedent|''
name|'elif'
name|'_is_jython'
op|':'
newline|'\n'
indent|'        '
name|'paths'
op|'='
op|'['
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'sys'
op|'.'
name|'real_prefix'
op|','
string|"'Lib'"
op|')'
op|']'
newline|'\n'
dedent|''
name|'elif'
name|'_is_pypy'
op|':'
newline|'\n'
indent|'        '
name|'cpyver'
op|'='
string|"'%d.%d.%d'"
op|'%'
name|'sys'
op|'.'
name|'version_info'
op|'['
op|':'
number|'3'
op|']'
newline|'\n'
name|'paths'
op|'='
op|'['
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'sys'
op|'.'
name|'real_prefix'
op|','
string|"'lib_pypy'"
op|')'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'sys'
op|'.'
name|'real_prefix'
op|','
string|"'lib-python'"
op|','
string|"'modified-%s'"
op|'%'
name|'cpyver'
op|')'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'sys'
op|'.'
name|'real_prefix'
op|','
string|"'lib-python'"
op|','
name|'cpyver'
op|')'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'paths'
op|'='
op|'['
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'sys'
op|'.'
name|'real_prefix'
op|','
string|"'lib'"
op|','
string|"'python'"
op|'+'
name|'sys'
op|'.'
name|'version'
op|'['
op|':'
number|'3'
op|']'
op|')'
op|']'
newline|'\n'
name|'lib64_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'sys'
op|'.'
name|'real_prefix'
op|','
string|"'lib64'"
op|','
string|"'python'"
op|'+'
name|'sys'
op|'.'
name|'version'
op|'['
op|':'
number|'3'
op|']'
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'lib64_path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'paths'
op|'.'
name|'append'
op|'('
name|'lib64_path'
op|')'
newline|'\n'
comment|'# This is hardcoded in the Python executable, but relative to sys.prefix:'
nl|'\n'
dedent|''
name|'plat_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'sys'
op|'.'
name|'real_prefix'
op|','
string|"'lib'"
op|','
string|"'python'"
op|'+'
name|'sys'
op|'.'
name|'version'
op|'['
op|':'
number|'3'
op|']'
op|','
nl|'\n'
string|"'plat-%s'"
op|'%'
name|'sys'
op|'.'
name|'platform'
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'plat_path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'paths'
op|'.'
name|'append'
op|'('
name|'plat_path'
op|')'
newline|'\n'
comment|'# This is hardcoded in the Python executable, but'
nl|'\n'
comment|'# relative to sys.prefix, so we have to fix up:'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'path'
name|'in'
name|'list'
op|'('
name|'paths'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tk_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'path'
op|','
string|"'lib-tk'"
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'tk_dir'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'paths'
op|'.'
name|'append'
op|'('
name|'tk_dir'
op|')'
newline|'\n'
nl|'\n'
comment|"# These are hardcoded in the Apple's Python executable,"
nl|'\n'
comment|'# but relative to sys.prefix, so we have to fix them up:'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'sys'
op|'.'
name|'platform'
op|'=='
string|"'darwin'"
op|':'
newline|'\n'
indent|'        '
name|'hardcoded_paths'
op|'='
op|'['
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'sys'
op|'.'
name|'real_prefix'
op|','
string|"'lib'"
op|','
string|"'python'"
op|'+'
name|'sys'
op|'.'
name|'version'
op|'['
op|':'
number|'3'
op|']'
op|','
name|'module'
op|')'
nl|'\n'
name|'for'
name|'module'
name|'in'
op|'('
string|"'plat-darwin'"
op|','
string|"'plat-mac'"
op|','
string|"'plat-mac/lib-scriptpackages'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'path'
name|'in'
name|'hardcoded_paths'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'paths'
op|'.'
name|'append'
op|'('
name|'path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'sys'
op|'.'
name|'path'
op|'.'
name|'extend'
op|'('
name|'paths'
op|')'
newline|'\n'
nl|'\n'
DECL|function|force_global_eggs_after_local_site_packages
dedent|''
name|'def'
name|'force_global_eggs_after_local_site_packages'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Force easy_installed eggs in the global environment to get placed\n    in sys.path after all packages inside the virtualenv.  This\n    maintains the "least surprise" result that packages in the\n    virtualenv always mask global packages, never the other way\n    around.\n    \n    """'
newline|'\n'
name|'egginsert'
op|'='
name|'getattr'
op|'('
name|'sys'
op|','
string|"'__egginsert'"
op|','
number|'0'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'path'
name|'in'
name|'enumerate'
op|'('
name|'sys'
op|'.'
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'i'
op|'>'
name|'egginsert'
name|'and'
name|'path'
op|'.'
name|'startswith'
op|'('
name|'sys'
op|'.'
name|'prefix'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'egginsert'
op|'='
name|'i'
newline|'\n'
dedent|''
dedent|''
name|'sys'
op|'.'
name|'__egginsert'
op|'='
name|'egginsert'
op|'+'
number|'1'
newline|'\n'
nl|'\n'
DECL|function|virtual_addsitepackages
dedent|''
name|'def'
name|'virtual_addsitepackages'
op|'('
name|'known_paths'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'force_global_eggs_after_local_site_packages'
op|'('
op|')'
newline|'\n'
name|'return'
name|'addsitepackages'
op|'('
name|'known_paths'
op|','
name|'sys_prefix'
op|'='
name|'sys'
op|'.'
name|'real_prefix'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fixclasspath
dedent|''
name|'def'
name|'fixclasspath'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Adjust the special classpath sys.path entries for Jython. These\n    entries should follow the base virtualenv lib directories.\n    """'
newline|'\n'
name|'paths'
op|'='
op|'['
op|']'
newline|'\n'
name|'classpaths'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'path'
name|'in'
name|'sys'
op|'.'
name|'path'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'path'
op|'=='
string|"'__classpath__'"
name|'or'
name|'path'
op|'.'
name|'startswith'
op|'('
string|"'__pyclasspath__'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'classpaths'
op|'.'
name|'append'
op|'('
name|'path'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'paths'
op|'.'
name|'append'
op|'('
name|'path'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'sys'
op|'.'
name|'path'
op|'='
name|'paths'
newline|'\n'
name|'sys'
op|'.'
name|'path'
op|'.'
name|'extend'
op|'('
name|'classpaths'
op|')'
newline|'\n'
nl|'\n'
DECL|function|execusercustomize
dedent|''
name|'def'
name|'execusercustomize'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Run custom user specific code, if available."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'import'
name|'usercustomize'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|main
dedent|''
dedent|''
name|'def'
name|'main'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'global'
name|'ENABLE_USER_SITE'
newline|'\n'
name|'virtual_install_main_packages'
op|'('
op|')'
newline|'\n'
name|'abs__file__'
op|'('
op|')'
newline|'\n'
name|'paths_in_sys'
op|'='
name|'removeduppaths'
op|'('
op|')'
newline|'\n'
name|'if'
op|'('
name|'os'
op|'.'
name|'name'
op|'=='
string|'"posix"'
name|'and'
name|'sys'
op|'.'
name|'path'
name|'and'
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'sys'
op|'.'
name|'path'
op|'['
op|'-'
number|'1'
op|']'
op|')'
op|'=='
string|'"Modules"'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'addbuilddir'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'_is_jython'
op|':'
newline|'\n'
indent|'        '
name|'fixclasspath'
op|'('
op|')'
newline|'\n'
dedent|''
name|'GLOBAL_SITE_PACKAGES'
op|'='
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'__file__'
op|')'
op|','
string|"'no-global-site-packages.txt'"
op|')'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'GLOBAL_SITE_PACKAGES'
op|':'
newline|'\n'
indent|'        '
name|'ENABLE_USER_SITE'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'if'
name|'ENABLE_USER_SITE'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'ENABLE_USER_SITE'
op|'='
name|'check_enableusersite'
op|'('
op|')'
newline|'\n'
dedent|''
name|'paths_in_sys'
op|'='
name|'addsitepackages'
op|'('
name|'paths_in_sys'
op|')'
newline|'\n'
name|'paths_in_sys'
op|'='
name|'addusersitepackages'
op|'('
name|'paths_in_sys'
op|')'
newline|'\n'
name|'if'
name|'GLOBAL_SITE_PACKAGES'
op|':'
newline|'\n'
indent|'        '
name|'paths_in_sys'
op|'='
name|'virtual_addsitepackages'
op|'('
name|'paths_in_sys'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'sys'
op|'.'
name|'platform'
op|'=='
string|"'os2emx'"
op|':'
newline|'\n'
indent|'        '
name|'setBEGINLIBPATH'
op|'('
op|')'
newline|'\n'
dedent|''
name|'setquit'
op|'('
op|')'
newline|'\n'
name|'setcopyright'
op|'('
op|')'
newline|'\n'
name|'sethelper'
op|'('
op|')'
newline|'\n'
name|'aliasmbcs'
op|'('
op|')'
newline|'\n'
name|'setencoding'
op|'('
op|')'
newline|'\n'
name|'execsitecustomize'
op|'('
op|')'
newline|'\n'
name|'if'
name|'ENABLE_USER_SITE'
op|':'
newline|'\n'
indent|'        '
name|'execusercustomize'
op|'('
op|')'
newline|'\n'
comment|'# Remove sys.setdefaultencoding() so that users cannot change the'
nl|'\n'
comment|'# encoding after initialization.  The test for presence is needed when'
nl|'\n'
comment|'# this module is run as a script, because this code is executed twice.'
nl|'\n'
dedent|''
name|'if'
name|'hasattr'
op|'('
name|'sys'
op|','
string|'"setdefaultencoding"'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'del'
name|'sys'
op|'.'
name|'setdefaultencoding'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'main'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|_script
name|'def'
name|'_script'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'help'
op|'='
string|'"""\\\n    %s [--user-base] [--user-site]\n\n    Without arguments print some useful information\n    With arguments print the value of USER_BASE and/or USER_SITE separated\n    by \'%s\'.\n\n    Exit codes with --user-base or --user-site:\n      0 - user site directory is enabled\n      1 - user site directory is disabled by user\n      2 - uses site directory is disabled by super user\n          or for security reasons\n     >2 - unknown error\n    """'
newline|'\n'
name|'args'
op|'='
name|'sys'
op|'.'
name|'argv'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'args'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|'"sys.path = ["'
newline|'\n'
name|'for'
name|'dir'
name|'in'
name|'sys'
op|'.'
name|'path'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|'"    %r,"'
op|'%'
op|'('
name|'dir'
op|','
op|')'
newline|'\n'
dedent|''
name|'print'
string|'"]"'
newline|'\n'
DECL|function|exists
name|'def'
name|'exists'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|'"exists"'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|'"doesn\'t exist"'
newline|'\n'
dedent|''
dedent|''
name|'print'
string|'"USER_BASE: %r (%s)"'
op|'%'
op|'('
name|'USER_BASE'
op|','
name|'exists'
op|'('
name|'USER_BASE'
op|')'
op|')'
newline|'\n'
name|'print'
string|'"USER_SITE: %r (%s)"'
op|'%'
op|'('
name|'USER_SITE'
op|','
name|'exists'
op|'('
name|'USER_BASE'
op|')'
op|')'
newline|'\n'
name|'print'
string|'"ENABLE_USER_SITE: %r"'
op|'%'
name|'ENABLE_USER_SITE'
newline|'\n'
name|'sys'
op|'.'
name|'exit'
op|'('
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'buffer'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
string|"'--user-base'"
name|'in'
name|'args'
op|':'
newline|'\n'
indent|'        '
name|'buffer'
op|'.'
name|'append'
op|'('
name|'USER_BASE'
op|')'
newline|'\n'
dedent|''
name|'if'
string|"'--user-site'"
name|'in'
name|'args'
op|':'
newline|'\n'
indent|'        '
name|'buffer'
op|'.'
name|'append'
op|'('
name|'USER_SITE'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'buffer'
op|':'
newline|'\n'
indent|'        '
name|'print'
name|'os'
op|'.'
name|'pathsep'
op|'.'
name|'join'
op|'('
name|'buffer'
op|')'
newline|'\n'
name|'if'
name|'ENABLE_USER_SITE'
op|':'
newline|'\n'
indent|'            '
name|'sys'
op|'.'
name|'exit'
op|'('
number|'0'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'ENABLE_USER_SITE'
name|'is'
name|'False'
op|':'
newline|'\n'
indent|'            '
name|'sys'
op|'.'
name|'exit'
op|'('
number|'1'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'ENABLE_USER_SITE'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'sys'
op|'.'
name|'exit'
op|'('
number|'2'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'sys'
op|'.'
name|'exit'
op|'('
number|'3'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'import'
name|'textwrap'
newline|'\n'
name|'print'
name|'textwrap'
op|'.'
name|'dedent'
op|'('
name|'help'
op|'%'
op|'('
name|'sys'
op|'.'
name|'argv'
op|'['
number|'0'
op|']'
op|','
name|'os'
op|'.'
name|'pathsep'
op|')'
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'exit'
op|'('
number|'10'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'_script'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
