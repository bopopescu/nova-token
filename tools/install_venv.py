begin_unit
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Copyright 2010 OpenStack, LLC'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""\nInstallation script for Nova\'s development virtualenv\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'subprocess'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|ROOT
name|'ROOT'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'realpath'
op|'('
name|'__file__'
op|')'
op|')'
op|')'
newline|'\n'
DECL|variable|VENV
name|'VENV'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'ROOT'
op|','
string|"'.nova-venv'"
op|')'
newline|'\n'
DECL|variable|PIP_REQUIRES
name|'PIP_REQUIRES'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'ROOT'
op|','
string|"'tools'"
op|','
string|"'pip-requires'"
op|')'
newline|'\n'
DECL|variable|TWISTED_NOVA
name|'TWISTED_NOVA'
op|'='
string|"'http://nova.openstack.org/Twisted-10.0.0Nova.tar.gz'"
newline|'\n'
nl|'\n'
DECL|function|die
name|'def'
name|'die'
op|'('
name|'message'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'  '
name|'print'
op|'>>'
name|'sys'
op|'.'
name|'stderr'
op|','
name|'message'
op|'%'
name|'args'
newline|'\n'
name|'sys'
op|'.'
name|'exit'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|run_command
dedent|''
name|'def'
name|'run_command'
op|'('
name|'cmd'
op|','
name|'redirect_output'
op|'='
name|'True'
op|','
name|'error_ok'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'  '
string|'"""Runs a command in an out-of-process shell, returning the\n  output of that command\n  """'
newline|'\n'
name|'if'
name|'redirect_output'
op|':'
newline|'\n'
indent|'    '
name|'stdout'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'    '
name|'stdout'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'proc'
op|'='
name|'subprocess'
op|'.'
name|'Popen'
op|'('
name|'cmd'
op|','
name|'stdout'
op|'='
name|'stdout'
op|')'
newline|'\n'
name|'output'
op|'='
name|'proc'
op|'.'
name|'communicate'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'error_ok'
name|'and'
name|'proc'
op|'.'
name|'returncode'
op|'!='
number|'0'
op|':'
newline|'\n'
indent|'    '
name|'die'
op|'('
string|'\'Command "%s" failed.\\n%s\''
op|','
string|"' '"
op|'.'
name|'join'
op|'('
name|'cmd'
op|')'
op|','
name|'output'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'output'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|HAS_EASY_INSTALL
dedent|''
name|'HAS_EASY_INSTALL'
op|'='
name|'bool'
op|'('
name|'run_command'
op|'('
op|'['
string|"'which'"
op|','
string|"'easy_install'"
op|']'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
DECL|variable|HAS_VIRTUALENV
name|'HAS_VIRTUALENV'
op|'='
name|'bool'
op|'('
name|'run_command'
op|'('
op|'['
string|"'which'"
op|','
string|"'virtualenv'"
op|']'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|check_dependencies
name|'def'
name|'check_dependencies'
op|'('
op|')'
op|':'
newline|'\n'
indent|'  '
string|'"""Make sure virtualenv is in the path."""'
newline|'\n'
nl|'\n'
name|'print'
string|"'Checking for virtualenv...'"
op|','
newline|'\n'
name|'if'
name|'not'
name|'HAS_VIRTUALENV'
op|':'
newline|'\n'
indent|'    '
name|'print'
string|"'not found.'"
newline|'\n'
comment|'# Try installing it via easy_install...'
nl|'\n'
name|'if'
name|'HAS_EASY_INSTALL'
op|':'
newline|'\n'
indent|'      '
name|'print'
string|"'Installing virtualenv via easy_install...'"
op|','
newline|'\n'
name|'if'
name|'not'
name|'run_command'
op|'('
op|'['
string|"'which'"
op|','
string|"'easy_install'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'die'
op|'('
string|"'ERROR: virtualenv not found.\\n\\nNova development requires virtualenv,'"
nl|'\n'
string|"' please install it using your favorite package management tool'"
op|')'
newline|'\n'
dedent|''
name|'print'
string|"'done.'"
newline|'\n'
dedent|''
dedent|''
name|'print'
string|"'done.'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|create_virtualenv
dedent|''
name|'def'
name|'create_virtualenv'
op|'('
name|'venv'
op|'='
name|'VENV'
op|')'
op|':'
newline|'\n'
indent|'  '
string|'"""Creates the virtual environment and installs PIP only into the\n  virtual environment\n  """'
newline|'\n'
name|'print'
string|"'Creating venv...'"
op|','
newline|'\n'
name|'run_command'
op|'('
op|'['
string|"'virtualenv'"
op|','
string|"'-q'"
op|','
string|"'--no-site-packages'"
op|','
name|'VENV'
op|']'
op|')'
newline|'\n'
name|'print'
string|"'done.'"
newline|'\n'
name|'print'
string|"'Installing pip in virtualenv...'"
op|','
newline|'\n'
name|'if'
name|'not'
name|'run_command'
op|'('
op|'['
string|"'tools/with_venv.sh'"
op|','
string|"'easy_install'"
op|','
string|"'pip'"
op|']'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'die'
op|'('
string|'"Failed to install pip."'
op|')'
newline|'\n'
dedent|''
name|'print'
string|"'done.'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|install_dependencies
dedent|''
name|'def'
name|'install_dependencies'
op|'('
name|'venv'
op|'='
name|'VENV'
op|')'
op|':'
newline|'\n'
indent|'  '
name|'print'
string|"'Installing dependencies with pip (this can take a while)...'"
newline|'\n'
name|'run_command'
op|'('
op|'['
string|"'tools/with_venv.sh'"
op|','
string|"'pip'"
op|','
string|"'install'"
op|','
string|"'-E'"
op|','
name|'venv'
op|','
string|"'-r'"
op|','
name|'PIP_REQUIRES'
op|']'
op|','
nl|'\n'
name|'redirect_output'
op|'='
name|'False'
op|')'
newline|'\n'
name|'run_command'
op|'('
op|'['
string|"'tools/with_venv.sh'"
op|','
string|"'pip'"
op|','
string|"'install'"
op|','
string|"'-E'"
op|','
name|'venv'
op|','
name|'TWISTED_NOVA'
op|']'
op|','
nl|'\n'
name|'redirect_output'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|print_help
dedent|''
name|'def'
name|'print_help'
op|'('
op|')'
op|':'
newline|'\n'
indent|'  '
name|'help'
op|'='
string|'"""\n Nova development environment setup is complete.\n\n Nova development uses virtualenv to track and manage Python dependencies\n while in development and testing.\n\n To activate the Nova virtualenv for the extent of your current shell session\n you can run:\n\n $ source .nova-venv/bin/activate \n\n Or, if you prefer, you can run commands in the virtualenv on a case by case\n basis by running:\n\n $ tools/with_venv.sh <your command>\n\n Also, make test will automatically use the virtualenv.\n  """'
newline|'\n'
name|'print'
name|'help'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|main
dedent|''
name|'def'
name|'main'
op|'('
name|'argv'
op|')'
op|':'
newline|'\n'
indent|'  '
name|'check_dependencies'
op|'('
op|')'
newline|'\n'
name|'create_virtualenv'
op|'('
op|')'
newline|'\n'
name|'install_dependencies'
op|'('
op|')'
newline|'\n'
name|'print_help'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'  '
name|'main'
op|'('
name|'sys'
op|'.'
name|'argv'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
