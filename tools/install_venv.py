begin_unit
nl|'\n'
comment|'# vim: tabstop=4 shiftwidth=4 softtabstop=4'
nl|'\n'
nl|'\n'
comment|'# Copyright 2010 United States Government as represented by the'
nl|'\n'
comment|'# Administrator of the National Aeronautics and Space Administration.'
nl|'\n'
comment|'# All Rights Reserved.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Copyright 2010 OpenStack, LLC'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""Installation script for Nova\'s development virtualenv."""'
newline|'\n'
nl|'\n'
name|'import'
name|'optparse'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'subprocess'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|ROOT
name|'ROOT'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'realpath'
op|'('
name|'__file__'
op|')'
op|')'
op|')'
newline|'\n'
DECL|variable|VENV
name|'VENV'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'ROOT'
op|','
string|"'.venv'"
op|')'
newline|'\n'
DECL|variable|PIP_REQUIRES
name|'PIP_REQUIRES'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'ROOT'
op|','
string|"'tools'"
op|','
string|"'pip-requires'"
op|')'
newline|'\n'
DECL|variable|TEST_REQUIRES
name|'TEST_REQUIRES'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'ROOT'
op|','
string|"'tools'"
op|','
string|"'test-requires'"
op|')'
newline|'\n'
DECL|variable|PY_VERSION
name|'PY_VERSION'
op|'='
string|'"python%s.%s"'
op|'%'
op|'('
name|'sys'
op|'.'
name|'version_info'
op|'['
number|'0'
op|']'
op|','
name|'sys'
op|'.'
name|'version_info'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|die
name|'def'
name|'die'
op|'('
name|'message'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'print'
op|'>>'
name|'sys'
op|'.'
name|'stderr'
op|','
name|'message'
op|'%'
name|'args'
newline|'\n'
name|'sys'
op|'.'
name|'exit'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|check_python_version
dedent|''
name|'def'
name|'check_python_version'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'sys'
op|'.'
name|'version_info'
op|'<'
op|'('
number|'2'
op|','
number|'6'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'die'
op|'('
string|'"Need Python Version >= 2.6"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|run_command_with_code
dedent|''
dedent|''
name|'def'
name|'run_command_with_code'
op|'('
name|'cmd'
op|','
name|'redirect_output'
op|'='
name|'True'
op|','
name|'check_exit_code'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Runs a command in an out-of-process shell.\n\n    Returns the output of that command.  Working directory is ROOT.\n    """'
newline|'\n'
name|'if'
name|'redirect_output'
op|':'
newline|'\n'
indent|'        '
name|'stdout'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'stdout'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'proc'
op|'='
name|'subprocess'
op|'.'
name|'Popen'
op|'('
name|'cmd'
op|','
name|'cwd'
op|'='
name|'ROOT'
op|','
name|'stdout'
op|'='
name|'stdout'
op|')'
newline|'\n'
name|'output'
op|'='
name|'proc'
op|'.'
name|'communicate'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'check_exit_code'
name|'and'
name|'proc'
op|'.'
name|'returncode'
op|'!='
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'die'
op|'('
string|'\'Command "%s" failed.\\n%s\''
op|','
string|"' '"
op|'.'
name|'join'
op|'('
name|'cmd'
op|')'
op|','
name|'output'
op|')'
newline|'\n'
dedent|''
name|'return'
op|'('
name|'output'
op|','
name|'proc'
op|'.'
name|'returncode'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|run_command
dedent|''
name|'def'
name|'run_command'
op|'('
name|'cmd'
op|','
name|'redirect_output'
op|'='
name|'True'
op|','
name|'check_exit_code'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'run_command_with_code'
op|'('
name|'cmd'
op|','
name|'redirect_output'
op|','
name|'check_exit_code'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Distro
dedent|''
name|'class'
name|'Distro'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|check_cmd
indent|'    '
name|'def'
name|'check_cmd'
op|'('
name|'self'
op|','
name|'cmd'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'bool'
op|'('
name|'run_command'
op|'('
op|'['
string|"'which'"
op|','
name|'cmd'
op|']'
op|','
name|'check_exit_code'
op|'='
name|'False'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|install_virtualenv
dedent|''
name|'def'
name|'install_virtualenv'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'check_cmd'
op|'('
string|"'virtualenv'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'check_cmd'
op|'('
string|"'easy_install'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'Installing virtualenv via easy_install...'"
op|','
newline|'\n'
name|'if'
name|'run_command'
op|'('
op|'['
string|"'easy_install'"
op|','
string|"'virtualenv'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|"'Succeeded'"
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|"'Failed'"
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'die'
op|'('
string|"'ERROR: virtualenv not found.\\n\\nNova development'"
nl|'\n'
string|"' requires virtualenv, please install it using your'"
nl|'\n'
string|"' favorite package management tool'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|post_process
dedent|''
name|'def'
name|'post_process'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Any distribution-specific post-processing gets done here.\n\n        In particular, this is useful for applying patches to code inside\n        the venv.\n        """'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Fedora
dedent|''
dedent|''
name|'class'
name|'Fedora'
op|'('
name|'Distro'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""This covers all Fedora-based distributions.\n\n    Includes: Fedora, RHEL, CentOS, Scientific Linux"""'
newline|'\n'
nl|'\n'
DECL|member|check_pkg
name|'def'
name|'check_pkg'
op|'('
name|'self'
op|','
name|'pkg'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'run_command_with_code'
op|'('
op|'['
string|"'rpm'"
op|','
string|"'-q'"
op|','
name|'pkg'
op|']'
op|','
nl|'\n'
name|'check_exit_code'
op|'='
name|'False'
op|')'
op|'['
number|'1'
op|']'
op|'=='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|yum_install
dedent|''
name|'def'
name|'yum_install'
op|'('
name|'self'
op|','
name|'pkg'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|'"Attempting to install \'%s\' via yum"'
op|'%'
name|'pkg'
newline|'\n'
name|'run_command'
op|'('
op|'['
string|"'sudo'"
op|','
string|"'yum'"
op|','
string|"'install'"
op|','
string|"'-y'"
op|','
name|'pkg'
op|']'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|apply_patch
dedent|''
name|'def'
name|'apply_patch'
op|'('
name|'self'
op|','
name|'originalfile'
op|','
name|'patchfile'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'run_command'
op|'('
op|'['
string|"'patch'"
op|','
name|'originalfile'
op|','
name|'patchfile'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|install_virtualenv
dedent|''
name|'def'
name|'install_virtualenv'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'check_cmd'
op|'('
string|"'virtualenv'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'check_pkg'
op|'('
string|"'python-virtualenv'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'yum_install'
op|'('
string|"'python-virtualenv'"
op|','
name|'check_exit_code'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'super'
op|'('
name|'Fedora'
op|','
name|'self'
op|')'
op|'.'
name|'install_virtualenv'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|post_process
dedent|''
name|'def'
name|'post_process'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Workaround for a bug in eventlet.\n\n        This currently affects RHEL6.1, but the fix can safely be\n        applied to all RHEL and Fedora distributions.\n\n        This can be removed when the fix is applied upstream.\n\n        Nova: https://bugs.launchpad.net/nova/+bug/884915\n        Upstream: https://bitbucket.org/which_linden/eventlet/issue/89\n        """'
newline|'\n'
nl|'\n'
comment|'# Install "patch" program if it\'s not there'
nl|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'check_pkg'
op|'('
string|"'patch'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'yum_install'
op|'('
string|"'patch'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Apply the eventlet patch'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'apply_patch'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'VENV'
op|','
string|"'lib'"
op|','
name|'PY_VERSION'
op|','
string|"'site-packages'"
op|','
nl|'\n'
string|"'eventlet/green/subprocess.py'"
op|')'
op|','
nl|'\n'
string|"'contrib/redhat-eventlet.patch'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_distro
dedent|''
dedent|''
name|'def'
name|'get_distro'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
string|"'/etc/fedora-release'"
op|')'
name|'or'
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
string|"'/etc/redhat-release'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'Fedora'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'Distro'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|check_dependencies
dedent|''
dedent|''
name|'def'
name|'check_dependencies'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'get_distro'
op|'('
op|')'
op|'.'
name|'install_virtualenv'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|create_virtualenv
dedent|''
name|'def'
name|'create_virtualenv'
op|'('
name|'venv'
op|'='
name|'VENV'
op|','
name|'no_site_packages'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Creates the virtual environment and installs PIP.\n\n    Creates the virtual environment and installs PIP only into the\n    virtual environment.\n    """'
newline|'\n'
name|'print'
string|"'Creating venv...'"
op|','
newline|'\n'
name|'if'
name|'no_site_packages'
op|':'
newline|'\n'
indent|'        '
name|'run_command'
op|'('
op|'['
string|"'virtualenv'"
op|','
string|"'-q'"
op|','
string|"'--no-site-packages'"
op|','
name|'VENV'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'run_command'
op|'('
op|'['
string|"'virtualenv'"
op|','
string|"'-q'"
op|','
name|'VENV'
op|']'
op|')'
newline|'\n'
dedent|''
name|'print'
string|"'done.'"
newline|'\n'
name|'print'
string|"'Installing pip in virtualenv...'"
op|','
newline|'\n'
name|'if'
name|'not'
name|'run_command'
op|'('
op|'['
string|"'tools/with_venv.sh'"
op|','
string|"'easy_install'"
op|','
nl|'\n'
string|"'pip>1.0'"
op|']'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'die'
op|'('
string|'"Failed to install pip."'
op|')'
newline|'\n'
dedent|''
name|'print'
string|"'done.'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|pip_install
dedent|''
name|'def'
name|'pip_install'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'run_command'
op|'('
op|'['
string|"'tools/with_venv.sh'"
op|','
nl|'\n'
string|"'pip'"
op|','
string|"'install'"
op|','
string|"'--upgrade'"
op|']'
op|'+'
name|'list'
op|'('
name|'args'
op|')'
op|','
nl|'\n'
name|'redirect_output'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|install_dependencies
dedent|''
name|'def'
name|'install_dependencies'
op|'('
name|'venv'
op|'='
name|'VENV'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'print'
string|"'Installing dependencies with pip (this can take a while)...'"
newline|'\n'
nl|'\n'
comment|'# First things first, make sure our venv has the latest pip and distribute.'
nl|'\n'
comment|'# NOTE: we keep pip at version 1.1 since the most recent version causes'
nl|'\n'
comment|'# the .venv creation to fail. See:'
nl|'\n'
comment|'# https://bugs.launchpad.net/nova/+bug/1047120'
nl|'\n'
name|'pip_install'
op|'('
string|"'pip==1.1'"
op|')'
newline|'\n'
name|'pip_install'
op|'('
string|"'distribute'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Install greenlet by hand - just listing it in the requires file does not'
nl|'\n'
comment|'# get it in stalled in the right order'
nl|'\n'
name|'pip_install'
op|'('
string|"'greenlet'"
op|')'
newline|'\n'
nl|'\n'
name|'pip_install'
op|'('
string|"'-r'"
op|','
name|'PIP_REQUIRES'
op|')'
newline|'\n'
name|'pip_install'
op|'('
string|"'-r'"
op|','
name|'TEST_REQUIRES'
op|')'
newline|'\n'
nl|'\n'
comment|'# Tell the virtual env how to "import nova"'
nl|'\n'
name|'pthfile'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'venv'
op|','
string|'"lib"'
op|','
name|'PY_VERSION'
op|','
string|'"site-packages"'
op|','
nl|'\n'
string|'"nova.pth"'
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'pthfile'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|'"%s\\n"'
op|'%'
name|'ROOT'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|post_process
dedent|''
name|'def'
name|'post_process'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'get_distro'
op|'('
op|')'
op|'.'
name|'post_process'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|print_help
dedent|''
name|'def'
name|'print_help'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'help'
op|'='
string|'"""\n    Nova development environment setup is complete.\n\n    Nova development uses virtualenv to track and manage Python dependencies\n    while in development and testing.\n\n    To activate the Nova virtualenv for the extent of your current shell\n    session you can run:\n\n    $ source .venv/bin/activate\n\n    Or, if you prefer, you can run commands in the virtualenv on a case by case\n    basis by running:\n\n    $ tools/with_venv.sh <your command>\n\n    Also, make test will automatically use the virtualenv.\n    """'
newline|'\n'
name|'print'
name|'help'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|parse_args
dedent|''
name|'def'
name|'parse_args'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Parses command-line arguments."""'
newline|'\n'
name|'parser'
op|'='
name|'optparse'
op|'.'
name|'OptionParser'
op|'('
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'add_option'
op|'('
string|'"-n"'
op|','
string|'"--no-site-packages"'
op|','
name|'dest'
op|'='
string|'"no_site_packages"'
op|','
nl|'\n'
name|'default'
op|'='
name|'False'
op|','
name|'action'
op|'='
string|'"store_true"'
op|','
nl|'\n'
name|'help'
op|'='
string|'"Do not inherit packages from global Python install"'
op|')'
newline|'\n'
name|'return'
name|'parser'
op|'.'
name|'parse_args'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|main
dedent|''
name|'def'
name|'main'
op|'('
name|'argv'
op|')'
op|':'
newline|'\n'
indent|'    '
op|'('
name|'options'
op|','
name|'args'
op|')'
op|'='
name|'parse_args'
op|'('
op|')'
newline|'\n'
name|'check_python_version'
op|'('
op|')'
newline|'\n'
name|'check_dependencies'
op|'('
op|')'
newline|'\n'
name|'create_virtualenv'
op|'('
name|'no_site_packages'
op|'='
name|'options'
op|'.'
name|'no_site_packages'
op|')'
newline|'\n'
name|'install_dependencies'
op|'('
op|')'
newline|'\n'
name|'post_process'
op|'('
op|')'
newline|'\n'
name|'print_help'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'main'
op|'('
name|'sys'
op|'.'
name|'argv'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
