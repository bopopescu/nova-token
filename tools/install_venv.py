begin_unit
string|'"""\nInstallation script for Nova\'s development virtualenv\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'subprocess'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|ROOT
name|'ROOT'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'__file__'
op|')'
op|')'
newline|'\n'
DECL|variable|VENV
name|'VENV'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'ROOT'
op|','
string|"'.nova-venv'"
op|')'
newline|'\n'
DECL|variable|PIP_REQUIRES
name|'PIP_REQUIRES'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'ROOT'
op|','
string|"'tools'"
op|','
string|"'pip-requires'"
op|')'
newline|'\n'
DECL|variable|TWISTED_NOVA
name|'TWISTED_NOVA'
op|'='
string|"'http://nova.openstack.org/Twisted-10.0.0Nova.tar.gz'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|die
name|'def'
name|'die'
op|'('
name|'message'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'  '
name|'print'
op|'>>'
name|'sys'
op|'.'
name|'stderr'
op|','
name|'message'
op|'%'
name|'args'
newline|'\n'
name|'sys'
op|'.'
name|'exit'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|run_command
dedent|''
name|'def'
name|'run_command'
op|'('
name|'cmd'
op|','
name|'redirect_output'
op|'='
name|'True'
op|','
name|'check_exit_code'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
comment|'# Useful for debugging:'
nl|'\n'
comment|"#print >>sys.stderr, ' '.join(cmd)"
nl|'\n'
indent|'  '
name|'if'
name|'redirect_output'
op|':'
newline|'\n'
indent|'    '
name|'stdout'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'    '
name|'stdout'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'proc'
op|'='
name|'subprocess'
op|'.'
name|'Popen'
op|'('
name|'cmd'
op|','
name|'stdout'
op|'='
name|'stdout'
op|')'
newline|'\n'
name|'output'
op|'='
name|'proc'
op|'.'
name|'communicate'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'check_exit_code'
name|'and'
name|'proc'
op|'.'
name|'returncode'
op|'!='
number|'0'
op|':'
newline|'\n'
indent|'    '
name|'die'
op|'('
string|'\'Command "%s" failed.\\n%s\''
op|','
string|"' '"
op|'.'
name|'join'
op|'('
name|'cmd'
op|')'
op|','
name|'output'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'output'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|check_dependencies
dedent|''
name|'def'
name|'check_dependencies'
op|'('
op|')'
op|':'
newline|'\n'
indent|'  '
string|'"""Make sure pip and virtualenv are on the path."""'
newline|'\n'
comment|'# Perl also has a pip program. Hopefully the user has installed the right one!'
nl|'\n'
name|'print'
string|"'Checking for pip...'"
op|','
newline|'\n'
name|'if'
name|'not'
name|'run_command'
op|'('
op|'['
string|"'which'"
op|','
string|"'pip'"
op|']'
op|','
name|'check_exit_code'
op|'='
name|'False'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'die'
op|'('
string|"'ERROR: pip not found.\\n\\nNova development requires pip,'"
nl|'\n'
string|"' please install it using your favorite package management tool '"
nl|'\n'
string|'\' (e.g. "sudo apt-get install python-pip")\''
op|')'
newline|'\n'
dedent|''
name|'print'
string|"'done.'"
newline|'\n'
nl|'\n'
name|'print'
string|"'Checking for virtualenv...'"
op|','
newline|'\n'
name|'if'
name|'not'
name|'run_command'
op|'('
op|'['
string|"'which'"
op|','
string|"'virtualenv'"
op|']'
op|','
name|'check_exit_code'
op|'='
name|'False'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'die'
op|'('
string|"'ERROR: virtualenv not found.\\n\\nNova development requires virtualenv,'"
nl|'\n'
string|"' please install it using your favorite package management tool '"
nl|'\n'
string|'\' (e.g. "sudo easy_install virtualenv")\''
op|')'
newline|'\n'
dedent|''
name|'print'
string|"'done.'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|create_virtualenv
dedent|''
name|'def'
name|'create_virtualenv'
op|'('
name|'venv'
op|'='
name|'VENV'
op|')'
op|':'
newline|'\n'
indent|'  '
name|'print'
string|"'Creating venv...'"
op|','
newline|'\n'
name|'run_command'
op|'('
op|'['
string|"'virtualenv'"
op|','
string|"'-q'"
op|','
string|"'--no-site-packages'"
op|','
name|'VENV'
op|']'
op|')'
newline|'\n'
name|'print'
string|"'done.'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|install_dependencies
dedent|''
name|'def'
name|'install_dependencies'
op|'('
name|'venv'
op|'='
name|'VENV'
op|')'
op|':'
newline|'\n'
indent|'  '
name|'print'
string|"'Installing dependencies with pip (this can take a while)...'"
newline|'\n'
name|'run_command'
op|'('
op|'['
string|"'pip'"
op|','
string|"'install'"
op|','
string|"'-E'"
op|','
name|'venv'
op|','
string|"'-r'"
op|','
name|'PIP_REQUIRES'
op|']'
op|','
nl|'\n'
name|'redirect_output'
op|'='
name|'False'
op|')'
newline|'\n'
name|'run_command'
op|'('
op|'['
string|"'pip'"
op|','
string|"'install'"
op|','
string|"'-E'"
op|','
name|'venv'
op|','
name|'TWISTED_NOVA'
op|']'
op|','
nl|'\n'
name|'redirect_output'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|print_help
dedent|''
name|'def'
name|'print_help'
op|'('
op|')'
op|':'
newline|'\n'
indent|'  '
name|'help'
op|'='
string|'"""\n Nova development environment setup is complete.\n\n Nova development uses virtualenv to track and manage Python dependencies\n while in development and testing.\n\n To activate the Nova virtualenv for the extent of your current shell session\n you can run:\n\n $ source .nova-venv/bin/activate \n\n Or, if you prefer, you can run commands in the virtualenv on a case by case\n basis by running:\n\n $ tools/with_venv.sh <your command>\n\n Also, make test will automatically use the virtualenv.\n  """'
newline|'\n'
name|'print'
name|'help'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|main
dedent|''
name|'def'
name|'main'
op|'('
name|'argv'
op|')'
op|':'
newline|'\n'
indent|'  '
name|'check_dependencies'
op|'('
op|')'
newline|'\n'
name|'create_virtualenv'
op|'('
op|')'
newline|'\n'
name|'install_dependencies'
op|'('
op|')'
newline|'\n'
name|'print_help'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'  '
name|'main'
op|'('
name|'sys'
op|'.'
name|'argv'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
