begin_unit
comment|'#!/usr/bin/env python'
nl|'\n'
nl|'\n'
comment|'# Copyright 2013 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
string|'"""\nOne-time script to populate VDI.other_config.\n\nWe use metadata stored in VDI.other_config to associate a VDI with a given\ninstance so that we may safely cleanup orphaned VDIs.\n\nWe had a bug in the code that meant that the vast majority of VDIs created\nwould not have the other_config populated.\n\nAfter deploying the fixed code, this script is intended to be run against all\ncompute-workers in a cluster so that existing VDIs can have their other_configs\npopulated.\n\nRun on compute-worker (not Dom0):\n\n    python ./tools/xenserver/populate_other_config.py [--dry-run|--verbose]\n"""'
newline|'\n'
name|'import'
name|'gettext'
newline|'\n'
name|'gettext'
op|'.'
name|'install'
op|'('
string|"'nova'"
op|','
name|'unicode'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
nl|'\n'
DECL|variable|possible_topdir
name|'possible_topdir'
op|'='
name|'os'
op|'.'
name|'getcwd'
op|'('
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'possible_topdir'
op|','
string|'"nova"'
op|','
string|'"__init__.py"'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sys'
op|'.'
name|'path'
op|'.'
name|'insert'
op|'('
number|'0'
op|','
name|'possible_topdir'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'from'
name|'nova'
name|'import'
name|'config'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'openstack'
op|'.'
name|'common'
name|'import'
name|'uuidutils'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
name|'import'
name|'virtapi'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
name|'import'
name|'driver'
name|'as'
name|'xenapi_driver'
newline|'\n'
name|'from'
name|'nova'
op|'.'
name|'virt'
op|'.'
name|'xenapi'
name|'import'
name|'vm_utils'
newline|'\n'
name|'from'
name|'oslo'
op|'.'
name|'config'
name|'import'
name|'cfg'
newline|'\n'
nl|'\n'
DECL|variable|cli_opts
name|'cli_opts'
op|'='
op|'['
nl|'\n'
name|'cfg'
op|'.'
name|'BoolOpt'
op|'('
string|"'dry-run'"
op|','
nl|'\n'
DECL|variable|default
name|'default'
op|'='
name|'False'
op|','
nl|'\n'
DECL|variable|help
name|'help'
op|'='
string|"'Whether to actually update other_config.'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|CONF
name|'CONF'
op|'='
name|'cfg'
op|'.'
name|'CONF'
newline|'\n'
name|'CONF'
op|'.'
name|'register_cli_opts'
op|'('
name|'cli_opts'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|main
name|'def'
name|'main'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'config'
op|'.'
name|'parse_args'
op|'('
name|'sys'
op|'.'
name|'argv'
op|')'
newline|'\n'
nl|'\n'
name|'xenapi'
op|'='
name|'xenapi_driver'
op|'.'
name|'XenAPIDriver'
op|'('
name|'virtapi'
op|'.'
name|'VirtAPI'
op|'('
op|')'
op|')'
newline|'\n'
name|'session'
op|'='
name|'xenapi'
op|'.'
name|'_session'
newline|'\n'
nl|'\n'
name|'vdi_refs'
op|'='
name|'session'
op|'.'
name|'call_xenapi'
op|'('
string|"'VDI.get_all'"
op|')'
newline|'\n'
name|'for'
name|'vdi_ref'
name|'in'
name|'vdi_refs'
op|':'
newline|'\n'
indent|'        '
name|'vdi_rec'
op|'='
name|'session'
op|'.'
name|'call_xenapi'
op|'('
string|"'VDI.get_record'"
op|','
name|'vdi_ref'
op|')'
newline|'\n'
nl|'\n'
name|'other_config'
op|'='
name|'vdi_rec'
op|'['
string|"'other_config'"
op|']'
newline|'\n'
nl|'\n'
comment|'# Already set...'
nl|'\n'
name|'if'
string|"'nova_instance_uuid'"
name|'in'
name|'other_config'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'name_label'
op|'='
name|'vdi_rec'
op|'['
string|"'name_label'"
op|']'
newline|'\n'
nl|'\n'
comment|'# We only want name-labels of form instance-<UUID>-[optional-suffix]'
nl|'\n'
name|'if'
name|'not'
name|'name_label'
op|'.'
name|'startswith'
op|'('
string|"'instance-'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
nl|'\n'
comment|'# Parse out UUID'
nl|'\n'
dedent|''
name|'instance_uuid'
op|'='
name|'name_label'
op|'.'
name|'replace'
op|'('
string|"'instance-'"
op|','
string|"''"
op|')'
op|'['
op|':'
number|'36'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'uuidutils'
op|'.'
name|'is_uuid_like'
op|'('
name|'instance_uuid'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|'"error: name label \'%s\' wasn\'t UUID-like"'
op|'%'
name|'name_label'
newline|'\n'
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'vdi_type'
op|'='
name|'vdi_rec'
op|'['
string|"'name_description'"
op|']'
newline|'\n'
nl|'\n'
comment|"# We don't need a full instance record, just the UUID"
nl|'\n'
name|'instance'
op|'='
op|'{'
string|"'uuid'"
op|':'
name|'instance_uuid'
op|'}'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'CONF'
op|'.'
name|'dry_run'
op|':'
newline|'\n'
indent|'            '
name|'vm_utils'
op|'.'
name|'_set_vdi_info'
op|'('
name|'session'
op|','
name|'vdi_ref'
op|','
name|'vdi_type'
op|','
name|'name_label'
op|','
nl|'\n'
name|'vdi_type'
op|','
name|'instance'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'CONF'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|'"Setting other_config for instance_uuid=%s vdi_uuid=%s"'
op|'%'
op|'('
nl|'\n'
name|'instance_uuid'
op|','
name|'vdi_rec'
op|'['
string|"'uuid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'CONF'
op|'.'
name|'dry_run'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|'"Dry run completed"'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|'"__main__"'
op|':'
newline|'\n'
indent|'    '
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
