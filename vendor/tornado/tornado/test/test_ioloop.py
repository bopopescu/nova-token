begin_unit
comment|'#!/usr/bin/env python'
nl|'\n'
nl|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'from'
name|'tornado'
name|'import'
name|'ioloop'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestIOLoop
name|'class'
name|'TestIOLoop'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'loop'
op|'='
name|'ioloop'
op|'.'
name|'IOLoop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|_callback
dedent|''
name|'def'
name|'_callback'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'called'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'loop'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_schedule_callback
dedent|''
name|'def'
name|'_schedule_callback'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'loop'
op|'.'
name|'add_callback'
op|'('
name|'self'
op|'.'
name|'_callback'
op|')'
newline|'\n'
comment|'# Scroll away the time so we can check if we woke up immediately'
nl|'\n'
name|'self'
op|'.'
name|'_start_time'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|test_add_callback
dedent|''
name|'def'
name|'test_add_callback'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'loop'
op|'.'
name|'add_timeout'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'_schedule_callback'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'loop'
op|'.'
name|'start'
op|'('
op|')'
comment|'# Set some long poll timeout so we can check wakeup'
newline|'\n'
name|'self'
op|'.'
name|'assertAlmostEqual'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'_start_time'
op|','
name|'places'
op|'='
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|'"__main__"'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'logging'
newline|'\n'
nl|'\n'
name|'logging'
op|'.'
name|'basicConfig'
op|'('
name|'level'
op|'='
name|'logging'
op|'.'
name|'DEBUG'
op|','
name|'format'
op|'='
string|"'%(asctime)s:%(msecs)03d %(levelname)-8s %(name)-8s %(message)s'"
op|','
name|'datefmt'
op|'='
string|"'%H:%M:%S'"
op|')'
newline|'\n'
nl|'\n'
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
