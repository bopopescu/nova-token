begin_unit
comment|'#!/usr/bin/env python'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Copyright 2009 Facebook'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'# not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'# a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#     http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'# License for the specific language governing permissions and limitations'
nl|'\n'
comment|'# under the License.'
nl|'\n'
nl|'\n'
string|'"""Translation methods for generating localized strings.\n\nTo load a locale and generate a translated string:\n\n    user_locale = locale.get("es_LA")\n    print user_locale.translate("Sign out")\n\nlocale.get() returns the closest matching locale, not necessarily the\nspecific locale you requested. You can support pluralization with\nadditional arguments to translate(), e.g.:\n\n    people = [...]\n    message = user_locale.translate(\n        "%(list)s is online", "%(list)s are online", len(people))\n    print message % {"list": user_locale.list(people)}\n\nThe first string is chosen if len(people) == 1, otherwise the second\nstring is chosen.\n\nApplications should call one of load_translations (which uses a simple\nCSV format) or load_gettext_translations (which uses the .mo format\nsupported by gettext and related tools).  If neither method is called,\nthe locale.translate method will simply return the original string.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'csv'
newline|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'logging'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'os'
op|'.'
name|'path'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
nl|'\n'
DECL|variable|_default_locale
name|'_default_locale'
op|'='
string|'"en_US"'
newline|'\n'
DECL|variable|_translations
name|'_translations'
op|'='
op|'{'
op|'}'
newline|'\n'
DECL|variable|_supported_locales
name|'_supported_locales'
op|'='
name|'frozenset'
op|'('
op|'['
name|'_default_locale'
op|']'
op|')'
newline|'\n'
DECL|variable|_use_gettext
name|'_use_gettext'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|variable|_log
name|'_log'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|"'tornado.locale'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|get
name|'def'
name|'get'
op|'('
op|'*'
name|'locale_codes'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Returns the closest match for the given locale codes.\n\n    We iterate over all given locale codes in order. If we have a tight\n    or a loose match for the code (e.g., "en" for "en_US"), we return\n    the locale. Otherwise we move to the next code in the list.\n\n    By default we return en_US if no translations are found for any of\n    the specified locales. You can change the default locale with\n    set_default_locale() below.\n    """'
newline|'\n'
name|'return'
name|'Locale'
op|'.'
name|'get_closest'
op|'('
op|'*'
name|'locale_codes'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|set_default_locale
dedent|''
name|'def'
name|'set_default_locale'
op|'('
name|'code'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Sets the default locale, used in get_closest_locale().\n\n    The default locale is assumed to be the language used for all strings\n    in the system. The translations loaded from disk are mappings from\n    the default locale to the destination locale. Consequently, you don\'t\n    need to create a translation file for the default locale.\n    """'
newline|'\n'
name|'global'
name|'_default_locale'
newline|'\n'
name|'global'
name|'_supported_locales'
newline|'\n'
name|'_default_locale'
op|'='
name|'code'
newline|'\n'
name|'_supported_locales'
op|'='
name|'frozenset'
op|'('
name|'_translations'
op|'.'
name|'keys'
op|'('
op|')'
op|'+'
op|'['
name|'_default_locale'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|load_translations
dedent|''
name|'def'
name|'load_translations'
op|'('
name|'directory'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Loads translations from CSV files in a directory.\n\n    Translations are strings with optional Python-style named placeholders\n    (e.g., "My name is %(name)s") and their associated translations.\n\n    The directory should have translation files of the form LOCALE.csv,\n    e.g. es_GT.csv. The CSV files should have two or three columns: string,\n    translation, and an optional plural indicator. Plural indicators should\n    be one of "plural" or "singular". A given string can have both singular\n    and plural forms. For example "%(name)s liked this" may have a\n    different verb conjugation depending on whether %(name)s is one\n    name or a list of names. There should be two rows in the CSV file for\n    that string, one with plural indicator "singular", and one "plural".\n    For strings with no verbs that would change on translation, simply\n    use "unknown" or the empty string (or don\'t include the column at all).\n\n    Example translation es_LA.csv:\n\n        "I love you","Te amo"\n        "%(name)s liked this","A %(name)s les gust\\xf3 esto","plural"\n        "%(name)s liked this","A %(name)s le gust\\xf3 esto","singular"\n\n    """'
newline|'\n'
name|'global'
name|'_translations'
newline|'\n'
name|'global'
name|'_supported_locales'
newline|'\n'
name|'_translations'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'path'
name|'in'
name|'os'
op|'.'
name|'listdir'
op|'('
name|'directory'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'path'
op|'.'
name|'endswith'
op|'('
string|'".csv"'
op|')'
op|':'
name|'continue'
newline|'\n'
name|'locale'
op|','
name|'extension'
op|'='
name|'path'
op|'.'
name|'split'
op|'('
string|'"."'
op|')'
newline|'\n'
name|'if'
name|'locale'
name|'not'
name|'in'
name|'LOCALE_NAMES'
op|':'
newline|'\n'
indent|'            '
name|'_log'
op|'.'
name|'error'
op|'('
string|'"Unrecognized locale %r (path: %s)"'
op|','
name|'locale'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'directory'
op|','
name|'path'
op|')'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'directory'
op|','
name|'path'
op|')'
op|','
string|'"r"'
op|')'
newline|'\n'
name|'_translations'
op|'['
name|'locale'
op|']'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'i'
op|','
name|'row'
name|'in'
name|'enumerate'
op|'('
name|'csv'
op|'.'
name|'reader'
op|'('
name|'f'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'row'
name|'or'
name|'len'
op|'('
name|'row'
op|')'
op|'<'
number|'2'
op|':'
name|'continue'
newline|'\n'
name|'row'
op|'='
op|'['
name|'c'
op|'.'
name|'decode'
op|'('
string|'"utf-8"'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
name|'for'
name|'c'
name|'in'
name|'row'
op|']'
newline|'\n'
name|'english'
op|','
name|'translation'
op|'='
name|'row'
op|'['
op|':'
number|'2'
op|']'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'row'
op|')'
op|'>'
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'plural'
op|'='
name|'row'
op|'['
number|'2'
op|']'
name|'or'
string|'"unknown"'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'plural'
op|'='
string|'"unknown"'
newline|'\n'
dedent|''
name|'if'
name|'plural'
name|'not'
name|'in'
op|'('
string|'"plural"'
op|','
string|'"singular"'
op|','
string|'"unknown"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'_log'
op|'.'
name|'error'
op|'('
string|'"Unrecognized plural indicator %r in %s line %d"'
op|','
nl|'\n'
name|'plural'
op|','
name|'path'
op|','
name|'i'
op|'+'
number|'1'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'_translations'
op|'['
name|'locale'
op|']'
op|'.'
name|'setdefault'
op|'('
name|'plural'
op|','
op|'{'
op|'}'
op|')'
op|'['
name|'english'
op|']'
op|'='
name|'translation'
newline|'\n'
dedent|''
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
dedent|''
name|'_supported_locales'
op|'='
name|'frozenset'
op|'('
name|'_translations'
op|'.'
name|'keys'
op|'('
op|')'
op|'+'
op|'['
name|'_default_locale'
op|']'
op|')'
newline|'\n'
name|'_log'
op|'.'
name|'info'
op|'('
string|'"Supported locales: %s"'
op|','
name|'sorted'
op|'('
name|'_supported_locales'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|load_gettext_translations
dedent|''
name|'def'
name|'load_gettext_translations'
op|'('
name|'directory'
op|','
name|'domain'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Loads translations from gettext\'s locale tree\n\n    Locale tree is similar to system\'s /usr/share/locale, like:\n\n    {directory}/{lang}/LC_MESSAGES/{domain}.mo\n\n    Three steps are required to have you app translated:\n\n    1. Generate POT translation file\n        xgettext --language=Python --keyword=_:1,2 -d cyclone file1.py file2.html etc\n\n    2. Merge against existing POT file:\n        msgmerge old.po cyclone.po > new.po\n\n    3. Compile:\n        msgfmt cyclone.po -o {directory}/pt_BR/LC_MESSAGES/cyclone.mo\n    """'
newline|'\n'
name|'import'
name|'gettext'
newline|'\n'
name|'global'
name|'_translations'
newline|'\n'
name|'global'
name|'_supported_locales'
newline|'\n'
name|'global'
name|'_use_gettext'
newline|'\n'
name|'_translations'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'lang'
name|'in'
name|'os'
op|'.'
name|'listdir'
op|'('
name|'directory'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isfile'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'directory'
op|','
name|'lang'
op|')'
op|')'
op|':'
name|'continue'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'stat'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'directory'
op|','
name|'lang'
op|','
string|'"LC_MESSAGES"'
op|','
name|'domain'
op|'+'
string|'".mo"'
op|')'
op|')'
newline|'\n'
name|'_translations'
op|'['
name|'lang'
op|']'
op|'='
name|'gettext'
op|'.'
name|'translation'
op|'('
name|'domain'
op|','
name|'directory'
op|','
nl|'\n'
name|'languages'
op|'='
op|'['
name|'lang'
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'logging'
op|'.'
name|'error'
op|'('
string|'"Cannot load translation for \'%s\': %s"'
op|','
name|'lang'
op|','
name|'str'
op|'('
name|'e'
op|')'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
dedent|''
name|'_supported_locales'
op|'='
name|'frozenset'
op|'('
name|'_translations'
op|'.'
name|'keys'
op|'('
op|')'
op|'+'
op|'['
name|'_default_locale'
op|']'
op|')'
newline|'\n'
name|'_use_gettext'
op|'='
name|'True'
newline|'\n'
name|'_log'
op|'.'
name|'info'
op|'('
string|'"Supported locales: %s"'
op|','
name|'sorted'
op|'('
name|'_supported_locales'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_supported_locales
dedent|''
name|'def'
name|'get_supported_locales'
op|'('
name|'cls'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Returns a list of all the supported locale codes."""'
newline|'\n'
name|'return'
name|'_supported_locales'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Locale
dedent|''
name|'class'
name|'Locale'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|get_closest
name|'def'
name|'get_closest'
op|'('
name|'cls'
op|','
op|'*'
name|'locale_codes'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns the closest match for the given locale code."""'
newline|'\n'
name|'for'
name|'code'
name|'in'
name|'locale_codes'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'code'
op|':'
name|'continue'
newline|'\n'
name|'code'
op|'='
name|'code'
op|'.'
name|'replace'
op|'('
string|'"-"'
op|','
string|'"_"'
op|')'
newline|'\n'
name|'parts'
op|'='
name|'code'
op|'.'
name|'split'
op|'('
string|'"_"'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'parts'
op|')'
op|'>'
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'elif'
name|'len'
op|'('
name|'parts'
op|')'
op|'=='
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'code'
op|'='
name|'parts'
op|'['
number|'0'
op|']'
op|'.'
name|'lower'
op|'('
op|')'
op|'+'
string|'"_"'
op|'+'
name|'parts'
op|'['
number|'1'
op|']'
op|'.'
name|'upper'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'code'
name|'in'
name|'_supported_locales'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'cls'
op|'.'
name|'get'
op|'('
name|'code'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'parts'
op|'['
number|'0'
op|']'
op|'.'
name|'lower'
op|'('
op|')'
name|'in'
name|'_supported_locales'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'cls'
op|'.'
name|'get'
op|'('
name|'parts'
op|'['
number|'0'
op|']'
op|'.'
name|'lower'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'cls'
op|'.'
name|'get'
op|'('
name|'_default_locale'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|get
name|'def'
name|'get'
op|'('
name|'cls'
op|','
name|'code'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns the Locale for the given locale code.\n\n        If it is not supported, we raise an exception.\n        """'
newline|'\n'
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'cls'
op|','
string|'"_cache"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cls'
op|'.'
name|'_cache'
op|'='
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'if'
name|'code'
name|'not'
name|'in'
name|'cls'
op|'.'
name|'_cache'
op|':'
newline|'\n'
indent|'            '
name|'assert'
name|'code'
name|'in'
name|'_supported_locales'
newline|'\n'
name|'translations'
op|'='
name|'_translations'
op|'.'
name|'get'
op|'('
name|'code'
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'translations'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'locale'
op|'='
name|'CSVLocale'
op|'('
name|'code'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'_use_gettext'
op|':'
newline|'\n'
indent|'                '
name|'locale'
op|'='
name|'GettextLocale'
op|'('
name|'code'
op|','
name|'translations'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'locale'
op|'='
name|'CSVLocale'
op|'('
name|'code'
op|','
name|'translations'
op|')'
newline|'\n'
dedent|''
name|'cls'
op|'.'
name|'_cache'
op|'['
name|'code'
op|']'
op|'='
name|'locale'
newline|'\n'
dedent|''
name|'return'
name|'cls'
op|'.'
name|'_cache'
op|'['
name|'code'
op|']'
newline|'\n'
nl|'\n'
DECL|member|__init__
dedent|''
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'code'
op|','
name|'translations'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'code'
op|'='
name|'code'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
name|'LOCALE_NAMES'
op|'.'
name|'get'
op|'('
name|'code'
op|','
op|'{'
op|'}'
op|')'
op|'.'
name|'get'
op|'('
string|'"name"'
op|','
string|'u"Unknown"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'rtl'
op|'='
name|'False'
newline|'\n'
name|'for'
name|'prefix'
name|'in'
op|'['
string|'"fa"'
op|','
string|'"ar"'
op|','
string|'"he"'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'code'
op|'.'
name|'startswith'
op|'('
name|'prefix'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'rtl'
op|'='
name|'True'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'translations'
op|'='
name|'translations'
newline|'\n'
nl|'\n'
comment|'# Initialize strings for date formatting'
nl|'\n'
name|'_'
op|'='
name|'self'
op|'.'
name|'translate'
newline|'\n'
name|'self'
op|'.'
name|'_months'
op|'='
op|'['
nl|'\n'
name|'_'
op|'('
string|'"January"'
op|')'
op|','
name|'_'
op|'('
string|'"February"'
op|')'
op|','
name|'_'
op|'('
string|'"March"'
op|')'
op|','
name|'_'
op|'('
string|'"April"'
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|'"May"'
op|')'
op|','
name|'_'
op|'('
string|'"June"'
op|')'
op|','
name|'_'
op|'('
string|'"July"'
op|')'
op|','
name|'_'
op|'('
string|'"August"'
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|'"September"'
op|')'
op|','
name|'_'
op|'('
string|'"October"'
op|')'
op|','
name|'_'
op|'('
string|'"November"'
op|')'
op|','
name|'_'
op|'('
string|'"December"'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_weekdays'
op|'='
op|'['
nl|'\n'
name|'_'
op|'('
string|'"Monday"'
op|')'
op|','
name|'_'
op|'('
string|'"Tuesday"'
op|')'
op|','
name|'_'
op|'('
string|'"Wednesday"'
op|')'
op|','
name|'_'
op|'('
string|'"Thursday"'
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|'"Friday"'
op|')'
op|','
name|'_'
op|'('
string|'"Saturday"'
op|')'
op|','
name|'_'
op|'('
string|'"Sunday"'
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|member|translate
dedent|''
name|'def'
name|'translate'
op|'('
name|'self'
op|','
name|'message'
op|','
name|'plural_message'
op|'='
name|'None'
op|','
name|'count'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|format_date
dedent|''
name|'def'
name|'format_date'
op|'('
name|'self'
op|','
name|'date'
op|','
name|'gmt_offset'
op|'='
number|'0'
op|','
name|'relative'
op|'='
name|'True'
op|','
name|'shorter'
op|'='
name|'False'
op|','
nl|'\n'
name|'full_format'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Formats the given date (which should be GMT).\n\n        By default, we return a relative time (e.g., "2 minutes ago"). You\n        can return an absolute date string with relative=False.\n\n        You can force a full format date ("July 10, 1980") with\n        full_format=True.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'code'
op|'.'
name|'startswith'
op|'('
string|'"ru"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'relative'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'if'
name|'type'
op|'('
name|'date'
op|')'
name|'in'
op|'('
name|'int'
op|','
name|'long'
op|','
name|'float'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'date'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'.'
name|'utcfromtimestamp'
op|'('
name|'date'
op|')'
newline|'\n'
dedent|''
name|'now'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
comment|'# Round down to now. Due to click skew, things are somethings'
nl|'\n'
comment|'# slightly in the future.'
nl|'\n'
name|'if'
name|'date'
op|'>'
name|'now'
op|':'
name|'date'
op|'='
name|'now'
newline|'\n'
name|'local_date'
op|'='
name|'date'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'minutes'
op|'='
name|'gmt_offset'
op|')'
newline|'\n'
name|'local_now'
op|'='
name|'now'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'minutes'
op|'='
name|'gmt_offset'
op|')'
newline|'\n'
name|'local_yesterday'
op|'='
name|'local_now'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'hours'
op|'='
number|'24'
op|')'
newline|'\n'
name|'difference'
op|'='
name|'now'
op|'-'
name|'date'
newline|'\n'
name|'seconds'
op|'='
name|'difference'
op|'.'
name|'seconds'
newline|'\n'
name|'days'
op|'='
name|'difference'
op|'.'
name|'days'
newline|'\n'
nl|'\n'
name|'_'
op|'='
name|'self'
op|'.'
name|'translate'
newline|'\n'
name|'format'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'not'
name|'full_format'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'relative'
name|'and'
name|'days'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'seconds'
op|'<'
number|'50'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'_'
op|'('
string|'"1 second ago"'
op|','
string|'"%(seconds)d seconds ago"'
op|','
nl|'\n'
name|'seconds'
op|')'
op|'%'
op|'{'
string|'"seconds"'
op|':'
name|'seconds'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'seconds'
op|'<'
number|'50'
op|'*'
number|'60'
op|':'
newline|'\n'
indent|'                    '
name|'minutes'
op|'='
name|'round'
op|'('
name|'seconds'
op|'/'
number|'60.0'
op|')'
newline|'\n'
name|'return'
name|'_'
op|'('
string|'"1 minute ago"'
op|','
string|'"%(minutes)d minutes ago"'
op|','
nl|'\n'
name|'minutes'
op|')'
op|'%'
op|'{'
string|'"minutes"'
op|':'
name|'minutes'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'hours'
op|'='
name|'round'
op|'('
name|'seconds'
op|'/'
op|'('
number|'60.0'
op|'*'
number|'60'
op|')'
op|')'
newline|'\n'
name|'return'
name|'_'
op|'('
string|'"1 hour ago"'
op|','
string|'"%(hours)d hours ago"'
op|','
nl|'\n'
name|'hours'
op|')'
op|'%'
op|'{'
string|'"hours"'
op|':'
name|'hours'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'days'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'format'
op|'='
name|'_'
op|'('
string|'"%(time)s"'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'days'
op|'=='
number|'1'
name|'and'
name|'local_date'
op|'.'
name|'day'
op|'=='
name|'local_yesterday'
op|'.'
name|'day'
name|'and'
name|'relative'
op|':'
newline|'\n'
indent|'                '
name|'format'
op|'='
name|'_'
op|'('
string|'"yesterday"'
op|')'
name|'if'
name|'shorter'
name|'else'
name|'_'
op|'('
string|'"yesterday at %(time)s"'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'days'
op|'<'
number|'5'
op|':'
newline|'\n'
indent|'                '
name|'format'
op|'='
name|'_'
op|'('
string|'"%(weekday)s"'
op|')'
name|'if'
name|'shorter'
name|'else'
name|'_'
op|'('
string|'"%(weekday)s at %(time)s"'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'days'
op|'<'
number|'334'
op|':'
comment|'# 11mo, since confusing for same month last year'
newline|'\n'
indent|'                '
name|'format'
op|'='
name|'_'
op|'('
string|'"%(month_name)s %(day)s"'
op|')'
name|'if'
name|'shorter'
name|'else'
name|'_'
op|'('
string|'"%(month_name)s %(day)s at %(time)s"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'format'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'format'
op|'='
name|'_'
op|'('
string|'"%(month_name)s %(day)s, %(year)s"'
op|')'
name|'if'
name|'shorter'
name|'else'
name|'_'
op|'('
string|'"%(month_name)s %(day)s, %(year)s at %(time)s"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'tfhour_clock'
op|'='
name|'self'
op|'.'
name|'code'
name|'not'
name|'in'
op|'('
string|'"en"'
op|','
string|'"en_US"'
op|','
string|'"zh_CN"'
op|')'
newline|'\n'
name|'if'
name|'tfhour_clock'
op|':'
newline|'\n'
indent|'            '
name|'str_time'
op|'='
string|'"%d:%02d"'
op|'%'
op|'('
name|'local_date'
op|'.'
name|'hour'
op|','
name|'local_date'
op|'.'
name|'minute'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'self'
op|'.'
name|'code'
op|'=='
string|'"zh_CN"'
op|':'
newline|'\n'
indent|'            '
name|'str_time'
op|'='
string|'"%s%d:%02d"'
op|'%'
op|'('
nl|'\n'
op|'('
string|"u'\\u4e0a\\u5348'"
op|','
string|"u'\\u4e0b\\u5348'"
op|')'
op|'['
name|'local_date'
op|'.'
name|'hour'
op|'>='
number|'12'
op|']'
op|','
nl|'\n'
name|'local_date'
op|'.'
name|'hour'
op|'%'
number|'12'
name|'or'
number|'12'
op|','
name|'local_date'
op|'.'
name|'minute'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'str_time'
op|'='
string|'"%d:%02d %s"'
op|'%'
op|'('
nl|'\n'
name|'local_date'
op|'.'
name|'hour'
op|'%'
number|'12'
name|'or'
number|'12'
op|','
name|'local_date'
op|'.'
name|'minute'
op|','
nl|'\n'
op|'('
string|'"am"'
op|','
string|'"pm"'
op|')'
op|'['
name|'local_date'
op|'.'
name|'hour'
op|'>='
number|'12'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'format'
op|'%'
op|'{'
nl|'\n'
string|'"month_name"'
op|':'
name|'self'
op|'.'
name|'_months'
op|'['
name|'local_date'
op|'.'
name|'month'
op|'-'
number|'1'
op|']'
op|','
nl|'\n'
string|'"weekday"'
op|':'
name|'self'
op|'.'
name|'_weekdays'
op|'['
name|'local_date'
op|'.'
name|'weekday'
op|'('
op|')'
op|']'
op|','
nl|'\n'
string|'"day"'
op|':'
name|'str'
op|'('
name|'local_date'
op|'.'
name|'day'
op|')'
op|','
nl|'\n'
string|'"year"'
op|':'
name|'str'
op|'('
name|'local_date'
op|'.'
name|'year'
op|')'
op|','
nl|'\n'
string|'"time"'
op|':'
name|'str_time'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|format_day
dedent|''
name|'def'
name|'format_day'
op|'('
name|'self'
op|','
name|'date'
op|','
name|'gmt_offset'
op|'='
number|'0'
op|','
name|'dow'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Formats the given date as a day of week.\n\n        Example: "Monday, January 22". You can remove the day of week with\n        dow=False.\n        """'
newline|'\n'
name|'local_date'
op|'='
name|'date'
op|'-'
name|'datetime'
op|'.'
name|'timedelta'
op|'('
name|'minutes'
op|'='
name|'gmt_offset'
op|')'
newline|'\n'
name|'_'
op|'='
name|'self'
op|'.'
name|'translate'
newline|'\n'
name|'if'
name|'dow'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'_'
op|'('
string|'"%(weekday)s, %(month_name)s %(day)s"'
op|')'
op|'%'
op|'{'
nl|'\n'
string|'"month_name"'
op|':'
name|'self'
op|'.'
name|'_months'
op|'['
name|'local_date'
op|'.'
name|'month'
op|'-'
number|'1'
op|']'
op|','
nl|'\n'
string|'"weekday"'
op|':'
name|'self'
op|'.'
name|'_weekdays'
op|'['
name|'local_date'
op|'.'
name|'weekday'
op|'('
op|')'
op|']'
op|','
nl|'\n'
string|'"day"'
op|':'
name|'str'
op|'('
name|'local_date'
op|'.'
name|'day'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'_'
op|'('
string|'"%(month_name)s %(day)s"'
op|')'
op|'%'
op|'{'
nl|'\n'
string|'"month_name"'
op|':'
name|'self'
op|'.'
name|'_months'
op|'['
name|'local_date'
op|'.'
name|'month'
op|'-'
number|'1'
op|']'
op|','
nl|'\n'
string|'"day"'
op|':'
name|'str'
op|'('
name|'local_date'
op|'.'
name|'day'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|list
dedent|''
dedent|''
name|'def'
name|'list'
op|'('
name|'self'
op|','
name|'parts'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns a comma-separated list for the given list of parts.\n\n        The format is, e.g., "A, B and C", "A and B" or just "A" for lists\n        of size 1.\n        """'
newline|'\n'
name|'_'
op|'='
name|'self'
op|'.'
name|'translate'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'parts'
op|')'
op|'=='
number|'0'
op|':'
name|'return'
string|'""'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'parts'
op|')'
op|'=='
number|'1'
op|':'
name|'return'
name|'parts'
op|'['
number|'0'
op|']'
newline|'\n'
name|'comma'
op|'='
string|"u' \\u0648 '"
name|'if'
name|'self'
op|'.'
name|'code'
op|'.'
name|'startswith'
op|'('
string|'"fa"'
op|')'
name|'else'
string|'u", "'
newline|'\n'
name|'return'
name|'_'
op|'('
string|'"%(commas)s and %(last)s"'
op|')'
op|'%'
op|'{'
nl|'\n'
string|'"commas"'
op|':'
name|'comma'
op|'.'
name|'join'
op|'('
name|'parts'
op|'['
op|':'
op|'-'
number|'1'
op|']'
op|')'
op|','
nl|'\n'
string|'"last"'
op|':'
name|'parts'
op|'['
name|'len'
op|'('
name|'parts'
op|')'
op|'-'
number|'1'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|friendly_number
dedent|''
name|'def'
name|'friendly_number'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns a comma-separated number for the given integer."""'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'code'
name|'not'
name|'in'
op|'('
string|'"en"'
op|','
string|'"en_US"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'str'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
name|'value'
op|'='
name|'str'
op|'('
name|'value'
op|')'
newline|'\n'
name|'parts'
op|'='
op|'['
op|']'
newline|'\n'
name|'while'
name|'value'
op|':'
newline|'\n'
indent|'            '
name|'parts'
op|'.'
name|'append'
op|'('
name|'value'
op|'['
op|'-'
number|'3'
op|':'
op|']'
op|')'
newline|'\n'
name|'value'
op|'='
name|'value'
op|'['
op|':'
op|'-'
number|'3'
op|']'
newline|'\n'
dedent|''
name|'return'
string|'","'
op|'.'
name|'join'
op|'('
name|'reversed'
op|'('
name|'parts'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|class|CSVLocale
dedent|''
dedent|''
name|'class'
name|'CSVLocale'
op|'('
name|'Locale'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Locale implementation using tornado\'s CSV translation format."""'
newline|'\n'
DECL|member|translate
name|'def'
name|'translate'
op|'('
name|'self'
op|','
name|'message'
op|','
name|'plural_message'
op|'='
name|'None'
op|','
name|'count'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns the translation for the given message for this locale.\n\n        If plural_message is given, you must also provide count. We return\n        plural_message when count != 1, and we return the singular form\n        for the given message when count == 1.\n        """'
newline|'\n'
name|'if'
name|'plural_message'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'assert'
name|'count'
name|'is'
name|'not'
name|'None'
newline|'\n'
name|'if'
name|'count'
op|'!='
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'message'
op|'='
name|'plural_message'
newline|'\n'
name|'message_dict'
op|'='
name|'self'
op|'.'
name|'translations'
op|'.'
name|'get'
op|'('
string|'"plural"'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'message_dict'
op|'='
name|'self'
op|'.'
name|'translations'
op|'.'
name|'get'
op|'('
string|'"singular"'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'message_dict'
op|'='
name|'self'
op|'.'
name|'translations'
op|'.'
name|'get'
op|'('
string|'"unknown"'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'message_dict'
op|'.'
name|'get'
op|'('
name|'message'
op|','
name|'message'
op|')'
newline|'\n'
nl|'\n'
DECL|class|GettextLocale
dedent|''
dedent|''
name|'class'
name|'GettextLocale'
op|'('
name|'Locale'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Locale implementation using the gettext module."""'
newline|'\n'
DECL|member|translate
name|'def'
name|'translate'
op|'('
name|'self'
op|','
name|'message'
op|','
name|'plural_message'
op|'='
name|'None'
op|','
name|'count'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'plural_message'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'assert'
name|'count'
name|'is'
name|'not'
name|'None'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'translations'
op|'.'
name|'ungettext'
op|'('
name|'message'
op|','
name|'plural_message'
op|','
name|'count'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'translations'
op|'.'
name|'ugettext'
op|'('
name|'message'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|LOCALE_NAMES
dedent|''
dedent|''
dedent|''
name|'LOCALE_NAMES'
op|'='
op|'{'
nl|'\n'
string|'"af_ZA"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Afrikaans"'
op|','
string|'"name"'
op|':'
string|'u"Afrikaans"'
op|'}'
op|','
nl|'\n'
string|'"ar_AR"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Arabic"'
op|','
string|'"name"'
op|':'
string|'u"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629"'
op|'}'
op|','
nl|'\n'
string|'"bg_BG"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Bulgarian"'
op|','
string|'"name"'
op|':'
string|'u"\\u0411\\u044a\\u043b\\u0433\\u0430\\u0440\\u0441\\u043a\\u0438"'
op|'}'
op|','
nl|'\n'
string|'"bn_IN"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Bengali"'
op|','
string|'"name"'
op|':'
string|'u"\\u09ac\\u09be\\u0982\\u09b2\\u09be"'
op|'}'
op|','
nl|'\n'
string|'"bs_BA"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Bosnian"'
op|','
string|'"name"'
op|':'
string|'u"Bosanski"'
op|'}'
op|','
nl|'\n'
string|'"ca_ES"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Catalan"'
op|','
string|'"name"'
op|':'
string|'u"Catal\\xe0"'
op|'}'
op|','
nl|'\n'
string|'"cs_CZ"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Czech"'
op|','
string|'"name"'
op|':'
string|'u"\\u010ce\\u0161tina"'
op|'}'
op|','
nl|'\n'
string|'"cy_GB"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Welsh"'
op|','
string|'"name"'
op|':'
string|'u"Cymraeg"'
op|'}'
op|','
nl|'\n'
string|'"da_DK"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Danish"'
op|','
string|'"name"'
op|':'
string|'u"Dansk"'
op|'}'
op|','
nl|'\n'
string|'"de_DE"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"German"'
op|','
string|'"name"'
op|':'
string|'u"Deutsch"'
op|'}'
op|','
nl|'\n'
string|'"el_GR"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Greek"'
op|','
string|'"name"'
op|':'
string|'u"\\u0395\\u03bb\\u03bb\\u03b7\\u03bd\\u03b9\\u03ba\\u03ac"'
op|'}'
op|','
nl|'\n'
string|'"en_GB"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"English (UK)"'
op|','
string|'"name"'
op|':'
string|'u"English (UK)"'
op|'}'
op|','
nl|'\n'
string|'"en_US"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"English (US)"'
op|','
string|'"name"'
op|':'
string|'u"English (US)"'
op|'}'
op|','
nl|'\n'
string|'"es_ES"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Spanish (Spain)"'
op|','
string|'"name"'
op|':'
string|'u"Espa\\xf1ol (Espa\\xf1a)"'
op|'}'
op|','
nl|'\n'
string|'"es_LA"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Spanish"'
op|','
string|'"name"'
op|':'
string|'u"Espa\\xf1ol"'
op|'}'
op|','
nl|'\n'
string|'"et_EE"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Estonian"'
op|','
string|'"name"'
op|':'
string|'u"Eesti"'
op|'}'
op|','
nl|'\n'
string|'"eu_ES"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Basque"'
op|','
string|'"name"'
op|':'
string|'u"Euskara"'
op|'}'
op|','
nl|'\n'
string|'"fa_IR"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Persian"'
op|','
string|'"name"'
op|':'
string|'u"\\u0641\\u0627\\u0631\\u0633\\u06cc"'
op|'}'
op|','
nl|'\n'
string|'"fi_FI"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Finnish"'
op|','
string|'"name"'
op|':'
string|'u"Suomi"'
op|'}'
op|','
nl|'\n'
string|'"fr_CA"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"French (Canada)"'
op|','
string|'"name"'
op|':'
string|'u"Fran\\xe7ais (Canada)"'
op|'}'
op|','
nl|'\n'
string|'"fr_FR"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"French"'
op|','
string|'"name"'
op|':'
string|'u"Fran\\xe7ais"'
op|'}'
op|','
nl|'\n'
string|'"ga_IE"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Irish"'
op|','
string|'"name"'
op|':'
string|'u"Gaeilge"'
op|'}'
op|','
nl|'\n'
string|'"gl_ES"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Galician"'
op|','
string|'"name"'
op|':'
string|'u"Galego"'
op|'}'
op|','
nl|'\n'
string|'"he_IL"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Hebrew"'
op|','
string|'"name"'
op|':'
string|'u"\\u05e2\\u05d1\\u05e8\\u05d9\\u05ea"'
op|'}'
op|','
nl|'\n'
string|'"hi_IN"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Hindi"'
op|','
string|'"name"'
op|':'
string|'u"\\u0939\\u093f\\u0928\\u094d\\u0926\\u0940"'
op|'}'
op|','
nl|'\n'
string|'"hr_HR"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Croatian"'
op|','
string|'"name"'
op|':'
string|'u"Hrvatski"'
op|'}'
op|','
nl|'\n'
string|'"hu_HU"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Hungarian"'
op|','
string|'"name"'
op|':'
string|'u"Magyar"'
op|'}'
op|','
nl|'\n'
string|'"id_ID"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Indonesian"'
op|','
string|'"name"'
op|':'
string|'u"Bahasa Indonesia"'
op|'}'
op|','
nl|'\n'
string|'"is_IS"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Icelandic"'
op|','
string|'"name"'
op|':'
string|'u"\\xcdslenska"'
op|'}'
op|','
nl|'\n'
string|'"it_IT"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Italian"'
op|','
string|'"name"'
op|':'
string|'u"Italiano"'
op|'}'
op|','
nl|'\n'
string|'"ja_JP"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Japanese"'
op|','
string|'"name"'
op|':'
string|'u"\\xe6\\xe6\\xe8"'
op|'}'
op|','
nl|'\n'
string|'"ko_KR"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Korean"'
op|','
string|'"name"'
op|':'
string|'u"\\xed\\xea\\xec"'
op|'}'
op|','
nl|'\n'
string|'"lt_LT"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Lithuanian"'
op|','
string|'"name"'
op|':'
string|'u"Lietuvi\\u0173"'
op|'}'
op|','
nl|'\n'
string|'"lv_LV"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Latvian"'
op|','
string|'"name"'
op|':'
string|'u"Latvie\\u0161u"'
op|'}'
op|','
nl|'\n'
string|'"mk_MK"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Macedonian"'
op|','
string|'"name"'
op|':'
string|'u"\\u041c\\u0430\\u043a\\u0435\\u0434\\u043e\\u043d\\u0441\\u043a\\u0438"'
op|'}'
op|','
nl|'\n'
string|'"ml_IN"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Malayalam"'
op|','
string|'"name"'
op|':'
string|'u"\\u0d2e\\u0d32\\u0d2f\\u0d3e\\u0d33\\u0d02"'
op|'}'
op|','
nl|'\n'
string|'"ms_MY"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Malay"'
op|','
string|'"name"'
op|':'
string|'u"Bahasa Melayu"'
op|'}'
op|','
nl|'\n'
string|'"nb_NO"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Norwegian (bokmal)"'
op|','
string|'"name"'
op|':'
string|'u"Norsk (bokm\\xe5l)"'
op|'}'
op|','
nl|'\n'
string|'"nl_NL"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Dutch"'
op|','
string|'"name"'
op|':'
string|'u"Nederlands"'
op|'}'
op|','
nl|'\n'
string|'"nn_NO"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Norwegian (nynorsk)"'
op|','
string|'"name"'
op|':'
string|'u"Norsk (nynorsk)"'
op|'}'
op|','
nl|'\n'
string|'"pa_IN"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Punjabi"'
op|','
string|'"name"'
op|':'
string|'u"\\u0a2a\\u0a70\\u0a1c\\u0a3e\\u0a2c\\u0a40"'
op|'}'
op|','
nl|'\n'
string|'"pl_PL"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Polish"'
op|','
string|'"name"'
op|':'
string|'u"Polski"'
op|'}'
op|','
nl|'\n'
string|'"pt_BR"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Portuguese (Brazil)"'
op|','
string|'"name"'
op|':'
string|'u"Portugu\\xeas (Brasil)"'
op|'}'
op|','
nl|'\n'
string|'"pt_PT"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Portuguese (Portugal)"'
op|','
string|'"name"'
op|':'
string|'u"Portugu\\xeas (Portugal)"'
op|'}'
op|','
nl|'\n'
string|'"ro_RO"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Romanian"'
op|','
string|'"name"'
op|':'
string|'u"Rom\\xe2n\\u0103"'
op|'}'
op|','
nl|'\n'
string|'"ru_RU"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Russian"'
op|','
string|'"name"'
op|':'
string|'u"\\u0420\\u0443\\u0441\\u0441\\u043a\\u0438\\u0439"'
op|'}'
op|','
nl|'\n'
string|'"sk_SK"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Slovak"'
op|','
string|'"name"'
op|':'
string|'u"Sloven\\u010dina"'
op|'}'
op|','
nl|'\n'
string|'"sl_SI"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Slovenian"'
op|','
string|'"name"'
op|':'
string|'u"Sloven\\u0161\\u010dina"'
op|'}'
op|','
nl|'\n'
string|'"sq_AL"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Albanian"'
op|','
string|'"name"'
op|':'
string|'u"Shqip"'
op|'}'
op|','
nl|'\n'
string|'"sr_RS"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Serbian"'
op|','
string|'"name"'
op|':'
string|'u"\\u0421\\u0440\\u043f\\u0441\\u043a\\u0438"'
op|'}'
op|','
nl|'\n'
string|'"sv_SE"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Swedish"'
op|','
string|'"name"'
op|':'
string|'u"Svenska"'
op|'}'
op|','
nl|'\n'
string|'"sw_KE"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Swahili"'
op|','
string|'"name"'
op|':'
string|'u"Kiswahili"'
op|'}'
op|','
nl|'\n'
string|'"ta_IN"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Tamil"'
op|','
string|'"name"'
op|':'
string|'u"\\u0ba4\\u0bae\\u0bbf\\u0bb4\\u0bcd"'
op|'}'
op|','
nl|'\n'
string|'"te_IN"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Telugu"'
op|','
string|'"name"'
op|':'
string|'u"\\u0c24\\u0c46\\u0c32\\u0c41\\u0c17\\u0c41"'
op|'}'
op|','
nl|'\n'
string|'"th_TH"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Thai"'
op|','
string|'"name"'
op|':'
string|'u"\\u0e20\\u0e32\\u0e29\\u0e32\\u0e44\\u0e17\\u0e22"'
op|'}'
op|','
nl|'\n'
string|'"tl_PH"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Filipino"'
op|','
string|'"name"'
op|':'
string|'u"Filipino"'
op|'}'
op|','
nl|'\n'
string|'"tr_TR"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Turkish"'
op|','
string|'"name"'
op|':'
string|'u"T\\xfcrk\\xe7e"'
op|'}'
op|','
nl|'\n'
string|'"uk_UA"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Ukraini "'
op|','
string|'"name"'
op|':'
string|'u"\\u0423\\u043a\\u0440\\u0430\\u0457\\u043d\\u0441\\u044c\\u043a\\u0430"'
op|'}'
op|','
nl|'\n'
string|'"vi_VN"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Vietnamese"'
op|','
string|'"name"'
op|':'
string|'u"Ti\\u1ebfng Vi\\u1ec7t"'
op|'}'
op|','
nl|'\n'
string|'"zh_CN"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Chinese (Simplified)"'
op|','
string|'"name"'
op|':'
string|'u"\\xe4\\xe6(\\xe7\\xe4)"'
op|'}'
op|','
nl|'\n'
string|'"zh_HK"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Chinese (Hong Kong)"'
op|','
string|'"name"'
op|':'
string|'u"\\xe4\\xe6(\\xe9\\xe6)"'
op|'}'
op|','
nl|'\n'
string|'"zh_TW"'
op|':'
op|'{'
string|'"name_en"'
op|':'
string|'u"Chinese (Taiwan)"'
op|','
string|'"name"'
op|':'
string|'u"\\xe4\\xe6(\\xe5\\xe7)"'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
endmarker|''
end_unit
