begin_unit
comment|'#!/usr/bin/env python'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Copyright 2009 Facebook'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'functools'
newline|'\n'
name|'import'
name|'logging'
newline|'\n'
name|'import'
name|'tornado'
op|'.'
name|'escape'
newline|'\n'
name|'import'
name|'tornado'
op|'.'
name|'web'
newline|'\n'
nl|'\n'
DECL|variable|_log
name|'_log'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|"'tornado.websocket'"
op|')'
newline|'\n'
nl|'\n'
DECL|class|WebSocketHandler
name|'class'
name|'WebSocketHandler'
op|'('
name|'tornado'
op|'.'
name|'web'
op|'.'
name|'RequestHandler'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""A request handler for HTML 5 Web Sockets.\n\n    See http://www.w3.org/TR/2009/WD-websockets-20091222/ for details on the\n    JavaScript interface. We implement the protocol as specified at\n    http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-55.\n\n    Here is an example Web Socket handler that echos back all received messages\n    back to the client:\n\n      class EchoWebSocket(websocket.WebSocketHandler):\n          def open(self):\n              self.receive_message(self.on_message)\n\n          def on_message(self, message):\n             self.write_message(u"You said: " + message)\n\n    Web Sockets are not standard HTTP connections. The "handshake" is HTTP,\n    but after the handshake, the protocol is message-based. Consequently,\n    most of the Tornado HTTP facilities are not available in handlers of this\n    type. The only communication methods available to you are send_message()\n    and receive_message(). Likewise, your request handler class should\n    implement open() method rather than get() or post().\n\n    If you map the handler above to "/websocket" in your application, you can\n    invoke it in JavaScript with:\n\n      var ws = new WebSocket("ws://localhost:8888/websocket");\n      ws.onopen = function() {\n         ws.send("Hello, world");\n      };\n      ws.onmessage = function (evt) {\n         alert(evt.data);\n      };\n\n    This script pops up an alert box that says "You said: Hello, world".\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'application'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tornado'
op|'.'
name|'web'
op|'.'
name|'RequestHandler'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'application'
op|','
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stream'
op|'='
name|'request'
op|'.'
name|'connection'
op|'.'
name|'stream'
newline|'\n'
nl|'\n'
DECL|member|_execute
dedent|''
name|'def'
name|'_execute'
op|'('
name|'self'
op|','
name|'transforms'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'request'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|'"Upgrade"'
op|')'
op|'!='
string|'"WebSocket"'
name|'or'
name|'self'
op|'.'
name|'request'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|'"Connection"'
op|')'
op|'!='
string|'"Upgrade"'
name|'or'
name|'not'
name|'self'
op|'.'
name|'request'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|'"Origin"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'message'
op|'='
string|'"Expected WebSocket headers"'
newline|'\n'
name|'self'
op|'.'
name|'stream'
op|'.'
name|'write'
op|'('
nl|'\n'
string|'"HTTP/1.1 403 Forbidden\\r\\nContent-Length: "'
op|'+'
nl|'\n'
name|'str'
op|'('
name|'len'
op|'('
name|'message'
op|')'
op|')'
op|'+'
string|'"\\r\\n\\r\\n"'
op|'+'
name|'message'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stream'
op|'.'
name|'write'
op|'('
nl|'\n'
string|'"HTTP/1.1 101 Web Socket Protocol Handshake\\r\\n"'
nl|'\n'
string|'"Upgrade: WebSocket\\r\\n"'
nl|'\n'
string|'"Connection: Upgrade\\r\\n"'
nl|'\n'
string|'"Server: TornadoServer/0.1\\r\\n"'
nl|'\n'
string|'"WebSocket-Origin: "'
op|'+'
name|'self'
op|'.'
name|'request'
op|'.'
name|'headers'
op|'['
string|'"Origin"'
op|']'
op|'+'
string|'"\\r\\n"'
nl|'\n'
string|'"WebSocket-Location: ws://"'
op|'+'
name|'self'
op|'.'
name|'request'
op|'.'
name|'host'
op|'+'
nl|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'path'
op|'+'
string|'"\\r\\n\\r\\n"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'async_callback'
op|'('
name|'self'
op|'.'
name|'open'
op|')'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|write_message
dedent|''
name|'def'
name|'write_message'
op|'('
name|'self'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Sends the given message to the client of this Web Socket."""'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'message'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'message'
op|'='
name|'tornado'
op|'.'
name|'escape'
op|'.'
name|'json_encode'
op|'('
name|'message'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'isinstance'
op|'('
name|'message'
op|','
name|'unicode'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'message'
op|'='
name|'message'
op|'.'
name|'encode'
op|'('
string|'"utf-8"'
op|')'
newline|'\n'
dedent|''
name|'assert'
name|'isinstance'
op|'('
name|'message'
op|','
name|'str'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stream'
op|'.'
name|'write'
op|'('
string|'"\\x00"'
op|'+'
name|'message'
op|'+'
string|'"\\xff"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|receive_message
dedent|''
name|'def'
name|'receive_message'
op|'('
name|'self'
op|','
name|'callback'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Calls callback when the browser calls send() on this Web Socket."""'
newline|'\n'
name|'callback'
op|'='
name|'self'
op|'.'
name|'async_callback'
op|'('
name|'callback'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stream'
op|'.'
name|'read_bytes'
op|'('
nl|'\n'
number|'1'
op|','
name|'functools'
op|'.'
name|'partial'
op|'('
name|'self'
op|'.'
name|'_on_frame_type'
op|','
name|'callback'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|close
dedent|''
name|'def'
name|'close'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Closes this Web Socket.\n\n        The browser will receive the onclose event for the open web socket\n        when this method is called.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'stream'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|async_callback
dedent|''
name|'def'
name|'async_callback'
op|'('
name|'self'
op|','
name|'callback'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Wrap callbacks with this if they are used on asynchronous requests.\n\n        Catches exceptions properly and closes this Web Socket if an exception\n        is uncaught.\n        """'
newline|'\n'
name|'if'
name|'args'
name|'or'
name|'kwargs'
op|':'
newline|'\n'
indent|'            '
name|'callback'
op|'='
name|'functools'
op|'.'
name|'partial'
op|'('
name|'callback'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
DECL|function|wrapper
dedent|''
name|'def'
name|'wrapper'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'callback'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'_log'
op|'.'
name|'error'
op|'('
string|'"Uncaught exception in %s"'
op|','
nl|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'path'
op|','
name|'exc_info'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stream'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'wrapper'
newline|'\n'
nl|'\n'
DECL|member|_on_frame_type
dedent|''
name|'def'
name|'_on_frame_type'
op|'('
name|'self'
op|','
name|'callback'
op|','
name|'byte'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'ord'
op|'('
name|'byte'
op|')'
op|'&'
number|'0x80'
op|'=='
number|'0x80'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|'"Length-encoded format not yet supported"'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stream'
op|'.'
name|'read_until'
op|'('
nl|'\n'
string|'"\\xff"'
op|','
name|'functools'
op|'.'
name|'partial'
op|'('
name|'self'
op|'.'
name|'_on_end_delimiter'
op|','
name|'callback'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_on_end_delimiter
dedent|''
name|'def'
name|'_on_end_delimiter'
op|'('
name|'self'
op|','
name|'callback'
op|','
name|'frame'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'callback'
op|'('
name|'frame'
op|'['
op|':'
op|'-'
number|'1'
op|']'
op|'.'
name|'decode'
op|'('
string|'"utf-8"'
op|','
string|'"replace"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_not_supported
dedent|''
name|'def'
name|'_not_supported'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'Exception'
op|'('
string|'"Method not supported for Web Sockets"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'method'
name|'in'
op|'['
string|'"write"'
op|','
string|'"redirect"'
op|','
string|'"set_header"'
op|','
string|'"send_error"'
op|','
string|'"set_cookie"'
op|','
nl|'\n'
string|'"set_status"'
op|','
string|'"flush"'
op|','
string|'"finish"'
op|']'
op|':'
newline|'\n'
indent|'    '
name|'setattr'
op|'('
name|'WebSocketHandler'
op|','
name|'method'
op|','
name|'WebSocketHandler'
op|'.'
name|'_not_supported'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
