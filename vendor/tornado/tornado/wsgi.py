begin_unit
comment|'#!/usr/bin/env python'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Copyright 2009 Facebook'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'# not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'# a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#     http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'# License for the specific language governing permissions and limitations'
nl|'\n'
comment|'# under the License.'
nl|'\n'
nl|'\n'
string|'"""WSGI support for the Tornado web framework.\n\nWe export WSGIApplication, which is very similar to web.Application, except\nno asynchronous methods are supported (since WSGI does not support\nnon-blocking requests properly). If you call self.flush() or other\nasynchronous methods in your request handlers running in a WSGIApplication,\nwe throw an exception.\n\nExample usage:\n\n    import tornado.web\n    import tornado.wsgi\n    import wsgiref.simple_server\n\n    class MainHandler(tornado.web.RequestHandler):\n        def get(self):\n            self.write("Hello, world")\n\n    if __name__ == "__main__":\n        application = tornado.wsgi.WSGIApplication([\n            (r"/", MainHandler),\n        ])\n        server = wsgiref.simple_server.make_server(\'\', 8888, application)\n        server.serve_forever()\n\nSee the \'appengine\' demo for an example of using this module to run\na Tornado app on Google AppEngine.\n\nSince no asynchronous methods are available for WSGI applications, the\nhttpclient and auth modules are both not available for WSGI applications.\n\nWe also export WSGIContainer, which lets you run other WSGI-compatible\nframeworks on the Tornado HTTP server and I/O loop. See WSGIContainer for\ndetails and documentation.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'cgi'
newline|'\n'
name|'import'
name|'cStringIO'
newline|'\n'
name|'import'
name|'escape'
newline|'\n'
name|'import'
name|'httplib'
newline|'\n'
name|'import'
name|'logging'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'urllib'
newline|'\n'
name|'import'
name|'web'
newline|'\n'
nl|'\n'
DECL|variable|_log
name|'_log'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|"'tornado.wsgi'"
op|')'
newline|'\n'
nl|'\n'
DECL|class|WSGIApplication
name|'class'
name|'WSGIApplication'
op|'('
name|'web'
op|'.'
name|'Application'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""A WSGI-equivalent of web.Application.\n\n    We support the same interface, but handlers running in a WSGIApplication\n    do not support flush() or asynchronous methods.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'handlers'
op|'='
name|'None'
op|','
name|'default_host'
op|'='
string|'""'
op|','
op|'**'
name|'settings'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'web'
op|'.'
name|'Application'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'handlers'
op|','
name|'default_host'
op|','
name|'transforms'
op|'='
op|'['
op|']'
op|','
nl|'\n'
name|'wsgi'
op|'='
name|'True'
op|','
op|'**'
name|'settings'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'environ'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'handler'
op|'='
name|'web'
op|'.'
name|'Application'
op|'.'
name|'__call__'
op|'('
name|'self'
op|','
name|'HTTPRequest'
op|'('
name|'environ'
op|')'
op|')'
newline|'\n'
name|'assert'
name|'handler'
op|'.'
name|'_finished'
newline|'\n'
name|'status'
op|'='
name|'str'
op|'('
name|'handler'
op|'.'
name|'_status_code'
op|')'
op|'+'
string|'" "'
op|'+'
name|'httplib'
op|'.'
name|'responses'
op|'['
name|'handler'
op|'.'
name|'_status_code'
op|']'
newline|'\n'
name|'headers'
op|'='
name|'handler'
op|'.'
name|'_headers'
op|'.'
name|'items'
op|'('
op|')'
newline|'\n'
name|'for'
name|'cookie_dict'
name|'in'
name|'getattr'
op|'('
name|'handler'
op|','
string|'"_new_cookies"'
op|','
op|'['
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'cookie'
name|'in'
name|'cookie_dict'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'headers'
op|'.'
name|'append'
op|'('
op|'('
string|'"Set-Cookie"'
op|','
name|'cookie'
op|'.'
name|'OutputString'
op|'('
name|'None'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'start_response'
op|'('
name|'status'
op|','
name|'headers'
op|')'
newline|'\n'
name|'return'
name|'handler'
op|'.'
name|'_write_buffer'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HTTPRequest
dedent|''
dedent|''
name|'class'
name|'HTTPRequest'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Mimics httpserver.HTTPRequest for WSGI applications."""'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'environ'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Parses the given WSGI environ to construct the request."""'
newline|'\n'
name|'self'
op|'.'
name|'method'
op|'='
name|'environ'
op|'['
string|'"REQUEST_METHOD"'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'path'
op|'='
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'environ'
op|'.'
name|'get'
op|'('
string|'"SCRIPT_NAME"'
op|','
string|'""'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'path'
op|'+='
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'environ'
op|'.'
name|'get'
op|'('
string|'"PATH_INFO"'
op|','
string|'""'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'uri'
op|'='
name|'self'
op|'.'
name|'path'
newline|'\n'
name|'self'
op|'.'
name|'arguments'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'query'
op|'='
name|'environ'
op|'.'
name|'get'
op|'('
string|'"QUERY_STRING"'
op|','
string|'""'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'query'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'uri'
op|'+='
string|'"?"'
op|'+'
name|'self'
op|'.'
name|'query'
newline|'\n'
name|'arguments'
op|'='
name|'cgi'
op|'.'
name|'parse_qs'
op|'('
name|'self'
op|'.'
name|'query'
op|')'
newline|'\n'
name|'for'
name|'name'
op|','
name|'values'
name|'in'
name|'arguments'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'values'
op|'='
op|'['
name|'v'
name|'for'
name|'v'
name|'in'
name|'values'
name|'if'
name|'v'
op|']'
newline|'\n'
name|'if'
name|'values'
op|':'
name|'self'
op|'.'
name|'arguments'
op|'['
name|'name'
op|']'
op|'='
name|'values'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'version'
op|'='
string|'"HTTP/1.1"'
newline|'\n'
name|'self'
op|'.'
name|'headers'
op|'='
name|'HTTPHeaders'
op|'('
op|')'
newline|'\n'
name|'if'
name|'environ'
op|'.'
name|'get'
op|'('
string|'"CONTENT_TYPE"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'headers'
op|'['
string|'"Content-Type"'
op|']'
op|'='
name|'environ'
op|'['
string|'"CONTENT_TYPE"'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'environ'
op|'.'
name|'get'
op|'('
string|'"CONTENT_LENGTH"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'headers'
op|'['
string|'"Content-Length"'
op|']'
op|'='
name|'int'
op|'('
name|'environ'
op|'['
string|'"CONTENT_LENGTH"'
op|']'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'key'
name|'in'
name|'environ'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'key'
op|'.'
name|'startswith'
op|'('
string|'"HTTP_"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'headers'
op|'['
name|'key'
op|'['
number|'5'
op|':'
op|']'
op|'.'
name|'replace'
op|'('
string|'"_"'
op|','
string|'"-"'
op|')'
op|']'
op|'='
name|'environ'
op|'['
name|'key'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'self'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|'"Content-Length"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'body'
op|'='
name|'environ'
op|'['
string|'"wsgi.input"'
op|']'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'body'
op|'='
string|'""'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'protocol'
op|'='
name|'environ'
op|'['
string|'"wsgi.url_scheme"'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'remote_ip'
op|'='
name|'environ'
op|'.'
name|'get'
op|'('
string|'"REMOTE_ADDR"'
op|','
string|'""'
op|')'
newline|'\n'
name|'if'
name|'environ'
op|'.'
name|'get'
op|'('
string|'"HTTP_HOST"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'host'
op|'='
name|'environ'
op|'['
string|'"HTTP_HOST"'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'host'
op|'='
name|'environ'
op|'['
string|'"SERVER_NAME"'
op|']'
newline|'\n'
nl|'\n'
comment|'# Parse request body'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'files'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'content_type'
op|'='
name|'self'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|'"Content-Type"'
op|','
string|'""'
op|')'
newline|'\n'
name|'if'
name|'content_type'
op|'.'
name|'startswith'
op|'('
string|'"application/x-www-form-urlencoded"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'name'
op|','
name|'values'
name|'in'
name|'cgi'
op|'.'
name|'parse_qs'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'arguments'
op|'.'
name|'setdefault'
op|'('
name|'name'
op|','
op|'['
op|']'
op|')'
op|'.'
name|'extend'
op|'('
name|'values'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'content_type'
op|'.'
name|'startswith'
op|'('
string|'"multipart/form-data"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'boundary'
op|'='
name|'content_type'
op|'['
number|'30'
op|':'
op|']'
newline|'\n'
name|'if'
name|'boundary'
op|':'
name|'self'
op|'.'
name|'_parse_mime_body'
op|'('
name|'boundary'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_start_time'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_finish_time'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|supports_http_1_1
dedent|''
name|'def'
name|'supports_http_1_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns True if this request supports HTTP/1.1 semantics"""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'version'
op|'=='
string|'"HTTP/1.1"'
newline|'\n'
nl|'\n'
DECL|member|full_url
dedent|''
name|'def'
name|'full_url'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Reconstructs the full URL for this request."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'protocol'
op|'+'
string|'"://"'
op|'+'
name|'self'
op|'.'
name|'host'
op|'+'
name|'self'
op|'.'
name|'uri'
newline|'\n'
nl|'\n'
DECL|member|request_time
dedent|''
name|'def'
name|'request_time'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns the amount of time it took for this request to execute."""'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_finish_time'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'self'
op|'.'
name|'_start_time'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_finish_time'
op|'-'
name|'self'
op|'.'
name|'_start_time'
newline|'\n'
nl|'\n'
DECL|member|_parse_mime_body
dedent|''
dedent|''
name|'def'
name|'_parse_mime_body'
op|'('
name|'self'
op|','
name|'boundary'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'body'
op|'.'
name|'endswith'
op|'('
string|'"\\r\\n"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'footer_length'
op|'='
name|'len'
op|'('
name|'boundary'
op|')'
op|'+'
number|'6'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'footer_length'
op|'='
name|'len'
op|'('
name|'boundary'
op|')'
op|'+'
number|'4'
newline|'\n'
dedent|''
name|'parts'
op|'='
name|'self'
op|'.'
name|'body'
op|'['
op|':'
op|'-'
name|'footer_length'
op|']'
op|'.'
name|'split'
op|'('
string|'"--"'
op|'+'
name|'boundary'
op|'+'
string|'"\\r\\n"'
op|')'
newline|'\n'
name|'for'
name|'part'
name|'in'
name|'parts'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'part'
op|':'
name|'continue'
newline|'\n'
name|'eoh'
op|'='
name|'part'
op|'.'
name|'find'
op|'('
string|'"\\r\\n\\r\\n"'
op|')'
newline|'\n'
name|'if'
name|'eoh'
op|'=='
op|'-'
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'_log'
op|'.'
name|'warning'
op|'('
string|'"multipart/form-data missing headers"'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'headers'
op|'='
name|'HTTPHeaders'
op|'.'
name|'parse'
op|'('
name|'part'
op|'['
op|':'
name|'eoh'
op|']'
op|')'
newline|'\n'
name|'name_header'
op|'='
name|'headers'
op|'.'
name|'get'
op|'('
string|'"Content-Disposition"'
op|','
string|'""'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'name_header'
op|'.'
name|'startswith'
op|'('
string|'"form-data;"'
op|')'
name|'or'
name|'not'
name|'part'
op|'.'
name|'endswith'
op|'('
string|'"\\r\\n"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'_log'
op|'.'
name|'warning'
op|'('
string|'"Invalid multipart/form-data"'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'value'
op|'='
name|'part'
op|'['
name|'eoh'
op|'+'
number|'4'
op|':'
op|'-'
number|'2'
op|']'
newline|'\n'
name|'name_values'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'name_part'
name|'in'
name|'name_header'
op|'['
number|'10'
op|':'
op|']'
op|'.'
name|'split'
op|'('
string|'";"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'name'
op|','
name|'name_value'
op|'='
name|'name_part'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'split'
op|'('
string|'"="'
op|','
number|'1'
op|')'
newline|'\n'
name|'name_values'
op|'['
name|'name'
op|']'
op|'='
name|'name_value'
op|'.'
name|'strip'
op|'('
string|'\'"\''
op|')'
op|'.'
name|'decode'
op|'('
string|'"utf-8"'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'name_values'
op|'.'
name|'get'
op|'('
string|'"name"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'_log'
op|'.'
name|'warning'
op|'('
string|'"multipart/form-data value missing name"'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'name'
op|'='
name|'name_values'
op|'['
string|'"name"'
op|']'
newline|'\n'
name|'if'
name|'name_values'
op|'.'
name|'get'
op|'('
string|'"filename"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'ctype'
op|'='
name|'headers'
op|'.'
name|'get'
op|'('
string|'"Content-Type"'
op|','
string|'"application/unknown"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'files'
op|'.'
name|'setdefault'
op|'('
name|'name'
op|','
op|'['
op|']'
op|')'
op|'.'
name|'append'
op|'('
name|'dict'
op|'('
nl|'\n'
name|'filename'
op|'='
name|'name_values'
op|'['
string|'"filename"'
op|']'
op|','
name|'body'
op|'='
name|'value'
op|','
nl|'\n'
name|'content_type'
op|'='
name|'ctype'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'arguments'
op|'.'
name|'setdefault'
op|'('
name|'name'
op|','
op|'['
op|']'
op|')'
op|'.'
name|'append'
op|'('
name|'value'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|WSGIContainer
dedent|''
dedent|''
dedent|''
dedent|''
name|'class'
name|'WSGIContainer'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Makes a WSGI-compatible function runnable on Tornado\'s HTTP server.\n\n    Wrap a WSGI function in a WSGIContainer and pass it to HTTPServer to\n    run it. For example:\n\n        def simple_app(environ, start_response):\n            status = "200 OK"\n            response_headers = [("Content-type", "text/plain")]\n            start_response(status, response_headers)\n            return ["Hello world!\\n"]\n\n        container = tornado.wsgi.WSGIContainer(simple_app)\n        http_server = tornado.httpserver.HTTPServer(container)\n        http_server.listen(8888)\n        tornado.ioloop.IOLoop.instance().start()\n\n    This class is intended to let other frameworks (Django, web.py, etc)\n    run on the Tornado HTTP server and I/O loop. It has not yet been\n    thoroughly tested in production.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'wsgi_application'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'wsgi_application'
op|'='
name|'wsgi_application'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'response'
op|'='
op|'['
op|']'
newline|'\n'
DECL|function|start_response
name|'def'
name|'start_response'
op|'('
name|'status'
op|','
name|'response_headers'
op|','
name|'exc_info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'data'
op|'['
string|'"status"'
op|']'
op|'='
name|'status'
newline|'\n'
name|'data'
op|'['
string|'"headers"'
op|']'
op|'='
name|'response_headers'
newline|'\n'
name|'return'
name|'response'
op|'.'
name|'append'
newline|'\n'
dedent|''
name|'response'
op|'.'
name|'extend'
op|'('
name|'self'
op|'.'
name|'wsgi_application'
op|'('
nl|'\n'
name|'WSGIContainer'
op|'.'
name|'environ'
op|'('
name|'request'
op|')'
op|','
name|'start_response'
op|')'
op|')'
newline|'\n'
name|'body'
op|'='
string|'""'
op|'.'
name|'join'
op|'('
name|'response'
op|')'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'response'
op|','
string|'"close"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'response'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'data'
op|':'
name|'raise'
name|'Exception'
op|'('
string|'"WSGI app did not call start_response"'
op|')'
newline|'\n'
nl|'\n'
name|'status_code'
op|'='
name|'int'
op|'('
name|'data'
op|'['
string|'"status"'
op|']'
op|'.'
name|'split'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'data'
op|'['
string|'"headers"'
op|']'
newline|'\n'
name|'header_set'
op|'='
name|'set'
op|'('
name|'k'
op|'.'
name|'lower'
op|'('
op|')'
name|'for'
op|'('
name|'k'
op|','
name|'v'
op|')'
name|'in'
name|'headers'
op|')'
newline|'\n'
name|'body'
op|'='
name|'escape'
op|'.'
name|'utf8'
op|'('
name|'body'
op|')'
newline|'\n'
name|'if'
string|'"content-length"'
name|'not'
name|'in'
name|'header_set'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'.'
name|'append'
op|'('
op|'('
string|'"Content-Length"'
op|','
name|'str'
op|'('
name|'len'
op|'('
name|'body'
op|')'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
string|'"content-type"'
name|'not'
name|'in'
name|'header_set'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'.'
name|'append'
op|'('
op|'('
string|'"Content-Type"'
op|','
string|'"text/html; charset=UTF-8"'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
string|'"server"'
name|'not'
name|'in'
name|'header_set'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'.'
name|'append'
op|'('
op|'('
string|'"Server"'
op|','
string|'"TornadoServer/0.1"'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'parts'
op|'='
op|'['
string|'"HTTP/1.1 "'
op|'+'
name|'data'
op|'['
string|'"status"'
op|']'
op|'+'
string|'"\\r\\n"'
op|']'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'parts'
op|'.'
name|'append'
op|'('
name|'escape'
op|'.'
name|'utf8'
op|'('
name|'key'
op|')'
op|'+'
string|'": "'
op|'+'
name|'escape'
op|'.'
name|'utf8'
op|'('
name|'value'
op|')'
op|'+'
string|'"\\r\\n"'
op|')'
newline|'\n'
dedent|''
name|'parts'
op|'.'
name|'append'
op|'('
string|'"\\r\\n"'
op|')'
newline|'\n'
name|'parts'
op|'.'
name|'append'
op|'('
name|'body'
op|')'
newline|'\n'
name|'request'
op|'.'
name|'write'
op|'('
string|'""'
op|'.'
name|'join'
op|'('
name|'parts'
op|')'
op|')'
newline|'\n'
name|'request'
op|'.'
name|'finish'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_log'
op|'('
name|'status_code'
op|','
name|'request'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'staticmethod'
newline|'\n'
DECL|member|environ
name|'def'
name|'environ'
op|'('
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'hostport'
op|'='
name|'request'
op|'.'
name|'host'
op|'.'
name|'split'
op|'('
string|'":"'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'hostport'
op|')'
op|'=='
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'host'
op|'='
name|'hostport'
op|'['
number|'0'
op|']'
newline|'\n'
name|'port'
op|'='
name|'int'
op|'('
name|'hostport'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'host'
op|'='
name|'request'
op|'.'
name|'host'
newline|'\n'
name|'port'
op|'='
number|'443'
name|'if'
name|'request'
op|'.'
name|'protocol'
op|'=='
string|'"https"'
name|'else'
number|'80'
newline|'\n'
dedent|''
name|'environ'
op|'='
op|'{'
nl|'\n'
string|'"REQUEST_METHOD"'
op|':'
name|'request'
op|'.'
name|'method'
op|','
nl|'\n'
string|'"SCRIPT_NAME"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"PATH_INFO"'
op|':'
name|'request'
op|'.'
name|'path'
op|','
nl|'\n'
string|'"QUERY_STRING"'
op|':'
name|'request'
op|'.'
name|'query'
op|','
nl|'\n'
string|'"REMOTE_ADDR"'
op|':'
name|'request'
op|'.'
name|'remote_ip'
op|','
nl|'\n'
string|'"SERVER_NAME"'
op|':'
name|'host'
op|','
nl|'\n'
string|'"SERVER_PORT"'
op|':'
name|'port'
op|','
nl|'\n'
string|'"SERVER_PROTOCOL"'
op|':'
name|'request'
op|'.'
name|'version'
op|','
nl|'\n'
string|'"wsgi.version"'
op|':'
op|'('
number|'1'
op|','
number|'0'
op|')'
op|','
nl|'\n'
string|'"wsgi.url_scheme"'
op|':'
name|'request'
op|'.'
name|'protocol'
op|','
nl|'\n'
string|'"wsgi.input"'
op|':'
name|'cStringIO'
op|'.'
name|'StringIO'
op|'('
name|'request'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
string|'"wsgi.errors"'
op|':'
name|'sys'
op|'.'
name|'stderr'
op|','
nl|'\n'
string|'"wsgi.multithread"'
op|':'
name|'False'
op|','
nl|'\n'
string|'"wsgi.multiprocess"'
op|':'
name|'True'
op|','
nl|'\n'
string|'"wsgi.run_once"'
op|':'
name|'False'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'if'
string|'"Content-Type"'
name|'in'
name|'request'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'environ'
op|'['
string|'"CONTENT_TYPE"'
op|']'
op|'='
name|'request'
op|'.'
name|'headers'
op|'['
string|'"Content-Type"'
op|']'
newline|'\n'
dedent|''
name|'if'
string|'"Content-Length"'
name|'in'
name|'request'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'environ'
op|'['
string|'"CONTENT_LENGTH"'
op|']'
op|'='
name|'request'
op|'.'
name|'headers'
op|'['
string|'"Content-Length"'
op|']'
newline|'\n'
dedent|''
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'request'
op|'.'
name|'headers'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'environ'
op|'['
string|'"HTTP_"'
op|'+'
name|'key'
op|'.'
name|'replace'
op|'('
string|'"-"'
op|','
string|'"_"'
op|')'
op|'.'
name|'upper'
op|'('
op|')'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'return'
name|'environ'
newline|'\n'
nl|'\n'
DECL|member|_log
dedent|''
name|'def'
name|'_log'
op|'('
name|'self'
op|','
name|'status_code'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'status_code'
op|'<'
number|'400'
op|':'
newline|'\n'
indent|'            '
name|'log_method'
op|'='
name|'_log'
op|'.'
name|'info'
newline|'\n'
dedent|''
name|'elif'
name|'status_code'
op|'<'
number|'500'
op|':'
newline|'\n'
indent|'            '
name|'log_method'
op|'='
name|'_log'
op|'.'
name|'warning'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'log_method'
op|'='
name|'_log'
op|'.'
name|'error'
newline|'\n'
dedent|''
name|'request_time'
op|'='
number|'1000.0'
op|'*'
name|'request'
op|'.'
name|'request_time'
op|'('
op|')'
newline|'\n'
name|'summary'
op|'='
name|'request'
op|'.'
name|'method'
op|'+'
string|'" "'
op|'+'
name|'request'
op|'.'
name|'uri'
op|'+'
string|'" ("'
op|'+'
name|'request'
op|'.'
name|'remote_ip'
op|'+'
string|'")"'
newline|'\n'
name|'log_method'
op|'('
string|'"%d %s %.2fms"'
op|','
name|'status_code'
op|','
name|'summary'
op|','
name|'request_time'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HTTPHeaders
dedent|''
dedent|''
name|'class'
name|'HTTPHeaders'
op|'('
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""A dictionary that maintains Http-Header-Case for all keys."""'
newline|'\n'
DECL|member|__setitem__
name|'def'
name|'__setitem__'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dict'
op|'.'
name|'__setitem__'
op|'('
name|'self'
op|','
name|'self'
op|'.'
name|'_normalize_name'
op|'('
name|'name'
op|')'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__getitem__
dedent|''
name|'def'
name|'__getitem__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'dict'
op|'.'
name|'__getitem__'
op|'('
name|'self'
op|','
name|'self'
op|'.'
name|'_normalize_name'
op|'('
name|'name'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_normalize_name
dedent|''
name|'def'
name|'_normalize_name'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|'"-"'
op|'.'
name|'join'
op|'('
op|'['
name|'w'
op|'.'
name|'capitalize'
op|'('
op|')'
name|'for'
name|'w'
name|'in'
name|'name'
op|'.'
name|'split'
op|'('
string|'"-"'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|parse
name|'def'
name|'parse'
op|'('
name|'cls'
op|','
name|'headers_string'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
name|'cls'
op|'('
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'headers_string'
op|'.'
name|'splitlines'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'line'
op|':'
newline|'\n'
indent|'                '
name|'name'
op|','
name|'value'
op|'='
name|'line'
op|'.'
name|'split'
op|'('
string|'": "'
op|','
number|'1'
op|')'
newline|'\n'
name|'headers'
op|'['
name|'name'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'headers'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
