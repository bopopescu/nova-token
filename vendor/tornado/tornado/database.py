begin_unit
comment|'#!/usr/bin/env python'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Copyright 2009 Facebook'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Licensed under the Apache License, Version 2.0 (the "License"); you may'
nl|'\n'
comment|'#    not use this file except in compliance with the License. You may obtain'
nl|'\n'
comment|'#    a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#         http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'#    License for the specific language governing permissions and limitations'
nl|'\n'
comment|'#    under the License.'
nl|'\n'
nl|'\n'
string|'"""A lightweight wrapper around MySQLdb."""'
newline|'\n'
nl|'\n'
name|'import'
name|'copy'
newline|'\n'
name|'import'
name|'MySQLdb'
newline|'\n'
name|'import'
name|'MySQLdb'
op|'.'
name|'constants'
newline|'\n'
name|'import'
name|'MySQLdb'
op|'.'
name|'converters'
newline|'\n'
name|'import'
name|'MySQLdb'
op|'.'
name|'cursors'
newline|'\n'
name|'import'
name|'itertools'
newline|'\n'
name|'import'
name|'logging'
newline|'\n'
nl|'\n'
DECL|variable|_log
name|'_log'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|"'tornado.database'"
op|')'
newline|'\n'
nl|'\n'
DECL|class|Connection
name|'class'
name|'Connection'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""A lightweight wrapper around MySQLdb DB-API connections.\n\n    The main value we provide is wrapping rows in a dict/object so that\n    columns can be accessed by name. Typical usage:\n\n        db = database.Connection("localhost", "mydatabase")\n        for article in db.query("SELECT * FROM articles"):\n            print article.title\n\n    Cursors are hidden by the implementation, but other than that, the methods\n    are very similar to the DB-API.\n\n    We explicitly set the timezone to UTC and the character encoding to\n    UTF-8 on all connections to avoid time zone and encoding errors.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'database'
op|','
name|'user'
op|'='
name|'None'
op|','
name|'password'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'host'
op|'='
name|'host'
newline|'\n'
name|'self'
op|'.'
name|'database'
op|'='
name|'database'
newline|'\n'
nl|'\n'
name|'args'
op|'='
name|'dict'
op|'('
name|'conv'
op|'='
name|'CONVERSIONS'
op|','
name|'use_unicode'
op|'='
name|'True'
op|','
name|'charset'
op|'='
string|'"utf8"'
op|','
nl|'\n'
name|'db'
op|'='
name|'database'
op|','
name|'init_command'
op|'='
string|'\'SET time_zone = "+0:00"\''
op|','
nl|'\n'
name|'sql_mode'
op|'='
string|'"TRADITIONAL"'
op|')'
newline|'\n'
name|'if'
name|'user'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'args'
op|'['
string|'"user"'
op|']'
op|'='
name|'user'
newline|'\n'
dedent|''
name|'if'
name|'password'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'args'
op|'['
string|'"passwd"'
op|']'
op|'='
name|'password'
newline|'\n'
nl|'\n'
comment|'# We accept a path to a MySQL socket file or a host(:port) string'
nl|'\n'
dedent|''
name|'if'
string|'"/"'
name|'in'
name|'host'
op|':'
newline|'\n'
indent|'            '
name|'args'
op|'['
string|'"unix_socket"'
op|']'
op|'='
name|'host'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'socket'
op|'='
name|'None'
newline|'\n'
name|'pair'
op|'='
name|'host'
op|'.'
name|'split'
op|'('
string|'":"'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'pair'
op|')'
op|'=='
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'args'
op|'['
string|'"host"'
op|']'
op|'='
name|'pair'
op|'['
number|'0'
op|']'
newline|'\n'
name|'args'
op|'['
string|'"port"'
op|']'
op|'='
name|'int'
op|'('
name|'pair'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'args'
op|'['
string|'"host"'
op|']'
op|'='
name|'host'
newline|'\n'
name|'args'
op|'['
string|'"port"'
op|']'
op|'='
number|'3306'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'_db'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_db_args'
op|'='
name|'args'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'reconnect'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'_log'
op|'.'
name|'error'
op|'('
string|'"Cannot connect to MySQL on %s"'
op|','
name|'self'
op|'.'
name|'host'
op|','
nl|'\n'
name|'exc_info'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__del__
dedent|''
dedent|''
name|'def'
name|'__del__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|close
dedent|''
name|'def'
name|'close'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Closes this database connection."""'
newline|'\n'
name|'if'
name|'getattr'
op|'('
name|'self'
op|','
string|'"_db"'
op|','
name|'None'
op|')'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_db'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_db'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|reconnect
dedent|''
dedent|''
name|'def'
name|'reconnect'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Closes the existing database connection and re-opens it."""'
newline|'\n'
name|'self'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_db'
op|'='
name|'MySQLdb'
op|'.'
name|'connect'
op|'('
op|'**'
name|'self'
op|'.'
name|'_db_args'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_db'
op|'.'
name|'autocommit'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|iter
dedent|''
name|'def'
name|'iter'
op|'('
name|'self'
op|','
name|'query'
op|','
op|'*'
name|'parameters'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns an iterator for the given query and parameters."""'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_db'
name|'is'
name|'None'
op|':'
name|'self'
op|'.'
name|'reconnect'
op|'('
op|')'
newline|'\n'
name|'cursor'
op|'='
name|'MySQLdb'
op|'.'
name|'cursors'
op|'.'
name|'SSCursor'
op|'('
name|'self'
op|'.'
name|'_db'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_execute'
op|'('
name|'cursor'
op|','
name|'query'
op|','
name|'parameters'
op|')'
newline|'\n'
name|'column_names'
op|'='
op|'['
name|'d'
op|'['
number|'0'
op|']'
name|'for'
name|'d'
name|'in'
name|'cursor'
op|'.'
name|'description'
op|']'
newline|'\n'
name|'for'
name|'row'
name|'in'
name|'cursor'
op|':'
newline|'\n'
indent|'                '
name|'yield'
name|'Row'
op|'('
name|'zip'
op|'('
name|'column_names'
op|','
name|'row'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'cursor'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|query
dedent|''
dedent|''
name|'def'
name|'query'
op|'('
name|'self'
op|','
name|'query'
op|','
op|'*'
name|'parameters'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns a row list for the given query and parameters."""'
newline|'\n'
name|'cursor'
op|'='
name|'self'
op|'.'
name|'_cursor'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_execute'
op|'('
name|'cursor'
op|','
name|'query'
op|','
name|'parameters'
op|')'
newline|'\n'
name|'column_names'
op|'='
op|'['
name|'d'
op|'['
number|'0'
op|']'
name|'for'
name|'d'
name|'in'
name|'cursor'
op|'.'
name|'description'
op|']'
newline|'\n'
name|'return'
op|'['
name|'Row'
op|'('
name|'itertools'
op|'.'
name|'izip'
op|'('
name|'column_names'
op|','
name|'row'
op|')'
op|')'
name|'for'
name|'row'
name|'in'
name|'cursor'
op|']'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'cursor'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|get
dedent|''
dedent|''
name|'def'
name|'get'
op|'('
name|'self'
op|','
name|'query'
op|','
op|'*'
name|'parameters'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns the first row returned for the given query."""'
newline|'\n'
name|'rows'
op|'='
name|'self'
op|'.'
name|'query'
op|'('
name|'query'
op|','
op|'*'
name|'parameters'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'rows'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'elif'
name|'len'
op|'('
name|'rows'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|'"Multiple rows returned for Database.get() query"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'rows'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|member|execute
dedent|''
dedent|''
name|'def'
name|'execute'
op|'('
name|'self'
op|','
name|'query'
op|','
op|'*'
name|'parameters'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Executes the given query, returning the lastrowid from the query."""'
newline|'\n'
name|'cursor'
op|'='
name|'self'
op|'.'
name|'_cursor'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_execute'
op|'('
name|'cursor'
op|','
name|'query'
op|','
name|'parameters'
op|')'
newline|'\n'
name|'return'
name|'cursor'
op|'.'
name|'lastrowid'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'cursor'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|executemany
dedent|''
dedent|''
name|'def'
name|'executemany'
op|'('
name|'self'
op|','
name|'query'
op|','
name|'parameters'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Executes the given query against all the given param sequences.\n\n        We return the lastrowid from the query.\n        """'
newline|'\n'
name|'cursor'
op|'='
name|'self'
op|'.'
name|'_cursor'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'cursor'
op|'.'
name|'executemany'
op|'('
name|'query'
op|','
name|'parameters'
op|')'
newline|'\n'
name|'return'
name|'cursor'
op|'.'
name|'lastrowid'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'cursor'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cursor
dedent|''
dedent|''
name|'def'
name|'_cursor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'_db'
name|'is'
name|'None'
op|':'
name|'self'
op|'.'
name|'reconnect'
op|'('
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_db'
op|'.'
name|'cursor'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_execute
dedent|''
name|'def'
name|'_execute'
op|'('
name|'self'
op|','
name|'cursor'
op|','
name|'query'
op|','
name|'parameters'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'cursor'
op|'.'
name|'execute'
op|'('
name|'query'
op|','
name|'parameters'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OperationalError'
op|':'
newline|'\n'
indent|'            '
name|'_log'
op|'.'
name|'error'
op|'('
string|'"Error connecting to MySQL on %s"'
op|','
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'raise'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Row
dedent|''
dedent|''
dedent|''
name|'class'
name|'Row'
op|'('
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""A dict that allows for object-like property access syntax."""'
newline|'\n'
DECL|member|__getattr__
name|'def'
name|'__getattr__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'['
name|'name'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'AttributeError'
op|'('
name|'name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# Fix the access conversions to properly recognize unicode/binary'
nl|'\n'
DECL|variable|FIELD_TYPE
dedent|''
dedent|''
dedent|''
name|'FIELD_TYPE'
op|'='
name|'MySQLdb'
op|'.'
name|'constants'
op|'.'
name|'FIELD_TYPE'
newline|'\n'
DECL|variable|FLAG
name|'FLAG'
op|'='
name|'MySQLdb'
op|'.'
name|'constants'
op|'.'
name|'FLAG'
newline|'\n'
DECL|variable|CONVERSIONS
name|'CONVERSIONS'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'MySQLdb'
op|'.'
name|'converters'
op|'.'
name|'conversions'
op|')'
newline|'\n'
name|'for'
name|'field_type'
name|'in'
op|'['
name|'FIELD_TYPE'
op|'.'
name|'BLOB'
op|','
name|'FIELD_TYPE'
op|'.'
name|'STRING'
op|','
name|'FIELD_TYPE'
op|'.'
name|'VAR_STRING'
op|']'
op|'+'
op|'('
op|'['
name|'FIELD_TYPE'
op|'.'
name|'VARCHAR'
op|']'
name|'if'
string|"'VARCHAR'"
name|'in'
name|'vars'
op|'('
name|'FIELD_TYPE'
op|')'
name|'else'
op|'['
op|']'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'CONVERSIONS'
op|'['
name|'field_type'
op|']'
op|'.'
name|'insert'
op|'('
number|'0'
op|','
op|'('
name|'FLAG'
op|'.'
name|'BINARY'
op|','
name|'str'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# Alias some common MySQL exceptions'
nl|'\n'
DECL|variable|IntegrityError
dedent|''
name|'IntegrityError'
op|'='
name|'MySQLdb'
op|'.'
name|'IntegrityError'
newline|'\n'
DECL|variable|OperationalError
name|'OperationalError'
op|'='
name|'MySQLdb'
op|'.'
name|'OperationalError'
newline|'\n'
endmarker|''
end_unit
