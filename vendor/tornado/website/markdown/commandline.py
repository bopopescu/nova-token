begin_unit
string|'"""\nCOMMAND-LINE SPECIFIC STUFF\n=============================================================================\n\nThe rest of the code is specifically for handling the case where Python\nMarkdown is called from the command line.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'markdown'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'logging'
newline|'\n'
name|'from'
name|'logging'
name|'import'
name|'DEBUG'
op|','
name|'INFO'
op|','
name|'WARN'
op|','
name|'ERROR'
op|','
name|'CRITICAL'
newline|'\n'
nl|'\n'
DECL|variable|EXECUTABLE_NAME_FOR_USAGE
name|'EXECUTABLE_NAME_FOR_USAGE'
op|'='
string|'"python markdown.py"'
newline|'\n'
string|'""" The name used in the usage statement displayed for python versions < 2.3.\n(With python 2.3 and higher the usage statement is generated by optparse\nand uses the actual name of the executable called.) """'
newline|'\n'
nl|'\n'
name|'OPTPARSE_WARNING'
op|'='
string|'"""\nPython 2.3 or higher required for advanced command line options.\nFor lower versions of Python use:\n\n      %s INPUT_FILE > OUTPUT_FILE\n\n"""'
op|'%'
name|'EXECUTABLE_NAME_FOR_USAGE'
newline|'\n'
nl|'\n'
DECL|function|parse_options
name|'def'
name|'parse_options'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Define and parse `optparse` options for command-line usage.\n    """'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'optparse'
op|'='
name|'__import__'
op|'('
string|'"optparse"'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'len'
op|'('
name|'sys'
op|'.'
name|'argv'
op|')'
op|'=='
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
string|"'input'"
op|':'
name|'sys'
op|'.'
name|'argv'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'output'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'safe'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'extensions'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|"'encoding'"
op|':'
name|'None'
op|'}'
op|','
name|'CRITICAL'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'OPTPARSE_WARNING'
newline|'\n'
name|'return'
name|'None'
op|','
name|'None'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'parser'
op|'='
name|'optparse'
op|'.'
name|'OptionParser'
op|'('
name|'usage'
op|'='
string|'"%prog INPUTFILE [options]"'
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'add_option'
op|'('
string|'"-f"'
op|','
string|'"--file"'
op|','
name|'dest'
op|'='
string|'"filename"'
op|','
name|'default'
op|'='
name|'sys'
op|'.'
name|'stdout'
op|','
nl|'\n'
name|'help'
op|'='
string|'"write output to OUTPUT_FILE"'
op|','
nl|'\n'
name|'metavar'
op|'='
string|'"OUTPUT_FILE"'
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'add_option'
op|'('
string|'"-e"'
op|','
string|'"--encoding"'
op|','
name|'dest'
op|'='
string|'"encoding"'
op|','
nl|'\n'
name|'help'
op|'='
string|'"encoding for input and output files"'
op|','
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'add_option'
op|'('
string|'"-q"'
op|','
string|'"--quiet"'
op|','
name|'default'
op|'='
name|'CRITICAL'
op|','
nl|'\n'
name|'action'
op|'='
string|'"store_const"'
op|','
name|'const'
op|'='
name|'CRITICAL'
op|'+'
number|'10'
op|','
name|'dest'
op|'='
string|'"verbose"'
op|','
nl|'\n'
name|'help'
op|'='
string|'"suppress all messages"'
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'add_option'
op|'('
string|'"-v"'
op|','
string|'"--verbose"'
op|','
nl|'\n'
name|'action'
op|'='
string|'"store_const"'
op|','
name|'const'
op|'='
name|'INFO'
op|','
name|'dest'
op|'='
string|'"verbose"'
op|','
nl|'\n'
name|'help'
op|'='
string|'"print info messages"'
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'add_option'
op|'('
string|'"-s"'
op|','
string|'"--safe"'
op|','
name|'dest'
op|'='
string|'"safe"'
op|','
name|'default'
op|'='
name|'False'
op|','
nl|'\n'
name|'metavar'
op|'='
string|'"SAFE_MODE"'
op|','
nl|'\n'
name|'help'
op|'='
string|'"safe mode (\'replace\', \'remove\' or \'escape\'  user\'s HTML tag)"'
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'add_option'
op|'('
string|'"-o"'
op|','
string|'"--output_format"'
op|','
name|'dest'
op|'='
string|'"output_format"'
op|','
nl|'\n'
name|'default'
op|'='
string|"'xhtml1'"
op|','
name|'metavar'
op|'='
string|'"OUTPUT_FORMAT"'
op|','
nl|'\n'
name|'help'
op|'='
string|'"Format of output. One of \'xhtml1\' (default) or \'html4\'."'
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'add_option'
op|'('
string|'"--noisy"'
op|','
nl|'\n'
name|'action'
op|'='
string|'"store_const"'
op|','
name|'const'
op|'='
name|'DEBUG'
op|','
name|'dest'
op|'='
string|'"verbose"'
op|','
nl|'\n'
name|'help'
op|'='
string|'"print debug messages"'
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'add_option'
op|'('
string|'"-x"'
op|','
string|'"--extension"'
op|','
name|'action'
op|'='
string|'"append"'
op|','
name|'dest'
op|'='
string|'"extensions"'
op|','
nl|'\n'
name|'help'
op|'='
string|'"load extension EXTENSION"'
op|','
name|'metavar'
op|'='
string|'"EXTENSION"'
op|')'
newline|'\n'
nl|'\n'
op|'('
name|'options'
op|','
name|'args'
op|')'
op|'='
name|'parser'
op|'.'
name|'parse_args'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'len'
op|'('
name|'args'
op|')'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'        '
name|'parser'
op|'.'
name|'print_help'
op|'('
op|')'
newline|'\n'
name|'return'
name|'None'
op|','
name|'None'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'input_file'
op|'='
name|'args'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'options'
op|'.'
name|'extensions'
op|':'
newline|'\n'
indent|'        '
name|'options'
op|'.'
name|'extensions'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
op|'{'
string|"'input'"
op|':'
name|'input_file'
op|','
nl|'\n'
string|"'output'"
op|':'
name|'options'
op|'.'
name|'filename'
op|','
nl|'\n'
string|"'safe_mode'"
op|':'
name|'options'
op|'.'
name|'safe'
op|','
nl|'\n'
string|"'extensions'"
op|':'
name|'options'
op|'.'
name|'extensions'
op|','
nl|'\n'
string|"'encoding'"
op|':'
name|'options'
op|'.'
name|'encoding'
op|','
nl|'\n'
string|"'output_format'"
op|':'
name|'options'
op|'.'
name|'output_format'
op|'}'
op|','
name|'options'
op|'.'
name|'verbose'
newline|'\n'
nl|'\n'
DECL|function|run
dedent|''
name|'def'
name|'run'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Run Markdown from the command line."""'
newline|'\n'
nl|'\n'
comment|'# Parse options and adjust logging level if necessary'
nl|'\n'
name|'options'
op|','
name|'logging_level'
op|'='
name|'parse_options'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'options'
op|':'
name|'sys'
op|'.'
name|'exit'
op|'('
number|'0'
op|')'
newline|'\n'
name|'if'
name|'logging_level'
op|':'
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|"'MARKDOWN'"
op|')'
op|'.'
name|'setLevel'
op|'('
name|'logging_level'
op|')'
newline|'\n'
nl|'\n'
comment|'# Run'
nl|'\n'
name|'markdown'
op|'.'
name|'markdownFromFile'
op|'('
op|'**'
name|'options'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
