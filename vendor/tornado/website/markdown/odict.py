begin_unit
DECL|class|OrderedDict
name|'class'
name|'OrderedDict'
op|'('
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A dictionary that keeps its keys in the order in which they\'re inserted.\n    \n    Copied from Django\'s SortedDict with some modifications.\n\n    """'
newline|'\n'
DECL|member|__new__
name|'def'
name|'__new__'
op|'('
name|'cls'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'instance'
op|'='
name|'super'
op|'('
name|'OrderedDict'
op|','
name|'cls'
op|')'
op|'.'
name|'__new__'
op|'('
name|'cls'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'keyOrder'
op|'='
op|'['
op|']'
newline|'\n'
name|'return'
name|'instance'
newline|'\n'
nl|'\n'
DECL|member|__init__
dedent|''
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'data'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'data'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'data'
op|'='
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'super'
op|'('
name|'OrderedDict'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'data'
op|')'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'data'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'keyOrder'
op|'='
name|'data'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'keyOrder'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'data'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'key'
name|'not'
name|'in'
name|'self'
op|'.'
name|'keyOrder'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'keyOrder'
op|'.'
name|'append'
op|'('
name|'key'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__deepcopy__
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'__deepcopy__'
op|'('
name|'self'
op|','
name|'memo'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'from'
name|'copy'
name|'import'
name|'deepcopy'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'__class__'
op|'('
op|'['
op|'('
name|'key'
op|','
name|'deepcopy'
op|'('
name|'value'
op|','
name|'memo'
op|')'
op|')'
nl|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'self'
op|'.'
name|'iteritems'
op|'('
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__setitem__
dedent|''
name|'def'
name|'__setitem__'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'OrderedDict'
op|','
name|'self'
op|')'
op|'.'
name|'__setitem__'
op|'('
name|'key'
op|','
name|'value'
op|')'
newline|'\n'
name|'if'
name|'key'
name|'not'
name|'in'
name|'self'
op|'.'
name|'keyOrder'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'keyOrder'
op|'.'
name|'append'
op|'('
name|'key'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__delitem__
dedent|''
dedent|''
name|'def'
name|'__delitem__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'OrderedDict'
op|','
name|'self'
op|')'
op|'.'
name|'__delitem__'
op|'('
name|'key'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'keyOrder'
op|'.'
name|'remove'
op|'('
name|'key'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'k'
name|'in'
name|'self'
op|'.'
name|'keyOrder'
op|':'
newline|'\n'
indent|'            '
name|'yield'
name|'k'
newline|'\n'
nl|'\n'
DECL|member|pop
dedent|''
dedent|''
name|'def'
name|'pop'
op|'('
name|'self'
op|','
name|'k'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'super'
op|'('
name|'OrderedDict'
op|','
name|'self'
op|')'
op|'.'
name|'pop'
op|'('
name|'k'
op|','
op|'*'
name|'args'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'keyOrder'
op|'.'
name|'remove'
op|'('
name|'k'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
comment|"# Key wasn't in the dictionary in the first place. No problem."
nl|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|member|popitem
dedent|''
name|'def'
name|'popitem'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'super'
op|'('
name|'OrderedDict'
op|','
name|'self'
op|')'
op|'.'
name|'popitem'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'keyOrder'
op|'.'
name|'remove'
op|'('
name|'result'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|member|items
dedent|''
name|'def'
name|'items'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'zip'
op|'('
name|'self'
op|'.'
name|'keyOrder'
op|','
name|'self'
op|'.'
name|'values'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|iteritems
dedent|''
name|'def'
name|'iteritems'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'key'
name|'in'
name|'self'
op|'.'
name|'keyOrder'
op|':'
newline|'\n'
indent|'            '
name|'yield'
name|'key'
op|','
name|'super'
op|'('
name|'OrderedDict'
op|','
name|'self'
op|')'
op|'.'
name|'__getitem__'
op|'('
name|'key'
op|')'
newline|'\n'
nl|'\n'
DECL|member|keys
dedent|''
dedent|''
name|'def'
name|'keys'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'keyOrder'
op|'['
op|':'
op|']'
newline|'\n'
nl|'\n'
DECL|member|iterkeys
dedent|''
name|'def'
name|'iterkeys'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'iter'
op|'('
name|'self'
op|'.'
name|'keyOrder'
op|')'
newline|'\n'
nl|'\n'
DECL|member|values
dedent|''
name|'def'
name|'values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
name|'super'
op|'('
name|'OrderedDict'
op|','
name|'self'
op|')'
op|'.'
name|'__getitem__'
op|'('
name|'k'
op|')'
name|'for'
name|'k'
name|'in'
name|'self'
op|'.'
name|'keyOrder'
op|']'
newline|'\n'
nl|'\n'
DECL|member|itervalues
dedent|''
name|'def'
name|'itervalues'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'key'
name|'in'
name|'self'
op|'.'
name|'keyOrder'
op|':'
newline|'\n'
indent|'            '
name|'yield'
name|'super'
op|'('
name|'OrderedDict'
op|','
name|'self'
op|')'
op|'.'
name|'__getitem__'
op|'('
name|'key'
op|')'
newline|'\n'
nl|'\n'
DECL|member|update
dedent|''
dedent|''
name|'def'
name|'update'
op|'('
name|'self'
op|','
name|'dict_'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'dict_'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'__setitem__'
op|'('
name|'k'
op|','
name|'v'
op|')'
newline|'\n'
nl|'\n'
DECL|member|setdefault
dedent|''
dedent|''
name|'def'
name|'setdefault'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'default'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'key'
name|'not'
name|'in'
name|'self'
op|'.'
name|'keyOrder'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'keyOrder'
op|'.'
name|'append'
op|'('
name|'key'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'super'
op|'('
name|'OrderedDict'
op|','
name|'self'
op|')'
op|'.'
name|'setdefault'
op|'('
name|'key'
op|','
name|'default'
op|')'
newline|'\n'
nl|'\n'
DECL|member|value_for_index
dedent|''
name|'def'
name|'value_for_index'
op|'('
name|'self'
op|','
name|'index'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return the value of the item at the given zero-based index."""'
newline|'\n'
name|'return'
name|'self'
op|'['
name|'self'
op|'.'
name|'keyOrder'
op|'['
name|'index'
op|']'
op|']'
newline|'\n'
nl|'\n'
DECL|member|insert
dedent|''
name|'def'
name|'insert'
op|'('
name|'self'
op|','
name|'index'
op|','
name|'key'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Insert the key, value pair before the item with the given index."""'
newline|'\n'
name|'if'
name|'key'
name|'in'
name|'self'
op|'.'
name|'keyOrder'
op|':'
newline|'\n'
indent|'            '
name|'n'
op|'='
name|'self'
op|'.'
name|'keyOrder'
op|'.'
name|'index'
op|'('
name|'key'
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'keyOrder'
op|'['
name|'n'
op|']'
newline|'\n'
name|'if'
name|'n'
op|'<'
name|'index'
op|':'
newline|'\n'
indent|'                '
name|'index'
op|'-='
number|'1'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'keyOrder'
op|'.'
name|'insert'
op|'('
name|'index'
op|','
name|'key'
op|')'
newline|'\n'
name|'super'
op|'('
name|'OrderedDict'
op|','
name|'self'
op|')'
op|'.'
name|'__setitem__'
op|'('
name|'key'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|copy
dedent|''
name|'def'
name|'copy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return a copy of this object."""'
newline|'\n'
comment|'# This way of initializing the copy means it works for subclasses, too.'
nl|'\n'
name|'obj'
op|'='
name|'self'
op|'.'
name|'__class__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'obj'
op|'.'
name|'keyOrder'
op|'='
name|'self'
op|'.'
name|'keyOrder'
op|'['
op|':'
op|']'
newline|'\n'
name|'return'
name|'obj'
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Replace the normal dict.__repr__ with a version that returns the keys\n        in their sorted order.\n        """'
newline|'\n'
name|'return'
string|"'{%s}'"
op|'%'
string|"', '"
op|'.'
name|'join'
op|'('
op|'['
string|"'%r: %r'"
op|'%'
op|'('
name|'k'
op|','
name|'v'
op|')'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'self'
op|'.'
name|'items'
op|'('
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|clear
dedent|''
name|'def'
name|'clear'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'OrderedDict'
op|','
name|'self'
op|')'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'keyOrder'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|index
dedent|''
name|'def'
name|'index'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Return the index of a given key. """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'keyOrder'
op|'.'
name|'index'
op|'('
name|'key'
op|')'
newline|'\n'
nl|'\n'
DECL|member|index_for_location
dedent|''
name|'def'
name|'index_for_location'
op|'('
name|'self'
op|','
name|'location'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Return index or None for a given location. """'
newline|'\n'
name|'if'
name|'location'
op|'=='
string|"'_begin'"
op|':'
newline|'\n'
indent|'            '
name|'i'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'elif'
name|'location'
op|'=='
string|"'_end'"
op|':'
newline|'\n'
indent|'            '
name|'i'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'elif'
name|'location'
op|'.'
name|'startswith'
op|'('
string|"'<'"
op|')'
name|'or'
name|'location'
op|'.'
name|'startswith'
op|'('
string|"'>'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'i'
op|'='
name|'self'
op|'.'
name|'index'
op|'('
name|'location'
op|'['
number|'1'
op|':'
op|']'
op|')'
newline|'\n'
name|'if'
name|'location'
op|'.'
name|'startswith'
op|'('
string|"'>'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'i'
op|'>='
name|'len'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# last item'
nl|'\n'
indent|'                    '
name|'i'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'i'
op|'+='
number|'1'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|'('
string|'\'Not a valid location: "%s". Location key \''
nl|'\n'
string|'\'must start with a ">" or "<".\''
op|'%'
name|'location'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'i'
newline|'\n'
nl|'\n'
DECL|member|add
dedent|''
name|'def'
name|'add'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'value'
op|','
name|'location'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Insert by key location. """'
newline|'\n'
name|'i'
op|'='
name|'self'
op|'.'
name|'index_for_location'
op|'('
name|'location'
op|')'
newline|'\n'
name|'if'
name|'i'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'insert'
op|'('
name|'i'
op|','
name|'key'
op|','
name|'value'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'__setitem__'
op|'('
name|'key'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|link
dedent|''
dedent|''
name|'def'
name|'link'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'location'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Change location of an existing item. """'
newline|'\n'
name|'n'
op|'='
name|'self'
op|'.'
name|'keyOrder'
op|'.'
name|'index'
op|'('
name|'key'
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'keyOrder'
op|'['
name|'n'
op|']'
newline|'\n'
name|'i'
op|'='
name|'self'
op|'.'
name|'index_for_location'
op|'('
name|'location'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'i'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'keyOrder'
op|'.'
name|'insert'
op|'('
name|'i'
op|','
name|'key'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'keyOrder'
op|'.'
name|'append'
op|'('
name|'key'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Error'
op|':'
newline|'\n'
comment|'# restore to prevent data loss and reraise'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'keyOrder'
op|'.'
name|'insert'
op|'('
name|'n'
op|','
name|'key'
op|')'
newline|'\n'
name|'raise'
name|'Error'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
