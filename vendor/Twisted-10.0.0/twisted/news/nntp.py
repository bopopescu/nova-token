begin_unit
comment|'# -*- test-case-name: twisted.news.test.test_nntp -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2004 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""\nNNTP protocol support.\n\nMaintainer: Jp Calderone\n\nThe following protocol commands are currently understood::\n\n    LIST        LISTGROUP                  XOVER        XHDR\n    POST        GROUP        ARTICLE       STAT         HEAD\n    BODY        NEXT         MODE STREAM   MODE READER  SLAVE\n    LAST        QUIT         HELP          IHAVE        XPATH\n    XINDEX      XROVER       TAKETHIS      CHECK\n    \nThe following protocol commands require implementation::\n\n                             NEWNEWS\n                             XGTITLE                XPAT\n                             XTHREAD       AUTHINFO NEWGROUPS\n\n\nOther desired features:\n\n   - A real backend\n   - More robust client input handling\n   - A control protocol\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'types'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'cStringIO'
name|'as'
name|'StringIO'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'StringIO'
newline|'\n'
nl|'\n'
dedent|''
name|'from'
name|'twisted'
op|'.'
name|'protocols'
name|'import'
name|'basic'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
newline|'\n'
nl|'\n'
DECL|function|parseRange
name|'def'
name|'parseRange'
op|'('
name|'text'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'articles'
op|'='
name|'text'
op|'.'
name|'split'
op|'('
string|"'-'"
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'articles'
op|')'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'a'
op|'='
name|'int'
op|'('
name|'articles'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'return'
name|'a'
op|','
name|'a'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
op|','
name|'None'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'len'
op|'('
name|'articles'
op|')'
op|'=='
number|'2'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'len'
op|'('
name|'articles'
op|'['
number|'0'
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'l'
op|'='
name|'int'
op|'('
name|'articles'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'l'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'articles'
op|'['
number|'1'
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'h'
op|'='
name|'int'
op|'('
name|'articles'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'h'
op|'='
name|'None'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ValueError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
op|','
name|'None'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'l'
op|','
name|'h'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|extractCode
dedent|''
name|'def'
name|'extractCode'
op|'('
name|'line'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'line'
op|'='
name|'line'
op|'.'
name|'split'
op|'('
string|"' '"
op|','
number|'1'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'line'
op|')'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'int'
op|'('
name|'line'
op|'['
number|'0'
op|']'
op|')'
op|','
name|'line'
op|'['
number|'1'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NNTPError
dedent|''
dedent|''
name|'class'
name|'NNTPError'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'string'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'string'
op|'='
name|'string'
newline|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'NNTPError: %s'"
op|'%'
name|'self'
op|'.'
name|'string'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NNTPClient
dedent|''
dedent|''
name|'class'
name|'NNTPClient'
op|'('
name|'basic'
op|'.'
name|'LineReceiver'
op|')'
op|':'
newline|'\n'
DECL|variable|MAX_COMMAND_LENGTH
indent|'    '
name|'MAX_COMMAND_LENGTH'
op|'='
number|'510'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'currentGroup'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_state'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_error'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_inputBuffers'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_responseCodes'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_responseHandlers'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_postText'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_newState'
op|'('
name|'self'
op|'.'
name|'_statePassive'
op|','
name|'None'
op|','
name|'self'
op|'.'
name|'_headerInitial'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|gotAllGroups
dedent|''
name|'def'
name|'gotAllGroups'
op|'('
name|'self'
op|','
name|'groups'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Override for notification when fetchGroups() action is completed"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getAllGroupsFailed
dedent|''
name|'def'
name|'getAllGroupsFailed'
op|'('
name|'self'
op|','
name|'error'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Override for notification when fetchGroups() action fails"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|gotOverview
dedent|''
name|'def'
name|'gotOverview'
op|'('
name|'self'
op|','
name|'overview'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Override for notification when fetchOverview() action is completed"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getOverviewFailed
dedent|''
name|'def'
name|'getOverviewFailed'
op|'('
name|'self'
op|','
name|'error'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Override for notification when fetchOverview() action fails"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|gotSubscriptions
dedent|''
name|'def'
name|'gotSubscriptions'
op|'('
name|'self'
op|','
name|'subscriptions'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Override for notification when fetchSubscriptions() action is completed"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getSubscriptionsFailed
dedent|''
name|'def'
name|'getSubscriptionsFailed'
op|'('
name|'self'
op|','
name|'error'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Override for notification when fetchSubscriptions() action fails"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|gotGroup
dedent|''
name|'def'
name|'gotGroup'
op|'('
name|'self'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Override for notification when fetchGroup() action is completed"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getGroupFailed
dedent|''
name|'def'
name|'getGroupFailed'
op|'('
name|'self'
op|','
name|'error'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Override for notification when fetchGroup() action fails"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|gotArticle
dedent|''
name|'def'
name|'gotArticle'
op|'('
name|'self'
op|','
name|'article'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Override for notification when fetchArticle() action is completed"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getArticleFailed
dedent|''
name|'def'
name|'getArticleFailed'
op|'('
name|'self'
op|','
name|'error'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Override for notification when fetchArticle() action fails"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|gotHead
dedent|''
name|'def'
name|'gotHead'
op|'('
name|'self'
op|','
name|'head'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Override for notification when fetchHead() action is completed"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getHeadFailed
dedent|''
name|'def'
name|'getHeadFailed'
op|'('
name|'self'
op|','
name|'error'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Override for notification when fetchHead() action fails"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|gotBody
dedent|''
name|'def'
name|'gotBody'
op|'('
name|'self'
op|','
name|'info'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Override for notification when fetchBody() action is completed"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getBodyFailed
dedent|''
name|'def'
name|'getBodyFailed'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Override for notification when fetchBody() action fails"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|postedOk
dedent|''
name|'def'
name|'postedOk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Override for notification when postArticle() action is successful"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|postFailed
dedent|''
name|'def'
name|'postFailed'
op|'('
name|'self'
op|','
name|'error'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Override for notification when postArticle() action fails"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|gotXHeader
dedent|''
name|'def'
name|'gotXHeader'
op|'('
name|'self'
op|','
name|'headers'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Override for notification when getXHeader() action is successful"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getXHeaderFailed
dedent|''
name|'def'
name|'getXHeaderFailed'
op|'('
name|'self'
op|','
name|'error'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Override for notification when getXHeader() action fails"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|gotNewNews
dedent|''
name|'def'
name|'gotNewNews'
op|'('
name|'self'
op|','
name|'news'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Override for notification when getNewNews() action is successful"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getNewNewsFailed
dedent|''
name|'def'
name|'getNewNewsFailed'
op|'('
name|'self'
op|','
name|'error'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Override for notification when getNewNews() action fails"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|gotNewGroups
dedent|''
name|'def'
name|'gotNewGroups'
op|'('
name|'self'
op|','
name|'groups'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Override for notification when getNewGroups() action is successful"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getNewGroupsFailed
dedent|''
name|'def'
name|'getNewGroupsFailed'
op|'('
name|'self'
op|','
name|'error'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Override for notification when getNewGroups() action fails"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|setStreamSuccess
dedent|''
name|'def'
name|'setStreamSuccess'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Override for notification when setStream() action is successful"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|setStreamFailed
dedent|''
name|'def'
name|'setStreamFailed'
op|'('
name|'self'
op|','
name|'error'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Override for notification when setStream() action fails"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|fetchGroups
dedent|''
name|'def'
name|'fetchGroups'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Request a list of all news groups from the server.  gotAllGroups()\n        is called on success, getGroupsFailed() on failure\n        """'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'LIST'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_newState'
op|'('
name|'self'
op|'.'
name|'_stateList'
op|','
name|'self'
op|'.'
name|'getAllGroupsFailed'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|fetchOverview
dedent|''
name|'def'
name|'fetchOverview'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Request the overview format from the server.  gotOverview() is called\n        on success, getOverviewFailed() on failure\n        """'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'LIST OVERVIEW.FMT'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_newState'
op|'('
name|'self'
op|'.'
name|'_stateOverview'
op|','
name|'self'
op|'.'
name|'getOverviewFailed'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|fetchSubscriptions
dedent|''
name|'def'
name|'fetchSubscriptions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Request a list of the groups it is recommended a new user subscribe to.\n        gotSubscriptions() is called on success, getSubscriptionsFailed() on\n        failure\n        """'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'LIST SUBSCRIPTIONS'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_newState'
op|'('
name|'self'
op|'.'
name|'_stateSubscriptions'
op|','
name|'self'
op|'.'
name|'getSubscriptionsFailed'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|fetchGroup
dedent|''
name|'def'
name|'fetchGroup'
op|'('
name|'self'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get group information for the specified group from the server.  gotGroup()\n        is called on success, getGroupFailed() on failure.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'GROUP %s'"
op|'%'
op|'('
name|'group'
op|','
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_newState'
op|'('
name|'None'
op|','
name|'self'
op|'.'
name|'getGroupFailed'
op|','
name|'self'
op|'.'
name|'_headerGroup'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|fetchHead
dedent|''
name|'def'
name|'fetchHead'
op|'('
name|'self'
op|','
name|'index'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get the header for the specified article (or the currently selected\n        article if index is \'\') from the server.  gotHead() is called on\n        success, getHeadFailed() on failure\n        """'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'HEAD %s'"
op|'%'
op|'('
name|'index'
op|','
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_newState'
op|'('
name|'self'
op|'.'
name|'_stateHead'
op|','
name|'self'
op|'.'
name|'getHeadFailed'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|fetchBody
dedent|''
name|'def'
name|'fetchBody'
op|'('
name|'self'
op|','
name|'index'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get the body for the specified article (or the currently selected\n        article if index is \'\') from the server.  gotBody() is called on\n        success, getBodyFailed() on failure\n        """'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'BODY %s'"
op|'%'
op|'('
name|'index'
op|','
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_newState'
op|'('
name|'self'
op|'.'
name|'_stateBody'
op|','
name|'self'
op|'.'
name|'getBodyFailed'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|fetchArticle
dedent|''
name|'def'
name|'fetchArticle'
op|'('
name|'self'
op|','
name|'index'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get the complete article with the specified index (or the currently\n        selected article if index is \'\') or Message-ID from the server.\n        gotArticle() is called on success, getArticleFailed() on failure.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'ARTICLE %s'"
op|'%'
op|'('
name|'index'
op|','
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_newState'
op|'('
name|'self'
op|'.'
name|'_stateArticle'
op|','
name|'self'
op|'.'
name|'getArticleFailed'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|postArticle
dedent|''
name|'def'
name|'postArticle'
op|'('
name|'self'
op|','
name|'text'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Attempt to post an article with the specified text to the server.  \'text\'\n        must consist of both head and body data, as specified by RFC 850.  If the\n        article is posted successfully, postedOk() is called, otherwise postFailed()\n        is called.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'POST'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_newState'
op|'('
name|'None'
op|','
name|'self'
op|'.'
name|'postFailed'
op|','
name|'self'
op|'.'
name|'_headerPost'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_postText'
op|'.'
name|'append'
op|'('
name|'text'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|fetchNewNews
dedent|''
name|'def'
name|'fetchNewNews'
op|'('
name|'self'
op|','
name|'groups'
op|','
name|'date'
op|','
name|'distributions'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get the Message-IDs for all new news posted to any of the given\n        groups since the specified date - in seconds since the epoch, GMT -\n        optionally restricted to the given distributions.  gotNewNews() is\n        called on success, getNewNewsFailed() on failure.\n        \n        One invocation of this function may result in multiple invocations\n        of gotNewNews()/getNewNewsFailed().\n        """'
newline|'\n'
name|'date'
op|','
name|'timeStr'
op|'='
name|'time'
op|'.'
name|'strftime'
op|'('
string|"'%y%m%d %H%M%S'"
op|','
name|'time'
op|'.'
name|'gmtime'
op|'('
name|'date'
op|')'
op|')'
op|'.'
name|'split'
op|'('
op|')'
newline|'\n'
name|'line'
op|'='
string|"'NEWNEWS %%s %s %s %s'"
op|'%'
op|'('
name|'date'
op|','
name|'timeStr'
op|','
name|'distributions'
op|')'
newline|'\n'
name|'groupPart'
op|'='
string|"''"
newline|'\n'
name|'while'
name|'len'
op|'('
name|'groups'
op|')'
name|'and'
name|'len'
op|'('
name|'line'
op|')'
op|'+'
name|'len'
op|'('
name|'groupPart'
op|')'
op|'+'
name|'len'
op|'('
name|'groups'
op|'['
op|'-'
number|'1'
op|']'
op|')'
op|'+'
number|'1'
op|'<'
name|'NNTPClient'
op|'.'
name|'MAX_COMMAND_LENGTH'
op|':'
newline|'\n'
indent|'            '
name|'group'
op|'='
name|'groups'
op|'.'
name|'pop'
op|'('
op|')'
newline|'\n'
name|'groupPart'
op|'='
name|'groupPart'
op|'+'
string|"','"
op|'+'
name|'group'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'sendLine'
op|'('
name|'line'
op|'%'
op|'('
name|'groupPart'
op|','
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_newState'
op|'('
name|'self'
op|'.'
name|'_stateNewNews'
op|','
name|'self'
op|'.'
name|'getNewNewsFailed'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'len'
op|'('
name|'groups'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fetchNewNews'
op|'('
name|'groups'
op|','
name|'date'
op|','
name|'distributions'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|fetchNewGroups
dedent|''
dedent|''
name|'def'
name|'fetchNewGroups'
op|'('
name|'self'
op|','
name|'date'
op|','
name|'distributions'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get the names of all new groups created/added to the server since\n        the specified date - in seconds since the ecpoh, GMT - optionally\n        restricted to the given distributions.  gotNewGroups() is called\n        on success, getNewGroupsFailed() on failure.\n        """'
newline|'\n'
name|'date'
op|','
name|'timeStr'
op|'='
name|'time'
op|'.'
name|'strftime'
op|'('
string|"'%y%m%d %H%M%S'"
op|','
name|'time'
op|'.'
name|'gmtime'
op|'('
name|'date'
op|')'
op|')'
op|'.'
name|'split'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'NEWGROUPS %s %s %s'"
op|'%'
op|'('
name|'date'
op|','
name|'timeStr'
op|','
name|'distributions'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_newState'
op|'('
name|'self'
op|'.'
name|'_stateNewGroups'
op|','
name|'self'
op|'.'
name|'getNewGroupsFailed'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|fetchXHeader
dedent|''
name|'def'
name|'fetchXHeader'
op|'('
name|'self'
op|','
name|'header'
op|','
name|'low'
op|'='
name|'None'
op|','
name|'high'
op|'='
name|'None'
op|','
name|'id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Request a specific header from the server for an article or range\n        of articles.  If \'id\' is not None, a header for only the article\n        with that Message-ID will be requested.  If both low and high are\n        None, a header for the currently selected article will be selected;\n        If both low and high are zero-length strings, headers for all articles\n        in the currently selected group will be requested;  Otherwise, high\n        and low will be used as bounds - if one is None the first or last\n        article index will be substituted, as appropriate.\n        """'
newline|'\n'
name|'if'
name|'id'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'r'
op|'='
name|'header'
op|'+'
string|"' <%s>'"
op|'%'
op|'('
name|'id'
op|','
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'low'
name|'is'
name|'high'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'r'
op|'='
name|'header'
newline|'\n'
dedent|''
name|'elif'
name|'high'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'r'
op|'='
name|'header'
op|'+'
string|"' %d-'"
op|'%'
op|'('
name|'low'
op|','
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'low'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'r'
op|'='
name|'header'
op|'+'
string|"' -%d'"
op|'%'
op|'('
name|'high'
op|','
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'r'
op|'='
name|'header'
op|'+'
string|"' %d-%d'"
op|'%'
op|'('
name|'low'
op|','
name|'high'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'XHDR '"
op|'+'
name|'r'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_newState'
op|'('
name|'self'
op|'.'
name|'_stateXHDR'
op|','
name|'self'
op|'.'
name|'getXHeaderFailed'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|setStream
dedent|''
name|'def'
name|'setStream'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Set the mode to STREAM, suspending the normal "lock-step" mode of\n        communications.  setStreamSuccess() is called on success,\n        setStreamFailed() on failure.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'MODE STREAM'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_newState'
op|'('
name|'None'
op|','
name|'self'
op|'.'
name|'setStreamFailed'
op|','
name|'self'
op|'.'
name|'_headerMode'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|quit
dedent|''
name|'def'
name|'quit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'QUIT'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_newState
dedent|''
name|'def'
name|'_newState'
op|'('
name|'self'
op|','
name|'method'
op|','
name|'error'
op|','
name|'responseHandler'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_inputBuffers'
op|'.'
name|'append'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_responseCodes'
op|'.'
name|'append'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_state'
op|'.'
name|'append'
op|'('
name|'method'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_error'
op|'.'
name|'append'
op|'('
name|'error'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_responseHandlers'
op|'.'
name|'append'
op|'('
name|'responseHandler'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_endState
dedent|''
name|'def'
name|'_endState'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'buf'
op|'='
name|'self'
op|'.'
name|'_inputBuffers'
op|'['
number|'0'
op|']'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'_responseCodes'
op|'['
number|'0'
op|']'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'_inputBuffers'
op|'['
number|'0'
op|']'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'_state'
op|'['
number|'0'
op|']'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'_error'
op|'['
number|'0'
op|']'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'_responseHandlers'
op|'['
number|'0'
op|']'
newline|'\n'
name|'return'
name|'buf'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_newLine
dedent|''
name|'def'
name|'_newLine'
op|'('
name|'self'
op|','
name|'line'
op|','
name|'check'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'check'
name|'and'
name|'line'
name|'and'
name|'line'
op|'['
number|'0'
op|']'
op|'=='
string|"'.'"
op|':'
newline|'\n'
indent|'            '
name|'line'
op|'='
name|'line'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_inputBuffers'
op|'['
number|'0'
op|']'
op|'.'
name|'append'
op|'('
name|'line'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_setResponseCode
dedent|''
name|'def'
name|'_setResponseCode'
op|'('
name|'self'
op|','
name|'code'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_responseCodes'
op|'['
number|'0'
op|']'
op|'='
name|'code'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_getResponseCode
dedent|''
name|'def'
name|'_getResponseCode'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_responseCodes'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|lineReceived
dedent|''
name|'def'
name|'lineReceived'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'len'
op|'('
name|'self'
op|'.'
name|'_state'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_statePassive'
op|'('
name|'line'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'self'
op|'.'
name|'_getResponseCode'
op|'('
op|')'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'code'
op|'='
name|'extractCode'
op|'('
name|'line'
op|')'
newline|'\n'
name|'if'
name|'code'
name|'is'
name|'None'
name|'or'
name|'not'
op|'('
number|'200'
op|'<='
name|'code'
op|'['
number|'0'
op|']'
op|'<'
number|'400'
op|')'
op|':'
comment|'# An error!'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_error'
op|'['
number|'0'
op|']'
op|'('
name|'line'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_endState'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_setResponseCode'
op|'('
name|'code'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_responseHandlers'
op|'['
number|'0'
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'_responseHandlers'
op|'['
number|'0'
op|']'
op|'('
name|'code'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_state'
op|'['
number|'0'
op|']'
op|'('
name|'line'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_statePassive
dedent|''
dedent|''
name|'def'
name|'_statePassive'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'Server said: %s'"
op|'%'
name|'line'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_passiveError
dedent|''
name|'def'
name|'_passiveError'
op|'('
name|'self'
op|','
name|'error'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'err'
op|'('
string|"'Passive Error: %s'"
op|'%'
op|'('
name|'error'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_headerInitial
dedent|''
name|'def'
name|'_headerInitial'
op|'('
name|'self'
op|','
op|'('
name|'code'
op|','
name|'message'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'code'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'canPost'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'canPost'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_endState'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_stateList
dedent|''
name|'def'
name|'_stateList'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'line'
op|'!='
string|"'.'"
op|':'
newline|'\n'
indent|'            '
name|'data'
op|'='
name|'filter'
op|'('
name|'None'
op|','
name|'line'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'split'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_newLine'
op|'('
op|'('
name|'data'
op|'['
number|'0'
op|']'
op|','
name|'int'
op|'('
name|'data'
op|'['
number|'1'
op|']'
op|')'
op|','
name|'int'
op|'('
name|'data'
op|'['
number|'2'
op|']'
op|')'
op|','
name|'data'
op|'['
number|'3'
op|']'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'gotAllGroups'
op|'('
name|'self'
op|'.'
name|'_endState'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_stateOverview
dedent|''
dedent|''
name|'def'
name|'_stateOverview'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'line'
op|'!='
string|"'.'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_newLine'
op|'('
name|'filter'
op|'('
name|'None'
op|','
name|'line'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'split'
op|'('
op|')'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'gotOverview'
op|'('
name|'self'
op|'.'
name|'_endState'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_stateSubscriptions
dedent|''
dedent|''
name|'def'
name|'_stateSubscriptions'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'line'
op|'!='
string|"'.'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_newLine'
op|'('
name|'line'
op|'.'
name|'strip'
op|'('
op|')'
op|','
number|'0'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'gotSubscriptions'
op|'('
name|'self'
op|'.'
name|'_endState'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_headerGroup
dedent|''
dedent|''
name|'def'
name|'_headerGroup'
op|'('
name|'self'
op|','
op|'('
name|'code'
op|','
name|'line'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'gotGroup'
op|'('
name|'tuple'
op|'('
name|'line'
op|'.'
name|'split'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_endState'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_stateArticle
dedent|''
name|'def'
name|'_stateArticle'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'line'
op|'!='
string|"'.'"
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'line'
op|'.'
name|'startswith'
op|'('
string|"'.'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'line'
op|'='
name|'line'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_newLine'
op|'('
name|'line'
op|','
number|'0'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'gotArticle'
op|'('
string|"'\\n'"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'_endState'
op|'('
op|')'
op|')'
op|'+'
string|"'\\n'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_stateHead
dedent|''
dedent|''
name|'def'
name|'_stateHead'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'line'
op|'!='
string|"'.'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_newLine'
op|'('
name|'line'
op|','
number|'0'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'gotHead'
op|'('
string|"'\\n'"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'_endState'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_stateBody
dedent|''
dedent|''
name|'def'
name|'_stateBody'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'line'
op|'!='
string|"'.'"
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'line'
op|'.'
name|'startswith'
op|'('
string|"'.'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'line'
op|'='
name|'line'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_newLine'
op|'('
name|'line'
op|','
number|'0'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'gotBody'
op|'('
string|"'\\n'"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'_endState'
op|'('
op|')'
op|')'
op|'+'
string|"'\\n'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_headerPost
dedent|''
dedent|''
name|'def'
name|'_headerPost'
op|'('
name|'self'
op|','
op|'('
name|'code'
op|','
name|'message'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'code'
op|'=='
number|'340'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
name|'self'
op|'.'
name|'_postText'
op|'['
number|'0'
op|']'
op|'.'
name|'replace'
op|'('
string|"'\\n'"
op|','
string|"'\\r\\n'"
op|')'
op|'.'
name|'replace'
op|'('
string|"'\\r\\n.'"
op|','
string|"'\\r\\n..'"
op|')'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_postText'
op|'['
number|'0'
op|']'
op|'['
op|'-'
number|'1'
op|':'
op|']'
op|'!='
string|"'\\n'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"''"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'.'"
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'_postText'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_newState'
op|'('
name|'None'
op|','
name|'self'
op|'.'
name|'postFailed'
op|','
name|'self'
op|'.'
name|'_headerPosted'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'postFailed'
op|'('
string|"'%d %s'"
op|'%'
op|'('
name|'code'
op|','
name|'message'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_endState'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_headerPosted
dedent|''
name|'def'
name|'_headerPosted'
op|'('
name|'self'
op|','
op|'('
name|'code'
op|','
name|'message'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'code'
op|'=='
number|'240'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'postedOk'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'postFailed'
op|'('
string|"'%d %s'"
op|'%'
op|'('
name|'code'
op|','
name|'message'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_endState'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_stateXHDR
dedent|''
name|'def'
name|'_stateXHDR'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'line'
op|'!='
string|"'.'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_newLine'
op|'('
name|'line'
op|'.'
name|'split'
op|'('
op|')'
op|','
number|'0'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_gotXHeader'
op|'('
name|'self'
op|'.'
name|'_endState'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_stateNewNews
dedent|''
dedent|''
name|'def'
name|'_stateNewNews'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'line'
op|'!='
string|"'.'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_newLine'
op|'('
name|'line'
op|','
number|'0'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'gotNewNews'
op|'('
name|'self'
op|'.'
name|'_endState'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_stateNewGroups
dedent|''
dedent|''
name|'def'
name|'_stateNewGroups'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'line'
op|'!='
string|"'.'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_newLine'
op|'('
name|'line'
op|','
number|'0'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'gotNewGroups'
op|'('
name|'self'
op|'.'
name|'_endState'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_headerMode
dedent|''
dedent|''
name|'def'
name|'_headerMode'
op|'('
name|'self'
op|','
op|'('
name|'code'
op|','
name|'message'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'code'
op|'=='
number|'203'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'setStreamSuccess'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'setStreamFailed'
op|'('
op|'('
name|'code'
op|','
name|'message'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_endState'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NNTPServer
dedent|''
dedent|''
name|'class'
name|'NNTPServer'
op|'('
name|'basic'
op|'.'
name|'LineReceiver'
op|')'
op|':'
newline|'\n'
DECL|variable|COMMANDS
indent|'    '
name|'COMMANDS'
op|'='
op|'['
nl|'\n'
string|"'LIST'"
op|','
string|"'GROUP'"
op|','
string|"'ARTICLE'"
op|','
string|"'STAT'"
op|','
string|"'MODE'"
op|','
string|"'LISTGROUP'"
op|','
string|"'XOVER'"
op|','
nl|'\n'
string|"'XHDR'"
op|','
string|"'HEAD'"
op|','
string|"'BODY'"
op|','
string|"'NEXT'"
op|','
string|"'LAST'"
op|','
string|"'POST'"
op|','
string|"'QUIT'"
op|','
string|"'IHAVE'"
op|','
nl|'\n'
string|"'HELP'"
op|','
string|"'SLAVE'"
op|','
string|"'XPATH'"
op|','
string|"'XINDEX'"
op|','
string|"'XROVER'"
op|','
string|"'TAKETHIS'"
op|','
string|"'CHECK'"
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'servingSlave'
op|'='
number|'0'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|connectionMade
dedent|''
name|'def'
name|'connectionMade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'inputHandler'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'currentGroup'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'currentIndex'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'200 server ready - posting allowed'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|lineReceived
dedent|''
name|'def'
name|'lineReceived'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'inputHandler'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'inputHandler'
op|'('
name|'line'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'parts'
op|'='
name|'line'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'split'
op|'('
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'parts'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'cmd'
op|','
name|'parts'
op|'='
name|'parts'
op|'['
number|'0'
op|']'
op|'.'
name|'upper'
op|'('
op|')'
op|','
name|'parts'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
name|'if'
name|'cmd'
name|'in'
name|'NNTPServer'
op|'.'
name|'COMMANDS'
op|':'
newline|'\n'
indent|'                    '
name|'func'
op|'='
name|'getattr'
op|'('
name|'self'
op|','
string|"'do_%s'"
op|'%'
name|'cmd'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                        '
name|'func'
op|'('
op|'*'
name|'parts'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'TypeError'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'501 command syntax error'"
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'"501 command syntax error"'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'"command was"'
op|','
name|'line'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'deferr'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'503 program fault - command not performed'"
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'"503 program fault"'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'"command was"'
op|','
name|'line'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'deferr'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'500 command not recognized'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_LIST
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'do_LIST'
op|'('
name|'self'
op|','
name|'subcmd'
op|'='
string|"''"
op|','
op|'*'
name|'dummy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'subcmd'
op|'='
name|'subcmd'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'if'
name|'subcmd'
op|'=='
string|"'newsgroups'"
op|':'
newline|'\n'
comment|'# XXX - this could use a real implementation, eh?'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|'\'215 Descriptions in form "group description"\''
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'.'"
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'subcmd'
op|'=='
string|"'overview.fmt'"
op|':'
newline|'\n'
indent|'            '
name|'defer'
op|'='
name|'self'
op|'.'
name|'factory'
op|'.'
name|'backend'
op|'.'
name|'overviewRequest'
op|'('
op|')'
newline|'\n'
name|'defer'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_gotOverview'
op|','
name|'self'
op|'.'
name|'_errOverview'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|"'overview'"
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'subcmd'
op|'=='
string|"'subscriptions'"
op|':'
newline|'\n'
indent|'            '
name|'defer'
op|'='
name|'self'
op|'.'
name|'factory'
op|'.'
name|'backend'
op|'.'
name|'subscriptionRequest'
op|'('
op|')'
newline|'\n'
name|'defer'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_gotSubscription'
op|','
name|'self'
op|'.'
name|'_errSubscription'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|"'subscriptions'"
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'subcmd'
op|'=='
string|"''"
op|':'
newline|'\n'
indent|'            '
name|'defer'
op|'='
name|'self'
op|'.'
name|'factory'
op|'.'
name|'backend'
op|'.'
name|'listRequest'
op|'('
op|')'
newline|'\n'
name|'defer'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_gotList'
op|','
name|'self'
op|'.'
name|'_errList'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'500 command not recognized'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_gotList
dedent|''
dedent|''
name|'def'
name|'_gotList'
op|'('
name|'self'
op|','
name|'list'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|'\'215 newsgroups in form "group high low flags"\''
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'list'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'%s %d %d %s'"
op|'%'
name|'tuple'
op|'('
name|'i'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'.'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_errList
dedent|''
name|'def'
name|'_errList'
op|'('
name|'self'
op|','
name|'failure'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'LIST failed: '"
op|','
name|'failure'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'503 program fault - command not performed'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_gotSubscription
dedent|''
name|'def'
name|'_gotSubscription'
op|'('
name|'self'
op|','
name|'parts'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'215 information follows'"
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'parts'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendLine'
op|'('
name|'i'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'.'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_errSubscription
dedent|''
name|'def'
name|'_errSubscription'
op|'('
name|'self'
op|','
name|'failure'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'SUBSCRIPTIONS failed: '"
op|','
name|'failure'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'503 program fault - comand not performed'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_gotOverview
dedent|''
name|'def'
name|'_gotOverview'
op|'('
name|'self'
op|','
name|'parts'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'215 Order of fields in overview database.'"
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'parts'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendLine'
op|'('
name|'i'
op|'+'
string|"':'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'.'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_errOverview
dedent|''
name|'def'
name|'_errOverview'
op|'('
name|'self'
op|','
name|'failure'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'LIST OVERVIEW.FMT failed: '"
op|','
name|'failure'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'503 program fault - command not performed'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_LISTGROUP
dedent|''
name|'def'
name|'do_LISTGROUP'
op|'('
name|'self'
op|','
name|'group'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'group'
op|'='
name|'group'
name|'or'
name|'self'
op|'.'
name|'currentGroup'
newline|'\n'
name|'if'
name|'group'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'412 Not currently in newsgroup'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'defer'
op|'='
name|'self'
op|'.'
name|'factory'
op|'.'
name|'backend'
op|'.'
name|'listGroupRequest'
op|'('
name|'group'
op|')'
newline|'\n'
name|'defer'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_gotListGroup'
op|','
name|'self'
op|'.'
name|'_errListGroup'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_gotListGroup
dedent|''
dedent|''
name|'def'
name|'_gotListGroup'
op|'('
name|'self'
op|','
op|'('
name|'group'
op|','
name|'articles'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'currentGroup'
op|'='
name|'group'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'articles'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'currentIndex'
op|'='
name|'int'
op|'('
name|'articles'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'currentIndex'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'211 list of article numbers follow'"
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'articles'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendLine'
op|'('
name|'str'
op|'('
name|'i'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'.'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_errListGroup
dedent|''
name|'def'
name|'_errListGroup'
op|'('
name|'self'
op|','
name|'failure'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'LISTGROUP failed: '"
op|','
name|'failure'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'502 no permission'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_XOVER
dedent|''
name|'def'
name|'do_XOVER'
op|'('
name|'self'
op|','
name|'range'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'currentGroup'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'412 No news group currently selected'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'l'
op|','
name|'h'
op|'='
name|'parseRange'
op|'('
name|'range'
op|')'
newline|'\n'
name|'defer'
op|'='
name|'self'
op|'.'
name|'factory'
op|'.'
name|'backend'
op|'.'
name|'xoverRequest'
op|'('
name|'self'
op|'.'
name|'currentGroup'
op|','
name|'l'
op|','
name|'h'
op|')'
newline|'\n'
name|'defer'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_gotXOver'
op|','
name|'self'
op|'.'
name|'_errXOver'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_gotXOver
dedent|''
dedent|''
name|'def'
name|'_gotXOver'
op|'('
name|'self'
op|','
name|'parts'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'224 Overview information follows'"
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'parts'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'\\t'"
op|'.'
name|'join'
op|'('
name|'map'
op|'('
name|'str'
op|','
name|'i'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'.'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_errXOver
dedent|''
name|'def'
name|'_errXOver'
op|'('
name|'self'
op|','
name|'failure'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'XOVER failed: '"
op|','
name|'failure'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'420 No article(s) selected'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|xhdrWork
dedent|''
name|'def'
name|'xhdrWork'
op|'('
name|'self'
op|','
name|'header'
op|','
name|'range'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'currentGroup'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'412 No news group currently selected'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'range'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'currentIndex'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'420 No current article selected'"
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'l'
op|'='
name|'h'
op|'='
name|'self'
op|'.'
name|'currentIndex'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# FIXME: articles may be a message-id'
nl|'\n'
indent|'                '
name|'l'
op|','
name|'h'
op|'='
name|'parseRange'
op|'('
name|'range'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'l'
name|'is'
name|'h'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'430 no such article'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'factory'
op|'.'
name|'backend'
op|'.'
name|'xhdrRequest'
op|'('
name|'self'
op|'.'
name|'currentGroup'
op|','
name|'l'
op|','
name|'h'
op|','
name|'header'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_XHDR
dedent|''
dedent|''
dedent|''
name|'def'
name|'do_XHDR'
op|'('
name|'self'
op|','
name|'header'
op|','
name|'range'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'xhdrWork'
op|'('
name|'header'
op|','
name|'range'
op|')'
newline|'\n'
name|'if'
name|'d'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_gotXHDR'
op|','
name|'self'
op|'.'
name|'_errXHDR'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_gotXHDR
dedent|''
dedent|''
name|'def'
name|'_gotXHDR'
op|'('
name|'self'
op|','
name|'parts'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'221 Header follows'"
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'parts'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'%d %s'"
op|'%'
name|'i'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'.'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_errXHDR
dedent|''
name|'def'
name|'_errXHDR'
op|'('
name|'self'
op|','
name|'failure'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'XHDR failed: '"
op|','
name|'failure'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'502 no permission'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_XROVER
dedent|''
name|'def'
name|'do_XROVER'
op|'('
name|'self'
op|','
name|'header'
op|','
name|'range'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'xhdrWork'
op|'('
name|'header'
op|','
name|'range'
op|')'
newline|'\n'
name|'if'
name|'d'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_gotXROVER'
op|','
name|'self'
op|'.'
name|'_errXROVER'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_gotXROVER
dedent|''
dedent|''
name|'def'
name|'_gotXROVER'
op|'('
name|'self'
op|','
name|'parts'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'224 Overview information follows'"
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'parts'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'%d %s'"
op|'%'
name|'i'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'.'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_errXROVER
dedent|''
name|'def'
name|'_errXROVER'
op|'('
name|'self'
op|','
name|'failure'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'XROVER failed: '"
op|','
newline|'\n'
name|'self'
op|'.'
name|'_errXHDR'
op|'('
name|'failure'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_POST
dedent|''
name|'def'
name|'do_POST'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'inputHandler'
op|'='
name|'self'
op|'.'
name|'_doingPost'
newline|'\n'
name|'self'
op|'.'
name|'message'
op|'='
string|"''"
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'340 send article to be posted.  End with <CR-LF>.<CR-LF>'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_doingPost
dedent|''
name|'def'
name|'_doingPost'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'line'
op|'=='
string|"'.'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'inputHandler'
op|'='
name|'None'
newline|'\n'
name|'group'
op|','
name|'article'
op|'='
name|'self'
op|'.'
name|'currentGroup'
op|','
name|'self'
op|'.'
name|'message'
newline|'\n'
name|'self'
op|'.'
name|'message'
op|'='
string|"''"
newline|'\n'
nl|'\n'
name|'defer'
op|'='
name|'self'
op|'.'
name|'factory'
op|'.'
name|'backend'
op|'.'
name|'postRequest'
op|'('
name|'article'
op|')'
newline|'\n'
name|'defer'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_gotPost'
op|','
name|'self'
op|'.'
name|'_errPost'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'message'
op|'='
name|'self'
op|'.'
name|'message'
op|'+'
name|'line'
op|'+'
string|"'\\r\\n'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_gotPost
dedent|''
dedent|''
name|'def'
name|'_gotPost'
op|'('
name|'self'
op|','
name|'parts'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'240 article posted ok'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_errPost
dedent|''
name|'def'
name|'_errPost'
op|'('
name|'self'
op|','
name|'failure'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'POST failed: '"
op|','
name|'failure'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'441 posting failed'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_CHECK
dedent|''
name|'def'
name|'do_CHECK'
op|'('
name|'self'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'factory'
op|'.'
name|'backend'
op|'.'
name|'articleExistsRequest'
op|'('
name|'id'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_gotCheck'
op|','
name|'self'
op|'.'
name|'_errCheck'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_gotCheck
dedent|''
name|'def'
name|'_gotCheck'
op|'('
name|'self'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'result'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|'"438 already have it, please don\'t send it to me"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'238 no such article found, please send it to me'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_errCheck
dedent|''
dedent|''
name|'def'
name|'_errCheck'
op|'('
name|'self'
op|','
name|'failure'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'CHECK failed: '"
op|','
name|'failure'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'431 try sending it again later'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_TAKETHIS
dedent|''
name|'def'
name|'do_TAKETHIS'
op|'('
name|'self'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'inputHandler'
op|'='
name|'self'
op|'.'
name|'_doingTakeThis'
newline|'\n'
name|'self'
op|'.'
name|'message'
op|'='
string|"''"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_doingTakeThis
dedent|''
name|'def'
name|'_doingTakeThis'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'line'
op|'=='
string|"'.'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'inputHandler'
op|'='
name|'None'
newline|'\n'
name|'article'
op|'='
name|'self'
op|'.'
name|'message'
newline|'\n'
name|'self'
op|'.'
name|'message'
op|'='
string|"''"
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'factory'
op|'.'
name|'backend'
op|'.'
name|'postRequest'
op|'('
name|'article'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_didTakeThis'
op|','
name|'self'
op|'.'
name|'_errTakeThis'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'message'
op|'='
name|'self'
op|'.'
name|'message'
op|'+'
name|'line'
op|'+'
string|"'\\r\\n'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_didTakeThis
dedent|''
dedent|''
name|'def'
name|'_didTakeThis'
op|'('
name|'self'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'239 article transferred ok'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_errTakeThis
dedent|''
name|'def'
name|'_errTakeThis'
op|'('
name|'self'
op|','
name|'failure'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'TAKETHIS failed: '"
op|','
name|'failure'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'439 article transfer failed'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_GROUP
dedent|''
name|'def'
name|'do_GROUP'
op|'('
name|'self'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'defer'
op|'='
name|'self'
op|'.'
name|'factory'
op|'.'
name|'backend'
op|'.'
name|'groupRequest'
op|'('
name|'group'
op|')'
newline|'\n'
name|'defer'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_gotGroup'
op|','
name|'self'
op|'.'
name|'_errGroup'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_gotGroup
dedent|''
name|'def'
name|'_gotGroup'
op|'('
name|'self'
op|','
op|'('
name|'name'
op|','
name|'num'
op|','
name|'high'
op|','
name|'low'
op|','
name|'flags'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'currentGroup'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'currentIndex'
op|'='
name|'low'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'211 %d %d %d %s group selected'"
op|'%'
op|'('
name|'num'
op|','
name|'low'
op|','
name|'high'
op|','
name|'name'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_errGroup
dedent|''
name|'def'
name|'_errGroup'
op|'('
name|'self'
op|','
name|'failure'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'GROUP failed: '"
op|','
name|'failure'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'411 no such group'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|articleWork
dedent|''
name|'def'
name|'articleWork'
op|'('
name|'self'
op|','
name|'article'
op|','
name|'cmd'
op|','
name|'func'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'currentGroup'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'412 no newsgroup has been selected'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'article'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'currentIndex'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'420 no current article has been selected'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'article'
op|'='
name|'self'
op|'.'
name|'currentIndex'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'article'
op|'['
number|'0'
op|']'
op|'=='
string|"'<'"
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'func'
op|'('
name|'self'
op|'.'
name|'currentGroup'
op|','
name|'index'
op|'='
name|'None'
op|','
name|'id'
op|'='
name|'article'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'try'
op|':'
newline|'\n'
indent|'                        '
name|'article'
op|'='
name|'int'
op|'('
name|'article'
op|')'
newline|'\n'
name|'return'
name|'func'
op|'('
name|'self'
op|'.'
name|'currentGroup'
op|','
name|'article'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'501 command syntax error'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_ARTICLE
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'do_ARTICLE'
op|'('
name|'self'
op|','
name|'article'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'defer'
op|'='
name|'self'
op|'.'
name|'articleWork'
op|'('
name|'article'
op|','
string|"'ARTICLE'"
op|','
name|'self'
op|'.'
name|'factory'
op|'.'
name|'backend'
op|'.'
name|'articleRequest'
op|')'
newline|'\n'
name|'if'
name|'defer'
op|':'
newline|'\n'
indent|'            '
name|'defer'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_gotArticle'
op|','
name|'self'
op|'.'
name|'_errArticle'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_gotArticle
dedent|''
dedent|''
name|'def'
name|'_gotArticle'
op|'('
name|'self'
op|','
op|'('
name|'index'
op|','
name|'id'
op|','
name|'article'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'article'
op|','
name|'types'
op|'.'
name|'StringType'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'import'
name|'warnings'
newline|'\n'
name|'warnings'
op|'.'
name|'warn'
op|'('
nl|'\n'
string|'"Returning the article as a string from `articleRequest\' "'
nl|'\n'
string|'"is deprecated.  Return a file-like object instead."'
nl|'\n'
op|')'
newline|'\n'
name|'article'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
name|'article'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'currentIndex'
op|'='
name|'index'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'220 %d %s article'"
op|'%'
op|'('
name|'index'
op|','
name|'id'
op|')'
op|')'
newline|'\n'
name|'s'
op|'='
name|'basic'
op|'.'
name|'FileSender'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'s'
op|'.'
name|'beginFileTransfer'
op|'('
name|'article'
op|','
name|'self'
op|'.'
name|'transport'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'finishedFileTransfer'
op|')'
newline|'\n'
nl|'\n'
comment|'##   '
nl|'\n'
comment|'## Helper for FileSender'
nl|'\n'
comment|'##'
nl|'\n'
DECL|member|finishedFileTransfer
dedent|''
name|'def'
name|'finishedFileTransfer'
op|'('
name|'self'
op|','
name|'lastsent'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'lastsent'
op|'!='
string|"'\\n'"
op|':'
newline|'\n'
indent|'            '
name|'line'
op|'='
string|"'\\r\\n.'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'line'
op|'='
string|"'.'"
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'sendLine'
op|'('
name|'line'
op|')'
newline|'\n'
comment|'##'
nl|'\n'
nl|'\n'
DECL|member|_errArticle
dedent|''
name|'def'
name|'_errArticle'
op|'('
name|'self'
op|','
name|'failure'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'ARTICLE failed: '"
op|','
name|'failure'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'423 bad article number'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_STAT
dedent|''
name|'def'
name|'do_STAT'
op|'('
name|'self'
op|','
name|'article'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'defer'
op|'='
name|'self'
op|'.'
name|'articleWork'
op|'('
name|'article'
op|','
string|"'STAT'"
op|','
name|'self'
op|'.'
name|'factory'
op|'.'
name|'backend'
op|'.'
name|'articleRequest'
op|')'
newline|'\n'
name|'if'
name|'defer'
op|':'
newline|'\n'
indent|'            '
name|'defer'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_gotStat'
op|','
name|'self'
op|'.'
name|'_errStat'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_gotStat
dedent|''
dedent|''
name|'def'
name|'_gotStat'
op|'('
name|'self'
op|','
op|'('
name|'index'
op|','
name|'id'
op|','
name|'article'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'currentIndex'
op|'='
name|'index'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'223 %d %s article retreived - request text separately'"
op|'%'
op|'('
name|'index'
op|','
name|'id'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_errStat
dedent|''
name|'def'
name|'_errStat'
op|'('
name|'self'
op|','
name|'failure'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'STAT failed: '"
op|','
name|'failure'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'423 bad article number'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_HEAD
dedent|''
name|'def'
name|'do_HEAD'
op|'('
name|'self'
op|','
name|'article'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'defer'
op|'='
name|'self'
op|'.'
name|'articleWork'
op|'('
name|'article'
op|','
string|"'HEAD'"
op|','
name|'self'
op|'.'
name|'factory'
op|'.'
name|'backend'
op|'.'
name|'headRequest'
op|')'
newline|'\n'
name|'if'
name|'defer'
op|':'
newline|'\n'
indent|'            '
name|'defer'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_gotHead'
op|','
name|'self'
op|'.'
name|'_errHead'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_gotHead
dedent|''
dedent|''
name|'def'
name|'_gotHead'
op|'('
name|'self'
op|','
op|'('
name|'index'
op|','
name|'id'
op|','
name|'head'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'currentIndex'
op|'='
name|'index'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'221 %d %s article retrieved'"
op|'%'
op|'('
name|'index'
op|','
name|'id'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
name|'head'
op|'+'
string|"'\\r\\n'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'.'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_errHead
dedent|''
name|'def'
name|'_errHead'
op|'('
name|'self'
op|','
name|'failure'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'HEAD failed: '"
op|','
name|'failure'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'423 no such article number in this group'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_BODY
dedent|''
name|'def'
name|'do_BODY'
op|'('
name|'self'
op|','
name|'article'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'defer'
op|'='
name|'self'
op|'.'
name|'articleWork'
op|'('
name|'article'
op|','
string|"'BODY'"
op|','
name|'self'
op|'.'
name|'factory'
op|'.'
name|'backend'
op|'.'
name|'bodyRequest'
op|')'
newline|'\n'
name|'if'
name|'defer'
op|':'
newline|'\n'
indent|'            '
name|'defer'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_gotBody'
op|','
name|'self'
op|'.'
name|'_errBody'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_gotBody
dedent|''
dedent|''
name|'def'
name|'_gotBody'
op|'('
name|'self'
op|','
op|'('
name|'index'
op|','
name|'id'
op|','
name|'body'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'body'
op|','
name|'types'
op|'.'
name|'StringType'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'import'
name|'warnings'
newline|'\n'
name|'warnings'
op|'.'
name|'warn'
op|'('
nl|'\n'
string|'"Returning the article as a string from `articleRequest\' "'
nl|'\n'
string|'"is deprecated.  Return a file-like object instead."'
nl|'\n'
op|')'
newline|'\n'
name|'body'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
name|'body'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'currentIndex'
op|'='
name|'index'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'221 %d %s article retrieved'"
op|'%'
op|'('
name|'index'
op|','
name|'id'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'lastsent'
op|'='
string|"''"
newline|'\n'
name|'s'
op|'='
name|'basic'
op|'.'
name|'FileSender'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'s'
op|'.'
name|'beginFileTransfer'
op|'('
name|'body'
op|','
name|'self'
op|'.'
name|'transport'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'finishedFileTransfer'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_errBody
dedent|''
name|'def'
name|'_errBody'
op|'('
name|'self'
op|','
name|'failure'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'BODY failed: '"
op|','
name|'failure'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'423 no such article number in this group'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# NEXT and LAST are just STATs that increment currentIndex first.'
nl|'\n'
comment|'# Accordingly, use the STAT callbacks.'
nl|'\n'
DECL|member|do_NEXT
dedent|''
name|'def'
name|'do_NEXT'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'i'
op|'='
name|'self'
op|'.'
name|'currentIndex'
op|'+'
number|'1'
newline|'\n'
name|'defer'
op|'='
name|'self'
op|'.'
name|'factory'
op|'.'
name|'backend'
op|'.'
name|'articleRequest'
op|'('
name|'self'
op|'.'
name|'currentGroup'
op|','
name|'i'
op|')'
newline|'\n'
name|'defer'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_gotStat'
op|','
name|'self'
op|'.'
name|'_errStat'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_LAST
dedent|''
name|'def'
name|'do_LAST'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'i'
op|'='
name|'self'
op|'.'
name|'currentIndex'
op|'-'
number|'1'
newline|'\n'
name|'defer'
op|'='
name|'self'
op|'.'
name|'factory'
op|'.'
name|'backend'
op|'.'
name|'articleRequest'
op|'('
name|'self'
op|'.'
name|'currentGroup'
op|','
name|'i'
op|')'
newline|'\n'
name|'defer'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_gotStat'
op|','
name|'self'
op|'.'
name|'_errStat'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_MODE
dedent|''
name|'def'
name|'do_MODE'
op|'('
name|'self'
op|','
name|'cmd'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cmd'
op|'='
name|'cmd'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'upper'
op|'('
op|')'
newline|'\n'
name|'if'
name|'cmd'
op|'=='
string|"'READER'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'servingSlave'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'200 Hello, you can post'"
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'cmd'
op|'=='
string|"'STREAM'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'500 Command not understood'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# This is not a mistake'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'500 Command not understood'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_QUIT
dedent|''
dedent|''
name|'def'
name|'do_QUIT'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'205 goodbye'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_HELP
dedent|''
name|'def'
name|'do_HELP'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'100 help text follows'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'Read the RFC.'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'.'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_SLAVE
dedent|''
name|'def'
name|'do_SLAVE'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'202 slave status noted'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'servingeSlave'
op|'='
number|'1'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_XPATH
dedent|''
name|'def'
name|'do_XPATH'
op|'('
name|'self'
op|','
name|'article'
op|')'
op|':'
newline|'\n'
comment|'# XPATH is a silly thing to have.  No client has the right to ask'
nl|'\n'
comment|"# for this piece of information from me, and so that is what I'll"
nl|'\n'
comment|'# tell them.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'502 access restriction or permission denied'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_XINDEX
dedent|''
name|'def'
name|'do_XINDEX'
op|'('
name|'self'
op|','
name|'article'
op|')'
op|':'
newline|'\n'
comment|'# XINDEX is another silly command.  The RFC suggests it be relegated'
nl|'\n'
comment|'# to the history books, and who am I to disagree?'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'502 access restriction or permission denied'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_XROVER
dedent|''
name|'def'
name|'do_XROVER'
op|'('
name|'self'
op|','
name|'range'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'do_XHDR'
op|'('
name|'self'
op|','
string|"'References'"
op|','
name|'range'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_IHAVE
dedent|''
name|'def'
name|'do_IHAVE'
op|'('
name|'self'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'factory'
op|'.'
name|'backend'
op|'.'
name|'articleExistsRequest'
op|'('
name|'id'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_foundArticle'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_foundArticle
dedent|''
name|'def'
name|'_foundArticle'
op|'('
name|'self'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'result'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'437 article rejected - do not try again'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'335 send article to be transferred.  End with <CR-LF>.<CR-LF>'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'inputHandler'
op|'='
name|'self'
op|'.'
name|'_handleIHAVE'
newline|'\n'
name|'self'
op|'.'
name|'message'
op|'='
string|"''"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_handleIHAVE
dedent|''
dedent|''
name|'def'
name|'_handleIHAVE'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'line'
op|'=='
string|"'.'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'inputHandler'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'factory'
op|'.'
name|'backend'
op|'.'
name|'postRequest'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'message'
nl|'\n'
op|')'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_gotIHAVE'
op|','
name|'self'
op|'.'
name|'_errIHAVE'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'message'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'message'
op|'='
name|'self'
op|'.'
name|'message'
op|'+'
name|'line'
op|'+'
string|"'\\r\\n'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_gotIHAVE
dedent|''
dedent|''
name|'def'
name|'_gotIHAVE'
op|'('
name|'self'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'235 article transferred ok'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_errIHAVE
dedent|''
name|'def'
name|'_errIHAVE'
op|'('
name|'self'
op|','
name|'failure'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'IHAVE failed: '"
op|','
name|'failure'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'436 transfer failed - try again later'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|UsenetClientProtocol
dedent|''
dedent|''
name|'class'
name|'UsenetClientProtocol'
op|'('
name|'NNTPClient'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A client that connects to an NNTP server and asks for articles new\n    since a certain time.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'groups'
op|','
name|'date'
op|','
name|'storage'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Fetch all new articles from the given groups since the\n        given date and dump them into the given storage.  groups\n        is a list of group names.  date is an integer or floating\n        point representing seconds since the epoch (GMT).  storage is\n        any object that implements the NewsStorage interface.\n        """'
newline|'\n'
name|'NNTPClient'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'groups'
op|','
name|'self'
op|'.'
name|'date'
op|','
name|'self'
op|'.'
name|'storage'
op|'='
name|'groups'
op|','
name|'date'
op|','
name|'storage'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|connectionMade
dedent|''
name|'def'
name|'connectionMade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'NNTPClient'
op|'.'
name|'connectionMade'
op|'('
name|'self'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Initiating update with remote host: "'
op|'+'
name|'str'
op|'('
name|'self'
op|'.'
name|'transport'
op|'.'
name|'getPeer'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'setStream'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fetchNewNews'
op|'('
name|'self'
op|'.'
name|'groups'
op|','
name|'self'
op|'.'
name|'date'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|articleExists
dedent|''
name|'def'
name|'articleExists'
op|'('
name|'self'
op|','
name|'exists'
op|','
name|'article'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'exists'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fetchArticle'
op|'('
name|'article'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'count'
op|'='
name|'self'
op|'.'
name|'count'
op|'-'
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'disregard'
op|'='
name|'self'
op|'.'
name|'disregard'
op|'+'
number|'1'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|gotNewNews
dedent|''
dedent|''
name|'def'
name|'gotNewNews'
op|'('
name|'self'
op|','
name|'news'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'disregard'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'count'
op|'='
name|'len'
op|'('
name|'news'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Transfering "'
op|'+'
name|'str'
op|'('
name|'self'
op|'.'
name|'count'
op|')'
op|'+'
string|'" articles from remote host: "'
op|'+'
name|'str'
op|'('
name|'self'
op|'.'
name|'transport'
op|'.'
name|'getPeer'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'news'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'storage'
op|'.'
name|'articleExistsRequest'
op|'('
name|'i'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'articleExists'
op|','
name|'i'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getNewNewsFailed
dedent|''
dedent|''
name|'def'
name|'getNewNewsFailed'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Updated failed ("'
op|'+'
name|'reason'
op|'+'
string|'") with remote host: "'
op|'+'
name|'str'
op|'('
name|'self'
op|'.'
name|'transport'
op|'.'
name|'getPeer'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'quit'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|gotArticle
dedent|''
name|'def'
name|'gotArticle'
op|'('
name|'self'
op|','
name|'article'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'storage'
op|'.'
name|'postRequest'
op|'('
name|'article'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'count'
op|'='
name|'self'
op|'.'
name|'count'
op|'-'
number|'1'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'count'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Completed update with remote host: "'
op|'+'
name|'str'
op|'('
name|'self'
op|'.'
name|'transport'
op|'.'
name|'getPeer'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'disregard'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Disregarded %d articles."'
op|'%'
op|'('
name|'self'
op|'.'
name|'disregard'
op|','
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'factory'
op|'.'
name|'updateChecks'
op|'('
name|'self'
op|'.'
name|'transport'
op|'.'
name|'getPeer'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'quit'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
