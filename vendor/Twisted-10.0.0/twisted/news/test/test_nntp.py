begin_unit
comment|'# Copyright (c) 2001-2004 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'news'
name|'import'
name|'database'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'news'
name|'import'
name|'nntp'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'protocols'
name|'import'
name|'loopback'
newline|'\n'
nl|'\n'
DECL|variable|ALL_GROUPS
name|'ALL_GROUPS'
op|'='
op|'('
string|"'alt.test.nntp'"
op|','
number|'0'
op|','
number|'1'
op|','
string|"'y'"
op|')'
op|','
newline|'\n'
DECL|variable|GROUP
name|'GROUP'
op|'='
op|'('
string|"'0'"
op|','
string|"'1'"
op|','
string|"'0'"
op|','
string|"'alt.test.nntp'"
op|','
string|"'group'"
op|','
string|"'selected'"
op|')'
newline|'\n'
DECL|variable|SUBSCRIPTIONS
name|'SUBSCRIPTIONS'
op|'='
op|'['
string|"'alt.test.nntp'"
op|','
string|"'news.testgroup'"
op|']'
newline|'\n'
nl|'\n'
name|'POST_STRING'
op|'='
string|'"""Path: not-for-mail\nFrom: <exarkun@somehost.domain.com>\nSubject: a test\nNewsgroups: alt.test.nntp\nOrganization: \nSummary: \nKeywords: \nUser-Agent: tin/1.4.5-20010409 ("One More Nightmare") (UNIX) (Linux/2.4.17 (i686))\n\nthis is a test\n.\n..\n...\nlala\nmoo\n-- \n"One World, one Web, one Program." - Microsoft(R) promotional ad\n"Ein Volk, ein Reich, ein Fuhrer." - Adolf Hitler\n--\n 10:56pm up 4 days, 4:42, 1 user, load average: 0.08, 0.08, 0.12\n"""'
newline|'\n'
nl|'\n'
DECL|class|TestNNTPClient
name|'class'
name|'TestNNTPClient'
op|'('
name|'nntp'
op|'.'
name|'NNTPClient'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'nntp'
op|'.'
name|'NNTPClient'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|assertEquals
dedent|''
name|'def'
name|'assertEquals'
op|'('
name|'self'
op|','
name|'foo'
op|','
name|'bar'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'foo'
op|'!='
name|'bar'
op|':'
name|'raise'
name|'AssertionError'
op|'('
string|'"%r != %r!"'
op|'%'
op|'('
name|'foo'
op|','
name|'bar'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|connectionMade
dedent|''
name|'def'
name|'connectionMade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'nntp'
op|'.'
name|'NNTPClient'
op|'.'
name|'connectionMade'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fetchSubscriptions'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|gotSubscriptions
dedent|''
name|'def'
name|'gotSubscriptions'
op|'('
name|'self'
op|','
name|'subscriptions'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'subscriptions'
op|')'
op|','
name|'len'
op|'('
name|'SUBSCRIPTIONS'
op|')'
op|')'
newline|'\n'
name|'for'
name|'s'
name|'in'
name|'subscriptions'
op|':'
newline|'\n'
indent|'            '
name|'assert'
name|'s'
name|'in'
name|'SUBSCRIPTIONS'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'fetchGroups'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|gotAllGroups
dedent|''
name|'def'
name|'gotAllGroups'
op|'('
name|'self'
op|','
name|'info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'info'
op|')'
op|','
name|'len'
op|'('
name|'ALL_GROUPS'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'info'
op|'['
number|'0'
op|']'
op|','
name|'ALL_GROUPS'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'fetchGroup'
op|'('
string|"'alt.test.nntp'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getAllGroupsFailed
dedent|''
name|'def'
name|'getAllGroupsFailed'
op|'('
name|'self'
op|','
name|'error'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'AssertionError'
op|'('
string|'"fetchGroups() failed: %s"'
op|'%'
op|'('
name|'error'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|gotGroup
dedent|''
name|'def'
name|'gotGroup'
op|'('
name|'self'
op|','
name|'info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'info'
op|')'
op|','
number|'6'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'info'
op|','
name|'GROUP'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'postArticle'
op|'('
name|'POST_STRING'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getSubscriptionsFailed
dedent|''
name|'def'
name|'getSubscriptionsFailed'
op|'('
name|'self'
op|','
name|'error'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'AssertionError'
op|'('
string|'"fetchSubscriptions() failed: %s"'
op|'%'
op|'('
name|'error'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getGroupFailed
dedent|''
name|'def'
name|'getGroupFailed'
op|'('
name|'self'
op|','
name|'error'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'AssertionError'
op|'('
string|'"fetchGroup() failed: %s"'
op|'%'
op|'('
name|'error'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|postFailed
dedent|''
name|'def'
name|'postFailed'
op|'('
name|'self'
op|','
name|'error'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'AssertionError'
op|'('
string|'"postArticle() failed: %s"'
op|'%'
op|'('
name|'error'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|postedOk
dedent|''
name|'def'
name|'postedOk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'fetchArticle'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|gotArticle
dedent|''
name|'def'
name|'gotArticle'
op|'('
name|'self'
op|','
name|'info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'origBody'
op|'='
name|'POST_STRING'
op|'.'
name|'split'
op|'('
string|"'\\n\\n'"
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'newBody'
op|'='
name|'info'
op|'.'
name|'split'
op|'('
string|"'\\n\\n'"
op|','
number|'1'
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'origBody'
op|','
name|'newBody'
op|')'
newline|'\n'
nl|'\n'
comment|"# We're done"
nl|'\n'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getArticleFailed
dedent|''
name|'def'
name|'getArticleFailed'
op|'('
name|'self'
op|','
name|'error'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'AssertionError'
op|'('
string|'"fetchArticle() failed: %s"'
op|'%'
op|'('
name|'error'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NNTPTestCase
dedent|''
dedent|''
name|'class'
name|'NNTPTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'server'
op|'='
name|'nntp'
op|'.'
name|'NNTPServer'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'server'
op|'.'
name|'factory'
op|'='
name|'self'
newline|'\n'
name|'self'
op|'.'
name|'backend'
op|'='
name|'database'
op|'.'
name|'NewsShelf'
op|'('
name|'None'
op|','
string|"'news.db'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'backend'
op|'.'
name|'addGroup'
op|'('
string|"'alt.test.nntp'"
op|','
string|"'y'"
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'s'
name|'in'
name|'SUBSCRIPTIONS'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'backend'
op|'.'
name|'addSubscription'
op|'('
name|'s'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'client'
op|'='
name|'TestNNTPClient'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|testLoopback
dedent|''
name|'def'
name|'testLoopback'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'loopback'
op|'.'
name|'loopbackAsync'
op|'('
name|'self'
op|'.'
name|'server'
op|','
name|'self'
op|'.'
name|'client'
op|')'
newline|'\n'
nl|'\n'
comment|'# XXX This test is woefully incomplete.  It tests the single'
nl|'\n'
comment|'# most common code path and nothing else.  Expand it and the'
nl|'\n'
comment|'# test fairy will leave you a surprise.'
nl|'\n'
nl|'\n'
comment|'#         reactor.iterate(1) # fetchGroups()'
nl|'\n'
comment|'#         reactor.iterate(1) # fetchGroup()'
nl|'\n'
comment|'#         reactor.iterate(1) # postArticle()'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
