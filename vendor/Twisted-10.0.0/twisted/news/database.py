begin_unit
comment|'# -*- test-case-name: twisted.news.test.test_news -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""\nNews server backend implementations\n\nMaintainer: Jp Calderone\n\nFuture Plans: A PyFramer-based backend and a new backend interface that is\nless NNTP specific\n"""'
newline|'\n'
nl|'\n'
nl|'\n'
name|'import'
name|'getpass'
op|','
name|'pickle'
op|','
name|'time'
op|','
name|'socket'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'StringIO'
newline|'\n'
nl|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
op|','
name|'Interface'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'news'
op|'.'
name|'nntp'
name|'import'
name|'NNTPError'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'mail'
name|'import'
name|'smtp'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'defer'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'enterprise'
name|'import'
name|'adbapi'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'persisted'
name|'import'
name|'dirdbm'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'hashlib'
name|'import'
name|'md5'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
name|'ERR_NOGROUP'
op|','
name|'ERR_NOARTICLE'
op|'='
name|'range'
op|'('
number|'2'
op|','
number|'4'
op|')'
comment|'# XXX - put NNTP values here (I guess?)'
newline|'\n'
nl|'\n'
DECL|variable|OVERVIEW_FMT
name|'OVERVIEW_FMT'
op|'='
op|'['
nl|'\n'
string|"'Subject'"
op|','
string|"'From'"
op|','
string|"'Date'"
op|','
string|"'Message-ID'"
op|','
string|"'References'"
op|','
nl|'\n'
string|"'Bytes'"
op|','
string|"'Lines'"
op|','
string|"'Xref'"
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|function|hexdigest
name|'def'
name|'hexdigest'
op|'('
name|'md5'
op|')'
op|':'
comment|"#XXX: argh. 1.5.2 doesn't have this."
newline|'\n'
indent|'    '
name|'return'
string|"''"
op|'.'
name|'join'
op|'('
name|'map'
op|'('
name|'lambda'
name|'x'
op|':'
name|'hex'
op|'('
name|'ord'
op|'('
name|'x'
op|')'
op|')'
op|'['
number|'2'
op|':'
op|']'
op|','
name|'md5'
op|'.'
name|'digest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|class|Article
dedent|''
name|'class'
name|'Article'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'head'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'body'
op|'='
name|'body'
newline|'\n'
name|'self'
op|'.'
name|'headers'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'header'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'head'
op|'.'
name|'split'
op|'('
string|"'\\r\\n'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'line'
op|'['
number|'0'
op|']'
name|'in'
string|"' \\t'"
op|':'
newline|'\n'
indent|'                '
name|'i'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'headers'
op|'['
name|'header'
op|']'
op|')'
newline|'\n'
name|'i'
op|'['
number|'1'
op|']'
op|'+='
string|"'\\r\\n'"
op|'+'
name|'line'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'i'
op|'='
name|'line'
op|'.'
name|'split'
op|'('
string|"': '"
op|','
number|'1'
op|')'
newline|'\n'
name|'header'
op|'='
name|'i'
op|'['
number|'0'
op|']'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'headers'
op|'['
name|'header'
op|']'
op|'='
name|'tuple'
op|'('
name|'i'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'getHeader'
op|'('
string|"'Message-ID'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'s'
op|'='
name|'str'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'+'
name|'self'
op|'.'
name|'body'
newline|'\n'
name|'id'
op|'='
name|'hexdigest'
op|'('
name|'md5'
op|'('
name|'s'
op|')'
op|')'
op|'+'
string|"'@'"
op|'+'
name|'socket'
op|'.'
name|'gethostname'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'putHeader'
op|'('
string|"'Message-ID'"
op|','
string|"'<%s>'"
op|'%'
name|'id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'getHeader'
op|'('
string|"'Bytes'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'putHeader'
op|'('
string|"'Bytes'"
op|','
name|'str'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'body'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'getHeader'
op|'('
string|"'Lines'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'putHeader'
op|'('
string|"'Lines'"
op|','
name|'str'
op|'('
name|'self'
op|'.'
name|'body'
op|'.'
name|'count'
op|'('
string|"'\\n'"
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'getHeader'
op|'('
string|"'Date'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'putHeader'
op|'('
string|"'Date'"
op|','
name|'time'
op|'.'
name|'ctime'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getHeader
dedent|''
dedent|''
name|'def'
name|'getHeader'
op|'('
name|'self'
op|','
name|'header'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'h'
op|'='
name|'header'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'headers'
op|'.'
name|'has_key'
op|'('
name|'h'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'headers'
op|'['
name|'h'
op|']'
op|'['
number|'1'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"''"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|putHeader
dedent|''
dedent|''
name|'def'
name|'putHeader'
op|'('
name|'self'
op|','
name|'header'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'headers'
op|'['
name|'header'
op|'.'
name|'lower'
op|'('
op|')'
op|']'
op|'='
op|'('
name|'header'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|textHeaders
dedent|''
name|'def'
name|'textHeaders'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'self'
op|'.'
name|'headers'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'.'
name|'append'
op|'('
string|"'%s: %s'"
op|'%'
name|'i'
op|')'
newline|'\n'
dedent|''
name|'return'
string|"'\\r\\n'"
op|'.'
name|'join'
op|'('
name|'headers'
op|')'
op|'+'
string|"'\\r\\n'"
newline|'\n'
nl|'\n'
DECL|member|overview
dedent|''
name|'def'
name|'overview'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'xover'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'OVERVIEW_FMT'
op|':'
newline|'\n'
indent|'            '
name|'xover'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'getHeader'
op|'('
name|'i'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'xover'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NewsServerError
dedent|''
dedent|''
name|'class'
name|'NewsServerError'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|INewsStorage
dedent|''
name|'class'
name|'INewsStorage'
op|'('
name|'Interface'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    An interface for storing and requesting news articles\n    """'
newline|'\n'
nl|'\n'
DECL|member|listRequest
name|'def'
name|'listRequest'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns a deferred whose callback will be passed a list of 4-tuples\n        containing (name, max index, min index, flags) for each news group\n        """'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|subscriptionRequest
dedent|''
name|'def'
name|'subscriptionRequest'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns a deferred whose callback will be passed the list of\n        recommended subscription groups for new server users\n        """'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|postRequest
dedent|''
name|'def'
name|'postRequest'
op|'('
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns a deferred whose callback will be invoked if \'message\'\n        is successfully posted to one or more specified groups and\n        whose errback will be invoked otherwise.\n        """'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|overviewRequest
dedent|''
name|'def'
name|'overviewRequest'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns a deferred whose callback will be passed the a list of\n        headers describing this server\'s overview format.\n        """'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|xoverRequest
dedent|''
name|'def'
name|'xoverRequest'
op|'('
name|'group'
op|','
name|'low'
op|','
name|'high'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns a deferred whose callback will be passed a list of xover\n        headers for the given group over the given range.  If low is None,\n        the range starts at the first article.  If high is None, the range\n        ends at the last article.\n        """'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|xhdrRequest
dedent|''
name|'def'
name|'xhdrRequest'
op|'('
name|'group'
op|','
name|'low'
op|','
name|'high'
op|','
name|'header'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns a deferred whose callback will be passed a list of XHDR data\n        for the given group over the given range.  If low is None,\n        the range starts at the first article.  If high is None, the range\n        ends at the last article.\n        """'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|listGroupRequest
dedent|''
name|'def'
name|'listGroupRequest'
op|'('
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns a deferred whose callback will be passed a two-tuple of\n        (group name, [article indices])\n        """'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|groupRequest
dedent|''
name|'def'
name|'groupRequest'
op|'('
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns a deferred whose callback will be passed a five-tuple of\n        (group name, article count, highest index, lowest index, group flags)\n        """'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|articleExistsRequest
dedent|''
name|'def'
name|'articleExistsRequest'
op|'('
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns a deferred whose callback will be passed with a true value\n        if a message with the specified Message-ID exists in the database\n        and with a false value otherwise.\n        """'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|articleRequest
dedent|''
name|'def'
name|'articleRequest'
op|'('
name|'group'
op|','
name|'index'
op|','
name|'id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns a deferred whose callback will be passed a file-like object\n        containing the full article text (headers and body) for the article\n        of the specified index in the specified group, and whose errback\n        will be invoked if the article or group does not exist.  If id is\n        not None, index is ignored and the article with the given Message-ID\n        will be returned instead, along with its index in the specified\n        group.\n        """'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|headRequest
dedent|''
name|'def'
name|'headRequest'
op|'('
name|'group'
op|','
name|'index'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns a deferred whose callback will be passed the header for\n        the article of the specified index in the specified group, and\n        whose errback will be invoked if the article or group does not\n        exist.\n        """'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|bodyRequest
dedent|''
name|'def'
name|'bodyRequest'
op|'('
name|'group'
op|','
name|'index'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns a deferred whose callback will be passed the body for\n        the article of the specified index in the specified group, and\n        whose errback will be invoked if the article or group does not\n        exist.\n        """'
newline|'\n'
nl|'\n'
DECL|class|NewsStorage
dedent|''
dedent|''
name|'class'
name|'NewsStorage'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Backwards compatibility class -- There is no reason to inherit from this,\n    just implement INewsStorage instead.\n    """'
newline|'\n'
DECL|member|listRequest
name|'def'
name|'listRequest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
DECL|member|subscriptionRequest
dedent|''
name|'def'
name|'subscriptionRequest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
DECL|member|postRequest
dedent|''
name|'def'
name|'postRequest'
op|'('
name|'self'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
DECL|member|overviewRequest
dedent|''
name|'def'
name|'overviewRequest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'OVERVIEW_FMT'
op|')'
newline|'\n'
DECL|member|xoverRequest
dedent|''
name|'def'
name|'xoverRequest'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'low'
op|','
name|'high'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
DECL|member|xhdrRequest
dedent|''
name|'def'
name|'xhdrRequest'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'low'
op|','
name|'high'
op|','
name|'header'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
DECL|member|listGroupRequest
dedent|''
name|'def'
name|'listGroupRequest'
op|'('
name|'self'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
DECL|member|groupRequest
dedent|''
name|'def'
name|'groupRequest'
op|'('
name|'self'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
DECL|member|articleExistsRequest
dedent|''
name|'def'
name|'articleExistsRequest'
op|'('
name|'self'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
DECL|member|articleRequest
dedent|''
name|'def'
name|'articleRequest'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'index'
op|','
name|'id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
DECL|member|headRequest
dedent|''
name|'def'
name|'headRequest'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'index'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
DECL|member|bodyRequest
dedent|''
name|'def'
name|'bodyRequest'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'index'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|PickleStorage
dedent|''
dedent|''
name|'class'
name|'PickleStorage'
op|':'
newline|'\n'
indent|'    '
string|'"""A trivial NewsStorage implementation using pickles\n\n    Contains numerous flaws and is generally unsuitable for any\n    real applications.  Consider yourself warned!\n    """'
newline|'\n'
nl|'\n'
name|'implements'
op|'('
name|'INewsStorage'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|sharedDBs
name|'sharedDBs'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'filename'
op|','
name|'groups'
op|'='
name|'None'
op|','
name|'moderators'
op|'='
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'datafile'
op|'='
name|'filename'
newline|'\n'
name|'self'
op|'.'
name|'load'
op|'('
name|'filename'
op|','
name|'groups'
op|','
name|'moderators'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getModerators
dedent|''
name|'def'
name|'getModerators'
op|'('
name|'self'
op|','
name|'groups'
op|')'
op|':'
newline|'\n'
comment|'# first see if any groups are moderated.  if so, nothing gets posted,'
nl|'\n'
comment|'# but the whole messages gets forwarded to the moderator address'
nl|'\n'
indent|'        '
name|'moderators'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'group'
name|'in'
name|'groups'
op|':'
newline|'\n'
indent|'            '
name|'moderators'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'db'
op|'['
string|"'moderators'"
op|']'
op|'.'
name|'get'
op|'('
name|'group'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'filter'
op|'('
name|'None'
op|','
name|'moderators'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|notifyModerators
dedent|''
name|'def'
name|'notifyModerators'
op|'('
name|'self'
op|','
name|'moderators'
op|','
name|'article'
op|')'
op|':'
newline|'\n'
comment|'# Moderated postings go through as long as they have an Approved'
nl|'\n'
comment|'# header, regardless of what the value is'
nl|'\n'
indent|'        '
name|'article'
op|'.'
name|'putHeader'
op|'('
string|"'To'"
op|','
string|"', '"
op|'.'
name|'join'
op|'('
name|'moderators'
op|')'
op|')'
newline|'\n'
name|'return'
name|'smtp'
op|'.'
name|'sendEmail'
op|'('
nl|'\n'
string|"'twisted@'"
op|'+'
name|'socket'
op|'.'
name|'gethostname'
op|'('
op|')'
op|','
nl|'\n'
name|'moderators'
op|','
nl|'\n'
name|'article'
op|'.'
name|'body'
op|','
nl|'\n'
name|'dict'
op|'('
name|'article'
op|'.'
name|'headers'
op|'.'
name|'values'
op|'('
op|')'
op|')'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|listRequest
dedent|''
name|'def'
name|'listRequest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Returns a list of 4-tuples: (name, max index, min index, flags)"'
newline|'\n'
name|'l'
op|'='
name|'self'
op|'.'
name|'db'
op|'['
string|"'groups'"
op|']'
newline|'\n'
name|'r'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'l'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'db'
op|'['
name|'i'
op|']'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'low'
op|'='
name|'min'
op|'('
name|'self'
op|'.'
name|'db'
op|'['
name|'i'
op|']'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
newline|'\n'
name|'high'
op|'='
name|'max'
op|'('
name|'self'
op|'.'
name|'db'
op|'['
name|'i'
op|']'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|'+'
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'low'
op|'='
name|'high'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'db'
op|'['
string|"'moderators'"
op|']'
op|'.'
name|'has_key'
op|'('
name|'i'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'flags'
op|'='
string|"'m'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'flags'
op|'='
string|"'y'"
newline|'\n'
dedent|''
name|'r'
op|'.'
name|'append'
op|'('
op|'('
name|'i'
op|','
name|'high'
op|','
name|'low'
op|','
name|'flags'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'r'
op|')'
newline|'\n'
nl|'\n'
DECL|member|subscriptionRequest
dedent|''
name|'def'
name|'subscriptionRequest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
op|'['
string|"'alt.test'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|postRequest
dedent|''
name|'def'
name|'postRequest'
op|'('
name|'self'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cleave'
op|'='
name|'message'
op|'.'
name|'find'
op|'('
string|"'\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'headers'
op|','
name|'article'
op|'='
name|'message'
op|'['
op|':'
name|'cleave'
op|']'
op|','
name|'message'
op|'['
name|'cleave'
op|'+'
number|'4'
op|':'
op|']'
newline|'\n'
nl|'\n'
name|'a'
op|'='
name|'Article'
op|'('
name|'headers'
op|','
name|'article'
op|')'
newline|'\n'
name|'groups'
op|'='
name|'a'
op|'.'
name|'getHeader'
op|'('
string|"'Newsgroups'"
op|')'
op|'.'
name|'split'
op|'('
op|')'
newline|'\n'
name|'xref'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
comment|'# Check moderated status'
nl|'\n'
name|'moderators'
op|'='
name|'self'
op|'.'
name|'getModerators'
op|'('
name|'groups'
op|')'
newline|'\n'
name|'if'
name|'moderators'
name|'and'
name|'not'
name|'a'
op|'.'
name|'getHeader'
op|'('
string|"'Approved'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'notifyModerators'
op|'('
name|'moderators'
op|','
name|'a'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'group'
name|'in'
name|'groups'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'db'
op|'.'
name|'has_key'
op|'('
name|'group'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'db'
op|'['
name|'group'
op|']'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'index'
op|'='
name|'max'
op|'('
name|'self'
op|'.'
name|'db'
op|'['
name|'group'
op|']'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|'+'
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'index'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'xref'
op|'.'
name|'append'
op|'('
op|'('
name|'group'
op|','
name|'str'
op|'('
name|'index'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'db'
op|'['
name|'group'
op|']'
op|'['
name|'index'
op|']'
op|'='
name|'a'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'len'
op|'('
name|'xref'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'a'
op|'.'
name|'putHeader'
op|'('
string|"'Xref'"
op|','
string|"'%s %s'"
op|'%'
op|'('
nl|'\n'
name|'socket'
op|'.'
name|'gethostname'
op|'('
op|')'
op|'.'
name|'split'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'map'
op|'('
name|'lambda'
name|'x'
op|':'
string|"':'"
op|'.'
name|'join'
op|'('
name|'x'
op|')'
op|','
name|'xref'
op|')'
op|')'
nl|'\n'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|overviewRequest
dedent|''
name|'def'
name|'overviewRequest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'OVERVIEW_FMT'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|xoverRequest
dedent|''
name|'def'
name|'xoverRequest'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'low'
op|','
name|'high'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'db'
op|'.'
name|'has_key'
op|'('
name|'group'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
dedent|''
name|'r'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'self'
op|'.'
name|'db'
op|'['
name|'group'
op|']'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
op|'('
name|'low'
name|'is'
name|'None'
name|'or'
name|'i'
op|'>='
name|'low'
op|')'
name|'and'
op|'('
name|'high'
name|'is'
name|'None'
name|'or'
name|'i'
op|'<='
name|'high'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'r'
op|'.'
name|'append'
op|'('
op|'['
name|'str'
op|'('
name|'i'
op|')'
op|']'
op|'+'
name|'self'
op|'.'
name|'db'
op|'['
name|'group'
op|']'
op|'['
name|'i'
op|']'
op|'.'
name|'overview'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'r'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|xhdrRequest
dedent|''
name|'def'
name|'xhdrRequest'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'low'
op|','
name|'high'
op|','
name|'header'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'db'
op|'.'
name|'has_key'
op|'('
name|'group'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
dedent|''
name|'r'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'self'
op|'.'
name|'db'
op|'['
name|'group'
op|']'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'low'
name|'is'
name|'None'
name|'or'
name|'i'
op|'>='
name|'low'
name|'and'
name|'high'
name|'is'
name|'None'
name|'or'
name|'i'
op|'<='
name|'high'
op|':'
newline|'\n'
indent|'                '
name|'r'
op|'.'
name|'append'
op|'('
op|'('
name|'i'
op|','
name|'self'
op|'.'
name|'db'
op|'['
name|'group'
op|']'
op|'['
name|'i'
op|']'
op|'.'
name|'getHeader'
op|'('
name|'header'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'r'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|listGroupRequest
dedent|''
name|'def'
name|'listGroupRequest'
op|'('
name|'self'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'db'
op|'.'
name|'has_key'
op|'('
name|'group'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
op|'('
name|'group'
op|','
name|'self'
op|'.'
name|'db'
op|'['
name|'group'
op|']'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|groupRequest
dedent|''
dedent|''
name|'def'
name|'groupRequest'
op|'('
name|'self'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'db'
op|'.'
name|'has_key'
op|'('
name|'group'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'db'
op|'['
name|'group'
op|']'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'num'
op|'='
name|'len'
op|'('
name|'self'
op|'.'
name|'db'
op|'['
name|'group'
op|']'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
newline|'\n'
name|'low'
op|'='
name|'min'
op|'('
name|'self'
op|'.'
name|'db'
op|'['
name|'group'
op|']'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
newline|'\n'
name|'high'
op|'='
name|'max'
op|'('
name|'self'
op|'.'
name|'db'
op|'['
name|'group'
op|']'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'num'
op|'='
name|'low'
op|'='
name|'high'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'flags'
op|'='
string|"'y'"
newline|'\n'
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
op|'('
name|'group'
op|','
name|'num'
op|','
name|'high'
op|','
name|'low'
op|','
name|'flags'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'ERR_NOGROUP'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|articleExistsRequest
dedent|''
dedent|''
name|'def'
name|'articleExistsRequest'
op|'('
name|'self'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'g'
name|'in'
name|'self'
op|'.'
name|'db'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'a'
name|'in'
name|'g'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'a'
op|'.'
name|'getHeader'
op|'('
string|"'Message-ID'"
op|')'
op|'=='
name|'id'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
number|'1'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
number|'0'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|articleRequest
dedent|''
name|'def'
name|'articleRequest'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'index'
op|','
name|'id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'id'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'NotImplementedError'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'db'
op|'.'
name|'has_key'
op|'('
name|'group'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'db'
op|'['
name|'group'
op|']'
op|'.'
name|'has_key'
op|'('
name|'index'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'a'
op|'='
name|'self'
op|'.'
name|'db'
op|'['
name|'group'
op|']'
op|'['
name|'index'
op|']'
newline|'\n'
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
op|'('
nl|'\n'
name|'index'
op|','
nl|'\n'
name|'a'
op|'.'
name|'getHeader'
op|'('
string|"'Message-ID'"
op|')'
op|','
nl|'\n'
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
name|'a'
op|'.'
name|'textHeaders'
op|'('
op|')'
op|'+'
string|"'\\r\\n'"
op|'+'
name|'a'
op|'.'
name|'body'
op|')'
nl|'\n'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'ERR_NOARTICLE'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'ERR_NOGROUP'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|headRequest
dedent|''
dedent|''
name|'def'
name|'headRequest'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'index'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'db'
op|'.'
name|'has_key'
op|'('
name|'group'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'db'
op|'['
name|'group'
op|']'
op|'.'
name|'has_key'
op|'('
name|'index'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'a'
op|'='
name|'self'
op|'.'
name|'db'
op|'['
name|'group'
op|']'
op|'['
name|'index'
op|']'
newline|'\n'
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
op|'('
name|'index'
op|','
name|'a'
op|'.'
name|'getHeader'
op|'('
string|"'Message-ID'"
op|')'
op|','
name|'a'
op|'.'
name|'textHeaders'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'ERR_NOARTICLE'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'ERR_NOGROUP'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|bodyRequest
dedent|''
dedent|''
name|'def'
name|'bodyRequest'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'index'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'db'
op|'.'
name|'has_key'
op|'('
name|'group'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'db'
op|'['
name|'group'
op|']'
op|'.'
name|'has_key'
op|'('
name|'index'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'a'
op|'='
name|'self'
op|'.'
name|'db'
op|'['
name|'group'
op|']'
op|'['
name|'index'
op|']'
newline|'\n'
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
op|'('
name|'index'
op|','
name|'a'
op|'.'
name|'getHeader'
op|'('
string|"'Message-ID'"
op|')'
op|','
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
name|'a'
op|'.'
name|'body'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'ERR_NOARTICLE'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'ERR_NOGROUP'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|flush
dedent|''
dedent|''
name|'def'
name|'flush'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'f'
op|'='
name|'open'
op|'('
name|'self'
op|'.'
name|'datafile'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'pickle'
op|'.'
name|'dump'
op|'('
name|'self'
op|'.'
name|'db'
op|','
name|'f'
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|load
dedent|''
name|'def'
name|'load'
op|'('
name|'self'
op|','
name|'filename'
op|','
name|'groups'
op|'='
name|'None'
op|','
name|'moderators'
op|'='
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'PickleStorage'
op|'.'
name|'sharedDBs'
op|'.'
name|'has_key'
op|'('
name|'filename'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'db'
op|'='
name|'PickleStorage'
op|'.'
name|'sharedDBs'
op|'['
name|'filename'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'db'
op|'='
name|'pickle'
op|'.'
name|'load'
op|'('
name|'open'
op|'('
name|'filename'
op|')'
op|')'
newline|'\n'
name|'PickleStorage'
op|'.'
name|'sharedDBs'
op|'['
name|'filename'
op|']'
op|'='
name|'self'
op|'.'
name|'db'
newline|'\n'
dedent|''
name|'except'
name|'IOError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'db'
op|'='
name|'PickleStorage'
op|'.'
name|'sharedDBs'
op|'['
name|'filename'
op|']'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'db'
op|'['
string|"'groups'"
op|']'
op|'='
name|'groups'
newline|'\n'
name|'if'
name|'groups'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'for'
name|'i'
name|'in'
name|'groups'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'db'
op|'['
name|'i'
op|']'
op|'='
op|'{'
op|'}'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'db'
op|'['
string|"'moderators'"
op|']'
op|'='
name|'dict'
op|'('
name|'moderators'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Group
dedent|''
dedent|''
dedent|''
dedent|''
name|'class'
name|'Group'
op|':'
newline|'\n'
DECL|variable|name
indent|'    '
name|'name'
op|'='
name|'None'
newline|'\n'
DECL|variable|flags
name|'flags'
op|'='
string|"''"
newline|'\n'
DECL|variable|minArticle
name|'minArticle'
op|'='
number|'1'
newline|'\n'
DECL|variable|maxArticle
name|'maxArticle'
op|'='
number|'0'
newline|'\n'
DECL|variable|articles
name|'articles'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'flags'
op|'='
string|"'y'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'flags'
op|'='
name|'flags'
newline|'\n'
name|'self'
op|'.'
name|'articles'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NewsShelf
dedent|''
dedent|''
name|'class'
name|'NewsShelf'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A NewStorage implementation using Twisted\'s dirdbm persistence module.\n    """'
newline|'\n'
nl|'\n'
name|'implements'
op|'('
name|'INewsStorage'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'mailhost'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'path'
op|'='
name|'path'
newline|'\n'
name|'self'
op|'.'
name|'mailhost'
op|'='
name|'mailhost'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'dbm'
op|'='
name|'dirdbm'
op|'.'
name|'Shelf'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'path'
op|','
string|'"newsshelf"'
op|')'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'len'
op|'('
name|'self'
op|'.'
name|'dbm'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'initialize'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|initialize
dedent|''
dedent|''
name|'def'
name|'initialize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# A dictionary of group name/Group instance items'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'groups'"
op|']'
op|'='
name|'dirdbm'
op|'.'
name|'Shelf'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'path'
op|','
string|"'groups'"
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# A dictionary of group name/email address'
nl|'\n'
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'moderators'"
op|']'
op|'='
name|'dirdbm'
op|'.'
name|'Shelf'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'path'
op|','
string|"'moderators'"
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# A list of group names'
nl|'\n'
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'subscriptions'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
comment|'# A dictionary of MessageID strings/xref lists'
nl|'\n'
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'Message-IDs'"
op|']'
op|'='
name|'dirdbm'
op|'.'
name|'Shelf'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'path'
op|','
string|"'Message-IDs'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|addGroup
dedent|''
name|'def'
name|'addGroup'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'groups'"
op|']'
op|'['
name|'name'
op|']'
op|'='
name|'Group'
op|'('
name|'name'
op|','
name|'flags'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|addSubscription
dedent|''
name|'def'
name|'addSubscription'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'subscriptions'"
op|']'
op|'='
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'subscriptions'"
op|']'
op|'+'
op|'['
name|'name'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|addModerator
dedent|''
name|'def'
name|'addModerator'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'email'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'moderators'"
op|']'
op|'['
name|'group'
op|']'
op|'='
name|'email'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|listRequest
dedent|''
name|'def'
name|'listRequest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'g'
name|'in'
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'groups'"
op|']'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'.'
name|'append'
op|'('
op|'('
name|'g'
op|'.'
name|'name'
op|','
name|'g'
op|'.'
name|'maxArticle'
op|','
name|'g'
op|'.'
name|'minArticle'
op|','
name|'g'
op|'.'
name|'flags'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'result'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|subscriptionRequest
dedent|''
name|'def'
name|'subscriptionRequest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'subscriptions'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getModerator
dedent|''
name|'def'
name|'getModerator'
op|'('
name|'self'
op|','
name|'groups'
op|')'
op|':'
newline|'\n'
comment|'# first see if any groups are moderated.  if so, nothing gets posted,'
nl|'\n'
comment|'# but the whole messages gets forwarded to the moderator address'
nl|'\n'
indent|'        '
name|'for'
name|'group'
name|'in'
name|'groups'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'moderators'"
op|']'
op|'['
name|'group'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|notifyModerator
dedent|''
name|'def'
name|'notifyModerator'
op|'('
name|'self'
op|','
name|'moderator'
op|','
name|'article'
op|')'
op|':'
newline|'\n'
comment|'# Moderated postings go through as long as they have an Approved'
nl|'\n'
comment|'# header, regardless of what the value is'
nl|'\n'
indent|'        '
name|'print'
string|"'To is '"
op|','
name|'moderator'
newline|'\n'
name|'article'
op|'.'
name|'putHeader'
op|'('
string|"'To'"
op|','
name|'moderator'
op|')'
newline|'\n'
name|'return'
name|'smtp'
op|'.'
name|'sendEmail'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'mailhost'
op|','
nl|'\n'
string|"'twisted-news@'"
op|'+'
name|'socket'
op|'.'
name|'gethostname'
op|'('
op|')'
op|','
nl|'\n'
name|'moderator'
op|','
nl|'\n'
name|'article'
op|'.'
name|'body'
op|','
nl|'\n'
name|'dict'
op|'('
name|'article'
op|'.'
name|'headers'
op|'.'
name|'values'
op|'('
op|')'
op|')'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|postRequest
dedent|''
name|'def'
name|'postRequest'
op|'('
name|'self'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cleave'
op|'='
name|'message'
op|'.'
name|'find'
op|'('
string|"'\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'headers'
op|','
name|'article'
op|'='
name|'message'
op|'['
op|':'
name|'cleave'
op|']'
op|','
name|'message'
op|'['
name|'cleave'
op|'+'
number|'4'
op|':'
op|']'
newline|'\n'
nl|'\n'
name|'article'
op|'='
name|'Article'
op|'('
name|'headers'
op|','
name|'article'
op|')'
newline|'\n'
name|'groups'
op|'='
name|'article'
op|'.'
name|'getHeader'
op|'('
string|"'Newsgroups'"
op|')'
op|'.'
name|'split'
op|'('
op|')'
newline|'\n'
name|'xref'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
comment|'# Check for moderated status'
nl|'\n'
name|'moderator'
op|'='
name|'self'
op|'.'
name|'getModerator'
op|'('
name|'groups'
op|')'
newline|'\n'
name|'if'
name|'moderator'
name|'and'
name|'not'
name|'article'
op|'.'
name|'getHeader'
op|'('
string|"'Approved'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'notifyModerator'
op|'('
name|'moderator'
op|','
name|'article'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'for'
name|'group'
name|'in'
name|'groups'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'g'
op|'='
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'groups'"
op|']'
op|'['
name|'group'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'index'
op|'='
name|'g'
op|'.'
name|'maxArticle'
op|'+'
number|'1'
newline|'\n'
name|'g'
op|'.'
name|'maxArticle'
op|'+='
number|'1'
newline|'\n'
name|'g'
op|'.'
name|'articles'
op|'['
name|'index'
op|']'
op|'='
name|'article'
newline|'\n'
name|'xref'
op|'.'
name|'append'
op|'('
op|'('
name|'group'
op|','
name|'str'
op|'('
name|'index'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'groups'"
op|']'
op|'['
name|'group'
op|']'
op|'='
name|'g'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'xref'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'NewsServerError'
op|'('
string|'"No groups carried: "'
op|'+'
string|"' '"
op|'.'
name|'join'
op|'('
name|'groups'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'article'
op|'.'
name|'putHeader'
op|'('
string|"'Xref'"
op|','
string|"'%s %s'"
op|'%'
op|'('
name|'socket'
op|'.'
name|'gethostname'
op|'('
op|')'
op|'.'
name|'split'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|','
string|"' '"
op|'.'
name|'join'
op|'('
name|'map'
op|'('
name|'lambda'
name|'x'
op|':'
string|"':'"
op|'.'
name|'join'
op|'('
name|'x'
op|')'
op|','
name|'xref'
op|')'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'Message-IDs'"
op|']'
op|'['
name|'article'
op|'.'
name|'getHeader'
op|'('
string|"'Message-ID'"
op|')'
op|']'
op|'='
name|'xref'
newline|'\n'
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|overviewRequest
dedent|''
name|'def'
name|'overviewRequest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'OVERVIEW_FMT'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|xoverRequest
dedent|''
name|'def'
name|'xoverRequest'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'low'
op|','
name|'high'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'groups'"
op|']'
op|'.'
name|'has_key'
op|'('
name|'group'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'low'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'low'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'if'
name|'high'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'high'
op|'='
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'groups'"
op|']'
op|'['
name|'group'
op|']'
op|'.'
name|'maxArticle'
newline|'\n'
dedent|''
name|'r'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'low'
op|','
name|'high'
op|'+'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'groups'"
op|']'
op|'['
name|'group'
op|']'
op|'.'
name|'articles'
op|'.'
name|'has_key'
op|'('
name|'i'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'r'
op|'.'
name|'append'
op|'('
op|'['
name|'str'
op|'('
name|'i'
op|')'
op|']'
op|'+'
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'groups'"
op|']'
op|'['
name|'group'
op|']'
op|'.'
name|'articles'
op|'['
name|'i'
op|']'
op|'.'
name|'overview'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'r'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|xhdrRequest
dedent|''
name|'def'
name|'xhdrRequest'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'low'
op|','
name|'high'
op|','
name|'header'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'group'
name|'not'
name|'in'
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'groups'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'low'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'low'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'if'
name|'high'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'high'
op|'='
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'groups'"
op|']'
op|'['
name|'group'
op|']'
op|'.'
name|'maxArticle'
newline|'\n'
dedent|''
name|'r'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'low'
op|','
name|'high'
op|'+'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'groups'"
op|']'
op|'['
name|'group'
op|']'
op|'.'
name|'articles'
op|'.'
name|'has_key'
op|'('
name|'i'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'r'
op|'.'
name|'append'
op|'('
op|'('
name|'i'
op|','
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'groups'"
op|']'
op|'['
name|'group'
op|']'
op|'.'
name|'articles'
op|'['
name|'i'
op|']'
op|'.'
name|'getHeader'
op|'('
name|'header'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'r'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|listGroupRequest
dedent|''
name|'def'
name|'listGroupRequest'
op|'('
name|'self'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'groups'"
op|']'
op|'.'
name|'has_key'
op|'('
name|'group'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
op|'('
name|'group'
op|','
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'groups'"
op|']'
op|'['
name|'group'
op|']'
op|'.'
name|'articles'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'NewsServerError'
op|'('
string|'"No such group: "'
op|'+'
name|'group'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|groupRequest
dedent|''
name|'def'
name|'groupRequest'
op|'('
name|'self'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'g'
op|'='
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'groups'"
op|']'
op|'['
name|'group'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'NewsServerError'
op|'('
string|'"No such group: "'
op|'+'
name|'group'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'flags'
op|'='
name|'g'
op|'.'
name|'flags'
newline|'\n'
name|'low'
op|'='
name|'g'
op|'.'
name|'minArticle'
newline|'\n'
name|'high'
op|'='
name|'g'
op|'.'
name|'maxArticle'
newline|'\n'
name|'num'
op|'='
name|'high'
op|'-'
name|'low'
op|'+'
number|'1'
newline|'\n'
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
op|'('
name|'group'
op|','
name|'num'
op|','
name|'high'
op|','
name|'low'
op|','
name|'flags'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|articleExistsRequest
dedent|''
dedent|''
name|'def'
name|'articleExistsRequest'
op|'('
name|'self'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'id'
name|'in'
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'Message-IDs'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|articleRequest
dedent|''
name|'def'
name|'articleRequest'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'index'
op|','
name|'id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'id'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'xref'
op|'='
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'Message-IDs'"
op|']'
op|'['
name|'id'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'NewsServerError'
op|'('
string|'"No such article: "'
op|'+'
name|'id'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'group'
op|','
name|'index'
op|'='
name|'xref'
op|'['
number|'0'
op|']'
newline|'\n'
name|'index'
op|'='
name|'int'
op|'('
name|'index'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'a'
op|'='
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'groups'"
op|']'
op|'['
name|'group'
op|']'
op|'.'
name|'articles'
op|'['
name|'index'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'NewsServerError'
op|'('
string|'"No such group: "'
op|'+'
name|'group'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
op|'('
nl|'\n'
name|'index'
op|','
nl|'\n'
name|'a'
op|'.'
name|'getHeader'
op|'('
string|"'Message-ID'"
op|')'
op|','
nl|'\n'
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
name|'a'
op|'.'
name|'textHeaders'
op|'('
op|')'
op|'+'
string|"'\\r\\n'"
op|'+'
name|'a'
op|'.'
name|'body'
op|')'
nl|'\n'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|headRequest
dedent|''
dedent|''
name|'def'
name|'headRequest'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'index'
op|','
name|'id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'id'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'xref'
op|'='
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'Message-IDs'"
op|']'
op|'['
name|'id'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'NewsServerError'
op|'('
string|'"No such article: "'
op|'+'
name|'id'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'group'
op|','
name|'index'
op|'='
name|'xref'
op|'['
number|'0'
op|']'
newline|'\n'
name|'index'
op|'='
name|'int'
op|'('
name|'index'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'a'
op|'='
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'groups'"
op|']'
op|'['
name|'group'
op|']'
op|'.'
name|'articles'
op|'['
name|'index'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'NewsServerError'
op|'('
string|'"No such group: "'
op|'+'
name|'group'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
op|'('
name|'index'
op|','
name|'a'
op|'.'
name|'getHeader'
op|'('
string|"'Message-ID'"
op|')'
op|','
name|'a'
op|'.'
name|'textHeaders'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|bodyRequest
dedent|''
dedent|''
name|'def'
name|'bodyRequest'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'index'
op|','
name|'id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'id'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'xref'
op|'='
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'Message-IDs'"
op|']'
op|'['
name|'id'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'NewsServerError'
op|'('
string|'"No such article: "'
op|'+'
name|'id'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'group'
op|','
name|'index'
op|'='
name|'xref'
op|'['
number|'0'
op|']'
newline|'\n'
name|'index'
op|'='
name|'int'
op|'('
name|'index'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'a'
op|'='
name|'self'
op|'.'
name|'dbm'
op|'['
string|"'groups'"
op|']'
op|'['
name|'group'
op|']'
op|'.'
name|'articles'
op|'['
name|'index'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'NewsServerError'
op|'('
string|'"No such group: "'
op|'+'
name|'group'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
op|'('
name|'index'
op|','
name|'a'
op|'.'
name|'getHeader'
op|'('
string|"'Message-ID'"
op|')'
op|','
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
name|'a'
op|'.'
name|'body'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NewsStorageAugmentation
dedent|''
dedent|''
dedent|''
name|'class'
name|'NewsStorageAugmentation'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A NewsStorage implementation using Twisted\'s asynchronous DB-API\n    """'
newline|'\n'
nl|'\n'
name|'implements'
op|'('
name|'INewsStorage'
op|')'
newline|'\n'
nl|'\n'
name|'schema'
op|'='
string|'"""\n\n    CREATE TABLE groups (\n        group_id      SERIAL,\n        name          VARCHAR(80) NOT NULL,\n\n        flags         INTEGER DEFAULT 0 NOT NULL\n    );\n\n    CREATE UNIQUE INDEX group_id_index ON groups (group_id);\n    CREATE UNIQUE INDEX name_id_index ON groups (name);\n\n    CREATE TABLE articles (\n        article_id    SERIAL,\n        message_id    TEXT,\n\n        header        TEXT,\n        body          TEXT\n    );\n\n    CREATE UNIQUE INDEX article_id_index ON articles (article_id);\n    CREATE UNIQUE INDEX article_message_index ON articles (message_id);\n\n    CREATE TABLE postings (\n        group_id      INTEGER,\n        article_id    INTEGER,\n        article_index INTEGER NOT NULL\n    );\n\n    CREATE UNIQUE INDEX posting_article_index ON postings (article_id);\n\n    CREATE TABLE subscriptions (\n        group_id    INTEGER\n    );\n\n    CREATE TABLE overview (\n        header      TEXT\n    );\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'info'
op|'='
name|'info'
newline|'\n'
name|'self'
op|'.'
name|'dbpool'
op|'='
name|'adbapi'
op|'.'
name|'ConnectionPool'
op|'('
op|'**'
name|'self'
op|'.'
name|'info'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|__setstate__
dedent|''
name|'def'
name|'__setstate__'
op|'('
name|'self'
op|','
name|'state'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'__dict__'
op|'='
name|'state'
newline|'\n'
name|'self'
op|'.'
name|'info'
op|'['
string|"'password'"
op|']'
op|'='
name|'getpass'
op|'.'
name|'getpass'
op|'('
string|"'Database password for %s: '"
op|'%'
op|'('
name|'self'
op|'.'
name|'info'
op|'['
string|"'user'"
op|']'
op|','
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dbpool'
op|'='
name|'adbapi'
op|'.'
name|'ConnectionPool'
op|'('
op|'**'
name|'self'
op|'.'
name|'info'
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'info'
op|'['
string|"'password'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|listRequest
dedent|''
name|'def'
name|'listRequest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# COALESCE may not be totally portable'
nl|'\n'
comment|'# it is shorthand for'
nl|'\n'
comment|'# CASE WHEN (first parameter) IS NOT NULL then (first parameter) ELSE (second parameter) END'
nl|'\n'
indent|'        '
name|'sql'
op|'='
string|'"""\n            SELECT groups.name,\n                COALESCE(MAX(postings.article_index), 0),\n                COALESCE(MIN(postings.article_index), 0),\n                groups.flags\n            FROM groups LEFT OUTER JOIN postings\n            ON postings.group_id = groups.group_id\n            GROUP BY groups.name, groups.flags\n            ORDER BY groups.name\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'dbpool'
op|'.'
name|'runQuery'
op|'('
name|'sql'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|subscriptionRequest
dedent|''
name|'def'
name|'subscriptionRequest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sql'
op|'='
string|'"""\n            SELECT groups.name FROM groups,subscriptions WHERE groups.group_id = subscriptions.group_id\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'dbpool'
op|'.'
name|'runQuery'
op|'('
name|'sql'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|postRequest
dedent|''
name|'def'
name|'postRequest'
op|'('
name|'self'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cleave'
op|'='
name|'message'
op|'.'
name|'find'
op|'('
string|"'\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'headers'
op|','
name|'article'
op|'='
name|'message'
op|'['
op|':'
name|'cleave'
op|']'
op|','
name|'message'
op|'['
name|'cleave'
op|'+'
number|'4'
op|':'
op|']'
newline|'\n'
name|'article'
op|'='
name|'Article'
op|'('
name|'headers'
op|','
name|'article'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'dbpool'
op|'.'
name|'runInteraction'
op|'('
name|'self'
op|'.'
name|'_doPost'
op|','
name|'article'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_doPost
dedent|''
name|'def'
name|'_doPost'
op|'('
name|'self'
op|','
name|'transaction'
op|','
name|'article'
op|')'
op|':'
newline|'\n'
comment|'# Get the group ids'
nl|'\n'
indent|'        '
name|'groups'
op|'='
name|'article'
op|'.'
name|'getHeader'
op|'('
string|"'Newsgroups'"
op|')'
op|'.'
name|'split'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'len'
op|'('
name|'groups'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'NNTPError'
op|'('
string|"'Missing Newsgroups header'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'sql'
op|'='
string|'"""\n            SELECT name, group_id FROM groups\n            WHERE name IN (%s)\n        """'
op|'%'
op|'('
string|"', '"
op|'.'
name|'join'
op|'('
op|'['
op|'('
string|'"\'%s\'"'
op|'%'
op|'('
name|'adbapi'
op|'.'
name|'safe'
op|'('
name|'group'
op|')'
op|','
op|')'
op|')'
name|'for'
name|'group'
name|'in'
name|'groups'
op|']'
op|')'
op|','
op|')'
newline|'\n'
nl|'\n'
name|'transaction'
op|'.'
name|'execute'
op|'('
name|'sql'
op|')'
newline|'\n'
name|'result'
op|'='
name|'transaction'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# No relevant groups, bye bye!'
nl|'\n'
name|'if'
name|'not'
name|'len'
op|'('
name|'result'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'NNTPError'
op|'('
string|"'None of groups in Newsgroup header carried'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Got some groups, now find the indices this article will have in each'
nl|'\n'
dedent|''
name|'sql'
op|'='
string|'"""\n            SELECT groups.group_id, COALESCE(MAX(postings.article_index), 0) + 1\n            FROM groups LEFT OUTER JOIN postings\n            ON postings.group_id = groups.group_id\n            WHERE groups.group_id IN (%s)\n            GROUP BY groups.group_id\n        """'
op|'%'
op|'('
string|"', '"
op|'.'
name|'join'
op|'('
op|'['
op|'('
string|'"%d"'
op|'%'
op|'('
name|'id'
op|','
op|')'
op|')'
name|'for'
op|'('
name|'group'
op|','
name|'id'
op|')'
name|'in'
name|'result'
op|']'
op|')'
op|','
op|')'
newline|'\n'
nl|'\n'
name|'transaction'
op|'.'
name|'execute'
op|'('
name|'sql'
op|')'
newline|'\n'
name|'indices'
op|'='
name|'transaction'
op|'.'
name|'fetchall'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'len'
op|'('
name|'indices'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'NNTPError'
op|'('
string|"'Internal server error - no indices found'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Associate indices with group names'
nl|'\n'
dedent|''
name|'gidToName'
op|'='
name|'dict'
op|'('
op|'['
op|'('
name|'b'
op|','
name|'a'
op|')'
name|'for'
op|'('
name|'a'
op|','
name|'b'
op|')'
name|'in'
name|'result'
op|']'
op|')'
newline|'\n'
name|'gidToIndex'
op|'='
name|'dict'
op|'('
name|'indices'
op|')'
newline|'\n'
nl|'\n'
name|'nameIndex'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'gidToName'
op|':'
newline|'\n'
indent|'            '
name|'nameIndex'
op|'.'
name|'append'
op|'('
op|'('
name|'gidToName'
op|'['
name|'i'
op|']'
op|','
name|'gidToIndex'
op|'['
name|'i'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Build xrefs'
nl|'\n'
dedent|''
name|'xrefs'
op|'='
name|'socket'
op|'.'
name|'gethostname'
op|'('
op|')'
op|'.'
name|'split'
op|'('
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'xrefs'
op|'='
name|'xrefs'
op|'+'
string|"' '"
op|'+'
string|"' '"
op|'.'
name|'join'
op|'('
op|'['
op|'('
string|"'%s:%d'"
op|'%'
op|'('
name|'group'
op|','
name|'id'
op|')'
op|')'
name|'for'
op|'('
name|'group'
op|','
name|'id'
op|')'
name|'in'
name|'nameIndex'
op|']'
op|')'
newline|'\n'
name|'article'
op|'.'
name|'putHeader'
op|'('
string|"'Xref'"
op|','
name|'xrefs'
op|')'
newline|'\n'
nl|'\n'
comment|"# Hey!  The article is ready to be posted!  God damn f'in finally."
nl|'\n'
name|'sql'
op|'='
string|'"""\n            INSERT INTO articles (message_id, header, body)\n            VALUES (\'%s\', \'%s\', \'%s\')\n        """'
op|'%'
op|'('
nl|'\n'
name|'adbapi'
op|'.'
name|'safe'
op|'('
name|'article'
op|'.'
name|'getHeader'
op|'('
string|"'Message-ID'"
op|')'
op|')'
op|','
nl|'\n'
name|'adbapi'
op|'.'
name|'safe'
op|'('
name|'article'
op|'.'
name|'textHeaders'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'adbapi'
op|'.'
name|'safe'
op|'('
name|'article'
op|'.'
name|'body'
op|')'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
name|'transaction'
op|'.'
name|'execute'
op|'('
name|'sql'
op|')'
newline|'\n'
nl|'\n'
comment|'# Now update the posting to reflect the groups to which this belongs'
nl|'\n'
name|'for'
name|'gid'
name|'in'
name|'gidToName'
op|':'
newline|'\n'
indent|'            '
name|'sql'
op|'='
string|'"""\n                INSERT INTO postings (group_id, article_id, article_index)\n                VALUES (%d, (SELECT last_value FROM articles_article_id_seq), %d)\n            """'
op|'%'
op|'('
name|'gid'
op|','
name|'gidToIndex'
op|'['
name|'gid'
op|']'
op|')'
newline|'\n'
name|'transaction'
op|'.'
name|'execute'
op|'('
name|'sql'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'len'
op|'('
name|'nameIndex'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|overviewRequest
dedent|''
name|'def'
name|'overviewRequest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sql'
op|'='
string|'"""\n            SELECT header FROM overview\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'dbpool'
op|'.'
name|'runQuery'
op|'('
name|'sql'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'result'
op|':'
op|'['
name|'header'
op|'['
number|'0'
op|']'
name|'for'
name|'header'
name|'in'
name|'result'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|xoverRequest
dedent|''
name|'def'
name|'xoverRequest'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'low'
op|','
name|'high'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sql'
op|'='
string|'"""\n            SELECT postings.article_index, articles.header\n            FROM articles,postings,groups\n            WHERE postings.group_id = groups.group_id\n            AND groups.name = \'%s\'\n            AND postings.article_id = articles.article_id\n            %s\n            %s\n        """'
op|'%'
op|'('
nl|'\n'
name|'adbapi'
op|'.'
name|'safe'
op|'('
name|'group'
op|')'
op|','
nl|'\n'
name|'low'
name|'is'
name|'not'
name|'None'
name|'and'
string|'"AND postings.article_index >= %d"'
op|'%'
op|'('
name|'low'
op|','
op|')'
name|'or'
string|'""'
op|','
nl|'\n'
name|'high'
name|'is'
name|'not'
name|'None'
name|'and'
string|'"AND postings.article_index <= %d"'
op|'%'
op|'('
name|'high'
op|','
op|')'
name|'or'
string|'""'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'dbpool'
op|'.'
name|'runQuery'
op|'('
name|'sql'
op|')'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'lambda'
name|'results'
op|':'
op|'['
nl|'\n'
op|'['
name|'id'
op|']'
op|'+'
name|'Article'
op|'('
name|'header'
op|','
name|'None'
op|')'
op|'.'
name|'overview'
op|'('
op|')'
name|'for'
op|'('
name|'id'
op|','
name|'header'
op|')'
name|'in'
name|'results'
nl|'\n'
op|']'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|xhdrRequest
dedent|''
name|'def'
name|'xhdrRequest'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'low'
op|','
name|'high'
op|','
name|'header'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sql'
op|'='
string|'"""\n            SELECT articles.header\n            FROM groups,postings,articles\n            WHERE groups.name = \'%s\' AND postings.group_id = groups.group_id\n            AND postings.article_index >= %d\n            AND postings.article_index <= %d\n        """'
op|'%'
op|'('
name|'adbapi'
op|'.'
name|'safe'
op|'('
name|'group'
op|')'
op|','
name|'low'
op|','
name|'high'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'dbpool'
op|'.'
name|'runQuery'
op|'('
name|'sql'
op|')'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'lambda'
name|'results'
op|':'
op|'['
nl|'\n'
op|'('
name|'i'
op|','
name|'Article'
op|'('
name|'h'
op|','
name|'None'
op|')'
op|'.'
name|'getHeader'
op|'('
name|'h'
op|')'
op|')'
name|'for'
op|'('
name|'i'
op|','
name|'h'
op|')'
name|'in'
name|'results'
nl|'\n'
op|']'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|listGroupRequest
dedent|''
name|'def'
name|'listGroupRequest'
op|'('
name|'self'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sql'
op|'='
string|'"""\n            SELECT postings.article_index FROM postings,groups\n            WHERE postings.group_id = groups.group_id\n            AND groups.name = \'%s\'\n        """'
op|'%'
op|'('
name|'adbapi'
op|'.'
name|'safe'
op|'('
name|'group'
op|')'
op|','
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'dbpool'
op|'.'
name|'runQuery'
op|'('
name|'sql'
op|')'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'lambda'
name|'results'
op|','
name|'group'
op|'='
name|'group'
op|':'
op|'('
name|'group'
op|','
op|'['
name|'res'
op|'['
number|'0'
op|']'
name|'for'
name|'res'
name|'in'
name|'results'
op|']'
op|')'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|groupRequest
dedent|''
name|'def'
name|'groupRequest'
op|'('
name|'self'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sql'
op|'='
string|'"""\n            SELECT groups.name,\n                COUNT(postings.article_index),\n                COALESCE(MAX(postings.article_index), 0),\n                COALESCE(MIN(postings.article_index), 0),\n                groups.flags\n            FROM groups LEFT OUTER JOIN postings\n            ON postings.group_id = groups.group_id\n            WHERE groups.name = \'%s\'\n            GROUP BY groups.name, groups.flags\n        """'
op|'%'
op|'('
name|'adbapi'
op|'.'
name|'safe'
op|'('
name|'group'
op|')'
op|','
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'dbpool'
op|'.'
name|'runQuery'
op|'('
name|'sql'
op|')'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'lambda'
name|'results'
op|':'
name|'tuple'
op|'('
name|'results'
op|'['
number|'0'
op|']'
op|')'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|articleExistsRequest
dedent|''
name|'def'
name|'articleExistsRequest'
op|'('
name|'self'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sql'
op|'='
string|'"""\n            SELECT COUNT(message_id) FROM articles\n            WHERE message_id = \'%s\'\n        """'
op|'%'
op|'('
name|'adbapi'
op|'.'
name|'safe'
op|'('
name|'id'
op|')'
op|','
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'dbpool'
op|'.'
name|'runQuery'
op|'('
name|'sql'
op|')'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'lambda'
name|'result'
op|':'
name|'bool'
op|'('
name|'result'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|')'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|articleRequest
dedent|''
name|'def'
name|'articleRequest'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'index'
op|','
name|'id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'id'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'sql'
op|'='
string|'"""\n                SELECT postings.article_index, articles.message_id, articles.header, articles.body\n                FROM groups,postings LEFT OUTER JOIN articles\n                ON articles.message_id = \'%s\'\n                WHERE groups.name = \'%s\'\n                AND groups.group_id = postings.group_id\n            """'
op|'%'
op|'('
name|'adbapi'
op|'.'
name|'safe'
op|'('
name|'id'
op|')'
op|','
name|'adbapi'
op|'.'
name|'safe'
op|'('
name|'group'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'sql'
op|'='
string|'"""\n                SELECT postings.article_index, articles.message_id, articles.header, articles.body\n                FROM groups,articles LEFT OUTER JOIN postings\n                ON postings.article_id = articles.article_id\n                WHERE postings.article_index = %d\n                AND postings.group_id = groups.group_id\n                AND groups.name = \'%s\'\n            """'
op|'%'
op|'('
name|'index'
op|','
name|'adbapi'
op|'.'
name|'safe'
op|'('
name|'group'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'dbpool'
op|'.'
name|'runQuery'
op|'('
name|'sql'
op|')'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'lambda'
name|'result'
op|':'
op|'('
nl|'\n'
name|'result'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'result'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
name|'result'
op|'['
number|'0'
op|']'
op|'['
number|'2'
op|']'
op|'+'
string|"'\\r\\n'"
op|'+'
name|'result'
op|'['
number|'0'
op|']'
op|'['
number|'3'
op|']'
op|')'
nl|'\n'
op|')'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|headRequest
dedent|''
name|'def'
name|'headRequest'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'index'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sql'
op|'='
string|'"""\n            SELECT postings.article_index, articles.message_id, articles.header\n            FROM groups,articles LEFT OUTER JOIN postings\n            ON postings.article_id = articles.article_id\n            WHERE postings.article_index = %d\n            AND postings.group_id = groups.group_id\n            AND groups.name = \'%s\'\n        """'
op|'%'
op|'('
name|'index'
op|','
name|'adbapi'
op|'.'
name|'safe'
op|'('
name|'group'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'dbpool'
op|'.'
name|'runQuery'
op|'('
name|'sql'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'result'
op|':'
name|'result'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|bodyRequest
dedent|''
name|'def'
name|'bodyRequest'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'index'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sql'
op|'='
string|'"""\n            SELECT postings.article_index, articles.message_id, articles.body\n            FROM groups,articles LEFT OUTER JOIN postings\n            ON postings.article_id = articles.article_id\n            WHERE postings.article_index = %d\n            AND postings.group_id = groups.group_id\n            AND groups.name = \'%s\'\n        """'
op|'%'
op|'('
name|'index'
op|','
name|'adbapi'
op|'.'
name|'safe'
op|'('
name|'group'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'dbpool'
op|'.'
name|'runQuery'
op|'('
name|'sql'
op|')'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'lambda'
name|'result'
op|':'
name|'result'
op|'['
number|'0'
op|']'
nl|'\n'
op|')'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'lambda'
op|'('
name|'index'
op|','
name|'id'
op|','
name|'body'
op|')'
op|':'
op|'('
name|'index'
op|','
name|'id'
op|','
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
name|'body'
op|')'
op|')'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
comment|'####'
nl|'\n'
comment|'#### XXX - make these static methods some day'
nl|'\n'
comment|'####'
nl|'\n'
DECL|function|makeGroupSQL
dedent|''
dedent|''
name|'def'
name|'makeGroupSQL'
op|'('
name|'groups'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'res'
op|'='
string|"''"
newline|'\n'
name|'for'
name|'g'
name|'in'
name|'groups'
op|':'
newline|'\n'
indent|'        '
name|'res'
op|'='
name|'res'
op|'+'
string|'"""\\n    INSERT INTO groups (name) VALUES (\'%s\');\\n"""'
op|'%'
op|'('
name|'adbapi'
op|'.'
name|'safe'
op|'('
name|'g'
op|')'
op|','
op|')'
newline|'\n'
dedent|''
name|'return'
name|'res'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|makeOverviewSQL
dedent|''
name|'def'
name|'makeOverviewSQL'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'res'
op|'='
string|"''"
newline|'\n'
name|'for'
name|'o'
name|'in'
name|'OVERVIEW_FMT'
op|':'
newline|'\n'
indent|'        '
name|'res'
op|'='
name|'res'
op|'+'
string|'"""\\n    INSERT INTO overview (header) VALUES (\'%s\');\\n"""'
op|'%'
op|'('
name|'adbapi'
op|'.'
name|'safe'
op|'('
name|'o'
op|')'
op|','
op|')'
newline|'\n'
dedent|''
name|'return'
name|'res'
newline|'\n'
dedent|''
endmarker|''
end_unit
