begin_unit
comment|'# -*- test-case-name: twisted.test.test_enterprise -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
name|'import'
name|'warnings'
op|','
name|'types'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'versions'
name|'import'
name|'Version'
op|','
name|'getVersionString'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'deprecate'
name|'import'
name|'deprecated'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'enterprise'
op|'.'
name|'adbapi'
name|'import'
name|'_safe'
newline|'\n'
nl|'\n'
comment|'# Common deprecation decorator used for all deprecations.'
nl|'\n'
DECL|variable|_deprecatedVersion
name|'_deprecatedVersion'
op|'='
name|'Version'
op|'('
string|'"Twisted"'
op|','
number|'8'
op|','
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
DECL|variable|_releasedDeprecation
name|'_releasedDeprecation'
op|'='
name|'deprecated'
op|'('
name|'_deprecatedVersion'
op|')'
newline|'\n'
nl|'\n'
name|'warnings'
op|'.'
name|'warn'
op|'('
nl|'\n'
string|'"twisted.enterprise.util is deprecated since %s."'
op|'%'
op|'('
nl|'\n'
name|'getVersionString'
op|'('
name|'_deprecatedVersion'
op|')'
op|','
op|')'
op|','
nl|'\n'
DECL|variable|category
name|'category'
op|'='
name|'DeprecationWarning'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|NOQUOTE
name|'NOQUOTE'
op|'='
number|'1'
newline|'\n'
DECL|variable|USEQUOTE
name|'USEQUOTE'
op|'='
number|'2'
newline|'\n'
nl|'\n'
DECL|variable|dbTypeMap
name|'dbTypeMap'
op|'='
op|'{'
nl|'\n'
string|'"bigint"'
op|':'
name|'NOQUOTE'
op|','
nl|'\n'
string|'"bool"'
op|':'
name|'USEQUOTE'
op|','
nl|'\n'
string|'"boolean"'
op|':'
name|'USEQUOTE'
op|','
nl|'\n'
string|'"bytea"'
op|':'
name|'USEQUOTE'
op|','
nl|'\n'
string|'"date"'
op|':'
name|'USEQUOTE'
op|','
nl|'\n'
string|'"int2"'
op|':'
name|'NOQUOTE'
op|','
nl|'\n'
string|'"int4"'
op|':'
name|'NOQUOTE'
op|','
nl|'\n'
string|'"int8"'
op|':'
name|'NOQUOTE'
op|','
nl|'\n'
string|'"int"'
op|':'
name|'NOQUOTE'
op|','
nl|'\n'
string|'"integer"'
op|':'
name|'NOQUOTE'
op|','
nl|'\n'
string|'"float4"'
op|':'
name|'NOQUOTE'
op|','
nl|'\n'
string|'"float8"'
op|':'
name|'NOQUOTE'
op|','
nl|'\n'
string|'"numeric"'
op|':'
name|'NOQUOTE'
op|','
nl|'\n'
string|'"real"'
op|':'
name|'NOQUOTE'
op|','
nl|'\n'
string|'"smallint"'
op|':'
name|'NOQUOTE'
op|','
nl|'\n'
string|'"char"'
op|':'
name|'USEQUOTE'
op|','
nl|'\n'
string|'"text"'
op|':'
name|'USEQUOTE'
op|','
nl|'\n'
string|'"time"'
op|':'
name|'USEQUOTE'
op|','
nl|'\n'
string|'"timestamp"'
op|':'
name|'USEQUOTE'
op|','
nl|'\n'
string|'"varchar"'
op|':'
name|'USEQUOTE'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|class|DBError
name|'class'
name|'DBError'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
comment|'### Utility functions'
nl|'\n'
nl|'\n'
DECL|function|getKeyColumn
dedent|''
name|'def'
name|'getKeyColumn'
op|'('
name|'rowClass'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'lcname'
op|'='
name|'name'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'for'
name|'keyColumn'
op|','
name|'type'
name|'in'
name|'rowClass'
op|'.'
name|'rowKeyColumns'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'lcname'
op|'=='
name|'keyColumn'
op|'.'
name|'lower'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'name'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'None'
newline|'\n'
DECL|variable|getKeyColumn
dedent|''
name|'getKeyColumn'
op|'='
name|'_releasedDeprecation'
op|'('
name|'getKeyColumn'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|quote
name|'def'
name|'quote'
op|'('
name|'value'
op|','
name|'typeCode'
op|','
name|'string_escaper'
op|'='
name|'_safe'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Add quotes for text types and no quotes for integer types.\n    NOTE: uses Postgresql type codes.\n    """'
newline|'\n'
name|'q'
op|'='
name|'dbTypeMap'
op|'.'
name|'get'
op|'('
name|'typeCode'
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'q'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'DBError'
op|'('
string|'"Type %s not known"'
op|'%'
name|'typeCode'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'value'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'null'"
newline|'\n'
dedent|''
name|'if'
name|'q'
op|'=='
name|'NOQUOTE'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'str'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'q'
op|'=='
name|'USEQUOTE'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'typeCode'
op|'.'
name|'startswith'
op|'('
string|"'bool'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'value'
op|':'
newline|'\n'
indent|'                '
name|'value'
op|'='
string|"'1'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'value'
op|'='
string|"'0'"
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'typeCode'
op|'=='
string|'"bytea"'
op|':'
newline|'\n'
indent|'            '
name|'l'
op|'='
op|'['
string|'"\'"'
op|']'
newline|'\n'
name|'for'
name|'c'
name|'in'
name|'value'
op|':'
newline|'\n'
indent|'                '
name|'i'
op|'='
name|'ord'
op|'('
name|'c'
op|')'
newline|'\n'
name|'if'
name|'i'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                    '
name|'l'
op|'.'
name|'append'
op|'('
string|'"\\\\\\\\000"'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'i'
op|'=='
number|'92'
op|':'
newline|'\n'
indent|'                    '
name|'l'
op|'.'
name|'append'
op|'('
name|'c'
op|'*'
number|'4'
op|')'
newline|'\n'
dedent|''
name|'elif'
number|'32'
op|'<='
name|'i'
op|'<='
number|'126'
op|':'
newline|'\n'
indent|'                    '
name|'l'
op|'.'
name|'append'
op|'('
name|'c'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'l'
op|'.'
name|'append'
op|'('
string|'"\\\\%03o"'
op|'%'
name|'i'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'l'
op|'.'
name|'append'
op|'('
string|'"\'"'
op|')'
newline|'\n'
name|'return'
string|'""'
op|'.'
name|'join'
op|'('
name|'l'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'value'
op|','
name|'types'
op|'.'
name|'StringType'
op|')'
name|'and'
name|'not'
name|'isinstance'
op|'('
name|'value'
op|','
name|'types'
op|'.'
name|'UnicodeType'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'value'
op|'='
name|'str'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
name|'return'
string|'"\'%s\'"'
op|'%'
name|'string_escaper'
op|'('
name|'value'
op|')'
newline|'\n'
DECL|variable|quote
dedent|''
dedent|''
name|'quote'
op|'='
name|'_releasedDeprecation'
op|'('
name|'quote'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|safe
name|'def'
name|'safe'
op|'('
name|'text'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Make a string safe to include in an SQL statement.\n    """'
newline|'\n'
name|'return'
name|'_safe'
op|'('
name|'text'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|safe
dedent|''
name|'safe'
op|'='
name|'_releasedDeprecation'
op|'('
name|'safe'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|makeKW
name|'def'
name|'makeKW'
op|'('
name|'rowClass'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Utility method to construct a dictionary for the attributes\n    of an object from set of args. This also fixes the case of column names.\n    """'
newline|'\n'
name|'kw'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'args'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'columnName'
op|'='
name|'rowClass'
op|'.'
name|'dbColumns'
op|'['
name|'i'
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'for'
name|'attr'
name|'in'
name|'rowClass'
op|'.'
name|'rowColumns'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'attr'
op|'.'
name|'lower'
op|'('
op|')'
op|'=='
name|'columnName'
op|':'
newline|'\n'
indent|'                '
name|'kw'
op|'['
name|'attr'
op|']'
op|'='
name|'args'
op|'['
name|'i'
op|']'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'kw'
newline|'\n'
DECL|variable|makeKW
dedent|''
name|'makeKW'
op|'='
name|'_releasedDeprecation'
op|'('
name|'makeKW'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|defaultFactoryMethod
name|'def'
name|'defaultFactoryMethod'
op|'('
name|'rowClass'
op|','
name|'data'
op|','
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Used by loadObjects to create rowObject instances.\n    """'
newline|'\n'
name|'newObject'
op|'='
name|'rowClass'
op|'('
op|')'
newline|'\n'
name|'newObject'
op|'.'
name|'__dict__'
op|'.'
name|'update'
op|'('
name|'kw'
op|')'
newline|'\n'
name|'return'
name|'newObject'
newline|'\n'
DECL|variable|defaultFactoryMethod
dedent|''
name|'defaultFactoryMethod'
op|'='
name|'_releasedDeprecation'
op|'('
name|'defaultFactoryMethod'
op|')'
newline|'\n'
nl|'\n'
comment|'### utility classes'
nl|'\n'
nl|'\n'
DECL|class|_TableInfo
name|'class'
name|'_TableInfo'
op|':'
newline|'\n'
indent|'    '
string|'"""(internal)\n\n    Info about a table/class and it\'s relationships. Also serves as a container for\n    generated SQL.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'rc'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'rowClass'
op|'='
name|'rc'
newline|'\n'
name|'self'
op|'.'
name|'rowTableName'
op|'='
name|'rc'
op|'.'
name|'rowTableName'
newline|'\n'
name|'self'
op|'.'
name|'rowKeyColumns'
op|'='
name|'rc'
op|'.'
name|'rowKeyColumns'
newline|'\n'
name|'self'
op|'.'
name|'rowColumns'
op|'='
name|'rc'
op|'.'
name|'rowColumns'
newline|'\n'
nl|'\n'
name|'if'
name|'hasattr'
op|'('
name|'rc'
op|','
string|'"rowForeignKeys"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'rowForeignKeys'
op|'='
name|'rc'
op|'.'
name|'rowForeignKeys'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'rowForeignKeys'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'hasattr'
op|'('
name|'rc'
op|','
string|'"rowFactoryMethod"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'rc'
op|'.'
name|'rowFactoryMethod'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'rowFactoryMethod'
op|'='
name|'rc'
op|'.'
name|'rowFactoryMethod'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'rowFactoryMethod'
op|'='
op|'['
name|'defaultFactoryMethod'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'rowFactoryMethod'
op|'='
op|'['
name|'defaultFactoryMethod'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'updateSQL'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'deleteSQL'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'insertSQL'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'relationships'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'dbColumns'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|addForeignKey
dedent|''
name|'def'
name|'addForeignKey'
op|'('
name|'self'
op|','
name|'childColumns'
op|','
name|'parentColumns'
op|','
name|'childRowClass'
op|','
name|'containerMethod'
op|','
name|'autoLoad'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""This information is attached to the "parent" table\n                childColumns - columns of the "child" table\n                parentColumns - columns of the "parent" table, the one being joined to... the "foreign" table\n        """'
newline|'\n'
name|'self'
op|'.'
name|'relationships'
op|'.'
name|'append'
op|'('
name|'_TableRelationship'
op|'('
name|'childColumns'
op|','
name|'parentColumns'
op|','
nl|'\n'
name|'childRowClass'
op|','
name|'containerMethod'
op|','
name|'autoLoad'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getRelationshipFor
dedent|''
name|'def'
name|'getRelationshipFor'
op|'('
name|'self'
op|','
name|'tableName'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'relationship'
name|'in'
name|'self'
op|'.'
name|'relationships'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'relationship'
op|'.'
name|'childRowClass'
op|'.'
name|'rowTableName'
op|'=='
name|'tableName'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'relationship'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|class|_TableRelationship
dedent|''
dedent|''
name|'class'
name|'_TableRelationship'
op|':'
newline|'\n'
indent|'    '
string|'"""(Internal)\n\n    A foreign key relationship between two tables.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
nl|'\n'
name|'childColumns'
op|','
nl|'\n'
name|'parentColumns'
op|','
nl|'\n'
name|'childRowClass'
op|','
nl|'\n'
name|'containerMethod'
op|','
nl|'\n'
name|'autoLoad'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'childColumns'
op|'='
name|'childColumns'
newline|'\n'
name|'self'
op|'.'
name|'parentColumns'
op|'='
name|'parentColumns'
newline|'\n'
name|'self'
op|'.'
name|'childRowClass'
op|'='
name|'childRowClass'
newline|'\n'
name|'self'
op|'.'
name|'containerMethod'
op|'='
name|'containerMethod'
newline|'\n'
name|'self'
op|'.'
name|'autoLoad'
op|'='
name|'autoLoad'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|__all__
dedent|''
dedent|''
name|'__all__'
op|'='
op|'['
string|"'NOQUOTE'"
op|','
string|"'USEQUOTE'"
op|','
string|"'dbTypeMap'"
op|','
string|"'DBError'"
op|','
string|"'getKeyColumn'"
op|','
nl|'\n'
string|"'safe'"
op|','
string|"'quote'"
op|']'
newline|'\n'
endmarker|''
end_unit
