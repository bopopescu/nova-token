begin_unit
comment|'# -*- test-case-name: twisted.web.test.test_soap -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2004 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""\nSOAP support for twisted.web.\n\nRequires SOAPpy 0.10.1 or later.\n\nMaintainer: Itamar Shtull-Trauring\n\nFuture plans:\nSOAPContext support of some kind.\nPluggable method lookup policies.\n"""'
newline|'\n'
nl|'\n'
comment|'# SOAPpy'
nl|'\n'
name|'import'
name|'SOAPpy'
newline|'\n'
nl|'\n'
comment|'# twisted imports'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'web'
name|'import'
name|'server'
op|','
name|'resource'
op|','
name|'client'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'defer'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SOAPPublisher
name|'class'
name|'SOAPPublisher'
op|'('
name|'resource'
op|'.'
name|'Resource'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Publish SOAP methods.\n\n    By default, publish methods beginning with \'soap_\'. If the method\n    has an attribute \'useKeywords\', it well get the arguments passed\n    as keyword args.\n    """'
newline|'\n'
nl|'\n'
DECL|variable|isLeaf
name|'isLeaf'
op|'='
number|'1'
newline|'\n'
nl|'\n'
comment|'# override to change the encoding used for responses'
nl|'\n'
DECL|variable|encoding
name|'encoding'
op|'='
string|'"UTF-8"'
newline|'\n'
nl|'\n'
DECL|member|lookupFunction
name|'def'
name|'lookupFunction'
op|'('
name|'self'
op|','
name|'functionName'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Lookup published SOAP function.\n\n        Override in subclasses. Default behaviour - publish methods\n        starting with soap_.\n\n        @return: callable or None if not found.\n        """'
newline|'\n'
name|'return'
name|'getattr'
op|'('
name|'self'
op|','
string|'"soap_%s"'
op|'%'
name|'functionName'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|render
dedent|''
name|'def'
name|'render'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handle a SOAP command."""'
newline|'\n'
name|'data'
op|'='
name|'request'
op|'.'
name|'content'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'p'
op|','
name|'header'
op|','
name|'body'
op|','
name|'attrs'
op|'='
name|'SOAPpy'
op|'.'
name|'parseSOAPRPC'
op|'('
name|'data'
op|','
number|'1'
op|','
number|'1'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'methodName'
op|','
name|'args'
op|','
name|'kwargs'
op|','
name|'ns'
op|'='
name|'p'
op|'.'
name|'_name'
op|','
name|'p'
op|'.'
name|'_aslist'
op|','
name|'p'
op|'.'
name|'_asdict'
op|','
name|'p'
op|'.'
name|'_ns'
newline|'\n'
nl|'\n'
comment|'# deal with changes in SOAPpy 0.11'
nl|'\n'
name|'if'
name|'callable'
op|'('
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'args'
op|'='
name|'args'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'callable'
op|'('
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'kwargs'
op|'='
name|'kwargs'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'function'
op|'='
name|'self'
op|'.'
name|'lookupFunction'
op|'('
name|'methodName'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'function'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_methodNotFound'
op|'('
name|'request'
op|','
name|'methodName'
op|')'
newline|'\n'
name|'return'
name|'server'
op|'.'
name|'NOT_DONE_YET'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'hasattr'
op|'('
name|'function'
op|','
string|'"useKeywords"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'keywords'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'kwargs'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'keywords'
op|'['
name|'str'
op|'('
name|'k'
op|')'
op|']'
op|'='
name|'v'
newline|'\n'
dedent|''
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'function'
op|','
op|'**'
name|'keywords'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'function'
op|','
op|'*'
name|'args'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_gotResult'
op|','
name|'request'
op|','
name|'methodName'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_gotError'
op|','
name|'request'
op|','
name|'methodName'
op|')'
newline|'\n'
name|'return'
name|'server'
op|'.'
name|'NOT_DONE_YET'
newline|'\n'
nl|'\n'
DECL|member|_methodNotFound
dedent|''
name|'def'
name|'_methodNotFound'
op|'('
name|'self'
op|','
name|'request'
op|','
name|'methodName'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'SOAPpy'
op|'.'
name|'buildSOAP'
op|'('
name|'SOAPpy'
op|'.'
name|'faultType'
op|'('
string|'"%s:Client"'
op|'%'
nl|'\n'
name|'SOAPpy'
op|'.'
name|'NS'
op|'.'
name|'ENV_T'
op|','
string|'"Method %s not found"'
op|'%'
name|'methodName'
op|')'
op|','
nl|'\n'
name|'encoding'
op|'='
name|'self'
op|'.'
name|'encoding'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_sendResponse'
op|'('
name|'request'
op|','
name|'response'
op|','
name|'status'
op|'='
number|'500'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_gotResult
dedent|''
name|'def'
name|'_gotResult'
op|'('
name|'self'
op|','
name|'result'
op|','
name|'request'
op|','
name|'methodName'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'result'
op|','
name|'SOAPpy'
op|'.'
name|'voidType'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
op|'{'
string|'"Result"'
op|':'
name|'result'
op|'}'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'SOAPpy'
op|'.'
name|'buildSOAP'
op|'('
name|'kw'
op|'='
op|'{'
string|"'%sResponse'"
op|'%'
name|'methodName'
op|':'
name|'result'
op|'}'
op|','
nl|'\n'
name|'encoding'
op|'='
name|'self'
op|'.'
name|'encoding'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_sendResponse'
op|'('
name|'request'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_gotError
dedent|''
name|'def'
name|'_gotError'
op|'('
name|'self'
op|','
name|'failure'
op|','
name|'request'
op|','
name|'methodName'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'e'
op|'='
name|'failure'
op|'.'
name|'value'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'e'
op|','
name|'SOAPpy'
op|'.'
name|'faultType'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fault'
op|'='
name|'e'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'fault'
op|'='
name|'SOAPpy'
op|'.'
name|'faultType'
op|'('
string|'"%s:Server"'
op|'%'
name|'SOAPpy'
op|'.'
name|'NS'
op|'.'
name|'ENV_T'
op|','
nl|'\n'
string|'"Method %s failed."'
op|'%'
name|'methodName'
op|')'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'SOAPpy'
op|'.'
name|'buildSOAP'
op|'('
name|'fault'
op|','
name|'encoding'
op|'='
name|'self'
op|'.'
name|'encoding'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_sendResponse'
op|'('
name|'request'
op|','
name|'response'
op|','
name|'status'
op|'='
number|'500'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_sendResponse
dedent|''
name|'def'
name|'_sendResponse'
op|'('
name|'self'
op|','
name|'request'
op|','
name|'response'
op|','
name|'status'
op|'='
number|'200'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'request'
op|'.'
name|'setResponseCode'
op|'('
name|'status'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'encoding'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'mimeType'
op|'='
string|'\'text/xml; charset="%s"\''
op|'%'
name|'self'
op|'.'
name|'encoding'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'mimeType'
op|'='
string|'"text/xml"'
newline|'\n'
dedent|''
name|'request'
op|'.'
name|'setHeader'
op|'('
string|'"Content-type"'
op|','
name|'mimeType'
op|')'
newline|'\n'
name|'request'
op|'.'
name|'setHeader'
op|'('
string|'"Content-length"'
op|','
name|'str'
op|'('
name|'len'
op|'('
name|'response'
op|')'
op|')'
op|')'
newline|'\n'
name|'request'
op|'.'
name|'write'
op|'('
name|'response'
op|')'
newline|'\n'
name|'request'
op|'.'
name|'finish'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Proxy
dedent|''
dedent|''
name|'class'
name|'Proxy'
op|':'
newline|'\n'
indent|'    '
string|'"""A Proxy for making remote SOAP calls.\n\n    Pass the URL of the remote SOAP server to the constructor.\n\n    Use proxy.callRemote(\'foobar\', 1, 2) to call remote method\n    \'foobar\' with args 1 and 2, proxy.callRemote(\'foobar\', x=1)\n    will call foobar with named argument \'x\'.\n    """'
newline|'\n'
nl|'\n'
comment|'# at some point this should have encoding etc. kwargs'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'url'
op|','
name|'namespace'
op|'='
name|'None'
op|','
name|'header'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'url'
op|'='
name|'url'
newline|'\n'
name|'self'
op|'.'
name|'namespace'
op|'='
name|'namespace'
newline|'\n'
name|'self'
op|'.'
name|'header'
op|'='
name|'header'
newline|'\n'
nl|'\n'
DECL|member|_cbGotResult
dedent|''
name|'def'
name|'_cbGotResult'
op|'('
name|'self'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'SOAPpy'
op|'.'
name|'parseSOAPRPC'
op|'('
name|'result'
op|')'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'result'
op|','
string|"'Result'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'result'
op|'.'
name|'Result'
newline|'\n'
dedent|''
name|'elif'
name|'len'
op|'('
name|'result'
op|')'
op|'=='
number|'1'
op|':'
newline|'\n'
comment|'## SOAPpy 0.11.6 wraps the return results in a containing structure.'
nl|'\n'
comment|'## This check added to make Proxy behaviour emulate SOAPProxy, which'
nl|'\n'
comment|'## flattens the structure by default.'
nl|'\n'
comment|'## This behaviour is OK because even singleton lists are wrapped in'
nl|'\n'
comment|'## another singleton structType, which is almost always useless.'
nl|'\n'
indent|'            '
name|'return'
name|'result'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|member|callRemote
dedent|''
dedent|''
name|'def'
name|'callRemote'
op|'('
name|'self'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'payload'
op|'='
name|'SOAPpy'
op|'.'
name|'buildSOAP'
op|'('
name|'args'
op|'='
name|'args'
op|','
name|'kw'
op|'='
name|'kwargs'
op|','
name|'method'
op|'='
name|'method'
op|','
nl|'\n'
name|'header'
op|'='
name|'self'
op|'.'
name|'header'
op|','
name|'namespace'
op|'='
name|'self'
op|'.'
name|'namespace'
op|')'
newline|'\n'
name|'return'
name|'client'
op|'.'
name|'getPage'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'postdata'
op|'='
name|'payload'
op|','
name|'method'
op|'='
string|'"POST"'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'content-type'"
op|':'
string|"'text/xml'"
op|','
nl|'\n'
string|"'SOAPAction'"
op|':'
name|'method'
op|'}'
nl|'\n'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbGotResult'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
