begin_unit
comment|'# -*- test-case-name: twisted.web.test.test_httpauth -*-'
nl|'\n'
comment|'# Copyright (c) 2009 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nImplementation of RFC2617: HTTP Digest Authentication\n\n@see: U{http://www.faqs.org/rfcs/rfc2617.html}\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'cred'
name|'import'
name|'credentials'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'web'
op|'.'
name|'iweb'
name|'import'
name|'ICredentialFactory'
newline|'\n'
nl|'\n'
DECL|class|DigestCredentialFactory
name|'class'
name|'DigestCredentialFactory'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Wrapper for L{digest.DigestCredentialFactory} that implements the\n    L{ICredentialFactory} interface.\n    """'
newline|'\n'
name|'implements'
op|'('
name|'ICredentialFactory'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|scheme
name|'scheme'
op|'='
string|"'digest'"
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'algorithm'
op|','
name|'authenticationRealm'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create the digest credential factory that this object wraps.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'digest'
op|'='
name|'credentials'
op|'.'
name|'DigestCredentialFactory'
op|'('
name|'algorithm'
op|','
nl|'\n'
name|'authenticationRealm'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getChallenge
dedent|''
name|'def'
name|'getChallenge'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Generate the challenge for use in the WWW-Authenticate header\n\n        @param request: The L{IRequest} to with access was denied and for the\n            response to which this challenge is being generated.\n\n        @return: The C{dict} that can be used to generate a WWW-Authenticate\n            header.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'digest'
op|'.'
name|'getChallenge'
op|'('
name|'request'
op|'.'
name|'getClientIP'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|decode
dedent|''
name|'def'
name|'decode'
op|'('
name|'self'
op|','
name|'response'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create a L{twisted.cred.digest.DigestedCredentials} object from the\n        given response and request.\n\n        @see: L{ICredentialFactory.decode}\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'digest'
op|'.'
name|'decode'
op|'('
name|'response'
op|','
nl|'\n'
name|'request'
op|'.'
name|'method'
op|','
nl|'\n'
name|'request'
op|'.'
name|'getClientIP'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
