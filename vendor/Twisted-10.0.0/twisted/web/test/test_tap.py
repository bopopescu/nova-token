begin_unit
comment|'# Copyright (c) 2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nTests for L{twisted.web.tap}.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
op|','
name|'stat'
op|','
name|'pickle'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'usage'
name|'import'
name|'UsageError'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'filepath'
name|'import'
name|'FilePath'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'interfaces'
name|'import'
name|'IReactorUNIX'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'threadpool'
name|'import'
name|'ThreadPool'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
op|'.'
name|'unittest'
name|'import'
name|'TestCase'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'application'
name|'import'
name|'strports'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'web'
op|'.'
name|'server'
name|'import'
name|'Site'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'web'
op|'.'
name|'static'
name|'import'
name|'Data'
op|','
name|'File'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'web'
op|'.'
name|'distrib'
name|'import'
name|'ResourcePublisher'
op|','
name|'UserDirectory'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'web'
op|'.'
name|'wsgi'
name|'import'
name|'WSGIResource'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'web'
op|'.'
name|'tap'
name|'import'
name|'Options'
op|','
name|'makePersonalServerFactory'
op|','
name|'makeService'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'web'
op|'.'
name|'twcgi'
name|'import'
name|'CGIScript'
op|','
name|'PHP3Script'
op|','
name|'PHPScript'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'web'
op|'.'
name|'script'
name|'import'
name|'PythonScript'
newline|'\n'
nl|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'spread'
op|'.'
name|'pb'
name|'import'
name|'PBServerFactory'
newline|'\n'
nl|'\n'
DECL|variable|application
name|'application'
op|'='
name|'object'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|class|ServiceTests
name|'class'
name|'ServiceTests'
op|'('
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Tests for the service creation APIs in L{twisted.web.tap}.\n    """'
newline|'\n'
DECL|member|_pathOption
name|'def'
name|'_pathOption'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Helper for the I{--path} tests which creates a directory and creates\n        an L{Options} object which uses that directory as its static\n        filesystem root.\n\n        @return: A two-tuple of a L{FilePath} referring to the directory and\n            the value associated with the C{\'root\'} key in the L{Options}\n            instance after parsing a I{--path} option.\n        """'
newline|'\n'
name|'path'
op|'='
name|'FilePath'
op|'('
name|'self'
op|'.'
name|'mktemp'
op|'('
op|')'
op|')'
newline|'\n'
name|'path'
op|'.'
name|'makedirs'
op|'('
op|')'
newline|'\n'
name|'options'
op|'='
name|'Options'
op|'('
op|')'
newline|'\n'
name|'options'
op|'.'
name|'parseOptions'
op|'('
op|'['
string|"'--path'"
op|','
name|'path'
op|'.'
name|'path'
op|']'
op|')'
newline|'\n'
name|'root'
op|'='
name|'options'
op|'['
string|"'root'"
op|']'
newline|'\n'
name|'return'
name|'path'
op|','
name|'root'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_path
dedent|''
name|'def'
name|'test_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        The I{--path} option causes L{Options} to create a root resource\n        which serves responses from the specified path.\n        """'
newline|'\n'
name|'path'
op|','
name|'root'
op|'='
name|'self'
op|'.'
name|'_pathOption'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'root'
op|','
name|'File'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'root'
op|'.'
name|'path'
op|','
name|'path'
op|'.'
name|'path'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_cgiProcessor
dedent|''
name|'def'
name|'test_cgiProcessor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        The I{--path} option creates a root resource which serves a\n        L{CGIScript} instance for any child with the C{".cgi"} extension.\n        """'
newline|'\n'
name|'path'
op|','
name|'root'
op|'='
name|'self'
op|'.'
name|'_pathOption'
op|'('
op|')'
newline|'\n'
name|'path'
op|'.'
name|'child'
op|'('
string|'"foo.cgi"'
op|')'
op|'.'
name|'setContent'
op|'('
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'root'
op|'.'
name|'getChild'
op|'('
string|'"foo.cgi"'
op|','
name|'None'
op|')'
op|','
name|'CGIScript'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_php3Processor
dedent|''
name|'def'
name|'test_php3Processor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        The I{--path} option creates a root resource which serves a\n        L{PHP3Script} instance for any child with the C{".php3"} extension.\n        """'
newline|'\n'
name|'path'
op|','
name|'root'
op|'='
name|'self'
op|'.'
name|'_pathOption'
op|'('
op|')'
newline|'\n'
name|'path'
op|'.'
name|'child'
op|'('
string|'"foo.php3"'
op|')'
op|'.'
name|'setContent'
op|'('
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'root'
op|'.'
name|'getChild'
op|'('
string|'"foo.php3"'
op|','
name|'None'
op|')'
op|','
name|'PHP3Script'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_phpProcessor
dedent|''
name|'def'
name|'test_phpProcessor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        The I{--path} option creates a root resource which serves a\n        L{PHPScript} instance for any child with the C{".php"} extension.\n        """'
newline|'\n'
name|'path'
op|','
name|'root'
op|'='
name|'self'
op|'.'
name|'_pathOption'
op|'('
op|')'
newline|'\n'
name|'path'
op|'.'
name|'child'
op|'('
string|'"foo.php"'
op|')'
op|'.'
name|'setContent'
op|'('
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'root'
op|'.'
name|'getChild'
op|'('
string|'"foo.php"'
op|','
name|'None'
op|')'
op|','
name|'PHPScript'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_epyProcessor
dedent|''
name|'def'
name|'test_epyProcessor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        The I{--path} option creates a root resource which serves a\n        L{PythonScript} instance for any child with the C{".epy"} extension.\n        """'
newline|'\n'
name|'path'
op|','
name|'root'
op|'='
name|'self'
op|'.'
name|'_pathOption'
op|'('
op|')'
newline|'\n'
name|'path'
op|'.'
name|'child'
op|'('
string|'"foo.epy"'
op|')'
op|'.'
name|'setContent'
op|'('
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'root'
op|'.'
name|'getChild'
op|'('
string|'"foo.epy"'
op|','
name|'None'
op|')'
op|','
name|'PythonScript'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_rpyProcessor
dedent|''
name|'def'
name|'test_rpyProcessor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        The I{--path} option creates a root resource which serves the\n        C{resource} global defined by the Python source in any child with\n        the C{".rpy"} extension.\n        """'
newline|'\n'
name|'path'
op|','
name|'root'
op|'='
name|'self'
op|'.'
name|'_pathOption'
op|'('
op|')'
newline|'\n'
name|'path'
op|'.'
name|'child'
op|'('
string|'"foo.rpy"'
op|')'
op|'.'
name|'setContent'
op|'('
nl|'\n'
string|'"from twisted.web.static import Data\\n"'
nl|'\n'
string|'"resource = Data(\'content\', \'major/minor\')\\n"'
op|')'
newline|'\n'
name|'child'
op|'='
name|'root'
op|'.'
name|'getChild'
op|'('
string|'"foo.rpy"'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'child'
op|','
name|'Data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'child'
op|'.'
name|'data'
op|','
string|"'content'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'child'
op|'.'
name|'type'
op|','
string|"'major/minor'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_trpProcessor
dedent|''
name|'def'
name|'test_trpProcessor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        The I{--path} option creates a root resource which serves the\n        pickled resource out of any child with the C{".rpy"} extension.\n        """'
newline|'\n'
name|'path'
op|','
name|'root'
op|'='
name|'self'
op|'.'
name|'_pathOption'
op|'('
op|')'
newline|'\n'
name|'path'
op|'.'
name|'child'
op|'('
string|'"foo.trp"'
op|')'
op|'.'
name|'setContent'
op|'('
name|'pickle'
op|'.'
name|'dumps'
op|'('
name|'Data'
op|'('
string|'"foo"'
op|','
string|'"bar"'
op|')'
op|')'
op|')'
newline|'\n'
name|'child'
op|'='
name|'root'
op|'.'
name|'getChild'
op|'('
string|'"foo.trp"'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'child'
op|','
name|'Data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'child'
op|'.'
name|'data'
op|','
string|"'foo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'child'
op|'.'
name|'type'
op|','
string|"'bar'"
op|')'
newline|'\n'
nl|'\n'
name|'warnings'
op|'='
name|'self'
op|'.'
name|'flushWarnings'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|"# If the trp module hadn't been imported before this test ran, there"
nl|'\n'
comment|'# will be two deprecation warnings; one for the module, one for the'
nl|'\n'
comment|'# function.  If the module has already been imported, the'
nl|'\n'
comment|"# module-scope deprecation won't be emitted again."
nl|'\n'
name|'if'
name|'len'
op|'('
name|'warnings'
op|')'
op|'=='
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'warnings'
op|'['
number|'0'
op|']'
op|'['
string|"'category'"
op|']'
op|','
name|'DeprecationWarning'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'warnings'
op|'['
number|'0'
op|']'
op|'['
string|"'message'"
op|']'
op|','
nl|'\n'
string|'"twisted.web.trp is deprecated as of Twisted 9.0.  Resource "'
nl|'\n'
string|'"persistence is beyond the scope of Twisted Web."'
op|')'
newline|'\n'
name|'warning'
op|'='
name|'warnings'
op|'['
number|'1'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'warning'
op|'='
name|'warnings'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'warning'
op|'['
string|"'category'"
op|']'
op|','
name|'DeprecationWarning'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'warning'
op|'['
string|"'message'"
op|']'
op|','
nl|'\n'
string|'"twisted.web.trp.ResourceUnpickler is deprecated as of Twisted "'
nl|'\n'
string|'"9.0.  Resource persistence is beyond the scope of Twisted Web."'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_makePersonalServerFactory
dedent|''
name|'def'
name|'test_makePersonalServerFactory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        L{makePersonalServerFactory} returns a PB server factory which has\n        as its root object a L{ResourcePublisher}.\n        """'
newline|'\n'
comment|'# The fact that this pile of objects can actually be used somehow is'
nl|'\n'
comment|'# verified by twisted.web.test.test_distrib.'
nl|'\n'
name|'site'
op|'='
name|'Site'
op|'('
name|'Data'
op|'('
string|'"foo bar"'
op|','
string|'"text/plain"'
op|')'
op|')'
newline|'\n'
name|'serverFactory'
op|'='
name|'makePersonalServerFactory'
op|'('
name|'site'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'serverFactory'
op|','
name|'PBServerFactory'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'serverFactory'
op|'.'
name|'root'
op|','
name|'ResourcePublisher'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIdentical'
op|'('
name|'serverFactory'
op|'.'
name|'root'
op|'.'
name|'site'
op|','
name|'site'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_personalServer
dedent|''
name|'def'
name|'test_personalServer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        The I{--personal} option to L{makeService} causes it to return a\n        service which will listen on the server address given by the I{--port}\n        option.\n        """'
newline|'\n'
name|'port'
op|'='
name|'self'
op|'.'
name|'mktemp'
op|'('
op|')'
newline|'\n'
name|'options'
op|'='
name|'Options'
op|'('
op|')'
newline|'\n'
name|'options'
op|'.'
name|'parseOptions'
op|'('
op|'['
string|"'--port'"
op|','
string|"'unix:'"
op|'+'
name|'port'
op|','
string|"'--personal'"
op|']'
op|')'
newline|'\n'
name|'service'
op|'='
name|'makeService'
op|'('
name|'options'
op|')'
newline|'\n'
name|'service'
op|'.'
name|'startService'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'service'
op|'.'
name|'stopService'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'port'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'stat'
op|'.'
name|'S_ISSOCK'
op|'('
name|'os'
op|'.'
name|'stat'
op|'('
name|'port'
op|')'
op|'.'
name|'st_mode'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'IReactorUNIX'
op|'.'
name|'providedBy'
op|'('
name|'reactor'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'test_personalServer'
op|'.'
name|'skip'
op|'='
op|'('
nl|'\n'
string|'"The reactor does not support UNIX domain sockets"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_defaultPersonalPath
dedent|''
name|'def'
name|'test_defaultPersonalPath'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        If the I{--port} option not specified but the I{--personal} option is,\n        L{Options} defaults the port to C{UserDirectory.userSocketName} in the\n        user\'s home directory.\n        """'
newline|'\n'
name|'options'
op|'='
name|'Options'
op|'('
op|')'
newline|'\n'
name|'options'
op|'.'
name|'parseOptions'
op|'('
op|'['
string|"'--personal'"
op|']'
op|')'
newline|'\n'
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'expanduser'
op|'('
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
string|"'~'"
op|','
name|'UserDirectory'
op|'.'
name|'userSocketName'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'strports'
op|'.'
name|'parse'
op|'('
name|'options'
op|'['
string|"'port'"
op|']'
op|','
name|'None'
op|')'
op|'['
op|':'
number|'2'
op|']'
op|','
nl|'\n'
op|'('
string|"'UNIX'"
op|','
op|'('
name|'path'
op|','
name|'None'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'IReactorUNIX'
op|'.'
name|'providedBy'
op|'('
name|'reactor'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'test_defaultPersonalPath'
op|'.'
name|'skip'
op|'='
op|'('
nl|'\n'
string|'"The reactor does not support UNIX domain sockets"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_defaultPort
dedent|''
name|'def'
name|'test_defaultPort'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        If the I{--port} option is not specified, L{Options} defaults the port\n        to C{8080}.\n        """'
newline|'\n'
name|'options'
op|'='
name|'Options'
op|'('
op|')'
newline|'\n'
name|'options'
op|'.'
name|'parseOptions'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'strports'
op|'.'
name|'parse'
op|'('
name|'options'
op|'['
string|"'port'"
op|']'
op|','
name|'None'
op|')'
op|'['
op|':'
number|'2'
op|']'
op|','
nl|'\n'
op|'('
string|"'TCP'"
op|','
op|'('
number|'8080'
op|','
name|'None'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_wsgi
dedent|''
name|'def'
name|'test_wsgi'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        The I{--wsgi} option takes the fully-qualifed Python name of a WSGI\n        application object and creates a L{WSGIResource} at the root which\n        serves that application.\n        """'
newline|'\n'
name|'options'
op|'='
name|'Options'
op|'('
op|')'
newline|'\n'
name|'options'
op|'.'
name|'parseOptions'
op|'('
op|'['
string|"'--wsgi'"
op|','
name|'__name__'
op|'+'
string|"'.application'"
op|']'
op|')'
newline|'\n'
name|'root'
op|'='
name|'options'
op|'['
string|"'root'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'root'
op|','
name|'WSGIResource'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIdentical'
op|'('
name|'root'
op|'.'
name|'_reactor'
op|','
name|'reactor'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'root'
op|'.'
name|'_threadpool'
op|','
name|'ThreadPool'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIdentical'
op|'('
name|'root'
op|'.'
name|'_application'
op|','
name|'application'
op|')'
newline|'\n'
nl|'\n'
comment|'# The threadpool should start and stop with the reactor.'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'root'
op|'.'
name|'_threadpool'
op|'.'
name|'started'
op|')'
newline|'\n'
name|'reactor'
op|'.'
name|'fireSystemEvent'
op|'('
string|"'startup'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'root'
op|'.'
name|'_threadpool'
op|'.'
name|'started'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'root'
op|'.'
name|'_threadpool'
op|'.'
name|'joined'
op|')'
newline|'\n'
name|'reactor'
op|'.'
name|'fireSystemEvent'
op|'('
string|"'shutdown'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'root'
op|'.'
name|'_threadpool'
op|'.'
name|'joined'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_invalidApplication
dedent|''
name|'def'
name|'test_invalidApplication'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        If I{--wsgi} is given an invalid name, L{Options.parseOptions}\n        raises L{UsageError}.\n        """'
newline|'\n'
name|'options'
op|'='
name|'Options'
op|'('
op|')'
newline|'\n'
name|'for'
name|'name'
name|'in'
op|'['
name|'__name__'
op|'+'
string|"'.nosuchthing'"
op|','
string|"'foo.'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'exc'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'UsageError'
op|','
name|'options'
op|'.'
name|'parseOptions'
op|','
op|'['
string|"'--wsgi'"
op|','
name|'name'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'exc'
op|')'
op|','
string|'"No such WSGI application: %r"'
op|'%'
op|'('
name|'name'
op|','
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
