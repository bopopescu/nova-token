begin_unit
comment|'# -*- test-case-name: twisted.web.test.test_cgi -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2009 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""\nI hold resource classes and helper classes that deal with CGI scripts.\n"""'
newline|'\n'
nl|'\n'
comment|'# System Imports'
nl|'\n'
name|'import'
name|'string'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'urllib'
newline|'\n'
nl|'\n'
comment|'# Twisted Imports'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'web'
name|'import'
name|'http'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
op|','
name|'protocol'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'spread'
name|'import'
name|'pb'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
op|','
name|'filepath'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'web'
name|'import'
name|'resource'
op|','
name|'server'
op|','
name|'static'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CGIDirectory
name|'class'
name|'CGIDirectory'
op|'('
name|'resource'
op|'.'
name|'Resource'
op|','
name|'filepath'
op|'.'
name|'FilePath'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'pathname'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resource'
op|'.'
name|'Resource'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'filepath'
op|'.'
name|'FilePath'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'pathname'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getChild
dedent|''
name|'def'
name|'getChild'
op|'('
name|'self'
op|','
name|'path'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fnp'
op|'='
name|'self'
op|'.'
name|'child'
op|'('
name|'path'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'fnp'
op|'.'
name|'exists'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'static'
op|'.'
name|'File'
op|'.'
name|'childNotFound'
newline|'\n'
dedent|''
name|'elif'
name|'fnp'
op|'.'
name|'isdir'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'CGIDirectory'
op|'('
name|'fnp'
op|'.'
name|'path'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'CGIScript'
op|'('
name|'fnp'
op|'.'
name|'path'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'resource'
op|'.'
name|'NoResource'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|render
dedent|''
name|'def'
name|'render'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'notFound'
op|'='
name|'resource'
op|'.'
name|'NoResource'
op|'('
nl|'\n'
string|'"CGI directories do not support directory listing."'
op|')'
newline|'\n'
name|'return'
name|'notFound'
op|'.'
name|'render'
op|'('
name|'request'
op|')'
newline|'\n'
nl|'\n'
DECL|class|CGIScript
dedent|''
dedent|''
name|'class'
name|'CGIScript'
op|'('
name|'resource'
op|'.'
name|'Resource'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""I represent a CGI script.\n\n    My implementation is complex due to the fact that it requires asynchronous\n    IPC with an external process with an unpleasant protocol.\n    """'
newline|'\n'
DECL|variable|isLeaf
name|'isLeaf'
op|'='
number|'1'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'filename'
op|','
name|'registry'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Initialize, with the name of a CGI script file.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'filename'
op|'='
name|'filename'
newline|'\n'
nl|'\n'
DECL|member|render
dedent|''
name|'def'
name|'render'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Do various things to conform to the CGI specification.\n\n        I will set up the usual slew of environment variables, then spin off a\n        process.\n        """'
newline|'\n'
name|'script_name'
op|'='
string|'"/"'
op|'+'
name|'string'
op|'.'
name|'join'
op|'('
name|'request'
op|'.'
name|'prepath'
op|','
string|"'/'"
op|')'
newline|'\n'
name|'python_path'
op|'='
name|'string'
op|'.'
name|'join'
op|'('
name|'sys'
op|'.'
name|'path'
op|','
name|'os'
op|'.'
name|'pathsep'
op|')'
newline|'\n'
name|'serverName'
op|'='
name|'string'
op|'.'
name|'split'
op|'('
name|'request'
op|'.'
name|'getRequestHostname'
op|'('
op|')'
op|','
string|"':'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'env'
op|'='
op|'{'
string|'"SERVER_SOFTWARE"'
op|':'
name|'server'
op|'.'
name|'version'
op|','
nl|'\n'
string|'"SERVER_NAME"'
op|':'
name|'serverName'
op|','
nl|'\n'
string|'"GATEWAY_INTERFACE"'
op|':'
string|'"CGI/1.1"'
op|','
nl|'\n'
string|'"SERVER_PROTOCOL"'
op|':'
name|'request'
op|'.'
name|'clientproto'
op|','
nl|'\n'
string|'"SERVER_PORT"'
op|':'
name|'str'
op|'('
name|'request'
op|'.'
name|'getHost'
op|'('
op|')'
op|'.'
name|'port'
op|')'
op|','
nl|'\n'
string|'"REQUEST_METHOD"'
op|':'
name|'request'
op|'.'
name|'method'
op|','
nl|'\n'
string|'"SCRIPT_NAME"'
op|':'
name|'script_name'
op|','
comment|'# XXX'
nl|'\n'
string|'"SCRIPT_FILENAME"'
op|':'
name|'self'
op|'.'
name|'filename'
op|','
nl|'\n'
string|'"REQUEST_URI"'
op|':'
name|'request'
op|'.'
name|'uri'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'client'
op|'='
name|'request'
op|'.'
name|'getClient'
op|'('
op|')'
newline|'\n'
name|'if'
name|'client'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'env'
op|'['
string|"'REMOTE_HOST'"
op|']'
op|'='
name|'client'
newline|'\n'
dedent|''
name|'ip'
op|'='
name|'request'
op|'.'
name|'getClientIP'
op|'('
op|')'
newline|'\n'
name|'if'
name|'ip'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'env'
op|'['
string|"'REMOTE_ADDR'"
op|']'
op|'='
name|'ip'
newline|'\n'
dedent|''
name|'pp'
op|'='
name|'request'
op|'.'
name|'postpath'
newline|'\n'
name|'if'
name|'pp'
op|':'
newline|'\n'
indent|'            '
name|'env'
op|'['
string|'"PATH_INFO"'
op|']'
op|'='
string|'"/"'
op|'+'
name|'string'
op|'.'
name|'join'
op|'('
name|'pp'
op|','
string|"'/'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'hasattr'
op|'('
name|'request'
op|','
string|'"content"'
op|')'
op|':'
newline|'\n'
comment|'# request.content is either a StringIO or a TemporaryFile, and'
nl|'\n'
comment|'# the file pointer is sitting at the beginning (seek(0,0))'
nl|'\n'
indent|'            '
name|'request'
op|'.'
name|'content'
op|'.'
name|'seek'
op|'('
number|'0'
op|','
number|'2'
op|')'
newline|'\n'
name|'length'
op|'='
name|'request'
op|'.'
name|'content'
op|'.'
name|'tell'
op|'('
op|')'
newline|'\n'
name|'request'
op|'.'
name|'content'
op|'.'
name|'seek'
op|'('
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
name|'env'
op|'['
string|"'CONTENT_LENGTH'"
op|']'
op|'='
name|'str'
op|'('
name|'length'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'qindex'
op|'='
name|'string'
op|'.'
name|'find'
op|'('
name|'request'
op|'.'
name|'uri'
op|','
string|"'?'"
op|')'
newline|'\n'
name|'if'
name|'qindex'
op|'!='
op|'-'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'qs'
op|'='
name|'env'
op|'['
string|"'QUERY_STRING'"
op|']'
op|'='
name|'request'
op|'.'
name|'uri'
op|'['
name|'qindex'
op|'+'
number|'1'
op|':'
op|']'
newline|'\n'
name|'if'
string|"'='"
name|'in'
name|'qs'
op|':'
newline|'\n'
indent|'                '
name|'qargs'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'qargs'
op|'='
op|'['
name|'urllib'
op|'.'
name|'unquote'
op|'('
name|'x'
op|')'
name|'for'
name|'x'
name|'in'
name|'qs'
op|'.'
name|'split'
op|'('
string|"'+'"
op|')'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'env'
op|'['
string|"'QUERY_STRING'"
op|']'
op|'='
string|"''"
newline|'\n'
name|'qargs'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
comment|'# Propogate HTTP headers'
nl|'\n'
dedent|''
name|'for'
name|'title'
op|','
name|'header'
name|'in'
name|'request'
op|'.'
name|'getAllHeaders'
op|'('
op|')'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'envname'
op|'='
name|'string'
op|'.'
name|'upper'
op|'('
name|'string'
op|'.'
name|'replace'
op|'('
name|'title'
op|','
string|"'-'"
op|','
string|"'_'"
op|')'
op|')'
newline|'\n'
name|'if'
name|'title'
name|'not'
name|'in'
op|'('
string|"'content-type'"
op|','
string|"'content-length'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'envname'
op|'='
string|'"HTTP_"'
op|'+'
name|'envname'
newline|'\n'
dedent|''
name|'env'
op|'['
name|'envname'
op|']'
op|'='
name|'header'
newline|'\n'
comment|'# Propogate our environment'
nl|'\n'
dedent|''
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'os'
op|'.'
name|'environ'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'env'
op|'.'
name|'has_key'
op|'('
name|'key'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'env'
op|'['
name|'key'
op|']'
op|'='
name|'value'
newline|'\n'
comment|"# And they're off!"
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'runProcess'
op|'('
name|'env'
op|','
name|'request'
op|','
name|'qargs'
op|')'
newline|'\n'
name|'return'
name|'server'
op|'.'
name|'NOT_DONE_YET'
newline|'\n'
nl|'\n'
DECL|member|runProcess
dedent|''
name|'def'
name|'runProcess'
op|'('
name|'self'
op|','
name|'env'
op|','
name|'request'
op|','
name|'qargs'
op|'='
op|'['
op|']'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|'='
name|'CGIProcessProtocol'
op|'('
name|'request'
op|')'
newline|'\n'
name|'reactor'
op|'.'
name|'spawnProcess'
op|'('
name|'p'
op|','
name|'self'
op|'.'
name|'filename'
op|','
op|'['
name|'self'
op|'.'
name|'filename'
op|']'
op|'+'
name|'qargs'
op|','
name|'env'
op|','
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'self'
op|'.'
name|'filename'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FilteredScript
dedent|''
dedent|''
name|'class'
name|'FilteredScript'
op|'('
name|'CGIScript'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""I am a special version of a CGI script, that uses a specific executable.\n\n    This is useful for interfacing with other scripting languages that adhere\n    to the CGI standard (cf. PHPScript).  My \'filter\' attribute specifies what\n    executable to run, and my \'filename\' init parameter describes which script\n    to pass to the first argument of that script.\n    """'
newline|'\n'
nl|'\n'
DECL|variable|filter
name|'filter'
op|'='
string|"'/usr/bin/cat'"
newline|'\n'
nl|'\n'
DECL|member|runProcess
name|'def'
name|'runProcess'
op|'('
name|'self'
op|','
name|'env'
op|','
name|'request'
op|','
name|'qargs'
op|'='
op|'['
op|']'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|'='
name|'CGIProcessProtocol'
op|'('
name|'request'
op|')'
newline|'\n'
name|'reactor'
op|'.'
name|'spawnProcess'
op|'('
name|'p'
op|','
name|'self'
op|'.'
name|'filter'
op|','
op|'['
name|'self'
op|'.'
name|'filter'
op|','
name|'self'
op|'.'
name|'filename'
op|']'
op|'+'
name|'qargs'
op|','
name|'env'
op|','
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'self'
op|'.'
name|'filename'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|PHP3Script
dedent|''
dedent|''
name|'class'
name|'PHP3Script'
op|'('
name|'FilteredScript'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""I am a FilteredScript that uses the default PHP3 command on most systems.\n    """'
newline|'\n'
nl|'\n'
DECL|variable|filter
name|'filter'
op|'='
string|"'/usr/bin/php3'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|PHPScript
dedent|''
name|'class'
name|'PHPScript'
op|'('
name|'FilteredScript'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""I am a FilteredScript that uses the PHP command on most systems.\n    Sometimes, php wants the path to itself as argv[0]. This is that time.\n    """'
newline|'\n'
nl|'\n'
DECL|variable|filter
name|'filter'
op|'='
string|"'/usr/bin/php4'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CGIProcessProtocol
dedent|''
name|'class'
name|'CGIProcessProtocol'
op|'('
name|'protocol'
op|'.'
name|'ProcessProtocol'
op|','
name|'pb'
op|'.'
name|'Viewable'
op|')'
op|':'
newline|'\n'
DECL|variable|handling_headers
indent|'    '
name|'handling_headers'
op|'='
number|'1'
newline|'\n'
DECL|variable|headers_written
name|'headers_written'
op|'='
number|'0'
newline|'\n'
DECL|variable|headertext
name|'headertext'
op|'='
string|"''"
newline|'\n'
DECL|variable|errortext
name|'errortext'
op|'='
string|"''"
newline|'\n'
nl|'\n'
comment|'# Remotely relay producer interface.'
nl|'\n'
nl|'\n'
DECL|member|view_resumeProducing
name|'def'
name|'view_resumeProducing'
op|'('
name|'self'
op|','
name|'issuer'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'resumeProducing'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|view_pauseProducing
dedent|''
name|'def'
name|'view_pauseProducing'
op|'('
name|'self'
op|','
name|'issuer'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'pauseProducing'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|view_stopProducing
dedent|''
name|'def'
name|'view_stopProducing'
op|'('
name|'self'
op|','
name|'issuer'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stopProducing'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|resumeProducing
dedent|''
name|'def'
name|'resumeProducing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'resumeProducing'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|pauseProducing
dedent|''
name|'def'
name|'pauseProducing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'pauseProducing'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|stopProducing
dedent|''
name|'def'
name|'stopProducing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
dedent|''
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'request'
op|'='
name|'request'
newline|'\n'
nl|'\n'
DECL|member|connectionMade
dedent|''
name|'def'
name|'connectionMade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'request'
op|'.'
name|'registerProducer'
op|'('
name|'self'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'content'
op|'.'
name|'seek'
op|'('
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
name|'content'
op|'='
name|'self'
op|'.'
name|'request'
op|'.'
name|'content'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'content'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
name|'content'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'transport'
op|'.'
name|'closeStdin'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|errReceived
dedent|''
name|'def'
name|'errReceived'
op|'('
name|'self'
op|','
name|'error'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'errortext'
op|'='
name|'self'
op|'.'
name|'errortext'
op|'+'
name|'error'
newline|'\n'
nl|'\n'
DECL|member|outReceived
dedent|''
name|'def'
name|'outReceived'
op|'('
name|'self'
op|','
name|'output'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Handle a chunk of input\n        """'
newline|'\n'
comment|'# First, make sure that the headers from the script are sorted'
nl|'\n'
comment|"# out (we'll want to do some parsing on these later.)"
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'handling_headers'
op|':'
newline|'\n'
indent|'            '
name|'text'
op|'='
name|'self'
op|'.'
name|'headertext'
op|'+'
name|'output'
newline|'\n'
name|'headerEnds'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'delimiter'
name|'in'
string|"'\\n\\n'"
op|','
string|"'\\r\\n\\r\\n'"
op|','
string|"'\\r\\r'"
op|','
string|"'\\n\\r\\n'"
op|':'
newline|'\n'
indent|'                '
name|'headerend'
op|'='
name|'string'
op|'.'
name|'find'
op|'('
name|'text'
op|','
name|'delimiter'
op|')'
newline|'\n'
name|'if'
name|'headerend'
op|'!='
op|'-'
number|'1'
op|':'
newline|'\n'
indent|'                    '
name|'headerEnds'
op|'.'
name|'append'
op|'('
op|'('
name|'headerend'
op|','
name|'delimiter'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'headerEnds'
op|':'
newline|'\n'
indent|'                '
name|'headerEnds'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'headerend'
op|','
name|'delimiter'
op|'='
name|'headerEnds'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'headertext'
op|'='
name|'text'
op|'['
op|':'
name|'headerend'
op|']'
newline|'\n'
comment|'# This is a final version of the header text.'
nl|'\n'
name|'linebreak'
op|'='
name|'delimiter'
op|'['
op|':'
name|'len'
op|'('
name|'delimiter'
op|')'
op|'/'
number|'2'
op|']'
newline|'\n'
name|'headers'
op|'='
name|'string'
op|'.'
name|'split'
op|'('
name|'self'
op|'.'
name|'headertext'
op|','
name|'linebreak'
op|')'
newline|'\n'
name|'for'
name|'header'
name|'in'
name|'headers'
op|':'
newline|'\n'
indent|'                    '
name|'br'
op|'='
name|'string'
op|'.'
name|'find'
op|'('
name|'header'
op|','
string|"': '"
op|')'
newline|'\n'
name|'if'
name|'br'
op|'=='
op|'-'
number|'1'
op|':'
newline|'\n'
indent|'                        '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'ignoring malformed CGI header: %s'"
op|'%'
name|'header'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'headerName'
op|'='
name|'string'
op|'.'
name|'lower'
op|'('
name|'header'
op|'['
op|':'
name|'br'
op|']'
op|')'
newline|'\n'
name|'headerText'
op|'='
name|'header'
op|'['
name|'br'
op|'+'
number|'2'
op|':'
op|']'
newline|'\n'
name|'if'
name|'headerName'
op|'=='
string|"'location'"
op|':'
newline|'\n'
indent|'                            '
name|'self'
op|'.'
name|'request'
op|'.'
name|'setResponseCode'
op|'('
name|'http'
op|'.'
name|'FOUND'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'headerName'
op|'=='
string|"'status'"
op|':'
newline|'\n'
indent|'                            '
name|'try'
op|':'
newline|'\n'
indent|'                                '
name|'statusNum'
op|'='
name|'int'
op|'('
name|'headerText'
op|'['
op|':'
number|'3'
op|']'
op|')'
comment|'#"XXX <description>" sometimes happens.'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                                '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"malformed status header"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                                '
name|'self'
op|'.'
name|'request'
op|'.'
name|'setResponseCode'
op|'('
name|'statusNum'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                            '
name|'self'
op|'.'
name|'request'
op|'.'
name|'setHeader'
op|'('
name|'headerName'
op|','
name|'headerText'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'output'
op|'='
name|'text'
op|'['
name|'headerend'
op|'+'
name|'len'
op|'('
name|'delimiter'
op|')'
op|':'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'handling_headers'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'handling_headers'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'headertext'
op|'='
name|'text'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'handling_headers'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'request'
op|'.'
name|'write'
op|'('
name|'output'
op|')'
newline|'\n'
nl|'\n'
DECL|member|processEnded
dedent|''
dedent|''
name|'def'
name|'processEnded'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'reason'
op|'.'
name|'value'
op|'.'
name|'exitCode'
op|'!='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"CGI %s exited with exit code %s"'
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'request'
op|'.'
name|'uri'
op|','
name|'reason'
op|'.'
name|'value'
op|'.'
name|'exitCode'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'errortext'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Errors from CGI %s: %s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'request'
op|'.'
name|'uri'
op|','
name|'self'
op|'.'
name|'errortext'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'handling_headers'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Premature end of headers in %s: %s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'request'
op|'.'
name|'uri'
op|','
name|'self'
op|'.'
name|'headertext'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'write'
op|'('
nl|'\n'
name|'resource'
op|'.'
name|'ErrorPage'
op|'('
name|'http'
op|'.'
name|'INTERNAL_SERVER_ERROR'
op|','
nl|'\n'
string|'"CGI Script Error"'
op|','
nl|'\n'
string|'"Premature end of script headers."'
op|')'
op|'.'
name|'render'
op|'('
name|'self'
op|'.'
name|'request'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'request'
op|'.'
name|'unregisterProducer'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'request'
op|'.'
name|'finish'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
