begin_unit
comment|'# -*- test-case-name: twisted.web.test.test_error -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2010 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nException definitions for L{twisted.web}.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'operator'
op|','
name|'warnings'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'web'
name|'import'
name|'http'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Error
name|'class'
name|'Error'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A basic HTTP error.\n\n    @type status: C{str}\n    @ivar status: Refers to an HTTP status code, for example L{http.NOT_FOUND}.\n\n    @type message: C{str}\n    @param message: A short error message, for example "NOT FOUND".\n\n    @type response: C{str}\n    @ivar response: A complete HTML document for an error page.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'code'
op|','
name|'message'
op|'='
name|'None'
op|','
name|'response'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Initializes a basic exception.\n\n        @type code: C{str}\n        @param code: Refers to an HTTP status code, for example\n            L{http.NOT_FOUND}. If no C{message} is given, C{code} is mapped to a\n            descriptive string that is used instead.\n\n        @type message: C{str}\n        @param message: A short error message, for example "NOT FOUND".\n\n        @type response: C{str}\n        @param response: A complete HTML document for an error page.\n        """'
newline|'\n'
name|'if'
name|'not'
name|'message'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'message'
op|'='
name|'http'
op|'.'
name|'responses'
op|'.'
name|'get'
op|'('
name|'int'
op|'('
name|'code'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
comment|"# If code wasn't a stringified int, can't map the"
nl|'\n'
comment|'# status code to a descriptive string so keep message'
nl|'\n'
comment|'# unchanged.'
nl|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'Exception'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'code'
op|','
name|'message'
op|','
name|'response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'status'
op|'='
name|'code'
newline|'\n'
name|'self'
op|'.'
name|'message'
op|'='
name|'message'
newline|'\n'
name|'self'
op|'.'
name|'response'
op|'='
name|'response'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'%s %s'"
op|'%'
op|'('
name|'self'
op|'['
number|'0'
op|']'
op|','
name|'self'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|PageRedirect
dedent|''
dedent|''
name|'class'
name|'PageRedirect'
op|'('
name|'Error'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A request resulted in an HTTP redirect.\n\n    @type location: C{str}\n    @ivar location: The location of the redirect which was not followed.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'code'
op|','
name|'message'
op|'='
name|'None'
op|','
name|'response'
op|'='
name|'None'
op|','
name|'location'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Initializes a page redirect exception.\n\n        @type code: C{str}\n        @param code: Refers to an HTTP status code, for example\n            L{http.NOT_FOUND}. If no C{message} is given, C{code} is mapped to a\n            descriptive string that is used instead.\n\n        @type message: C{str}\n        @param message: A short error message, for example "NOT FOUND".\n\n        @type response: C{str}\n        @param response: A complete HTML document for an error page.\n\n        @type location: C{str}\n        @param location: The location response-header field value. It is an\n            absolute URI used to redirect the receiver to a location other than\n            the Request-URI so the request can be completed.\n        """'
newline|'\n'
name|'if'
name|'not'
name|'message'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'message'
op|'='
name|'http'
op|'.'
name|'responses'
op|'.'
name|'get'
op|'('
name|'int'
op|'('
name|'code'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
comment|"# If code wasn't a stringified int, can't map the"
nl|'\n'
comment|'# status code to a descriptive string so keep message'
nl|'\n'
comment|'# unchanged.'
nl|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'location'
name|'and'
name|'message'
op|':'
newline|'\n'
indent|'            '
name|'message'
op|'='
string|'"%s to %s"'
op|'%'
op|'('
name|'message'
op|','
name|'location'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'Error'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'code'
op|','
name|'message'
op|','
name|'response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'location'
op|'='
name|'location'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|InfiniteRedirection
dedent|''
dedent|''
name|'class'
name|'InfiniteRedirection'
op|'('
name|'Error'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    HTTP redirection is occurring endlessly.\n\n    @type location: C{str}\n    @ivar location: The first URL in the series of redirections which was\n        not followed.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'code'
op|','
name|'message'
op|'='
name|'None'
op|','
name|'response'
op|'='
name|'None'
op|','
name|'location'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Initializes an infinite redirection exception.\n\n        @type code: C{str}\n        @param code: Refers to an HTTP status code, for example\n            L{http.NOT_FOUND}. If no C{message} is given, C{code} is mapped to a\n            descriptive string that is used instead.\n\n        @type message: C{str}\n        @param message: A short error message, for example "NOT FOUND".\n\n        @type response: C{str}\n        @param response: A complete HTML document for an error page.\n\n        @type location: C{str}\n        @param location: The location response-header field value. It is an\n            absolute URI used to redirect the receiver to a location other than\n            the Request-URI so the request can be completed.\n        """'
newline|'\n'
name|'if'
name|'not'
name|'message'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'message'
op|'='
name|'http'
op|'.'
name|'responses'
op|'.'
name|'get'
op|'('
name|'int'
op|'('
name|'code'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
comment|"# If code wasn't a stringified int, can't map the"
nl|'\n'
comment|'# status code to a descriptive string so keep message'
nl|'\n'
comment|'# unchanged.'
nl|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'location'
name|'and'
name|'message'
op|':'
newline|'\n'
indent|'            '
name|'message'
op|'='
string|'"%s to %s"'
op|'%'
op|'('
name|'message'
op|','
name|'location'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'Error'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'code'
op|','
name|'message'
op|','
name|'response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'location'
op|'='
name|'location'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|UnsupportedMethod
dedent|''
dedent|''
name|'class'
name|'UnsupportedMethod'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Raised by a resource when faced with a strange request method.\n\n    RFC 2616 (HTTP 1.1) gives us two choices when faced with this situtation:\n    If the type of request is known to us, but not allowed for the requested\n    resource, respond with NOT_ALLOWED.  Otherwise, if the request is something\n    we don\'t know how to deal with in any case, respond with NOT_IMPLEMENTED.\n\n    When this exception is raised by a Resource\'s render method, the server\n    will make the appropriate response.\n\n    This exception\'s first argument MUST be a sequence of the methods the\n    resource *does* support.\n    """'
newline|'\n'
nl|'\n'
DECL|variable|allowedMethods
name|'allowedMethods'
op|'='
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'allowedMethods'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'Exception'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'allowedMethods'
op|','
op|'*'
name|'args'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'allowedMethods'
op|'='
name|'allowedMethods'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'operator'
op|'.'
name|'isSequenceType'
op|'('
name|'allowedMethods'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'why'
op|'='
string|'"but my first argument is not a sequence."'
newline|'\n'
name|'s'
op|'='
op|'('
string|'"First argument must be a sequence of"'
nl|'\n'
string|'" supported methods, %s"'
op|'%'
op|'('
name|'why'
op|','
op|')'
op|')'
newline|'\n'
name|'raise'
name|'TypeError'
op|','
name|'s'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|SchemeNotSupported
dedent|''
dedent|''
dedent|''
name|'class'
name|'SchemeNotSupported'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    The scheme of a URI was not one of the supported values.\n    """'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'from'
name|'twisted'
op|'.'
name|'web'
name|'import'
name|'resource'
name|'as'
name|'_resource'
newline|'\n'
nl|'\n'
DECL|class|ErrorPage
name|'class'
name|'ErrorPage'
op|'('
name|'_resource'
op|'.'
name|'ErrorPage'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Deprecated alias for L{twisted.web.resource.ErrorPage}.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'warnings'
op|'.'
name|'warn'
op|'('
nl|'\n'
string|'"twisted.web.error.ErrorPage is deprecated since Twisted 9.0.  "'
nl|'\n'
string|'"See twisted.web.resource.ErrorPage."'
op|','
name|'DeprecationWarning'
op|','
nl|'\n'
name|'stacklevel'
op|'='
number|'2'
op|')'
newline|'\n'
name|'_resource'
op|'.'
name|'ErrorPage'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|NoResource
dedent|''
dedent|''
name|'class'
name|'NoResource'
op|'('
name|'_resource'
op|'.'
name|'NoResource'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Deprecated alias for L{twisted.web.resource.NoResource}.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'warnings'
op|'.'
name|'warn'
op|'('
nl|'\n'
string|'"twisted.web.error.NoResource is deprecated since Twisted 9.0.  "'
nl|'\n'
string|'"See twisted.web.resource.NoResource."'
op|','
name|'DeprecationWarning'
op|','
nl|'\n'
name|'stacklevel'
op|'='
number|'2'
op|')'
newline|'\n'
name|'_resource'
op|'.'
name|'NoResource'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|ForbiddenResource
dedent|''
dedent|''
name|'class'
name|'ForbiddenResource'
op|'('
name|'_resource'
op|'.'
name|'ForbiddenResource'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Deprecated alias for L{twisted.web.resource.ForbiddenResource}.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'warnings'
op|'.'
name|'warn'
op|'('
nl|'\n'
string|'"twisted.web.error.ForbiddenResource is deprecated since Twisted "'
nl|'\n'
string|'"9.0.  See twisted.web.resource.ForbiddenResource."'
op|','
nl|'\n'
name|'DeprecationWarning'
op|','
name|'stacklevel'
op|'='
number|'2'
op|')'
newline|'\n'
name|'_resource'
op|'.'
name|'ForbiddenResource'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|__all__
dedent|''
dedent|''
name|'__all__'
op|'='
op|'['
nl|'\n'
string|"'Error'"
op|','
string|"'PageRedirect'"
op|','
string|"'InfiniteRedirection'"
op|','
nl|'\n'
string|"'ErrorPage'"
op|','
string|"'NoResource'"
op|','
string|"'ForbiddenResource'"
op|']'
newline|'\n'
endmarker|''
end_unit
