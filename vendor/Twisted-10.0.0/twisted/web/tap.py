begin_unit
comment|'# Copyright (c) 2001-2010 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nSupport for creating a service which runs a web server.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
nl|'\n'
comment|'# Twisted Imports'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'web'
name|'import'
name|'server'
op|','
name|'static'
op|','
name|'twcgi'
op|','
name|'script'
op|','
name|'demo'
op|','
name|'distrib'
op|','
name|'wsgi'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'interfaces'
op|','
name|'reactor'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'usage'
op|','
name|'reflect'
op|','
name|'threadpool'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'spread'
name|'import'
name|'pb'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'application'
name|'import'
name|'internet'
op|','
name|'service'
op|','
name|'strports'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Options
name|'class'
name|'Options'
op|'('
name|'usage'
op|'.'
name|'Options'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Define the options accepted by the I{twistd web} plugin.\n    """'
newline|'\n'
DECL|variable|synopsis
name|'synopsis'
op|'='
string|'"[web options]"'
newline|'\n'
nl|'\n'
DECL|variable|optParameters
name|'optParameters'
op|'='
op|'['
op|'['
string|'"port"'
op|','
string|'"p"'
op|','
name|'None'
op|','
string|'"strports description of the port to "'
nl|'\n'
string|'"start the server on."'
op|']'
op|','
nl|'\n'
op|'['
string|'"logfile"'
op|','
string|'"l"'
op|','
name|'None'
op|','
string|'"Path to web CLF (Combined Log Format) log file."'
op|']'
op|','
nl|'\n'
op|'['
string|'"https"'
op|','
name|'None'
op|','
name|'None'
op|','
string|'"Port to listen on for Secure HTTP."'
op|']'
op|','
nl|'\n'
op|'['
string|'"certificate"'
op|','
string|'"c"'
op|','
string|'"server.pem"'
op|','
string|'"SSL certificate to use for HTTPS. "'
op|']'
op|','
nl|'\n'
op|'['
string|'"privkey"'
op|','
string|'"k"'
op|','
string|'"server.pem"'
op|','
string|'"SSL certificate to use for HTTPS."'
op|']'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|optFlags
name|'optFlags'
op|'='
op|'['
op|'['
string|'"personal"'
op|','
string|'""'
op|','
nl|'\n'
string|'"Instead of generating a webserver, generate a "'
nl|'\n'
string|'"ResourcePublisher which listens on  the port given by "'
nl|'\n'
string|'"--port, or ~/%s "'
op|'%'
op|'('
name|'distrib'
op|'.'
name|'UserDirectory'
op|'.'
name|'userSocketName'
op|','
op|')'
op|'+'
nl|'\n'
string|'"if --port is not specified."'
op|']'
op|','
nl|'\n'
op|'['
string|'"notracebacks"'
op|','
string|'"n"'
op|','
string|'"Do not display tracebacks in broken web pages. "'
op|'+'
nl|'\n'
string|'"Displaying tracebacks to users may be security risk!"'
op|']'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|zsh_actions
name|'zsh_actions'
op|'='
op|'{'
string|'"logfile"'
op|':'
string|'"_files -g \'*.log\'"'
op|','
string|'"certificate"'
op|':'
string|'"_files -g \'*.pem\'"'
op|','
nl|'\n'
string|'"privkey"'
op|':'
string|'"_files -g \'*.pem\'"'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
name|'longdesc'
op|'='
string|'"""\\\nThis starts a webserver.  If you specify no arguments, it will be a\ndemo webserver that has the Test class from twisted.web.demo in it."""'
newline|'\n'
nl|'\n'
DECL|function|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'usage'
op|'.'
name|'Options'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'['
string|"'indexes'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'['
string|"'root'"
op|']'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|function|opt_index
dedent|''
name|'def'
name|'opt_index'
op|'('
name|'self'
op|','
name|'indexName'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Add the name of a file used to check for directory indexes.\n        [default: index, index.html]\n        """'
newline|'\n'
name|'self'
op|'['
string|"'indexes'"
op|']'
op|'.'
name|'append'
op|'('
name|'indexName'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|opt_i
dedent|''
name|'opt_i'
op|'='
name|'opt_index'
newline|'\n'
nl|'\n'
DECL|function|opt_user
name|'def'
name|'opt_user'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Makes a server with ~/public_html and ~/.twistd-web-pb support for\n        users.\n        """'
newline|'\n'
name|'self'
op|'['
string|"'root'"
op|']'
op|'='
name|'distrib'
op|'.'
name|'UserDirectory'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|variable|opt_u
dedent|''
name|'opt_u'
op|'='
name|'opt_user'
newline|'\n'
nl|'\n'
DECL|function|opt_path
name|'def'
name|'opt_path'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        <path> is either a specific file or a directory to be set as the root\n        of the web server. Use this if you have a directory full of HTML, cgi,\n        php3, epy, or rpy files or any other files that you want to be served\n        up raw.\n        """'
newline|'\n'
DECL|function|trp
name|'def'
name|'trp'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
comment|'# Help avoid actually importing twisted.web.trp until it is really'
nl|'\n'
comment|"# needed.  This avoids getting a deprecation warning if you're not"
nl|'\n'
comment|'# using deprecated functionality.'
nl|'\n'
indent|'            '
name|'from'
name|'twisted'
op|'.'
name|'web'
name|'import'
name|'trp'
newline|'\n'
name|'return'
name|'trp'
op|'.'
name|'ResourceUnpickler'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'['
string|"'root'"
op|']'
op|'='
name|'static'
op|'.'
name|'File'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'abspath'
op|'('
name|'path'
op|')'
op|')'
newline|'\n'
name|'self'
op|'['
string|"'root'"
op|']'
op|'.'
name|'processors'
op|'='
op|'{'
nl|'\n'
string|"'.cgi'"
op|':'
name|'twcgi'
op|'.'
name|'CGIScript'
op|','
nl|'\n'
string|"'.php3'"
op|':'
name|'twcgi'
op|'.'
name|'PHP3Script'
op|','
nl|'\n'
string|"'.php'"
op|':'
name|'twcgi'
op|'.'
name|'PHPScript'
op|','
nl|'\n'
string|"'.epy'"
op|':'
name|'script'
op|'.'
name|'PythonScript'
op|','
nl|'\n'
string|"'.rpy'"
op|':'
name|'script'
op|'.'
name|'ResourceScript'
op|','
nl|'\n'
string|"'.trp'"
op|':'
name|'trp'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|opt_processor
dedent|''
name|'def'
name|'opt_processor'
op|'('
name|'self'
op|','
name|'proc'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        `ext=class\' where `class\' is added as a Processor for files ending\n        with `ext\'.\n        """'
newline|'\n'
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'self'
op|'['
string|"'root'"
op|']'
op|','
name|'static'
op|'.'
name|'File'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'usage'
op|'.'
name|'UsageError'
op|'('
string|'"You can only use --processor after --path."'
op|')'
newline|'\n'
dedent|''
name|'ext'
op|','
name|'klass'
op|'='
name|'proc'
op|'.'
name|'split'
op|'('
string|"'='"
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'['
string|"'root'"
op|']'
op|'.'
name|'processors'
op|'['
name|'ext'
op|']'
op|'='
name|'reflect'
op|'.'
name|'namedClass'
op|'('
name|'klass'
op|')'
newline|'\n'
nl|'\n'
DECL|function|opt_class
dedent|''
name|'def'
name|'opt_class'
op|'('
name|'self'
op|','
name|'className'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create a Resource subclass with a zero-argument constructor.\n        """'
newline|'\n'
name|'classObj'
op|'='
name|'reflect'
op|'.'
name|'namedClass'
op|'('
name|'className'
op|')'
newline|'\n'
name|'self'
op|'['
string|"'root'"
op|']'
op|'='
name|'classObj'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|opt_resource_script
dedent|''
name|'def'
name|'opt_resource_script'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        An .rpy file to be used as the root resource of the webserver.\n        """'
newline|'\n'
name|'self'
op|'['
string|"'root'"
op|']'
op|'='
name|'script'
op|'.'
name|'ResourceScriptWrapper'
op|'('
name|'name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|opt_wsgi
dedent|''
name|'def'
name|'opt_wsgi'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        The FQPN of a WSGI application object to serve as the root resource of\n        the webserver.\n        """'
newline|'\n'
name|'pool'
op|'='
name|'threadpool'
op|'.'
name|'ThreadPool'
op|'('
op|')'
newline|'\n'
name|'reactor'
op|'.'
name|'callWhenRunning'
op|'('
name|'pool'
op|'.'
name|'start'
op|')'
newline|'\n'
name|'reactor'
op|'.'
name|'addSystemEventTrigger'
op|'('
string|"'after'"
op|','
string|"'shutdown'"
op|','
name|'pool'
op|'.'
name|'stop'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'application'
op|'='
name|'reflect'
op|'.'
name|'namedAny'
op|'('
name|'name'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'AttributeError'
op|','
name|'ValueError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'usage'
op|'.'
name|'UsageError'
op|'('
string|'"No such WSGI application: %r"'
op|'%'
op|'('
name|'name'
op|','
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'['
string|"'root'"
op|']'
op|'='
name|'wsgi'
op|'.'
name|'WSGIResource'
op|'('
name|'reactor'
op|','
name|'pool'
op|','
name|'application'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|opt_mime_type
dedent|''
name|'def'
name|'opt_mime_type'
op|'('
name|'self'
op|','
name|'defaultType'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Specify the default mime-type for static files.\n        """'
newline|'\n'
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'self'
op|'['
string|"'root'"
op|']'
op|','
name|'static'
op|'.'
name|'File'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'usage'
op|'.'
name|'UsageError'
op|'('
string|'"You can only use --mime_type after --path."'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'['
string|"'root'"
op|']'
op|'.'
name|'defaultType'
op|'='
name|'defaultType'
newline|'\n'
DECL|variable|opt_m
dedent|''
name|'opt_m'
op|'='
name|'opt_mime_type'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|opt_allow_ignore_ext
name|'def'
name|'opt_allow_ignore_ext'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Specify whether or not a request for \'foo\' should return \'foo.ext\'\n        """'
newline|'\n'
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'self'
op|'['
string|"'root'"
op|']'
op|','
name|'static'
op|'.'
name|'File'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'usage'
op|'.'
name|'UsageError'
op|'('
string|'"You can only use --allow_ignore_ext "'
nl|'\n'
string|'"after --path."'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'['
string|"'root'"
op|']'
op|'.'
name|'ignoreExt'
op|'('
string|"'*'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|opt_ignore_ext
dedent|''
name|'def'
name|'opt_ignore_ext'
op|'('
name|'self'
op|','
name|'ext'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Specify an extension to ignore.  These will be processed in order.\n        """'
newline|'\n'
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'self'
op|'['
string|"'root'"
op|']'
op|','
name|'static'
op|'.'
name|'File'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'usage'
op|'.'
name|'UsageError'
op|'('
string|'"You can only use --ignore_ext "'
nl|'\n'
string|'"after --path."'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'['
string|"'root'"
op|']'
op|'.'
name|'ignoreExt'
op|'('
name|'ext'
op|')'
newline|'\n'
nl|'\n'
DECL|function|postOptions
dedent|''
name|'def'
name|'postOptions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Set up conditional defaults and check for dependencies.\n\n        If SSL is not available but an HTTPS server was configured, raise a\n        L{UsageError} indicating that this is not possible.\n\n        If no server port was supplied, select a default appropriate for the\n        other options supplied.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'['
string|"'https'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'ssl'
name|'import'
name|'DefaultOpenSSLContextFactory'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'usage'
op|'.'
name|'UsageError'
op|'('
string|'"SSL support not installed"'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'self'
op|'['
string|"'port'"
op|']'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'['
string|"'personal'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'expanduser'
op|'('
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
string|"'~'"
op|','
name|'distrib'
op|'.'
name|'UserDirectory'
op|'.'
name|'userSocketName'
op|')'
op|')'
newline|'\n'
name|'self'
op|'['
string|"'port'"
op|']'
op|'='
string|"'unix:'"
op|'+'
name|'path'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'['
string|"'port'"
op|']'
op|'='
string|"'tcp:8080'"
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|makePersonalServerFactory
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'makePersonalServerFactory'
op|'('
name|'site'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Create and return a factory which will respond to I{distrib} requests\n    against the given site.\n\n    @type site: L{twisted.web.server.Site}\n    @rtype: L{twisted.internet.protocol.Factory}\n    """'
newline|'\n'
name|'return'
name|'pb'
op|'.'
name|'PBServerFactory'
op|'('
name|'distrib'
op|'.'
name|'ResourcePublisher'
op|'('
name|'site'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|makeService
dedent|''
name|'def'
name|'makeService'
op|'('
name|'config'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'s'
op|'='
name|'service'
op|'.'
name|'MultiService'
op|'('
op|')'
newline|'\n'
name|'if'
name|'config'
op|'['
string|"'root'"
op|']'
op|':'
newline|'\n'
indent|'        '
name|'root'
op|'='
name|'config'
op|'['
string|"'root'"
op|']'
newline|'\n'
name|'if'
name|'config'
op|'['
string|"'indexes'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'config'
op|'['
string|"'root'"
op|']'
op|'.'
name|'indexNames'
op|'='
name|'config'
op|'['
string|"'indexes'"
op|']'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# This really ought to be web.Admin or something'
nl|'\n'
indent|'        '
name|'root'
op|'='
name|'demo'
op|'.'
name|'Test'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'isinstance'
op|'('
name|'root'
op|','
name|'static'
op|'.'
name|'File'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'root'
op|'.'
name|'registry'
op|'.'
name|'setComponent'
op|'('
name|'interfaces'
op|'.'
name|'IServiceCollection'
op|','
name|'s'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'config'
op|'['
string|"'logfile'"
op|']'
op|':'
newline|'\n'
indent|'        '
name|'site'
op|'='
name|'server'
op|'.'
name|'Site'
op|'('
name|'root'
op|','
name|'logPath'
op|'='
name|'config'
op|'['
string|"'logfile'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'site'
op|'='
name|'server'
op|'.'
name|'Site'
op|'('
name|'root'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'site'
op|'.'
name|'displayTracebacks'
op|'='
name|'not'
name|'config'
op|'['
string|'"notracebacks"'
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'config'
op|'['
string|"'personal'"
op|']'
op|':'
newline|'\n'
indent|'        '
name|'personal'
op|'='
name|'strports'
op|'.'
name|'service'
op|'('
nl|'\n'
name|'config'
op|'['
string|"'port'"
op|']'
op|','
name|'makePersonalServerFactory'
op|'('
name|'site'
op|')'
op|')'
newline|'\n'
name|'personal'
op|'.'
name|'setServiceParent'
op|'('
name|'s'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'config'
op|'['
string|"'https'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'ssl'
name|'import'
name|'DefaultOpenSSLContextFactory'
newline|'\n'
name|'i'
op|'='
name|'internet'
op|'.'
name|'SSLServer'
op|'('
name|'int'
op|'('
name|'config'
op|'['
string|"'https'"
op|']'
op|')'
op|','
name|'site'
op|','
nl|'\n'
name|'DefaultOpenSSLContextFactory'
op|'('
name|'config'
op|'['
string|"'privkey'"
op|']'
op|','
nl|'\n'
name|'config'
op|'['
string|"'certificate'"
op|']'
op|')'
op|')'
newline|'\n'
name|'i'
op|'.'
name|'setServiceParent'
op|'('
name|'s'
op|')'
newline|'\n'
dedent|''
name|'strports'
op|'.'
name|'service'
op|'('
name|'config'
op|'['
string|"'port'"
op|']'
op|','
name|'site'
op|')'
op|'.'
name|'setServiceParent'
op|'('
name|'s'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'s'
newline|'\n'
dedent|''
endmarker|''
end_unit
