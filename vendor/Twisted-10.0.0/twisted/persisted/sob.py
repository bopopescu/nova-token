begin_unit
comment|'# -*- test-case-name: twisted.test.test_sob -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
comment|'#'
nl|'\n'
string|'"""\nSave and load Small OBjects to and from files, using various formats.\n\nMaintainer: Moshe Zadka\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
op|','
name|'sys'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'cPickle'
name|'as'
name|'pickle'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'pickle'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'cStringIO'
name|'as'
name|'StringIO'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'StringIO'
newline|'\n'
dedent|''
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
op|','
name|'runtime'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'hashlib'
name|'import'
name|'md5'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'persisted'
name|'import'
name|'styles'
newline|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
op|','
name|'Interface'
newline|'\n'
nl|'\n'
comment|'# Note:'
nl|'\n'
comment|'# These encrypt/decrypt functions only work for data formats'
nl|'\n'
comment|'# which are immune to having spaces tucked at the end.'
nl|'\n'
comment|'# All data formats which persist saves hold that condition.'
nl|'\n'
DECL|function|_encrypt
name|'def'
name|'_encrypt'
op|'('
name|'passphrase'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'from'
name|'Crypto'
op|'.'
name|'Cipher'
name|'import'
name|'AES'
name|'as'
name|'cipher'
newline|'\n'
name|'leftover'
op|'='
name|'len'
op|'('
name|'data'
op|')'
op|'%'
name|'cipher'
op|'.'
name|'block_size'
newline|'\n'
name|'if'
name|'leftover'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'+='
string|"' '"
op|'*'
op|'('
name|'cipher'
op|'.'
name|'block_size'
op|'-'
name|'leftover'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'cipher'
op|'.'
name|'new'
op|'('
name|'md5'
op|'('
name|'passphrase'
op|')'
op|'.'
name|'digest'
op|'('
op|')'
op|'['
op|':'
number|'16'
op|']'
op|')'
op|'.'
name|'encrypt'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_decrypt
dedent|''
name|'def'
name|'_decrypt'
op|'('
name|'passphrase'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'from'
name|'Crypto'
op|'.'
name|'Cipher'
name|'import'
name|'AES'
newline|'\n'
name|'return'
name|'AES'
op|'.'
name|'new'
op|'('
name|'md5'
op|'('
name|'passphrase'
op|')'
op|'.'
name|'digest'
op|'('
op|')'
op|'['
op|':'
number|'16'
op|']'
op|')'
op|'.'
name|'decrypt'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|IPersistable
dedent|''
name|'class'
name|'IPersistable'
op|'('
name|'Interface'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
string|'"""An object which can be saved in several formats to a file"""'
newline|'\n'
nl|'\n'
DECL|member|setStyle
name|'def'
name|'setStyle'
op|'('
name|'style'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Set desired format.\n\n        @type style: string (one of \'pickle\' or \'source\')\n        """'
newline|'\n'
nl|'\n'
DECL|member|save
dedent|''
name|'def'
name|'save'
op|'('
name|'tag'
op|'='
name|'None'
op|','
name|'filename'
op|'='
name|'None'
op|','
name|'passphrase'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Save object to file.\n\n        @type tag: string\n        @type filename: string\n        @type passphrase: string\n        """'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Persistent
dedent|''
dedent|''
name|'class'
name|'Persistent'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'implements'
op|'('
name|'IPersistable'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|style
name|'style'
op|'='
string|'"pickle"'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'original'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'original'
op|'='
name|'original'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
nl|'\n'
DECL|member|setStyle
dedent|''
name|'def'
name|'setStyle'
op|'('
name|'self'
op|','
name|'style'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Set desired format.\n\n        @type style: string (one of \'pickle\' or \'source\')\n        """'
newline|'\n'
name|'self'
op|'.'
name|'style'
op|'='
name|'style'
newline|'\n'
nl|'\n'
DECL|member|_getFilename
dedent|''
name|'def'
name|'_getFilename'
op|'('
name|'self'
op|','
name|'filename'
op|','
name|'ext'
op|','
name|'tag'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'filename'
op|':'
newline|'\n'
indent|'            '
name|'finalname'
op|'='
name|'filename'
newline|'\n'
name|'filename'
op|'='
name|'finalname'
op|'+'
string|'"-2"'
newline|'\n'
dedent|''
name|'elif'
name|'tag'
op|':'
newline|'\n'
indent|'            '
name|'filename'
op|'='
string|'"%s-%s-2.%s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'name'
op|','
name|'tag'
op|','
name|'ext'
op|')'
newline|'\n'
name|'finalname'
op|'='
string|'"%s-%s.%s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'name'
op|','
name|'tag'
op|','
name|'ext'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'filename'
op|'='
string|'"%s-2.%s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'name'
op|','
name|'ext'
op|')'
newline|'\n'
name|'finalname'
op|'='
string|'"%s.%s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'name'
op|','
name|'ext'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'finalname'
op|','
name|'filename'
newline|'\n'
nl|'\n'
DECL|member|_saveTemp
dedent|''
name|'def'
name|'_saveTemp'
op|'('
name|'self'
op|','
name|'filename'
op|','
name|'passphrase'
op|','
name|'dumpFunc'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'f'
op|'='
name|'open'
op|'('
name|'filename'
op|','
string|"'wb'"
op|')'
newline|'\n'
name|'if'
name|'passphrase'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'dumpFunc'
op|'('
name|'self'
op|'.'
name|'original'
op|','
name|'f'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'s'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
op|')'
newline|'\n'
name|'dumpFunc'
op|'('
name|'self'
op|'.'
name|'original'
op|','
name|'s'
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
name|'_encrypt'
op|'('
name|'passphrase'
op|','
name|'s'
op|'.'
name|'getvalue'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_getStyle
dedent|''
name|'def'
name|'_getStyle'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'style'
op|'=='
string|'"source"'
op|':'
newline|'\n'
indent|'            '
name|'from'
name|'twisted'
op|'.'
name|'persisted'
op|'.'
name|'aot'
name|'import'
name|'jellyToSource'
name|'as'
name|'dumpFunc'
newline|'\n'
name|'ext'
op|'='
string|'"tas"'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
DECL|function|dumpFunc
indent|'            '
name|'def'
name|'dumpFunc'
op|'('
name|'obj'
op|','
name|'file'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pickle'
op|'.'
name|'dump'
op|'('
name|'obj'
op|','
name|'file'
op|','
number|'2'
op|')'
newline|'\n'
dedent|''
name|'ext'
op|'='
string|'"tap"'
newline|'\n'
dedent|''
name|'return'
name|'ext'
op|','
name|'dumpFunc'
newline|'\n'
nl|'\n'
DECL|member|save
dedent|''
name|'def'
name|'save'
op|'('
name|'self'
op|','
name|'tag'
op|'='
name|'None'
op|','
name|'filename'
op|'='
name|'None'
op|','
name|'passphrase'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Save object to file.\n\n        @type tag: string\n        @type filename: string\n        @type passphrase: string\n        """'
newline|'\n'
name|'ext'
op|','
name|'dumpFunc'
op|'='
name|'self'
op|'.'
name|'_getStyle'
op|'('
op|')'
newline|'\n'
name|'if'
name|'passphrase'
op|':'
newline|'\n'
indent|'            '
name|'ext'
op|'='
string|"'e'"
op|'+'
name|'ext'
newline|'\n'
dedent|''
name|'finalname'
op|','
name|'filename'
op|'='
name|'self'
op|'.'
name|'_getFilename'
op|'('
name|'filename'
op|','
name|'ext'
op|','
name|'tag'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Saving "'
op|'+'
name|'self'
op|'.'
name|'name'
op|'+'
string|'" application to "'
op|'+'
name|'finalname'
op|'+'
string|'"..."'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_saveTemp'
op|'('
name|'filename'
op|','
name|'passphrase'
op|','
name|'dumpFunc'
op|')'
newline|'\n'
name|'if'
name|'runtime'
op|'.'
name|'platformType'
op|'=='
string|'"win32"'
name|'and'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isfile'
op|'('
name|'finalname'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'remove'
op|'('
name|'finalname'
op|')'
newline|'\n'
dedent|''
name|'os'
op|'.'
name|'rename'
op|'('
name|'filename'
op|','
name|'finalname'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Saved."'
op|')'
newline|'\n'
nl|'\n'
comment|'# "Persistant" has been present since 1.0.7, so retain it for compatibility'
nl|'\n'
DECL|variable|Persistant
dedent|''
dedent|''
name|'Persistant'
op|'='
name|'Persistent'
newline|'\n'
nl|'\n'
DECL|class|_EverythingEphemeral
name|'class'
name|'_EverythingEphemeral'
op|'('
name|'styles'
op|'.'
name|'Ephemeral'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|initRun
indent|'    '
name|'initRun'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'mainMod'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        @param mainMod: The \'__main__\' module that this class will proxy.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'mainMod'
op|'='
name|'mainMod'
newline|'\n'
nl|'\n'
DECL|member|__getattr__
dedent|''
name|'def'
name|'__getattr__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'getattr'
op|'('
name|'self'
op|'.'
name|'mainMod'
op|','
name|'key'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'AttributeError'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'initRun'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Warning!  Loading from __main__: %s"'
op|'%'
name|'key'
op|')'
newline|'\n'
name|'return'
name|'styles'
op|'.'
name|'Ephemeral'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|load
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'load'
op|'('
name|'filename'
op|','
name|'style'
op|','
name|'passphrase'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Load an object from a file.\n\n    Deserialize an object from a file. The file can be encrypted.\n\n    @param filename: string\n    @param style: string (one of \'pickle\' or \'source\')\n    @param passphrase: string\n    """'
newline|'\n'
name|'mode'
op|'='
string|"'r'"
newline|'\n'
name|'if'
name|'style'
op|'=='
string|"'source'"
op|':'
newline|'\n'
indent|'        '
name|'from'
name|'twisted'
op|'.'
name|'persisted'
op|'.'
name|'aot'
name|'import'
name|'unjellyFromSource'
name|'as'
name|'_load'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'_load'
op|','
name|'mode'
op|'='
name|'pickle'
op|'.'
name|'load'
op|','
string|"'rb'"
newline|'\n'
dedent|''
name|'if'
name|'passphrase'
op|':'
newline|'\n'
indent|'        '
name|'fp'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
name|'_decrypt'
op|'('
name|'passphrase'
op|','
nl|'\n'
name|'open'
op|'('
name|'filename'
op|','
string|"'rb'"
op|')'
op|'.'
name|'read'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'fp'
op|'='
name|'open'
op|'('
name|'filename'
op|','
name|'mode'
op|')'
newline|'\n'
dedent|''
name|'ee'
op|'='
name|'_EverythingEphemeral'
op|'('
name|'sys'
op|'.'
name|'modules'
op|'['
string|"'__main__'"
op|']'
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'modules'
op|'['
string|"'__main__'"
op|']'
op|'='
name|'ee'
newline|'\n'
name|'ee'
op|'.'
name|'initRun'
op|'='
number|'1'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'value'
op|'='
name|'_load'
op|'('
name|'fp'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
comment|'# restore __main__ if an exception is raised.'
nl|'\n'
indent|'        '
name|'sys'
op|'.'
name|'modules'
op|'['
string|"'__main__'"
op|']'
op|'='
name|'ee'
op|'.'
name|'mainMod'
newline|'\n'
nl|'\n'
dedent|''
name|'styles'
op|'.'
name|'doUpgrade'
op|'('
op|')'
newline|'\n'
name|'ee'
op|'.'
name|'initRun'
op|'='
number|'0'
newline|'\n'
name|'persistable'
op|'='
name|'IPersistable'
op|'('
name|'value'
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'persistable'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'persistable'
op|'.'
name|'setStyle'
op|'('
name|'style'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'value'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|loadValueFromFile
dedent|''
name|'def'
name|'loadValueFromFile'
op|'('
name|'filename'
op|','
name|'variable'
op|','
name|'passphrase'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Load the value of a variable in a Python file.\n\n    Run the contents of the file, after decrypting if C{passphrase} is\n    given, in a namespace and return the result of the variable\n    named C{variable}.\n\n    @param filename: string\n    @param variable: string\n    @param passphrase: string\n    """'
newline|'\n'
name|'if'
name|'passphrase'
op|':'
newline|'\n'
indent|'        '
name|'mode'
op|'='
string|"'rb'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'mode'
op|'='
string|"'r'"
newline|'\n'
dedent|''
name|'fileObj'
op|'='
name|'open'
op|'('
name|'filename'
op|','
name|'mode'
op|')'
newline|'\n'
name|'d'
op|'='
op|'{'
string|"'__file__'"
op|':'
name|'filename'
op|'}'
newline|'\n'
name|'if'
name|'passphrase'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
name|'fileObj'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'data'
op|'='
name|'_decrypt'
op|'('
name|'passphrase'
op|','
name|'data'
op|')'
newline|'\n'
name|'exec'
name|'data'
name|'in'
name|'d'
op|','
name|'d'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'exec'
name|'fileObj'
name|'in'
name|'d'
op|','
name|'d'
newline|'\n'
dedent|''
name|'value'
op|'='
name|'d'
op|'['
name|'variable'
op|']'
newline|'\n'
name|'return'
name|'value'
newline|'\n'
nl|'\n'
DECL|function|guessType
dedent|''
name|'def'
name|'guessType'
op|'('
name|'filename'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'ext'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'splitext'
op|'('
name|'filename'
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'return'
op|'{'
nl|'\n'
string|"'.tac'"
op|':'
string|"'python'"
op|','
nl|'\n'
string|"'.etac'"
op|':'
string|"'python'"
op|','
nl|'\n'
string|"'.py'"
op|':'
string|"'python'"
op|','
nl|'\n'
string|"'.tap'"
op|':'
string|"'pickle'"
op|','
nl|'\n'
string|"'.etap'"
op|':'
string|"'pickle'"
op|','
nl|'\n'
string|"'.tas'"
op|':'
string|"'source'"
op|','
nl|'\n'
string|"'.etas'"
op|':'
string|"'source'"
op|','
nl|'\n'
op|'}'
op|'['
name|'ext'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|__all__
dedent|''
name|'__all__'
op|'='
op|'['
string|"'loadValueFromFile'"
op|','
string|"'load'"
op|','
string|"'Persistent'"
op|','
string|"'Persistant'"
op|','
nl|'\n'
string|"'IPersistable'"
op|','
string|"'guessType'"
op|']'
newline|'\n'
endmarker|''
end_unit
