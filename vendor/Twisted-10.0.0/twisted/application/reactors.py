begin_unit
comment|'# -*- test-case-name: twisted.test.test_application -*-'
nl|'\n'
comment|'# Copyright (c) 2006-2007 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nPlugin-based system for enumerating available reactors and installing one of\nthem.\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'Interface'
op|','
name|'Attribute'
op|','
name|'implements'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'plugin'
name|'import'
name|'IPlugin'
op|','
name|'getPlugins'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'reflect'
name|'import'
name|'namedAny'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|IReactorInstaller
name|'class'
name|'IReactorInstaller'
op|'('
name|'Interface'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Definition of a reactor which can probably be installed.\n    """'
newline|'\n'
name|'shortName'
op|'='
name|'Attribute'
op|'('
string|'"""\n    A brief string giving the user-facing name of this reactor.\n    """'
op|')'
newline|'\n'
nl|'\n'
name|'description'
op|'='
name|'Attribute'
op|'('
string|'"""\n    A longer string giving a user-facing description of this reactor.\n    """'
op|')'
newline|'\n'
nl|'\n'
DECL|member|install
name|'def'
name|'install'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Install this reactor.\n        """'
newline|'\n'
nl|'\n'
comment|'# TODO - A method which provides a best-guess as to whether this reactor'
nl|'\n'
comment|'# can actually be used in the execution environment.'
nl|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|NoSuchReactor
dedent|''
dedent|''
name|'class'
name|'NoSuchReactor'
op|'('
name|'KeyError'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Raised when an attempt is made to install a reactor which cannot be found.\n    """'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Reactor
dedent|''
name|'class'
name|'Reactor'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    @ivar moduleName: The fully-qualified Python name of the module of which\n    the install callable is an attribute.\n    """'
newline|'\n'
name|'implements'
op|'('
name|'IPlugin'
op|','
name|'IReactorInstaller'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'shortName'
op|','
name|'moduleName'
op|','
name|'description'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'shortName'
op|'='
name|'shortName'
newline|'\n'
name|'self'
op|'.'
name|'moduleName'
op|'='
name|'moduleName'
newline|'\n'
name|'self'
op|'.'
name|'description'
op|'='
name|'description'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|install
dedent|''
name|'def'
name|'install'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'namedAny'
op|'('
name|'self'
op|'.'
name|'moduleName'
op|')'
op|'.'
name|'install'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|getReactorTypes
dedent|''
dedent|''
name|'def'
name|'getReactorTypes'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Return an iterator of L{IReactorInstaller} plugins.\n    """'
newline|'\n'
name|'return'
name|'getPlugins'
op|'('
name|'IReactorInstaller'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|installReactor
dedent|''
name|'def'
name|'installReactor'
op|'('
name|'shortName'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Install the reactor with the given C{shortName} attribute.\n\n    @raise NoSuchReactor: If no reactor is found with a matching C{shortName}.\n\n    @raise: anything that the specified reactor can raise when installed.\n    """'
newline|'\n'
name|'for'
name|'installer'
name|'in'
name|'getReactorTypes'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'installer'
op|'.'
name|'shortName'
op|'=='
name|'shortName'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'installer'
op|'.'
name|'install'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'raise'
name|'NoSuchReactor'
op|'('
name|'shortName'
op|')'
newline|'\n'
nl|'\n'
dedent|''
endmarker|''
end_unit
