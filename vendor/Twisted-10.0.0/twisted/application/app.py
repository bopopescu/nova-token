begin_unit
comment|'# -*- test-case-name: twisted.test.test_application,twisted.test.test_twistd -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
name|'import'
name|'sys'
op|','
name|'os'
op|','
name|'pdb'
op|','
name|'getpass'
op|','
name|'traceback'
op|','
name|'signal'
op|','
name|'warnings'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'runtime'
op|','
name|'log'
op|','
name|'usage'
op|','
name|'failure'
op|','
name|'util'
op|','
name|'logfile'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'versions'
name|'import'
name|'Version'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'reflect'
name|'import'
name|'qual'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'deprecate'
name|'import'
name|'deprecated'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'log'
name|'import'
name|'ILogObserver'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'persisted'
name|'import'
name|'sob'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'application'
name|'import'
name|'service'
op|','
name|'reactors'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'defer'
newline|'\n'
name|'from'
name|'twisted'
name|'import'
name|'copyright'
newline|'\n'
nl|'\n'
comment|'# Expose the new implementation of installReactor at the old location.'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'application'
op|'.'
name|'reactors'
name|'import'
name|'installReactor'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'application'
op|'.'
name|'reactors'
name|'import'
name|'NoSuchReactor'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|_BasicProfiler
name|'class'
name|'_BasicProfiler'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    @ivar saveStats: if C{True}, save the stats information instead of the\n        human readable format\n    @type saveStats: C{bool}\n\n    @ivar profileOutput: the name of the file use to print profile data.\n    @type profileOutput: C{str}\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'profileOutput'
op|','
name|'saveStats'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'profileOutput'
op|'='
name|'profileOutput'
newline|'\n'
name|'self'
op|'.'
name|'saveStats'
op|'='
name|'saveStats'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_reportImportError
dedent|''
name|'def'
name|'_reportImportError'
op|'('
name|'self'
op|','
name|'module'
op|','
name|'e'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Helper method to report an import error with a profile module. This\n        has to be explicit because some of these modules are removed by\n        distributions due to them being non-free.\n        """'
newline|'\n'
name|'s'
op|'='
string|'"Failed to import module %s: %s"'
op|'%'
op|'('
name|'module'
op|','
name|'e'
op|')'
newline|'\n'
name|'s'
op|'+='
string|'"""\nThis is most likely caused by your operating system not including\nthe module due to it being non-free. Either do not use the option\n--profile, or install the module; your operating system vendor\nmay provide it in a separate package.\n"""'
newline|'\n'
name|'raise'
name|'SystemExit'
op|'('
name|'s'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|ProfileRunner
dedent|''
dedent|''
name|'class'
name|'ProfileRunner'
op|'('
name|'_BasicProfiler'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Runner for the standard profile module.\n    """'
newline|'\n'
nl|'\n'
DECL|member|run
name|'def'
name|'run'
op|'('
name|'self'
op|','
name|'reactor'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Run reactor under the standard profiler.\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'import'
name|'profile'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_reportImportError'
op|'('
string|'"profile"'
op|','
name|'e'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'p'
op|'='
name|'profile'
op|'.'
name|'Profile'
op|'('
op|')'
newline|'\n'
name|'p'
op|'.'
name|'runcall'
op|'('
name|'reactor'
op|'.'
name|'run'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'saveStats'
op|':'
newline|'\n'
indent|'            '
name|'p'
op|'.'
name|'dump_stats'
op|'('
name|'self'
op|'.'
name|'profileOutput'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'tmp'
op|','
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'sys'
op|'.'
name|'stdout'
op|','
name|'open'
op|'('
name|'self'
op|'.'
name|'profileOutput'
op|','
string|"'a'"
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'p'
op|'.'
name|'print_stats'
op|'('
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'sys'
op|'.'
name|'stdout'
op|','
name|'tmp'
op|'='
name|'tmp'
op|','
name|'sys'
op|'.'
name|'stdout'
newline|'\n'
name|'tmp'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|HotshotRunner
dedent|''
dedent|''
dedent|''
dedent|''
name|'class'
name|'HotshotRunner'
op|'('
name|'_BasicProfiler'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Runner for the hotshot profile module.\n    """'
newline|'\n'
nl|'\n'
DECL|member|run
name|'def'
name|'run'
op|'('
name|'self'
op|','
name|'reactor'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Run reactor under the hotshot profiler.\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'import'
name|'hotshot'
op|'.'
name|'stats'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'ImportError'
op|','
name|'SystemExit'
op|')'
op|','
name|'e'
op|':'
newline|'\n'
comment|'# Certain versions of Debian (and Debian derivatives) raise'
nl|'\n'
comment|'# SystemExit when importing hotshot if the "non-free" profiler'
nl|'\n'
comment|'# module is not installed.  Someone eventually recognized this'
nl|'\n'
comment|'# as a bug and changed the Debian packaged Python to raise'
nl|'\n'
comment|'# ImportError instead.  Handle both exception types here in'
nl|'\n'
comment|'# order to support the versions of Debian which have this'
nl|'\n'
comment|'# behavior.  The bug report which prompted the introduction of'
nl|'\n'
comment|'# this highly undesirable behavior should be available online at'
nl|'\n'
comment|'# <http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=334067>.'
nl|'\n'
comment|'# There seems to be no corresponding bug report which resulted'
nl|'\n'
comment|'# in the behavior being removed. -exarkun'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'_reportImportError'
op|'('
string|'"hotshot"'
op|','
name|'e'
op|')'
newline|'\n'
nl|'\n'
comment|'# this writes stats straight out'
nl|'\n'
dedent|''
name|'p'
op|'='
name|'hotshot'
op|'.'
name|'Profile'
op|'('
name|'self'
op|'.'
name|'profileOutput'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'runcall'
op|'('
name|'reactor'
op|'.'
name|'run'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'saveStats'
op|':'
newline|'\n'
comment|'# stats are automatically written to file, nothing to do'
nl|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'s'
op|'='
name|'hotshot'
op|'.'
name|'stats'
op|'.'
name|'load'
op|'('
name|'self'
op|'.'
name|'profileOutput'
op|')'
newline|'\n'
name|'s'
op|'.'
name|'strip_dirs'
op|'('
op|')'
newline|'\n'
name|'s'
op|'.'
name|'sort_stats'
op|'('
op|'-'
number|'1'
op|')'
newline|'\n'
name|'if'
name|'getattr'
op|'('
name|'s'
op|','
string|"'stream'"
op|','
name|'None'
op|')'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
comment|'# Python 2.5 and above supports a stream attribute'
nl|'\n'
indent|'                '
name|'s'
op|'.'
name|'stream'
op|'='
name|'open'
op|'('
name|'self'
op|'.'
name|'profileOutput'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'s'
op|'.'
name|'print_stats'
op|'('
op|')'
newline|'\n'
name|'s'
op|'.'
name|'stream'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# But we have to use a trick for Python < 2.5'
nl|'\n'
indent|'                '
name|'tmp'
op|','
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'sys'
op|'.'
name|'stdout'
op|','
name|'open'
op|'('
name|'self'
op|'.'
name|'profileOutput'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'s'
op|'.'
name|'print_stats'
op|'('
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                    '
name|'sys'
op|'.'
name|'stdout'
op|','
name|'tmp'
op|'='
name|'tmp'
op|','
name|'sys'
op|'.'
name|'stdout'
newline|'\n'
name|'tmp'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|CProfileRunner
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
name|'class'
name|'CProfileRunner'
op|'('
name|'_BasicProfiler'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Runner for the cProfile module.\n    """'
newline|'\n'
nl|'\n'
DECL|member|run
name|'def'
name|'run'
op|'('
name|'self'
op|','
name|'reactor'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Run reactor under the cProfile profiler.\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'import'
name|'cProfile'
op|','
name|'pstats'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_reportImportError'
op|'('
string|'"cProfile"'
op|','
name|'e'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'p'
op|'='
name|'cProfile'
op|'.'
name|'Profile'
op|'('
op|')'
newline|'\n'
name|'p'
op|'.'
name|'runcall'
op|'('
name|'reactor'
op|'.'
name|'run'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'saveStats'
op|':'
newline|'\n'
indent|'            '
name|'p'
op|'.'
name|'dump_stats'
op|'('
name|'self'
op|'.'
name|'profileOutput'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'stream'
op|'='
name|'open'
op|'('
name|'self'
op|'.'
name|'profileOutput'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'s'
op|'='
name|'pstats'
op|'.'
name|'Stats'
op|'('
name|'p'
op|','
name|'stream'
op|'='
name|'stream'
op|')'
newline|'\n'
name|'s'
op|'.'
name|'strip_dirs'
op|'('
op|')'
newline|'\n'
name|'s'
op|'.'
name|'sort_stats'
op|'('
op|'-'
number|'1'
op|')'
newline|'\n'
name|'s'
op|'.'
name|'print_stats'
op|'('
op|')'
newline|'\n'
name|'stream'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|AppProfiler
dedent|''
dedent|''
dedent|''
name|'class'
name|'AppProfiler'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Class which selects a specific profile runner based on configuration\n    options.\n\n    @ivar profiler: the name of the selected profiler.\n    @type profiler: C{str}\n    """'
newline|'\n'
DECL|variable|profilers
name|'profilers'
op|'='
op|'{'
string|'"profile"'
op|':'
name|'ProfileRunner'
op|','
string|'"hotshot"'
op|':'
name|'HotshotRunner'
op|','
nl|'\n'
string|'"cprofile"'
op|':'
name|'CProfileRunner'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'options'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'saveStats'
op|'='
name|'options'
op|'.'
name|'get'
op|'('
string|'"savestats"'
op|','
name|'False'
op|')'
newline|'\n'
name|'profileOutput'
op|'='
name|'options'
op|'.'
name|'get'
op|'('
string|'"profile"'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'profiler'
op|'='
name|'options'
op|'.'
name|'get'
op|'('
string|'"profiler"'
op|','
string|'"hotshot"'
op|')'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'if'
name|'options'
op|'.'
name|'get'
op|'('
string|'"nothotshot"'
op|','
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'warnings'
op|'.'
name|'warn'
op|'('
string|'"The --nothotshot option is deprecated. Please "'
nl|'\n'
string|'"specify the profiler name using the --profiler "'
nl|'\n'
string|'"option"'
op|','
name|'category'
op|'='
name|'DeprecationWarning'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'profiler'
op|'='
string|'"profile"'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'profiler'
name|'in'
name|'self'
op|'.'
name|'profilers'
op|':'
newline|'\n'
indent|'            '
name|'profiler'
op|'='
name|'self'
op|'.'
name|'profilers'
op|'['
name|'self'
op|'.'
name|'profiler'
op|']'
op|'('
name|'profileOutput'
op|','
name|'saveStats'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'run'
op|'='
name|'profiler'
op|'.'
name|'run'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'SystemExit'
op|'('
string|'"Unsupported profiler name: %s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'profiler'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|runWithProfiler
dedent|''
dedent|''
dedent|''
name|'def'
name|'runWithProfiler'
op|'('
name|'reactor'
op|','
name|'config'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    DEPRECATED in Twisted 8.0.\n\n    Run reactor under standard profiler.\n    """'
newline|'\n'
name|'warnings'
op|'.'
name|'warn'
op|'('
string|'"runWithProfiler is deprecated since Twisted 8.0. "'
nl|'\n'
string|'"Use ProfileRunner instead."'
op|','
name|'DeprecationWarning'
op|','
number|'2'
op|')'
newline|'\n'
name|'item'
op|'='
name|'AppProfiler'
op|'('
name|'config'
op|')'
newline|'\n'
name|'return'
name|'item'
op|'.'
name|'run'
op|'('
name|'reactor'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|runWithHotshot
dedent|''
name|'def'
name|'runWithHotshot'
op|'('
name|'reactor'
op|','
name|'config'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    DEPRECATED in Twisted 8.0.\n\n    Run reactor under hotshot profiler.\n    """'
newline|'\n'
name|'warnings'
op|'.'
name|'warn'
op|'('
string|'"runWithHotshot is deprecated since Twisted 8.0. "'
nl|'\n'
string|'"Use HotshotRunner instead."'
op|','
name|'DeprecationWarning'
op|','
number|'2'
op|')'
newline|'\n'
name|'item'
op|'='
name|'AppProfiler'
op|'('
name|'config'
op|')'
newline|'\n'
name|'return'
name|'item'
op|'.'
name|'run'
op|'('
name|'reactor'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|AppLogger
dedent|''
name|'class'
name|'AppLogger'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Class managing logging faciliy of the application.\n\n    @ivar _logfilename: The name of the file to which to log, if other than the\n        default.\n    @type _logfilename: C{str}\n\n    @ivar _observer: log observer added at C{start} and removed at C{stop}.\n    @type _observer: C{callable}\n    """'
newline|'\n'
DECL|variable|_observer
name|'_observer'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'options'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_logfilename'
op|'='
name|'options'
op|'.'
name|'get'
op|'('
string|'"logfile"'
op|','
string|'""'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|start
dedent|''
name|'def'
name|'start'
op|'('
name|'self'
op|','
name|'application'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Initialize the logging system.\n\n        If an L{ILogObserver} component has been set on C{application}, then\n        it will be used as the log observer.  Otherwise a log observer will be\n        created based on the command-line options.\n\n        @param application: The application on which to check for an\n            L{ILogObserver}.\n        """'
newline|'\n'
name|'observer'
op|'='
name|'application'
op|'.'
name|'getComponent'
op|'('
name|'ILogObserver'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'observer'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'observer'
op|'='
name|'self'
op|'.'
name|'_getLogObserver'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_observer'
op|'='
name|'observer'
newline|'\n'
name|'log'
op|'.'
name|'startLoggingWithObserver'
op|'('
name|'self'
op|'.'
name|'_observer'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_initialLog'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_initialLog
dedent|''
name|'def'
name|'_initialLog'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Print twistd start log message.\n        """'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'"twistd %s (%s %s) starting up."'
op|'%'
op|'('
name|'copyright'
op|'.'
name|'version'
op|','
nl|'\n'
name|'sys'
op|'.'
name|'executable'
op|','
nl|'\n'
name|'runtime'
op|'.'
name|'shortPythonVersion'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|"'reactor class: %s.'"
op|'%'
op|'('
name|'qual'
op|'('
name|'reactor'
op|'.'
name|'__class__'
op|')'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_getLogObserver
dedent|''
name|'def'
name|'_getLogObserver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create a log observer to be added to the logging system before running\n        this application.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_logfilename'
op|'=='
string|"'-'"
name|'or'
name|'not'
name|'self'
op|'.'
name|'_logfilename'
op|':'
newline|'\n'
indent|'            '
name|'logFile'
op|'='
name|'sys'
op|'.'
name|'stdout'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'logFile'
op|'='
name|'logfile'
op|'.'
name|'LogFile'
op|'.'
name|'fromFullPath'
op|'('
name|'self'
op|'.'
name|'_logfilename'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'log'
op|'.'
name|'FileLogObserver'
op|'('
name|'logFile'
op|')'
op|'.'
name|'emit'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|stop
dedent|''
name|'def'
name|'stop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Print twistd stop log message.\n        """'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Server Shut Down."'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_observer'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'removeObserver'
op|'('
name|'self'
op|'.'
name|'_observer'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_observer'
op|'='
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|fixPdb
dedent|''
dedent|''
dedent|''
name|'def'
name|'fixPdb'
op|'('
op|')'
op|':'
newline|'\n'
DECL|function|do_stop
indent|'    '
name|'def'
name|'do_stop'
op|'('
name|'self'
op|','
name|'arg'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'clear_all_breaks'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'set_continue'
op|'('
op|')'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
newline|'\n'
name|'reactor'
op|'.'
name|'callLater'
op|'('
number|'0'
op|','
name|'reactor'
op|'.'
name|'stop'
op|')'
newline|'\n'
name|'return'
number|'1'
newline|'\n'
nl|'\n'
DECL|function|help_stop
dedent|''
name|'def'
name|'help_stop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|'"""stop - Continue execution, then cleanly shutdown the twisted reactor."""'
newline|'\n'
nl|'\n'
DECL|function|set_quit
dedent|''
name|'def'
name|'set_quit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'os'
op|'.'
name|'_exit'
op|'('
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'pdb'
op|'.'
name|'Pdb'
op|'.'
name|'set_quit'
op|'='
name|'set_quit'
newline|'\n'
name|'pdb'
op|'.'
name|'Pdb'
op|'.'
name|'do_stop'
op|'='
name|'do_stop'
newline|'\n'
name|'pdb'
op|'.'
name|'Pdb'
op|'.'
name|'help_stop'
op|'='
name|'help_stop'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|runReactorWithLogging
dedent|''
name|'def'
name|'runReactorWithLogging'
op|'('
name|'config'
op|','
name|'oldstdout'
op|','
name|'oldstderr'
op|','
name|'profiler'
op|'='
name|'None'
op|','
name|'reactor'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Start the reactor, using profiling if specified by the configuration, and\n    log any error happening in the process.\n\n    @param config: configuration of the twistd application.\n    @type config: L{ServerOptions}\n\n    @param oldstdout: initial value of C{sys.stdout}.\n    @type oldstdout: C{file}\n\n    @param oldstderr: initial value of C{sys.stderr}.\n    @type oldstderr: C{file}\n\n    @param profiler: object used to run the reactor with profiling.\n    @type profiler: L{AppProfiler}\n\n    @param reactor: The reactor to use.  If C{None}, the global reactor will\n        be used.\n    """'
newline|'\n'
name|'if'
name|'reactor'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'config'
op|'['
string|"'profile'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'profiler'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'profiler'
op|'.'
name|'run'
op|'('
name|'reactor'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# Backward compatible code'
nl|'\n'
indent|'                '
name|'if'
name|'not'
name|'config'
op|'['
string|"'nothotshot'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'runWithHotshot'
op|'('
name|'reactor'
op|','
name|'config'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'runWithProfiler'
op|'('
name|'reactor'
op|','
name|'config'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'elif'
name|'config'
op|'['
string|"'debug'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'oldstdout'
newline|'\n'
name|'sys'
op|'.'
name|'stderr'
op|'='
name|'oldstderr'
newline|'\n'
name|'if'
name|'runtime'
op|'.'
name|'platformType'
op|'=='
string|"'posix'"
op|':'
newline|'\n'
indent|'                '
name|'signal'
op|'.'
name|'signal'
op|'('
name|'signal'
op|'.'
name|'SIGUSR2'
op|','
name|'lambda'
op|'*'
name|'args'
op|':'
name|'pdb'
op|'.'
name|'set_trace'
op|'('
op|')'
op|')'
newline|'\n'
name|'signal'
op|'.'
name|'signal'
op|'('
name|'signal'
op|'.'
name|'SIGINT'
op|','
name|'lambda'
op|'*'
name|'args'
op|':'
name|'pdb'
op|'.'
name|'set_trace'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'fixPdb'
op|'('
op|')'
newline|'\n'
name|'pdb'
op|'.'
name|'runcall'
op|'('
name|'reactor'
op|'.'
name|'run'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'reactor'
op|'.'
name|'run'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'config'
op|'['
string|"'nodaemon'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'file'
op|'='
name|'oldstdout'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'file'
op|'='
name|'open'
op|'('
string|'"TWISTD-CRASH.log"'
op|','
string|"'a'"
op|')'
newline|'\n'
dedent|''
name|'traceback'
op|'.'
name|'print_exc'
op|'('
name|'file'
op|'='
name|'file'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|getPassphrase
dedent|''
dedent|''
name|'def'
name|'getPassphrase'
op|'('
name|'needed'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'needed'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'getpass'
op|'.'
name|'getpass'
op|'('
string|"'Passphrase: '"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|getSavePassphrase
dedent|''
dedent|''
name|'def'
name|'getSavePassphrase'
op|'('
name|'needed'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'needed'
op|':'
newline|'\n'
indent|'        '
name|'passphrase'
op|'='
name|'util'
op|'.'
name|'getPassword'
op|'('
string|'"Encryption passphrase: "'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|ApplicationRunner
dedent|''
dedent|''
name|'class'
name|'ApplicationRunner'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    An object which helps running an application based on a config object.\n\n    Subclass me and implement preApplication and postApplication\n    methods. postApplication generally will want to run the reactor\n    after starting the application.\n\n    @ivar config: The config object, which provides a dict-like interface.\n\n    @ivar application: Available in postApplication, but not\n       preApplication. This is the application object.\n\n    @ivar profilerFactory: Factory for creating a profiler object, able to\n        profile the application if options are set accordingly.\n\n    @ivar profiler: Instance provided by C{profilerFactory}.\n\n    @ivar loggerFactory: Factory for creating object responsible for logging.\n\n    @ivar logger: Instance provided by C{loggerFactory}.\n    """'
newline|'\n'
DECL|variable|profilerFactory
name|'profilerFactory'
op|'='
name|'AppProfiler'
newline|'\n'
DECL|variable|loggerFactory
name|'loggerFactory'
op|'='
name|'AppLogger'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'config'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'config'
op|'='
name|'config'
newline|'\n'
name|'self'
op|'.'
name|'profiler'
op|'='
name|'self'
op|'.'
name|'profilerFactory'
op|'('
name|'config'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'='
name|'self'
op|'.'
name|'loggerFactory'
op|'('
name|'config'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|run
dedent|''
name|'def'
name|'run'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Run the application.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'preApplication'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'application'
op|'='
name|'self'
op|'.'
name|'createOrGetApplication'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
name|'getLogObserverLegacy'
op|'='
name|'getattr'
op|'('
name|'self'
op|','
string|"'getLogObserver'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'getLogObserverLegacy'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'warnings'
op|'.'
name|'warn'
op|'('
string|'"Specifying a log observer with getLogObserver is "'
nl|'\n'
string|'"deprecated. Please use a loggerFactory instead."'
op|','
nl|'\n'
name|'category'
op|'='
name|'DeprecationWarning'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'startLogging'
op|'('
name|'self'
op|'.'
name|'getLogObserver'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'start'
op|'('
name|'self'
op|'.'
name|'application'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'postApplication'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|startLogging
dedent|''
name|'def'
name|'startLogging'
op|'('
name|'self'
op|','
name|'observer'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Initialize the logging system. DEPRECATED.\n\n        @param observer: The observer to add to the logging system.\n        """'
newline|'\n'
name|'log'
op|'.'
name|'startLoggingWithObserver'
op|'('
name|'observer'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'_initialLog'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|startReactor
dedent|''
name|'def'
name|'startReactor'
op|'('
name|'self'
op|','
name|'reactor'
op|','
name|'oldstdout'
op|','
name|'oldstderr'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Run the reactor with the given configuration.  Subclasses should\n        probably call this from C{postApplication}.\n\n        @see: L{runReactorWithLogging}\n        """'
newline|'\n'
name|'runReactorWithLogging'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'config'
op|','
name|'oldstdout'
op|','
name|'oldstderr'
op|','
name|'self'
op|'.'
name|'profiler'
op|','
name|'reactor'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|preApplication
dedent|''
name|'def'
name|'preApplication'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Override in subclass.\n\n        This should set up any state necessary before loading and\n        running the Application.\n        """'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|postApplication
dedent|''
name|'def'
name|'postApplication'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Override in subclass.\n\n        This will be called after the application has been loaded (so\n        the C{application} attribute will be set). Generally this\n        should start the application and run the reactor.\n        """'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|createOrGetApplication
dedent|''
name|'def'
name|'createOrGetApplication'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create or load an Application based on the parameters found in the\n        given L{ServerOptions} instance.\n\n        If a subcommand was used, the L{service.IServiceMaker} that it\n        represents will be used to construct a service to be added to\n        a newly-created Application.\n\n        Otherwise, an application will be loaded based on parameters in\n        the config.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'config'
op|'.'
name|'subCommand'
op|':'
newline|'\n'
comment|"# If a subcommand was given, it's our responsibility to create"
nl|'\n'
comment|'# the application, instead of load it from a file.'
nl|'\n'
nl|'\n'
comment|'# loadedPlugins is set up by the ServerOptions.subCommands'
nl|'\n'
comment|'# property, which is iterated somewhere in the bowels of'
nl|'\n'
comment|'# usage.Options.'
nl|'\n'
indent|'            '
name|'plg'
op|'='
name|'self'
op|'.'
name|'config'
op|'.'
name|'loadedPlugins'
op|'['
name|'self'
op|'.'
name|'config'
op|'.'
name|'subCommand'
op|']'
newline|'\n'
name|'ser'
op|'='
name|'plg'
op|'.'
name|'makeService'
op|'('
name|'self'
op|'.'
name|'config'
op|'.'
name|'subOptions'
op|')'
newline|'\n'
name|'application'
op|'='
name|'service'
op|'.'
name|'Application'
op|'('
name|'plg'
op|'.'
name|'tapname'
op|')'
newline|'\n'
name|'ser'
op|'.'
name|'setServiceParent'
op|'('
name|'application'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'passphrase'
op|'='
name|'getPassphrase'
op|'('
name|'self'
op|'.'
name|'config'
op|'['
string|"'encrypted'"
op|']'
op|')'
newline|'\n'
name|'application'
op|'='
name|'getApplication'
op|'('
name|'self'
op|'.'
name|'config'
op|','
name|'passphrase'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'application'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|getApplication
dedent|''
dedent|''
name|'def'
name|'getApplication'
op|'('
name|'config'
op|','
name|'passphrase'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'s'
op|'='
op|'['
op|'('
name|'config'
op|'['
name|'t'
op|']'
op|','
name|'t'
op|')'
nl|'\n'
name|'for'
name|'t'
name|'in'
op|'['
string|"'python'"
op|','
string|"'source'"
op|','
string|"'file'"
op|']'
name|'if'
name|'config'
op|'['
name|'t'
op|']'
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'filename'
op|','
name|'style'
op|'='
name|'s'
op|'['
number|'0'
op|']'
op|','
op|'{'
string|"'file'"
op|':'
string|"'pickle'"
op|'}'
op|'.'
name|'get'
op|'('
name|'s'
op|'['
number|'1'
op|']'
op|','
name|'s'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Loading %s..."'
op|'%'
name|'filename'
op|')'
newline|'\n'
name|'application'
op|'='
name|'service'
op|'.'
name|'loadApplication'
op|'('
name|'filename'
op|','
name|'style'
op|','
name|'passphrase'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Loaded."'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'e'
op|':'
newline|'\n'
indent|'        '
name|'s'
op|'='
string|'"Failed to load application: %s"'
op|'%'
name|'e'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'e'
op|','
name|'KeyError'
op|')'
name|'and'
name|'e'
op|'.'
name|'args'
op|'['
number|'0'
op|']'
op|'=='
string|'"application"'
op|':'
newline|'\n'
indent|'            '
name|'s'
op|'+='
string|'"""\nCould not find \'application\' in the file. To use \'twistd -y\', your .tac\nfile must create a suitable object (e.g., by calling service.Application())\nand store it in a variable named \'application\'. twistd loads your .tac file\nand scans the global variables for one of this name.\n\nPlease read the \'Using Application\' HOWTO for details.\n"""'
newline|'\n'
dedent|''
name|'traceback'
op|'.'
name|'print_exc'
op|'('
name|'file'
op|'='
name|'log'
op|'.'
name|'logfile'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
name|'s'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'deferr'
op|'('
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'exit'
op|'('
string|"'\\n'"
op|'+'
name|'s'
op|'+'
string|"'\\n'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'application'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|reportProfile
dedent|''
name|'def'
name|'reportProfile'
op|'('
name|'report_profile'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    DEPRECATED since Twisted 8.0. This does nothing.\n    """'
newline|'\n'
name|'warnings'
op|'.'
name|'warn'
op|'('
string|'"reportProfile is deprecated and a no-op since Twisted 8.0."'
op|','
nl|'\n'
name|'category'
op|'='
name|'DeprecationWarning'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|_reactorZshAction
dedent|''
name|'def'
name|'_reactorZshAction'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
string|'"(%s)"'
op|'%'
string|'" "'
op|'.'
name|'join'
op|'('
op|'['
name|'r'
op|'.'
name|'shortName'
name|'for'
name|'r'
name|'in'
name|'reactors'
op|'.'
name|'getReactorTypes'
op|'('
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|class|ReactorSelectionMixin
dedent|''
name|'class'
name|'ReactorSelectionMixin'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Provides options for selecting a reactor to install.\n    """'
newline|'\n'
DECL|variable|zsh_actions
name|'zsh_actions'
op|'='
op|'{'
string|'"reactor"'
op|':'
name|'_reactorZshAction'
op|'}'
newline|'\n'
DECL|variable|messageOutput
name|'messageOutput'
op|'='
name|'sys'
op|'.'
name|'stdout'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|opt_help_reactors
name|'def'
name|'opt_help_reactors'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Display a list of possibly available reactor names.\n        """'
newline|'\n'
name|'for'
name|'r'
name|'in'
name|'reactors'
op|'.'
name|'getReactorTypes'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'messageOutput'
op|'.'
name|'write'
op|'('
string|"'    %-4s\\t%s\\n'"
op|'%'
nl|'\n'
op|'('
name|'r'
op|'.'
name|'shortName'
op|','
name|'r'
op|'.'
name|'description'
op|')'
op|')'
newline|'\n'
dedent|''
name|'raise'
name|'SystemExit'
op|'('
number|'0'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|opt_reactor
dedent|''
name|'def'
name|'opt_reactor'
op|'('
name|'self'
op|','
name|'shortName'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Which reactor to use (see --help-reactors for a list of possibilities)\n        """'
newline|'\n'
comment|'# Actually actually actually install the reactor right at this very'
nl|'\n'
comment|'# moment, before any other code (for example, a sub-command plugin)'
nl|'\n'
comment|'# runs and accidentally imports and installs the default reactor.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# This could probably be improved somehow.'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'installReactor'
op|'('
name|'shortName'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'NoSuchReactor'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
op|'('
string|'"The specified reactor does not exist: \'%s\'.\\n"'
nl|'\n'
string|'"See the list of available reactors with "'
nl|'\n'
string|'"--help-reactors"'
op|'%'
op|'('
name|'shortName'
op|','
op|')'
op|')'
newline|'\n'
name|'raise'
name|'usage'
op|'.'
name|'UsageError'
op|'('
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
op|'('
string|'"The specified reactor cannot be used, failed with error: "'
nl|'\n'
string|'"%s.\\nSee the list of available reactors with "'
nl|'\n'
string|'"--help-reactors"'
op|'%'
op|'('
name|'e'
op|','
op|')'
op|')'
newline|'\n'
name|'raise'
name|'usage'
op|'.'
name|'UsageError'
op|'('
name|'msg'
op|')'
newline|'\n'
DECL|variable|opt_r
dedent|''
dedent|''
name|'opt_r'
op|'='
name|'opt_reactor'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerOptions
dedent|''
name|'class'
name|'ServerOptions'
op|'('
name|'usage'
op|'.'
name|'Options'
op|','
name|'ReactorSelectionMixin'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|longdesc
indent|'    '
name|'longdesc'
op|'='
op|'('
string|'"twistd reads a twisted.application.service.Application out "'
nl|'\n'
string|'"of a file and runs it."'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|optFlags
name|'optFlags'
op|'='
op|'['
op|'['
string|"'savestats'"
op|','
name|'None'
op|','
nl|'\n'
string|'"save the Stats object rather than the text output of "'
nl|'\n'
string|'"the profiler."'
op|']'
op|','
nl|'\n'
op|'['
string|"'no_save'"
op|','
string|"'o'"
op|','
string|'"do not save state on shutdown"'
op|']'
op|','
nl|'\n'
op|'['
string|"'encrypted'"
op|','
string|"'e'"
op|','
nl|'\n'
string|'"The specified tap/aos file is encrypted."'
op|']'
op|','
nl|'\n'
op|'['
string|"'nothotshot'"
op|','
name|'None'
op|','
nl|'\n'
string|'"DEPRECATED. Don\'t use the hotshot profiler even if "'
nl|'\n'
string|'"it\'s available."'
op|']'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|optParameters
name|'optParameters'
op|'='
op|'['
op|'['
string|"'logfile'"
op|','
string|"'l'"
op|','
name|'None'
op|','
nl|'\n'
string|'"log to a specified file, - for stdout"'
op|']'
op|','
nl|'\n'
op|'['
string|"'profile'"
op|','
string|"'p'"
op|','
name|'None'
op|','
nl|'\n'
string|'"Run in profile mode, dumping results to specified file"'
op|']'
op|','
nl|'\n'
op|'['
string|"'profiler'"
op|','
name|'None'
op|','
string|'"hotshot"'
op|','
nl|'\n'
string|'"Name of the profiler to use (%s)."'
op|'%'
nl|'\n'
string|'", "'
op|'.'
name|'join'
op|'('
name|'AppProfiler'
op|'.'
name|'profilers'
op|')'
op|']'
op|','
nl|'\n'
op|'['
string|"'file'"
op|','
string|"'f'"
op|','
string|"'twistd.tap'"
op|','
nl|'\n'
string|'"read the given .tap file"'
op|']'
op|','
nl|'\n'
op|'['
string|"'python'"
op|','
string|"'y'"
op|','
name|'None'
op|','
nl|'\n'
string|'"read an application from within a Python file "'
nl|'\n'
string|'"(implies -o)"'
op|']'
op|','
nl|'\n'
op|'['
string|"'source'"
op|','
string|"'s'"
op|','
name|'None'
op|','
nl|'\n'
string|'"Read an application from a .tas file (AOT format)."'
op|']'
op|','
nl|'\n'
op|'['
string|"'rundir'"
op|','
string|"'d'"
op|','
string|"'.'"
op|','
nl|'\n'
string|"'Change to a supplied directory before running'"
op|']'
op|','
nl|'\n'
op|'['
string|"'report-profile'"
op|','
name|'None'
op|','
name|'None'
op|','
nl|'\n'
string|"'E-mail address to use when reporting dynamic execution '"
nl|'\n'
string|"'profiler stats.  This should not be combined with '"
nl|'\n'
string|"'other profiling options.  This will only take effect '"
nl|'\n'
string|"'if the application to be run has an application '"
nl|'\n'
string|"'name.'"
op|']'
op|']'
newline|'\n'
nl|'\n'
comment|'#zsh_altArgDescr = {"foo":"use this description for foo instead"}'
nl|'\n'
comment|'#zsh_multiUse = ["foo", "bar"]'
nl|'\n'
DECL|variable|zsh_mutuallyExclusive
name|'zsh_mutuallyExclusive'
op|'='
op|'['
op|'('
string|'"file"'
op|','
string|'"python"'
op|','
string|'"source"'
op|')'
op|']'
newline|'\n'
DECL|variable|zsh_actions
name|'zsh_actions'
op|'='
op|'{'
string|'"file"'
op|':'
string|'\'_files -g "*.tap"\''
op|','
nl|'\n'
string|'"python"'
op|':'
string|'\'_files -g "*.(tac|py)"\''
op|','
nl|'\n'
string|'"source"'
op|':'
string|'\'_files -g "*.tas"\''
op|','
nl|'\n'
string|'"rundir"'
op|':'
string|'"_dirs"'
op|'}'
newline|'\n'
comment|'#zsh_actionDescr = {"logfile":"log file name", "random":"random seed"}'
nl|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'['
string|"'debug'"
op|']'
op|'='
name|'False'
newline|'\n'
name|'usage'
op|'.'
name|'Options'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
newline|'\n'
nl|'\n'
DECL|member|opt_debug
dedent|''
name|'def'
name|'opt_debug'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        run the application in the Python Debugger (implies nodaemon),\n        sending SIGUSR2 will drop into debugger\n        """'
newline|'\n'
name|'defer'
op|'.'
name|'setDebugging'
op|'('
name|'True'
op|')'
newline|'\n'
name|'failure'
op|'.'
name|'startDebugMode'
op|'('
op|')'
newline|'\n'
name|'self'
op|'['
string|"'debug'"
op|']'
op|'='
name|'True'
newline|'\n'
DECL|variable|opt_b
dedent|''
name|'opt_b'
op|'='
name|'opt_debug'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|opt_spew
name|'def'
name|'opt_spew'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Print an insanely verbose log of everything that happens.\n        Useful when debugging freezes or locks in complex code."""'
newline|'\n'
name|'sys'
op|'.'
name|'settrace'
op|'('
name|'util'
op|'.'
name|'spewer'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'import'
name|'threading'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'threading'
op|'.'
name|'settrace'
op|'('
name|'util'
op|'.'
name|'spewer'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|opt_report_profile
dedent|''
name|'def'
name|'opt_report_profile'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        DEPRECATED.\n\n        Manage --report-profile option, which does nothing currently.\n        """'
newline|'\n'
name|'warnings'
op|'.'
name|'warn'
op|'('
string|'"--report-profile option is deprecated and a no-op "'
nl|'\n'
string|'"since Twisted 8.0."'
op|','
name|'category'
op|'='
name|'DeprecationWarning'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|parseOptions
dedent|''
name|'def'
name|'parseOptions'
op|'('
name|'self'
op|','
name|'options'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'options'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'options'
op|'='
name|'sys'
op|'.'
name|'argv'
op|'['
number|'1'
op|':'
op|']'
name|'or'
op|'['
string|'"--help"'
op|']'
newline|'\n'
dedent|''
name|'usage'
op|'.'
name|'Options'
op|'.'
name|'parseOptions'
op|'('
name|'self'
op|','
name|'options'
op|')'
newline|'\n'
nl|'\n'
DECL|member|postOptions
dedent|''
name|'def'
name|'postOptions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'subCommand'
name|'or'
name|'self'
op|'['
string|"'python'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'['
string|"'no_save'"
op|']'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|subCommands
dedent|''
dedent|''
name|'def'
name|'subCommands'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'from'
name|'twisted'
name|'import'
name|'plugin'
newline|'\n'
name|'plugins'
op|'='
name|'plugin'
op|'.'
name|'getPlugins'
op|'('
name|'service'
op|'.'
name|'IServiceMaker'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'loadedPlugins'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'plug'
name|'in'
name|'plugins'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'loadedPlugins'
op|'['
name|'plug'
op|'.'
name|'tapname'
op|']'
op|'='
name|'plug'
newline|'\n'
name|'yield'
op|'('
name|'plug'
op|'.'
name|'tapname'
op|','
name|'None'
op|','
name|'lambda'
op|':'
name|'plug'
op|'.'
name|'options'
op|'('
op|')'
op|','
name|'plug'
op|'.'
name|'description'
op|')'
newline|'\n'
DECL|variable|subCommands
dedent|''
dedent|''
name|'subCommands'
op|'='
name|'property'
op|'('
name|'subCommands'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|run
dedent|''
name|'def'
name|'run'
op|'('
name|'runApp'
op|','
name|'ServerOptions'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'config'
op|'='
name|'ServerOptions'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'config'
op|'.'
name|'parseOptions'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'usage'
op|'.'
name|'error'
op|','
name|'ue'
op|':'
newline|'\n'
indent|'        '
name|'print'
name|'config'
newline|'\n'
name|'print'
string|'"%s: %s"'
op|'%'
op|'('
name|'sys'
op|'.'
name|'argv'
op|'['
number|'0'
op|']'
op|','
name|'ue'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'runApp'
op|'('
name|'config'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|initialLog
dedent|''
dedent|''
name|'def'
name|'initialLog'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'AppLogger'
op|'('
op|'{'
op|'}'
op|')'
op|'.'
name|'_initialLog'
op|'('
op|')'
newline|'\n'
DECL|variable|initialLog
dedent|''
name|'initialLog'
op|'='
name|'deprecated'
op|'('
name|'Version'
op|'('
string|'"Twisted"'
op|','
number|'8'
op|','
number|'2'
op|','
number|'0'
op|')'
op|')'
op|'('
name|'initialLog'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|convertStyle
name|'def'
name|'convertStyle'
op|'('
name|'filein'
op|','
name|'typein'
op|','
name|'passphrase'
op|','
name|'fileout'
op|','
name|'typeout'
op|','
name|'encrypt'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'application'
op|'='
name|'service'
op|'.'
name|'loadApplication'
op|'('
name|'filein'
op|','
name|'typein'
op|','
name|'passphrase'
op|')'
newline|'\n'
name|'sob'
op|'.'
name|'IPersistable'
op|'('
name|'application'
op|')'
op|'.'
name|'setStyle'
op|'('
name|'typeout'
op|')'
newline|'\n'
name|'passphrase'
op|'='
name|'getSavePassphrase'
op|'('
name|'encrypt'
op|')'
newline|'\n'
name|'if'
name|'passphrase'
op|':'
newline|'\n'
indent|'        '
name|'fileout'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'sob'
op|'.'
name|'IPersistable'
op|'('
name|'application'
op|')'
op|'.'
name|'save'
op|'('
name|'filename'
op|'='
name|'fileout'
op|','
name|'passphrase'
op|'='
name|'passphrase'
op|')'
newline|'\n'
nl|'\n'
DECL|function|startApplication
dedent|''
name|'def'
name|'startApplication'
op|'('
name|'application'
op|','
name|'save'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
newline|'\n'
name|'service'
op|'.'
name|'IService'
op|'('
name|'application'
op|')'
op|'.'
name|'startService'
op|'('
op|')'
newline|'\n'
name|'if'
name|'save'
op|':'
newline|'\n'
indent|'         '
name|'p'
op|'='
name|'sob'
op|'.'
name|'IPersistable'
op|'('
name|'application'
op|')'
newline|'\n'
name|'reactor'
op|'.'
name|'addSystemEventTrigger'
op|'('
string|"'after'"
op|','
string|"'shutdown'"
op|','
name|'p'
op|'.'
name|'save'
op|','
string|"'shutdown'"
op|')'
newline|'\n'
dedent|''
name|'reactor'
op|'.'
name|'addSystemEventTrigger'
op|'('
string|"'before'"
op|','
string|"'shutdown'"
op|','
nl|'\n'
name|'service'
op|'.'
name|'IService'
op|'('
name|'application'
op|')'
op|'.'
name|'stopService'
op|')'
newline|'\n'
nl|'\n'
DECL|function|getLogFile
dedent|''
name|'def'
name|'getLogFile'
op|'('
name|'logfilename'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Build a log file from the full path.\n    """'
newline|'\n'
name|'warnings'
op|'.'
name|'warn'
op|'('
nl|'\n'
string|'"app.getLogFile is deprecated. Use "'
nl|'\n'
string|'"twisted.python.logfile.LogFile.fromFullPath instead"'
op|','
nl|'\n'
name|'DeprecationWarning'
op|','
name|'stacklevel'
op|'='
number|'2'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'logfile'
op|'.'
name|'LogFile'
op|'.'
name|'fromFullPath'
op|'('
name|'logfilename'
op|')'
newline|'\n'
nl|'\n'
dedent|''
endmarker|''
end_unit
