begin_unit
comment|'# Copyright (c) 2008-2009 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""\nTests for L{twisted.lore.man2lore}.\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'StringIO'
name|'import'
name|'StringIO'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
op|'.'
name|'unittest'
name|'import'
name|'TestCase'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'lore'
op|'.'
name|'man2lore'
name|'import'
name|'ManConverter'
newline|'\n'
nl|'\n'
nl|'\n'
name|'_TRANSITIONAL_XHTML_DTD'
op|'='
op|'('
string|'"""\\\n<?xml version="1.0"?>\n<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"\n    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\n"""'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ManConverterTestCase
name|'class'
name|'ManConverterTestCase'
op|'('
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Tests for L{ManConverter}.\n    """'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Build instance variables useful for tests.\n\n        @ivar converter: a L{ManConverter} to be used during tests.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'converter'
op|'='
name|'ManConverter'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|assertConvert
dedent|''
name|'def'
name|'assertConvert'
op|'('
name|'self'
op|','
name|'inputLines'
op|','
name|'expectedOutput'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Helper method to check conversion from a man page to a Lore output.\n\n        @param inputLines: lines of the manpages.\n        @type inputLines: C{list}\n\n        @param expectedOutput: expected Lore content.\n        @type expectedOutput: C{str}\n        """'
newline|'\n'
name|'inputFile'
op|'='
name|'StringIO'
op|'('
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'inputLines'
op|':'
newline|'\n'
indent|'            '
name|'inputFile'
op|'.'
name|'write'
op|'('
name|'line'
op|'+'
string|"'\\n'"
op|')'
newline|'\n'
dedent|''
name|'inputFile'
op|'.'
name|'seek'
op|'('
number|'0'
op|')'
newline|'\n'
name|'outputFile'
op|'='
name|'StringIO'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'converter'
op|'.'
name|'convert'
op|'('
name|'inputFile'
op|','
name|'outputFile'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'outputFile'
op|'.'
name|'getvalue'
op|'('
op|')'
op|','
name|'_TRANSITIONAL_XHTML_DTD'
op|'+'
name|'expectedOutput'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_convert
dedent|''
name|'def'
name|'test_convert'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test convert on a minimal example.\n        """'
newline|'\n'
name|'inputLines'
op|'='
op|'['
string|'\'.TH BAR "1" "Oct 2007" "" ""\''
op|','
string|'"Foo\\n"'
op|']'
newline|'\n'
name|'output'
op|'='
op|'('
string|'"<html><head>\\n<title>BAR.1</title></head>\\n<body>\\n\\n"'
nl|'\n'
string|'"<h1>BAR.1</h1>\\n\\n<p>Foo\\n\\n</p>\\n\\n</body>\\n</html>\\n"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertConvert'
op|'('
name|'inputLines'
op|','
name|'output'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_TP
dedent|''
name|'def'
name|'test_TP'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test C{TP} parsing.\n        """'
newline|'\n'
name|'inputLines'
op|'='
op|'['
string|'\'.TH BAR "1" "Oct 2007" "" ""\''
op|','
nl|'\n'
string|'".SH HEADER"'
op|','
nl|'\n'
string|'".TP"'
op|','
nl|'\n'
string|'"\\\\fB-o\\\\fR, \\\\fB--option\\\\fR"'
op|','
nl|'\n'
string|'"An option"'
op|']'
newline|'\n'
name|'output'
op|'='
op|'('
string|'"<html><head>\\n<title>BAR.1</title></head>\\n<body>\\n\\n"'
nl|'\n'
string|'"<h1>BAR.1</h1>\\n\\n<h2>HEADER</h2>\\n\\n<dl><dt>"'
nl|'\n'
string|'"<strong>-o</strong>, <strong>--option</strong>\\n</dt>"'
nl|'\n'
string|'"<dd>An option\\n</dd>\\n\\n</dl>\\n\\n</body>\\n</html>\\n"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertConvert'
op|'('
name|'inputLines'
op|','
name|'output'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_TPMultipleOptions
dedent|''
name|'def'
name|'test_TPMultipleOptions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Try to parse multiple C{TP} fields.\n        """'
newline|'\n'
name|'inputLines'
op|'='
op|'['
string|'\'.TH BAR "1" "Oct 2007" "" ""\''
op|','
nl|'\n'
string|'".SH HEADER"'
op|','
nl|'\n'
string|'".TP"'
op|','
nl|'\n'
string|'"\\\\fB-o\\\\fR, \\\\fB--option\\\\fR"'
op|','
nl|'\n'
string|'"An option"'
op|','
nl|'\n'
string|'".TP"'
op|','
nl|'\n'
string|'"\\\\fB-n\\\\fR, \\\\fB--another\\\\fR"'
op|','
nl|'\n'
string|'"Another option"'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'output'
op|'='
op|'('
string|'"<html><head>\\n<title>BAR.1</title></head>\\n<body>\\n\\n"'
nl|'\n'
string|'"<h1>BAR.1</h1>\\n\\n<h2>HEADER</h2>\\n\\n<dl><dt>"'
nl|'\n'
string|'"<strong>-o</strong>, <strong>--option</strong>\\n</dt>"'
nl|'\n'
string|'"<dd>An option\\n</dd>\\n\\n<dt>"'
nl|'\n'
string|'"<strong>-n</strong>, <strong>--another</strong>\\n</dt>"'
nl|'\n'
string|'"<dd>Another option\\n</dd>\\n\\n</dl>\\n\\n</body>\\n</html>\\n"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertConvert'
op|'('
name|'inputLines'
op|','
name|'output'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_TPMultiLineOptions
dedent|''
name|'def'
name|'test_TPMultiLineOptions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Try to parse multiple C{TP} fields, with options text on several lines.\n        """'
newline|'\n'
name|'inputLines'
op|'='
op|'['
string|'\'.TH BAR "1" "Oct 2007" "" ""\''
op|','
nl|'\n'
string|'".SH HEADER"'
op|','
nl|'\n'
string|'".TP"'
op|','
nl|'\n'
string|'"\\\\fB-o\\\\fR, \\\\fB--option\\\\fR"'
op|','
nl|'\n'
string|'"An option"'
op|','
nl|'\n'
string|'"on two lines"'
op|','
nl|'\n'
string|'".TP"'
op|','
nl|'\n'
string|'"\\\\fB-n\\\\fR, \\\\fB--another\\\\fR"'
op|','
nl|'\n'
string|'"Another option"'
op|','
nl|'\n'
string|'"on two lines"'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'output'
op|'='
op|'('
string|'"<html><head>\\n<title>BAR.1</title></head>\\n<body>\\n\\n"'
nl|'\n'
string|'"<h1>BAR.1</h1>\\n\\n<h2>HEADER</h2>\\n\\n<dl><dt>"'
nl|'\n'
string|'"<strong>-o</strong>, <strong>--option</strong>\\n</dt>"'
nl|'\n'
string|'"<dd>An option\\non two lines\\n</dd>\\n\\n"'
nl|'\n'
string|'"<dt><strong>-n</strong>, <strong>--another</strong>\\n</dt>"'
nl|'\n'
string|'"<dd>Another option\\non two lines\\n</dd>\\n\\n</dl>\\n\\n"'
nl|'\n'
string|'"</body>\\n</html>\\n"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertConvert'
op|'('
name|'inputLines'
op|','
name|'output'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_ITLegacyManagement
dedent|''
name|'def'
name|'test_ITLegacyManagement'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test management of BL/IT/EL used in some man pages.\n        """'
newline|'\n'
name|'inputLines'
op|'='
op|'['
string|'\'.TH BAR "1" "Oct 2007" "" ""\''
op|','
nl|'\n'
string|'".SH HEADER"'
op|','
nl|'\n'
string|'".BL"'
op|','
nl|'\n'
string|'".IT An option"'
op|','
nl|'\n'
string|'"on two lines"'
op|','
nl|'\n'
string|'".IT"'
op|','
nl|'\n'
string|'"Another option"'
op|','
nl|'\n'
string|'"on two lines"'
op|','
nl|'\n'
string|'".EL"'
nl|'\n'
op|']'
newline|'\n'
name|'output'
op|'='
op|'('
string|'"<html><head>\\n<title>BAR.1</title></head>\\n<body>\\n\\n"'
nl|'\n'
string|'"<h1>BAR.1</h1>\\n\\n<h2>HEADER</h2>\\n\\n<dl>"'
nl|'\n'
string|'"<dt>on two lines\\n</dt><dd>Another option\\non two lines\\n"'
nl|'\n'
string|'"</dd></dl>\\n\\n</body>\\n</html>\\n"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertConvert'
op|'('
name|'inputLines'
op|','
name|'output'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_interactiveCommand
dedent|''
name|'def'
name|'test_interactiveCommand'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test management of interactive command tag.\n        """'
newline|'\n'
name|'inputLines'
op|'='
op|'['
string|'\'.TH BAR "1" "Oct 2007" "" ""\''
op|','
nl|'\n'
string|'".SH HEADER"'
op|','
nl|'\n'
string|'".BL"'
op|','
nl|'\n'
string|'".IT IC foo AR bar"'
op|','
nl|'\n'
string|'"option 1"'
op|','
nl|'\n'
string|'".IT IC egg AR spam OP AR stuff"'
op|','
nl|'\n'
string|'"option 2"'
op|','
nl|'\n'
string|'".EL"'
nl|'\n'
op|']'
newline|'\n'
name|'output'
op|'='
op|'('
string|'"<html><head>\\n<title>BAR.1</title></head>\\n<body>\\n\\n"'
nl|'\n'
string|'"<h1>BAR.1</h1>\\n\\n<h2>HEADER</h2>\\n\\n<dl>"'
nl|'\n'
string|'"<dt>foo <u>bar</u></dt><dd>option 1\\n</dd><dt>egg "'
nl|'\n'
string|'"<u>spam</u> [<u>stuff</u>]</dt><dd>option 2\\n</dd></dl>"'
nl|'\n'
string|'"\\n\\n</body>\\n</html>\\n"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertConvert'
op|'('
name|'inputLines'
op|','
name|'output'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
