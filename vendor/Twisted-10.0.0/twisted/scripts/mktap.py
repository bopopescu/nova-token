begin_unit
comment|'# -*- test-case-name: twisted.scripts.test.test_mktap -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
name|'import'
name|'warnings'
op|','
name|'sys'
op|','
name|'os'
newline|'\n'
nl|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'application'
name|'import'
name|'service'
op|','
name|'app'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'persisted'
name|'import'
name|'sob'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'usage'
op|','
name|'util'
newline|'\n'
name|'from'
name|'twisted'
name|'import'
name|'plugin'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'util'
name|'import'
name|'uidFromString'
op|','
name|'gidFromString'
newline|'\n'
nl|'\n'
comment|'# API COMPATIBILITY'
nl|'\n'
DECL|variable|IServiceMaker
name|'IServiceMaker'
op|'='
name|'service'
op|'.'
name|'IServiceMaker'
newline|'\n'
DECL|variable|_tapHelper
name|'_tapHelper'
op|'='
name|'service'
op|'.'
name|'ServiceMaker'
newline|'\n'
nl|'\n'
name|'warnings'
op|'.'
name|'warn'
op|'('
nl|'\n'
string|'"mktap and related support modules are deprecated as of Twisted 8.0.  "'
nl|'\n'
string|'"Use Twisted Application Plugins with the \'twistd\' command directly, "'
nl|'\n'
string|'"as described in \'Writing a Twisted Application Plugin for twistd\' "'
nl|'\n'
string|'"chapter of the Developer Guide."'
op|','
name|'DeprecationWarning'
op|','
name|'stacklevel'
op|'='
number|'2'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|getid
name|'def'
name|'getid'
op|'('
name|'uid'
op|','
name|'gid'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Convert one or both of a string representation of a UID and GID into\n    integer form.  On platforms where L{pwd} and L{grp} is available, user and\n    group names can be converted.\n\n    @type uid: C{str} or C{NoneType}\n    @param uid: A string giving the base-ten representation of a UID or the\n        name of a user which can be converted to a UID via L{pwd.getpwnam},\n        or None if no UID value is to be obtained.\n\n    @type gid: C{str} or C{NoneType}\n    @param uid: A string giving the base-ten representation of a GID or the\n        name of a group which can be converted to a GID via\n        L{grp.getgrnam}, or None if no UID value is to be obtained.\n\n    @return: A two-tuple giving integer UID and GID information for\n        whichever (or both) parameter is provided with a non-C{None} value.\n\n    @raise ValueError: If a user or group name is supplied and L{pwd} or L{grp}\n        is not available.\n    """'
newline|'\n'
name|'if'
name|'uid'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'uid'
op|'='
name|'uidFromString'
op|'('
name|'uid'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'gid'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'gid'
op|'='
name|'gidFromString'
op|'('
name|'gid'
op|')'
newline|'\n'
dedent|''
name|'return'
op|'('
name|'uid'
op|','
name|'gid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|loadPlugins
dedent|''
name|'def'
name|'loadPlugins'
op|'('
name|'debug'
op|'='
name|'None'
op|','
name|'progress'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'tapLookup'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'plugins'
op|'='
name|'plugin'
op|'.'
name|'getPlugins'
op|'('
name|'IServiceMaker'
op|')'
newline|'\n'
name|'for'
name|'plug'
name|'in'
name|'plugins'
op|':'
newline|'\n'
indent|'        '
name|'tapLookup'
op|'['
name|'plug'
op|'.'
name|'tapname'
op|']'
op|'='
name|'plug'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'tapLookup'
newline|'\n'
nl|'\n'
DECL|function|addToApplication
dedent|''
name|'def'
name|'addToApplication'
op|'('
name|'ser'
op|','
name|'name'
op|','
name|'append'
op|','
name|'procname'
op|','
name|'type'
op|','
name|'encrypted'
op|','
name|'uid'
op|','
name|'gid'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'append'
name|'and'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'append'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'a'
op|'='
name|'service'
op|'.'
name|'loadApplication'
op|'('
name|'append'
op|','
string|"'pickle'"
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'a'
op|'='
name|'service'
op|'.'
name|'Application'
op|'('
name|'name'
op|','
name|'uid'
op|','
name|'gid'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'procname'
op|':'
newline|'\n'
indent|'        '
name|'service'
op|'.'
name|'IProcess'
op|'('
name|'a'
op|')'
op|'.'
name|'processName'
op|'='
name|'procname'
newline|'\n'
dedent|''
name|'ser'
op|'.'
name|'setServiceParent'
op|'('
name|'service'
op|'.'
name|'IServiceCollection'
op|'('
name|'a'
op|')'
op|')'
newline|'\n'
name|'sob'
op|'.'
name|'IPersistable'
op|'('
name|'a'
op|')'
op|'.'
name|'setStyle'
op|'('
name|'type'
op|')'
newline|'\n'
name|'passphrase'
op|'='
name|'app'
op|'.'
name|'getSavePassphrase'
op|'('
name|'encrypted'
op|')'
newline|'\n'
name|'if'
name|'passphrase'
op|':'
newline|'\n'
indent|'        '
name|'append'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'sob'
op|'.'
name|'IPersistable'
op|'('
name|'a'
op|')'
op|'.'
name|'save'
op|'('
name|'filename'
op|'='
name|'append'
op|','
name|'passphrase'
op|'='
name|'passphrase'
op|')'
newline|'\n'
nl|'\n'
DECL|class|FirstPassOptions
dedent|''
name|'class'
name|'FirstPassOptions'
op|'('
name|'usage'
op|'.'
name|'Options'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'synopsis'
op|'='
string|'"""Usage:    mktap [options] <command> [command options] """'
newline|'\n'
nl|'\n'
DECL|variable|recursing
name|'recursing'
op|'='
number|'0'
newline|'\n'
DECL|variable|params
name|'params'
op|'='
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|variable|optParameters
name|'optParameters'
op|'='
op|'['
nl|'\n'
op|'['
string|"'uid'"
op|','
string|"'u'"
op|','
name|'None'
op|','
string|'"The uid to run as."'
op|','
name|'uidFromString'
op|']'
op|','
nl|'\n'
op|'['
string|"'gid'"
op|','
string|"'g'"
op|','
name|'None'
op|','
string|'"The gid to run as."'
op|','
name|'gidFromString'
op|']'
op|','
nl|'\n'
op|'['
string|"'append'"
op|','
string|"'a'"
op|','
name|'None'
op|','
nl|'\n'
string|'"An existing .tap file to append the plugin to, rather than "'
nl|'\n'
string|'"creating a new one."'
op|']'
op|','
nl|'\n'
op|'['
string|"'type'"
op|','
string|"'t'"
op|','
string|"'pickle'"
op|','
nl|'\n'
string|'"The output format to use; this can be \'pickle\', \'xml\', "'
nl|'\n'
string|'"or \'source\'."'
op|']'
op|','
nl|'\n'
op|'['
string|"'appname'"
op|','
string|"'n'"
op|','
name|'None'
op|','
string|'"The process name to use for this application."'
op|']'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|optFlags
name|'optFlags'
op|'='
op|'['
nl|'\n'
op|'['
string|"'encrypted'"
op|','
string|"'e'"
op|','
string|'"Encrypt file before writing "'
nl|'\n'
string|'"(will make the extension of the resultant "'
nl|'\n'
string|'"file begin with \'e\')"'
op|']'
op|','
nl|'\n'
op|'['
string|"'debug'"
op|','
string|"'d'"
op|','
string|'"Show debug information for plugin loading"'
op|']'
op|','
nl|'\n'
op|'['
string|"'progress'"
op|','
string|"'p'"
op|','
string|'"Show progress information for plugin loading"'
op|']'
op|','
nl|'\n'
op|'['
string|"'help'"
op|','
string|"'h'"
op|','
string|'"Display this message"'
op|']'
op|','
nl|'\n'
op|']'
newline|'\n'
comment|'#zsh_altArgDescr = {"foo":"use this description for foo instead"}'
nl|'\n'
comment|'#zsh_multiUse = ["foo", "bar"]'
nl|'\n'
comment|'#zsh_mutuallyExclusive = [("foo", "bar"), ("bar", "baz")]'
nl|'\n'
DECL|variable|zsh_actions
name|'zsh_actions'
op|'='
op|'{'
string|'"append"'
op|':'
string|'\'_files -g "*.tap"\''
op|','
nl|'\n'
string|'"type"'
op|':'
string|'"(pickle xml source)"'
op|'}'
newline|'\n'
DECL|variable|zsh_actionDescr
name|'zsh_actionDescr'
op|'='
op|'{'
string|'"append"'
op|':'
string|'"tap file to append to"'
op|','
string|'"uid"'
op|':'
string|'"uid to run as"'
op|','
nl|'\n'
string|'"gid"'
op|':'
string|'"gid to run as"'
op|','
string|'"type"'
op|':'
string|'"output format"'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|init
name|'def'
name|'init'
op|'('
name|'self'
op|','
name|'tapLookup'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sc'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
op|'('
name|'name'
op|','
name|'module'
op|')'
name|'in'
name|'tapLookup'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'IServiceMaker'
op|'.'
name|'providedBy'
op|'('
name|'module'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'sc'
op|'.'
name|'append'
op|'('
op|'('
nl|'\n'
name|'name'
op|','
name|'None'
op|','
name|'lambda'
name|'m'
op|'='
name|'module'
op|':'
name|'m'
op|'.'
name|'options'
op|'('
op|')'
op|','
name|'module'
op|'.'
name|'description'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'sc'
op|'.'
name|'append'
op|'('
op|'('
nl|'\n'
name|'name'
op|','
name|'None'
op|','
name|'lambda'
name|'obj'
op|'='
name|'module'
op|':'
name|'obj'
op|'.'
name|'load'
op|'('
op|')'
op|'.'
name|'Options'
op|'('
op|')'
op|','
nl|'\n'
name|'getattr'
op|'('
name|'module'
op|','
string|"'description'"
op|','
string|"''"
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'sc'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'subCommands'
op|'='
name|'sc'
newline|'\n'
nl|'\n'
DECL|member|parseArgs
dedent|''
name|'def'
name|'parseArgs'
op|'('
name|'self'
op|','
op|'*'
name|'rest'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'params'
op|'+='
name|'rest'
newline|'\n'
nl|'\n'
DECL|member|_reportDebug
dedent|''
name|'def'
name|'_reportDebug'
op|'('
name|'self'
op|','
name|'info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'Debug: '"
op|','
name|'info'
newline|'\n'
nl|'\n'
DECL|member|_reportProgress
dedent|''
name|'def'
name|'_reportProgress'
op|'('
name|'self'
op|','
name|'info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'s'
op|'='
name|'self'
op|'.'
name|'pb'
op|'('
name|'info'
op|')'
newline|'\n'
name|'if'
name|'s'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'\\rProgress: '"
op|','
name|'s'
op|','
newline|'\n'
dedent|''
name|'if'
name|'info'
op|'=='
number|'1.0'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'\\r'"
op|'+'
op|'('
string|"' '"
op|'*'
number|'79'
op|')'
op|'+'
string|"'\\r'"
op|','
newline|'\n'
nl|'\n'
DECL|member|postOptions
dedent|''
dedent|''
name|'def'
name|'postOptions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'recursing'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'debug'
op|'='
name|'progress'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'self'
op|'['
string|"'debug'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'debug'
op|'='
name|'self'
op|'.'
name|'_reportDebug'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'['
string|"'progress'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'progress'
op|'='
name|'self'
op|'.'
name|'_reportProgress'
newline|'\n'
name|'self'
op|'.'
name|'pb'
op|'='
name|'util'
op|'.'
name|'makeStatBar'
op|'('
number|'60'
op|','
number|'1.0'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'tapLookup'
op|'='
name|'loadPlugins'
op|'('
name|'debug'
op|','
name|'progress'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'IOError'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'usage'
op|'.'
name|'UsageError'
op|'('
string|'"Couldn\'t load the plugins file!"'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'init'
op|'('
name|'self'
op|'.'
name|'tapLookup'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'recursing'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'parseOptions'
op|'('
name|'self'
op|'.'
name|'params'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'self'
op|','
string|"'subOptions'"
op|')'
name|'or'
name|'self'
op|'['
string|"'help'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'usage'
op|'.'
name|'UsageError'
op|'('
name|'str'
op|'('
name|'self'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'hasattr'
op|'('
name|'self'
op|','
string|"'subOptions'"
op|')'
name|'and'
name|'self'
op|'.'
name|'subOptions'
op|'.'
name|'get'
op|'('
string|"'help'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'usage'
op|'.'
name|'UsageError'
op|'('
name|'str'
op|'('
name|'self'
op|'.'
name|'subOptions'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'tapLookup'
op|'.'
name|'has_key'
op|'('
name|'self'
op|'.'
name|'subCommand'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'usage'
op|'.'
name|'UsageError'
op|'('
string|'"Please select one of: "'
op|'+'
nl|'\n'
string|"' '"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'tapLookup'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|run
dedent|''
dedent|''
dedent|''
name|'def'
name|'run'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'options'
op|'='
name|'FirstPassOptions'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'options'
op|'.'
name|'parseOptions'
op|'('
name|'sys'
op|'.'
name|'argv'
op|'['
number|'1'
op|':'
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'usage'
op|'.'
name|'UsageError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'        '
name|'print'
name|'e'
newline|'\n'
name|'sys'
op|'.'
name|'exit'
op|'('
number|'2'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'KeyboardInterrupt'
op|':'
newline|'\n'
indent|'        '
name|'sys'
op|'.'
name|'exit'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'plg'
op|'='
name|'options'
op|'.'
name|'tapLookup'
op|'['
name|'options'
op|'.'
name|'subCommand'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'IServiceMaker'
op|'.'
name|'providedBy'
op|'('
name|'plg'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'plg'
op|'='
name|'plg'
op|'.'
name|'load'
op|'('
op|')'
newline|'\n'
dedent|''
name|'ser'
op|'='
name|'plg'
op|'.'
name|'makeService'
op|'('
name|'options'
op|'.'
name|'subOptions'
op|')'
newline|'\n'
name|'addToApplication'
op|'('
name|'ser'
op|','
nl|'\n'
name|'options'
op|'.'
name|'subCommand'
op|','
name|'options'
op|'['
string|"'append'"
op|']'
op|','
name|'options'
op|'['
string|"'appname'"
op|']'
op|','
nl|'\n'
name|'options'
op|'['
string|"'type'"
op|']'
op|','
name|'options'
op|'['
string|"'encrypted'"
op|']'
op|','
nl|'\n'
name|'options'
op|'['
string|"'uid'"
op|']'
op|','
name|'options'
op|'['
string|"'gid'"
op|']'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
