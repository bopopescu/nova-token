begin_unit
comment|'# -*- test-case-name: twisted.test.test_strcred -*-'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Copyright (c) 2007-2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nCred plugin for a file of the format \'username:password\'.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'sys'
newline|'\n'
nl|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
name|'import'
name|'plugin'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'cred'
op|'.'
name|'checkers'
name|'import'
name|'FilePasswordDB'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'cred'
op|'.'
name|'strcred'
name|'import'
name|'ICheckerFactory'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'cred'
op|'.'
name|'credentials'
name|'import'
name|'IUsernamePassword'
op|','
name|'IUsernameHashedPassword'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
name|'fileCheckerFactoryHelp'
op|'='
string|'"""\nThis checker expects to receive the location of a file that\nconforms to the FilePasswordDB format. Each line in the file\nshould be of the format \'username:password\', in plain text.\n"""'
newline|'\n'
nl|'\n'
DECL|variable|invalidFileWarning
name|'invalidFileWarning'
op|'='
string|"'Warning: not a valid file'"
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|FileCheckerFactory
name|'class'
name|'FileCheckerFactory'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A factory for instances of L{FilePasswordDB}.\n    """'
newline|'\n'
name|'implements'
op|'('
name|'ICheckerFactory'
op|','
name|'plugin'
op|'.'
name|'IPlugin'
op|')'
newline|'\n'
DECL|variable|authType
name|'authType'
op|'='
string|"'file'"
newline|'\n'
DECL|variable|authHelp
name|'authHelp'
op|'='
name|'fileCheckerFactoryHelp'
newline|'\n'
DECL|variable|argStringFormat
name|'argStringFormat'
op|'='
string|"'Location of a FilePasswordDB-formatted file.'"
newline|'\n'
comment|"# Explicitly defined here because FilePasswordDB doesn't do it for us"
nl|'\n'
DECL|variable|credentialInterfaces
name|'credentialInterfaces'
op|'='
op|'('
name|'IUsernamePassword'
op|','
name|'IUsernameHashedPassword'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|errorOutput
name|'errorOutput'
op|'='
name|'sys'
op|'.'
name|'stderr'
newline|'\n'
nl|'\n'
DECL|member|generateChecker
name|'def'
name|'generateChecker'
op|'('
name|'self'
op|','
name|'argstring'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        This checker factory expects to get the location of a file.\n        The file should conform to the format required by\n        L{FilePasswordDB} (using defaults for all\n        initialization parameters).\n        """'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'filepath'
name|'import'
name|'FilePath'
newline|'\n'
name|'if'
name|'not'
name|'argstring'
op|'.'
name|'strip'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|','
string|"'%r requires a filename'"
op|'%'
name|'self'
op|'.'
name|'authType'
newline|'\n'
dedent|''
name|'elif'
name|'not'
name|'FilePath'
op|'('
name|'argstring'
op|')'
op|'.'
name|'isfile'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'errorOutput'
op|'.'
name|'write'
op|'('
string|"'%s: %s\\n'"
op|'%'
op|'('
name|'invalidFileWarning'
op|','
name|'argstring'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'FilePasswordDB'
op|'('
name|'argstring'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|variable|theFileCheckerFactory
dedent|''
dedent|''
name|'theFileCheckerFactory'
op|'='
name|'FileCheckerFactory'
op|'('
op|')'
newline|'\n'
endmarker|''
end_unit
