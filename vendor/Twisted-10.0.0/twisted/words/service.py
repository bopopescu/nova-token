begin_unit
comment|'# -*- test-case-name: twisted.words.test.test_service -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nA module that needs a better name.\n\nImplements new cred things for words.\n\nHow does this thing work?\n\n  - Network connection on some port expecting to speak some protocol\n\n  - Protocol-specific authentication, resulting in some kind of credentials object\n\n  - twisted.cred.portal login using those credentials for the interface\n    IUser and with something implementing IChatClient as the mind\n\n  - successful login results in an IUser avatar the protocol can call\n    methods on, and state added to the realm such that the mind will have\n    methods called on it as is necessary\n\n  - protocol specific actions lead to calls onto the avatar; remote events\n    lead to calls onto the mind\n\n  - protocol specific hangup, realm is notified, user is removed from active\n    play, the end.\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'time'
name|'import'
name|'time'
op|','
name|'ctime'
newline|'\n'
nl|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'words'
name|'import'
name|'iwords'
op|','
name|'ewords'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'components'
name|'import'
name|'registerAdapter'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'cred'
name|'import'
name|'portal'
op|','
name|'credentials'
op|','
name|'error'
name|'as'
name|'ecred'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'spread'
name|'import'
name|'pb'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'words'
op|'.'
name|'protocols'
name|'import'
name|'irc'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'defer'
op|','
name|'protocol'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
op|','
name|'failure'
op|','
name|'reflect'
newline|'\n'
name|'from'
name|'twisted'
name|'import'
name|'copyright'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Group
name|'class'
name|'Group'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'implements'
op|'('
name|'iwords'
op|'.'
name|'IGroup'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'users'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'meta'
op|'='
op|'{'
nl|'\n'
string|'"topic"'
op|':'
string|'""'
op|','
nl|'\n'
string|'"topic_author"'
op|':'
string|'""'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_ebUserCall
dedent|''
name|'def'
name|'_ebUserCall'
op|'('
name|'self'
op|','
name|'err'
op|','
name|'p'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'Exception'
op|'('
name|'p'
op|','
name|'err'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_cbUserCall
dedent|''
name|'def'
name|'_cbUserCall'
op|'('
name|'self'
op|','
name|'results'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
op|'('
name|'success'
op|','
name|'result'
op|')'
name|'in'
name|'results'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'success'
op|':'
newline|'\n'
indent|'                '
name|'user'
op|','
name|'err'
op|'='
name|'result'
op|'.'
name|'value'
comment|'# XXX'
newline|'\n'
name|'self'
op|'.'
name|'remove'
op|'('
name|'user'
op|','
name|'err'
op|'.'
name|'getErrorMessage'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|add
dedent|''
dedent|''
dedent|''
name|'def'
name|'add'
op|'('
name|'self'
op|','
name|'user'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'assert'
name|'iwords'
op|'.'
name|'IChatClient'
op|'.'
name|'providedBy'
op|'('
name|'user'
op|')'
op|','
string|'"%r is not a chat client"'
op|'%'
op|'('
name|'user'
op|','
op|')'
newline|'\n'
name|'if'
name|'user'
op|'.'
name|'name'
name|'not'
name|'in'
name|'self'
op|'.'
name|'users'
op|':'
newline|'\n'
indent|'            '
name|'additions'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'users'
op|'['
name|'user'
op|'.'
name|'name'
op|']'
op|'='
name|'user'
newline|'\n'
name|'for'
name|'p'
name|'in'
name|'self'
op|'.'
name|'users'
op|'.'
name|'itervalues'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'p'
name|'is'
name|'not'
name|'user'
op|':'
newline|'\n'
indent|'                    '
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'p'
op|'.'
name|'userJoined'
op|','
name|'self'
op|','
name|'user'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebUserCall'
op|','
name|'p'
op|'='
name|'p'
op|')'
newline|'\n'
name|'additions'
op|'.'
name|'append'
op|'('
name|'d'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'defer'
op|'.'
name|'DeferredList'
op|'('
name|'additions'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbUserCall'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|remove
dedent|''
name|'def'
name|'remove'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'reason'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'assert'
name|'reason'
name|'is'
name|'None'
name|'or'
name|'isinstance'
op|'('
name|'reason'
op|','
name|'unicode'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'self'
op|'.'
name|'users'
op|'['
name|'user'
op|'.'
name|'name'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'removals'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'p'
name|'in'
name|'self'
op|'.'
name|'users'
op|'.'
name|'itervalues'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'p'
name|'is'
name|'not'
name|'user'
op|':'
newline|'\n'
indent|'                    '
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'p'
op|'.'
name|'userLeft'
op|','
name|'self'
op|','
name|'user'
op|','
name|'reason'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebUserCall'
op|','
name|'p'
op|'='
name|'p'
op|')'
newline|'\n'
name|'removals'
op|'.'
name|'append'
op|'('
name|'d'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'defer'
op|'.'
name|'DeferredList'
op|'('
name|'removals'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbUserCall'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|size
dedent|''
name|'def'
name|'size'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'users'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|receive
dedent|''
name|'def'
name|'receive'
op|'('
name|'self'
op|','
name|'sender'
op|','
name|'recipient'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'assert'
name|'recipient'
name|'is'
name|'self'
newline|'\n'
name|'receives'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'p'
name|'in'
name|'self'
op|'.'
name|'users'
op|'.'
name|'itervalues'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'p'
name|'is'
name|'not'
name|'sender'
op|':'
newline|'\n'
indent|'                '
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'p'
op|'.'
name|'receive'
op|','
name|'sender'
op|','
name|'self'
op|','
name|'message'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebUserCall'
op|','
name|'p'
op|'='
name|'p'
op|')'
newline|'\n'
name|'receives'
op|'.'
name|'append'
op|'('
name|'d'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'defer'
op|'.'
name|'DeferredList'
op|'('
name|'receives'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbUserCall'
op|')'
newline|'\n'
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|setMetadata
dedent|''
name|'def'
name|'setMetadata'
op|'('
name|'self'
op|','
name|'meta'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'meta'
op|'='
name|'meta'
newline|'\n'
name|'sets'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'p'
name|'in'
name|'self'
op|'.'
name|'users'
op|'.'
name|'itervalues'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'p'
op|'.'
name|'groupMetaUpdate'
op|','
name|'self'
op|','
name|'meta'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebUserCall'
op|','
name|'p'
op|'='
name|'p'
op|')'
newline|'\n'
name|'sets'
op|'.'
name|'append'
op|'('
name|'d'
op|')'
newline|'\n'
dedent|''
name|'defer'
op|'.'
name|'DeferredList'
op|'('
name|'sets'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbUserCall'
op|')'
newline|'\n'
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|iterusers
dedent|''
name|'def'
name|'iterusers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# XXX Deferred?'
nl|'\n'
indent|'        '
name|'return'
name|'iter'
op|'('
name|'self'
op|'.'
name|'users'
op|'.'
name|'values'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|User
dedent|''
dedent|''
name|'class'
name|'User'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'implements'
op|'('
name|'iwords'
op|'.'
name|'IUser'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|realm
name|'realm'
op|'='
name|'None'
newline|'\n'
DECL|variable|mind
name|'mind'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'groups'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'lastMessage'
op|'='
name|'time'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|loggedIn
dedent|''
name|'def'
name|'loggedIn'
op|'('
name|'self'
op|','
name|'realm'
op|','
name|'mind'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'realm'
op|'='
name|'realm'
newline|'\n'
name|'self'
op|'.'
name|'mind'
op|'='
name|'mind'
newline|'\n'
name|'self'
op|'.'
name|'signOn'
op|'='
name|'time'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|join
dedent|''
name|'def'
name|'join'
op|'('
name|'self'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
DECL|function|cbJoin
indent|'        '
name|'def'
name|'cbJoin'
op|'('
name|'result'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'groups'
op|'.'
name|'append'
op|'('
name|'group'
op|')'
newline|'\n'
name|'return'
name|'result'
newline|'\n'
dedent|''
name|'return'
name|'group'
op|'.'
name|'add'
op|'('
name|'self'
op|'.'
name|'mind'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'cbJoin'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|leave
dedent|''
name|'def'
name|'leave'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'reason'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
DECL|function|cbLeave
indent|'        '
name|'def'
name|'cbLeave'
op|'('
name|'result'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'groups'
op|'.'
name|'remove'
op|'('
name|'group'
op|')'
newline|'\n'
name|'return'
name|'result'
newline|'\n'
dedent|''
name|'return'
name|'group'
op|'.'
name|'remove'
op|'('
name|'self'
op|'.'
name|'mind'
op|','
name|'reason'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'cbLeave'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|send
dedent|''
name|'def'
name|'send'
op|'('
name|'self'
op|','
name|'recipient'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'lastMessage'
op|'='
name|'time'
op|'('
op|')'
newline|'\n'
name|'return'
name|'recipient'
op|'.'
name|'receive'
op|'('
name|'self'
op|'.'
name|'mind'
op|','
name|'recipient'
op|','
name|'message'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|itergroups
dedent|''
name|'def'
name|'itergroups'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'iter'
op|'('
name|'self'
op|'.'
name|'groups'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|logout
dedent|''
name|'def'
name|'logout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'g'
name|'in'
name|'self'
op|'.'
name|'groups'
op|'['
op|':'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'leave'
op|'('
name|'g'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|NICKSERV
dedent|''
dedent|''
dedent|''
name|'NICKSERV'
op|'='
string|"'NickServ!NickServ@services'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|IRCUser
name|'class'
name|'IRCUser'
op|'('
name|'irc'
op|'.'
name|'IRC'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Protocol instance representing an IRC user connected to the server.\n    """'
newline|'\n'
name|'implements'
op|'('
name|'iwords'
op|'.'
name|'IChatClient'
op|')'
newline|'\n'
nl|'\n'
comment|'# A list of IGroups in which I am participating'
nl|'\n'
DECL|variable|groups
name|'groups'
op|'='
name|'None'
newline|'\n'
nl|'\n'
comment|'# A no-argument callable I should invoke when I go away'
nl|'\n'
DECL|variable|logout
name|'logout'
op|'='
name|'None'
newline|'\n'
nl|'\n'
comment|'# An IUser we use to interact with the chat service'
nl|'\n'
DECL|variable|avatar
name|'avatar'
op|'='
name|'None'
newline|'\n'
nl|'\n'
comment|'# To whence I belong'
nl|'\n'
DECL|variable|realm
name|'realm'
op|'='
name|'None'
newline|'\n'
nl|'\n'
comment|'# How to handle unicode (TODO: Make this customizable on a per-user basis)'
nl|'\n'
DECL|variable|encoding
name|'encoding'
op|'='
string|"'utf-8'"
newline|'\n'
nl|'\n'
comment|'# Twisted callbacks'
nl|'\n'
DECL|member|connectionMade
name|'def'
name|'connectionMade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'irc_PRIVMSG'
op|'='
name|'self'
op|'.'
name|'irc_NICKSERV_PRIVMSG'
newline|'\n'
name|'self'
op|'.'
name|'realm'
op|'='
name|'self'
op|'.'
name|'factory'
op|'.'
name|'realm'
newline|'\n'
name|'self'
op|'.'
name|'hostname'
op|'='
name|'self'
op|'.'
name|'realm'
op|'.'
name|'name'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|connectionLost
dedent|''
name|'def'
name|'connectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'logout'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logout'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'avatar'
op|'='
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# Make sendMessage a bit more useful to us'
nl|'\n'
DECL|member|sendMessage
dedent|''
dedent|''
name|'def'
name|'sendMessage'
op|'('
name|'self'
op|','
name|'command'
op|','
op|'*'
name|'parameter_list'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'kw'
op|'.'
name|'has_key'
op|'('
string|"'prefix'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'kw'
op|'['
string|"'prefix'"
op|']'
op|'='
name|'self'
op|'.'
name|'hostname'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'kw'
op|'.'
name|'has_key'
op|'('
string|"'to'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'kw'
op|'['
string|"'to'"
op|']'
op|'='
name|'self'
op|'.'
name|'name'
op|'.'
name|'encode'
op|'('
name|'self'
op|'.'
name|'encoding'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'arglist'
op|'='
op|'['
name|'self'
op|','
name|'command'
op|','
name|'kw'
op|'['
string|"'to'"
op|']'
op|']'
op|'+'
name|'list'
op|'('
name|'parameter_list'
op|')'
newline|'\n'
name|'irc'
op|'.'
name|'IRC'
op|'.'
name|'sendMessage'
op|'('
op|'*'
name|'arglist'
op|','
op|'**'
name|'kw'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# IChatClient implementation'
nl|'\n'
DECL|member|userJoined
dedent|''
name|'def'
name|'userJoined'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'user'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'join'
op|'('
nl|'\n'
string|'"%s!%s@%s"'
op|'%'
op|'('
name|'user'
op|'.'
name|'name'
op|','
name|'user'
op|'.'
name|'name'
op|','
name|'self'
op|'.'
name|'hostname'
op|')'
op|','
nl|'\n'
string|"'#'"
op|'+'
name|'group'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|userLeft
dedent|''
name|'def'
name|'userLeft'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'user'
op|','
name|'reason'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'assert'
name|'reason'
name|'is'
name|'None'
name|'or'
name|'isinstance'
op|'('
name|'reason'
op|','
name|'unicode'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'part'
op|'('
nl|'\n'
string|'"%s!%s@%s"'
op|'%'
op|'('
name|'user'
op|'.'
name|'name'
op|','
name|'user'
op|'.'
name|'name'
op|','
name|'self'
op|'.'
name|'hostname'
op|')'
op|','
nl|'\n'
string|"'#'"
op|'+'
name|'group'
op|'.'
name|'name'
op|','
nl|'\n'
op|'('
name|'reason'
name|'or'
string|'u"leaving"'
op|')'
op|'.'
name|'encode'
op|'('
name|'self'
op|'.'
name|'encoding'
op|','
string|"'replace'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|receive
dedent|''
name|'def'
name|'receive'
op|'('
name|'self'
op|','
name|'sender'
op|','
name|'recipient'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
comment|'#>> :glyph!glyph@adsl-64-123-27-108.dsl.austtx.swbell.net PRIVMSG glyph_ :hello'
nl|'\n'
nl|'\n'
comment|'# omg???????????'
nl|'\n'
indent|'        '
name|'if'
name|'iwords'
op|'.'
name|'IGroup'
op|'.'
name|'providedBy'
op|'('
name|'recipient'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'recipientName'
op|'='
string|"'#'"
op|'+'
name|'recipient'
op|'.'
name|'name'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'recipientName'
op|'='
name|'recipient'
op|'.'
name|'name'
newline|'\n'
nl|'\n'
dedent|''
name|'text'
op|'='
name|'message'
op|'.'
name|'get'
op|'('
string|"'text'"
op|','
string|"'<an unrepresentable message>'"
op|')'
newline|'\n'
name|'for'
name|'L'
name|'in'
name|'text'
op|'.'
name|'splitlines'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'privmsg'
op|'('
nl|'\n'
string|"'%s!%s@%s'"
op|'%'
op|'('
name|'sender'
op|'.'
name|'name'
op|','
name|'sender'
op|'.'
name|'name'
op|','
name|'self'
op|'.'
name|'hostname'
op|')'
op|','
nl|'\n'
name|'recipientName'
op|','
nl|'\n'
name|'L'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|groupMetaUpdate
dedent|''
dedent|''
name|'def'
name|'groupMetaUpdate'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'meta'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'topic'"
name|'in'
name|'meta'
op|':'
newline|'\n'
indent|'            '
name|'topic'
op|'='
name|'meta'
op|'['
string|"'topic'"
op|']'
newline|'\n'
name|'author'
op|'='
name|'meta'
op|'.'
name|'get'
op|'('
string|"'topic_author'"
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'topic'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'name'
op|','
nl|'\n'
string|"'#'"
op|'+'
name|'group'
op|'.'
name|'name'
op|','
nl|'\n'
name|'topic'
op|','
nl|'\n'
string|"'%s!%s@%s'"
op|'%'
op|'('
name|'author'
op|','
name|'author'
op|','
name|'self'
op|'.'
name|'hostname'
op|')'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
comment|'# irc.IRC callbacks - starting with login related stuff.'
nl|'\n'
DECL|variable|nickname
dedent|''
dedent|''
name|'nickname'
op|'='
name|'None'
newline|'\n'
DECL|variable|password
name|'password'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|irc_PASS
name|'def'
name|'irc_PASS'
op|'('
name|'self'
op|','
name|'prefix'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Password message -- Register a password.\n\n        Parameters: <password>\n\n        [REQUIRED]\n\n        Note that IRC requires the client send this *before* NICK\n        and USER.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'password'
op|'='
name|'params'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|irc_NICK
dedent|''
name|'def'
name|'irc_NICK'
op|'('
name|'self'
op|','
name|'prefix'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Nick message -- Set your nickname.\n\n        Parameters: <nickname>\n\n        [REQUIRED]\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'nickname'
op|'='
name|'params'
op|'['
number|'0'
op|']'
op|'.'
name|'decode'
op|'('
name|'self'
op|'.'
name|'encoding'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'UnicodeDecodeError'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'privmsg'
op|'('
nl|'\n'
name|'NICKSERV'
op|','
nl|'\n'
name|'nickname'
op|','
nl|'\n'
string|"'Your nickname is cannot be decoded.  Please use ASCII or UTF-8.'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'nickname'
op|'='
name|'nickname'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
name|'nickname'
newline|'\n'
nl|'\n'
name|'for'
name|'code'
op|','
name|'text'
name|'in'
name|'self'
op|'.'
name|'_motdMessages'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendMessage'
op|'('
name|'code'
op|','
name|'text'
op|'%'
name|'self'
op|'.'
name|'factory'
op|'.'
name|'_serverInfo'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'password'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'privmsg'
op|'('
nl|'\n'
name|'NICKSERV'
op|','
nl|'\n'
name|'nickname'
op|','
nl|'\n'
string|"'Password?'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'password'
op|'='
name|'self'
op|'.'
name|'password'
newline|'\n'
name|'self'
op|'.'
name|'password'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'logInAs'
op|'('
name|'nickname'
op|','
name|'password'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|irc_USER
dedent|''
dedent|''
name|'def'
name|'irc_USER'
op|'('
name|'self'
op|','
name|'prefix'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""User message -- Set your realname.\n\n        Parameters: <user> <mode> <unused> <realname>\n        """'
newline|'\n'
comment|'# Note: who gives a crap about this?  The IUser has the real'
nl|'\n'
comment|'# information we care about.  Save it anyway, I guess, just'
nl|'\n'
comment|'# for fun.'
nl|'\n'
name|'self'
op|'.'
name|'realname'
op|'='
name|'params'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|irc_NICKSERV_PRIVMSG
dedent|''
name|'def'
name|'irc_NICKSERV_PRIVMSG'
op|'('
name|'self'
op|','
name|'prefix'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Send a (private) message.\n\n        Parameters: <msgtarget> <text to be sent>\n        """'
newline|'\n'
name|'target'
op|'='
name|'params'
op|'['
number|'0'
op|']'
newline|'\n'
name|'password'
op|'='
name|'params'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'nickname'
name|'is'
name|'None'
op|':'
newline|'\n'
comment|'# XXX Send an error response here'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'target'
op|'.'
name|'lower'
op|'('
op|')'
op|'!='
string|'"nickserv"'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'privmsg'
op|'('
nl|'\n'
name|'NICKSERV'
op|','
nl|'\n'
name|'self'
op|'.'
name|'nickname'
op|','
nl|'\n'
string|'"Denied.  Please send me (NickServ) your password."'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'nickname'
op|'='
name|'self'
op|'.'
name|'nickname'
newline|'\n'
name|'self'
op|'.'
name|'nickname'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'logInAs'
op|'('
name|'nickname'
op|','
name|'password'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|logInAs
dedent|''
dedent|''
name|'def'
name|'logInAs'
op|'('
name|'self'
op|','
name|'nickname'
op|','
name|'password'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'factory'
op|'.'
name|'portal'
op|'.'
name|'login'
op|'('
nl|'\n'
name|'credentials'
op|'.'
name|'UsernamePassword'
op|'('
name|'nickname'
op|','
name|'password'
op|')'
op|','
nl|'\n'
name|'self'
op|','
nl|'\n'
name|'iwords'
op|'.'
name|'IUser'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_cbLogin'
op|','
name|'self'
op|'.'
name|'_ebLogin'
op|','
name|'errbackArgs'
op|'='
op|'('
name|'nickname'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|_welcomeMessages
dedent|''
name|'_welcomeMessages'
op|'='
op|'['
nl|'\n'
op|'('
name|'irc'
op|'.'
name|'RPL_WELCOME'
op|','
nl|'\n'
string|'":connected to Twisted IRC"'
op|')'
op|','
nl|'\n'
op|'('
name|'irc'
op|'.'
name|'RPL_YOURHOST'
op|','
nl|'\n'
string|'":Your host is %(serviceName)s, running version %(serviceVersion)s"'
op|')'
op|','
nl|'\n'
op|'('
name|'irc'
op|'.'
name|'RPL_CREATED'
op|','
nl|'\n'
string|'":This server was created on %(creationDate)s"'
op|')'
op|','
nl|'\n'
nl|'\n'
comment|'# "Bummer.  This server returned a worthless 004 numeric.'
nl|'\n'
comment|'#  I\'ll have to guess at all the values"'
nl|'\n'
comment|'#    -- epic'
nl|'\n'
op|'('
name|'irc'
op|'.'
name|'RPL_MYINFO'
op|','
nl|'\n'
comment|'# w and n are the currently supported channel and user modes'
nl|'\n'
comment|'# -- specify this better'
nl|'\n'
string|'"%(serviceName)s %(serviceVersion)s w n"'
op|')'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|_motdMessages
name|'_motdMessages'
op|'='
op|'['
nl|'\n'
op|'('
name|'irc'
op|'.'
name|'RPL_MOTDSTART'
op|','
nl|'\n'
string|'":- %(serviceName)s Message of the Day - "'
op|')'
op|','
nl|'\n'
op|'('
name|'irc'
op|'.'
name|'RPL_ENDOFMOTD'
op|','
nl|'\n'
string|'":End of /MOTD command."'
op|')'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_cbLogin
name|'def'
name|'_cbLogin'
op|'('
name|'self'
op|','
op|'('
name|'iface'
op|','
name|'avatar'
op|','
name|'logout'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'assert'
name|'iface'
name|'is'
name|'iwords'
op|'.'
name|'IUser'
op|','
string|'"Realm is buggy, got %r"'
op|'%'
op|'('
name|'iface'
op|','
op|')'
newline|'\n'
nl|'\n'
comment|'# Let them send messages to the world'
nl|'\n'
name|'del'
name|'self'
op|'.'
name|'irc_PRIVMSG'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'avatar'
op|'='
name|'avatar'
newline|'\n'
name|'self'
op|'.'
name|'logout'
op|'='
name|'logout'
newline|'\n'
name|'for'
name|'code'
op|','
name|'text'
name|'in'
name|'self'
op|'.'
name|'_welcomeMessages'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendMessage'
op|'('
name|'code'
op|','
name|'text'
op|'%'
name|'self'
op|'.'
name|'factory'
op|'.'
name|'_serverInfo'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_ebLogin
dedent|''
dedent|''
name|'def'
name|'_ebLogin'
op|'('
name|'self'
op|','
name|'err'
op|','
name|'nickname'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'err'
op|'.'
name|'check'
op|'('
name|'ewords'
op|'.'
name|'AlreadyLoggedIn'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'privmsg'
op|'('
nl|'\n'
name|'NICKSERV'
op|','
nl|'\n'
name|'nickname'
op|','
nl|'\n'
string|'"Already logged in.  No pod people allowed!"'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'err'
op|'.'
name|'check'
op|'('
name|'ecred'
op|'.'
name|'UnauthorizedLogin'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'privmsg'
op|'('
nl|'\n'
name|'NICKSERV'
op|','
nl|'\n'
name|'nickname'
op|','
nl|'\n'
string|'"Login failed.  Goodbye."'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Unhandled error during login:"'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'err'
op|'('
name|'err'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'privmsg'
op|'('
nl|'\n'
name|'NICKSERV'
op|','
nl|'\n'
name|'nickname'
op|','
nl|'\n'
string|'"Server error during login.  Sorry."'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|"# Great, now that's out of the way, here's some of the interesting"
nl|'\n'
comment|'# bits'
nl|'\n'
DECL|member|irc_PING
dedent|''
name|'def'
name|'irc_PING'
op|'('
name|'self'
op|','
name|'prefix'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Ping message\n\n        Parameters: <server1> [ <server2> ]\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'realm'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendMessage'
op|'('
string|"'PONG'"
op|','
name|'self'
op|'.'
name|'hostname'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|irc_QUIT
dedent|''
dedent|''
name|'def'
name|'irc_QUIT'
op|'('
name|'self'
op|','
name|'prefix'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Quit\n\n        Parameters: [ <Quit Message> ]\n        """'
newline|'\n'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_channelMode
dedent|''
name|'def'
name|'_channelMode'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'modes'
op|'='
name|'None'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'modes'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'irc'
op|'.'
name|'ERR_UNKNOWNMODE'
op|','
nl|'\n'
string|'":Unknown MODE flag."'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'channelMode'
op|'('
name|'self'
op|'.'
name|'name'
op|','
string|"'#'"
op|'+'
name|'group'
op|'.'
name|'name'
op|','
string|"'+'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_userMode
dedent|''
dedent|''
name|'def'
name|'_userMode'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'modes'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'modes'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'irc'
op|'.'
name|'ERR_UNKNOWNMODE'
op|','
nl|'\n'
string|'":Unknown MODE flag."'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'user'
name|'is'
name|'self'
op|'.'
name|'avatar'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'irc'
op|'.'
name|'RPL_UMODEIS'
op|','
nl|'\n'
string|'"+"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'irc'
op|'.'
name|'ERR_USERSDONTMATCH'
op|','
nl|'\n'
string|'":You can\'t look at someone else\'s modes."'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|irc_MODE
dedent|''
dedent|''
name|'def'
name|'irc_MODE'
op|'('
name|'self'
op|','
name|'prefix'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""User mode message\n\n        Parameters: <nickname>\n        *( ( "+" / "-" ) *( "i" / "w" / "o" / "O" / "r" ) )\n\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'channelOrUser'
op|'='
name|'params'
op|'['
number|'0'
op|']'
op|'.'
name|'decode'
op|'('
name|'self'
op|'.'
name|'encoding'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'UnicodeDecodeError'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'irc'
op|'.'
name|'ERR_NOSUCHNICK'
op|','
name|'params'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|'":No such nickname (could not decode your unicode!)"'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'channelOrUser'
op|'.'
name|'startswith'
op|'('
string|"'#'"
op|')'
op|':'
newline|'\n'
DECL|function|ebGroup
indent|'            '
name|'def'
name|'ebGroup'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'err'
op|'.'
name|'trap'
op|'('
name|'ewords'
op|'.'
name|'NoSuchGroup'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'irc'
op|'.'
name|'ERR_NOSUCHCHANNEL'
op|','
name|'params'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|'":That channel doesn\'t exist."'
op|')'
newline|'\n'
dedent|''
name|'d'
op|'='
name|'self'
op|'.'
name|'realm'
op|'.'
name|'lookupGroup'
op|'('
name|'channelOrUser'
op|'['
number|'1'
op|':'
op|']'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallbacks'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_channelMode'
op|','
nl|'\n'
name|'ebGroup'
op|','
nl|'\n'
name|'callbackArgs'
op|'='
name|'tuple'
op|'('
name|'params'
op|'['
number|'1'
op|':'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
DECL|function|ebUser
indent|'            '
name|'def'
name|'ebUser'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'irc'
op|'.'
name|'ERR_NOSUCHNICK'
op|','
nl|'\n'
string|'":No such nickname."'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'d'
op|'='
name|'self'
op|'.'
name|'realm'
op|'.'
name|'lookupUser'
op|'('
name|'channelOrUser'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallbacks'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_userMode'
op|','
nl|'\n'
name|'ebUser'
op|','
nl|'\n'
name|'callbackArgs'
op|'='
name|'tuple'
op|'('
name|'params'
op|'['
number|'1'
op|':'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|irc_USERHOST
dedent|''
dedent|''
name|'def'
name|'irc_USERHOST'
op|'('
name|'self'
op|','
name|'prefix'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Userhost message\n\n        Parameters: <nickname> *( SPACE <nickname> )\n\n        [Optional]\n        """'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|irc_PRIVMSG
dedent|''
name|'def'
name|'irc_PRIVMSG'
op|'('
name|'self'
op|','
name|'prefix'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Send a (private) message.\n\n        Parameters: <msgtarget> <text to be sent>\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'targetName'
op|'='
name|'params'
op|'['
number|'0'
op|']'
op|'.'
name|'decode'
op|'('
name|'self'
op|'.'
name|'encoding'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'UnicodeDecodeError'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'irc'
op|'.'
name|'ERR_NOSUCHNICK'
op|','
name|'targetName'
op|','
nl|'\n'
string|'":No such nick/channel (could not decode your unicode!)"'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'messageText'
op|'='
name|'params'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'if'
name|'targetName'
op|'.'
name|'startswith'
op|'('
string|"'#'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'target'
op|'='
name|'self'
op|'.'
name|'realm'
op|'.'
name|'lookupGroup'
op|'('
name|'targetName'
op|'['
number|'1'
op|':'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'target'
op|'='
name|'self'
op|'.'
name|'realm'
op|'.'
name|'lookupUser'
op|'('
name|'targetName'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'user'
op|':'
name|'user'
op|'.'
name|'mind'
op|')'
newline|'\n'
nl|'\n'
DECL|function|cbTarget
dedent|''
name|'def'
name|'cbTarget'
op|'('
name|'targ'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'targ'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'avatar'
op|'.'
name|'send'
op|'('
name|'targ'
op|','
op|'{'
string|'"text"'
op|':'
name|'messageText'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|function|ebTarget
dedent|''
dedent|''
name|'def'
name|'ebTarget'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'irc'
op|'.'
name|'ERR_NOSUCHNICK'
op|','
name|'targetName'
op|','
nl|'\n'
string|'":No such nick/channel."'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'target'
op|'.'
name|'addCallbacks'
op|'('
name|'cbTarget'
op|','
name|'ebTarget'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|irc_JOIN
dedent|''
name|'def'
name|'irc_JOIN'
op|'('
name|'self'
op|','
name|'prefix'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Join message\n\n        Parameters: ( <channel> *( "," <channel> ) [ <key> *( "," <key> ) ] )\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'groupName'
op|'='
name|'params'
op|'['
number|'0'
op|']'
op|'.'
name|'decode'
op|'('
name|'self'
op|'.'
name|'encoding'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'UnicodeDecodeError'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'irc'
op|'.'
name|'IRC_NOSUCHCHANNEL'
op|','
name|'params'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|'":No such channel (could not decode your unicode!)"'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'groupName'
op|'.'
name|'startswith'
op|'('
string|"'#'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'groupName'
op|'='
name|'groupName'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
nl|'\n'
DECL|function|cbGroup
dedent|''
name|'def'
name|'cbGroup'
op|'('
name|'group'
op|')'
op|':'
newline|'\n'
DECL|function|cbJoin
indent|'            '
name|'def'
name|'cbJoin'
op|'('
name|'ign'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'userJoined'
op|'('
name|'group'
op|','
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'names'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'name'
op|','
nl|'\n'
string|"'#'"
op|'+'
name|'group'
op|'.'
name|'name'
op|','
nl|'\n'
op|'['
name|'user'
op|'.'
name|'name'
name|'for'
name|'user'
name|'in'
name|'group'
op|'.'
name|'iterusers'
op|'('
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_sendTopic'
op|'('
name|'group'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'avatar'
op|'.'
name|'join'
op|'('
name|'group'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'cbJoin'
op|')'
newline|'\n'
nl|'\n'
DECL|function|ebGroup
dedent|''
name|'def'
name|'ebGroup'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'irc'
op|'.'
name|'ERR_NOSUCHCHANNEL'
op|','
string|"'#'"
op|'+'
name|'groupName'
op|','
nl|'\n'
string|'":No such channel."'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'realm'
op|'.'
name|'getGroup'
op|'('
name|'groupName'
op|')'
op|'.'
name|'addCallbacks'
op|'('
name|'cbGroup'
op|','
name|'ebGroup'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|irc_PART
dedent|''
name|'def'
name|'irc_PART'
op|'('
name|'self'
op|','
name|'prefix'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Part message\n\n        Parameters: <channel> *( "," <channel> ) [ <Part Message> ]\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'groupName'
op|'='
name|'params'
op|'['
number|'0'
op|']'
op|'.'
name|'decode'
op|'('
name|'self'
op|'.'
name|'encoding'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'UnicodeDecodeError'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'irc'
op|'.'
name|'ERR_NOTONCHANNEL'
op|','
name|'params'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|'":Could not decode your unicode!"'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'groupName'
op|'.'
name|'startswith'
op|'('
string|"'#'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'groupName'
op|'='
name|'groupName'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'params'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'reason'
op|'='
name|'params'
op|'['
number|'1'
op|']'
op|'.'
name|'decode'
op|'('
string|"'utf-8'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'reason'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|function|cbGroup
dedent|''
name|'def'
name|'cbGroup'
op|'('
name|'group'
op|')'
op|':'
newline|'\n'
DECL|function|cbLeave
indent|'            '
name|'def'
name|'cbLeave'
op|'('
name|'result'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'userLeft'
op|'('
name|'group'
op|','
name|'self'
op|','
name|'reason'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'avatar'
op|'.'
name|'leave'
op|'('
name|'group'
op|','
name|'reason'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'cbLeave'
op|')'
newline|'\n'
nl|'\n'
DECL|function|ebGroup
dedent|''
name|'def'
name|'ebGroup'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'err'
op|'.'
name|'trap'
op|'('
name|'ewords'
op|'.'
name|'NoSuchGroup'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'irc'
op|'.'
name|'ERR_NOTONCHANNEL'
op|','
nl|'\n'
string|"'#'"
op|'+'
name|'groupName'
op|','
nl|'\n'
string|'":"'
op|'+'
name|'err'
op|'.'
name|'getErrorMessage'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'realm'
op|'.'
name|'lookupGroup'
op|'('
name|'groupName'
op|')'
op|'.'
name|'addCallbacks'
op|'('
name|'cbGroup'
op|','
name|'ebGroup'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|irc_NAMES
dedent|''
name|'def'
name|'irc_NAMES'
op|'('
name|'self'
op|','
name|'prefix'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Names message\n\n        Parameters: [ <channel> *( "," <channel> ) [ <target> ] ]\n        """'
newline|'\n'
comment|'#<< NAMES #python'
nl|'\n'
comment|'#>> :benford.openprojects.net 353 glyph = #python :Orban ... @glyph ... Zymurgy skreech'
nl|'\n'
comment|'#>> :benford.openprojects.net 366 glyph #python :End of /NAMES list.'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'channel'
op|'='
name|'params'
op|'['
op|'-'
number|'1'
op|']'
op|'.'
name|'decode'
op|'('
name|'self'
op|'.'
name|'encoding'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'UnicodeDecodeError'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'irc'
op|'.'
name|'ERR_NOSUCHCHANNEL'
op|','
name|'params'
op|'['
op|'-'
number|'1'
op|']'
op|','
nl|'\n'
string|'":No such channel (could not decode your unicode!)"'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'channel'
op|'.'
name|'startswith'
op|'('
string|"'#'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'channel'
op|'='
name|'channel'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
nl|'\n'
DECL|function|cbGroup
dedent|''
name|'def'
name|'cbGroup'
op|'('
name|'group'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'names'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'name'
op|','
nl|'\n'
string|"'#'"
op|'+'
name|'group'
op|'.'
name|'name'
op|','
nl|'\n'
op|'['
name|'user'
op|'.'
name|'name'
name|'for'
name|'user'
name|'in'
name|'group'
op|'.'
name|'iterusers'
op|'('
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|ebGroup
dedent|''
name|'def'
name|'ebGroup'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'err'
op|'.'
name|'trap'
op|'('
name|'ewords'
op|'.'
name|'NoSuchGroup'
op|')'
newline|'\n'
comment|'# No group?  Fine, no names!'
nl|'\n'
name|'self'
op|'.'
name|'names'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'name'
op|','
nl|'\n'
string|"'#'"
op|'+'
name|'channel'
op|','
nl|'\n'
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'realm'
op|'.'
name|'lookupGroup'
op|'('
name|'channel'
op|')'
op|'.'
name|'addCallbacks'
op|'('
name|'cbGroup'
op|','
name|'ebGroup'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|irc_TOPIC
dedent|''
name|'def'
name|'irc_TOPIC'
op|'('
name|'self'
op|','
name|'prefix'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Topic message\n\n        Parameters: <channel> [ <topic> ]\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'channel'
op|'='
name|'params'
op|'['
number|'0'
op|']'
op|'.'
name|'decode'
op|'('
name|'self'
op|'.'
name|'encoding'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'UnicodeDecodeError'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'irc'
op|'.'
name|'ERR_NOSUCHCHANNEL'
op|','
nl|'\n'
string|'":That channel doesn\'t exist (could not decode your unicode!)"'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'channel'
op|'.'
name|'startswith'
op|'('
string|"'#'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'channel'
op|'='
name|'channel'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'params'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_setTopic'
op|'('
name|'channel'
op|','
name|'params'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_getTopic'
op|'('
name|'channel'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_sendTopic
dedent|''
dedent|''
name|'def'
name|'_sendTopic'
op|'('
name|'self'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Send the topic of the given group to this user, if it has one.\n        """'
newline|'\n'
name|'topic'
op|'='
name|'group'
op|'.'
name|'meta'
op|'.'
name|'get'
op|'('
string|'"topic"'
op|')'
newline|'\n'
name|'if'
name|'topic'
op|':'
newline|'\n'
indent|'            '
name|'author'
op|'='
name|'group'
op|'.'
name|'meta'
op|'.'
name|'get'
op|'('
string|'"topic_author"'
op|')'
name|'or'
string|'"<noone>"'
newline|'\n'
name|'date'
op|'='
name|'group'
op|'.'
name|'meta'
op|'.'
name|'get'
op|'('
string|'"topic_date"'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'topic'
op|'('
name|'self'
op|'.'
name|'name'
op|','
string|"'#'"
op|'+'
name|'group'
op|'.'
name|'name'
op|','
name|'topic'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'topicAuthor'
op|'('
name|'self'
op|'.'
name|'name'
op|','
string|"'#'"
op|'+'
name|'group'
op|'.'
name|'name'
op|','
name|'author'
op|','
name|'date'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_getTopic
dedent|''
dedent|''
name|'def'
name|'_getTopic'
op|'('
name|'self'
op|','
name|'channel'
op|')'
op|':'
newline|'\n'
comment|'#<< TOPIC #python'
nl|'\n'
comment|'#>> :benford.openprojects.net 332 glyph #python :<churchr> I really did. I sprained all my toes.'
nl|'\n'
comment|'#>> :benford.openprojects.net 333 glyph #python itamar|nyc 994713482'
nl|'\n'
DECL|function|ebGroup
indent|'        '
name|'def'
name|'ebGroup'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'err'
op|'.'
name|'trap'
op|'('
name|'ewords'
op|'.'
name|'NoSuchGroup'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'irc'
op|'.'
name|'ERR_NOSUCHCHANNEL'
op|','
string|"'='"
op|','
name|'channel'
op|','
nl|'\n'
string|'":That channel doesn\'t exist."'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'realm'
op|'.'
name|'lookupGroup'
op|'('
name|'channel'
op|')'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_sendTopic'
op|','
name|'ebGroup'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_setTopic
dedent|''
name|'def'
name|'_setTopic'
op|'('
name|'self'
op|','
name|'channel'
op|','
name|'topic'
op|')'
op|':'
newline|'\n'
comment|'#<< TOPIC #divunal :foo'
nl|'\n'
comment|'#>> :glyph!glyph@adsl-64-123-27-108.dsl.austtx.swbell.net TOPIC #divunal :foo'
nl|'\n'
nl|'\n'
DECL|function|cbGroup
indent|'        '
name|'def'
name|'cbGroup'
op|'('
name|'group'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'newMeta'
op|'='
name|'group'
op|'.'
name|'meta'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'newMeta'
op|'['
string|"'topic'"
op|']'
op|'='
name|'topic'
newline|'\n'
name|'newMeta'
op|'['
string|"'topic_author'"
op|']'
op|'='
name|'self'
op|'.'
name|'name'
newline|'\n'
name|'newMeta'
op|'['
string|"'topic_date'"
op|']'
op|'='
name|'int'
op|'('
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|ebSet
name|'def'
name|'ebSet'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'irc'
op|'.'
name|'ERR_CHANOPRIVSNEEDED'
op|','
nl|'\n'
string|'"#"'
op|'+'
name|'group'
op|'.'
name|'name'
op|','
nl|'\n'
string|'":You need to be a channel operator to do that."'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'group'
op|'.'
name|'setMetadata'
op|'('
name|'newMeta'
op|')'
op|'.'
name|'addErrback'
op|'('
name|'ebSet'
op|')'
newline|'\n'
nl|'\n'
DECL|function|ebGroup
dedent|''
name|'def'
name|'ebGroup'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'err'
op|'.'
name|'trap'
op|'('
name|'ewords'
op|'.'
name|'NoSuchGroup'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'irc'
op|'.'
name|'ERR_NOSUCHCHANNEL'
op|','
string|"'='"
op|','
name|'channel'
op|','
nl|'\n'
string|'":That channel doesn\'t exist."'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'realm'
op|'.'
name|'lookupGroup'
op|'('
name|'channel'
op|')'
op|'.'
name|'addCallbacks'
op|'('
name|'cbGroup'
op|','
name|'ebGroup'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|list
dedent|''
name|'def'
name|'list'
op|'('
name|'self'
op|','
name|'channels'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Send a group of LIST response lines\n\n        @type channel: C{list} of C{(str, int, str)}\n        @param channel: Information about the channels being sent:\n        their name, the number of participants, and their topic.\n        """'
newline|'\n'
name|'for'
op|'('
name|'name'
op|','
name|'size'
op|','
name|'topic'
op|')'
name|'in'
name|'channels'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendMessage'
op|'('
name|'irc'
op|'.'
name|'RPL_LIST'
op|','
name|'name'
op|','
name|'str'
op|'('
name|'size'
op|')'
op|','
string|'":"'
op|'+'
name|'topic'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'sendMessage'
op|'('
name|'irc'
op|'.'
name|'RPL_LISTEND'
op|','
string|'":End of /LIST"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|irc_LIST
dedent|''
name|'def'
name|'irc_LIST'
op|'('
name|'self'
op|','
name|'prefix'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""List query\n\n        Return information about the indicated channels, or about all\n        channels if none are specified.\n\n        Parameters: [ <channel> *( "," <channel> ) [ <target> ] ]\n        """'
newline|'\n'
comment|'#<< list #python'
nl|'\n'
comment|'#>> :orwell.freenode.net 321 exarkun Channel :Users  Name'
nl|'\n'
comment|'#>> :orwell.freenode.net 322 exarkun #python 358 :The Python programming language'
nl|'\n'
comment|'#>> :orwell.freenode.net 323 exarkun :End of /LIST'
nl|'\n'
name|'if'
name|'params'
op|':'
newline|'\n'
comment|'# Return information about indicated channels'
nl|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'channels'
op|'='
name|'params'
op|'['
number|'0'
op|']'
op|'.'
name|'decode'
op|'('
name|'self'
op|'.'
name|'encoding'
op|')'
op|'.'
name|'split'
op|'('
string|"','"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'UnicodeDecodeError'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'irc'
op|'.'
name|'ERR_NOSUCHCHANNEL'
op|','
name|'params'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|'":No such channel (could not decode your unicode!)"'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'groups'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'ch'
name|'in'
name|'channels'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'ch'
op|'.'
name|'startswith'
op|'('
string|"'#'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'ch'
op|'='
name|'ch'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
dedent|''
name|'groups'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'realm'
op|'.'
name|'lookupGroup'
op|'('
name|'ch'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'groups'
op|'='
name|'defer'
op|'.'
name|'DeferredList'
op|'('
name|'groups'
op|','
name|'consumeErrors'
op|'='
name|'True'
op|')'
newline|'\n'
name|'groups'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'gs'
op|':'
op|'['
name|'r'
name|'for'
op|'('
name|'s'
op|','
name|'r'
op|')'
name|'in'
name|'gs'
name|'if'
name|'s'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# Return information about all channels'
nl|'\n'
indent|'            '
name|'groups'
op|'='
name|'self'
op|'.'
name|'realm'
op|'.'
name|'itergroups'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|cbGroups
dedent|''
name|'def'
name|'cbGroups'
op|'('
name|'groups'
op|')'
op|':'
newline|'\n'
DECL|function|gotSize
indent|'            '
name|'def'
name|'gotSize'
op|'('
name|'size'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'group'
op|'.'
name|'name'
op|','
name|'size'
op|','
name|'group'
op|'.'
name|'meta'
op|'.'
name|'get'
op|'('
string|"'topic'"
op|')'
newline|'\n'
dedent|''
name|'d'
op|'='
name|'defer'
op|'.'
name|'DeferredList'
op|'('
op|'['
nl|'\n'
name|'group'
op|'.'
name|'size'
op|'('
op|')'
op|'.'
name|'addCallback'
op|'('
name|'gotSize'
op|','
name|'group'
op|')'
name|'for'
name|'group'
name|'in'
name|'groups'
op|']'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'results'
op|':'
name|'self'
op|'.'
name|'list'
op|'('
op|'['
name|'r'
name|'for'
op|'('
name|'s'
op|','
name|'r'
op|')'
name|'in'
name|'results'
name|'if'
name|'s'
op|']'
op|')'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
dedent|''
name|'groups'
op|'.'
name|'addCallback'
op|'('
name|'cbGroups'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_channelWho
dedent|''
name|'def'
name|'_channelWho'
op|'('
name|'self'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'who'
op|'('
name|'self'
op|'.'
name|'name'
op|','
string|"'#'"
op|'+'
name|'group'
op|'.'
name|'name'
op|','
nl|'\n'
op|'['
op|'('
name|'m'
op|'.'
name|'name'
op|','
name|'self'
op|'.'
name|'hostname'
op|','
name|'self'
op|'.'
name|'realm'
op|'.'
name|'name'
op|','
name|'m'
op|'.'
name|'name'
op|','
string|'"H"'
op|','
number|'0'
op|','
name|'m'
op|'.'
name|'name'
op|')'
name|'for'
name|'m'
name|'in'
name|'group'
op|'.'
name|'iterusers'
op|'('
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_userWho
dedent|''
name|'def'
name|'_userWho'
op|'('
name|'self'
op|','
name|'user'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendMessage'
op|'('
name|'irc'
op|'.'
name|'RPL_ENDOFWHO'
op|','
nl|'\n'
string|'":User /WHO not implemented"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|irc_WHO
dedent|''
name|'def'
name|'irc_WHO'
op|'('
name|'self'
op|','
name|'prefix'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Who query\n\n        Parameters: [ <mask> [ "o" ] ]\n        """'
newline|'\n'
comment|'#<< who #python'
nl|'\n'
comment|'#>> :x.opn 352 glyph #python aquarius pc-62-31-193-114-du.blueyonder.co.uk y.opn Aquarius H :3 Aquarius'
nl|'\n'
comment|'# ...'
nl|'\n'
comment|'#>> :x.opn 352 glyph #python foobar europa.tranquility.net z.opn skreech H :0 skreech'
nl|'\n'
comment|'#>> :x.opn 315 glyph #python :End of /WHO list.'
nl|'\n'
comment|'### also'
nl|'\n'
comment|'#<< who glyph'
nl|'\n'
comment|'#>> :x.opn 352 glyph #python glyph adsl-64-123-27-108.dsl.austtx.swbell.net x.opn glyph H :0 glyph'
nl|'\n'
comment|'#>> :x.opn 315 glyph glyph :End of /WHO list.'
nl|'\n'
name|'if'
name|'not'
name|'params'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendMessage'
op|'('
name|'irc'
op|'.'
name|'RPL_ENDOFWHO'
op|','
string|'":/WHO not supported."'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'channelOrUser'
op|'='
name|'params'
op|'['
number|'0'
op|']'
op|'.'
name|'decode'
op|'('
name|'self'
op|'.'
name|'encoding'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'UnicodeDecodeError'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'irc'
op|'.'
name|'RPL_ENDOFWHO'
op|','
name|'params'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|'":End of /WHO list (could not decode your unicode!)"'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'channelOrUser'
op|'.'
name|'startswith'
op|'('
string|"'#'"
op|')'
op|':'
newline|'\n'
DECL|function|ebGroup
indent|'            '
name|'def'
name|'ebGroup'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'err'
op|'.'
name|'trap'
op|'('
name|'ewords'
op|'.'
name|'NoSuchGroup'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'irc'
op|'.'
name|'RPL_ENDOFWHO'
op|','
name|'channelOrUser'
op|','
nl|'\n'
string|'":End of /WHO list."'
op|')'
newline|'\n'
dedent|''
name|'d'
op|'='
name|'self'
op|'.'
name|'realm'
op|'.'
name|'lookupGroup'
op|'('
name|'channelOrUser'
op|'['
number|'1'
op|':'
op|']'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_channelWho'
op|','
name|'ebGroup'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
DECL|function|ebUser
indent|'            '
name|'def'
name|'ebUser'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'err'
op|'.'
name|'trap'
op|'('
name|'ewords'
op|'.'
name|'NoSuchUser'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'irc'
op|'.'
name|'RPL_ENDOFWHO'
op|','
name|'channelOrUser'
op|','
nl|'\n'
string|'":End of /WHO list."'
op|')'
newline|'\n'
dedent|''
name|'d'
op|'='
name|'self'
op|'.'
name|'realm'
op|'.'
name|'lookupUser'
op|'('
name|'channelOrUser'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_userWho'
op|','
name|'ebUser'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|member|irc_WHOIS
dedent|''
dedent|''
name|'def'
name|'irc_WHOIS'
op|'('
name|'self'
op|','
name|'prefix'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Whois query\n\n        Parameters: [ <target> ] <mask> *( "," <mask> )\n        """'
newline|'\n'
DECL|function|cbUser
name|'def'
name|'cbUser'
op|'('
name|'user'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'whois'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'name'
op|','
nl|'\n'
name|'user'
op|'.'
name|'name'
op|','
name|'user'
op|'.'
name|'name'
op|','
name|'self'
op|'.'
name|'realm'
op|'.'
name|'name'
op|','
nl|'\n'
name|'user'
op|'.'
name|'name'
op|','
name|'self'
op|'.'
name|'realm'
op|'.'
name|'name'
op|','
string|"'Hi mom!'"
op|','
name|'False'
op|','
nl|'\n'
name|'int'
op|'('
name|'time'
op|'('
op|')'
op|'-'
name|'user'
op|'.'
name|'lastMessage'
op|')'
op|','
name|'user'
op|'.'
name|'signOn'
op|','
nl|'\n'
op|'['
string|"'#'"
op|'+'
name|'group'
op|'.'
name|'name'
name|'for'
name|'group'
name|'in'
name|'user'
op|'.'
name|'itergroups'
op|'('
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|ebUser
dedent|''
name|'def'
name|'ebUser'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'err'
op|'.'
name|'trap'
op|'('
name|'ewords'
op|'.'
name|'NoSuchUser'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'irc'
op|'.'
name|'ERR_NOSUCHNICK'
op|','
nl|'\n'
name|'params'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|'":No such nick/channel"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'user'
op|'='
name|'params'
op|'['
number|'0'
op|']'
op|'.'
name|'decode'
op|'('
name|'self'
op|'.'
name|'encoding'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'UnicodeDecodeError'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'irc'
op|'.'
name|'ERR_NOSUCHNICK'
op|','
nl|'\n'
name|'params'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|'":No such nick/channel"'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'realm'
op|'.'
name|'lookupUser'
op|'('
name|'user'
op|')'
op|'.'
name|'addCallbacks'
op|'('
name|'cbUser'
op|','
name|'ebUser'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# Unsupported commands, here for legacy compatibility'
nl|'\n'
DECL|member|irc_OPER
dedent|''
name|'def'
name|'irc_OPER'
op|'('
name|'self'
op|','
name|'prefix'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Oper message\n\n        Parameters: <name> <password>\n        """'
newline|'\n'
name|'self'
op|'.'
name|'sendMessage'
op|'('
name|'irc'
op|'.'
name|'ERR_NOOPERHOST'
op|','
string|'":O-lines not applicable"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|IRCFactory
dedent|''
dedent|''
name|'class'
name|'IRCFactory'
op|'('
name|'protocol'
op|'.'
name|'ServerFactory'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    IRC server that creates instances of the L{IRCUser} protocol.\n    \n    @ivar _serverInfo: A dictionary mapping:\n        "serviceName" to the name of the server,\n        "serviceVersion" to the copyright version,\n        "creationDate" to the time that the server was started.\n    """'
newline|'\n'
DECL|variable|protocol
name|'protocol'
op|'='
name|'IRCUser'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'realm'
op|','
name|'portal'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'realm'
op|'='
name|'realm'
newline|'\n'
name|'self'
op|'.'
name|'portal'
op|'='
name|'portal'
newline|'\n'
name|'self'
op|'.'
name|'_serverInfo'
op|'='
op|'{'
nl|'\n'
string|'"serviceName"'
op|':'
name|'self'
op|'.'
name|'realm'
op|'.'
name|'name'
op|','
nl|'\n'
string|'"serviceVersion"'
op|':'
name|'copyright'
op|'.'
name|'version'
op|','
nl|'\n'
string|'"creationDate"'
op|':'
name|'ctime'
op|'('
op|')'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|PBMind
dedent|''
dedent|''
name|'class'
name|'PBMind'
op|'('
name|'pb'
op|'.'
name|'Referenceable'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|jellyFor
dedent|''
name|'def'
name|'jellyFor'
op|'('
name|'self'
op|','
name|'jellier'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'reflect'
op|'.'
name|'qual'
op|'('
name|'PBMind'
op|')'
op|','
name|'jellier'
op|'.'
name|'invoker'
op|'.'
name|'registerReference'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|remote_userJoined
dedent|''
name|'def'
name|'remote_userJoined'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|remote_userLeft
dedent|''
name|'def'
name|'remote_userLeft'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'group'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|remote_receive
dedent|''
name|'def'
name|'remote_receive'
op|'('
name|'self'
op|','
name|'sender'
op|','
name|'recipient'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|remote_groupMetaUpdate
dedent|''
name|'def'
name|'remote_groupMetaUpdate'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'meta'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|PBMindReference
dedent|''
dedent|''
name|'class'
name|'PBMindReference'
op|'('
name|'pb'
op|'.'
name|'RemoteReference'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'implements'
op|'('
name|'iwords'
op|'.'
name|'IChatClient'
op|')'
newline|'\n'
nl|'\n'
DECL|member|receive
name|'def'
name|'receive'
op|'('
name|'self'
op|','
name|'sender'
op|','
name|'recipient'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'iwords'
op|'.'
name|'IGroup'
op|'.'
name|'providedBy'
op|'('
name|'recipient'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'rec'
op|'='
name|'PBGroup'
op|'('
name|'self'
op|'.'
name|'realm'
op|','
name|'self'
op|'.'
name|'avatar'
op|','
name|'recipient'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'rec'
op|'='
name|'PBUser'
op|'('
name|'self'
op|'.'
name|'realm'
op|','
name|'self'
op|'.'
name|'avatar'
op|','
name|'recipient'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'callRemote'
op|'('
nl|'\n'
string|"'receive'"
op|','
nl|'\n'
name|'PBUser'
op|'('
name|'self'
op|'.'
name|'realm'
op|','
name|'self'
op|'.'
name|'avatar'
op|','
name|'sender'
op|')'
op|','
nl|'\n'
name|'rec'
op|','
nl|'\n'
name|'message'
op|')'
newline|'\n'
nl|'\n'
DECL|member|groupMetaUpdate
dedent|''
name|'def'
name|'groupMetaUpdate'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'meta'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'callRemote'
op|'('
nl|'\n'
string|"'groupMetaUpdate'"
op|','
nl|'\n'
name|'PBGroup'
op|'('
name|'self'
op|'.'
name|'realm'
op|','
name|'self'
op|'.'
name|'avatar'
op|','
name|'group'
op|')'
op|','
nl|'\n'
name|'meta'
op|')'
newline|'\n'
nl|'\n'
DECL|member|userJoined
dedent|''
name|'def'
name|'userJoined'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'user'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'callRemote'
op|'('
nl|'\n'
string|"'userJoined'"
op|','
nl|'\n'
name|'PBGroup'
op|'('
name|'self'
op|'.'
name|'realm'
op|','
name|'self'
op|'.'
name|'avatar'
op|','
name|'group'
op|')'
op|','
nl|'\n'
name|'PBUser'
op|'('
name|'self'
op|'.'
name|'realm'
op|','
name|'self'
op|'.'
name|'avatar'
op|','
name|'user'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|userLeft
dedent|''
name|'def'
name|'userLeft'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'user'
op|','
name|'reason'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'assert'
name|'reason'
name|'is'
name|'None'
name|'or'
name|'isinstance'
op|'('
name|'reason'
op|','
name|'unicode'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'callRemote'
op|'('
nl|'\n'
string|"'userLeft'"
op|','
nl|'\n'
name|'PBGroup'
op|'('
name|'self'
op|'.'
name|'realm'
op|','
name|'self'
op|'.'
name|'avatar'
op|','
name|'group'
op|')'
op|','
nl|'\n'
name|'PBUser'
op|'('
name|'self'
op|'.'
name|'realm'
op|','
name|'self'
op|'.'
name|'avatar'
op|','
name|'user'
op|')'
op|','
nl|'\n'
name|'reason'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'pb'
op|'.'
name|'setUnjellyableForClass'
op|'('
name|'PBMind'
op|','
name|'PBMindReference'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|PBGroup
name|'class'
name|'PBGroup'
op|'('
name|'pb'
op|'.'
name|'Referenceable'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'realm'
op|','
name|'avatar'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'realm'
op|'='
name|'realm'
newline|'\n'
name|'self'
op|'.'
name|'avatar'
op|'='
name|'avatar'
newline|'\n'
name|'self'
op|'.'
name|'group'
op|'='
name|'group'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|processUniqueID
dedent|''
name|'def'
name|'processUniqueID'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'hash'
op|'('
op|'('
name|'self'
op|'.'
name|'realm'
op|'.'
name|'name'
op|','
name|'self'
op|'.'
name|'avatar'
op|'.'
name|'name'
op|','
name|'self'
op|'.'
name|'group'
op|'.'
name|'name'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|jellyFor
dedent|''
name|'def'
name|'jellyFor'
op|'('
name|'self'
op|','
name|'jellier'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'reflect'
op|'.'
name|'qual'
op|'('
name|'self'
op|'.'
name|'__class__'
op|')'
op|','
name|'self'
op|'.'
name|'group'
op|'.'
name|'name'
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
op|','
name|'jellier'
op|'.'
name|'invoker'
op|'.'
name|'registerReference'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|remote_leave
dedent|''
name|'def'
name|'remote_leave'
op|'('
name|'self'
op|','
name|'reason'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'avatar'
op|'.'
name|'leave'
op|'('
name|'self'
op|'.'
name|'group'
op|','
name|'reason'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|remote_send
dedent|''
name|'def'
name|'remote_send'
op|'('
name|'self'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'avatar'
op|'.'
name|'send'
op|'('
name|'self'
op|'.'
name|'group'
op|','
name|'message'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|PBGroupReference
dedent|''
dedent|''
name|'class'
name|'PBGroupReference'
op|'('
name|'pb'
op|'.'
name|'RemoteReference'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'implements'
op|'('
name|'iwords'
op|'.'
name|'IGroup'
op|')'
newline|'\n'
nl|'\n'
DECL|member|unjellyFor
name|'def'
name|'unjellyFor'
op|'('
name|'self'
op|','
name|'unjellier'
op|','
name|'unjellyList'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'clsName'
op|','
name|'name'
op|','
name|'ref'
op|'='
name|'unjellyList'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
op|'.'
name|'decode'
op|'('
string|"'utf-8'"
op|')'
newline|'\n'
name|'return'
name|'pb'
op|'.'
name|'RemoteReference'
op|'.'
name|'unjellyFor'
op|'('
name|'self'
op|','
name|'unjellier'
op|','
op|'['
name|'clsName'
op|','
name|'ref'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|leave
dedent|''
name|'def'
name|'leave'
op|'('
name|'self'
op|','
name|'reason'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'callRemote'
op|'('
string|'"leave"'
op|','
name|'reason'
op|')'
newline|'\n'
nl|'\n'
DECL|member|send
dedent|''
name|'def'
name|'send'
op|'('
name|'self'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'callRemote'
op|'('
string|'"send"'
op|','
name|'message'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'pb'
op|'.'
name|'setUnjellyableForClass'
op|'('
name|'PBGroup'
op|','
name|'PBGroupReference'
op|')'
newline|'\n'
nl|'\n'
DECL|class|PBUser
name|'class'
name|'PBUser'
op|'('
name|'pb'
op|'.'
name|'Referenceable'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'realm'
op|','
name|'avatar'
op|','
name|'user'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'realm'
op|'='
name|'realm'
newline|'\n'
name|'self'
op|'.'
name|'avatar'
op|'='
name|'avatar'
newline|'\n'
name|'self'
op|'.'
name|'user'
op|'='
name|'user'
newline|'\n'
nl|'\n'
DECL|member|processUniqueID
dedent|''
name|'def'
name|'processUniqueID'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'hash'
op|'('
op|'('
name|'self'
op|'.'
name|'realm'
op|'.'
name|'name'
op|','
name|'self'
op|'.'
name|'avatar'
op|'.'
name|'name'
op|','
name|'self'
op|'.'
name|'user'
op|'.'
name|'name'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ChatAvatar
dedent|''
dedent|''
name|'class'
name|'ChatAvatar'
op|'('
name|'pb'
op|'.'
name|'Referenceable'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'implements'
op|'('
name|'iwords'
op|'.'
name|'IChatClient'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'avatar'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'avatar'
op|'='
name|'avatar'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|jellyFor
dedent|''
name|'def'
name|'jellyFor'
op|'('
name|'self'
op|','
name|'jellier'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'reflect'
op|'.'
name|'qual'
op|'('
name|'self'
op|'.'
name|'__class__'
op|')'
op|','
name|'jellier'
op|'.'
name|'invoker'
op|'.'
name|'registerReference'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|remote_join
dedent|''
name|'def'
name|'remote_join'
op|'('
name|'self'
op|','
name|'groupName'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'assert'
name|'isinstance'
op|'('
name|'groupName'
op|','
name|'unicode'
op|')'
newline|'\n'
DECL|function|cbGroup
name|'def'
name|'cbGroup'
op|'('
name|'group'
op|')'
op|':'
newline|'\n'
DECL|function|cbJoin
indent|'            '
name|'def'
name|'cbJoin'
op|'('
name|'ignored'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'PBGroup'
op|'('
name|'self'
op|'.'
name|'avatar'
op|'.'
name|'realm'
op|','
name|'self'
op|'.'
name|'avatar'
op|','
name|'group'
op|')'
newline|'\n'
dedent|''
name|'d'
op|'='
name|'self'
op|'.'
name|'avatar'
op|'.'
name|'join'
op|'('
name|'group'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'cbJoin'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
dedent|''
name|'d'
op|'='
name|'self'
op|'.'
name|'avatar'
op|'.'
name|'realm'
op|'.'
name|'getGroup'
op|'('
name|'groupName'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'cbGroup'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
dedent|''
dedent|''
name|'registerAdapter'
op|'('
name|'ChatAvatar'
op|','
name|'iwords'
op|'.'
name|'IUser'
op|','
name|'pb'
op|'.'
name|'IPerspective'
op|')'
newline|'\n'
nl|'\n'
DECL|class|AvatarReference
name|'class'
name|'AvatarReference'
op|'('
name|'pb'
op|'.'
name|'RemoteReference'
op|')'
op|':'
newline|'\n'
DECL|member|join
indent|'    '
name|'def'
name|'join'
op|'('
name|'self'
op|','
name|'groupName'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'callRemote'
op|'('
string|"'join'"
op|','
name|'groupName'
op|')'
newline|'\n'
nl|'\n'
DECL|member|quit
dedent|''
name|'def'
name|'quit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'broker'
op|'.'
name|'notifyOnDisconnect'
op|'('
name|'lambda'
op|':'
name|'d'
op|'.'
name|'callback'
op|'('
name|'None'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'broker'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'pb'
op|'.'
name|'setUnjellyableForClass'
op|'('
name|'ChatAvatar'
op|','
name|'AvatarReference'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|WordsRealm
name|'class'
name|'WordsRealm'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'implements'
op|'('
name|'portal'
op|'.'
name|'IRealm'
op|','
name|'iwords'
op|'.'
name|'IChatService'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|_encoding
name|'_encoding'
op|'='
string|"'utf-8'"
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|userFactory
dedent|''
name|'def'
name|'userFactory'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'User'
op|'('
name|'name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|groupFactory
dedent|''
name|'def'
name|'groupFactory'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'Group'
op|'('
name|'name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|logoutFactory
dedent|''
name|'def'
name|'logoutFactory'
op|'('
name|'self'
op|','
name|'avatar'
op|','
name|'facet'
op|')'
op|':'
newline|'\n'
DECL|function|logout
indent|'        '
name|'def'
name|'logout'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# XXX Deferred support here'
nl|'\n'
indent|'            '
name|'getattr'
op|'('
name|'facet'
op|','
string|"'logout'"
op|','
name|'lambda'
op|':'
name|'None'
op|')'
op|'('
op|')'
newline|'\n'
name|'avatar'
op|'.'
name|'realm'
op|'='
name|'avatar'
op|'.'
name|'mind'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'logout'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|requestAvatar
dedent|''
name|'def'
name|'requestAvatar'
op|'('
name|'self'
op|','
name|'avatarId'
op|','
name|'mind'
op|','
op|'*'
name|'interfaces'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'avatarId'
op|','
name|'str'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'avatarId'
op|'='
name|'avatarId'
op|'.'
name|'decode'
op|'('
name|'self'
op|'.'
name|'_encoding'
op|')'
newline|'\n'
nl|'\n'
DECL|function|gotAvatar
dedent|''
name|'def'
name|'gotAvatar'
op|'('
name|'avatar'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'avatar'
op|'.'
name|'realm'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'ewords'
op|'.'
name|'AlreadyLoggedIn'
op|'('
op|')'
newline|'\n'
dedent|''
name|'for'
name|'iface'
name|'in'
name|'interfaces'
op|':'
newline|'\n'
indent|'                '
name|'facet'
op|'='
name|'iface'
op|'('
name|'avatar'
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'facet'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'avatar'
op|'.'
name|'loggedIn'
op|'('
name|'self'
op|','
name|'mind'
op|')'
newline|'\n'
name|'mind'
op|'.'
name|'name'
op|'='
name|'avatarId'
newline|'\n'
name|'mind'
op|'.'
name|'realm'
op|'='
name|'self'
newline|'\n'
name|'mind'
op|'.'
name|'avatar'
op|'='
name|'avatar'
newline|'\n'
name|'return'
name|'iface'
op|','
name|'facet'
op|','
name|'self'
op|'.'
name|'logoutFactory'
op|'('
name|'avatar'
op|','
name|'facet'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'raise'
name|'NotImplementedError'
op|'('
name|'self'
op|','
name|'interfaces'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'getUser'
op|'('
name|'avatarId'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'gotAvatar'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# IChatService, mostly.'
nl|'\n'
DECL|variable|createGroupOnRequest
dedent|''
name|'createGroupOnRequest'
op|'='
name|'False'
newline|'\n'
DECL|variable|createUserOnRequest
name|'createUserOnRequest'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|lookupUser
name|'def'
name|'lookupUser'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|lookupGroup
dedent|''
name|'def'
name|'lookupGroup'
op|'('
name|'self'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|addUser
dedent|''
name|'def'
name|'addUser'
op|'('
name|'self'
op|','
name|'user'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Add the given user to this service.\n\n        This is an internal method intented to be overridden by\n        L{WordsRealm} subclasses, not called by external code.\n\n        @type user: L{IUser}\n\n        @rtype: L{twisted.internet.defer.Deferred}\n        @return: A Deferred which fires with C{None} when the user is\n        added, or which fails with\n        L{twisted.words.ewords.DuplicateUser} if a user with the\n        same name exists already.\n        """'
newline|'\n'
name|'raise'
name|'NotImplementedError'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|addGroup
dedent|''
name|'def'
name|'addGroup'
op|'('
name|'self'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Add the given group to this service.\n\n        @type group: L{IGroup}\n\n        @rtype: L{twisted.internet.defer.Deferred}\n        @return: A Deferred which fires with C{None} when the group is\n        added, or which fails with\n        L{twisted.words.ewords.DuplicateGroup} if a group with the\n        same name exists already.\n        """'
newline|'\n'
name|'raise'
name|'NotImplementedError'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getGroup
dedent|''
name|'def'
name|'getGroup'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'assert'
name|'isinstance'
op|'('
name|'name'
op|','
name|'unicode'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'createGroupOnRequest'
op|':'
newline|'\n'
DECL|function|ebGroup
indent|'            '
name|'def'
name|'ebGroup'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'err'
op|'.'
name|'trap'
op|'('
name|'ewords'
op|'.'
name|'DuplicateGroup'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'lookupGroup'
op|'('
name|'name'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'createGroup'
op|'('
name|'name'
op|')'
op|'.'
name|'addErrback'
op|'('
name|'ebGroup'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'lookupGroup'
op|'('
name|'name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getUser
dedent|''
name|'def'
name|'getUser'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'assert'
name|'isinstance'
op|'('
name|'name'
op|','
name|'unicode'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'createUserOnRequest'
op|':'
newline|'\n'
DECL|function|ebUser
indent|'            '
name|'def'
name|'ebUser'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'err'
op|'.'
name|'trap'
op|'('
name|'ewords'
op|'.'
name|'DuplicateUser'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'lookupUser'
op|'('
name|'name'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'createUser'
op|'('
name|'name'
op|')'
op|'.'
name|'addErrback'
op|'('
name|'ebUser'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'lookupUser'
op|'('
name|'name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|createUser
dedent|''
name|'def'
name|'createUser'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'assert'
name|'isinstance'
op|'('
name|'name'
op|','
name|'unicode'
op|')'
newline|'\n'
DECL|function|cbLookup
name|'def'
name|'cbLookup'
op|'('
name|'user'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'ewords'
op|'.'
name|'DuplicateUser'
op|'('
name|'name'
op|')'
op|')'
newline|'\n'
DECL|function|ebLookup
dedent|''
name|'def'
name|'ebLookup'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'err'
op|'.'
name|'trap'
op|'('
name|'ewords'
op|'.'
name|'NoSuchUser'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'userFactory'
op|'('
name|'name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'name'
op|'='
name|'name'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'lookupUser'
op|'('
name|'name'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'cbLookup'
op|','
name|'ebLookup'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'addUser'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|createGroup
dedent|''
name|'def'
name|'createGroup'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'assert'
name|'isinstance'
op|'('
name|'name'
op|','
name|'unicode'
op|')'
newline|'\n'
DECL|function|cbLookup
name|'def'
name|'cbLookup'
op|'('
name|'group'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'ewords'
op|'.'
name|'DuplicateGroup'
op|'('
name|'name'
op|')'
op|')'
newline|'\n'
DECL|function|ebLookup
dedent|''
name|'def'
name|'ebLookup'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'err'
op|'.'
name|'trap'
op|'('
name|'ewords'
op|'.'
name|'NoSuchGroup'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'groupFactory'
op|'('
name|'name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'name'
op|'='
name|'name'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'lookupGroup'
op|'('
name|'name'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'cbLookup'
op|','
name|'ebLookup'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'addGroup'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InMemoryWordsRealm
dedent|''
dedent|''
name|'class'
name|'InMemoryWordsRealm'
op|'('
name|'WordsRealm'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'InMemoryWordsRealm'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'users'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'groups'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|itergroups
dedent|''
name|'def'
name|'itergroups'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'self'
op|'.'
name|'groups'
op|'.'
name|'itervalues'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|addUser
dedent|''
name|'def'
name|'addUser'
op|'('
name|'self'
op|','
name|'user'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'user'
op|'.'
name|'name'
name|'in'
name|'self'
op|'.'
name|'users'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'ewords'
op|'.'
name|'DuplicateUser'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'users'
op|'['
name|'user'
op|'.'
name|'name'
op|']'
op|'='
name|'user'
newline|'\n'
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'user'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|addGroup
dedent|''
name|'def'
name|'addGroup'
op|'('
name|'self'
op|','
name|'group'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'group'
op|'.'
name|'name'
name|'in'
name|'self'
op|'.'
name|'groups'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'ewords'
op|'.'
name|'DuplicateGroup'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'groups'
op|'['
name|'group'
op|'.'
name|'name'
op|']'
op|'='
name|'group'
newline|'\n'
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'group'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|lookupUser
dedent|''
name|'def'
name|'lookupUser'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'assert'
name|'isinstance'
op|'('
name|'name'
op|','
name|'unicode'
op|')'
newline|'\n'
name|'name'
op|'='
name|'name'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'user'
op|'='
name|'self'
op|'.'
name|'users'
op|'['
name|'name'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'ewords'
op|'.'
name|'NoSuchUser'
op|'('
name|'name'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'user'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|lookupGroup
dedent|''
dedent|''
name|'def'
name|'lookupGroup'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'assert'
name|'isinstance'
op|'('
name|'name'
op|','
name|'unicode'
op|')'
newline|'\n'
name|'name'
op|'='
name|'name'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'group'
op|'='
name|'self'
op|'.'
name|'groups'
op|'['
name|'name'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'ewords'
op|'.'
name|'NoSuchGroup'
op|'('
name|'name'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'group'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|__all__
dedent|''
dedent|''
dedent|''
name|'__all__'
op|'='
op|'['
nl|'\n'
string|"'Group'"
op|','
string|"'User'"
op|','
nl|'\n'
nl|'\n'
string|"'WordsRealm'"
op|','
string|"'InMemoryWordsRealm'"
op|','
nl|'\n'
op|']'
newline|'\n'
endmarker|''
end_unit
