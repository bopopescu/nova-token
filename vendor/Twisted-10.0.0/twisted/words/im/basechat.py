begin_unit
comment|'# Copyright (c) 2001-2004 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
comment|'#'
nl|'\n'
nl|'\n'
string|'"""Base classes for Instance Messenger clients."""'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'words'
op|'.'
name|'im'
op|'.'
name|'locals'
name|'import'
name|'OFFLINE'
op|','
name|'ONLINE'
op|','
name|'AWAY'
newline|'\n'
nl|'\n'
DECL|class|ContactsList
name|'class'
name|'ContactsList'
op|':'
newline|'\n'
indent|'    '
string|'"""A GUI object that displays a contacts list"""'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'chatui'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        @param chatui: ???\n        @type chatui: L{ChatUI}\n        """'
newline|'\n'
name|'self'
op|'.'
name|'chatui'
op|'='
name|'chatui'
newline|'\n'
name|'self'
op|'.'
name|'contacts'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'onlineContacts'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'clients'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|setContactStatus
dedent|''
name|'def'
name|'setContactStatus'
op|'('
name|'self'
op|','
name|'person'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Inform the user that a person\'s status has changed.\n\n        @type person: L{Person<interfaces.IPerson>}\n        """'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'contacts'
op|'.'
name|'has_key'
op|'('
name|'person'
op|'.'
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'contacts'
op|'['
name|'person'
op|'.'
name|'name'
op|']'
op|'='
name|'person'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'onlineContacts'
op|'.'
name|'has_key'
op|'('
name|'person'
op|'.'
name|'name'
op|')'
name|'and'
op|'('
name|'person'
op|'.'
name|'status'
op|'=='
name|'ONLINE'
name|'or'
name|'person'
op|'.'
name|'status'
op|'=='
name|'AWAY'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'onlineContacts'
op|'['
name|'person'
op|'.'
name|'name'
op|']'
op|'='
name|'person'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'onlineContacts'
op|'.'
name|'has_key'
op|'('
name|'person'
op|'.'
name|'name'
op|')'
name|'and'
name|'person'
op|'.'
name|'status'
op|'=='
name|'OFFLINE'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'self'
op|'.'
name|'onlineContacts'
op|'['
name|'person'
op|'.'
name|'name'
op|']'
newline|'\n'
nl|'\n'
DECL|member|registerAccountClient
dedent|''
dedent|''
name|'def'
name|'registerAccountClient'
op|'('
name|'self'
op|','
name|'client'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Notify the user that an account client has been signed on to.\n\n        @type client: L{Client<interfaces.IClient>}\n        """'
newline|'\n'
name|'if'
name|'not'
name|'client'
name|'in'
name|'self'
op|'.'
name|'clients'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'clients'
op|'.'
name|'append'
op|'('
name|'client'
op|')'
newline|'\n'
nl|'\n'
DECL|member|unregisterAccountClient
dedent|''
dedent|''
name|'def'
name|'unregisterAccountClient'
op|'('
name|'self'
op|','
name|'client'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Notify the user that an account client has been signed off\n        or disconnected from.\n\n        @type client: L{Client<interfaces.IClient>}\n        """'
newline|'\n'
name|'if'
name|'client'
name|'in'
name|'self'
op|'.'
name|'clients'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'clients'
op|'.'
name|'remove'
op|'('
name|'client'
op|')'
newline|'\n'
nl|'\n'
DECL|member|contactChangedNick
dedent|''
dedent|''
name|'def'
name|'contactChangedNick'
op|'('
name|'self'
op|','
name|'person'
op|','
name|'newnick'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'oldname'
op|'='
name|'person'
op|'.'
name|'name'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'contacts'
op|'.'
name|'has_key'
op|'('
name|'oldname'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'self'
op|'.'
name|'contacts'
op|'['
name|'oldname'
op|']'
newline|'\n'
name|'person'
op|'.'
name|'name'
op|'='
name|'newnick'
newline|'\n'
name|'self'
op|'.'
name|'contacts'
op|'['
name|'newnick'
op|']'
op|'='
name|'person'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'onlineContacts'
op|'.'
name|'has_key'
op|'('
name|'oldname'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'del'
name|'self'
op|'.'
name|'onlineContacts'
op|'['
name|'oldname'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'onlineContacts'
op|'['
name|'newnick'
op|']'
op|'='
name|'person'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Conversation
dedent|''
dedent|''
dedent|''
dedent|''
name|'class'
name|'Conversation'
op|':'
newline|'\n'
indent|'    '
string|'"""A GUI window of a conversation with a specific person"""'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'person'
op|','
name|'chatui'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        @type person: L{Person<interfaces.IPerson>}\n        @type chatui: L{ChatUI}\n        """'
newline|'\n'
name|'self'
op|'.'
name|'chatui'
op|'='
name|'chatui'
newline|'\n'
name|'self'
op|'.'
name|'person'
op|'='
name|'person'
newline|'\n'
nl|'\n'
DECL|member|show
dedent|''
name|'def'
name|'show'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Displays the ConversationWindow"""'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
string|'"Subclasses must implement this method"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|hide
dedent|''
name|'def'
name|'hide'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Hides the ConversationWindow"""'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
string|'"Subclasses must implement this method"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|sendText
dedent|''
name|'def'
name|'sendText'
op|'('
name|'self'
op|','
name|'text'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Sends text to the person with whom the user is conversing.\n\n        @returntype: L{Deferred<twisted.internet.defer.Deferred>}\n        """'
newline|'\n'
name|'self'
op|'.'
name|'person'
op|'.'
name|'sendMessage'
op|'('
name|'text'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|showMessage
dedent|''
name|'def'
name|'showMessage'
op|'('
name|'self'
op|','
name|'text'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Display a message sent from the person with whom she is conversing\n\n        @type text: string\n        @type metadata: dict\n        """'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
string|'"Subclasses must implement this method"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|contactChangedNick
dedent|''
name|'def'
name|'contactChangedNick'
op|'('
name|'self'
op|','
name|'person'
op|','
name|'newnick'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Change a person\'s name.\n\n        @type person: L{Person<interfaces.IPerson>}\n        @type newnick: string\n        """'
newline|'\n'
name|'self'
op|'.'
name|'person'
op|'.'
name|'name'
op|'='
name|'newnick'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|GroupConversation
dedent|''
dedent|''
name|'class'
name|'GroupConversation'
op|':'
newline|'\n'
indent|'    '
string|'"""A conversation with a group of people."""'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'chatui'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        @type group: L{Group<interfaces.IGroup>}\n        @param chatui: ???\n        @type chatui: L{ChatUI}\n        """'
newline|'\n'
name|'self'
op|'.'
name|'chatui'
op|'='
name|'chatui'
newline|'\n'
name|'self'
op|'.'
name|'group'
op|'='
name|'group'
newline|'\n'
name|'self'
op|'.'
name|'members'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|show
dedent|''
name|'def'
name|'show'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Displays the GroupConversationWindow."""'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
string|'"Subclasses must implement this method"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|hide
dedent|''
name|'def'
name|'hide'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Hides the GroupConversationWindow."""'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
string|'"Subclasses must implement this method"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|sendText
dedent|''
name|'def'
name|'sendText'
op|'('
name|'self'
op|','
name|'text'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Sends text to the group.\n\n        @type text: string\n        @returntype: L{Deferred<twisted.internet.defer.Deferred>}\n        """'
newline|'\n'
name|'self'
op|'.'
name|'group'
op|'.'
name|'sendGroupMessage'
op|'('
name|'text'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|showGroupMessage
dedent|''
name|'def'
name|'showGroupMessage'
op|'('
name|'self'
op|','
name|'sender'
op|','
name|'text'
op|','
name|'metadata'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Displays to the user a message sent to this group from the given sender\n        @type sender: string (XXX: Not Person?)\n        @type text: string\n        @type metadata: dict\n        """'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
string|'"Subclasses must implement this method"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|setGroupMembers
dedent|''
name|'def'
name|'setGroupMembers'
op|'('
name|'self'
op|','
name|'members'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Sets the list of members in the group and displays it to the user\n        """'
newline|'\n'
name|'self'
op|'.'
name|'members'
op|'='
name|'members'
newline|'\n'
nl|'\n'
DECL|member|setTopic
dedent|''
name|'def'
name|'setTopic'
op|'('
name|'self'
op|','
name|'topic'
op|','
name|'author'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Displays the topic (from the server) for the group conversation window\n\n        @type topic: string\n        @type author: string (XXX: Not Person?)\n        """'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
string|'"Subclasses must implement this method"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|memberJoined
dedent|''
name|'def'
name|'memberJoined'
op|'('
name|'self'
op|','
name|'member'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Adds the given member to the list of members in the group conversation\n        and displays this to the user\n\n        @type member: string (XXX: Not Person?)\n        """'
newline|'\n'
name|'if'
name|'not'
name|'member'
name|'in'
name|'self'
op|'.'
name|'members'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'members'
op|'.'
name|'append'
op|'('
name|'member'
op|')'
newline|'\n'
nl|'\n'
DECL|member|memberChangedNick
dedent|''
dedent|''
name|'def'
name|'memberChangedNick'
op|'('
name|'self'
op|','
name|'oldnick'
op|','
name|'newnick'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Changes the oldnick in the list of members to newnick and displays this\n        change to the user\n\n        @type oldnick: string\n        @type newnick: string\n        """'
newline|'\n'
name|'if'
name|'oldnick'
name|'in'
name|'self'
op|'.'
name|'members'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'members'
op|'.'
name|'remove'
op|'('
name|'oldnick'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'members'
op|'.'
name|'append'
op|'('
name|'newnick'
op|')'
newline|'\n'
comment|'#self.chatui.contactChangedNick(oldnick, newnick)'
nl|'\n'
nl|'\n'
DECL|member|memberLeft
dedent|''
dedent|''
name|'def'
name|'memberLeft'
op|'('
name|'self'
op|','
name|'member'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Deletes the given member from the list of members in the group\n        conversation and displays the change to the user\n\n        @type member: string\n        """'
newline|'\n'
name|'if'
name|'member'
name|'in'
name|'self'
op|'.'
name|'members'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'members'
op|'.'
name|'remove'
op|'('
name|'member'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ChatUI
dedent|''
dedent|''
dedent|''
name|'class'
name|'ChatUI'
op|':'
newline|'\n'
indent|'    '
string|'"""A GUI chat client"""'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'conversations'
op|'='
op|'{'
op|'}'
comment|'# cache of all direct windows'
newline|'\n'
name|'self'
op|'.'
name|'groupConversations'
op|'='
op|'{'
op|'}'
comment|'# cache of all group windows'
newline|'\n'
name|'self'
op|'.'
name|'persons'
op|'='
op|'{'
op|'}'
comment|'# keys are (name, client)'
newline|'\n'
name|'self'
op|'.'
name|'groups'
op|'='
op|'{'
op|'}'
comment|'# cache of all groups'
newline|'\n'
name|'self'
op|'.'
name|'onlineClients'
op|'='
op|'['
op|']'
comment|'# list of message sources currently online'
newline|'\n'
name|'self'
op|'.'
name|'contactsList'
op|'='
name|'ContactsList'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|registerAccountClient
dedent|''
name|'def'
name|'registerAccountClient'
op|'('
name|'self'
op|','
name|'client'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Notifies user that an account has been signed on to.\n\n        @type client: L{Client<interfaces.IClient>}\n        @returns: client, so that I may be used in a callback chain\n        """'
newline|'\n'
name|'print'
string|'"signing onto"'
op|','
name|'client'
op|'.'
name|'accountName'
newline|'\n'
name|'self'
op|'.'
name|'onlineClients'
op|'.'
name|'append'
op|'('
name|'client'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'contactsList'
op|'.'
name|'registerAccountClient'
op|'('
name|'client'
op|')'
newline|'\n'
name|'return'
name|'client'
newline|'\n'
nl|'\n'
DECL|member|unregisterAccountClient
dedent|''
name|'def'
name|'unregisterAccountClient'
op|'('
name|'self'
op|','
name|'client'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Notifies user that an account has been signed off or disconnected\n\n        @type client: L{Client<interfaces.IClient>}\n        """'
newline|'\n'
name|'print'
string|'"signing off from"'
op|','
name|'client'
op|'.'
name|'accountName'
newline|'\n'
name|'self'
op|'.'
name|'onlineClients'
op|'.'
name|'remove'
op|'('
name|'client'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'contactsList'
op|'.'
name|'unregisterAccountClient'
op|'('
name|'client'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getContactsList
dedent|''
name|'def'
name|'getContactsList'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        @returntype: L{ContactsList}\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'contactsList'
newline|'\n'
nl|'\n'
DECL|member|getConversation
dedent|''
name|'def'
name|'getConversation'
op|'('
name|'self'
op|','
name|'person'
op|','
name|'Class'
op|'='
name|'Conversation'
op|','
name|'stayHidden'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""For the given person object, returns the conversation window\n        or creates and returns a new conversation window if one does not exist.\n\n        @type person: L{Person<interfaces.IPerson>}\n        @type Class: L{Conversation<interfaces.IConversation>} class\n        @type stayHidden: boolean\n\n        @returntype: L{Conversation<interfaces.IConversation>}\n        """'
newline|'\n'
name|'conv'
op|'='
name|'self'
op|'.'
name|'conversations'
op|'.'
name|'get'
op|'('
name|'person'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'conv'
op|':'
newline|'\n'
indent|'            '
name|'conv'
op|'='
name|'Class'
op|'('
name|'person'
op|','
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conversations'
op|'['
name|'person'
op|']'
op|'='
name|'conv'
newline|'\n'
dedent|''
name|'if'
name|'stayHidden'
op|':'
newline|'\n'
indent|'            '
name|'conv'
op|'.'
name|'hide'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'conv'
op|'.'
name|'show'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'conv'
newline|'\n'
nl|'\n'
DECL|member|getGroupConversation
dedent|''
name|'def'
name|'getGroupConversation'
op|'('
name|'self'
op|','
name|'group'
op|','
name|'Class'
op|'='
name|'GroupConversation'
op|','
name|'stayHidden'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""For the given group object, returns the group conversation window or\n        creates and returns a new group conversation window if it doesn\'t exist\n\n        @type group: L{Group<interfaces.IGroup>}\n        @type Class: L{Conversation<interfaces.IConversation>} class\n        @type stayHidden: boolean\n\n        @returntype: L{GroupConversation<interfaces.IGroupConversation>}\n        """'
newline|'\n'
name|'conv'
op|'='
name|'self'
op|'.'
name|'groupConversations'
op|'.'
name|'get'
op|'('
name|'group'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'conv'
op|':'
newline|'\n'
indent|'            '
name|'conv'
op|'='
name|'Class'
op|'('
name|'group'
op|','
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'groupConversations'
op|'['
name|'group'
op|']'
op|'='
name|'conv'
newline|'\n'
dedent|''
name|'if'
name|'stayHidden'
op|':'
newline|'\n'
indent|'            '
name|'conv'
op|'.'
name|'hide'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'conv'
op|'.'
name|'show'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'conv'
newline|'\n'
nl|'\n'
DECL|member|getPerson
dedent|''
name|'def'
name|'getPerson'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'client'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""For the given name and account client, returns the instance of the\n        AbstractPerson subclass, or creates and returns a new AbstractPerson\n        subclass of the type Class\n\n        @type name: string\n        @type client: L{Client<interfaces.IClient>}\n\n        @returntype: L{Person<interfaces.IPerson>}\n        """'
newline|'\n'
name|'account'
op|'='
name|'client'
op|'.'
name|'account'
newline|'\n'
name|'p'
op|'='
name|'self'
op|'.'
name|'persons'
op|'.'
name|'get'
op|'('
op|'('
name|'name'
op|','
name|'account'
op|')'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'p'
op|':'
newline|'\n'
indent|'            '
name|'p'
op|'='
name|'account'
op|'.'
name|'getPerson'
op|'('
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'persons'
op|'['
name|'name'
op|','
name|'account'
op|']'
op|'='
name|'p'
newline|'\n'
dedent|''
name|'return'
name|'p'
newline|'\n'
nl|'\n'
DECL|member|getGroup
dedent|''
name|'def'
name|'getGroup'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'client'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""For the given name and account client, returns the instance of the\n        AbstractGroup subclass, or creates and returns a new AbstractGroup\n        subclass of the type Class\n\n        @type name: string\n        @type client: L{Client<interfaces.IClient>}\n\n        @returntype: L{Group<interfaces.IGroup>}\n        """'
newline|'\n'
comment|"# I accept 'client' instead of 'account' in my signature for"
nl|'\n'
comment|'# backwards compatibility.  (Groups changed to be Account-oriented'
nl|'\n'
comment|'# in CVS revision 1.8.)'
nl|'\n'
name|'account'
op|'='
name|'client'
op|'.'
name|'account'
newline|'\n'
name|'g'
op|'='
name|'self'
op|'.'
name|'groups'
op|'.'
name|'get'
op|'('
op|'('
name|'name'
op|','
name|'account'
op|')'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'g'
op|':'
newline|'\n'
indent|'            '
name|'g'
op|'='
name|'account'
op|'.'
name|'getGroup'
op|'('
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'groups'
op|'['
name|'name'
op|','
name|'account'
op|']'
op|'='
name|'g'
newline|'\n'
dedent|''
name|'return'
name|'g'
newline|'\n'
nl|'\n'
DECL|member|contactChangedNick
dedent|''
name|'def'
name|'contactChangedNick'
op|'('
name|'self'
op|','
name|'oldnick'
op|','
name|'newnick'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""For the given person, changes the person\'s name to newnick, and\n        tells the contact list and any conversation windows with that person\n        to change as well.\n\n        @type oldnick: string\n        @type newnick: string\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'persons'
op|'.'
name|'has_key'
op|'('
op|'('
name|'person'
op|'.'
name|'name'
op|','
name|'person'
op|'.'
name|'account'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'conv'
op|'='
name|'self'
op|'.'
name|'conversations'
op|'.'
name|'get'
op|'('
name|'person'
op|')'
newline|'\n'
name|'if'
name|'conv'
op|':'
newline|'\n'
indent|'                '
name|'conv'
op|'.'
name|'contactChangedNick'
op|'('
name|'person'
op|','
name|'newnick'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'contactsList'
op|'.'
name|'contactChangedNick'
op|'('
name|'person'
op|','
name|'newnick'
op|')'
newline|'\n'
nl|'\n'
name|'del'
name|'self'
op|'.'
name|'persons'
op|'['
name|'person'
op|'.'
name|'name'
op|','
name|'person'
op|'.'
name|'account'
op|']'
newline|'\n'
name|'person'
op|'.'
name|'name'
op|'='
name|'newnick'
newline|'\n'
name|'self'
op|'.'
name|'persons'
op|'['
name|'person'
op|'.'
name|'name'
op|','
name|'person'
op|'.'
name|'account'
op|']'
op|'='
name|'person'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
