begin_unit
comment|'# Copyright (c) 2001-2004 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
comment|'#'
nl|'\n'
nl|'\n'
string|'"""Instance Messenger base classes for protocol support.\n\nYou will find these useful if you\'re adding a new protocol to IM.\n"""'
newline|'\n'
nl|'\n'
comment|'# Abstract representation of chat "model" classes'
nl|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'words'
op|'.'
name|'im'
op|'.'
name|'locals'
name|'import'
name|'ONLINE'
op|','
name|'OFFLINE'
op|','
name|'OfflineError'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'words'
op|'.'
name|'im'
name|'import'
name|'interfaces'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'protocol'
name|'import'
name|'Protocol'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'reflect'
name|'import'
name|'prefixedMethods'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'persisted'
name|'import'
name|'styles'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'error'
newline|'\n'
nl|'\n'
DECL|class|AbstractGroup
name|'class'
name|'AbstractGroup'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'account'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'account'
op|'='
name|'account'
newline|'\n'
nl|'\n'
DECL|member|getGroupCommands
dedent|''
name|'def'
name|'getGroupCommands'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""finds group commands\n\n        these commands are methods on me that start with imgroup_; they are\n        called with no arguments\n        """'
newline|'\n'
name|'return'
name|'prefixedMethods'
op|'('
name|'self'
op|','
string|'"imgroup_"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getTargetCommands
dedent|''
name|'def'
name|'getTargetCommands'
op|'('
name|'self'
op|','
name|'target'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""finds group commands\n\n        these commands are methods on me that start with imgroup_; they are\n        called with a user present within this room as an argument\n\n        you may want to override this in your group in order to filter for\n        appropriate commands on the given user\n        """'
newline|'\n'
name|'return'
name|'prefixedMethods'
op|'('
name|'self'
op|','
string|'"imtarget_"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|join
dedent|''
name|'def'
name|'join'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'account'
op|'.'
name|'client'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'OfflineError'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'account'
op|'.'
name|'client'
op|'.'
name|'joinGroup'
op|'('
name|'self'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|leave
dedent|''
name|'def'
name|'leave'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'account'
op|'.'
name|'client'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'OfflineError'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'account'
op|'.'
name|'client'
op|'.'
name|'leaveGroup'
op|'('
name|'self'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'<%s %r>'"
op|'%'
op|'('
name|'self'
op|'.'
name|'__class__'
op|','
name|'self'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'%s@%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'name'
op|','
name|'self'
op|'.'
name|'account'
op|'.'
name|'accountName'
op|')'
newline|'\n'
nl|'\n'
DECL|class|AbstractPerson
dedent|''
dedent|''
name|'class'
name|'AbstractPerson'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'baseAccount'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'account'
op|'='
name|'baseAccount'
newline|'\n'
name|'self'
op|'.'
name|'status'
op|'='
name|'OFFLINE'
newline|'\n'
nl|'\n'
DECL|member|getPersonCommands
dedent|''
name|'def'
name|'getPersonCommands'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""finds person commands\n\n        these commands are methods on me that start with imperson_; they are\n        called with no arguments\n        """'
newline|'\n'
name|'return'
name|'prefixedMethods'
op|'('
name|'self'
op|','
string|'"imperson_"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getIdleTime
dedent|''
name|'def'
name|'getIdleTime'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns a string.\n        """'
newline|'\n'
name|'return'
string|"'--'"
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'<%s %r/%s>'"
op|'%'
op|'('
name|'self'
op|'.'
name|'__class__'
op|','
name|'self'
op|'.'
name|'name'
op|','
name|'self'
op|'.'
name|'status'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'%s@%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'name'
op|','
name|'self'
op|'.'
name|'account'
op|'.'
name|'accountName'
op|')'
newline|'\n'
nl|'\n'
DECL|class|AbstractClientMixin
dedent|''
dedent|''
name|'class'
name|'AbstractClientMixin'
op|':'
newline|'\n'
indent|'    '
string|'"""Designed to be mixed in to a Protocol implementing class.\n\n    Inherit from me first.\n\n    @ivar _logonDeferred: Fired when I am done logging in.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'account'
op|','
name|'chatui'
op|','
name|'logonDeferred'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'base'
name|'in'
name|'self'
op|'.'
name|'__class__'
op|'.'
name|'__bases__'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'issubclass'
op|'('
name|'base'
op|','
name|'Protocol'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'__class__'
op|'.'
name|'_protoBase'
op|'='
name|'base'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'account'
op|'='
name|'account'
newline|'\n'
name|'self'
op|'.'
name|'chat'
op|'='
name|'chatui'
newline|'\n'
name|'self'
op|'.'
name|'_logonDeferred'
op|'='
name|'logonDeferred'
newline|'\n'
nl|'\n'
DECL|member|connectionMade
dedent|''
name|'def'
name|'connectionMade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_protoBase'
op|'.'
name|'connectionMade'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|connectionLost
dedent|''
name|'def'
name|'connectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'account'
op|'.'
name|'_clientLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'unregisterAsAccountClient'
op|'('
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_protoBase'
op|'.'
name|'connectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
newline|'\n'
nl|'\n'
DECL|member|unregisterAsAccountClient
dedent|''
name|'def'
name|'unregisterAsAccountClient'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Tell the chat UI that I have `signed off\'.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'chat'
op|'.'
name|'unregisterAccountClient'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AbstractAccount
dedent|''
dedent|''
name|'class'
name|'AbstractAccount'
op|'('
name|'styles'
op|'.'
name|'Versioned'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Base class for Accounts.\n\n    I am the start of an implementation of L{IAccount<interfaces.IAccount>}, I\n    implement L{isOnline} and most of L{logOn}, though you\'ll need to implement\n    L{_startLogOn} in a subclass.\n\n    @cvar _groupFactory: A Callable that will return a L{IGroup} appropriate\n        for this account type.\n    @cvar _personFactory: A Callable that will return a L{IPerson} appropriate\n        for this account type.\n\n    @type _isConnecting: boolean\n    @ivar _isConnecting: Whether I am in the process of establishing a\n    connection to the server.\n    @type _isOnline: boolean\n    @ivar _isOnline: Whether I am currently on-line with the server.\n\n    @ivar accountName:\n    @ivar autoLogin:\n    @ivar username:\n    @ivar password:\n    @ivar host:\n    @ivar port:\n    """'
newline|'\n'
nl|'\n'
DECL|variable|_isOnline
name|'_isOnline'
op|'='
number|'0'
newline|'\n'
DECL|variable|_isConnecting
name|'_isConnecting'
op|'='
number|'0'
newline|'\n'
DECL|variable|client
name|'client'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|variable|_groupFactory
name|'_groupFactory'
op|'='
name|'AbstractGroup'
newline|'\n'
DECL|variable|_personFactory
name|'_personFactory'
op|'='
name|'AbstractPerson'
newline|'\n'
nl|'\n'
DECL|variable|persistanceVersion
name|'persistanceVersion'
op|'='
number|'2'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'accountName'
op|','
name|'autoLogin'
op|','
name|'username'
op|','
name|'password'
op|','
name|'host'
op|','
name|'port'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'accountName'
op|'='
name|'accountName'
newline|'\n'
name|'self'
op|'.'
name|'autoLogin'
op|'='
name|'autoLogin'
newline|'\n'
name|'self'
op|'.'
name|'username'
op|'='
name|'username'
newline|'\n'
name|'self'
op|'.'
name|'password'
op|'='
name|'password'
newline|'\n'
name|'self'
op|'.'
name|'host'
op|'='
name|'host'
newline|'\n'
name|'self'
op|'.'
name|'port'
op|'='
name|'port'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_groups'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_persons'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|upgrateToVersion2
dedent|''
name|'def'
name|'upgrateToVersion2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Added in CVS revision 1.16.'
nl|'\n'
indent|'        '
name|'for'
name|'k'
name|'in'
op|'('
string|"'_groups'"
op|','
string|"'_persons'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'self'
op|','
name|'k'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'setattr'
op|'('
name|'self'
op|','
name|'k'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__getstate__
dedent|''
dedent|''
dedent|''
name|'def'
name|'__getstate__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'state'
op|'='
name|'styles'
op|'.'
name|'Versioned'
op|'.'
name|'__getstate__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'for'
name|'k'
name|'in'
op|'('
string|"'client'"
op|','
string|"'_isOnline'"
op|','
string|"'_isConnecting'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'del'
name|'state'
op|'['
name|'k'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'state'
newline|'\n'
nl|'\n'
DECL|member|isOnline
dedent|''
name|'def'
name|'isOnline'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_isOnline'
newline|'\n'
nl|'\n'
DECL|member|logOn
dedent|''
name|'def'
name|'logOn'
op|'('
name|'self'
op|','
name|'chatui'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Log on to this account.\n\n        Takes care to not start a connection if a connection is\n        already in progress.  You will need to implement\n        L{_startLogOn} for this to work, and it would be a good idea\n        to override L{_loginFailed} too.\n\n        @returntype: Deferred L{interfaces.IClient}\n        """'
newline|'\n'
name|'if'
op|'('
name|'not'
name|'self'
op|'.'
name|'_isConnecting'
op|')'
name|'and'
op|'('
name|'not'
name|'self'
op|'.'
name|'_isOnline'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_isConnecting'
op|'='
number|'1'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'_startLogOn'
op|'('
name|'chatui'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cb_logOn'
op|')'
newline|'\n'
comment|'# if chatui is not None:'
nl|'\n'
comment|"# (I don't particularly like having to pass chatUI to this function,"
nl|'\n'
comment|"# but we haven't factored it out yet.)"
nl|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'chatui'
op|'.'
name|'registerAccountClient'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_loginFailed'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'error'
op|'.'
name|'ConnectError'
op|'('
string|'"Connection in progress"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getGroup
dedent|''
dedent|''
name|'def'
name|'getGroup'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Group factory.\n\n        @param name: Name of the group on this account.\n        @type name: string\n        """'
newline|'\n'
name|'group'
op|'='
name|'self'
op|'.'
name|'_groups'
op|'.'
name|'get'
op|'('
name|'name'
op|')'
newline|'\n'
name|'if'
name|'group'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'group'
op|'='
name|'self'
op|'.'
name|'_groupFactory'
op|'('
name|'name'
op|','
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_groups'
op|'['
name|'name'
op|']'
op|'='
name|'group'
newline|'\n'
dedent|''
name|'return'
name|'group'
newline|'\n'
nl|'\n'
DECL|member|getPerson
dedent|''
name|'def'
name|'getPerson'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Person factory.\n\n        @param name: Name of the person on this account.\n        @type name: string\n        """'
newline|'\n'
name|'person'
op|'='
name|'self'
op|'.'
name|'_persons'
op|'.'
name|'get'
op|'('
name|'name'
op|')'
newline|'\n'
name|'if'
name|'person'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'person'
op|'='
name|'self'
op|'.'
name|'_personFactory'
op|'('
name|'name'
op|','
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_persons'
op|'['
name|'name'
op|']'
op|'='
name|'person'
newline|'\n'
dedent|''
name|'return'
name|'person'
newline|'\n'
nl|'\n'
DECL|member|_startLogOn
dedent|''
name|'def'
name|'_startLogOn'
op|'('
name|'self'
op|','
name|'chatui'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Start the sign on process.\n\n        Factored out of L{logOn}.\n\n        @returntype: Deferred L{interfaces.IClient}\n        """'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cb_logOn
dedent|''
name|'def'
name|'_cb_logOn'
op|'('
name|'self'
op|','
name|'client'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_isConnecting'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'_isOnline'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'='
name|'client'
newline|'\n'
name|'return'
name|'client'
newline|'\n'
nl|'\n'
DECL|member|_loginFailed
dedent|''
name|'def'
name|'_loginFailed'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Errorback for L{logOn}.\n\n        @type reason: Failure\n\n        @returns: I{reason}, for further processing in the callback chain.\n        @returntype: Failure\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_isConnecting'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'_isOnline'
op|'='
number|'0'
comment|'# just in case'
newline|'\n'
name|'return'
name|'reason'
newline|'\n'
nl|'\n'
DECL|member|_clientLost
dedent|''
name|'def'
name|'_clientLost'
op|'('
name|'self'
op|','
name|'client'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'client'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_isConnecting'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'_isOnline'
op|'='
number|'0'
newline|'\n'
name|'return'
name|'reason'
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|'"<%s: %s (%s@%s:%s)>"'
op|'%'
op|'('
name|'self'
op|'.'
name|'__class__'
op|','
nl|'\n'
name|'self'
op|'.'
name|'accountName'
op|','
nl|'\n'
name|'self'
op|'.'
name|'username'
op|','
nl|'\n'
name|'self'
op|'.'
name|'host'
op|','
nl|'\n'
name|'self'
op|'.'
name|'port'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
