begin_unit
comment|'# Copyright (c) 2009 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nTests for IRC portions of L{twisted.words.service}.\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'test'
name|'import'
name|'proto_helpers'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'words'
op|'.'
name|'service'
name|'import'
name|'InMemoryWordsRealm'
op|','
name|'IRCFactory'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'words'
op|'.'
name|'protocols'
name|'import'
name|'irc'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'cred'
name|'import'
name|'checkers'
op|','
name|'portal'
newline|'\n'
nl|'\n'
DECL|class|IRCUserTestCase
name|'class'
name|'IRCUserTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Isolated tests for L{IRCUser}\n    """'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Sets up a Realm, Portal, Factory, IRCUser, Transport, and Connection\n        for our tests.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'wordsRealm'
op|'='
name|'InMemoryWordsRealm'
op|'('
string|'"example.com"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'portal'
op|'='
name|'portal'
op|'.'
name|'Portal'
op|'('
name|'self'
op|'.'
name|'wordsRealm'
op|','
nl|'\n'
op|'['
name|'checkers'
op|'.'
name|'InMemoryUsernamePasswordDatabaseDontUse'
op|'('
name|'john'
op|'='
string|'"pass"'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'factory'
op|'='
name|'IRCFactory'
op|'('
name|'self'
op|'.'
name|'wordsRealm'
op|','
name|'self'
op|'.'
name|'portal'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ircUser'
op|'='
name|'self'
op|'.'
name|'factory'
op|'.'
name|'buildProtocol'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stringTransport'
op|'='
name|'proto_helpers'
op|'.'
name|'StringTransport'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ircUser'
op|'.'
name|'makeConnection'
op|'('
name|'self'
op|'.'
name|'stringTransport'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_sendMessage
dedent|''
name|'def'
name|'test_sendMessage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Sending a message to a user after they have sent NICK, but before they\n        have authenticated, results in a message from "example.com".\n        """'
newline|'\n'
name|'self'
op|'.'
name|'ircUser'
op|'.'
name|'irc_NICK'
op|'('
string|'""'
op|','
op|'['
string|'"mynick"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stringTransport'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ircUser'
op|'.'
name|'sendMessage'
op|'('
string|'"foo"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|'":example.com foo mynick\\r\\n"'
op|','
nl|'\n'
name|'self'
op|'.'
name|'stringTransport'
op|'.'
name|'value'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|response
dedent|''
name|'def'
name|'response'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Grabs our responses and then clears the transport\n        """'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'ircUser'
op|'.'
name|'transport'
op|'.'
name|'value'
op|'('
op|')'
op|'.'
name|'splitlines'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ircUser'
op|'.'
name|'transport'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
name|'return'
name|'map'
op|'('
name|'irc'
op|'.'
name|'parsemsg'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|scanResponse
dedent|''
name|'def'
name|'scanResponse'
op|'('
name|'self'
op|','
name|'response'
op|','
name|'messageType'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Gets messages out of a response\n        \n        @param response: The parsed IRC messages of the response, as returned\n        by L{IRCServiceTestCase.response}\n        \n        @param messageType: The string type of the desired messages.\n        \n        @return: An iterator which yields 2-tuples of C{(index, ircMessage)}\n        """'
newline|'\n'
name|'for'
name|'n'
op|','
name|'message'
name|'in'
name|'enumerate'
op|'('
name|'response'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
op|'('
name|'message'
op|'['
number|'1'
op|']'
op|'=='
name|'messageType'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'yield'
name|'n'
op|','
name|'message'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_sendNickSendsGreeting
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_sendNickSendsGreeting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Receiving NICK without authenticating sends the MOTD Start and MOTD End\n        messages, which is required by certain popular IRC clients (such as\n        Pidgin) before a connection is considered to be fully established.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'ircUser'
op|'.'
name|'irc_NICK'
op|'('
string|'""'
op|','
op|'['
string|'"mynick"'
op|']'
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'response'
op|'('
op|')'
newline|'\n'
name|'start'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'scanResponse'
op|'('
name|'response'
op|','
name|'irc'
op|'.'
name|'RPL_MOTDSTART'
op|')'
op|')'
newline|'\n'
name|'end'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'scanResponse'
op|'('
name|'response'
op|','
name|'irc'
op|'.'
name|'RPL_ENDOFMOTD'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'start'
op|','
nl|'\n'
op|'['
op|'('
number|'0'
op|','
op|'('
string|"'example.com'"
op|','
string|"'375'"
op|','
op|'['
string|"'mynick'"
op|','
string|"'- example.com Message of the Day - '"
op|']'
op|')'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'end'
op|','
nl|'\n'
op|'['
op|'('
number|'1'
op|','
op|'('
string|"'example.com'"
op|','
string|"'376'"
op|','
op|'['
string|"'mynick'"
op|','
string|"'End of /MOTD command.'"
op|']'
op|')'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_fullLogin
dedent|''
name|'def'
name|'test_fullLogin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Receiving USER, PASS, NICK will log in the user, and transmit the\n        appropriate response messages.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'ircUser'
op|'.'
name|'irc_USER'
op|'('
string|'""'
op|','
op|'['
string|'"john doe"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ircUser'
op|'.'
name|'irc_PASS'
op|'('
string|'""'
op|','
op|'['
string|'"pass"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ircUser'
op|'.'
name|'irc_NICK'
op|'('
string|'""'
op|','
op|'['
string|'"john"'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'version'
op|'='
op|'('
string|"'Your host is example.com, running version %s'"
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'factory'
op|'.'
name|'_serverInfo'
op|'['
string|'"serviceVersion"'
op|']'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'creation'
op|'='
op|'('
string|"'This server was created on %s'"
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'factory'
op|'.'
name|'_serverInfo'
op|'['
string|'"creationDate"'
op|']'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'response'
op|'('
op|')'
op|','
nl|'\n'
op|'['
op|'('
string|"'example.com'"
op|','
string|"'375'"
op|','
nl|'\n'
op|'['
string|"'john'"
op|','
string|"'- example.com Message of the Day - '"
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'example.com'"
op|','
string|"'376'"
op|','
op|'['
string|"'john'"
op|','
string|"'End of /MOTD command.'"
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'example.com'"
op|','
string|"'001'"
op|','
op|'['
string|"'john'"
op|','
string|"'connected to Twisted IRC'"
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'example.com'"
op|','
string|"'002'"
op|','
op|'['
string|"'john'"
op|','
name|'version'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'example.com'"
op|','
string|"'003'"
op|','
op|'['
string|"'john'"
op|','
name|'creation'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|"'example.com'"
op|','
string|"'004'"
op|','
nl|'\n'
op|'['
string|"'john'"
op|','
string|"'example.com'"
op|','
name|'self'
op|'.'
name|'factory'
op|'.'
name|'_serverInfo'
op|'['
string|'"serviceVersion"'
op|']'
op|','
nl|'\n'
string|"'w'"
op|','
string|"'n'"
op|']'
op|')'
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
