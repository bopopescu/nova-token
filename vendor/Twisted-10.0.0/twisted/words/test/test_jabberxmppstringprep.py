begin_unit
comment|'# Copyright (c) 2005 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
name|'import'
name|'unittest'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'words'
op|'.'
name|'protocols'
op|'.'
name|'jabber'
op|'.'
name|'xmpp_stringprep'
name|'import'
name|'nodeprep'
op|','
name|'resourceprep'
op|','
name|'nameprep'
op|','
name|'crippled'
newline|'\n'
nl|'\n'
DECL|class|XMPPStringPrepTest
name|'class'
name|'XMPPStringPrepTest'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n\n    The nodeprep stringprep profile is similar to the resourceprep profile,\n    but does an extra mapping of characters (table B.2) and disallows\n    more characters (table C.1.1 and eight extra punctuation characters).\n    Due to this similarity, the resourceprep tests are more extensive, and\n    the nodeprep tests only address the mappings additional restrictions.\n\n    The nameprep profile is nearly identical to the nameprep implementation in\n    L{encodings.idna}, but that implementation assumes the C{UseSTD4ASCIIRules}\n    flag to be false. This implementation assumes it to be true, and restricts\n    the allowed set of characters.  The tests here only check for the\n    differences.\n    \n    """'
newline|'\n'
nl|'\n'
DECL|member|testResourcePrep
name|'def'
name|'testResourcePrep'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resourceprep'
op|'.'
name|'prepare'
op|'('
string|"u'resource'"
op|')'
op|','
string|"u'resource'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEquals'
op|'('
name|'resourceprep'
op|'.'
name|'prepare'
op|'('
string|"u'Resource'"
op|')'
op|','
string|"u'resource'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resourceprep'
op|'.'
name|'prepare'
op|'('
string|"u' '"
op|')'
op|','
string|"u' '"
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'crippled'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resourceprep'
op|'.'
name|'prepare'
op|'('
string|"u'Henry \\u2163'"
op|')'
op|','
string|"u'Henry IV'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resourceprep'
op|'.'
name|'prepare'
op|'('
string|"u'foo\\xad\\u034f\\u1806\\u180b'"
nl|'\n'
string|"u'bar\\u200b\\u2060'"
nl|'\n'
string|"u'baz\\ufe00\\ufe08\\ufe0f\\ufeff'"
op|')'
op|','
nl|'\n'
string|"u'foobarbaz'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resourceprep'
op|'.'
name|'prepare'
op|'('
string|"u'\\u00a0'"
op|')'
op|','
string|"u' '"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnicodeError'
op|','
name|'resourceprep'
op|'.'
name|'prepare'
op|','
string|"u'\\u1680'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resourceprep'
op|'.'
name|'prepare'
op|'('
string|"u'\\u2000'"
op|')'
op|','
string|"u' '"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resourceprep'
op|'.'
name|'prepare'
op|'('
string|"u'\\u200b'"
op|')'
op|','
string|"u''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnicodeError'
op|','
name|'resourceprep'
op|'.'
name|'prepare'
op|','
string|"u'\\u0010\\u007f'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnicodeError'
op|','
name|'resourceprep'
op|'.'
name|'prepare'
op|','
string|"u'\\u0085'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnicodeError'
op|','
name|'resourceprep'
op|'.'
name|'prepare'
op|','
string|"u'\\u180e'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resourceprep'
op|'.'
name|'prepare'
op|'('
string|"u'\\ufeff'"
op|')'
op|','
string|"u''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnicodeError'
op|','
name|'resourceprep'
op|'.'
name|'prepare'
op|','
string|"u'\\uf123'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnicodeError'
op|','
name|'resourceprep'
op|'.'
name|'prepare'
op|','
string|"u'\\U000f1234'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnicodeError'
op|','
name|'resourceprep'
op|'.'
name|'prepare'
op|','
string|"u'\\U0010f234'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnicodeError'
op|','
name|'resourceprep'
op|'.'
name|'prepare'
op|','
string|"u'\\U0008fffe'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnicodeError'
op|','
name|'resourceprep'
op|'.'
name|'prepare'
op|','
string|"u'\\U0010ffff'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnicodeError'
op|','
name|'resourceprep'
op|'.'
name|'prepare'
op|','
string|"u'\\udf42'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnicodeError'
op|','
name|'resourceprep'
op|'.'
name|'prepare'
op|','
string|"u'\\ufffd'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnicodeError'
op|','
name|'resourceprep'
op|'.'
name|'prepare'
op|','
string|"u'\\u2ff5'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resourceprep'
op|'.'
name|'prepare'
op|'('
string|"u'\\u0341'"
op|')'
op|','
string|"u'\\u0301'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnicodeError'
op|','
name|'resourceprep'
op|'.'
name|'prepare'
op|','
string|"u'\\u200e'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnicodeError'
op|','
name|'resourceprep'
op|'.'
name|'prepare'
op|','
string|"u'\\u202a'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnicodeError'
op|','
name|'resourceprep'
op|'.'
name|'prepare'
op|','
string|"u'\\U000e0001'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnicodeError'
op|','
name|'resourceprep'
op|'.'
name|'prepare'
op|','
string|"u'\\U000e0042'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnicodeError'
op|','
name|'resourceprep'
op|'.'
name|'prepare'
op|','
string|"u'foo\\u05bebar'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnicodeError'
op|','
name|'resourceprep'
op|'.'
name|'prepare'
op|','
string|"u'foo\\ufd50bar'"
op|')'
newline|'\n'
comment|"#self.assertEquals(resourceprep.prepare(u'foo\\ufb38bar'),"
nl|'\n'
comment|"#                  u'foo\\u064ebar')"
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnicodeError'
op|','
name|'resourceprep'
op|'.'
name|'prepare'
op|','
string|"u'\\u06271'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resourceprep'
op|'.'
name|'prepare'
op|'('
string|"u'\\u06271\\u0628'"
op|')'
op|','
nl|'\n'
string|"u'\\u06271\\u0628'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnicodeError'
op|','
name|'resourceprep'
op|'.'
name|'prepare'
op|','
string|"u'\\U000e0002'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|testNodePrep
dedent|''
name|'def'
name|'testNodePrep'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'nodeprep'
op|'.'
name|'prepare'
op|'('
string|"u'user'"
op|')'
op|','
string|"u'user'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'nodeprep'
op|'.'
name|'prepare'
op|'('
string|"u'User'"
op|')'
op|','
string|"u'user'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnicodeError'
op|','
name|'nodeprep'
op|'.'
name|'prepare'
op|','
string|"u'us&er'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|testNamePrep
dedent|''
name|'def'
name|'testNamePrep'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'nameprep'
op|'.'
name|'prepare'
op|'('
string|"u'example.com'"
op|')'
op|','
string|"u'example.com'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'nameprep'
op|'.'
name|'prepare'
op|'('
string|"u'Example.com'"
op|')'
op|','
string|"u'example.com'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnicodeError'
op|','
name|'nameprep'
op|'.'
name|'prepare'
op|','
string|"u'ex@mple.com'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnicodeError'
op|','
name|'nameprep'
op|'.'
name|'prepare'
op|','
string|"u'-example.com'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnicodeError'
op|','
name|'nameprep'
op|'.'
name|'prepare'
op|','
string|"u'example-.com'"
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'crippled'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'nameprep'
op|'.'
name|'prepare'
op|'('
string|"u'stra\\u00dfe.example.com'"
op|')'
op|','
nl|'\n'
string|"u'strasse.example.com'"
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
