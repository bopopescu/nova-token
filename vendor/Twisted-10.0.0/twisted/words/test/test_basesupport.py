begin_unit
comment|'# Copyright (c) 2001-2006 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'words'
op|'.'
name|'im'
name|'import'
name|'basesupport'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'error'
op|','
name|'defer'
newline|'\n'
nl|'\n'
DECL|class|DummyAccount
name|'class'
name|'DummyAccount'
op|'('
name|'basesupport'
op|'.'
name|'AbstractAccount'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    An account object that will do nothing when asked to start to log on.\n    """'
newline|'\n'
nl|'\n'
DECL|variable|loginHasFailed
name|'loginHasFailed'
op|'='
name|'False'
newline|'\n'
DECL|variable|loginCallbackCalled
name|'loginCallbackCalled'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|_startLogOn
name|'def'
name|'_startLogOn'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Set self.loginDeferred to the same as the deferred returned, allowing a\n        testcase to .callback or .errback.\n        \n        @return: A deferred.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'loginDeferred'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'loginDeferred'
newline|'\n'
nl|'\n'
DECL|member|_loginFailed
dedent|''
name|'def'
name|'_loginFailed'
op|'('
name|'self'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'loginHasFailed'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'basesupport'
op|'.'
name|'AbstractAccount'
op|'.'
name|'_loginFailed'
op|'('
name|'self'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cb_logOn
dedent|''
name|'def'
name|'_cb_logOn'
op|'('
name|'self'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'loginCallbackCalled'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'basesupport'
op|'.'
name|'AbstractAccount'
op|'.'
name|'_cb_logOn'
op|'('
name|'self'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|class|DummyUI
dedent|''
dedent|''
name|'class'
name|'DummyUI'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Provide just the interface required to be passed to AbstractAccount.logOn.\n    """'
newline|'\n'
DECL|variable|clientRegistered
name|'clientRegistered'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|registerAccountClient
name|'def'
name|'registerAccountClient'
op|'('
name|'self'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'clientRegistered'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|class|ClientMsgTests
dedent|''
dedent|''
name|'class'
name|'ClientMsgTests'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|makeUI
indent|'    '
name|'def'
name|'makeUI'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'DummyUI'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|makeAccount
dedent|''
name|'def'
name|'makeAccount'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'DummyAccount'
op|'('
string|"'la'"
op|','
name|'False'
op|','
string|"'la'"
op|','
name|'None'
op|','
string|"'localhost'"
op|','
number|'6667'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_connect
dedent|''
name|'def'
name|'test_connect'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test that account.logOn works, and it calls the right callback when a\n        connection is established.\n        """'
newline|'\n'
name|'account'
op|'='
name|'self'
op|'.'
name|'makeAccount'
op|'('
op|')'
newline|'\n'
name|'ui'
op|'='
name|'self'
op|'.'
name|'makeUI'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'account'
op|'.'
name|'logOn'
op|'('
name|'ui'
op|')'
newline|'\n'
name|'account'
op|'.'
name|'loginDeferred'
op|'.'
name|'callback'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|function|check
name|'def'
name|'check'
op|'('
name|'result'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'not'
name|'account'
op|'.'
name|'loginHasFailed'
op|','
nl|'\n'
string|'"Login shouldn\'t have failed"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'account'
op|'.'
name|'loginCallbackCalled'
op|','
nl|'\n'
string|'"We should be logged in"'
op|')'
newline|'\n'
dedent|''
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'check'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|test_failedConnect
dedent|''
name|'def'
name|'test_failedConnect'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test that account.logOn works, and it calls the right callback when a\n        connection is established.\n        """'
newline|'\n'
name|'account'
op|'='
name|'self'
op|'.'
name|'makeAccount'
op|'('
op|')'
newline|'\n'
name|'ui'
op|'='
name|'self'
op|'.'
name|'makeUI'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'account'
op|'.'
name|'logOn'
op|'('
name|'ui'
op|')'
newline|'\n'
name|'account'
op|'.'
name|'loginDeferred'
op|'.'
name|'errback'
op|'('
name|'Exception'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|err
name|'def'
name|'err'
op|'('
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'account'
op|'.'
name|'loginHasFailed'
op|','
string|'"Login should have failed"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'not'
name|'account'
op|'.'
name|'loginCallbackCalled'
op|','
nl|'\n'
string|'"We shouldn\'t be logged in"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'not'
name|'ui'
op|'.'
name|'clientRegistered'
op|','
nl|'\n'
string|'"Client shouldn\'t be registered in the UI"'
op|')'
newline|'\n'
dedent|''
name|'cb'
op|'='
name|'lambda'
name|'r'
op|':'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'False'
op|','
string|'"Shouldn\'t get called back"'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'cb'
op|','
name|'err'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|test_alreadyConnecting
dedent|''
name|'def'
name|'test_alreadyConnecting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test that it can fail sensibly when someone tried to connect before\n        we did. \n        """'
newline|'\n'
name|'account'
op|'='
name|'self'
op|'.'
name|'makeAccount'
op|'('
op|')'
newline|'\n'
name|'ui'
op|'='
name|'self'
op|'.'
name|'makeUI'
op|'('
op|')'
newline|'\n'
name|'account'
op|'.'
name|'logOn'
op|'('
name|'ui'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'error'
op|'.'
name|'ConnectError'
op|','
name|'account'
op|'.'
name|'logOn'
op|','
name|'ui'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
