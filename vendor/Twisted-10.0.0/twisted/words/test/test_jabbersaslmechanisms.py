begin_unit
comment|'# Copyright (c) 2001-2009 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nTests for L{twisted.words.protocols.jabber.sasl_mechanisms}.\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
name|'import'
name|'unittest'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'words'
op|'.'
name|'protocols'
op|'.'
name|'jabber'
name|'import'
name|'sasl_mechanisms'
newline|'\n'
nl|'\n'
DECL|class|PlainTest
name|'class'
name|'PlainTest'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_getInitialResponse
indent|'    '
name|'def'
name|'test_getInitialResponse'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test the initial response.\n        """'
newline|'\n'
name|'m'
op|'='
name|'sasl_mechanisms'
op|'.'
name|'Plain'
op|'('
name|'None'
op|','
string|"'test'"
op|','
string|"'secret'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'getInitialResponse'
op|'('
op|')'
op|','
string|"'\\x00test\\x00secret'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|AnonymousTest
dedent|''
dedent|''
name|'class'
name|'AnonymousTest'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Tests for L{twisted.words.protocols.jabber.sasl_mechanisms.Anonymous}.\n    """'
newline|'\n'
DECL|member|test_getInitialResponse
name|'def'
name|'test_getInitialResponse'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test the initial response to be empty.\n        """'
newline|'\n'
name|'m'
op|'='
name|'sasl_mechanisms'
op|'.'
name|'Anonymous'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'getInitialResponse'
op|'('
op|')'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|DigestMD5Test
dedent|''
dedent|''
name|'class'
name|'DigestMD5Test'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mechanism'
op|'='
name|'sasl_mechanisms'
op|'.'
name|'DigestMD5'
op|'('
string|"'xmpp'"
op|','
string|"'example.org'"
op|','
name|'None'
op|','
nl|'\n'
string|"'test'"
op|','
string|"'secret'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_getInitialResponse
dedent|''
name|'def'
name|'test_getInitialResponse'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test that no initial response is generated.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'assertIdentical'
op|'('
name|'self'
op|'.'
name|'mechanism'
op|'.'
name|'getInitialResponse'
op|'('
op|')'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_getResponse
dedent|''
name|'def'
name|'test_getResponse'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Partially test challenge response.\n\n        Does not actually test the response-value, yet.\n        """'
newline|'\n'
nl|'\n'
name|'challenge'
op|'='
string|'\'realm="localhost",nonce="1234",qop="auth",charset=utf-8,algorithm=md5-sess\''
newline|'\n'
name|'directives'
op|'='
name|'self'
op|'.'
name|'mechanism'
op|'.'
name|'_parse'
op|'('
name|'self'
op|'.'
name|'mechanism'
op|'.'
name|'getResponse'
op|'('
name|'challenge'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'directives'
op|'['
string|"'username'"
op|']'
op|','
string|"'test'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'directives'
op|'['
string|"'nonce'"
op|']'
op|','
string|"'1234'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'directives'
op|'['
string|"'nc'"
op|']'
op|','
string|"'00000001'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'directives'
op|'['
string|"'qop'"
op|']'
op|','
op|'['
string|"'auth'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'directives'
op|'['
string|"'charset'"
op|']'
op|','
string|"'utf-8'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'directives'
op|'['
string|"'digest-uri'"
op|']'
op|','
string|"'xmpp/example.org'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'directives'
op|'['
string|"'realm'"
op|']'
op|','
string|"'localhost'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_getResponseNoRealm
dedent|''
name|'def'
name|'test_getResponseNoRealm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test that we accept challenges without realm.\n\n        The realm should default to the host part of the JID.\n        """'
newline|'\n'
nl|'\n'
name|'challenge'
op|'='
string|'\'nonce="1234",qop="auth",charset=utf-8,algorithm=md5-sess\''
newline|'\n'
name|'directives'
op|'='
name|'self'
op|'.'
name|'mechanism'
op|'.'
name|'_parse'
op|'('
name|'self'
op|'.'
name|'mechanism'
op|'.'
name|'getResponse'
op|'('
name|'challenge'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'directives'
op|'['
string|"'realm'"
op|']'
op|','
string|"'example.org'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test__parse
dedent|''
name|'def'
name|'test__parse'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test challenge decoding.\n\n        Specifically, check for multiple values for the C{qop} and C{cipher}\n        directives.\n        """'
newline|'\n'
name|'challenge'
op|'='
string|'\'nonce="1234",qop="auth,auth-conf",charset=utf-8,\''
string|'\'algorithm=md5-sess,cipher="des,3des"\''
newline|'\n'
name|'directives'
op|'='
name|'self'
op|'.'
name|'mechanism'
op|'.'
name|'_parse'
op|'('
name|'challenge'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'1234'"
op|','
name|'directives'
op|'['
string|"'nonce'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'utf-8'"
op|','
name|'directives'
op|'['
string|"'charset'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'auth'"
op|','
name|'directives'
op|'['
string|"'qop'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'auth-conf'"
op|','
name|'directives'
op|'['
string|"'qop'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'des'"
op|','
name|'directives'
op|'['
string|"'cipher'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'3des'"
op|','
name|'directives'
op|'['
string|"'cipher'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
