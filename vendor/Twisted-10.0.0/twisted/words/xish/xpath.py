begin_unit
comment|'# -*- test-case-name: twisted.words.test.test_xpath -*-'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Copyright (c) 2001-2007 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nXPath query support.\n\nThis module provides L{XPathQuery} to match\nL{domish.Element<twisted.words.xish.domish.Element>} instances against\nXPath-like expressions.\n"""'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'cStringIO'
name|'as'
name|'StringIO'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'StringIO'
newline|'\n'
nl|'\n'
DECL|class|LiteralValue
dedent|''
name|'class'
name|'LiteralValue'
op|'('
name|'str'
op|')'
op|':'
newline|'\n'
DECL|member|value
indent|'    '
name|'def'
name|'value'
op|'('
name|'self'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|IndexValue
dedent|''
dedent|''
name|'class'
name|'IndexValue'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'index'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'index'
op|'='
name|'int'
op|'('
name|'index'
op|')'
op|'-'
number|'1'
newline|'\n'
nl|'\n'
DECL|member|value
dedent|''
name|'def'
name|'value'
op|'('
name|'self'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'elem'
op|'.'
name|'children'
op|'['
name|'self'
op|'.'
name|'index'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AttribValue
dedent|''
dedent|''
name|'class'
name|'AttribValue'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'attribname'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'attribname'
op|'='
name|'attribname'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'attribname'
op|'=='
string|'"xmlns"'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'value'
op|'='
name|'self'
op|'.'
name|'value_ns'
newline|'\n'
nl|'\n'
DECL|member|value_ns
dedent|''
dedent|''
name|'def'
name|'value_ns'
op|'('
name|'self'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'elem'
op|'.'
name|'uri'
newline|'\n'
nl|'\n'
DECL|member|value
dedent|''
name|'def'
name|'value'
op|'('
name|'self'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'attribname'
name|'in'
name|'elem'
op|'.'
name|'attributes'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'elem'
op|'.'
name|'attributes'
op|'['
name|'self'
op|'.'
name|'attribname'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CompareValue
dedent|''
dedent|''
dedent|''
name|'class'
name|'CompareValue'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'lhs'
op|','
name|'op'
op|','
name|'rhs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'lhs'
op|'='
name|'lhs'
newline|'\n'
name|'self'
op|'.'
name|'rhs'
op|'='
name|'rhs'
newline|'\n'
name|'if'
name|'op'
op|'=='
string|'"="'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'value'
op|'='
name|'self'
op|'.'
name|'_compareEqual'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'value'
op|'='
name|'self'
op|'.'
name|'_compareNotEqual'
newline|'\n'
nl|'\n'
DECL|member|_compareEqual
dedent|''
dedent|''
name|'def'
name|'_compareEqual'
op|'('
name|'self'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'lhs'
op|'.'
name|'value'
op|'('
name|'elem'
op|')'
op|'=='
name|'self'
op|'.'
name|'rhs'
op|'.'
name|'value'
op|'('
name|'elem'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_compareNotEqual
dedent|''
name|'def'
name|'_compareNotEqual'
op|'('
name|'self'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'lhs'
op|'.'
name|'value'
op|'('
name|'elem'
op|')'
op|'!='
name|'self'
op|'.'
name|'rhs'
op|'.'
name|'value'
op|'('
name|'elem'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BooleanValue
dedent|''
dedent|''
name|'class'
name|'BooleanValue'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Provide boolean XPath expression operators.\n\n    @ivar lhs: Left hand side expression of the operator.\n    @ivar op: The operator. One of C{\'and\'}, C{\'or\'}.\n    @ivar rhs: Right hand side expression of the operator.\n    @ivar value: Reference to the method that will calculate the value of\n                 this expression given an element.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'lhs'
op|','
name|'op'
op|','
name|'rhs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'lhs'
op|'='
name|'lhs'
newline|'\n'
name|'self'
op|'.'
name|'rhs'
op|'='
name|'rhs'
newline|'\n'
name|'if'
name|'op'
op|'=='
string|'"and"'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'value'
op|'='
name|'self'
op|'.'
name|'_booleanAnd'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'value'
op|'='
name|'self'
op|'.'
name|'_booleanOr'
newline|'\n'
nl|'\n'
DECL|member|_booleanAnd
dedent|''
dedent|''
name|'def'
name|'_booleanAnd'
op|'('
name|'self'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Calculate boolean and of the given expressions given an element.\n\n        @param elem: The element to calculate the value of the expression from.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'lhs'
op|'.'
name|'value'
op|'('
name|'elem'
op|')'
name|'and'
name|'self'
op|'.'
name|'rhs'
op|'.'
name|'value'
op|'('
name|'elem'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_booleanOr
dedent|''
name|'def'
name|'_booleanOr'
op|'('
name|'self'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Calculate boolean or of the given expressions given an element.\n\n        @param elem: The element to calculate the value of the expression from.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'lhs'
op|'.'
name|'value'
op|'('
name|'elem'
op|')'
name|'or'
name|'self'
op|'.'
name|'rhs'
op|'.'
name|'value'
op|'('
name|'elem'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|Function
dedent|''
dedent|''
name|'def'
name|'Function'
op|'('
name|'fname'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Internal method which selects the function object\n    """'
newline|'\n'
name|'klassname'
op|'='
string|'"_%s_Function"'
op|'%'
name|'fname'
newline|'\n'
name|'c'
op|'='
name|'globals'
op|'('
op|')'
op|'['
name|'klassname'
op|']'
op|'('
op|')'
newline|'\n'
name|'return'
name|'c'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_not_Function
dedent|''
name|'class'
name|'_not_Function'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'baseValue'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|setParams
dedent|''
name|'def'
name|'setParams'
op|'('
name|'self'
op|','
name|'baseValue'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'baseValue'
op|'='
name|'baseValue'
newline|'\n'
nl|'\n'
DECL|member|value
dedent|''
name|'def'
name|'value'
op|'('
name|'self'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'not'
name|'self'
op|'.'
name|'baseValue'
op|'.'
name|'value'
op|'('
name|'elem'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_text_Function
dedent|''
dedent|''
name|'class'
name|'_text_Function'
op|':'
newline|'\n'
DECL|member|setParams
indent|'    '
name|'def'
name|'setParams'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|value
dedent|''
name|'def'
name|'value'
op|'('
name|'self'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'str'
op|'('
name|'elem'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_Location
dedent|''
dedent|''
name|'class'
name|'_Location'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'predicates'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'elementName'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'childLocation'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|matchesPredicates
dedent|''
name|'def'
name|'matchesPredicates'
op|'('
name|'self'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'elementName'
op|'!='
name|'None'
name|'and'
name|'self'
op|'.'
name|'elementName'
op|'!='
name|'elem'
op|'.'
name|'name'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'p'
name|'in'
name|'self'
op|'.'
name|'predicates'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'p'
op|'.'
name|'value'
op|'('
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
number|'1'
newline|'\n'
nl|'\n'
DECL|member|matches
dedent|''
name|'def'
name|'matches'
op|'('
name|'self'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'matchesPredicates'
op|'('
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'childLocation'
op|'!='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'c'
name|'in'
name|'elem'
op|'.'
name|'elements'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'childLocation'
op|'.'
name|'matches'
op|'('
name|'c'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'return'
number|'1'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|queryForString
dedent|''
name|'def'
name|'queryForString'
op|'('
name|'self'
op|','
name|'elem'
op|','
name|'resultbuf'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'matchesPredicates'
op|'('
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'childLocation'
op|'!='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'c'
name|'in'
name|'elem'
op|'.'
name|'elements'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'childLocation'
op|'.'
name|'queryForString'
op|'('
name|'c'
op|','
name|'resultbuf'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'resultbuf'
op|'.'
name|'write'
op|'('
name|'str'
op|'('
name|'elem'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|queryForNodes
dedent|''
dedent|''
name|'def'
name|'queryForNodes'
op|'('
name|'self'
op|','
name|'elem'
op|','
name|'resultlist'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'matchesPredicates'
op|'('
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'childLocation'
op|'!='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'c'
name|'in'
name|'elem'
op|'.'
name|'elements'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'childLocation'
op|'.'
name|'queryForNodes'
op|'('
name|'c'
op|','
name|'resultlist'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'resultlist'
op|'.'
name|'append'
op|'('
name|'elem'
op|')'
newline|'\n'
nl|'\n'
DECL|member|queryForStringList
dedent|''
dedent|''
name|'def'
name|'queryForStringList'
op|'('
name|'self'
op|','
name|'elem'
op|','
name|'resultlist'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'matchesPredicates'
op|'('
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'childLocation'
op|'!='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'c'
name|'in'
name|'elem'
op|'.'
name|'elements'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'childLocation'
op|'.'
name|'queryForStringList'
op|'('
name|'c'
op|','
name|'resultlist'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'c'
name|'in'
name|'elem'
op|'.'
name|'children'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'isinstance'
op|'('
name|'c'
op|','
op|'('
name|'str'
op|','
name|'unicode'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'resultlist'
op|'.'
name|'append'
op|'('
name|'c'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_AnyLocation
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
name|'class'
name|'_AnyLocation'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'predicates'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'elementName'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'childLocation'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|matchesPredicates
dedent|''
name|'def'
name|'matchesPredicates'
op|'('
name|'self'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'p'
name|'in'
name|'self'
op|'.'
name|'predicates'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'p'
op|'.'
name|'value'
op|'('
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'0'
newline|'\n'
dedent|''
dedent|''
name|'return'
number|'1'
newline|'\n'
nl|'\n'
DECL|member|listParents
dedent|''
name|'def'
name|'listParents'
op|'('
name|'self'
op|','
name|'elem'
op|','
name|'parentlist'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'elem'
op|'.'
name|'parent'
op|'!='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'listParents'
op|'('
name|'elem'
op|'.'
name|'parent'
op|','
name|'parentlist'
op|')'
newline|'\n'
dedent|''
name|'parentlist'
op|'.'
name|'append'
op|'('
name|'elem'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|isRootMatch
dedent|''
name|'def'
name|'isRootMatch'
op|'('
name|'self'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
op|'('
name|'self'
op|'.'
name|'elementName'
op|'=='
name|'None'
name|'or'
name|'self'
op|'.'
name|'elementName'
op|'=='
name|'elem'
op|'.'
name|'name'
op|')'
name|'and'
name|'self'
op|'.'
name|'matchesPredicates'
op|'('
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'childLocation'
op|'!='
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'c'
name|'in'
name|'elem'
op|'.'
name|'elements'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'self'
op|'.'
name|'childLocation'
op|'.'
name|'matches'
op|'('
name|'c'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'return'
name|'True'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'True'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|member|findFirstRootMatch
dedent|''
name|'def'
name|'findFirstRootMatch'
op|'('
name|'self'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
op|'('
name|'self'
op|'.'
name|'elementName'
op|'=='
name|'None'
name|'or'
name|'self'
op|'.'
name|'elementName'
op|'=='
name|'elem'
op|'.'
name|'name'
op|')'
name|'and'
name|'self'
op|'.'
name|'matchesPredicates'
op|'('
name|'elem'
op|')'
op|':'
newline|'\n'
comment|'# Thus far, the name matches and the predicates match,'
nl|'\n'
comment|'# now check into the children and find the first one'
nl|'\n'
comment|'# that matches the rest of the structure'
nl|'\n'
comment|'# the rest of the structure'
nl|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'childLocation'
op|'!='
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'c'
name|'in'
name|'elem'
op|'.'
name|'elements'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'self'
op|'.'
name|'childLocation'
op|'.'
name|'matches'
op|'('
name|'c'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'return'
name|'c'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# No children locations; this is a match!'
nl|'\n'
indent|'                '
name|'return'
name|'elem'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
comment|"# Ok, predicates or name didn't match, so we need to start"
nl|'\n'
comment|'# down each child and treat it as the root and try'
nl|'\n'
comment|'# again'
nl|'\n'
indent|'            '
name|'for'
name|'c'
name|'in'
name|'elem'
op|'.'
name|'elements'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'matches'
op|'('
name|'c'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'c'
newline|'\n'
comment|'# No children matched...'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|matches
dedent|''
dedent|''
name|'def'
name|'matches'
op|'('
name|'self'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'isRootMatch'
op|'('
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|"# Ok, initial element isn't an exact match, walk"
nl|'\n'
comment|'# down each child and treat it as the root and try'
nl|'\n'
comment|'# again'
nl|'\n'
indent|'            '
name|'for'
name|'c'
name|'in'
name|'elem'
op|'.'
name|'elements'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'matches'
op|'('
name|'c'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'True'
newline|'\n'
comment|'# No children matched...'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|member|queryForString
dedent|''
dedent|''
name|'def'
name|'queryForString'
op|'('
name|'self'
op|','
name|'elem'
op|','
name|'resultbuf'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
op|'('
nl|'\n'
string|'"queryForString is not implemented for any location"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|queryForNodes
dedent|''
name|'def'
name|'queryForNodes'
op|'('
name|'self'
op|','
name|'elem'
op|','
name|'resultlist'
op|')'
op|':'
newline|'\n'
comment|'# First check to see if _this_ element is a root'
nl|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'isRootMatch'
op|'('
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'resultlist'
op|'.'
name|'append'
op|'('
name|'elem'
op|')'
newline|'\n'
nl|'\n'
comment|'# Now check each child'
nl|'\n'
dedent|''
name|'for'
name|'c'
name|'in'
name|'elem'
op|'.'
name|'elements'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'queryForNodes'
op|'('
name|'c'
op|','
name|'resultlist'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|queryForStringList
dedent|''
dedent|''
name|'def'
name|'queryForStringList'
op|'('
name|'self'
op|','
name|'elem'
op|','
name|'resultlist'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'isRootMatch'
op|'('
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'c'
name|'in'
name|'elem'
op|'.'
name|'children'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'isinstance'
op|'('
name|'c'
op|','
op|'('
name|'str'
op|','
name|'unicode'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'resultlist'
op|'.'
name|'append'
op|'('
name|'c'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'for'
name|'c'
name|'in'
name|'elem'
op|'.'
name|'elements'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'queryForStringList'
op|'('
name|'c'
op|','
name|'resultlist'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|XPathQuery
dedent|''
dedent|''
dedent|''
name|'class'
name|'XPathQuery'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'queryStr'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'queryStr'
op|'='
name|'queryStr'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'words'
op|'.'
name|'xish'
op|'.'
name|'xpathparser'
name|'import'
name|'parse'
newline|'\n'
name|'self'
op|'.'
name|'baseLocation'
op|'='
name|'parse'
op|'('
string|"'XPATH'"
op|','
name|'queryStr'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__hash__
dedent|''
name|'def'
name|'__hash__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'queryStr'
op|'.'
name|'__hash__'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|matches
dedent|''
name|'def'
name|'matches'
op|'('
name|'self'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'baseLocation'
op|'.'
name|'matches'
op|'('
name|'elem'
op|')'
newline|'\n'
nl|'\n'
DECL|member|queryForString
dedent|''
name|'def'
name|'queryForString'
op|'('
name|'self'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'baseLocation'
op|'.'
name|'queryForString'
op|'('
name|'elem'
op|','
name|'result'
op|')'
newline|'\n'
name|'return'
name|'result'
op|'.'
name|'getvalue'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|queryForNodes
dedent|''
name|'def'
name|'queryForNodes'
op|'('
name|'self'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'baseLocation'
op|'.'
name|'queryForNodes'
op|'('
name|'elem'
op|','
name|'result'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'result'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|member|queryForStringList
dedent|''
dedent|''
name|'def'
name|'queryForStringList'
op|'('
name|'self'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'baseLocation'
op|'.'
name|'queryForStringList'
op|'('
name|'elem'
op|','
name|'result'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'result'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|__internedQueries
dedent|''
dedent|''
dedent|''
name|'__internedQueries'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|internQuery
name|'def'
name|'internQuery'
op|'('
name|'queryString'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'queryString'
name|'not'
name|'in'
name|'__internedQueries'
op|':'
newline|'\n'
indent|'        '
name|'__internedQueries'
op|'['
name|'queryString'
op|']'
op|'='
name|'XPathQuery'
op|'('
name|'queryString'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'__internedQueries'
op|'['
name|'queryString'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|matches
dedent|''
name|'def'
name|'matches'
op|'('
name|'xpathstr'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'internQuery'
op|'('
name|'xpathstr'
op|')'
op|'.'
name|'matches'
op|'('
name|'elem'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|queryForStringList
dedent|''
name|'def'
name|'queryForStringList'
op|'('
name|'xpathstr'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'internQuery'
op|'('
name|'xpathstr'
op|')'
op|'.'
name|'queryForStringList'
op|'('
name|'elem'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|queryForString
dedent|''
name|'def'
name|'queryForString'
op|'('
name|'xpathstr'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'internQuery'
op|'('
name|'xpathstr'
op|')'
op|'.'
name|'queryForString'
op|'('
name|'elem'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|queryForNodes
dedent|''
name|'def'
name|'queryForNodes'
op|'('
name|'xpathstr'
op|','
name|'elem'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'internQuery'
op|'('
name|'xpathstr'
op|')'
op|'.'
name|'queryForNodes'
op|'('
name|'elem'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
