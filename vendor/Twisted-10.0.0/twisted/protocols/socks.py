begin_unit
comment|'# -*- test-case-name: twisted.test.test_socks -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2010 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nImplementation of the SOCKSv4 protocol.\n"""'
newline|'\n'
nl|'\n'
comment|'# python imports'
nl|'\n'
name|'import'
name|'struct'
newline|'\n'
name|'import'
name|'string'
newline|'\n'
name|'import'
name|'socket'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
comment|'# twisted imports'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
op|','
name|'protocol'
op|','
name|'defer'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SOCKSv4Outgoing
name|'class'
name|'SOCKSv4Outgoing'
op|'('
name|'protocol'
op|'.'
name|'Protocol'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'socks'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'socks'
op|'='
name|'socks'
newline|'\n'
nl|'\n'
DECL|member|connectionMade
dedent|''
name|'def'
name|'connectionMade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'peer'
op|'='
name|'self'
op|'.'
name|'transport'
op|'.'
name|'getPeer'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'socks'
op|'.'
name|'makeReply'
op|'('
number|'90'
op|','
number|'0'
op|','
name|'port'
op|'='
name|'peer'
op|'.'
name|'port'
op|','
name|'ip'
op|'='
name|'peer'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'socks'
op|'.'
name|'otherConn'
op|'='
name|'self'
newline|'\n'
nl|'\n'
DECL|member|connectionLost
dedent|''
name|'def'
name|'connectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'socks'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|dataReceived
dedent|''
name|'def'
name|'dataReceived'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'socks'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|write
dedent|''
name|'def'
name|'write'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'socks'
op|'.'
name|'log'
op|'('
name|'self'
op|','
name|'data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|SOCKSv4Incoming
dedent|''
dedent|''
name|'class'
name|'SOCKSv4Incoming'
op|'('
name|'protocol'
op|'.'
name|'Protocol'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'socks'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'socks'
op|'='
name|'socks'
newline|'\n'
name|'self'
op|'.'
name|'socks'
op|'.'
name|'otherConn'
op|'='
name|'self'
newline|'\n'
nl|'\n'
DECL|member|connectionLost
dedent|''
name|'def'
name|'connectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'socks'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|dataReceived
dedent|''
name|'def'
name|'dataReceived'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'socks'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|write
dedent|''
name|'def'
name|'write'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'socks'
op|'.'
name|'log'
op|'('
name|'self'
op|','
name|'data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SOCKSv4
dedent|''
dedent|''
name|'class'
name|'SOCKSv4'
op|'('
name|'protocol'
op|'.'
name|'Protocol'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    An implementation of the SOCKSv4 protocol.\n\n    @type logging: C{str} or C{None}\n    @ivar logging: If not C{None}, the name of the logfile to which connection\n        information will be written.\n\n    @type reactor: object providing L{twisted.internet.interfaces.IReactorTCP}\n    @ivar reactor: The reactor used to create connections.\n\n    @type buf: C{str}\n    @ivar buf: Part of a SOCKSv4 connection request.\n\n    @type otherConn: C{SOCKSv4Incoming}, C{SOCKSv4Outgoing} or C{None}\n    @ivar otherConn: Until the connection has been established, C{otherConn} is\n        C{None}. After that, it is the proxy-to-destination protocol instance\n        along which the client\'s connection is being forwarded.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'logging'
op|'='
name|'None'
op|','
name|'reactor'
op|'='
name|'reactor'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'logging'
op|'='
name|'logging'
newline|'\n'
name|'self'
op|'.'
name|'reactor'
op|'='
name|'reactor'
newline|'\n'
nl|'\n'
DECL|member|connectionMade
dedent|''
name|'def'
name|'connectionMade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'buf'
op|'='
string|'""'
newline|'\n'
name|'self'
op|'.'
name|'otherConn'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|dataReceived
dedent|''
name|'def'
name|'dataReceived'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Called whenever data is received.\n\n        @type data: C{str}\n        @param data: Part or all of a SOCKSv4 packet.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'otherConn'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'otherConn'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'buf'
op|'='
name|'self'
op|'.'
name|'buf'
op|'+'
name|'data'
newline|'\n'
name|'completeBuffer'
op|'='
name|'self'
op|'.'
name|'buf'
newline|'\n'
name|'if'
string|'"\\000"'
name|'in'
name|'self'
op|'.'
name|'buf'
op|'['
number|'8'
op|':'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'head'
op|','
name|'self'
op|'.'
name|'buf'
op|'='
name|'self'
op|'.'
name|'buf'
op|'['
op|':'
number|'8'
op|']'
op|','
name|'self'
op|'.'
name|'buf'
op|'['
number|'8'
op|':'
op|']'
newline|'\n'
name|'version'
op|','
name|'code'
op|','
name|'port'
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|'"!BBH"'
op|','
name|'head'
op|'['
op|':'
number|'4'
op|']'
op|')'
newline|'\n'
name|'user'
op|','
name|'self'
op|'.'
name|'buf'
op|'='
name|'self'
op|'.'
name|'buf'
op|'.'
name|'split'
op|'('
string|'"\\000"'
op|','
number|'1'
op|')'
newline|'\n'
name|'if'
name|'head'
op|'['
number|'4'
op|':'
number|'7'
op|']'
op|'=='
string|'"\\000\\000\\000"'
name|'and'
name|'head'
op|'['
number|'7'
op|']'
op|'!='
string|'"\\000"'
op|':'
newline|'\n'
comment|'# An IP address of the form 0.0.0.X, where X is non-zero,'
nl|'\n'
comment|'# signifies that this is a SOCKSv4a packet.'
nl|'\n'
comment|"# If the complete packet hasn't been received, restore the"
nl|'\n'
comment|'# buffer and wait for it.'
nl|'\n'
indent|'                '
name|'if'
string|'"\\000"'
name|'not'
name|'in'
name|'self'
op|'.'
name|'buf'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'buf'
op|'='
name|'completeBuffer'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'server'
op|','
name|'self'
op|'.'
name|'buf'
op|'='
name|'self'
op|'.'
name|'buf'
op|'.'
name|'split'
op|'('
string|'"\\000"'
op|','
number|'1'
op|')'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'reactor'
op|'.'
name|'resolve'
op|'('
name|'server'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_dataReceived2'
op|','
name|'user'
op|','
nl|'\n'
name|'version'
op|','
name|'code'
op|','
name|'port'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'lambda'
name|'result'
op|','
name|'self'
op|'='
name|'self'
op|':'
name|'self'
op|'.'
name|'makeReply'
op|'('
number|'91'
op|')'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'server'
op|'='
name|'socket'
op|'.'
name|'inet_ntoa'
op|'('
name|'head'
op|'['
number|'4'
op|':'
number|'8'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_dataReceived2'
op|'('
name|'server'
op|','
name|'user'
op|','
name|'version'
op|','
name|'code'
op|','
name|'port'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_dataReceived2
dedent|''
dedent|''
name|'def'
name|'_dataReceived2'
op|'('
name|'self'
op|','
name|'server'
op|','
name|'user'
op|','
name|'version'
op|','
name|'code'
op|','
name|'port'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        The second half of the SOCKS connection setup. For a SOCKSv4 packet this\n        is after the server address has been extracted from the header. For a\n        SOCKSv4a packet this is after the host name has been resolved.\n\n        @type server: C{str}\n        @param server: The IP address of the destination, represented as a\n            dotted quad.\n\n        @type user: C{str}\n        @param user: The username associated with the connection.\n\n        @type version: C{int}\n        @param version: The SOCKS protocol version number.\n\n        @type code: C{int}\n        @param code: The comand code. 1 means establish a TCP/IP stream\n            connection, and 2 means establish a TCP/IP port binding.\n\n        @type port: C{int}\n        @param port: The port number associated with the connection.\n        """'
newline|'\n'
name|'assert'
name|'version'
op|'=='
number|'4'
op|','
string|'"Bad version code: %s"'
op|'%'
name|'version'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'authorize'
op|'('
name|'code'
op|','
name|'server'
op|','
name|'port'
op|','
name|'user'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'makeReply'
op|'('
number|'91'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'if'
name|'code'
op|'=='
number|'1'
op|':'
comment|'# CONNECT'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'self'
op|'.'
name|'connectClass'
op|'('
name|'server'
op|','
name|'port'
op|','
name|'SOCKSv4Outgoing'
op|','
name|'self'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'lambda'
name|'result'
op|','
name|'self'
op|'='
name|'self'
op|':'
name|'self'
op|'.'
name|'makeReply'
op|'('
number|'91'
op|')'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'code'
op|'=='
number|'2'
op|':'
comment|'# BIND'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'self'
op|'.'
name|'listenClass'
op|'('
number|'0'
op|','
name|'SOCKSv4IncomingFactory'
op|','
name|'self'
op|','
name|'server'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
op|'('
name|'h'
op|','
name|'p'
op|')'
op|','
nl|'\n'
name|'self'
op|'='
name|'self'
op|':'
name|'self'
op|'.'
name|'makeReply'
op|'('
number|'90'
op|','
number|'0'
op|','
name|'p'
op|','
name|'h'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'RuntimeError'
op|','
string|'"Bad Connect Code: %s"'
op|'%'
name|'code'
newline|'\n'
dedent|''
name|'assert'
name|'self'
op|'.'
name|'buf'
op|'=='
string|'""'
op|','
string|'"hmm, still stuff in buffer... %s"'
op|'%'
name|'repr'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'buf'
op|')'
newline|'\n'
nl|'\n'
DECL|member|connectionLost
dedent|''
name|'def'
name|'connectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'otherConn'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'otherConn'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|authorize
dedent|''
dedent|''
name|'def'
name|'authorize'
op|'('
name|'self'
op|','
name|'code'
op|','
name|'server'
op|','
name|'port'
op|','
name|'user'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"code %s connection to %s:%s (user %s) authorized"'
op|'%'
op|'('
name|'code'
op|','
name|'server'
op|','
name|'port'
op|','
name|'user'
op|')'
op|')'
newline|'\n'
name|'return'
number|'1'
newline|'\n'
nl|'\n'
DECL|member|connectClass
dedent|''
name|'def'
name|'connectClass'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'port'
op|','
name|'klass'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'protocol'
op|'.'
name|'ClientCreator'
op|'('
name|'reactor'
op|','
name|'klass'
op|','
op|'*'
name|'args'
op|')'
op|'.'
name|'connectTCP'
op|'('
name|'host'
op|','
name|'port'
op|')'
newline|'\n'
nl|'\n'
DECL|member|listenClass
dedent|''
name|'def'
name|'listenClass'
op|'('
name|'self'
op|','
name|'port'
op|','
name|'klass'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'serv'
op|'='
name|'reactor'
op|'.'
name|'listenTCP'
op|'('
name|'port'
op|','
name|'klass'
op|'('
op|'*'
name|'args'
op|')'
op|')'
newline|'\n'
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'serv'
op|'.'
name|'getHost'
op|'('
op|')'
op|'['
number|'1'
op|':'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|makeReply
dedent|''
name|'def'
name|'makeReply'
op|'('
name|'self'
op|','
name|'reply'
op|','
name|'version'
op|'='
number|'0'
op|','
name|'port'
op|'='
number|'0'
op|','
name|'ip'
op|'='
string|'"0.0.0.0"'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
name|'struct'
op|'.'
name|'pack'
op|'('
string|'"!BBH"'
op|','
name|'version'
op|','
name|'reply'
op|','
name|'port'
op|')'
op|'+'
name|'socket'
op|'.'
name|'inet_aton'
op|'('
name|'ip'
op|')'
op|')'
newline|'\n'
name|'if'
name|'reply'
op|'!='
number|'90'
op|':'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|write
dedent|''
name|'def'
name|'write'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'log'
op|'('
name|'self'
op|','
name|'data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|log
dedent|''
name|'def'
name|'log'
op|'('
name|'self'
op|','
name|'proto'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'logging'
op|':'
name|'return'
newline|'\n'
name|'peer'
op|'='
name|'self'
op|'.'
name|'transport'
op|'.'
name|'getPeer'
op|'('
op|')'
newline|'\n'
name|'their_peer'
op|'='
name|'self'
op|'.'
name|'otherConn'
op|'.'
name|'transport'
op|'.'
name|'getPeer'
op|'('
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'self'
op|'.'
name|'logging'
op|','
string|'"a"'
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|'"%s\\t%s:%d %s %s:%d\\n"'
op|'%'
op|'('
name|'time'
op|'.'
name|'ctime'
op|'('
op|')'
op|','
nl|'\n'
name|'peer'
op|'.'
name|'host'
op|','
name|'peer'
op|'.'
name|'port'
op|','
nl|'\n'
op|'('
op|'('
name|'proto'
op|'=='
name|'self'
name|'and'
string|"'<'"
op|')'
name|'or'
string|"'>'"
op|')'
op|','
nl|'\n'
name|'their_peer'
op|'.'
name|'host'
op|','
name|'their_peer'
op|'.'
name|'port'
op|')'
op|')'
newline|'\n'
name|'while'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'p'
op|','
name|'data'
op|'='
name|'data'
op|'['
op|':'
number|'16'
op|']'
op|','
name|'data'
op|'['
number|'16'
op|':'
op|']'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
name|'string'
op|'.'
name|'join'
op|'('
name|'map'
op|'('
name|'lambda'
name|'x'
op|':'
string|"'%02X'"
op|'%'
name|'ord'
op|'('
name|'x'
op|')'
op|','
name|'p'
op|')'
op|','
string|"' '"
op|')'
op|'+'
string|"' '"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
op|'('
number|'16'
op|'-'
name|'len'
op|'('
name|'p'
op|')'
op|')'
op|'*'
number|'3'
op|'*'
string|"' '"
op|')'
newline|'\n'
name|'for'
name|'c'
name|'in'
name|'p'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'len'
op|'('
name|'repr'
op|'('
name|'c'
op|')'
op|')'
op|'>'
number|'3'
op|':'
name|'f'
op|'.'
name|'write'
op|'('
string|"'.'"
op|')'
newline|'\n'
name|'else'
op|':'
name|'f'
op|'.'
name|'write'
op|'('
name|'c'
op|')'
newline|'\n'
dedent|''
name|'f'
op|'.'
name|'write'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
dedent|''
name|'f'
op|'.'
name|'write'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|SOCKSv4Factory
dedent|''
dedent|''
name|'class'
name|'SOCKSv4Factory'
op|'('
name|'protocol'
op|'.'
name|'Factory'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A factory for a SOCKSv4 proxy.\n\n    Constructor accepts one argument, a log file name.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'log'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'logging'
op|'='
name|'log'
newline|'\n'
nl|'\n'
DECL|member|buildProtocol
dedent|''
name|'def'
name|'buildProtocol'
op|'('
name|'self'
op|','
name|'addr'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'SOCKSv4'
op|'('
name|'self'
op|'.'
name|'logging'
op|','
name|'reactor'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|SOCKSv4IncomingFactory
dedent|''
dedent|''
name|'class'
name|'SOCKSv4IncomingFactory'
op|'('
name|'protocol'
op|'.'
name|'Factory'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A utility class for building protocols for incoming connections.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'socks'
op|','
name|'ip'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'socks'
op|'='
name|'socks'
newline|'\n'
name|'self'
op|'.'
name|'ip'
op|'='
name|'ip'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|buildProtocol
dedent|''
name|'def'
name|'buildProtocol'
op|'('
name|'self'
op|','
name|'addr'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'addr'
op|'['
number|'0'
op|']'
op|'=='
name|'self'
op|'.'
name|'ip'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'ip'
op|'='
string|'""'
newline|'\n'
name|'self'
op|'.'
name|'socks'
op|'.'
name|'makeReply'
op|'('
number|'90'
op|','
number|'0'
op|')'
newline|'\n'
name|'return'
name|'SOCKSv4Incoming'
op|'('
name|'self'
op|'.'
name|'socks'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'self'
op|'.'
name|'ip'
op|'=='
string|'""'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'socks'
op|'.'
name|'makeReply'
op|'('
number|'91'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ip'
op|'='
string|'""'
newline|'\n'
name|'return'
name|'None'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
