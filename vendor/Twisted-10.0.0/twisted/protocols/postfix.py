begin_unit
comment|'# -*- test-case-name: twisted.test.test_postfix -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2009 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nPostfix mail transport agent related protocols.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'UserDict'
newline|'\n'
name|'import'
name|'urllib'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'protocols'
name|'import'
name|'basic'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'protocols'
name|'import'
name|'policies'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'protocol'
op|','
name|'defer'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
newline|'\n'
nl|'\n'
comment|"# urllib's quote functions just happen to match"
nl|'\n'
comment|'# the postfix semantics.'
nl|'\n'
DECL|function|quote
name|'def'
name|'quote'
op|'('
name|'s'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'s'
op|')'
newline|'\n'
nl|'\n'
DECL|function|unquote
dedent|''
name|'def'
name|'unquote'
op|'('
name|'s'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'urllib'
op|'.'
name|'unquote'
op|'('
name|'s'
op|')'
newline|'\n'
nl|'\n'
DECL|class|PostfixTCPMapServer
dedent|''
name|'class'
name|'PostfixTCPMapServer'
op|'('
name|'basic'
op|'.'
name|'LineReceiver'
op|','
name|'policies'
op|'.'
name|'TimeoutMixin'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Postfix mail transport agent TCP map protocol implementation.\n\n    Receive requests for data matching given key via lineReceived,\n    asks it\'s factory for the data with self.factory.get(key), and\n    returns the data to the requester. None means no entry found.\n\n    You can use postfix\'s postmap to test the map service::\n\n    /usr/sbin/postmap -q KEY tcp:localhost:4242\n\n    """'
newline|'\n'
nl|'\n'
DECL|variable|timeout
name|'timeout'
op|'='
number|'600'
newline|'\n'
DECL|variable|delimiter
name|'delimiter'
op|'='
string|"'\\n'"
newline|'\n'
nl|'\n'
DECL|member|connectionMade
name|'def'
name|'connectionMade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'setTimeout'
op|'('
name|'self'
op|'.'
name|'timeout'
op|')'
newline|'\n'
nl|'\n'
DECL|member|sendCode
dedent|''
name|'def'
name|'sendCode'
op|'('
name|'self'
op|','
name|'code'
op|','
name|'message'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Send an SMTP-like code with a message."'
newline|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'%3.3d %s'"
op|'%'
op|'('
name|'code'
op|','
name|'message'
name|'or'
string|"''"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|lineReceived
dedent|''
name|'def'
name|'lineReceived'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'resetTimeout'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'request'
op|','
name|'params'
op|'='
name|'line'
op|'.'
name|'split'
op|'('
name|'None'
op|','
number|'1'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'request'
op|'='
name|'line'
newline|'\n'
name|'params'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'='
name|'getattr'
op|'('
name|'self'
op|','
string|"'do_'"
op|'+'
name|'request'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'AttributeError'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendCode'
op|'('
number|'400'
op|','
string|"'unknown command'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'f'
op|'('
name|'params'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'sendCode'
op|'('
number|'400'
op|','
string|"'Command %r failed: %s.'"
op|'%'
op|'('
name|'request'
op|','
name|'sys'
op|'.'
name|'exc_info'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|do_get
dedent|''
dedent|''
dedent|''
name|'def'
name|'do_get'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'key'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendCode'
op|'('
number|'400'
op|','
string|"'Command %r takes 1 parameters.'"
op|'%'
string|"'get'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'factory'
op|'.'
name|'get'
op|','
name|'key'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_cbGot'
op|','
name|'self'
op|'.'
name|'_cbNot'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'log'
op|'.'
name|'err'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cbNot
dedent|''
dedent|''
name|'def'
name|'_cbNot'
op|'('
name|'self'
op|','
name|'fail'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendCode'
op|'('
number|'400'
op|','
name|'fail'
op|'.'
name|'getErrorMessage'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cbGot
dedent|''
name|'def'
name|'_cbGot'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'value'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendCode'
op|'('
number|'500'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendCode'
op|'('
number|'200'
op|','
name|'quote'
op|'('
name|'value'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|do_put
dedent|''
dedent|''
name|'def'
name|'do_put'
op|'('
name|'self'
op|','
name|'keyAndValue'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'keyAndValue'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendCode'
op|'('
number|'400'
op|','
string|"'Command %r takes 2 parameters.'"
op|'%'
string|"'put'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'key'
op|','
name|'value'
op|'='
name|'keyAndValue'
op|'.'
name|'split'
op|'('
name|'None'
op|','
number|'1'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'sendCode'
op|'('
number|'400'
op|','
string|"'Command %r takes 2 parameters.'"
op|'%'
string|"'put'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'sendCode'
op|'('
number|'500'
op|','
string|"'put is not implemented yet.'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'class'
name|'PostfixTCPMapDictServerFactory'
op|'('
name|'protocol'
op|'.'
name|'ServerFactory'
op|','
nl|'\n'
DECL|class|PostfixTCPMapDictServerFactory
name|'UserDict'
op|'.'
name|'UserDict'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""An in-memory dictionary factory for PostfixTCPMapServer."""'
newline|'\n'
nl|'\n'
DECL|variable|protocol
name|'protocol'
op|'='
name|'PostfixTCPMapServer'
newline|'\n'
nl|'\n'
DECL|class|PostfixTCPMapDeferringDictServerFactory
dedent|''
name|'class'
name|'PostfixTCPMapDeferringDictServerFactory'
op|'('
name|'protocol'
op|'.'
name|'ServerFactory'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""An in-memory dictionary factory for PostfixTCPMapServer."""'
newline|'\n'
nl|'\n'
DECL|variable|protocol
name|'protocol'
op|'='
name|'PostfixTCPMapServer'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'data'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'data'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'data'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'data'
op|'.'
name|'update'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get
dedent|''
dedent|''
name|'def'
name|'get'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'self'
op|'.'
name|'data'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
