begin_unit
comment|'# Copyright (c) 2001-2009 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nChop up shoutcast stream into MP3s and metadata, if available.\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'web'
name|'import'
name|'http'
newline|'\n'
name|'from'
name|'twisted'
name|'import'
name|'copyright'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ShoutcastClient
name|'class'
name|'ShoutcastClient'
op|'('
name|'http'
op|'.'
name|'HTTPClient'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Shoutcast HTTP stream.\n\n    Modes can be \'length\', \'meta\' and \'mp3\'.\n\n    See U{http://www.smackfu.com/stuff/programming/shoutcast.html}\n    for details on the protocol.\n    """'
newline|'\n'
nl|'\n'
DECL|variable|userAgent
name|'userAgent'
op|'='
string|'"Twisted Shoutcast client "'
op|'+'
name|'copyright'
op|'.'
name|'version'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'path'
op|'='
string|'"/"'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'path'
op|'='
name|'path'
newline|'\n'
name|'self'
op|'.'
name|'got_metadata'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'metaint'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'metamode'
op|'='
string|'"mp3"'
newline|'\n'
name|'self'
op|'.'
name|'databuffer'
op|'='
string|'""'
newline|'\n'
nl|'\n'
DECL|member|connectionMade
dedent|''
name|'def'
name|'connectionMade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendCommand'
op|'('
string|'"GET"'
op|','
name|'self'
op|'.'
name|'path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sendHeader'
op|'('
string|'"User-Agent"'
op|','
name|'self'
op|'.'
name|'userAgent'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sendHeader'
op|'('
string|'"Icy-MetaData"'
op|','
string|'"1"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'endHeaders'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|lineReceived
dedent|''
name|'def'
name|'lineReceived'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
comment|'# fix shoutcast crappiness'
nl|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'firstLine'
name|'and'
name|'line'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'len'
op|'('
name|'line'
op|'.'
name|'split'
op|'('
string|'": "'
op|','
number|'1'
op|')'
op|')'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'line'
op|'='
name|'line'
op|'.'
name|'replace'
op|'('
string|'":"'
op|','
string|'": "'
op|','
number|'1'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'http'
op|'.'
name|'HTTPClient'
op|'.'
name|'lineReceived'
op|'('
name|'self'
op|','
name|'line'
op|')'
newline|'\n'
nl|'\n'
DECL|member|handleHeader
dedent|''
name|'def'
name|'handleHeader'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
op|'=='
string|"'icy-metaint'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'metaint'
op|'='
name|'int'
op|'('
name|'value'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'got_metadata'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|handleEndHeaders
dedent|''
dedent|''
name|'def'
name|'handleEndHeaders'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Lets check if we got metadata, and set the'
nl|'\n'
comment|'# appropriate handleResponsePart method.'
nl|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'got_metadata'
op|':'
newline|'\n'
comment|'# if we have metadata, then it has to be parsed out of the data stream'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'handleResponsePart'
op|'='
name|'self'
op|'.'
name|'handleResponsePart_with_metadata'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# otherwise, all the data is MP3 data'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'handleResponsePart'
op|'='
name|'self'
op|'.'
name|'gotMP3Data'
newline|'\n'
nl|'\n'
DECL|member|handleResponsePart_with_metadata
dedent|''
dedent|''
name|'def'
name|'handleResponsePart_with_metadata'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'databuffer'
op|'+='
name|'data'
newline|'\n'
name|'while'
name|'self'
op|'.'
name|'databuffer'
op|':'
newline|'\n'
indent|'            '
name|'stop'
op|'='
name|'getattr'
op|'('
name|'self'
op|','
string|'"handle_%s"'
op|'%'
name|'self'
op|'.'
name|'metamode'
op|')'
op|'('
op|')'
newline|'\n'
name|'if'
name|'stop'
op|':'
newline|'\n'
indent|'                '
name|'return'
newline|'\n'
nl|'\n'
DECL|member|handle_length
dedent|''
dedent|''
dedent|''
name|'def'
name|'handle_length'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'remaining'
op|'='
name|'ord'
op|'('
name|'self'
op|'.'
name|'databuffer'
op|'['
number|'0'
op|']'
op|')'
op|'*'
number|'16'
newline|'\n'
name|'self'
op|'.'
name|'databuffer'
op|'='
name|'self'
op|'.'
name|'databuffer'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'metamode'
op|'='
string|'"meta"'
newline|'\n'
nl|'\n'
DECL|member|handle_mp3
dedent|''
name|'def'
name|'handle_mp3'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'databuffer'
op|')'
op|'>'
name|'self'
op|'.'
name|'metaint'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'gotMP3Data'
op|'('
name|'self'
op|'.'
name|'databuffer'
op|'['
op|':'
name|'self'
op|'.'
name|'metaint'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'databuffer'
op|'='
name|'self'
op|'.'
name|'databuffer'
op|'['
name|'self'
op|'.'
name|'metaint'
op|':'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'metamode'
op|'='
string|'"length"'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'1'
newline|'\n'
nl|'\n'
DECL|member|handle_meta
dedent|''
dedent|''
name|'def'
name|'handle_meta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'databuffer'
op|')'
op|'>='
name|'self'
op|'.'
name|'remaining'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'remaining'
op|':'
newline|'\n'
indent|'                '
name|'data'
op|'='
name|'self'
op|'.'
name|'databuffer'
op|'['
op|':'
name|'self'
op|'.'
name|'remaining'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'gotMetaData'
op|'('
name|'self'
op|'.'
name|'parseMetadata'
op|'('
name|'data'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'databuffer'
op|'='
name|'self'
op|'.'
name|'databuffer'
op|'['
name|'self'
op|'.'
name|'remaining'
op|':'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'metamode'
op|'='
string|'"mp3"'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'1'
newline|'\n'
nl|'\n'
DECL|member|parseMetadata
dedent|''
dedent|''
name|'def'
name|'parseMetadata'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'meta'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'chunk'
name|'in'
name|'data'
op|'.'
name|'split'
op|'('
string|"';'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'chunk'
op|'='
name|'chunk'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'replace'
op|'('
string|'"\\x00"'
op|','
string|'""'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'chunk'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'key'
op|','
name|'value'
op|'='
name|'chunk'
op|'.'
name|'split'
op|'('
string|"'='"
op|','
number|'1'
op|')'
newline|'\n'
name|'if'
name|'value'
op|'.'
name|'startswith'
op|'('
string|'"\'"'
op|')'
name|'and'
name|'value'
op|'.'
name|'endswith'
op|'('
string|'"\'"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'value'
op|'='
name|'value'
op|'['
number|'1'
op|':'
op|'-'
number|'1'
op|']'
newline|'\n'
dedent|''
name|'meta'
op|'.'
name|'append'
op|'('
op|'('
name|'key'
op|','
name|'value'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'meta'
newline|'\n'
nl|'\n'
DECL|member|gotMetaData
dedent|''
name|'def'
name|'gotMetaData'
op|'('
name|'self'
op|','
name|'metadata'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Called with a list of (key, value) pairs of metadata,\n        if metadata is available on the server.\n\n        Will only be called on non-empty metadata.\n        """'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|','
string|'"implement in subclass"'
newline|'\n'
nl|'\n'
DECL|member|gotMP3Data
dedent|''
name|'def'
name|'gotMP3Data'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Called with chunk of MP3 data."""'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|','
string|'"implement in subclass"'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
