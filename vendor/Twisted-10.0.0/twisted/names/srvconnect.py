begin_unit
comment|'# -*- test-case-name: twisted.names.test.test_srvconnect -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2009 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
name|'import'
name|'random'
newline|'\n'
nl|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'error'
op|','
name|'interfaces'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'names'
name|'import'
name|'client'
op|','
name|'dns'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'names'
op|'.'
name|'error'
name|'import'
name|'DNSNameError'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'compat'
name|'import'
name|'reduce'
newline|'\n'
nl|'\n'
DECL|class|_SRVConnector_ClientFactoryWrapper
name|'class'
name|'_SRVConnector_ClientFactoryWrapper'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'connector'
op|','
name|'wrappedFactory'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'__connector'
op|'='
name|'connector'
newline|'\n'
name|'self'
op|'.'
name|'__wrappedFactory'
op|'='
name|'wrappedFactory'
newline|'\n'
nl|'\n'
DECL|member|startedConnecting
dedent|''
name|'def'
name|'startedConnecting'
op|'('
name|'self'
op|','
name|'connector'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'__wrappedFactory'
op|'.'
name|'startedConnecting'
op|'('
name|'self'
op|'.'
name|'__connector'
op|')'
newline|'\n'
nl|'\n'
DECL|member|clientConnectionFailed
dedent|''
name|'def'
name|'clientConnectionFailed'
op|'('
name|'self'
op|','
name|'connector'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'__connector'
op|'.'
name|'connectionFailed'
op|'('
name|'reason'
op|')'
newline|'\n'
nl|'\n'
DECL|member|clientConnectionLost
dedent|''
name|'def'
name|'clientConnectionLost'
op|'('
name|'self'
op|','
name|'connector'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'__connector'
op|'.'
name|'connectionLost'
op|'('
name|'reason'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__getattr__
dedent|''
name|'def'
name|'__getattr__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'getattr'
op|'('
name|'self'
op|'.'
name|'__wrappedFactory'
op|','
name|'key'
op|')'
newline|'\n'
nl|'\n'
DECL|class|SRVConnector
dedent|''
dedent|''
name|'class'
name|'SRVConnector'
op|':'
newline|'\n'
indent|'    '
string|'"""A connector that looks up DNS SRV records. See RFC2782."""'
newline|'\n'
nl|'\n'
name|'implements'
op|'('
name|'interfaces'
op|'.'
name|'IConnector'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|stopAfterDNS
name|'stopAfterDNS'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'reactor'
op|','
name|'service'
op|','
name|'domain'
op|','
name|'factory'
op|','
nl|'\n'
name|'protocol'
op|'='
string|"'tcp'"
op|','
name|'connectFuncName'
op|'='
string|"'connectTCP'"
op|','
nl|'\n'
name|'connectFuncArgs'
op|'='
op|'('
op|')'
op|','
nl|'\n'
name|'connectFuncKwArgs'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'reactor'
op|'='
name|'reactor'
newline|'\n'
name|'self'
op|'.'
name|'service'
op|'='
name|'service'
newline|'\n'
name|'self'
op|'.'
name|'domain'
op|'='
name|'domain'
newline|'\n'
name|'self'
op|'.'
name|'factory'
op|'='
name|'factory'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'protocol'
op|'='
name|'protocol'
newline|'\n'
name|'self'
op|'.'
name|'connectFuncName'
op|'='
name|'connectFuncName'
newline|'\n'
name|'self'
op|'.'
name|'connectFuncArgs'
op|'='
name|'connectFuncArgs'
newline|'\n'
name|'self'
op|'.'
name|'connectFuncKwArgs'
op|'='
name|'connectFuncKwArgs'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'connector'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'servers'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'orderedServers'
op|'='
name|'None'
comment|'# list of servers already used in this round'
newline|'\n'
nl|'\n'
DECL|member|connect
dedent|''
name|'def'
name|'connect'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Start connection to remote server."""'
newline|'\n'
name|'self'
op|'.'
name|'factory'
op|'.'
name|'doStart'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'factory'
op|'.'
name|'startedConnecting'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'domain'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'connectionFailed'
op|'('
name|'error'
op|'.'
name|'DNSLookupError'
op|'('
string|'"Domain is not defined."'
op|')'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'d'
op|'='
name|'client'
op|'.'
name|'lookupService'
op|'('
string|"'_%s._%s.%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'service'
op|','
nl|'\n'
name|'self'
op|'.'
name|'protocol'
op|','
nl|'\n'
name|'self'
op|'.'
name|'domain'
op|')'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_cbGotServers'
op|','
name|'self'
op|'.'
name|'_ebGotServers'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'x'
op|','
name|'self'
op|'='
name|'self'
op|':'
name|'self'
op|'.'
name|'_reallyConnect'
op|'('
op|')'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'connectionFailed'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'self'
op|'.'
name|'connector'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_reallyConnect'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'connector'
op|'.'
name|'connect'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_ebGotServers
dedent|''
dedent|''
name|'def'
name|'_ebGotServers'
op|'('
name|'self'
op|','
name|'failure'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'failure'
op|'.'
name|'trap'
op|'('
name|'DNSNameError'
op|')'
newline|'\n'
nl|'\n'
comment|'# Some DNS servers reply with NXDOMAIN when in fact there are'
nl|'\n'
comment|'# just no SRV records for that domain. Act as if we just got an'
nl|'\n'
comment|'# empty response and use fallback.'
nl|'\n'
nl|'\n'
name|'self'
op|'.'
name|'servers'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'orderedServers'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|_cbGotServers
dedent|''
name|'def'
name|'_cbGotServers'
op|'('
name|'self'
op|','
op|'('
name|'answers'
op|','
name|'auth'
op|','
name|'add'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'len'
op|'('
name|'answers'
op|')'
op|'=='
number|'1'
name|'and'
name|'answers'
op|'['
number|'0'
op|']'
op|'.'
name|'type'
op|'=='
name|'dns'
op|'.'
name|'SRV'
name|'and'
name|'answers'
op|'['
number|'0'
op|']'
op|'.'
name|'payload'
name|'and'
name|'answers'
op|'['
number|'0'
op|']'
op|'.'
name|'payload'
op|'.'
name|'target'
op|'=='
name|'dns'
op|'.'
name|'Name'
op|'('
string|"'.'"
op|')'
op|':'
newline|'\n'
comment|'# decidedly not available'
nl|'\n'
indent|'            '
name|'raise'
name|'error'
op|'.'
name|'DNSLookupError'
op|'('
string|'"Service %s not available for domain %s."'
nl|'\n'
op|'%'
op|'('
name|'repr'
op|'('
name|'self'
op|'.'
name|'service'
op|')'
op|','
name|'repr'
op|'('
name|'self'
op|'.'
name|'domain'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'servers'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'orderedServers'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'a'
name|'in'
name|'answers'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'a'
op|'.'
name|'type'
op|'!='
name|'dns'
op|'.'
name|'SRV'
name|'or'
name|'not'
name|'a'
op|'.'
name|'payload'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'orderedServers'
op|'.'
name|'append'
op|'('
op|'('
name|'a'
op|'.'
name|'payload'
op|'.'
name|'priority'
op|','
name|'a'
op|'.'
name|'payload'
op|'.'
name|'weight'
op|','
nl|'\n'
name|'str'
op|'('
name|'a'
op|'.'
name|'payload'
op|'.'
name|'target'
op|')'
op|','
name|'a'
op|'.'
name|'payload'
op|'.'
name|'port'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_serverCmp
dedent|''
dedent|''
name|'def'
name|'_serverCmp'
op|'('
name|'self'
op|','
name|'a'
op|','
name|'b'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'a'
op|'['
number|'0'
op|']'
op|'!='
name|'b'
op|'['
number|'0'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'cmp'
op|'('
name|'a'
op|'['
number|'0'
op|']'
op|','
name|'b'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'cmp'
op|'('
name|'a'
op|'['
number|'1'
op|']'
op|','
name|'b'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|pickServer
dedent|''
dedent|''
name|'def'
name|'pickServer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'assert'
name|'self'
op|'.'
name|'servers'
name|'is'
name|'not'
name|'None'
newline|'\n'
name|'assert'
name|'self'
op|'.'
name|'orderedServers'
name|'is'
name|'not'
name|'None'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'servers'
name|'and'
name|'not'
name|'self'
op|'.'
name|'orderedServers'
op|':'
newline|'\n'
comment|'# no SRV record, fall back..'
nl|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'domain'
op|','
name|'self'
op|'.'
name|'service'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'servers'
name|'and'
name|'self'
op|'.'
name|'orderedServers'
op|':'
newline|'\n'
comment|'# start new round'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'servers'
op|'='
name|'self'
op|'.'
name|'orderedServers'
newline|'\n'
name|'self'
op|'.'
name|'orderedServers'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'assert'
name|'self'
op|'.'
name|'servers'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'servers'
op|'.'
name|'sort'
op|'('
name|'self'
op|'.'
name|'_serverCmp'
op|')'
newline|'\n'
name|'minPriority'
op|'='
name|'self'
op|'.'
name|'servers'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
name|'weightIndex'
op|'='
name|'zip'
op|'('
name|'xrange'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'servers'
op|')'
op|')'
op|','
op|'['
name|'x'
op|'['
number|'1'
op|']'
name|'for'
name|'x'
name|'in'
name|'self'
op|'.'
name|'servers'
nl|'\n'
name|'if'
name|'x'
op|'['
number|'0'
op|']'
op|'=='
name|'minPriority'
op|']'
op|')'
newline|'\n'
name|'weightSum'
op|'='
name|'reduce'
op|'('
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
op|'('
name|'None'
op|','
name|'x'
op|'['
number|'1'
op|']'
op|'+'
name|'y'
op|'['
number|'1'
op|']'
op|')'
op|','
name|'weightIndex'
op|','
op|'('
name|'None'
op|','
number|'0'
op|')'
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'rand'
op|'='
name|'random'
op|'.'
name|'randint'
op|'('
number|'0'
op|','
name|'weightSum'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'index'
op|','
name|'weight'
name|'in'
name|'weightIndex'
op|':'
newline|'\n'
indent|'            '
name|'weightSum'
op|'-='
name|'weight'
newline|'\n'
name|'if'
name|'weightSum'
op|'<='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'chosen'
op|'='
name|'self'
op|'.'
name|'servers'
op|'['
name|'index'
op|']'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'servers'
op|'['
name|'index'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'orderedServers'
op|'.'
name|'append'
op|'('
name|'chosen'
op|')'
newline|'\n'
nl|'\n'
name|'p'
op|','
name|'w'
op|','
name|'host'
op|','
name|'port'
op|'='
name|'chosen'
newline|'\n'
name|'return'
name|'host'
op|','
name|'port'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'raise'
name|'RuntimeError'
op|','
string|"'Impossible %s pickServer result.'"
op|'%'
name|'self'
op|'.'
name|'__class__'
op|'.'
name|'__name__'
newline|'\n'
nl|'\n'
DECL|member|_reallyConnect
dedent|''
name|'def'
name|'_reallyConnect'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'stopAfterDNS'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stopAfterDNS'
op|'='
number|'0'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'host'
op|','
name|'self'
op|'.'
name|'port'
op|'='
name|'self'
op|'.'
name|'pickServer'
op|'('
op|')'
newline|'\n'
name|'assert'
name|'self'
op|'.'
name|'host'
name|'is'
name|'not'
name|'None'
op|','
string|"'Must have a host to connect to.'"
newline|'\n'
name|'assert'
name|'self'
op|'.'
name|'port'
name|'is'
name|'not'
name|'None'
op|','
string|"'Must have a port to connect to.'"
newline|'\n'
nl|'\n'
name|'connectFunc'
op|'='
name|'getattr'
op|'('
name|'self'
op|'.'
name|'reactor'
op|','
name|'self'
op|'.'
name|'connectFuncName'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connector'
op|'='
name|'connectFunc'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'host'
op|','
name|'self'
op|'.'
name|'port'
op|','
nl|'\n'
name|'_SRVConnector_ClientFactoryWrapper'
op|'('
name|'self'
op|','
name|'self'
op|'.'
name|'factory'
op|')'
op|','
nl|'\n'
op|'*'
name|'self'
op|'.'
name|'connectFuncArgs'
op|','
op|'**'
name|'self'
op|'.'
name|'connectFuncKwArgs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|stopConnecting
dedent|''
name|'def'
name|'stopConnecting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Stop attempting to connect."""'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'connector'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'connector'
op|'.'
name|'stopConnecting'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stopAfterDNS'
op|'='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|disconnect
dedent|''
dedent|''
name|'def'
name|'disconnect'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Disconnect whatever our are state is."""'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'connector'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'connector'
op|'.'
name|'disconnect'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stopConnecting'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|getDestination
dedent|''
dedent|''
name|'def'
name|'getDestination'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'assert'
name|'self'
op|'.'
name|'connector'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'connector'
op|'.'
name|'getDestination'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|connectionFailed
dedent|''
name|'def'
name|'connectionFailed'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'factory'
op|'.'
name|'clientConnectionFailed'
op|'('
name|'self'
op|','
name|'reason'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'factory'
op|'.'
name|'doStop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|connectionLost
dedent|''
name|'def'
name|'connectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'factory'
op|'.'
name|'clientConnectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'factory'
op|'.'
name|'doStop'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
