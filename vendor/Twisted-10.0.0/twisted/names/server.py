begin_unit
comment|'# -*- test-case-name: twisted.names.test.test_names -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nAsync DNS server\n\nFuture plans:\n    - Better config file format maybe\n    - Make sure to differentiate between different classes\n    - notice truncation bit\n\nImportant: No additional processing is done on some of the record types.\nThis violates the most basic RFC and is just plain annoying\nfor resolvers to deal with.  Fix it.\n\n@author: Jp Calderone\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'protocol'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'names'
name|'import'
name|'dns'
op|','
name|'resolve'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DNSServerFactory
name|'class'
name|'DNSServerFactory'
op|'('
name|'protocol'
op|'.'
name|'ServerFactory'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Server factory and tracker for L{DNSProtocol} connections.  This\n    class also provides records for responses to DNS queries.\n\n    @ivar connections: A list of all the connected L{DNSProtocol}\n        instances using this object as their controller.\n    @type connections: C{list} of L{DNSProtocol}\n    """'
newline|'\n'
nl|'\n'
DECL|variable|protocol
name|'protocol'
op|'='
name|'dns'
op|'.'
name|'DNSProtocol'
newline|'\n'
DECL|variable|cache
name|'cache'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'authorities'
op|'='
name|'None'
op|','
name|'caches'
op|'='
name|'None'
op|','
name|'clients'
op|'='
name|'None'
op|','
name|'verbose'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resolvers'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'authorities'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'resolvers'
op|'.'
name|'extend'
op|'('
name|'authorities'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'caches'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'resolvers'
op|'.'
name|'extend'
op|'('
name|'caches'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'clients'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'resolvers'
op|'.'
name|'extend'
op|'('
name|'clients'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'canRecurse'
op|'='
name|'not'
name|'not'
name|'clients'
newline|'\n'
name|'self'
op|'.'
name|'resolver'
op|'='
name|'resolve'
op|'.'
name|'ResolverChain'
op|'('
name|'resolvers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'verbose'
op|'='
name|'verbose'
newline|'\n'
name|'if'
name|'caches'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'cache'
op|'='
name|'caches'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'connections'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|buildProtocol
dedent|''
name|'def'
name|'buildProtocol'
op|'('
name|'self'
op|','
name|'addr'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|'='
name|'self'
op|'.'
name|'protocol'
op|'('
name|'self'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'factory'
op|'='
name|'self'
newline|'\n'
name|'return'
name|'p'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|connectionMade
dedent|''
name|'def'
name|'connectionMade'
op|'('
name|'self'
op|','
name|'protocol'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Track a newly connected L{DNSProtocol}.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'connections'
op|'.'
name|'append'
op|'('
name|'protocol'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|connectionLost
dedent|''
name|'def'
name|'connectionLost'
op|'('
name|'self'
op|','
name|'protocol'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Stop tracking a no-longer connected L{DNSProtocol}.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'connections'
op|'.'
name|'remove'
op|'('
name|'protocol'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|sendReply
dedent|''
name|'def'
name|'sendReply'
op|'('
name|'self'
op|','
name|'protocol'
op|','
name|'message'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'verbose'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'s'
op|'='
string|"' '"
op|'.'
name|'join'
op|'('
op|'['
name|'str'
op|'('
name|'a'
op|'.'
name|'payload'
op|')'
name|'for'
name|'a'
name|'in'
name|'message'
op|'.'
name|'answers'
op|']'
op|')'
newline|'\n'
name|'auth'
op|'='
string|"' '"
op|'.'
name|'join'
op|'('
op|'['
name|'str'
op|'('
name|'a'
op|'.'
name|'payload'
op|')'
name|'for'
name|'a'
name|'in'
name|'message'
op|'.'
name|'authority'
op|']'
op|')'
newline|'\n'
name|'add'
op|'='
string|"' '"
op|'.'
name|'join'
op|'('
op|'['
name|'str'
op|'('
name|'a'
op|'.'
name|'payload'
op|')'
name|'for'
name|'a'
name|'in'
name|'message'
op|'.'
name|'additional'
op|']'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'s'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Replying with no answers"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Answers are "'
op|'+'
name|'s'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Authority is "'
op|'+'
name|'auth'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Additional is "'
op|'+'
name|'add'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'address'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'protocol'
op|'.'
name|'writeMessage'
op|'('
name|'message'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'protocol'
op|'.'
name|'writeMessage'
op|'('
name|'message'
op|','
name|'address'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'verbose'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Processed query in %0.3f seconds"'
op|'%'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'message'
op|'.'
name|'timeReceived'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|gotResolverResponse
dedent|''
dedent|''
name|'def'
name|'gotResolverResponse'
op|'('
name|'self'
op|','
op|'('
name|'ans'
op|','
name|'auth'
op|','
name|'add'
op|')'
op|','
name|'protocol'
op|','
name|'message'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'message'
op|'.'
name|'rCode'
op|'='
name|'dns'
op|'.'
name|'OK'
newline|'\n'
name|'message'
op|'.'
name|'answers'
op|'='
name|'ans'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'ans'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'x'
op|'.'
name|'isAuthoritative'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'message'
op|'.'
name|'auth'
op|'='
number|'1'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'message'
op|'.'
name|'authority'
op|'='
name|'auth'
newline|'\n'
name|'message'
op|'.'
name|'additional'
op|'='
name|'add'
newline|'\n'
name|'self'
op|'.'
name|'sendReply'
op|'('
name|'protocol'
op|','
name|'message'
op|','
name|'address'
op|')'
newline|'\n'
nl|'\n'
name|'l'
op|'='
name|'len'
op|'('
name|'ans'
op|')'
op|'+'
name|'len'
op|'('
name|'auth'
op|')'
op|'+'
name|'len'
op|'('
name|'add'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Lookup found %d record%s"'
op|'%'
op|'('
name|'l'
op|','
name|'l'
op|'!='
number|'1'
name|'and'
string|'"s"'
name|'or'
string|'""'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'cache'
name|'and'
name|'l'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'cache'
op|'.'
name|'cacheResult'
op|'('
nl|'\n'
name|'message'
op|'.'
name|'queries'
op|'['
number|'0'
op|']'
op|','
op|'('
name|'ans'
op|','
name|'auth'
op|','
name|'add'
op|')'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|gotResolverError
dedent|''
dedent|''
name|'def'
name|'gotResolverError'
op|'('
name|'self'
op|','
name|'failure'
op|','
name|'protocol'
op|','
name|'message'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'failure'
op|'.'
name|'check'
op|'('
name|'dns'
op|'.'
name|'DomainError'
op|','
name|'dns'
op|'.'
name|'AuthoritativeDomainError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'message'
op|'.'
name|'rCode'
op|'='
name|'dns'
op|'.'
name|'ENAME'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'message'
op|'.'
name|'rCode'
op|'='
name|'dns'
op|'.'
name|'ESERVER'
newline|'\n'
name|'log'
op|'.'
name|'err'
op|'('
name|'failure'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'sendReply'
op|'('
name|'protocol'
op|','
name|'message'
op|','
name|'address'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Lookup failed"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|handleQuery
dedent|''
dedent|''
name|'def'
name|'handleQuery'
op|'('
name|'self'
op|','
name|'message'
op|','
name|'protocol'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
comment|'# Discard all but the first query!  HOO-AAH HOOOOO-AAAAH'
nl|'\n'
comment|"# (no other servers implement multi-query messages, so we won't either)"
nl|'\n'
indent|'        '
name|'query'
op|'='
name|'message'
op|'.'
name|'queries'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'resolver'
op|'.'
name|'query'
op|'('
name|'query'
op|')'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'gotResolverResponse'
op|','
name|'protocol'
op|','
name|'message'
op|','
name|'address'
nl|'\n'
op|')'
op|'.'
name|'addErrback'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'gotResolverError'
op|','
name|'protocol'
op|','
name|'message'
op|','
name|'address'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|handleInverseQuery
dedent|''
name|'def'
name|'handleInverseQuery'
op|'('
name|'self'
op|','
name|'message'
op|','
name|'protocol'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'message'
op|'.'
name|'rCode'
op|'='
name|'dns'
op|'.'
name|'ENOTIMP'
newline|'\n'
name|'self'
op|'.'
name|'sendReply'
op|'('
name|'protocol'
op|','
name|'message'
op|','
name|'address'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Inverse query from %r"'
op|'%'
op|'('
name|'address'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|handleStatus
dedent|''
dedent|''
name|'def'
name|'handleStatus'
op|'('
name|'self'
op|','
name|'message'
op|','
name|'protocol'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'message'
op|'.'
name|'rCode'
op|'='
name|'dns'
op|'.'
name|'ENOTIMP'
newline|'\n'
name|'self'
op|'.'
name|'sendReply'
op|'('
name|'protocol'
op|','
name|'message'
op|','
name|'address'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Status request from %r"'
op|'%'
op|'('
name|'address'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|handleNotify
dedent|''
dedent|''
name|'def'
name|'handleNotify'
op|'('
name|'self'
op|','
name|'message'
op|','
name|'protocol'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'message'
op|'.'
name|'rCode'
op|'='
name|'dns'
op|'.'
name|'ENOTIMP'
newline|'\n'
name|'self'
op|'.'
name|'sendReply'
op|'('
name|'protocol'
op|','
name|'message'
op|','
name|'address'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Notify message from %r"'
op|'%'
op|'('
name|'address'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|handleOther
dedent|''
dedent|''
name|'def'
name|'handleOther'
op|'('
name|'self'
op|','
name|'message'
op|','
name|'protocol'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'message'
op|'.'
name|'rCode'
op|'='
name|'dns'
op|'.'
name|'ENOTIMP'
newline|'\n'
name|'self'
op|'.'
name|'sendReply'
op|'('
name|'protocol'
op|','
name|'message'
op|','
name|'address'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Unknown op code (%d) from %r"'
op|'%'
op|'('
name|'message'
op|'.'
name|'opCode'
op|','
name|'address'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|messageReceived
dedent|''
dedent|''
name|'def'
name|'messageReceived'
op|'('
name|'self'
op|','
name|'message'
op|','
name|'proto'
op|','
name|'address'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'message'
op|'.'
name|'timeReceived'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'verbose'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'s'
op|'='
string|"' '"
op|'.'
name|'join'
op|'('
op|'['
name|'str'
op|'('
name|'q'
op|')'
name|'for'
name|'q'
name|'in'
name|'message'
op|'.'
name|'queries'
op|']'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'self'
op|'.'
name|'verbose'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'s'
op|'='
string|"' '"
op|'.'
name|'join'
op|'('
op|'['
name|'dns'
op|'.'
name|'QUERY_TYPES'
op|'.'
name|'get'
op|'('
name|'q'
op|'.'
name|'type'
op|','
string|"'UNKNOWN'"
op|')'
name|'for'
name|'q'
name|'in'
name|'message'
op|'.'
name|'queries'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'len'
op|'('
name|'s'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Empty query from %r"'
op|'%'
op|'('
op|'('
name|'address'
name|'or'
name|'proto'
op|'.'
name|'transport'
op|'.'
name|'getPeer'
op|'('
op|')'
op|')'
op|','
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"%s query from %r"'
op|'%'
op|'('
name|'s'
op|','
name|'address'
name|'or'
name|'proto'
op|'.'
name|'transport'
op|'.'
name|'getPeer'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'message'
op|'.'
name|'recAv'
op|'='
name|'self'
op|'.'
name|'canRecurse'
newline|'\n'
name|'message'
op|'.'
name|'answer'
op|'='
number|'1'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'allowQuery'
op|'('
name|'message'
op|','
name|'proto'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'message'
op|'.'
name|'rCode'
op|'='
name|'dns'
op|'.'
name|'EREFUSED'
newline|'\n'
name|'self'
op|'.'
name|'sendReply'
op|'('
name|'proto'
op|','
name|'message'
op|','
name|'address'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'message'
op|'.'
name|'opCode'
op|'=='
name|'dns'
op|'.'
name|'OP_QUERY'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'handleQuery'
op|'('
name|'message'
op|','
name|'proto'
op|','
name|'address'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'message'
op|'.'
name|'opCode'
op|'=='
name|'dns'
op|'.'
name|'OP_INVERSE'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'handleInverseQuery'
op|'('
name|'message'
op|','
name|'proto'
op|','
name|'address'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'message'
op|'.'
name|'opCode'
op|'=='
name|'dns'
op|'.'
name|'OP_STATUS'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'handleStatus'
op|'('
name|'message'
op|','
name|'proto'
op|','
name|'address'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'message'
op|'.'
name|'opCode'
op|'=='
name|'dns'
op|'.'
name|'OP_NOTIFY'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'handleNotify'
op|'('
name|'message'
op|','
name|'proto'
op|','
name|'address'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'handleOther'
op|'('
name|'message'
op|','
name|'proto'
op|','
name|'address'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|allowQuery
dedent|''
dedent|''
name|'def'
name|'allowQuery'
op|'('
name|'self'
op|','
name|'message'
op|','
name|'protocol'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
comment|'# Allow anything but empty queries'
nl|'\n'
indent|'        '
name|'return'
name|'len'
op|'('
name|'message'
op|'.'
name|'queries'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
