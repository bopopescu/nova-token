begin_unit
comment|'# Copyright (c) 2001-2009 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nA kqueue()/kevent() based implementation of the Twisted main loop.\n\nTo install the event loop (and you should do this before any connections,\nlisteners or connectors are added)::\n\n    | from twisted.internet import kqreactor\n    | kqreactor.install()\n\nThis reactor only works on FreeBSD and requires PyKQueue 1.3, which is\navailable at:  U{http://people.freebsd.org/~dwhite/PyKQueue/}\n\n\n\nYou\'re going to need to patch PyKqueue::\n\n    =====================================================\n    --- PyKQueue-1.3/kqsyscallmodule.c\tSun Jan 28 21:59:50 2001\n    +++ PyKQueue-1.3/kqsyscallmodule.c.new\tTue Jul 30 18:06:08 2002\n    @@ -137,7 +137,7 @@\n     }\n     \n     statichere PyTypeObject KQEvent_Type = {\n    -  PyObject_HEAD_INIT(NULL)\n    +  PyObject_HEAD_INIT(&PyType_Type)\n       0,                             // ob_size\n       "KQEvent",                     // tp_name\n       sizeof(KQEventObject),         // tp_basicsize\n    @@ -291,13 +291,14 @@\n     \n       /* Build timespec for timeout */\n       totimespec.tv_sec = timeout / 1000;\n    -  totimespec.tv_nsec = (timeout % 1000) * 100000;\n    +  totimespec.tv_nsec = (timeout % 1000) * 1000000;\n     \n       // printf("timespec: sec=%d nsec=%d\\\\n", totimespec.tv_sec, totimespec.tv_nsec);\n     \n       /* Make the call */\n    -\n    +  Py_BEGIN_ALLOW_THREADS\n       gotNumEvents = kevent (self->fd, changelist, haveNumEvents, triggered, wantNumEvents, &totimespec);\n    +  Py_END_ALLOW_THREADS\n     \n       /* Don\'t need the input event list anymore, so get rid of it */\n       free (changelist);\n    @@ -361,7 +362,7 @@\n     statichere PyTypeObject KQueue_Type = {\n            /* The ob_type field must be initialized in the module init function\n             * to be portable to Windows without using C++. */\n    -\tPyObject_HEAD_INIT(NULL)\n    +\tPyObject_HEAD_INIT(&PyType_Type)\n            0,\t\t\t/*ob_size*/\n            "KQueue",\t\t\t/*tp_name*/\n            sizeof(KQueueObject),\t/*tp_basicsize*/\n\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'errno'
op|','
name|'sys'
newline|'\n'
nl|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
newline|'\n'
nl|'\n'
name|'from'
name|'kqsyscall'
name|'import'
name|'EVFILT_READ'
op|','
name|'EVFILT_WRITE'
op|','
name|'EV_DELETE'
op|','
name|'EV_ADD'
newline|'\n'
name|'from'
name|'kqsyscall'
name|'import'
name|'kqueue'
op|','
name|'kevent'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'interfaces'
name|'import'
name|'IReactorFDSet'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
op|','
name|'failure'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'main'
op|','
name|'posixbase'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|KQueueReactor
name|'class'
name|'KQueueReactor'
op|'('
name|'posixbase'
op|'.'
name|'PosixReactorBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A reactor that uses kqueue(2)/kevent(2).\n\n    @ivar _kq: A L{kqueue} which will be used to check for I/O readiness.\n\n    @ivar _selectables: A dictionary mapping integer file descriptors to\n        instances of L{FileDescriptor} which have been registered with the\n        reactor.  All L{FileDescriptors} which are currently receiving read or\n        write readiness notifications will be present as values in this\n        dictionary.\n\n    @ivar _reads: A dictionary mapping integer file descriptors to arbitrary\n        values (this is essentially a set).  Keys in this dictionary will be\n        registered with C{_kq} for read readiness notifications which will be\n        dispatched to the corresponding L{FileDescriptor} instances in\n        C{_selectables}.\n\n    @ivar _writes: A dictionary mapping integer file descriptors to arbitrary\n        values (this is essentially a set).  Keys in this dictionary will be\n        registered with C{_kq} for write readiness notifications which will be\n        dispatched to the corresponding L{FileDescriptor} instances in\n        C{_selectables}.\n    """'
newline|'\n'
name|'implements'
op|'('
name|'IReactorFDSet'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Initialize kqueue object, file descriptor tracking dictionaries, and the\n        base class.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_kq'
op|'='
name|'kqueue'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_reads'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_writes'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_selectables'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'posixbase'
op|'.'
name|'PosixReactorBase'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_updateRegistration
dedent|''
name|'def'
name|'_updateRegistration'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_kq'
op|'.'
name|'kevent'
op|'('
op|'['
name|'kevent'
op|'('
op|'*'
name|'args'
op|')'
op|']'
op|','
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|addReader
dedent|''
name|'def'
name|'addReader'
op|'('
name|'self'
op|','
name|'reader'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Add a FileDescriptor for notification of data available to read.\n        """'
newline|'\n'
name|'fd'
op|'='
name|'reader'
op|'.'
name|'fileno'
op|'('
op|')'
newline|'\n'
name|'if'
name|'fd'
name|'not'
name|'in'
name|'self'
op|'.'
name|'_reads'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_selectables'
op|'['
name|'fd'
op|']'
op|'='
name|'reader'
newline|'\n'
name|'self'
op|'.'
name|'_reads'
op|'['
name|'fd'
op|']'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'_updateRegistration'
op|'('
name|'fd'
op|','
name|'EVFILT_READ'
op|','
name|'EV_ADD'
op|')'
newline|'\n'
nl|'\n'
DECL|member|addWriter
dedent|''
dedent|''
name|'def'
name|'addWriter'
op|'('
name|'self'
op|','
name|'writer'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Add a FileDescriptor for notification of data available to write.\n        """'
newline|'\n'
name|'fd'
op|'='
name|'writer'
op|'.'
name|'fileno'
op|'('
op|')'
newline|'\n'
name|'if'
name|'fd'
name|'not'
name|'in'
name|'self'
op|'.'
name|'_writes'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_selectables'
op|'['
name|'fd'
op|']'
op|'='
name|'writer'
newline|'\n'
name|'self'
op|'.'
name|'_writes'
op|'['
name|'fd'
op|']'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'_updateRegistration'
op|'('
name|'fd'
op|','
name|'EVFILT_WRITE'
op|','
name|'EV_ADD'
op|')'
newline|'\n'
nl|'\n'
DECL|member|removeReader
dedent|''
dedent|''
name|'def'
name|'removeReader'
op|'('
name|'self'
op|','
name|'reader'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Remove a Selectable for notification of data available to read.\n        """'
newline|'\n'
name|'fd'
op|'='
name|'reader'
op|'.'
name|'fileno'
op|'('
op|')'
newline|'\n'
name|'if'
name|'fd'
name|'in'
name|'self'
op|'.'
name|'_reads'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'self'
op|'.'
name|'_reads'
op|'['
name|'fd'
op|']'
newline|'\n'
name|'if'
name|'fd'
name|'not'
name|'in'
name|'self'
op|'.'
name|'_writes'
op|':'
newline|'\n'
indent|'                '
name|'del'
name|'self'
op|'.'
name|'_selectables'
op|'['
name|'fd'
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_updateRegistration'
op|'('
name|'fd'
op|','
name|'EVFILT_READ'
op|','
name|'EV_DELETE'
op|')'
newline|'\n'
nl|'\n'
DECL|member|removeWriter
dedent|''
dedent|''
name|'def'
name|'removeWriter'
op|'('
name|'self'
op|','
name|'writer'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Remove a Selectable for notification of data available to write.\n        """'
newline|'\n'
name|'fd'
op|'='
name|'writer'
op|'.'
name|'fileno'
op|'('
op|')'
newline|'\n'
name|'if'
name|'fd'
name|'in'
name|'self'
op|'.'
name|'_writes'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'self'
op|'.'
name|'_writes'
op|'['
name|'fd'
op|']'
newline|'\n'
name|'if'
name|'fd'
name|'not'
name|'in'
name|'self'
op|'.'
name|'_reads'
op|':'
newline|'\n'
indent|'                '
name|'del'
name|'self'
op|'.'
name|'_selectables'
op|'['
name|'fd'
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_updateRegistration'
op|'('
name|'fd'
op|','
name|'EVFILT_WRITE'
op|','
name|'EV_DELETE'
op|')'
newline|'\n'
nl|'\n'
DECL|member|removeAll
dedent|''
dedent|''
name|'def'
name|'removeAll'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Remove all selectables, and return a list of them.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_removeAll'
op|'('
nl|'\n'
op|'['
name|'self'
op|'.'
name|'_selectables'
op|'['
name|'fd'
op|']'
name|'for'
name|'fd'
name|'in'
name|'self'
op|'.'
name|'_reads'
op|']'
op|','
nl|'\n'
op|'['
name|'self'
op|'.'
name|'_selectables'
op|'['
name|'fd'
op|']'
name|'for'
name|'fd'
name|'in'
name|'self'
op|'.'
name|'_writes'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getReaders
dedent|''
name|'def'
name|'getReaders'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
name|'self'
op|'.'
name|'_selectables'
op|'['
name|'fd'
op|']'
name|'for'
name|'fd'
name|'in'
name|'self'
op|'.'
name|'_reads'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getWriters
dedent|''
name|'def'
name|'getWriters'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
name|'self'
op|'.'
name|'_selectables'
op|'['
name|'fd'
op|']'
name|'for'
name|'fd'
name|'in'
name|'self'
op|'.'
name|'_writes'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|doKEvent
dedent|''
name|'def'
name|'doKEvent'
op|'('
name|'self'
op|','
name|'timeout'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Poll the kqueue for new events."""'
newline|'\n'
name|'if'
name|'timeout'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'timeout'
op|'='
number|'1000'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'timeout'
op|'='
name|'int'
op|'('
name|'timeout'
op|'*'
number|'1000'
op|')'
comment|'# convert seconds to milliseconds'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'l'
op|'='
name|'self'
op|'.'
name|'_kq'
op|'.'
name|'kevent'
op|'('
op|'['
op|']'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'_selectables'
op|')'
op|','
name|'timeout'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'e'
op|'['
number|'0'
op|']'
op|'=='
name|'errno'
op|'.'
name|'EINTR'
op|':'
newline|'\n'
indent|'                '
name|'return'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
dedent|''
name|'_drdw'
op|'='
name|'self'
op|'.'
name|'_doWriteOrRead'
newline|'\n'
name|'for'
name|'event'
name|'in'
name|'l'
op|':'
newline|'\n'
indent|'            '
name|'why'
op|'='
name|'None'
newline|'\n'
name|'fd'
op|','
name|'filter'
op|'='
name|'event'
op|'.'
name|'ident'
op|','
name|'event'
op|'.'
name|'filter'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'selectable'
op|'='
name|'self'
op|'.'
name|'_selectables'
op|'['
name|'fd'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
comment|"# Handles the infrequent case where one selectable's"
nl|'\n'
comment|'# handler disconnects another.'
nl|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'log'
op|'.'
name|'callWithLogger'
op|'('
name|'selectable'
op|','
name|'_drdw'
op|','
name|'selectable'
op|','
name|'fd'
op|','
name|'filter'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_doWriteOrRead
dedent|''
dedent|''
name|'def'
name|'_doWriteOrRead'
op|'('
name|'self'
op|','
name|'selectable'
op|','
name|'fd'
op|','
name|'filter'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'filter'
op|'=='
name|'EVFILT_READ'
op|':'
newline|'\n'
indent|'                '
name|'why'
op|'='
name|'selectable'
op|'.'
name|'doRead'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'filter'
op|'=='
name|'EVFILT_WRITE'
op|':'
newline|'\n'
indent|'                '
name|'why'
op|'='
name|'selectable'
op|'.'
name|'doWrite'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'selectable'
op|'.'
name|'fileno'
op|'('
op|')'
op|'=='
name|'fd'
op|':'
newline|'\n'
indent|'                '
name|'why'
op|'='
name|'main'
op|'.'
name|'CONNECTION_LOST'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'why'
op|'='
name|'sys'
op|'.'
name|'exc_info'
op|'('
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'log'
op|'.'
name|'deferr'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'why'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'removeReader'
op|'('
name|'selectable'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'removeWriter'
op|'('
name|'selectable'
op|')'
newline|'\n'
name|'selectable'
op|'.'
name|'connectionLost'
op|'('
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'why'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|doIteration
dedent|''
dedent|''
name|'doIteration'
op|'='
name|'doKEvent'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|install
dedent|''
name|'def'
name|'install'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'k'
op|'='
name|'KQueueReactor'
op|'('
op|')'
newline|'\n'
name|'main'
op|'.'
name|'installReactor'
op|'('
name|'k'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|__all__
dedent|''
name|'__all__'
op|'='
op|'['
string|'"KQueueReactor"'
op|','
string|'"install"'
op|']'
newline|'\n'
endmarker|''
end_unit
