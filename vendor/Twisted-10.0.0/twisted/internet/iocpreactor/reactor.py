begin_unit
comment|'# -*- test-case-name: twisted.internet.test.test_iocp -*-'
nl|'\n'
comment|'# Copyright (c) 2008-2009 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nReactor that uses IO completion ports\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'warnings'
op|','
name|'socket'
op|','
name|'sys'
newline|'\n'
nl|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'base'
op|','
name|'interfaces'
op|','
name|'main'
op|','
name|'error'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
op|','
name|'failure'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'_dumbwin32proc'
name|'import'
name|'Process'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'iocpreactor'
name|'import'
name|'iocpsupport'
name|'as'
name|'_iocp'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'iocpreactor'
op|'.'
name|'const'
name|'import'
name|'WAIT_TIMEOUT'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'iocpreactor'
name|'import'
name|'tcp'
op|','
name|'udp'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'from'
name|'twisted'
op|'.'
name|'protocols'
op|'.'
name|'tls'
name|'import'
name|'TLSMemoryBIOFactory'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
comment|"# Either pyOpenSSL isn't installed, or it is too old for this code to work."
nl|'\n'
comment|"# The reactor won't provide IReactorSSL."
nl|'\n'
DECL|variable|TLSMemoryBIOFactory
indent|'    '
name|'TLSMemoryBIOFactory'
op|'='
name|'None'
newline|'\n'
DECL|variable|_extraInterfaces
name|'_extraInterfaces'
op|'='
op|'('
op|')'
newline|'\n'
name|'warnings'
op|'.'
name|'warn'
op|'('
nl|'\n'
string|'"pyOpenSSL 0.10 or newer is required for SSL support in iocpreactor. "'
nl|'\n'
string|'"It is missing, so the reactor will not support SSL APIs."'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
DECL|variable|_extraInterfaces
indent|'    '
name|'_extraInterfaces'
op|'='
op|'('
name|'interfaces'
op|'.'
name|'IReactorSSL'
op|','
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'compat'
name|'import'
name|'set'
newline|'\n'
nl|'\n'
DECL|variable|MAX_TIMEOUT
name|'MAX_TIMEOUT'
op|'='
number|'2000'
comment|'# 2 seconds, see doIteration for explanation'
newline|'\n'
nl|'\n'
DECL|variable|EVENTS_PER_LOOP
name|'EVENTS_PER_LOOP'
op|'='
number|'1000'
comment|"# XXX: what's a good value here?"
newline|'\n'
nl|'\n'
comment|'# keys to associate with normal and waker events'
nl|'\n'
name|'KEY_NORMAL'
op|','
name|'KEY_WAKEUP'
op|'='
name|'range'
op|'('
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|_NO_GETHANDLE
name|'_NO_GETHANDLE'
op|'='
name|'error'
op|'.'
name|'ConnectionFdescWentAway'
op|'('
nl|'\n'
string|"'Handler has no getFileHandle method'"
op|')'
newline|'\n'
DECL|variable|_NO_FILEDESC
name|'_NO_FILEDESC'
op|'='
name|'error'
op|'.'
name|'ConnectionFdescWentAway'
op|'('
string|"'Filedescriptor went away'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|IOCPReactor
name|'class'
name|'IOCPReactor'
op|'('
name|'base'
op|'.'
name|'_SignalReactorMixin'
op|','
name|'base'
op|'.'
name|'ReactorBase'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'implements'
op|'('
name|'interfaces'
op|'.'
name|'IReactorTCP'
op|','
name|'interfaces'
op|'.'
name|'IReactorUDP'
op|','
nl|'\n'
name|'interfaces'
op|'.'
name|'IReactorMulticast'
op|','
name|'interfaces'
op|'.'
name|'IReactorProcess'
op|','
nl|'\n'
op|'*'
name|'_extraInterfaces'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|port
name|'port'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'base'
op|'.'
name|'ReactorBase'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'port'
op|'='
name|'_iocp'
op|'.'
name|'CompletionPort'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'handles'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|addActiveHandle
dedent|''
name|'def'
name|'addActiveHandle'
op|'('
name|'self'
op|','
name|'handle'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'handles'
op|'.'
name|'add'
op|'('
name|'handle'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|removeActiveHandle
dedent|''
name|'def'
name|'removeActiveHandle'
op|'('
name|'self'
op|','
name|'handle'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'handles'
op|'.'
name|'discard'
op|'('
name|'handle'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|doIteration
dedent|''
name|'def'
name|'doIteration'
op|'('
name|'self'
op|','
name|'timeout'
op|')'
op|':'
newline|'\n'
comment|'# This function sits and waits for an IO completion event.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# There are two requirements: process IO events as soon as they arrive'
nl|'\n'
comment|'# and process ctrl-break from the user in a reasonable amount of time.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# There are three kinds of waiting.'
nl|'\n'
comment|'# 1) GetQueuedCompletionStatus (self.port.getEvent) to wait for IO'
nl|'\n'
comment|'# events only.'
nl|'\n'
comment|'# 2) Msg* family of wait functions that can stop waiting when'
nl|'\n'
comment|'# ctrl-break is detected (then, I think, Python converts it into a'
nl|'\n'
comment|'# KeyboardInterrupt)'
nl|'\n'
comment|'# 3) *Ex family of wait functions that put the thread into an'
nl|'\n'
comment|'# "alertable" wait state which is supposedly triggered by IO completion'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# 2) and 3) can be combined. Trouble is, my IO completion is not'
nl|'\n'
comment|'# causing 3) to trigger, possibly because I do not use an IO completion'
nl|'\n'
comment|'# callback. Windows is weird.'
nl|'\n'
comment|'# There are two ways to handle this. I could use MsgWaitForSingleObject'
nl|'\n'
comment|'# here and GetQueuedCompletionStatus in a thread. Or I could poll with'
nl|'\n'
comment|'# a reasonable interval. Guess what! Threads are hard.'
nl|'\n'
nl|'\n'
indent|'        '
name|'processed_events'
op|'='
number|'0'
newline|'\n'
name|'if'
name|'timeout'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'timeout'
op|'='
name|'MAX_TIMEOUT'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'timeout'
op|'='
name|'min'
op|'('
name|'MAX_TIMEOUT'
op|','
name|'int'
op|'('
number|'1000'
op|'*'
name|'timeout'
op|')'
op|')'
newline|'\n'
dedent|''
name|'rc'
op|','
name|'bytes'
op|','
name|'key'
op|','
name|'evt'
op|'='
name|'self'
op|'.'
name|'port'
op|'.'
name|'getEvent'
op|'('
name|'timeout'
op|')'
newline|'\n'
name|'while'
name|'processed_events'
op|'<'
name|'EVENTS_PER_LOOP'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'rc'
op|'=='
name|'WAIT_TIMEOUT'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'if'
name|'key'
op|'!='
name|'KEY_WAKEUP'
op|':'
newline|'\n'
indent|'                '
name|'assert'
name|'key'
op|'=='
name|'KEY_NORMAL'
newline|'\n'
name|'if'
name|'not'
name|'evt'
op|'.'
name|'ignore'
op|':'
newline|'\n'
indent|'                    '
name|'log'
op|'.'
name|'callWithLogger'
op|'('
name|'evt'
op|'.'
name|'owner'
op|','
name|'self'
op|'.'
name|'_callEventCallback'
op|','
nl|'\n'
name|'rc'
op|','
name|'bytes'
op|','
name|'evt'
op|')'
newline|'\n'
name|'processed_events'
op|'+='
number|'1'
newline|'\n'
dedent|''
dedent|''
name|'rc'
op|','
name|'bytes'
op|','
name|'key'
op|','
name|'evt'
op|'='
name|'self'
op|'.'
name|'port'
op|'.'
name|'getEvent'
op|'('
number|'0'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_callEventCallback
dedent|''
dedent|''
name|'def'
name|'_callEventCallback'
op|'('
name|'self'
op|','
name|'rc'
op|','
name|'bytes'
op|','
name|'evt'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'owner'
op|'='
name|'evt'
op|'.'
name|'owner'
newline|'\n'
name|'why'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'evt'
op|'.'
name|'callback'
op|'('
name|'rc'
op|','
name|'bytes'
op|','
name|'evt'
op|')'
newline|'\n'
name|'handfn'
op|'='
name|'getattr'
op|'('
name|'owner'
op|','
string|"'getFileHandle'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'handfn'
op|':'
newline|'\n'
indent|'                '
name|'why'
op|'='
name|'_NO_GETHANDLE'
newline|'\n'
dedent|''
name|'elif'
name|'handfn'
op|'('
op|')'
op|'=='
op|'-'
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'why'
op|'='
name|'_NO_FILEDESC'
newline|'\n'
dedent|''
name|'if'
name|'why'
op|':'
newline|'\n'
indent|'                '
name|'return'
comment|'# ignore handles that were closed'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'why'
op|'='
name|'sys'
op|'.'
name|'exc_info'
op|'('
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'log'
op|'.'
name|'err'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'why'
op|':'
newline|'\n'
indent|'            '
name|'owner'
op|'.'
name|'loseConnection'
op|'('
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'why'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|installWaker
dedent|''
dedent|''
name|'def'
name|'installWaker'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|wakeUp
dedent|''
name|'def'
name|'wakeUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'port'
op|'.'
name|'postEvent'
op|'('
number|'0'
op|','
name|'KEY_WAKEUP'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|registerHandle
dedent|''
name|'def'
name|'registerHandle'
op|'('
name|'self'
op|','
name|'handle'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'port'
op|'.'
name|'addHandle'
op|'('
name|'handle'
op|','
name|'KEY_NORMAL'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|createSocket
dedent|''
name|'def'
name|'createSocket'
op|'('
name|'self'
op|','
name|'af'
op|','
name|'stype'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'skt'
op|'='
name|'socket'
op|'.'
name|'socket'
op|'('
name|'af'
op|','
name|'stype'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'registerHandle'
op|'('
name|'skt'
op|'.'
name|'fileno'
op|'('
op|')'
op|')'
newline|'\n'
name|'return'
name|'skt'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|listenTCP
dedent|''
name|'def'
name|'listenTCP'
op|'('
name|'self'
op|','
name|'port'
op|','
name|'factory'
op|','
name|'backlog'
op|'='
number|'50'
op|','
name|'interface'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        @see: twisted.internet.interfaces.IReactorTCP.listenTCP\n        """'
newline|'\n'
name|'p'
op|'='
name|'tcp'
op|'.'
name|'Port'
op|'('
name|'port'
op|','
name|'factory'
op|','
name|'backlog'
op|','
name|'interface'
op|','
name|'self'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'startListening'
op|'('
op|')'
newline|'\n'
name|'return'
name|'p'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|connectTCP
dedent|''
name|'def'
name|'connectTCP'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'port'
op|','
name|'factory'
op|','
name|'timeout'
op|'='
number|'30'
op|','
name|'bindAddress'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        @see: twisted.internet.interfaces.IReactorTCP.connectTCP\n        """'
newline|'\n'
name|'c'
op|'='
name|'tcp'
op|'.'
name|'Connector'
op|'('
name|'host'
op|','
name|'port'
op|','
name|'factory'
op|','
name|'timeout'
op|','
name|'bindAddress'
op|','
name|'self'
op|')'
newline|'\n'
name|'c'
op|'.'
name|'connect'
op|'('
op|')'
newline|'\n'
name|'return'
name|'c'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'if'
name|'TLSMemoryBIOFactory'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
DECL|function|listenSSL
indent|'        '
name|'def'
name|'listenSSL'
op|'('
name|'self'
op|','
name|'port'
op|','
name|'factory'
op|','
name|'contextFactory'
op|','
name|'backlog'
op|'='
number|'50'
op|','
name|'interface'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""\n            @see: twisted.internet.interfaces.IReactorSSL.listenSSL\n            """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'listenTCP'
op|'('
nl|'\n'
name|'port'
op|','
nl|'\n'
name|'TLSMemoryBIOFactory'
op|'('
name|'contextFactory'
op|','
name|'False'
op|','
name|'factory'
op|')'
op|','
nl|'\n'
name|'backlog'
op|','
name|'interface'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|connectSSL
dedent|''
name|'def'
name|'connectSSL'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'port'
op|','
name|'factory'
op|','
name|'contextFactory'
op|','
name|'timeout'
op|'='
number|'30'
op|','
name|'bindAddress'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""\n            @see: twisted.internet.interfaces.IReactorSSL.connectSSL\n            """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'connectTCP'
op|'('
nl|'\n'
name|'host'
op|','
name|'port'
op|','
nl|'\n'
name|'TLSMemoryBIOFactory'
op|'('
name|'contextFactory'
op|','
name|'True'
op|','
name|'factory'
op|')'
op|','
nl|'\n'
name|'timeout'
op|','
name|'bindAddress'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
DECL|function|listenSSL
indent|'        '
name|'def'
name|'listenSSL'
op|'('
name|'self'
op|','
name|'port'
op|','
name|'factory'
op|','
name|'contextFactory'
op|','
name|'backlog'
op|'='
number|'50'
op|','
name|'interface'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""\n            Non-implementation of L{IReactorSSL.listenSSL}.  Some dependency\n            is not satisfied.  This implementation always raises\n            L{NotImplementedError}.\n            """'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
nl|'\n'
string|'"pyOpenSSL 0.10 or newer is required for SSL support in "'
nl|'\n'
string|'"iocpreactor. It is missing, so the reactor does not support "'
nl|'\n'
string|'"SSL APIs."'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|connectSSL
dedent|''
name|'def'
name|'connectSSL'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'port'
op|','
name|'factory'
op|','
name|'contextFactory'
op|','
name|'timeout'
op|'='
number|'30'
op|','
name|'bindAddress'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""\n            Non-implementation of L{IReactorSSL.connectSSL}.  Some dependency\n            is not satisfied.  This implementation always raises\n            L{NotImplementedError}.\n            """'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
nl|'\n'
string|'"pyOpenSSL 0.10 or newer is required for SSL support in "'
nl|'\n'
string|'"iocpreactor. It is missing, so the reactor does not support "'
nl|'\n'
string|'"SSL APIs."'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|listenUDP
dedent|''
dedent|''
name|'def'
name|'listenUDP'
op|'('
name|'self'
op|','
name|'port'
op|','
name|'protocol'
op|','
name|'interface'
op|'='
string|"''"
op|','
name|'maxPacketSize'
op|'='
number|'8192'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Connects a given L{DatagramProtocol} to the given numeric UDP port.\n\n        @returns: object conforming to L{IListeningPort}.\n        """'
newline|'\n'
name|'p'
op|'='
name|'udp'
op|'.'
name|'Port'
op|'('
name|'port'
op|','
name|'protocol'
op|','
name|'interface'
op|','
name|'maxPacketSize'
op|','
name|'self'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'startListening'
op|'('
op|')'
newline|'\n'
name|'return'
name|'p'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|listenMulticast
dedent|''
name|'def'
name|'listenMulticast'
op|'('
name|'self'
op|','
name|'port'
op|','
name|'protocol'
op|','
name|'interface'
op|'='
string|"''"
op|','
name|'maxPacketSize'
op|'='
number|'8192'
op|','
nl|'\n'
name|'listenMultiple'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Connects a given DatagramProtocol to the given numeric UDP port.\n\n        EXPERIMENTAL.\n\n        @returns: object conforming to IListeningPort.\n        """'
newline|'\n'
name|'p'
op|'='
name|'udp'
op|'.'
name|'MulticastPort'
op|'('
name|'port'
op|','
name|'protocol'
op|','
name|'interface'
op|','
name|'maxPacketSize'
op|','
name|'self'
op|','
nl|'\n'
name|'listenMultiple'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'startListening'
op|'('
op|')'
newline|'\n'
name|'return'
name|'p'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|spawnProcess
dedent|''
name|'def'
name|'spawnProcess'
op|'('
name|'self'
op|','
name|'processProtocol'
op|','
name|'executable'
op|','
name|'args'
op|'='
op|'('
op|')'
op|','
name|'env'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'path'
op|'='
name|'None'
op|','
name|'uid'
op|'='
name|'None'
op|','
name|'gid'
op|'='
name|'None'
op|','
name|'usePTY'
op|'='
number|'0'
op|','
name|'childFDs'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Spawn a process.\n        """'
newline|'\n'
name|'if'
name|'uid'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|'('
string|'"Setting UID is unsupported on this platform."'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'gid'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|'('
string|'"Setting GID is unsupported on this platform."'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'usePTY'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|'('
string|'"PTYs are unsupported on this platform."'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'childFDs'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|'('
nl|'\n'
string|'"Custom child file descriptor mappings are unsupported on "'
nl|'\n'
string|'"this platform."'
op|')'
newline|'\n'
dedent|''
name|'args'
op|','
name|'env'
op|'='
name|'self'
op|'.'
name|'_checkProcessArgs'
op|'('
name|'args'
op|','
name|'env'
op|')'
newline|'\n'
name|'return'
name|'Process'
op|'('
name|'self'
op|','
name|'processProtocol'
op|','
name|'executable'
op|','
name|'args'
op|','
name|'env'
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|removeAll
dedent|''
name|'def'
name|'removeAll'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'res'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'handles'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'handles'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
name|'return'
name|'res'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|install
dedent|''
dedent|''
name|'def'
name|'install'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'r'
op|'='
name|'IOCPReactor'
op|'('
op|')'
newline|'\n'
name|'main'
op|'.'
name|'installReactor'
op|'('
name|'r'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|__all__
dedent|''
name|'__all__'
op|'='
op|'['
string|"'IOCPReactor'"
op|','
string|"'install'"
op|']'
newline|'\n'
nl|'\n'
endmarker|''
end_unit
