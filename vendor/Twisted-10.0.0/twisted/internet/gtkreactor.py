begin_unit
comment|'# Copyright (c) 2001-2009 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nThis module provides support for Twisted to interact with the PyGTK mainloop.\n\nIn order to use this support, simply do the following::\n\n    |  from twisted.internet import gtkreactor\n    |  gtkreactor.install()\n\nThen use twisted.internet APIs as usual.  The other methods here are not\nintended to be called directly.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'sys'
newline|'\n'
nl|'\n'
comment|'# System Imports'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'pygtk'
newline|'\n'
name|'pygtk'
op|'.'
name|'require'
op|'('
string|"'1.2'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|','
name|'AttributeError'
op|':'
newline|'\n'
indent|'    '
name|'pass'
comment|"# maybe we're using pygtk before this hack existed."
newline|'\n'
dedent|''
name|'import'
name|'gtk'
newline|'\n'
nl|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
newline|'\n'
nl|'\n'
comment|'# Twisted Imports'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
op|','
name|'runtime'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'interfaces'
name|'import'
name|'IReactorFDSet'
newline|'\n'
nl|'\n'
comment|'# Sibling Imports'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'posixbase'
op|','
name|'selectreactor'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|GtkReactor
name|'class'
name|'GtkReactor'
op|'('
name|'posixbase'
op|'.'
name|'PosixReactorBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    GTK+ event loop reactor.\n\n    @ivar _reads: A dictionary mapping L{FileDescriptor} instances to gtk INPUT_READ\n        watch handles.\n\n    @ivar _writes: A dictionary mapping L{FileDescriptor} instances to gtk\n        INTPUT_WRITE watch handles.\n\n    @ivar _simtag: A gtk timeout handle for the next L{simulate} call.\n    """'
newline|'\n'
name|'implements'
op|'('
name|'IReactorFDSet'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Initialize the file descriptor tracking dictionaries and the base\n        class.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_simtag'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_reads'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_writes'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'posixbase'
op|'.'
name|'PosixReactorBase'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|addReader
dedent|''
name|'def'
name|'addReader'
op|'('
name|'self'
op|','
name|'reader'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'reader'
name|'not'
name|'in'
name|'self'
op|'.'
name|'_reads'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_reads'
op|'['
name|'reader'
op|']'
op|'='
name|'gtk'
op|'.'
name|'input_add'
op|'('
name|'reader'
op|','
name|'gtk'
op|'.'
name|'GDK'
op|'.'
name|'INPUT_READ'
op|','
name|'self'
op|'.'
name|'callback'
op|')'
newline|'\n'
nl|'\n'
DECL|member|addWriter
dedent|''
dedent|''
name|'def'
name|'addWriter'
op|'('
name|'self'
op|','
name|'writer'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'writer'
name|'not'
name|'in'
name|'self'
op|'.'
name|'_writes'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_writes'
op|'['
name|'writer'
op|']'
op|'='
name|'gtk'
op|'.'
name|'input_add'
op|'('
name|'writer'
op|','
name|'gtk'
op|'.'
name|'GDK'
op|'.'
name|'INPUT_WRITE'
op|','
name|'self'
op|'.'
name|'callback'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getReaders
dedent|''
dedent|''
name|'def'
name|'getReaders'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_reads'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getWriters
dedent|''
name|'def'
name|'getWriters'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_writes'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|removeAll
dedent|''
name|'def'
name|'removeAll'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_removeAll'
op|'('
name|'self'
op|'.'
name|'_reads'
op|','
name|'self'
op|'.'
name|'_writes'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|removeReader
dedent|''
name|'def'
name|'removeReader'
op|'('
name|'self'
op|','
name|'reader'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'reader'
name|'in'
name|'self'
op|'.'
name|'_reads'
op|':'
newline|'\n'
indent|'            '
name|'gtk'
op|'.'
name|'input_remove'
op|'('
name|'self'
op|'.'
name|'_reads'
op|'['
name|'reader'
op|']'
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'_reads'
op|'['
name|'reader'
op|']'
newline|'\n'
nl|'\n'
DECL|member|removeWriter
dedent|''
dedent|''
name|'def'
name|'removeWriter'
op|'('
name|'self'
op|','
name|'writer'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'writer'
name|'in'
name|'self'
op|'.'
name|'_writes'
op|':'
newline|'\n'
indent|'            '
name|'gtk'
op|'.'
name|'input_remove'
op|'('
name|'self'
op|'.'
name|'_writes'
op|'['
name|'writer'
op|']'
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'_writes'
op|'['
name|'writer'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|doIterationTimer
dedent|''
dedent|''
name|'doIterationTimer'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|doIterationTimeout
name|'def'
name|'doIterationTimeout'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'doIterationTimer'
op|'='
name|'None'
newline|'\n'
name|'return'
number|'0'
comment|'# auto-remove'
newline|'\n'
DECL|member|doIteration
dedent|''
name|'def'
name|'doIteration'
op|'('
name|'self'
op|','
name|'delay'
op|')'
op|':'
newline|'\n'
comment|'# flush some pending events, return if there was something to do'
nl|'\n'
comment|'# don\'t use the usual "while gtk.events_pending(): mainiteration()"'
nl|'\n'
comment|"# idiom because lots of IO (in particular test_tcp's"
nl|'\n'
comment|'# ProperlyCloseFilesTestCase) can keep us from ever exiting.'
nl|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
name|'channel'
op|'='
string|"'system'"
op|','
name|'event'
op|'='
string|"'iteration'"
op|','
name|'reactor'
op|'='
name|'self'
op|')'
newline|'\n'
name|'if'
name|'gtk'
op|'.'
name|'events_pending'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'gtk'
op|'.'
name|'mainiteration'
op|'('
number|'0'
op|')'
newline|'\n'
name|'return'
newline|'\n'
comment|'# nothing to do, must delay'
nl|'\n'
dedent|''
name|'if'
name|'delay'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'return'
comment|"# shouldn't delay, so just return"
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'doIterationTimer'
op|'='
name|'gtk'
op|'.'
name|'timeout_add'
op|'('
name|'int'
op|'('
name|'delay'
op|'*'
number|'1000'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'doIterationTimeout'
op|')'
newline|'\n'
comment|'# This will either wake up from IO or from a timeout.'
nl|'\n'
name|'gtk'
op|'.'
name|'mainiteration'
op|'('
number|'1'
op|')'
comment|'# block'
newline|'\n'
comment|'# note: with the .simulate timer below, delays > 0.1 will always be'
nl|'\n'
comment|'# woken up by the .simulate timer'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'doIterationTimer'
op|':'
newline|'\n'
comment|'# if woken by IO, need to cancel the timer'
nl|'\n'
indent|'            '
name|'gtk'
op|'.'
name|'timeout_remove'
op|'('
name|'self'
op|'.'
name|'doIterationTimer'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'doIterationTimer'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|crash
dedent|''
dedent|''
name|'def'
name|'crash'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'posixbase'
op|'.'
name|'PosixReactorBase'
op|'.'
name|'crash'
op|'('
name|'self'
op|')'
newline|'\n'
name|'gtk'
op|'.'
name|'mainquit'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|run
dedent|''
name|'def'
name|'run'
op|'('
name|'self'
op|','
name|'installSignalHandlers'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'startRunning'
op|'('
name|'installSignalHandlers'
op|'='
name|'installSignalHandlers'
op|')'
newline|'\n'
name|'gtk'
op|'.'
name|'timeout_add'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'simulate'
op|')'
newline|'\n'
name|'gtk'
op|'.'
name|'mainloop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_readAndWrite
dedent|''
name|'def'
name|'_readAndWrite'
op|'('
name|'self'
op|','
name|'source'
op|','
name|'condition'
op|')'
op|':'
newline|'\n'
comment|"# note: gtk-1.2's gtk_input_add presents an API in terms of gdk"
nl|'\n'
comment|'# constants like INPUT_READ and INPUT_WRITE. Internally, it will add'
nl|'\n'
comment|'# POLL_HUP and POLL_ERR to the poll() events, but if they happen it'
nl|'\n'
comment|'# will turn them back into INPUT_READ and INPUT_WRITE. gdkevents.c'
nl|'\n'
comment|'# maps IN/HUP/ERR to INPUT_READ, and OUT/ERR to INPUT_WRITE. This'
nl|'\n'
comment|'# means there is no immediate way to detect a disconnected socket.'
nl|'\n'
nl|'\n'
comment|"# The g_io_add_watch() API is more suited to this task. I don't think"
nl|'\n'
comment|'# pygtk exposes it, though.'
nl|'\n'
indent|'        '
name|'why'
op|'='
name|'None'
newline|'\n'
name|'didRead'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'condition'
op|'&'
name|'gtk'
op|'.'
name|'GDK'
op|'.'
name|'INPUT_READ'
op|':'
newline|'\n'
indent|'                '
name|'why'
op|'='
name|'source'
op|'.'
name|'doRead'
op|'('
op|')'
newline|'\n'
name|'didRead'
op|'='
name|'source'
op|'.'
name|'doRead'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'why'
name|'and'
name|'condition'
op|'&'
name|'gtk'
op|'.'
name|'GDK'
op|'.'
name|'INPUT_WRITE'
op|':'
newline|'\n'
comment|"# if doRead caused connectionLost, don't call doWrite"
nl|'\n'
comment|"# if doRead is doWrite, don't call it again."
nl|'\n'
indent|'                '
name|'if'
name|'not'
name|'source'
op|'.'
name|'disconnected'
name|'and'
name|'source'
op|'.'
name|'doWrite'
op|'!='
name|'didRead'
op|':'
newline|'\n'
indent|'                    '
name|'why'
op|'='
name|'source'
op|'.'
name|'doWrite'
op|'('
op|')'
newline|'\n'
name|'didRead'
op|'='
name|'source'
op|'.'
name|'doWrite'
comment|'# if failed it was in write'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'why'
op|'='
name|'sys'
op|'.'
name|'exc_info'
op|'('
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|"'Error In %s'"
op|'%'
name|'source'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'deferr'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'why'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_disconnectSelectable'
op|'('
name|'source'
op|','
name|'why'
op|','
name|'didRead'
op|'=='
name|'source'
op|'.'
name|'doRead'
op|')'
newline|'\n'
nl|'\n'
DECL|member|callback
dedent|''
dedent|''
name|'def'
name|'callback'
op|'('
name|'self'
op|','
name|'source'
op|','
name|'condition'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'callWithLogger'
op|'('
name|'source'
op|','
name|'self'
op|'.'
name|'_readAndWrite'
op|','
name|'source'
op|','
name|'condition'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'simulate'
op|'('
op|')'
comment|'# fire Twisted timers'
newline|'\n'
name|'return'
number|'1'
comment|"# 1=don't auto-remove the source"
newline|'\n'
nl|'\n'
DECL|member|simulate
dedent|''
name|'def'
name|'simulate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Run simulation loops and reschedule callbacks.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_simtag'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'gtk'
op|'.'
name|'timeout_remove'
op|'('
name|'self'
op|'.'
name|'_simtag'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'runUntilCurrent'
op|'('
op|')'
newline|'\n'
name|'timeout'
op|'='
name|'min'
op|'('
name|'self'
op|'.'
name|'timeout'
op|'('
op|')'
op|','
number|'0.1'
op|')'
newline|'\n'
name|'if'
name|'timeout'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'timeout'
op|'='
number|'0.1'
newline|'\n'
comment|'# Quoth someone other than me, "grumble", yet I know not why. Try to be'
nl|'\n'
comment|'# more specific in your complaints, guys. -exarkun'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_simtag'
op|'='
name|'gtk'
op|'.'
name|'timeout_add'
op|'('
name|'int'
op|'('
name|'timeout'
op|'*'
number|'1010'
op|')'
op|','
name|'self'
op|'.'
name|'simulate'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|PortableGtkReactor
dedent|''
dedent|''
name|'class'
name|'PortableGtkReactor'
op|'('
name|'selectreactor'
op|'.'
name|'SelectReactor'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Reactor that works on Windows.\n\n    input_add is not supported on GTK+ for Win32, apparently.\n\n    @ivar _simtag: A gtk timeout handle for the next L{simulate} call.\n    """'
newline|'\n'
DECL|variable|_simtag
name|'_simtag'
op|'='
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|crash
name|'def'
name|'crash'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'selectreactor'
op|'.'
name|'SelectReactor'
op|'.'
name|'crash'
op|'('
name|'self'
op|')'
newline|'\n'
name|'gtk'
op|'.'
name|'mainquit'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|run
dedent|''
name|'def'
name|'run'
op|'('
name|'self'
op|','
name|'installSignalHandlers'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'startRunning'
op|'('
name|'installSignalHandlers'
op|'='
name|'installSignalHandlers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'simulate'
op|'('
op|')'
newline|'\n'
name|'gtk'
op|'.'
name|'mainloop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|simulate
dedent|''
name|'def'
name|'simulate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Run simulation loops and reschedule callbacks.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_simtag'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'gtk'
op|'.'
name|'timeout_remove'
op|'('
name|'self'
op|'.'
name|'_simtag'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'iterate'
op|'('
op|')'
newline|'\n'
name|'timeout'
op|'='
name|'min'
op|'('
name|'self'
op|'.'
name|'timeout'
op|'('
op|')'
op|','
number|'0.1'
op|')'
newline|'\n'
name|'if'
name|'timeout'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'timeout'
op|'='
number|'0.1'
newline|'\n'
nl|'\n'
comment|'# See comment for identical line in GtkReactor.simulate.'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_simtag'
op|'='
name|'gtk'
op|'.'
name|'timeout_add'
op|'('
op|'('
name|'timeout'
op|'*'
number|'1010'
op|')'
op|','
name|'self'
op|'.'
name|'simulate'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|install
dedent|''
dedent|''
name|'def'
name|'install'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Configure the twisted mainloop to be run inside the gtk mainloop.\n    """'
newline|'\n'
name|'reactor'
op|'='
name|'GtkReactor'
op|'('
op|')'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'main'
name|'import'
name|'installReactor'
newline|'\n'
name|'installReactor'
op|'('
name|'reactor'
op|')'
newline|'\n'
name|'return'
name|'reactor'
newline|'\n'
nl|'\n'
DECL|function|portableInstall
dedent|''
name|'def'
name|'portableInstall'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Configure the twisted mainloop to be run inside the gtk mainloop.\n    """'
newline|'\n'
name|'reactor'
op|'='
name|'PortableGtkReactor'
op|'('
op|')'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'main'
name|'import'
name|'installReactor'
newline|'\n'
name|'installReactor'
op|'('
name|'reactor'
op|')'
newline|'\n'
name|'return'
name|'reactor'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'runtime'
op|'.'
name|'platform'
op|'.'
name|'getType'
op|'('
op|')'
op|'!='
string|"'posix'"
op|':'
newline|'\n'
DECL|variable|install
indent|'    '
name|'install'
op|'='
name|'portableInstall'
newline|'\n'
nl|'\n'
DECL|variable|__all__
dedent|''
name|'__all__'
op|'='
op|'['
string|"'install'"
op|']'
newline|'\n'
endmarker|''
end_unit
