begin_unit
comment|'# -*- test-case-name: twisted.test.test_unix -*-'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2001-2004 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""Various asynchronous TCP/IP classes.\n\nEnd users shouldn\'t use this module directly - use the reactor APIs instead.\n\nMaintainer: Itamar Shtull-Trauring\n"""'
newline|'\n'
nl|'\n'
comment|'# System imports'
nl|'\n'
name|'import'
name|'os'
op|','
name|'stat'
op|','
name|'socket'
newline|'\n'
name|'from'
name|'errno'
name|'import'
name|'EINTR'
op|','
name|'EMSGSIZE'
op|','
name|'EAGAIN'
op|','
name|'EWOULDBLOCK'
op|','
name|'ECONNREFUSED'
newline|'\n'
nl|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
op|','
name|'implementsOnly'
op|','
name|'implementedBy'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'socket'
op|','
string|"'AF_UNIX'"
op|')'
op|':'
newline|'\n'
indent|'    '
name|'raise'
name|'ImportError'
op|'('
string|'"UNIX sockets not supported on this platform"'
op|')'
newline|'\n'
nl|'\n'
comment|'# Twisted imports'
nl|'\n'
dedent|''
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'base'
op|','
name|'tcp'
op|','
name|'udp'
op|','
name|'error'
op|','
name|'interfaces'
op|','
name|'protocol'
op|','
name|'address'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'error'
name|'import'
name|'CannotListenError'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'lockfile'
op|','
name|'log'
op|','
name|'reflect'
op|','
name|'failure'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Server
name|'class'
name|'Server'
op|'('
name|'tcp'
op|'.'
name|'Server'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'sock'
op|','
name|'protocol'
op|','
name|'client'
op|','
name|'server'
op|','
name|'sessionno'
op|','
name|'reactor'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tcp'
op|'.'
name|'Server'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'sock'
op|','
name|'protocol'
op|','
op|'('
name|'client'
op|','
name|'None'
op|')'
op|','
name|'server'
op|','
name|'sessionno'
op|','
name|'reactor'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getHost
dedent|''
name|'def'
name|'getHost'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'address'
op|'.'
name|'UNIXAddress'
op|'('
name|'self'
op|'.'
name|'socket'
op|'.'
name|'getsockname'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getPeer
dedent|''
name|'def'
name|'getPeer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'address'
op|'.'
name|'UNIXAddress'
op|'('
name|'self'
op|'.'
name|'hostname'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Port
dedent|''
dedent|''
name|'class'
name|'Port'
op|'('
name|'tcp'
op|'.'
name|'Port'
op|')'
op|':'
newline|'\n'
DECL|variable|addressFamily
indent|'    '
name|'addressFamily'
op|'='
name|'socket'
op|'.'
name|'AF_UNIX'
newline|'\n'
DECL|variable|socketType
name|'socketType'
op|'='
name|'socket'
op|'.'
name|'SOCK_STREAM'
newline|'\n'
nl|'\n'
DECL|variable|transport
name|'transport'
op|'='
name|'Server'
newline|'\n'
DECL|variable|lockFile
name|'lockFile'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'fileName'
op|','
name|'factory'
op|','
name|'backlog'
op|'='
number|'50'
op|','
name|'mode'
op|'='
number|'0666'
op|','
name|'reactor'
op|'='
name|'None'
op|','
name|'wantPID'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tcp'
op|'.'
name|'Port'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'fileName'
op|','
name|'factory'
op|','
name|'backlog'
op|','
name|'reactor'
op|'='
name|'reactor'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mode'
op|'='
name|'mode'
newline|'\n'
name|'self'
op|'.'
name|'wantPID'
op|'='
name|'wantPID'
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'factoryName'
op|'='
name|'reflect'
op|'.'
name|'qual'
op|'('
name|'self'
op|'.'
name|'factory'
op|'.'
name|'__class__'
op|')'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'self'
op|','
string|"'socket'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'<%s on %r>'"
op|'%'
op|'('
name|'factoryName'
op|','
name|'self'
op|'.'
name|'port'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'<%s (not listening)>'"
op|'%'
op|'('
name|'factoryName'
op|','
op|')'
newline|'\n'
nl|'\n'
DECL|member|_buildAddr
dedent|''
dedent|''
name|'def'
name|'_buildAddr'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'address'
op|'.'
name|'UNIXAddress'
op|'('
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|startListening
dedent|''
name|'def'
name|'startListening'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create and bind my socket, and begin listening on it.\n\n        This is called on unserialization, and must be called after creating a\n        server to begin listening on the specified port.\n        """'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'"%s starting on %r"'
op|'%'
op|'('
name|'self'
op|'.'
name|'factory'
op|'.'
name|'__class__'
op|','
name|'repr'
op|'('
name|'self'
op|'.'
name|'port'
op|')'
op|')'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'wantPID'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'lockFile'
op|'='
name|'lockfile'
op|'.'
name|'FilesystemLock'
op|'('
name|'self'
op|'.'
name|'port'
op|'+'
string|'".lock"'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'lockFile'
op|'.'
name|'lock'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'CannotListenError'
op|','
op|'('
name|'None'
op|','
name|'self'
op|'.'
name|'port'
op|','
string|'"Cannot acquire lock"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'self'
op|'.'
name|'lockFile'
op|'.'
name|'clean'
op|':'
newline|'\n'
indent|'                    '
name|'try'
op|':'
newline|'\n'
comment|'# This is a best-attempt at cleaning up'
nl|'\n'
comment|'# left-over unix sockets on the filesystem.'
nl|'\n'
comment|"# If it fails, there's not much else we can"
nl|'\n'
comment|'# do.  The bind() below will fail with an'
nl|'\n'
comment|'# exception that actually propegates.'
nl|'\n'
indent|'                        '
name|'if'
name|'stat'
op|'.'
name|'S_ISSOCK'
op|'('
name|'os'
op|'.'
name|'stat'
op|'('
name|'self'
op|'.'
name|'port'
op|')'
op|'.'
name|'st_mode'
op|')'
op|':'
newline|'\n'
indent|'                            '
name|'os'
op|'.'
name|'remove'
op|'('
name|'self'
op|'.'
name|'port'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                        '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'self'
op|'.'
name|'factory'
op|'.'
name|'doStart'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'skt'
op|'='
name|'self'
op|'.'
name|'createInternetSocket'
op|'('
op|')'
newline|'\n'
name|'skt'
op|'.'
name|'bind'
op|'('
name|'self'
op|'.'
name|'port'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'socket'
op|'.'
name|'error'
op|','
name|'le'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'CannotListenError'
op|','
op|'('
name|'None'
op|','
name|'self'
op|'.'
name|'port'
op|','
name|'le'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# Make the socket readable and writable to the world.'
nl|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'os'
op|'.'
name|'chmod'
op|'('
name|'self'
op|'.'
name|'port'
op|','
name|'self'
op|'.'
name|'mode'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|':'
comment|'# probably not a visible filesystem name'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'skt'
op|'.'
name|'listen'
op|'('
name|'self'
op|'.'
name|'backlog'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connected'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'socket'
op|'='
name|'skt'
newline|'\n'
name|'self'
op|'.'
name|'fileno'
op|'='
name|'self'
op|'.'
name|'socket'
op|'.'
name|'fileno'
newline|'\n'
name|'self'
op|'.'
name|'numberAccepts'
op|'='
number|'100'
newline|'\n'
name|'self'
op|'.'
name|'startReading'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|connectionLost
dedent|''
dedent|''
name|'def'
name|'connectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'self'
op|'.'
name|'port'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'lockFile'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'lockFile'
op|'.'
name|'unlock'
op|'('
op|')'
newline|'\n'
dedent|''
name|'tcp'
op|'.'
name|'Port'
op|'.'
name|'connectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getHost
dedent|''
name|'def'
name|'getHost'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns a UNIXAddress.\n\n        This indicates the server\'s address.\n        """'
newline|'\n'
name|'return'
name|'address'
op|'.'
name|'UNIXAddress'
op|'('
name|'self'
op|'.'
name|'socket'
op|'.'
name|'getsockname'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Client
dedent|''
dedent|''
name|'class'
name|'Client'
op|'('
name|'tcp'
op|'.'
name|'BaseClient'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""A client for Unix sockets."""'
newline|'\n'
DECL|variable|addressFamily
name|'addressFamily'
op|'='
name|'socket'
op|'.'
name|'AF_UNIX'
newline|'\n'
DECL|variable|socketType
name|'socketType'
op|'='
name|'socket'
op|'.'
name|'SOCK_STREAM'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'filename'
op|','
name|'connector'
op|','
name|'reactor'
op|'='
name|'None'
op|','
name|'checkPID'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'connector'
op|'='
name|'connector'
newline|'\n'
name|'self'
op|'.'
name|'realAddress'
op|'='
name|'self'
op|'.'
name|'addr'
op|'='
name|'filename'
newline|'\n'
name|'if'
name|'checkPID'
name|'and'
name|'not'
name|'lockfile'
op|'.'
name|'isLocked'
op|'('
name|'filename'
op|'+'
string|'".lock"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_finishInit'
op|'('
name|'None'
op|','
name|'None'
op|','
name|'error'
op|'.'
name|'BadFileError'
op|'('
name|'filename'
op|')'
op|','
name|'reactor'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_finishInit'
op|'('
name|'self'
op|'.'
name|'doConnect'
op|','
name|'self'
op|'.'
name|'createInternetSocket'
op|'('
op|')'
op|','
nl|'\n'
name|'None'
op|','
name|'reactor'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getPeer
dedent|''
name|'def'
name|'getPeer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'address'
op|'.'
name|'UNIXAddress'
op|'('
name|'self'
op|'.'
name|'addr'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getHost
dedent|''
name|'def'
name|'getHost'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'address'
op|'.'
name|'UNIXAddress'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Connector
dedent|''
dedent|''
name|'class'
name|'Connector'
op|'('
name|'base'
op|'.'
name|'BaseConnector'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'address'
op|','
name|'factory'
op|','
name|'timeout'
op|','
name|'reactor'
op|','
name|'checkPID'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'base'
op|'.'
name|'BaseConnector'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'factory'
op|','
name|'timeout'
op|','
name|'reactor'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'address'
op|'='
name|'address'
newline|'\n'
name|'self'
op|'.'
name|'checkPID'
op|'='
name|'checkPID'
newline|'\n'
nl|'\n'
DECL|member|_makeTransport
dedent|''
name|'def'
name|'_makeTransport'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'Client'
op|'('
name|'self'
op|'.'
name|'address'
op|','
name|'self'
op|','
name|'self'
op|'.'
name|'reactor'
op|','
name|'self'
op|'.'
name|'checkPID'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getDestination
dedent|''
name|'def'
name|'getDestination'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'address'
op|'.'
name|'UNIXAddress'
op|'('
name|'self'
op|'.'
name|'address'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DatagramPort
dedent|''
dedent|''
name|'class'
name|'DatagramPort'
op|'('
name|'udp'
op|'.'
name|'Port'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Datagram UNIX port, listening for packets."""'
newline|'\n'
nl|'\n'
name|'implements'
op|'('
name|'interfaces'
op|'.'
name|'IUNIXDatagramTransport'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|addressFamily
name|'addressFamily'
op|'='
name|'socket'
op|'.'
name|'AF_UNIX'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'addr'
op|','
name|'proto'
op|','
name|'maxPacketSize'
op|'='
number|'8192'
op|','
name|'mode'
op|'='
number|'0666'
op|','
name|'reactor'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Initialize with address to listen on.\n        """'
newline|'\n'
name|'udp'
op|'.'
name|'Port'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'addr'
op|','
name|'proto'
op|','
name|'maxPacketSize'
op|'='
name|'maxPacketSize'
op|','
name|'reactor'
op|'='
name|'reactor'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mode'
op|'='
name|'mode'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'protocolName'
op|'='
name|'reflect'
op|'.'
name|'qual'
op|'('
name|'self'
op|'.'
name|'protocol'
op|'.'
name|'__class__'
op|','
op|')'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'self'
op|','
string|"'socket'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'<%s on %r>'"
op|'%'
op|'('
name|'protocolName'
op|','
name|'self'
op|'.'
name|'port'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'<%s (not listening)>'"
op|'%'
op|'('
name|'protocolName'
op|','
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_bindSocket
dedent|''
dedent|''
name|'def'
name|'_bindSocket'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"%s starting on %s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'protocol'
op|'.'
name|'__class__'
op|','
name|'repr'
op|'('
name|'self'
op|'.'
name|'port'
op|')'
op|')'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'skt'
op|'='
name|'self'
op|'.'
name|'createInternetSocket'
op|'('
op|')'
comment|'# XXX: haha misnamed method'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'port'
op|':'
newline|'\n'
indent|'                '
name|'skt'
op|'.'
name|'bind'
op|'('
name|'self'
op|'.'
name|'port'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'socket'
op|'.'
name|'error'
op|','
name|'le'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'error'
op|'.'
name|'CannotListenError'
op|','
op|'('
name|'None'
op|','
name|'self'
op|'.'
name|'port'
op|','
name|'le'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'port'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'os'
op|'.'
name|'chmod'
op|'('
name|'self'
op|'.'
name|'port'
op|','
name|'self'
op|'.'
name|'mode'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
comment|'# probably not a visible filesystem name'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'connected'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'socket'
op|'='
name|'skt'
newline|'\n'
name|'self'
op|'.'
name|'fileno'
op|'='
name|'self'
op|'.'
name|'socket'
op|'.'
name|'fileno'
newline|'\n'
nl|'\n'
DECL|member|write
dedent|''
name|'def'
name|'write'
op|'('
name|'self'
op|','
name|'datagram'
op|','
name|'address'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Write a datagram."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'socket'
op|'.'
name|'sendto'
op|'('
name|'datagram'
op|','
name|'address'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'socket'
op|'.'
name|'error'
op|','
name|'se'
op|':'
newline|'\n'
indent|'            '
name|'no'
op|'='
name|'se'
op|'.'
name|'args'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'no'
op|'=='
name|'EINTR'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'write'
op|'('
name|'datagram'
op|','
name|'address'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'no'
op|'=='
name|'EMSGSIZE'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'error'
op|'.'
name|'MessageLengthError'
op|','
string|'"message too long"'
newline|'\n'
dedent|''
name|'elif'
name|'no'
op|'=='
name|'EAGAIN'
op|':'
newline|'\n'
comment|'# oh, well, drop the data. The only difference from UDP'
nl|'\n'
comment|"# is that UDP won't ever notice."
nl|'\n'
comment|'# TODO: add TCP-like buffering'
nl|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
nl|'\n'
DECL|member|connectionLost
dedent|''
dedent|''
dedent|''
name|'def'
name|'connectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Cleans up my socket.\n        """'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|"'(Port %s Closed)'"
op|'%'
name|'repr'
op|'('
name|'self'
op|'.'
name|'port'
op|')'
op|')'
newline|'\n'
name|'base'
op|'.'
name|'BasePort'
op|'.'
name|'connectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'self'
op|','
string|'"protocol"'
op|')'
op|':'
newline|'\n'
comment|"# we won't have attribute in ConnectedPort, in cases"
nl|'\n'
comment|'# where there was an error in connection process'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'protocol'
op|'.'
name|'doStop'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'connected'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'socket'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'socket'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'fileno'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'self'
op|','
string|'"d"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'d'
op|'.'
name|'callback'
op|'('
name|'None'
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|setLogStr
dedent|''
dedent|''
name|'def'
name|'setLogStr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'logstr'
op|'='
name|'reflect'
op|'.'
name|'qual'
op|'('
name|'self'
op|'.'
name|'protocol'
op|'.'
name|'__class__'
op|')'
op|'+'
string|'" (UDP)"'
newline|'\n'
nl|'\n'
DECL|member|getHost
dedent|''
name|'def'
name|'getHost'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'address'
op|'.'
name|'UNIXAddress'
op|'('
name|'self'
op|'.'
name|'socket'
op|'.'
name|'getsockname'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConnectedDatagramPort
dedent|''
dedent|''
name|'class'
name|'ConnectedDatagramPort'
op|'('
name|'DatagramPort'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""A connected datagram UNIX socket."""'
newline|'\n'
nl|'\n'
name|'implementsOnly'
op|'('
name|'interfaces'
op|'.'
name|'IUNIXDatagramConnectedTransport'
op|','
nl|'\n'
op|'*'
op|'('
name|'implementedBy'
op|'('
name|'base'
op|'.'
name|'BasePort'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'addr'
op|','
name|'proto'
op|','
name|'maxPacketSize'
op|'='
number|'8192'
op|','
name|'mode'
op|'='
number|'0666'
op|','
name|'bindAddress'
op|'='
name|'None'
op|','
name|'reactor'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'assert'
name|'isinstance'
op|'('
name|'proto'
op|','
name|'protocol'
op|'.'
name|'ConnectedDatagramProtocol'
op|')'
newline|'\n'
name|'DatagramPort'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'bindAddress'
op|','
name|'proto'
op|','
name|'maxPacketSize'
op|','
name|'mode'
op|','
name|'reactor'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'remoteaddr'
op|'='
name|'addr'
newline|'\n'
nl|'\n'
DECL|member|startListening
dedent|''
name|'def'
name|'startListening'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_bindSocket'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'socket'
op|'.'
name|'connect'
op|'('
name|'self'
op|'.'
name|'remoteaddr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_connectToProtocol'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'connectionFailed'
op|'('
name|'failure'
op|'.'
name|'Failure'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|connectionFailed
dedent|''
dedent|''
name|'def'
name|'connectionFailed'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'protocol'
op|'.'
name|'connectionFailed'
op|'('
name|'reason'
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'protocol'
newline|'\n'
nl|'\n'
DECL|member|doRead
dedent|''
name|'def'
name|'doRead'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Called when my socket is ready for reading."""'
newline|'\n'
name|'read'
op|'='
number|'0'
newline|'\n'
name|'while'
name|'read'
op|'<'
name|'self'
op|'.'
name|'maxThroughput'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'data'
op|','
name|'addr'
op|'='
name|'self'
op|'.'
name|'socket'
op|'.'
name|'recvfrom'
op|'('
name|'self'
op|'.'
name|'maxPacketSize'
op|')'
newline|'\n'
name|'read'
op|'+='
name|'len'
op|'('
name|'data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'protocol'
op|'.'
name|'datagramReceived'
op|'('
name|'data'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'socket'
op|'.'
name|'error'
op|','
name|'se'
op|':'
newline|'\n'
indent|'                '
name|'no'
op|'='
name|'se'
op|'.'
name|'args'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'no'
name|'in'
op|'('
name|'EAGAIN'
op|','
name|'EINTR'
op|','
name|'EWOULDBLOCK'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'return'
newline|'\n'
dedent|''
name|'if'
name|'no'
op|'=='
name|'ECONNREFUSED'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'protocol'
op|'.'
name|'connectionRefused'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'deferr'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|write
dedent|''
dedent|''
dedent|''
name|'def'
name|'write'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Write a datagram."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'socket'
op|'.'
name|'send'
op|'('
name|'data'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'socket'
op|'.'
name|'error'
op|','
name|'se'
op|':'
newline|'\n'
indent|'            '
name|'no'
op|'='
name|'se'
op|'.'
name|'args'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'no'
op|'=='
name|'EINTR'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'no'
op|'=='
name|'EMSGSIZE'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'error'
op|'.'
name|'MessageLengthError'
op|','
string|'"message too long"'
newline|'\n'
dedent|''
name|'elif'
name|'no'
op|'=='
name|'ECONNREFUSED'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'protocol'
op|'.'
name|'connectionRefused'
op|'('
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'no'
op|'=='
name|'EAGAIN'
op|':'
newline|'\n'
comment|'# oh, well, drop the data. The only difference from UDP'
nl|'\n'
comment|"# is that UDP won't ever notice."
nl|'\n'
comment|'# TODO: add TCP-like buffering'
nl|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
nl|'\n'
DECL|member|getPeer
dedent|''
dedent|''
dedent|''
name|'def'
name|'getPeer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'address'
op|'.'
name|'UNIXAddress'
op|'('
name|'self'
op|'.'
name|'remoteaddr'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
