begin_unit
comment|'# -*- test-case-name: twisted.test.test_stdio -*-'
nl|'\n'
nl|'\n'
string|'"""Standard input/out/err support.\n\nFuture Plans::\n\n    support for stderr, perhaps\n    Rewrite to use the reactor instead of an ad-hoc mechanism for connecting\n        protocols to transport.\n\nMaintainer: James Y Knight\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'warnings'
newline|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'process'
op|','
name|'error'
op|','
name|'interfaces'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
op|','
name|'failure'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|PipeAddress
name|'class'
name|'PipeAddress'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'implements'
op|'('
name|'interfaces'
op|'.'
name|'IAddress'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|StandardIO
dedent|''
name|'class'
name|'StandardIO'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'implements'
op|'('
name|'interfaces'
op|'.'
name|'ITransport'
op|','
name|'interfaces'
op|'.'
name|'IProducer'
op|','
name|'interfaces'
op|'.'
name|'IConsumer'
op|','
name|'interfaces'
op|'.'
name|'IHalfCloseableDescriptor'
op|')'
newline|'\n'
DECL|variable|_reader
name|'_reader'
op|'='
name|'None'
newline|'\n'
DECL|variable|_writer
name|'_writer'
op|'='
name|'None'
newline|'\n'
DECL|variable|disconnected
name|'disconnected'
op|'='
name|'False'
newline|'\n'
DECL|variable|disconnecting
name|'disconnecting'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'proto'
op|','
name|'stdin'
op|'='
number|'0'
op|','
name|'stdout'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
newline|'\n'
name|'self'
op|'.'
name|'protocol'
op|'='
name|'proto'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_reader'
op|'='
name|'process'
op|'.'
name|'ProcessReader'
op|'('
name|'reactor'
op|','
name|'self'
op|','
string|"'read'"
op|','
name|'stdin'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_reader'
op|'.'
name|'startReading'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_writer'
op|'='
name|'process'
op|'.'
name|'ProcessWriter'
op|'('
name|'reactor'
op|','
name|'self'
op|','
string|"'write'"
op|','
name|'stdout'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_writer'
op|'.'
name|'startReading'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'protocol'
op|'.'
name|'makeConnection'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
comment|'# ITransport'
nl|'\n'
nl|'\n'
comment|'# XXX Actually, see #3597.'
nl|'\n'
DECL|member|loseWriteConnection
dedent|''
name|'def'
name|'loseWriteConnection'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'_writer'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_writer'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|write
dedent|''
dedent|''
name|'def'
name|'write'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'_writer'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_writer'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|writeSequence
dedent|''
dedent|''
name|'def'
name|'writeSequence'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'_writer'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_writer'
op|'.'
name|'writeSequence'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|loseConnection
dedent|''
dedent|''
name|'def'
name|'loseConnection'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'disconnecting'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'_writer'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_writer'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'_reader'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
comment|"# Don't loseConnection, because we don't want to SIGPIPE it."
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'_reader'
op|'.'
name|'stopReading'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|getPeer
dedent|''
dedent|''
name|'def'
name|'getPeer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'PipeAddress'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|getHost
dedent|''
name|'def'
name|'getHost'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'PipeAddress'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# Callbacks from process.ProcessReader/ProcessWriter'
nl|'\n'
DECL|member|childDataReceived
dedent|''
name|'def'
name|'childDataReceived'
op|'('
name|'self'
op|','
name|'fd'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'protocol'
op|'.'
name|'dataReceived'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|childConnectionLost
dedent|''
name|'def'
name|'childConnectionLost'
op|'('
name|'self'
op|','
name|'fd'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'disconnected'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'reason'
op|'.'
name|'value'
op|'.'
name|'__class__'
op|'=='
name|'error'
op|'.'
name|'ConnectionDone'
op|':'
newline|'\n'
comment|'# Normal close'
nl|'\n'
indent|'            '
name|'if'
name|'fd'
op|'=='
string|"'read'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_readConnectionLost'
op|'('
name|'reason'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_writeConnectionLost'
op|'('
name|'reason'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'connectionLost'
op|'('
name|'reason'
op|')'
newline|'\n'
nl|'\n'
DECL|member|connectionLost
dedent|''
dedent|''
name|'def'
name|'connectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'disconnected'
op|'='
name|'True'
newline|'\n'
nl|'\n'
comment|'# Make sure to cleanup the other half'
nl|'\n'
name|'_reader'
op|'='
name|'self'
op|'.'
name|'_reader'
newline|'\n'
name|'_writer'
op|'='
name|'self'
op|'.'
name|'_writer'
newline|'\n'
name|'protocol'
op|'='
name|'self'
op|'.'
name|'protocol'
newline|'\n'
name|'self'
op|'.'
name|'_reader'
op|'='
name|'self'
op|'.'
name|'_writer'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'protocol'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'if'
name|'_writer'
name|'is'
name|'not'
name|'None'
name|'and'
name|'not'
name|'_writer'
op|'.'
name|'disconnected'
op|':'
newline|'\n'
indent|'            '
name|'_writer'
op|'.'
name|'connectionLost'
op|'('
name|'reason'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'_reader'
name|'is'
name|'not'
name|'None'
name|'and'
name|'not'
name|'_reader'
op|'.'
name|'disconnected'
op|':'
newline|'\n'
indent|'            '
name|'_reader'
op|'.'
name|'connectionLost'
op|'('
name|'reason'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'protocol'
op|'.'
name|'connectionLost'
op|'('
name|'reason'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'err'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_writeConnectionLost
dedent|''
dedent|''
name|'def'
name|'_writeConnectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_writer'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'disconnecting'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'connectionLost'
op|'('
name|'reason'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'p'
op|'='
name|'interfaces'
op|'.'
name|'IHalfCloseableProtocol'
op|'('
name|'self'
op|'.'
name|'protocol'
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'p'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'p'
op|'.'
name|'writeConnectionLost'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'err'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connectionLost'
op|'('
name|'failure'
op|'.'
name|'Failure'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_readConnectionLost
dedent|''
dedent|''
dedent|''
name|'def'
name|'_readConnectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_reader'
op|'='
name|'None'
newline|'\n'
name|'p'
op|'='
name|'interfaces'
op|'.'
name|'IHalfCloseableProtocol'
op|'('
name|'self'
op|'.'
name|'protocol'
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'p'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'p'
op|'.'
name|'readConnectionLost'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'err'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connectionLost'
op|'('
name|'failure'
op|'.'
name|'Failure'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'connectionLost'
op|'('
name|'reason'
op|')'
newline|'\n'
nl|'\n'
comment|'# IConsumer'
nl|'\n'
DECL|member|registerProducer
dedent|''
dedent|''
name|'def'
name|'registerProducer'
op|'('
name|'self'
op|','
name|'producer'
op|','
name|'streaming'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'_writer'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'producer'
op|'.'
name|'stopProducing'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_writer'
op|'.'
name|'registerProducer'
op|'('
name|'producer'
op|','
name|'streaming'
op|')'
newline|'\n'
nl|'\n'
DECL|member|unregisterProducer
dedent|''
dedent|''
name|'def'
name|'unregisterProducer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'_writer'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_writer'
op|'.'
name|'unregisterProducer'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# IProducer'
nl|'\n'
DECL|member|stopProducing
dedent|''
dedent|''
name|'def'
name|'stopProducing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|pauseProducing
dedent|''
name|'def'
name|'pauseProducing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'_reader'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_reader'
op|'.'
name|'pauseProducing'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|resumeProducing
dedent|''
dedent|''
name|'def'
name|'resumeProducing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'_reader'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_reader'
op|'.'
name|'resumeProducing'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Stupid compatibility:'
nl|'\n'
DECL|member|closeStdin
dedent|''
dedent|''
name|'def'
name|'closeStdin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Compatibility only, don\'t use. Same as loseWriteConnection."""'
newline|'\n'
name|'warnings'
op|'.'
name|'warn'
op|'('
string|'"This function is deprecated, use loseWriteConnection instead."'
op|','
nl|'\n'
name|'category'
op|'='
name|'DeprecationWarning'
op|','
name|'stacklevel'
op|'='
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'loseWriteConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|stopReading
dedent|''
name|'def'
name|'stopReading'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Compatibility only, don\'t use. Call pauseProducing."""'
newline|'\n'
name|'self'
op|'.'
name|'pauseProducing'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|startReading
dedent|''
name|'def'
name|'startReading'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Compatibility only, don\'t use. Call resumeProducing."""'
newline|'\n'
name|'self'
op|'.'
name|'resumeProducing'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
