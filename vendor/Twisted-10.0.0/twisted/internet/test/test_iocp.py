begin_unit
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'protocol'
name|'import'
name|'ServerFactory'
op|','
name|'Protocol'
op|','
name|'ClientCreator'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'defer'
name|'import'
name|'DeferredList'
op|','
name|'maybeDeferred'
op|','
name|'Deferred'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
newline|'\n'
nl|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
op|'.'
name|'verify'
name|'import'
name|'verifyClass'
newline|'\n'
nl|'\n'
DECL|class|StopStartReadingProtocol
name|'class'
name|'StopStartReadingProtocol'
op|'('
name|'Protocol'
op|')'
op|':'
newline|'\n'
DECL|member|connectionMade
indent|'    '
name|'def'
name|'connectionMade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'pauseProducing'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'resumeProducing'
op|'('
op|')'
newline|'\n'
name|'reactor'
op|'.'
name|'callLater'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'_beTerrible'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'data'
op|'='
string|"''"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_beTerrible
dedent|''
name|'def'
name|'_beTerrible'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'pauseProducing'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'resumeProducing'
op|'('
op|')'
newline|'\n'
name|'reactor'
op|'.'
name|'callLater'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'_beMoreTerrible'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_beMoreTerrible
dedent|''
name|'def'
name|'_beMoreTerrible'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'pauseProducing'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'resumeProducing'
op|'('
op|')'
newline|'\n'
name|'reactor'
op|'.'
name|'callLater'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'factory'
op|'.'
name|'ready_d'
op|'.'
name|'callback'
op|','
name|'self'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|dataReceived
dedent|''
name|'def'
name|'dataReceived'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'got data'"
op|','
name|'len'
op|'('
name|'data'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'data'
op|'+='
name|'data'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'data'
op|')'
op|'=='
number|'4'
op|'*'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'readBufferSize'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'factory'
op|'.'
name|'stop_d'
op|'.'
name|'callback'
op|'('
name|'self'
op|'.'
name|'data'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|IOCPReactorTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'IOCPReactorTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_noPendingTimerEvents
indent|'    '
name|'def'
name|'test_noPendingTimerEvents'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test reactor behavior (doIteration) when there are no pending time\n        events.\n        """'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'iocpreactor'
op|'.'
name|'reactor'
name|'import'
name|'IOCPReactor'
newline|'\n'
name|'ir'
op|'='
name|'IOCPReactor'
op|'('
op|')'
newline|'\n'
name|'ir'
op|'.'
name|'wakeUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failIf'
op|'('
name|'ir'
op|'.'
name|'doIteration'
op|'('
name|'None'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_stopStartReading
dedent|''
name|'def'
name|'test_stopStartReading'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        This test checks transport read state! There are three bits\n        of it:\n        1) The transport producer is paused -- transport.reading\n           is False)\n        2) The transport is about to schedule an OS read, on the next\n           reactor iteration -- transport._readScheduled\n        3) The OS has a pending asynchronous read on our behalf --\n           transport._readScheduledInOS\n        if 3) is not implemented, it is possible to trick IOCPReactor into\n        scheduling an OS read before the previous one finishes\n        """'
newline|'\n'
name|'sf'
op|'='
name|'ServerFactory'
op|'('
op|')'
newline|'\n'
name|'sf'
op|'.'
name|'protocol'
op|'='
name|'StopStartReadingProtocol'
newline|'\n'
name|'sf'
op|'.'
name|'ready_d'
op|'='
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'sf'
op|'.'
name|'stop_d'
op|'='
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'p'
op|'='
name|'reactor'
op|'.'
name|'listenTCP'
op|'('
number|'0'
op|','
name|'sf'
op|')'
newline|'\n'
name|'port'
op|'='
name|'p'
op|'.'
name|'getHost'
op|'('
op|')'
op|'.'
name|'port'
newline|'\n'
name|'cc'
op|'='
name|'ClientCreator'
op|'('
name|'reactor'
op|','
name|'Protocol'
op|')'
newline|'\n'
DECL|function|proceed
name|'def'
name|'proceed'
op|'('
name|'protos'
op|','
name|'port'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'PROCEEDING WITH THE TESTATHRON'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'protos'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'protos'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'protos'
op|'='
name|'protos'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|','
name|'protos'
op|'['
number|'1'
op|']'
op|'['
number|'1'
op|']'
newline|'\n'
name|'protos'
op|'['
number|'0'
op|']'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
nl|'\n'
string|"'x'"
op|'*'
op|'('
number|'2'
op|'*'
name|'protos'
op|'['
number|'0'
op|']'
op|'.'
name|'transport'
op|'.'
name|'readBufferSize'
op|')'
op|'+'
nl|'\n'
string|"'y'"
op|'*'
op|'('
number|'2'
op|'*'
name|'protos'
op|'['
number|'0'
op|']'
op|'.'
name|'transport'
op|'.'
name|'readBufferSize'
op|')'
op|')'
newline|'\n'
name|'return'
name|'sf'
op|'.'
name|'stop_d'
op|'.'
name|'addCallback'
op|'('
name|'cleanup'
op|','
name|'protos'
op|','
name|'port'
op|')'
newline|'\n'
nl|'\n'
DECL|function|cleanup
dedent|''
name|'def'
name|'cleanup'
op|'('
name|'data'
op|','
name|'protos'
op|','
name|'port'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'data'
op|'=='
string|"'x'"
op|'*'
op|'('
number|'2'
op|'*'
name|'protos'
op|'['
number|'0'
op|']'
op|'.'
name|'transport'
op|'.'
name|'readBufferSize'
op|')'
op|'+'
nl|'\n'
string|"'y'"
op|'*'
op|'('
number|'2'
op|'*'
name|'protos'
op|'['
number|'0'
op|']'
op|'.'
name|'transport'
op|'.'
name|'readBufferSize'
op|')'
op|','
nl|'\n'
string|"'did not get the right data'"
op|')'
newline|'\n'
name|'return'
name|'DeferredList'
op|'('
op|'['
nl|'\n'
name|'maybeDeferred'
op|'('
name|'protos'
op|'['
number|'0'
op|']'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|')'
op|','
nl|'\n'
name|'maybeDeferred'
op|'('
name|'protos'
op|'['
number|'1'
op|']'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|')'
op|','
nl|'\n'
name|'maybeDeferred'
op|'('
name|'port'
op|'.'
name|'stopListening'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
op|'('
name|'DeferredList'
op|'('
op|'['
name|'cc'
op|'.'
name|'connectTCP'
op|'('
string|"'127.0.0.1'"
op|','
name|'port'
op|')'
op|','
name|'sf'
op|'.'
name|'ready_d'
op|']'
op|')'
nl|'\n'
op|'.'
name|'addCallback'
op|'('
name|'proceed'
op|','
name|'p'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_reactorInterfaces
dedent|''
name|'def'
name|'test_reactorInterfaces'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Verify that IOCP socket-representing classes implement IReadWriteHandle\n        """'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'iocpreactor'
op|'.'
name|'interfaces'
name|'import'
name|'IReadWriteHandle'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'iocpreactor'
name|'import'
name|'tcp'
op|','
name|'udp'
newline|'\n'
name|'verifyClass'
op|'('
name|'IReadWriteHandle'
op|','
name|'tcp'
op|'.'
name|'Connection'
op|')'
newline|'\n'
name|'verifyClass'
op|'('
name|'IReadWriteHandle'
op|','
name|'udp'
op|'.'
name|'Port'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'reactor'
op|'.'
name|'__class__'
op|'.'
name|'__name__'
op|'!='
string|"'IOCPReactor'"
op|':'
newline|'\n'
indent|'    '
name|'IOCPReactorTestCase'
op|'.'
name|'skip'
op|'='
string|"'This test only applies to IOCPReactor'"
newline|'\n'
nl|'\n'
dedent|''
endmarker|''
end_unit
