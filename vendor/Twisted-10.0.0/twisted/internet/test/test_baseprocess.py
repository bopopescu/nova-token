begin_unit
comment|'# Copyright (c) 2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nTests for L{twisted.internet._baseprocess} which implements process-related\nfunctionality that is useful in all platforms supporting L{IReactorProcess}.\n"""'
newline|'\n'
nl|'\n'
DECL|variable|__metaclass__
name|'__metaclass__'
op|'='
name|'type'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'deprecate'
name|'import'
name|'getWarningMethod'
op|','
name|'setWarningMethod'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
op|'.'
name|'unittest'
name|'import'
name|'TestCase'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'_baseprocess'
name|'import'
name|'BaseProcess'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BaseProcessTests
name|'class'
name|'BaseProcessTests'
op|'('
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Tests for L{BaseProcess}, a parent class for other classes which represent\n    processes which implements functionality common to many different process\n    implementations.\n    """'
newline|'\n'
DECL|member|test_callProcessExited
name|'def'
name|'test_callProcessExited'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        L{BaseProcess._callProcessExited} calls the C{processExited} method of\n        its C{proto} attribute and passes it a L{Failure} wrapping the given\n        exception.\n        """'
newline|'\n'
DECL|class|FakeProto
name|'class'
name|'FakeProto'
op|':'
newline|'\n'
DECL|variable|reason
indent|'            '
name|'reason'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|processExited
name|'def'
name|'processExited'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'reason'
op|'='
name|'reason'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'reason'
op|'='
name|'RuntimeError'
op|'('
string|'"fake reason"'
op|')'
newline|'\n'
name|'process'
op|'='
name|'BaseProcess'
op|'('
name|'FakeProto'
op|'('
op|')'
op|')'
newline|'\n'
name|'process'
op|'.'
name|'_callProcessExited'
op|'('
name|'reason'
op|')'
newline|'\n'
name|'process'
op|'.'
name|'proto'
op|'.'
name|'reason'
op|'.'
name|'trap'
op|'('
name|'RuntimeError'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIdentical'
op|'('
name|'reason'
op|','
name|'process'
op|'.'
name|'proto'
op|'.'
name|'reason'
op|'.'
name|'value'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_callProcessExitedMissing
dedent|''
name|'def'
name|'test_callProcessExitedMissing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        L{BaseProcess._callProcessExited} emits a L{DeprecationWarning} if the\n        object referred to by its C{proto} attribute has no C{processExited}\n        method.\n        """'
newline|'\n'
DECL|class|FakeProto
name|'class'
name|'FakeProto'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'reason'
op|'='
name|'object'
op|'('
op|')'
newline|'\n'
name|'process'
op|'='
name|'BaseProcess'
op|'('
name|'FakeProto'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'setWarningMethod'
op|','
name|'getWarningMethod'
op|'('
op|')'
op|')'
newline|'\n'
name|'warnings'
op|'='
op|'['
op|']'
newline|'\n'
DECL|function|collect
name|'def'
name|'collect'
op|'('
name|'message'
op|','
name|'category'
op|','
name|'stacklevel'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'warnings'
op|'.'
name|'append'
op|'('
op|'('
name|'message'
op|','
name|'category'
op|','
name|'stacklevel'
op|')'
op|')'
newline|'\n'
dedent|''
name|'setWarningMethod'
op|'('
name|'collect'
op|')'
newline|'\n'
nl|'\n'
name|'process'
op|'.'
name|'_callProcessExited'
op|'('
name|'reason'
op|')'
newline|'\n'
nl|'\n'
op|'['
op|'('
name|'message'
op|','
name|'category'
op|','
name|'stacklevel'
op|')'
op|']'
op|'='
name|'warnings'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'message'
op|','
nl|'\n'
string|'"Since Twisted 8.2, IProcessProtocol.processExited is required.  "'
nl|'\n'
string|'"%s.%s must implement it."'
op|'%'
op|'('
nl|'\n'
name|'FakeProto'
op|'.'
name|'__module__'
op|','
name|'FakeProto'
op|'.'
name|'__name__'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIdentical'
op|'('
name|'category'
op|','
name|'DeprecationWarning'
op|')'
newline|'\n'
comment|"# The stacklevel doesn't really make sense for this kind of"
nl|'\n'
comment|'# deprecation.  Requiring it to be 0 will at least avoid pointing to'
nl|'\n'
comment|"# any part of Twisted or a random part of the application's code, which"
nl|'\n'
comment|'# I think would be more misleading than having it point inside the'
nl|'\n'
comment|'# warning system itself. -exarkun'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stacklevel'
op|','
number|'0'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
