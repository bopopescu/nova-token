begin_unit
comment|'# -*- test-case-name: twisted.test.test_process -*-'
nl|'\n'
comment|'# Copyright (c) 2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nCross-platform process-related functionality used by different\nL{IReactorProcess} implementations.\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'reflect'
name|'import'
name|'qual'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'deprecate'
name|'import'
name|'getWarningMethod'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'failure'
name|'import'
name|'Failure'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'log'
name|'import'
name|'err'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'persisted'
op|'.'
name|'styles'
name|'import'
name|'Ephemeral'
newline|'\n'
nl|'\n'
DECL|variable|_missingProcessExited
name|'_missingProcessExited'
op|'='
op|'('
string|'"Since Twisted 8.2, IProcessProtocol.processExited "'
nl|'\n'
string|'"is required.  %s must implement it."'
op|')'
newline|'\n'
nl|'\n'
DECL|class|BaseProcess
name|'class'
name|'BaseProcess'
op|'('
name|'Ephemeral'
op|')'
op|':'
newline|'\n'
DECL|variable|pid
indent|'    '
name|'pid'
op|'='
name|'None'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'None'
newline|'\n'
DECL|variable|lostProcess
name|'lostProcess'
op|'='
number|'0'
newline|'\n'
DECL|variable|proto
name|'proto'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'protocol'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'proto'
op|'='
name|'protocol'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_callProcessExited
dedent|''
name|'def'
name|'_callProcessExited'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'default'
op|'='
name|'object'
op|'('
op|')'
newline|'\n'
name|'processExited'
op|'='
name|'getattr'
op|'('
name|'self'
op|'.'
name|'proto'
op|','
string|"'processExited'"
op|','
name|'default'
op|')'
newline|'\n'
name|'if'
name|'processExited'
name|'is'
name|'default'
op|':'
newline|'\n'
indent|'            '
name|'getWarningMethod'
op|'('
op|')'
op|'('
nl|'\n'
name|'_missingProcessExited'
op|'%'
op|'('
name|'qual'
op|'('
name|'self'
op|'.'
name|'proto'
op|'.'
name|'__class__'
op|')'
op|','
op|')'
op|','
nl|'\n'
name|'DeprecationWarning'
op|','
name|'stacklevel'
op|'='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'processExited'
op|'('
name|'Failure'
op|'('
name|'reason'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|processEnded
dedent|''
dedent|''
name|'def'
name|'processEnded'
op|'('
name|'self'
op|','
name|'status'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        This is called when the child terminates.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'status'
op|'='
name|'status'
newline|'\n'
name|'self'
op|'.'
name|'lostProcess'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'pid'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_callProcessExited'
op|'('
name|'self'
op|'.'
name|'_getReason'
op|'('
name|'status'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'maybeCallProcessEnded'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|maybeCallProcessEnded
dedent|''
name|'def'
name|'maybeCallProcessEnded'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Call processEnded on protocol after final cleanup.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'proto'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'reason'
op|'='
name|'self'
op|'.'
name|'_getReason'
op|'('
name|'self'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'proto'
op|'='
name|'self'
op|'.'
name|'proto'
newline|'\n'
name|'self'
op|'.'
name|'proto'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'proto'
op|'.'
name|'processEnded'
op|'('
name|'Failure'
op|'('
name|'reason'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                '
name|'err'
op|'('
name|'None'
op|','
string|'"unexpected error in processEnded"'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
