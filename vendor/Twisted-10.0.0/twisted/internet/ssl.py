begin_unit
comment|'# -*- test-case-name: twisted.test.test_ssl -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2009 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""\nSSL transport. Requires PyOpenSSL (http://pyopenssl.sf.net).\n\nSSL connections require a ContextFactory so they can create SSL contexts.\nEnd users should only use the ContextFactory classes directly - for SSL\nconnections use the reactor.connectSSL/listenSSL and so on, as documented\nin IReactorSSL.\n\nAll server context factories should inherit from ContextFactory, and all\nclient context factories should inherit from ClientContextFactory. At the\nmoment this is not enforced, but in the future it might be.\n\nFuture Plans:\n    - split module so reactor-specific classes are in a separate module\n    - support for switching TCP into SSL\n    - more options\n\nMaintainer: Itamar Shtull-Trauring\n"""'
newline|'\n'
nl|'\n'
comment|'# If something goes wrong, most notably an OpenSSL import failure,'
nl|'\n'
comment|"# sys.modules['twisted.internet.ssl'] will be bound to a partially"
nl|'\n'
comment|'# initialized module object.  This is wacko, but we will take advantage'
nl|'\n'
comment|'# of it to publish whether or not SSL is available.'
nl|'\n'
comment|'# See the end of this module for the other half of this solution.'
nl|'\n'
nl|'\n'
comment|'# The correct idiom to import this module is thus:'
nl|'\n'
nl|'\n'
comment|'# try:'
nl|'\n'
comment|'#    from twisted.internet import ssl'
nl|'\n'
comment|'# except ImportError:'
nl|'\n'
comment|'#    # happens the first time the interpreter tries to import it'
nl|'\n'
comment|'#    ssl = None'
nl|'\n'
comment|'# if ssl and not ssl.supported:'
nl|'\n'
comment|'#    # happens second and later times'
nl|'\n'
comment|'#    ssl = None'
nl|'\n'
nl|'\n'
DECL|variable|supported
name|'supported'
op|'='
name|'False'
newline|'\n'
nl|'\n'
comment|'# System imports'
nl|'\n'
name|'from'
name|'OpenSSL'
name|'import'
name|'SSL'
newline|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
op|','
name|'implementsOnly'
op|','
name|'implementedBy'
newline|'\n'
nl|'\n'
comment|'# Twisted imports'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'tcp'
op|','
name|'interfaces'
op|','
name|'base'
op|','
name|'address'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ContextFactory
name|'class'
name|'ContextFactory'
op|':'
newline|'\n'
indent|'    '
string|'"""A factory for SSL context objects, for server SSL connections."""'
newline|'\n'
nl|'\n'
DECL|variable|isClient
name|'isClient'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|getContext
name|'def'
name|'getContext'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return a SSL.Context object. override in subclasses."""'
newline|'\n'
name|'raise'
name|'NotImplementedError'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DefaultOpenSSLContextFactory
dedent|''
dedent|''
name|'class'
name|'DefaultOpenSSLContextFactory'
op|'('
name|'ContextFactory'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    L{DefaultOpenSSLContextFactory} is a factory for server-side SSL context\n    objects.  These objects define certain parameters related to SSL\n    handshakes and the subsequent connection.\n\n    @ivar _contextFactory: A callable which will be used to create new\n        context objects.  This is typically L{SSL.Context}.\n    """'
newline|'\n'
DECL|variable|_context
name|'_context'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'privateKeyFileName'
op|','
name|'certificateFileName'
op|','
nl|'\n'
name|'sslmethod'
op|'='
name|'SSL'
op|'.'
name|'SSLv23_METHOD'
op|','
name|'_contextFactory'
op|'='
name|'SSL'
op|'.'
name|'Context'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        @param privateKeyFileName: Name of a file containing a private key\n        @param certificateFileName: Name of a file containing a certificate\n        @param sslmethod: The SSL method to use\n        """'
newline|'\n'
name|'self'
op|'.'
name|'privateKeyFileName'
op|'='
name|'privateKeyFileName'
newline|'\n'
name|'self'
op|'.'
name|'certificateFileName'
op|'='
name|'certificateFileName'
newline|'\n'
name|'self'
op|'.'
name|'sslmethod'
op|'='
name|'sslmethod'
newline|'\n'
name|'self'
op|'.'
name|'_contextFactory'
op|'='
name|'_contextFactory'
newline|'\n'
nl|'\n'
comment|'# Create a context object right now.  This is to force validation of'
nl|'\n'
comment|'# the given parameters so that errors are detected earlier rather'
nl|'\n'
comment|'# than later.'
nl|'\n'
name|'self'
op|'.'
name|'cacheContext'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|cacheContext
dedent|''
name|'def'
name|'cacheContext'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'_context'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'ctx'
op|'='
name|'self'
op|'.'
name|'_contextFactory'
op|'('
name|'self'
op|'.'
name|'sslmethod'
op|')'
newline|'\n'
comment|"# Disallow SSLv2!  It's insecure!  SSLv3 has been around since"
nl|'\n'
comment|"# 1996.  It's time to move on."
nl|'\n'
name|'ctx'
op|'.'
name|'set_options'
op|'('
name|'SSL'
op|'.'
name|'OP_NO_SSLv2'
op|')'
newline|'\n'
name|'ctx'
op|'.'
name|'use_certificate_file'
op|'('
name|'self'
op|'.'
name|'certificateFileName'
op|')'
newline|'\n'
name|'ctx'
op|'.'
name|'use_privatekey_file'
op|'('
name|'self'
op|'.'
name|'privateKeyFileName'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_context'
op|'='
name|'ctx'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|__getstate__
dedent|''
dedent|''
name|'def'
name|'__getstate__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'__dict__'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'del'
name|'d'
op|'['
string|"'_context'"
op|']'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|__setstate__
dedent|''
name|'def'
name|'__setstate__'
op|'('
name|'self'
op|','
name|'state'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'__dict__'
op|'='
name|'state'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getContext
dedent|''
name|'def'
name|'getContext'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Return an SSL context.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_context'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ClientContextFactory
dedent|''
dedent|''
name|'class'
name|'ClientContextFactory'
op|':'
newline|'\n'
indent|'    '
string|'"""A context factory for SSL clients."""'
newline|'\n'
nl|'\n'
DECL|variable|isClient
name|'isClient'
op|'='
number|'1'
newline|'\n'
nl|'\n'
comment|'# SSLv23_METHOD allows SSLv2, SSLv3, and TLSv1.  We disable SSLv2 below,'
nl|'\n'
comment|'# though.'
nl|'\n'
DECL|variable|method
name|'method'
op|'='
name|'SSL'
op|'.'
name|'SSLv23_METHOD'
newline|'\n'
nl|'\n'
DECL|variable|_contextFactory
name|'_contextFactory'
op|'='
name|'SSL'
op|'.'
name|'Context'
newline|'\n'
nl|'\n'
DECL|member|getContext
name|'def'
name|'getContext'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ctx'
op|'='
name|'self'
op|'.'
name|'_contextFactory'
op|'('
name|'self'
op|'.'
name|'method'
op|')'
newline|'\n'
comment|'# See comment in DefaultOpenSSLContextFactory about SSLv2.'
nl|'\n'
name|'ctx'
op|'.'
name|'set_options'
op|'('
name|'SSL'
op|'.'
name|'OP_NO_SSLv2'
op|')'
newline|'\n'
name|'return'
name|'ctx'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|Client
dedent|''
dedent|''
name|'class'
name|'Client'
op|'('
name|'tcp'
op|'.'
name|'Client'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""I am an SSL client."""'
newline|'\n'
nl|'\n'
name|'implementsOnly'
op|'('
name|'interfaces'
op|'.'
name|'ISSLTransport'
op|','
nl|'\n'
op|'*'
op|'['
name|'i'
name|'for'
name|'i'
name|'in'
name|'implementedBy'
op|'('
name|'tcp'
op|'.'
name|'Client'
op|')'
name|'if'
name|'i'
op|'!='
name|'interfaces'
op|'.'
name|'ITLSTransport'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'port'
op|','
name|'bindAddress'
op|','
name|'ctxFactory'
op|','
name|'connector'
op|','
name|'reactor'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
comment|'# tcp.Client.__init__ depends on self.ctxFactory being set'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'ctxFactory'
op|'='
name|'ctxFactory'
newline|'\n'
name|'tcp'
op|'.'
name|'Client'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'port'
op|','
name|'bindAddress'
op|','
name|'connector'
op|','
name|'reactor'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getHost
dedent|''
name|'def'
name|'getHost'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns the address from which I am connecting."""'
newline|'\n'
name|'h'
op|','
name|'p'
op|'='
name|'self'
op|'.'
name|'socket'
op|'.'
name|'getsockname'
op|'('
op|')'
newline|'\n'
name|'return'
name|'address'
op|'.'
name|'IPv4Address'
op|'('
string|"'TCP'"
op|','
name|'h'
op|','
name|'p'
op|','
string|"'SSL'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|getPeer
dedent|''
name|'def'
name|'getPeer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns the address that I am connected."""'
newline|'\n'
name|'return'
name|'address'
op|'.'
name|'IPv4Address'
op|'('
string|"'TCP'"
op|','
name|'self'
op|'.'
name|'addr'
op|'['
number|'0'
op|']'
op|','
name|'self'
op|'.'
name|'addr'
op|'['
number|'1'
op|']'
op|','
string|"'SSL'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_connectDone
dedent|''
name|'def'
name|'_connectDone'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'startTLS'
op|'('
name|'self'
op|'.'
name|'ctxFactory'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'startWriting'
op|'('
op|')'
newline|'\n'
name|'tcp'
op|'.'
name|'Client'
op|'.'
name|'_connectDone'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Server
dedent|''
dedent|''
name|'class'
name|'Server'
op|'('
name|'tcp'
op|'.'
name|'Server'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""I am an SSL server.\n    """'
newline|'\n'
nl|'\n'
name|'implements'
op|'('
name|'interfaces'
op|'.'
name|'ISSLTransport'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getHost
name|'def'
name|'getHost'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return server\'s address."""'
newline|'\n'
name|'h'
op|','
name|'p'
op|'='
name|'self'
op|'.'
name|'socket'
op|'.'
name|'getsockname'
op|'('
op|')'
newline|'\n'
name|'return'
name|'address'
op|'.'
name|'IPv4Address'
op|'('
string|"'TCP'"
op|','
name|'h'
op|','
name|'p'
op|','
string|"'SSL'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|getPeer
dedent|''
name|'def'
name|'getPeer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return address of peer."""'
newline|'\n'
name|'h'
op|','
name|'p'
op|'='
name|'self'
op|'.'
name|'client'
newline|'\n'
name|'return'
name|'address'
op|'.'
name|'IPv4Address'
op|'('
string|"'TCP'"
op|','
name|'h'
op|','
name|'p'
op|','
string|"'SSL'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Port
dedent|''
dedent|''
name|'class'
name|'Port'
op|'('
name|'tcp'
op|'.'
name|'Port'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""I am an SSL port."""'
newline|'\n'
DECL|variable|_socketShutdownMethod
name|'_socketShutdownMethod'
op|'='
string|"'sock_shutdown'"
newline|'\n'
nl|'\n'
DECL|variable|transport
name|'transport'
op|'='
name|'Server'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'port'
op|','
name|'factory'
op|','
name|'ctxFactory'
op|','
name|'backlog'
op|'='
number|'50'
op|','
name|'interface'
op|'='
string|"''"
op|','
name|'reactor'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tcp'
op|'.'
name|'Port'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'port'
op|','
name|'factory'
op|','
name|'backlog'
op|','
name|'interface'
op|','
name|'reactor'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ctxFactory'
op|'='
name|'ctxFactory'
newline|'\n'
nl|'\n'
DECL|member|createInternetSocket
dedent|''
name|'def'
name|'createInternetSocket'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""(internal) create an SSL socket\n        """'
newline|'\n'
name|'sock'
op|'='
name|'tcp'
op|'.'
name|'Port'
op|'.'
name|'createInternetSocket'
op|'('
name|'self'
op|')'
newline|'\n'
name|'return'
name|'SSL'
op|'.'
name|'Connection'
op|'('
name|'self'
op|'.'
name|'ctxFactory'
op|'.'
name|'getContext'
op|'('
op|')'
op|','
name|'sock'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_preMakeConnection
dedent|''
name|'def'
name|'_preMakeConnection'
op|'('
name|'self'
op|','
name|'transport'
op|')'
op|':'
newline|'\n'
comment|"# *Don't* call startTLS here"
nl|'\n'
comment|'# The transport already has the SSL.Connection object from above'
nl|'\n'
indent|'        '
name|'transport'
op|'.'
name|'_startTLS'
op|'('
op|')'
newline|'\n'
name|'return'
name|'tcp'
op|'.'
name|'Port'
op|'.'
name|'_preMakeConnection'
op|'('
name|'self'
op|','
name|'transport'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Connector
dedent|''
dedent|''
name|'class'
name|'Connector'
op|'('
name|'base'
op|'.'
name|'BaseConnector'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'port'
op|','
name|'factory'
op|','
name|'contextFactory'
op|','
name|'timeout'
op|','
name|'bindAddress'
op|','
name|'reactor'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'host'
op|'='
name|'host'
newline|'\n'
name|'self'
op|'.'
name|'port'
op|'='
name|'port'
newline|'\n'
name|'self'
op|'.'
name|'bindAddress'
op|'='
name|'bindAddress'
newline|'\n'
name|'self'
op|'.'
name|'contextFactory'
op|'='
name|'contextFactory'
newline|'\n'
name|'base'
op|'.'
name|'BaseConnector'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'factory'
op|','
name|'timeout'
op|','
name|'reactor'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_makeTransport
dedent|''
name|'def'
name|'_makeTransport'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'Client'
op|'('
name|'self'
op|'.'
name|'host'
op|','
name|'self'
op|'.'
name|'port'
op|','
name|'self'
op|'.'
name|'bindAddress'
op|','
name|'self'
op|'.'
name|'contextFactory'
op|','
name|'self'
op|','
name|'self'
op|'.'
name|'reactor'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getDestination
dedent|''
name|'def'
name|'getDestination'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'address'
op|'.'
name|'IPv4Address'
op|'('
string|"'TCP'"
op|','
name|'self'
op|'.'
name|'host'
op|','
name|'self'
op|'.'
name|'port'
op|','
string|"'SSL'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'_sslverify'
name|'import'
name|'DistinguishedName'
op|','
name|'DN'
op|','
name|'Certificate'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'_sslverify'
name|'import'
name|'CertificateRequest'
op|','
name|'PrivateCertificate'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'_sslverify'
name|'import'
name|'KeyPair'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'_sslverify'
name|'import'
name|'OpenSSLCertificateOptions'
name|'as'
name|'CertificateOptions'
newline|'\n'
nl|'\n'
DECL|variable|__all__
name|'__all__'
op|'='
op|'['
nl|'\n'
string|'"ContextFactory"'
op|','
string|'"DefaultOpenSSLContextFactory"'
op|','
string|'"ClientContextFactory"'
op|','
nl|'\n'
nl|'\n'
string|"'DistinguishedName'"
op|','
string|"'DN'"
op|','
nl|'\n'
string|"'Certificate'"
op|','
string|"'CertificateRequest'"
op|','
string|"'PrivateCertificate'"
op|','
nl|'\n'
string|"'KeyPair'"
op|','
nl|'\n'
string|"'CertificateOptions'"
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|supported
name|'supported'
op|'='
name|'True'
newline|'\n'
endmarker|''
end_unit
