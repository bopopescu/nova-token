begin_unit
comment|'# -*- test-case-name: twisted.internet.test.test_gtk2reactor -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2010 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""\nThis module provides support for Twisted to interact with the glib/gtk2\nmainloop.\n\nIn order to use this support, simply do the following::\n\n    |  from twisted.internet import gtk2reactor\n    |  gtk2reactor.install()\n\nThen use twisted.internet APIs as usual.  The other methods here are not\nintended to be called directly.\n\nWhen installing the reactor, you can choose whether to use the glib\nevent loop or the GTK+ event loop which is based on it but adds GUI\nintegration.\n"""'
newline|'\n'
nl|'\n'
comment|'# System Imports'
nl|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'sys'
op|','
string|"'frozen'"
op|')'
op|':'
newline|'\n'
comment|"# Don't want to check this for py2exe"
nl|'\n'
indent|'        '
name|'import'
name|'pygtk'
newline|'\n'
name|'pygtk'
op|'.'
name|'require'
op|'('
string|"'2.0'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|'('
name|'ImportError'
op|','
name|'AttributeError'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
comment|"# maybe we're using pygtk before this hack existed."
newline|'\n'
dedent|''
name|'import'
name|'gobject'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'gobject'
op|','
string|'"threads_init"'
op|')'
op|':'
newline|'\n'
comment|'# recent versions of python-gtk expose this. python-gtk=2.4.1'
nl|'\n'
comment|'# (wrapping glib-2.4.7) does. python-gtk=2.0.0 (wrapping'
nl|'\n'
comment|'# glib-2.2.3) does not.'
nl|'\n'
indent|'    '
name|'gobject'
op|'.'
name|'threads_init'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Twisted Imports'
nl|'\n'
dedent|''
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
op|','
name|'runtime'
op|','
name|'failure'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'compat'
name|'import'
name|'set'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'interfaces'
name|'import'
name|'IReactorFDSet'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'main'
op|','
name|'posixbase'
op|','
name|'error'
op|','
name|'selectreactor'
newline|'\n'
nl|'\n'
DECL|variable|POLL_DISCONNECTED
name|'POLL_DISCONNECTED'
op|'='
name|'gobject'
op|'.'
name|'IO_HUP'
op|'|'
name|'gobject'
op|'.'
name|'IO_ERR'
op|'|'
name|'gobject'
op|'.'
name|'IO_NVAL'
newline|'\n'
nl|'\n'
comment|"# glib's iochannel sources won't tell us about any events that we haven't"
nl|'\n'
comment|"# asked for, even if those events aren't sensible inputs to the poll()"
nl|'\n'
comment|'# call.'
nl|'\n'
DECL|variable|INFLAGS
name|'INFLAGS'
op|'='
name|'gobject'
op|'.'
name|'IO_IN'
op|'|'
name|'POLL_DISCONNECTED'
newline|'\n'
DECL|variable|OUTFLAGS
name|'OUTFLAGS'
op|'='
name|'gobject'
op|'.'
name|'IO_OUT'
op|'|'
name|'POLL_DISCONNECTED'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|_our_mainquit
name|'def'
name|'_our_mainquit'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# XXX: gtk.main_quit() (which is used for crash()) raises an exception if'
nl|'\n'
comment|'# gtk.main_level() == 0; however, all the tests freeze if we use this'
nl|'\n'
comment|'# function to stop the reactor.  what gives?  (I believe this may have been'
nl|'\n'
comment|'# a stupid mistake where I forgot to import gtk here... I will remove this'
nl|'\n'
comment|'# comment if the tests pass)'
nl|'\n'
indent|'    '
name|'import'
name|'gtk'
newline|'\n'
name|'if'
name|'gtk'
op|'.'
name|'main_level'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'gtk'
op|'.'
name|'main_quit'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|Gtk2Reactor
dedent|''
dedent|''
name|'class'
name|'Gtk2Reactor'
op|'('
name|'posixbase'
op|'.'
name|'PosixReactorBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    GTK+-2 event loop reactor.\n\n    @ivar _sources: A dictionary mapping L{FileDescriptor} instances to gtk\n        watch handles.\n\n    @ivar _reads: A set of L{FileDescriptor} instances currently monitored for\n        reading.\n\n    @ivar _writes: A set of L{FileDescriptor} instances currently monitored for\n        writing.\n\n    @ivar _simtag: A gtk timeout handle for the next L{simulate} call.\n    """'
newline|'\n'
name|'implements'
op|'('
name|'IReactorFDSet'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'useGtk'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_simtag'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_reads'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_writes'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_sources'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'posixbase'
op|'.'
name|'PosixReactorBase'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
comment|"# pre 2.3.91 the glib iteration and mainloop functions didn't release"
nl|'\n'
comment|'# global interpreter lock, thus breaking thread and signal support.'
nl|'\n'
name|'if'
name|'getattr'
op|'('
name|'gobject'
op|','
string|'"pygtk_version"'
op|','
op|'('
op|')'
op|')'
op|'>='
op|'('
number|'2'
op|','
number|'3'
op|','
number|'91'
op|')'
name|'and'
name|'not'
name|'useGtk'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'context'
op|'='
name|'gobject'
op|'.'
name|'main_context_default'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'__pending'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'pending'
newline|'\n'
name|'self'
op|'.'
name|'__iteration'
op|'='
name|'self'
op|'.'
name|'context'
op|'.'
name|'iteration'
newline|'\n'
name|'self'
op|'.'
name|'loop'
op|'='
name|'gobject'
op|'.'
name|'MainLoop'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'__crash'
op|'='
name|'self'
op|'.'
name|'loop'
op|'.'
name|'quit'
newline|'\n'
name|'self'
op|'.'
name|'__run'
op|'='
name|'self'
op|'.'
name|'loop'
op|'.'
name|'run'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'import'
name|'gtk'
newline|'\n'
name|'self'
op|'.'
name|'__pending'
op|'='
name|'gtk'
op|'.'
name|'events_pending'
newline|'\n'
name|'self'
op|'.'
name|'__iteration'
op|'='
name|'gtk'
op|'.'
name|'main_iteration'
newline|'\n'
name|'self'
op|'.'
name|'__crash'
op|'='
name|'_our_mainquit'
newline|'\n'
name|'self'
op|'.'
name|'__run'
op|'='
name|'gtk'
op|'.'
name|'main'
newline|'\n'
nl|'\n'
comment|'# The input_add function in pygtk1 checks for objects with a'
nl|'\n'
comment|"# 'fileno' method and, if present, uses the result of that method"
nl|'\n'
comment|'# as the input source. The pygtk2 input_add does not do this. The'
nl|'\n'
comment|'# function below replicates the pygtk1 functionality.'
nl|'\n'
nl|'\n'
comment|'# In addition, pygtk maps gtk.input_add to _gobject.io_add_watch, and'
nl|'\n'
comment|'# g_io_add_watch() takes different condition bitfields than'
nl|'\n'
comment|'# gtk_input_add(). We use g_io_add_watch() here in case pygtk fixes this'
nl|'\n'
comment|'# bug.'
nl|'\n'
DECL|member|input_add
dedent|''
dedent|''
name|'def'
name|'input_add'
op|'('
name|'self'
op|','
name|'source'
op|','
name|'condition'
op|','
name|'callback'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'hasattr'
op|'('
name|'source'
op|','
string|"'fileno'"
op|')'
op|':'
newline|'\n'
comment|'# handle python objects'
nl|'\n'
DECL|function|wrapper
indent|'            '
name|'def'
name|'wrapper'
op|'('
name|'source'
op|','
name|'condition'
op|','
name|'real_s'
op|'='
name|'source'
op|','
name|'real_cb'
op|'='
name|'callback'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'real_cb'
op|'('
name|'real_s'
op|','
name|'condition'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'gobject'
op|'.'
name|'io_add_watch'
op|'('
name|'source'
op|'.'
name|'fileno'
op|'('
op|')'
op|','
name|'condition'
op|','
name|'wrapper'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'gobject'
op|'.'
name|'io_add_watch'
op|'('
name|'source'
op|','
name|'condition'
op|','
name|'callback'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_add
dedent|''
dedent|''
name|'def'
name|'_add'
op|'('
name|'self'
op|','
name|'source'
op|','
name|'primary'
op|','
name|'other'
op|','
name|'primaryFlag'
op|','
name|'otherFlag'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Add the given L{FileDescriptor} for monitoring either for reading or\n        writing. If the file is already monitored for the other operation, we\n        delete the previous registration and re-register it for both reading\n        and writing.\n        """'
newline|'\n'
name|'if'
name|'source'
name|'in'
name|'primary'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'flags'
op|'='
name|'primaryFlag'
newline|'\n'
name|'if'
name|'source'
name|'in'
name|'other'
op|':'
newline|'\n'
indent|'            '
name|'gobject'
op|'.'
name|'source_remove'
op|'('
name|'self'
op|'.'
name|'_sources'
op|'['
name|'source'
op|']'
op|')'
newline|'\n'
name|'flags'
op|'|='
name|'otherFlag'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_sources'
op|'['
name|'source'
op|']'
op|'='
name|'self'
op|'.'
name|'input_add'
op|'('
name|'source'
op|','
name|'flags'
op|','
name|'self'
op|'.'
name|'callback'
op|')'
newline|'\n'
name|'primary'
op|'.'
name|'add'
op|'('
name|'source'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|addReader
dedent|''
name|'def'
name|'addReader'
op|'('
name|'self'
op|','
name|'reader'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Add a L{FileDescriptor} for monitoring of data available to read.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_add'
op|'('
name|'reader'
op|','
name|'self'
op|'.'
name|'_reads'
op|','
name|'self'
op|'.'
name|'_writes'
op|','
name|'INFLAGS'
op|','
name|'OUTFLAGS'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|addWriter
dedent|''
name|'def'
name|'addWriter'
op|'('
name|'self'
op|','
name|'writer'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Add a L{FileDescriptor} for monitoring ability to write data.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_add'
op|'('
name|'writer'
op|','
name|'self'
op|'.'
name|'_writes'
op|','
name|'self'
op|'.'
name|'_reads'
op|','
name|'OUTFLAGS'
op|','
name|'INFLAGS'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getReaders
dedent|''
name|'def'
name|'getReaders'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Retrieve the list of current L{FileDescriptor} monitored for reading.\n        """'
newline|'\n'
name|'return'
name|'list'
op|'('
name|'self'
op|'.'
name|'_reads'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getWriters
dedent|''
name|'def'
name|'getWriters'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Retrieve the list of current L{FileDescriptor} monitored for writing.\n        """'
newline|'\n'
name|'return'
name|'list'
op|'('
name|'self'
op|'.'
name|'_writes'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|removeAll
dedent|''
name|'def'
name|'removeAll'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Remove monitoring for all registered L{FileDescriptor}s.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_removeAll'
op|'('
name|'self'
op|'.'
name|'_reads'
op|','
name|'self'
op|'.'
name|'_writes'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_remove
dedent|''
name|'def'
name|'_remove'
op|'('
name|'self'
op|','
name|'source'
op|','
name|'primary'
op|','
name|'other'
op|','
name|'flags'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Remove monitoring the given L{FileDescriptor} for either reading or\n        writing. If it\'s still monitored for the other operation, we\n        re-register the L{FileDescriptor} for only that operation.\n        """'
newline|'\n'
name|'if'
name|'source'
name|'not'
name|'in'
name|'primary'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'gobject'
op|'.'
name|'source_remove'
op|'('
name|'self'
op|'.'
name|'_sources'
op|'['
name|'source'
op|']'
op|')'
newline|'\n'
name|'primary'
op|'.'
name|'remove'
op|'('
name|'source'
op|')'
newline|'\n'
name|'if'
name|'source'
name|'in'
name|'other'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_sources'
op|'['
name|'source'
op|']'
op|'='
name|'self'
op|'.'
name|'input_add'
op|'('
nl|'\n'
name|'source'
op|','
name|'flags'
op|','
name|'self'
op|'.'
name|'callback'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_sources'
op|'.'
name|'pop'
op|'('
name|'source'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|removeReader
dedent|''
dedent|''
name|'def'
name|'removeReader'
op|'('
name|'self'
op|','
name|'reader'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Stop monitoring the given L{FileDescriptor} for reading.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_remove'
op|'('
name|'reader'
op|','
name|'self'
op|'.'
name|'_reads'
op|','
name|'self'
op|'.'
name|'_writes'
op|','
name|'OUTFLAGS'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|removeWriter
dedent|''
name|'def'
name|'removeWriter'
op|'('
name|'self'
op|','
name|'writer'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Stop monitoring the given L{FileDescriptor} for writing.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_remove'
op|'('
name|'writer'
op|','
name|'self'
op|'.'
name|'_writes'
op|','
name|'self'
op|'.'
name|'_reads'
op|','
name|'INFLAGS'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|doIterationTimer
dedent|''
name|'doIterationTimer'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|doIterationTimeout
name|'def'
name|'doIterationTimeout'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'doIterationTimer'
op|'='
name|'None'
newline|'\n'
name|'return'
number|'0'
comment|'# auto-remove'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|doIteration
dedent|''
name|'def'
name|'doIteration'
op|'('
name|'self'
op|','
name|'delay'
op|')'
op|':'
newline|'\n'
comment|'# flush some pending events, return if there was something to do'
nl|'\n'
comment|'# don\'t use the usual "while self.context.pending(): self.context.iteration()"'
nl|'\n'
comment|"# idiom because lots of IO (in particular test_tcp's"
nl|'\n'
comment|'# ProperlyCloseFilesTestCase) can keep us from ever exiting.'
nl|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
name|'channel'
op|'='
string|"'system'"
op|','
name|'event'
op|'='
string|"'iteration'"
op|','
name|'reactor'
op|'='
name|'self'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'__pending'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'__iteration'
op|'('
number|'0'
op|')'
newline|'\n'
name|'return'
newline|'\n'
comment|'# nothing to do, must delay'
nl|'\n'
dedent|''
name|'if'
name|'delay'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'return'
comment|"# shouldn't delay, so just return"
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'doIterationTimer'
op|'='
name|'gobject'
op|'.'
name|'timeout_add'
op|'('
name|'int'
op|'('
name|'delay'
op|'*'
number|'1000'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'doIterationTimeout'
op|')'
newline|'\n'
comment|'# This will either wake up from IO or from a timeout.'
nl|'\n'
name|'self'
op|'.'
name|'__iteration'
op|'('
number|'1'
op|')'
comment|'# block'
newline|'\n'
comment|'# note: with the .simulate timer below, delays > 0.1 will always be'
nl|'\n'
comment|'# woken up by the .simulate timer'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'doIterationTimer'
op|':'
newline|'\n'
comment|'# if woken by IO, need to cancel the timer'
nl|'\n'
indent|'            '
name|'gobject'
op|'.'
name|'source_remove'
op|'('
name|'self'
op|'.'
name|'doIterationTimer'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'doIterationTimer'
op|'='
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|crash
dedent|''
dedent|''
name|'def'
name|'crash'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'posixbase'
op|'.'
name|'PosixReactorBase'
op|'.'
name|'crash'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'__crash'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|run
dedent|''
name|'def'
name|'run'
op|'('
name|'self'
op|','
name|'installSignalHandlers'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'startRunning'
op|'('
name|'installSignalHandlers'
op|'='
name|'installSignalHandlers'
op|')'
newline|'\n'
name|'gobject'
op|'.'
name|'timeout_add'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'simulate'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_started'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'__run'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_doReadOrWrite
dedent|''
dedent|''
name|'def'
name|'_doReadOrWrite'
op|'('
name|'self'
op|','
name|'source'
op|','
name|'condition'
op|','
name|'faildict'
op|'='
op|'{'
nl|'\n'
name|'error'
op|'.'
name|'ConnectionDone'
op|':'
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'error'
op|'.'
name|'ConnectionDone'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'error'
op|'.'
name|'ConnectionLost'
op|':'
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'error'
op|'.'
name|'ConnectionLost'
op|'('
op|')'
op|')'
op|','
nl|'\n'
op|'}'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'why'
op|'='
name|'None'
newline|'\n'
name|'didRead'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'condition'
op|'&'
name|'POLL_DISCONNECTED'
name|'and'
name|'not'
op|'('
name|'condition'
op|'&'
name|'gobject'
op|'.'
name|'IO_IN'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'why'
op|'='
name|'main'
op|'.'
name|'CONNECTION_LOST'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'condition'
op|'&'
name|'gobject'
op|'.'
name|'IO_IN'
op|':'
newline|'\n'
indent|'                    '
name|'why'
op|'='
name|'source'
op|'.'
name|'doRead'
op|'('
op|')'
newline|'\n'
name|'didRead'
op|'='
name|'source'
op|'.'
name|'doRead'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'why'
name|'and'
name|'condition'
op|'&'
name|'gobject'
op|'.'
name|'IO_OUT'
op|':'
newline|'\n'
comment|"# if doRead caused connectionLost, don't call doWrite"
nl|'\n'
comment|"# if doRead is doWrite, don't call it again."
nl|'\n'
indent|'                    '
name|'if'
name|'not'
name|'source'
op|'.'
name|'disconnected'
name|'and'
name|'source'
op|'.'
name|'doWrite'
op|'!='
name|'didRead'
op|':'
newline|'\n'
indent|'                        '
name|'why'
op|'='
name|'source'
op|'.'
name|'doWrite'
op|'('
op|')'
newline|'\n'
name|'didRead'
op|'='
name|'source'
op|'.'
name|'doWrite'
comment|'# if failed it was in write'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                '
name|'why'
op|'='
name|'sys'
op|'.'
name|'exc_info'
op|'('
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|"'Error In %s'"
op|'%'
name|'source'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'deferr'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'why'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_disconnectSelectable'
op|'('
name|'source'
op|','
name|'why'
op|','
name|'didRead'
op|'=='
name|'source'
op|'.'
name|'doRead'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|callback
dedent|''
dedent|''
name|'def'
name|'callback'
op|'('
name|'self'
op|','
name|'source'
op|','
name|'condition'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'callWithLogger'
op|'('
name|'source'
op|','
name|'self'
op|'.'
name|'_doReadOrWrite'
op|','
name|'source'
op|','
name|'condition'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'simulate'
op|'('
op|')'
comment|'# fire Twisted timers'
newline|'\n'
name|'return'
number|'1'
comment|"# 1=don't auto-remove the source"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|simulate
dedent|''
name|'def'
name|'simulate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Run simulation loops and reschedule callbacks.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_simtag'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'gobject'
op|'.'
name|'source_remove'
op|'('
name|'self'
op|'.'
name|'_simtag'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'runUntilCurrent'
op|'('
op|')'
newline|'\n'
name|'timeout'
op|'='
name|'min'
op|'('
name|'self'
op|'.'
name|'timeout'
op|'('
op|')'
op|','
number|'0.1'
op|')'
newline|'\n'
name|'if'
name|'timeout'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'timeout'
op|'='
number|'0.1'
newline|'\n'
comment|'# grumble'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_simtag'
op|'='
name|'gobject'
op|'.'
name|'timeout_add'
op|'('
name|'int'
op|'('
name|'timeout'
op|'*'
number|'1010'
op|')'
op|','
name|'self'
op|'.'
name|'simulate'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|PortableGtkReactor
dedent|''
dedent|''
name|'class'
name|'PortableGtkReactor'
op|'('
name|'selectreactor'
op|'.'
name|'SelectReactor'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Reactor that works on Windows.\n\n    Sockets aren\'t supported by GTK+\'s input_add on Win32.\n    """'
newline|'\n'
DECL|variable|_simtag
name|'_simtag'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|crash
name|'def'
name|'crash'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'selectreactor'
op|'.'
name|'SelectReactor'
op|'.'
name|'crash'
op|'('
name|'self'
op|')'
newline|'\n'
name|'import'
name|'gtk'
newline|'\n'
comment|'# mainquit is deprecated in newer versions'
nl|'\n'
name|'if'
name|'gtk'
op|'.'
name|'main_level'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'hasattr'
op|'('
name|'gtk'
op|','
string|"'main_quit'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'gtk'
op|'.'
name|'main_quit'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'gtk'
op|'.'
name|'mainquit'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|run
dedent|''
dedent|''
dedent|''
name|'def'
name|'run'
op|'('
name|'self'
op|','
name|'installSignalHandlers'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'import'
name|'gtk'
newline|'\n'
name|'self'
op|'.'
name|'startRunning'
op|'('
name|'installSignalHandlers'
op|'='
name|'installSignalHandlers'
op|')'
newline|'\n'
name|'gobject'
op|'.'
name|'timeout_add'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'simulate'
op|')'
newline|'\n'
comment|'# mainloop is deprecated in newer versions'
nl|'\n'
name|'if'
name|'hasattr'
op|'('
name|'gtk'
op|','
string|"'main'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'gtk'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'gtk'
op|'.'
name|'mainloop'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|simulate
dedent|''
dedent|''
name|'def'
name|'simulate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Run simulation loops and reschedule callbacks.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_simtag'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'gobject'
op|'.'
name|'source_remove'
op|'('
name|'self'
op|'.'
name|'_simtag'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'iterate'
op|'('
op|')'
newline|'\n'
name|'timeout'
op|'='
name|'min'
op|'('
name|'self'
op|'.'
name|'timeout'
op|'('
op|')'
op|','
number|'0.1'
op|')'
newline|'\n'
name|'if'
name|'timeout'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'timeout'
op|'='
number|'0.1'
newline|'\n'
comment|'# grumble'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_simtag'
op|'='
name|'gobject'
op|'.'
name|'timeout_add'
op|'('
name|'int'
op|'('
name|'timeout'
op|'*'
number|'1010'
op|')'
op|','
name|'self'
op|'.'
name|'simulate'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|install
dedent|''
dedent|''
name|'def'
name|'install'
op|'('
name|'useGtk'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Configure the twisted mainloop to be run inside the gtk mainloop.\n\n    @param useGtk: should glib rather than GTK+ event loop be\n        used (this will be slightly faster but does not support GUI).\n    """'
newline|'\n'
name|'reactor'
op|'='
name|'Gtk2Reactor'
op|'('
name|'useGtk'
op|')'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'main'
name|'import'
name|'installReactor'
newline|'\n'
name|'installReactor'
op|'('
name|'reactor'
op|')'
newline|'\n'
name|'return'
name|'reactor'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|portableInstall
dedent|''
name|'def'
name|'portableInstall'
op|'('
name|'useGtk'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Configure the twisted mainloop to be run inside the gtk mainloop.\n    """'
newline|'\n'
name|'reactor'
op|'='
name|'PortableGtkReactor'
op|'('
op|')'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'main'
name|'import'
name|'installReactor'
newline|'\n'
name|'installReactor'
op|'('
name|'reactor'
op|')'
newline|'\n'
name|'return'
name|'reactor'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'if'
name|'runtime'
op|'.'
name|'platform'
op|'.'
name|'getType'
op|'('
op|')'
op|'!='
string|"'posix'"
op|':'
newline|'\n'
DECL|variable|install
indent|'    '
name|'install'
op|'='
name|'portableInstall'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|variable|__all__
dedent|''
name|'__all__'
op|'='
op|'['
string|"'install'"
op|']'
newline|'\n'
endmarker|''
end_unit
