begin_unit
comment|'# Copyright (c) 2001-2007 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""\nA win32event based implementation of the Twisted main loop.\n\nThis requires win32all or ActivePython to be installed.\n\nMaintainer: Itamar Shtull-Trauring\n\n\nLIMITATIONS:\n 1. WaitForMultipleObjects and thus the event loop can only handle 64 objects.\n 2. Process running has some problems (see Process docstring).\n\n\nTODO:\n 1. Event loop handling of writes is *very* problematic (this is causing failed tests).\n    Switch to doing it the correct way, whatever that means (see below).\n 2. Replace icky socket loopback waker with event based waker (use dummyEvent object)\n 3. Switch everyone to using Free Software so we don\'t have to deal with proprietary APIs.\n\n\nALTERNATIVE SOLUTIONS:\n - IIRC, sockets can only be registered once. So we switch to a structure\n   like the poll() reactor, thus allowing us to deal with write events in\n   a decent fashion. This should allow us to pass tests, but we\'re still\n   limited to 64 events.\n\nOr:\n\n - Instead of doing a reactor, we make this an addon to the select reactor.\n   The WFMO event loop runs in a separate thread. This means no need to maintain\n   separate code for networking, 64 event limit doesn\'t apply to sockets,\n   we can run processes and other win32 stuff in default event loop. The\n   only problem is that we\'re stuck with the icky socket based waker.\n   Another benefit is that this could be extended to support >64 events\n   in a simpler manner than the previous solution.\n\nThe 2nd solution is probably what will get implemented.\n"""'
newline|'\n'
nl|'\n'
comment|'# System imports'
nl|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
nl|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
newline|'\n'
nl|'\n'
comment|'# Win32 imports'
nl|'\n'
name|'from'
name|'win32file'
name|'import'
name|'WSAEventSelect'
op|','
name|'FD_READ'
op|','
name|'FD_CLOSE'
op|','
name|'FD_ACCEPT'
op|','
name|'FD_CONNECT'
newline|'\n'
name|'from'
name|'win32event'
name|'import'
name|'CreateEvent'
op|','
name|'MsgWaitForMultipleObjects'
newline|'\n'
name|'from'
name|'win32event'
name|'import'
name|'WAIT_OBJECT_0'
op|','
name|'WAIT_TIMEOUT'
op|','
name|'QS_ALLINPUT'
op|','
name|'QS_ALLEVENTS'
newline|'\n'
nl|'\n'
name|'import'
name|'win32gui'
newline|'\n'
nl|'\n'
comment|'# Twisted imports'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'posixbase'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
op|','
name|'threadable'
op|','
name|'failure'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'interfaces'
name|'import'
name|'IReactorFDSet'
op|','
name|'IReactorProcess'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'_dumbwin32proc'
name|'import'
name|'Process'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Win32Reactor
name|'class'
name|'Win32Reactor'
op|'('
name|'posixbase'
op|'.'
name|'PosixReactorBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Reactor that uses Win32 event APIs.\n\n    @ivar _reads: A dictionary mapping L{FileDescriptor} instances to a\n        win32 event object used to check for read events for that descriptor.\n\n    @ivar _writes: A dictionary mapping L{FileDescriptor} instances to a\n        arbitrary value.  Keys in this dictionary will be given a chance to\n        write out their data.\n\n    @ivar _events: A dictionary mapping win32 event object to tuples of\n        L{FileDescriptor} instances and event masks.\n    """'
newline|'\n'
name|'implements'
op|'('
name|'IReactorFDSet'
op|','
name|'IReactorProcess'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|dummyEvent
name|'dummyEvent'
op|'='
name|'CreateEvent'
op|'('
name|'None'
op|','
number|'0'
op|','
number|'0'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_reads'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_writes'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'_events'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'posixbase'
op|'.'
name|'PosixReactorBase'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_makeSocketEvent
dedent|''
name|'def'
name|'_makeSocketEvent'
op|'('
name|'self'
op|','
name|'fd'
op|','
name|'action'
op|','
name|'why'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Make a win32 event object for a socket.\n        """'
newline|'\n'
name|'event'
op|'='
name|'CreateEvent'
op|'('
name|'None'
op|','
number|'0'
op|','
number|'0'
op|','
name|'None'
op|')'
newline|'\n'
name|'WSAEventSelect'
op|'('
name|'fd'
op|','
name|'event'
op|','
name|'why'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_events'
op|'['
name|'event'
op|']'
op|'='
op|'('
name|'fd'
op|','
name|'action'
op|')'
newline|'\n'
name|'return'
name|'event'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|addEvent
dedent|''
name|'def'
name|'addEvent'
op|'('
name|'self'
op|','
name|'event'
op|','
name|'fd'
op|','
name|'action'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Add a new win32 event to the event loop.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_events'
op|'['
name|'event'
op|']'
op|'='
op|'('
name|'fd'
op|','
name|'action'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|removeEvent
dedent|''
name|'def'
name|'removeEvent'
op|'('
name|'self'
op|','
name|'event'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Remove an event.\n        """'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'_events'
op|'['
name|'event'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|addReader
dedent|''
name|'def'
name|'addReader'
op|'('
name|'self'
op|','
name|'reader'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Add a socket FileDescriptor for notification of data available to read.\n        """'
newline|'\n'
name|'if'
name|'reader'
name|'not'
name|'in'
name|'self'
op|'.'
name|'_reads'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_reads'
op|'['
name|'reader'
op|']'
op|'='
name|'self'
op|'.'
name|'_makeSocketEvent'
op|'('
nl|'\n'
name|'reader'
op|','
string|"'doRead'"
op|','
name|'FD_READ'
op|'|'
name|'FD_ACCEPT'
op|'|'
name|'FD_CONNECT'
op|'|'
name|'FD_CLOSE'
op|')'
newline|'\n'
nl|'\n'
DECL|member|addWriter
dedent|''
dedent|''
name|'def'
name|'addWriter'
op|'('
name|'self'
op|','
name|'writer'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Add a socket FileDescriptor for notification of data available to write.\n        """'
newline|'\n'
name|'if'
name|'writer'
name|'not'
name|'in'
name|'self'
op|'.'
name|'_writes'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_writes'
op|'['
name|'writer'
op|']'
op|'='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|removeReader
dedent|''
dedent|''
name|'def'
name|'removeReader'
op|'('
name|'self'
op|','
name|'reader'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Remove a Selectable for notification of data available to read.\n        """'
newline|'\n'
name|'if'
name|'reader'
name|'in'
name|'self'
op|'.'
name|'_reads'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'self'
op|'.'
name|'_events'
op|'['
name|'self'
op|'.'
name|'_reads'
op|'['
name|'reader'
op|']'
op|']'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'_reads'
op|'['
name|'reader'
op|']'
newline|'\n'
nl|'\n'
DECL|member|removeWriter
dedent|''
dedent|''
name|'def'
name|'removeWriter'
op|'('
name|'self'
op|','
name|'writer'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Remove a Selectable for notification of data available to write.\n        """'
newline|'\n'
name|'if'
name|'writer'
name|'in'
name|'self'
op|'.'
name|'_writes'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'self'
op|'.'
name|'_writes'
op|'['
name|'writer'
op|']'
newline|'\n'
nl|'\n'
DECL|member|removeAll
dedent|''
dedent|''
name|'def'
name|'removeAll'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Remove all selectables, and return a list of them.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_removeAll'
op|'('
name|'self'
op|'.'
name|'_reads'
op|','
name|'self'
op|'.'
name|'_writes'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getReaders
dedent|''
name|'def'
name|'getReaders'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_reads'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getWriters
dedent|''
name|'def'
name|'getWriters'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_writes'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|doWaitForMultipleEvents
dedent|''
name|'def'
name|'doWaitForMultipleEvents'
op|'('
name|'self'
op|','
name|'timeout'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
name|'channel'
op|'='
string|"'system'"
op|','
name|'event'
op|'='
string|"'iteration'"
op|','
name|'reactor'
op|'='
name|'self'
op|')'
newline|'\n'
name|'if'
name|'timeout'
name|'is'
name|'None'
op|':'
newline|'\n'
comment|'#timeout = INFINITE'
nl|'\n'
indent|'            '
name|'timeout'
op|'='
number|'100'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'timeout'
op|'='
name|'int'
op|'('
name|'timeout'
op|'*'
number|'1000'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
op|'('
name|'self'
op|'.'
name|'_events'
name|'or'
name|'self'
op|'.'
name|'_writes'
op|')'
op|':'
newline|'\n'
comment|"# sleep so we don't suck up CPU time"
nl|'\n'
indent|'            '
name|'time'
op|'.'
name|'sleep'
op|'('
name|'timeout'
op|'/'
number|'1000.0'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'canDoMoreWrites'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'fd'
name|'in'
name|'self'
op|'.'
name|'_writes'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'log'
op|'.'
name|'callWithLogger'
op|'('
name|'fd'
op|','
name|'self'
op|'.'
name|'_runWrite'
op|','
name|'fd'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'canDoMoreWrites'
op|'='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'canDoMoreWrites'
op|':'
newline|'\n'
indent|'            '
name|'timeout'
op|'='
number|'0'
newline|'\n'
nl|'\n'
dedent|''
name|'handles'
op|'='
name|'self'
op|'.'
name|'_events'
op|'.'
name|'keys'
op|'('
op|')'
name|'or'
op|'['
name|'self'
op|'.'
name|'dummyEvent'
op|']'
newline|'\n'
name|'val'
op|'='
name|'MsgWaitForMultipleObjects'
op|'('
name|'handles'
op|','
number|'0'
op|','
name|'timeout'
op|','
name|'QS_ALLINPUT'
op|'|'
name|'QS_ALLEVENTS'
op|')'
newline|'\n'
name|'if'
name|'val'
op|'=='
name|'WAIT_TIMEOUT'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'elif'
name|'val'
op|'=='
name|'WAIT_OBJECT_0'
op|'+'
name|'len'
op|'('
name|'handles'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'exit'
op|'='
name|'win32gui'
op|'.'
name|'PumpWaitingMessages'
op|'('
op|')'
newline|'\n'
name|'if'
name|'exit'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'callLater'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'stop'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'val'
op|'>='
name|'WAIT_OBJECT_0'
name|'and'
name|'val'
op|'<'
name|'WAIT_OBJECT_0'
op|'+'
name|'len'
op|'('
name|'handles'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fd'
op|','
name|'action'
op|'='
name|'self'
op|'.'
name|'_events'
op|'['
name|'handles'
op|'['
name|'val'
op|'-'
name|'WAIT_OBJECT_0'
op|']'
op|']'
newline|'\n'
name|'log'
op|'.'
name|'callWithLogger'
op|'('
name|'fd'
op|','
name|'self'
op|'.'
name|'_runAction'
op|','
name|'action'
op|','
name|'fd'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_runWrite
dedent|''
dedent|''
name|'def'
name|'_runWrite'
op|'('
name|'self'
op|','
name|'fd'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'closed'
op|'='
number|'0'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'closed'
op|'='
name|'fd'
op|'.'
name|'doWrite'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'closed'
op|'='
name|'sys'
op|'.'
name|'exc_info'
op|'('
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'log'
op|'.'
name|'deferr'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'closed'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'removeReader'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'removeWriter'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'fd'
op|'.'
name|'connectionLost'
op|'('
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'closed'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'deferr'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'closed'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'1'
newline|'\n'
nl|'\n'
DECL|member|_runAction
dedent|''
dedent|''
name|'def'
name|'_runAction'
op|'('
name|'self'
op|','
name|'action'
op|','
name|'fd'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'closed'
op|'='
name|'getattr'
op|'('
name|'fd'
op|','
name|'action'
op|')'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'closed'
op|'='
name|'sys'
op|'.'
name|'exc_info'
op|'('
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'log'
op|'.'
name|'deferr'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'closed'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_disconnectSelectable'
op|'('
name|'fd'
op|','
name|'closed'
op|','
name|'action'
op|'=='
string|"'doRead'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|doIteration
dedent|''
dedent|''
name|'doIteration'
op|'='
name|'doWaitForMultipleEvents'
newline|'\n'
nl|'\n'
DECL|member|spawnProcess
name|'def'
name|'spawnProcess'
op|'('
name|'self'
op|','
name|'processProtocol'
op|','
name|'executable'
op|','
name|'args'
op|'='
op|'('
op|')'
op|','
name|'env'
op|'='
op|'{'
op|'}'
op|','
name|'path'
op|'='
name|'None'
op|','
name|'uid'
op|'='
name|'None'
op|','
name|'gid'
op|'='
name|'None'
op|','
name|'usePTY'
op|'='
number|'0'
op|','
name|'childFDs'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Spawn a process."""'
newline|'\n'
name|'if'
name|'uid'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|'('
string|'"Setting UID is unsupported on this platform."'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'gid'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|'('
string|'"Setting GID is unsupported on this platform."'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'usePTY'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|'('
string|'"PTYs are unsupported on this platform."'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'childFDs'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|'('
nl|'\n'
string|'"Custom child file descriptor mappings are unsupported on "'
nl|'\n'
string|'"this platform."'
op|')'
newline|'\n'
dedent|''
name|'args'
op|','
name|'env'
op|'='
name|'self'
op|'.'
name|'_checkProcessArgs'
op|'('
name|'args'
op|','
name|'env'
op|')'
newline|'\n'
name|'return'
name|'Process'
op|'('
name|'self'
op|','
name|'processProtocol'
op|','
name|'executable'
op|','
name|'args'
op|','
name|'env'
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|install
dedent|''
dedent|''
name|'def'
name|'install'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'threadable'
op|'.'
name|'init'
op|'('
number|'1'
op|')'
newline|'\n'
name|'r'
op|'='
name|'Win32Reactor'
op|'('
op|')'
newline|'\n'
name|'import'
name|'main'
newline|'\n'
name|'main'
op|'.'
name|'installReactor'
op|'('
name|'r'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|__all__
dedent|''
name|'__all__'
op|'='
op|'['
string|'"Win32Reactor"'
op|','
string|'"install"'
op|']'
newline|'\n'
endmarker|''
end_unit
