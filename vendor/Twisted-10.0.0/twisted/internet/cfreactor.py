begin_unit
comment|'# Copyright (c) 2001-2004 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""\nThis module provides support for Twisted to interact with CoreFoundation\nCFRunLoops.  This includes Cocoa\'s NSRunLoop.\n\nIn order to use this support, simply do the following::\n\n    |  from twisted.internet import cfreactor\n    |  cfreactor.install()\n\nThen use the twisted.internet APIs as usual.  The other methods here are not\nintended to be called directly under normal use.  However, install can take\na runLoop kwarg, and run will take a withRunLoop arg if you need to explicitly\npass a CFRunLoop for some reason.  Otherwise it will make a pretty good guess\nas to which runLoop you want (the current NSRunLoop if PyObjC is imported,\notherwise the current CFRunLoop.  Either way, if one doesn\'t exist, it will\nbe created).\n\nMaintainer: Bob Ippolito\n"""'
newline|'\n'
nl|'\n'
DECL|variable|__all__
name|'__all__'
op|'='
op|'['
string|"'install'"
op|']'
newline|'\n'
nl|'\n'
name|'import'
name|'sys'
newline|'\n'
nl|'\n'
comment|'# hints for py2app'
nl|'\n'
name|'import'
name|'Carbon'
op|'.'
name|'CF'
newline|'\n'
name|'import'
name|'traceback'
newline|'\n'
nl|'\n'
name|'import'
name|'cfsupport'
name|'as'
name|'cf'
newline|'\n'
nl|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
op|','
name|'threadable'
op|','
name|'failure'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'interfaces'
name|'import'
name|'IReactorFDSet'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'posixbase'
op|','
name|'error'
newline|'\n'
name|'from'
name|'weakref'
name|'import'
name|'WeakKeyDictionary'
newline|'\n'
name|'from'
name|'Foundation'
name|'import'
name|'NSRunLoop'
newline|'\n'
name|'from'
name|'AppKit'
name|'import'
name|'NSApp'
newline|'\n'
nl|'\n'
comment|'# cache two extremely common "failures" without traceback info'
nl|'\n'
DECL|variable|_faildict
name|'_faildict'
op|'='
op|'{'
nl|'\n'
name|'error'
op|'.'
name|'ConnectionDone'
op|':'
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'error'
op|'.'
name|'ConnectionDone'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'error'
op|'.'
name|'ConnectionLost'
op|':'
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'error'
op|'.'
name|'ConnectionLost'
op|'('
op|')'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|class|SelectableSocketWrapper
name|'class'
name|'SelectableSocketWrapper'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|variable|_objCache
indent|'    '
name|'_objCache'
op|'='
name|'WeakKeyDictionary'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|variable|cf
name|'cf'
op|'='
name|'None'
newline|'\n'
DECL|member|socketWrapperForReactorAndObject
name|'def'
name|'socketWrapperForReactorAndObject'
op|'('
name|'klass'
op|','
name|'reactor'
op|','
name|'obj'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_objCache'
op|'='
name|'klass'
op|'.'
name|'_objCache'
newline|'\n'
name|'if'
name|'obj'
name|'in'
name|'_objCache'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'_objCache'
op|'['
name|'obj'
op|']'
newline|'\n'
dedent|''
name|'v'
op|'='
name|'_objCache'
op|'['
name|'obj'
op|']'
op|'='
name|'klass'
op|'('
name|'reactor'
op|','
name|'obj'
op|')'
newline|'\n'
name|'return'
name|'v'
newline|'\n'
DECL|variable|socketWrapperForReactorAndObject
dedent|''
name|'socketWrapperForReactorAndObject'
op|'='
name|'classmethod'
op|'('
name|'socketWrapperForReactorAndObject'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'reactor'
op|','
name|'obj'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'cf'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|','
string|'"This socket wrapper is already initialized"'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'reactor'
op|'='
name|'reactor'
newline|'\n'
name|'self'
op|'.'
name|'obj'
op|'='
name|'obj'
newline|'\n'
name|'obj'
op|'.'
name|'_orig_ssw_connectionLost'
op|'='
name|'obj'
op|'.'
name|'connectionLost'
newline|'\n'
name|'obj'
op|'.'
name|'connectionLost'
op|'='
name|'self'
op|'.'
name|'objConnectionLost'
newline|'\n'
name|'self'
op|'.'
name|'fd'
op|'='
name|'obj'
op|'.'
name|'fileno'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'writing'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'reading'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'wouldRead'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'wouldWrite'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'cf'
op|'='
name|'cf'
op|'.'
name|'PyCFSocket'
op|'('
name|'obj'
op|'.'
name|'fileno'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'doRead'
op|','
name|'self'
op|'.'
name|'doWrite'
op|','
name|'self'
op|'.'
name|'doConnect'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cf'
op|'.'
name|'stopWriting'
op|'('
op|')'
newline|'\n'
name|'reactor'
op|'.'
name|'getRunLoop'
op|'('
op|')'
op|'.'
name|'addSocket'
op|'('
name|'self'
op|'.'
name|'cf'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'SSW(fd=%r r=%r w=%r x=%08x o=%08x)'"
op|'%'
op|'('
name|'self'
op|'.'
name|'fd'
op|','
name|'int'
op|'('
name|'self'
op|'.'
name|'reading'
op|')'
op|','
name|'int'
op|'('
name|'self'
op|'.'
name|'writing'
op|')'
op|','
name|'id'
op|'('
name|'self'
op|')'
op|','
name|'id'
op|'('
name|'self'
op|'.'
name|'obj'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|objConnectionLost
dedent|''
name|'def'
name|'objConnectionLost'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'obj'
op|'='
name|'self'
op|'.'
name|'obj'
newline|'\n'
name|'self'
op|'.'
name|'reactor'
op|'.'
name|'removeReader'
op|'('
name|'obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'reactor'
op|'.'
name|'removeWriter'
op|'('
name|'obj'
op|')'
newline|'\n'
name|'obj'
op|'.'
name|'connectionLost'
op|'='
name|'obj'
op|'.'
name|'_orig_ssw_connectionLost'
newline|'\n'
name|'obj'
op|'.'
name|'connectionLost'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'self'
op|'.'
name|'_objCache'
op|'['
name|'obj'
op|']'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'obj'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'cf'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|doConnect
dedent|''
name|'def'
name|'doConnect'
op|'('
name|'self'
op|','
name|'why'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|startReading
dedent|''
name|'def'
name|'startReading'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'cf'
op|'.'
name|'startReading'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'reading'
op|'='
name|'True'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'wouldRead'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'self'
op|'.'
name|'reactor'
op|'.'
name|'running'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'reactor'
op|'.'
name|'callLater'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'doRead'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'doRead'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'wouldRead'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|stopReading
dedent|''
name|'def'
name|'stopReading'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'cf'
op|'.'
name|'stopReading'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'reading'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'wouldRead'
op|'='
name|'False'
newline|'\n'
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|startWriting
dedent|''
name|'def'
name|'startWriting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'cf'
op|'.'
name|'startWriting'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'writing'
op|'='
name|'True'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'wouldWrite'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'self'
op|'.'
name|'reactor'
op|'.'
name|'running'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'reactor'
op|'.'
name|'callLater'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'doWrite'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'doWrite'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'wouldWrite'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|stopWriting
dedent|''
name|'def'
name|'stopWriting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'cf'
op|'.'
name|'stopWriting'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'writing'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'wouldWrite'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|_finishReadOrWrite
dedent|''
name|'def'
name|'_finishReadOrWrite'
op|'('
name|'self'
op|','
name|'fn'
op|','
name|'faildict'
op|'='
name|'_faildict'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'why'
op|'='
name|'fn'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'why'
op|'='
name|'sys'
op|'.'
name|'exc_info'
op|'('
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'log'
op|'.'
name|'err'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'why'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'f'
op|'='
name|'faildict'
op|'.'
name|'get'
op|'('
name|'why'
op|'.'
name|'__class__'
op|')'
name|'or'
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'why'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'objConnectionLost'
op|'('
name|'f'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'err'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'self'
op|'.'
name|'reactor'
op|'.'
name|'running'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'reactor'
op|'.'
name|'simulate'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|doRead
dedent|''
dedent|''
name|'def'
name|'doRead'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'obj'
op|'='
name|'self'
op|'.'
name|'obj'
newline|'\n'
name|'if'
name|'not'
name|'obj'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'reading'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'wouldRead'
op|'='
name|'True'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'reactor'
op|'.'
name|'running'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'reactor'
op|'.'
name|'simulate'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_finishReadOrWrite'
op|'('
name|'obj'
op|'.'
name|'doRead'
op|')'
newline|'\n'
nl|'\n'
DECL|member|doWrite
dedent|''
name|'def'
name|'doWrite'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'obj'
op|'='
name|'self'
op|'.'
name|'obj'
newline|'\n'
name|'if'
name|'not'
name|'obj'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'writing'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'wouldWrite'
op|'='
name|'True'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'reactor'
op|'.'
name|'running'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'reactor'
op|'.'
name|'simulate'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_finishReadOrWrite'
op|'('
name|'obj'
op|'.'
name|'doWrite'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__hash__
dedent|''
name|'def'
name|'__hash__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'hash'
op|'('
name|'self'
op|'.'
name|'fd'
op|')'
newline|'\n'
nl|'\n'
DECL|class|CFReactor
dedent|''
dedent|''
name|'class'
name|'CFReactor'
op|'('
name|'posixbase'
op|'.'
name|'PosixReactorBase'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'implements'
op|'('
name|'IReactorFDSet'
op|')'
newline|'\n'
comment|"# how long to poll if we're don't care about signals"
nl|'\n'
DECL|variable|longIntervalOfTime
name|'longIntervalOfTime'
op|'='
number|'60.0'
newline|'\n'
nl|'\n'
comment|'# how long we should poll if we do care about signals'
nl|'\n'
DECL|variable|shortIntervalOfTime
name|'shortIntervalOfTime'
op|'='
number|'1.0'
newline|'\n'
nl|'\n'
comment|"# don't set this"
nl|'\n'
DECL|variable|pollInterval
name|'pollInterval'
op|'='
name|'longIntervalOfTime'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'runLoop'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'readers'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'writers'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'running'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'crashing'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'_doRunUntilCurrent'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'timer'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'runLoop'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'nsRunLoop'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'didStartRunLoop'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'runLoop'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'getRunLoop'
op|'('
name|'runLoop'
op|')'
newline|'\n'
dedent|''
name|'posixbase'
op|'.'
name|'PosixReactorBase'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getRunLoop
dedent|''
name|'def'
name|'getRunLoop'
op|'('
name|'self'
op|','
name|'runLoop'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'runLoop'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'nsRunLoop'
op|'='
name|'runLoop'
name|'or'
name|'NSRunLoop'
op|'.'
name|'currentRunLoop'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'runLoop'
op|'='
name|'cf'
op|'.'
name|'PyCFRunLoop'
op|'('
name|'self'
op|'.'
name|'nsRunLoop'
op|'.'
name|'getCFRunLoop'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'runLoop'
newline|'\n'
nl|'\n'
DECL|member|addReader
dedent|''
name|'def'
name|'addReader'
op|'('
name|'self'
op|','
name|'reader'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'readers'
op|'['
name|'reader'
op|']'
op|'='
name|'SelectableSocketWrapper'
op|'.'
name|'socketWrapperForReactorAndObject'
op|'('
name|'self'
op|','
name|'reader'
op|')'
op|'.'
name|'startReading'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|addWriter
dedent|''
name|'def'
name|'addWriter'
op|'('
name|'self'
op|','
name|'writer'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'writers'
op|'['
name|'writer'
op|']'
op|'='
name|'SelectableSocketWrapper'
op|'.'
name|'socketWrapperForReactorAndObject'
op|'('
name|'self'
op|','
name|'writer'
op|')'
op|'.'
name|'startWriting'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|removeReader
dedent|''
name|'def'
name|'removeReader'
op|'('
name|'self'
op|','
name|'reader'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'wrapped'
op|'='
name|'self'
op|'.'
name|'readers'
op|'.'
name|'get'
op|'('
name|'reader'
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'wrapped'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'self'
op|'.'
name|'readers'
op|'['
name|'reader'
op|']'
newline|'\n'
name|'wrapped'
op|'.'
name|'stopReading'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|removeWriter
dedent|''
dedent|''
name|'def'
name|'removeWriter'
op|'('
name|'self'
op|','
name|'writer'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'wrapped'
op|'='
name|'self'
op|'.'
name|'writers'
op|'.'
name|'get'
op|'('
name|'writer'
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'wrapped'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'self'
op|'.'
name|'writers'
op|'['
name|'writer'
op|']'
newline|'\n'
name|'wrapped'
op|'.'
name|'stopWriting'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getReaders
dedent|''
dedent|''
name|'def'
name|'getReaders'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'readers'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getWriters
dedent|''
name|'def'
name|'getWriters'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'writers'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|removeAll
dedent|''
name|'def'
name|'removeAll'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'self'
op|'.'
name|'readers'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'for'
name|'s'
name|'in'
name|'self'
op|'.'
name|'readers'
op|'.'
name|'itervalues'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'s'
op|'.'
name|'stopReading'
op|'('
op|')'
newline|'\n'
dedent|''
name|'for'
name|'s'
name|'in'
name|'self'
op|'.'
name|'writers'
op|'.'
name|'itervalues'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'s'
op|'.'
name|'stopWriting'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'readers'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'writers'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
name|'return'
name|'r'
newline|'\n'
nl|'\n'
DECL|member|run
dedent|''
name|'def'
name|'run'
op|'('
name|'self'
op|','
name|'installSignalHandlers'
op|'='
number|'1'
op|','
name|'withRunLoop'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'running'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|','
string|'"Reactor already running"'
newline|'\n'
dedent|''
name|'if'
name|'installSignalHandlers'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'pollInterval'
op|'='
name|'self'
op|'.'
name|'shortIntervalOfTime'
newline|'\n'
dedent|''
name|'runLoop'
op|'='
name|'self'
op|'.'
name|'getRunLoop'
op|'('
name|'withRunLoop'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_startup'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'startRunning'
op|'('
name|'installSignalHandlers'
op|'='
name|'installSignalHandlers'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'running'
op|'='
name|'True'
newline|'\n'
name|'if'
name|'NSApp'
op|'('
op|')'
name|'is'
name|'None'
name|'and'
name|'self'
op|'.'
name|'nsRunLoop'
op|'.'
name|'currentMode'
op|'('
op|')'
name|'is'
name|'None'
op|':'
newline|'\n'
comment|'# Most of the time the NSRunLoop will have already started,'
nl|'\n'
comment|"# but in this case it wasn't."
nl|'\n'
indent|'            '
name|'runLoop'
op|'.'
name|'run'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'crashing'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'didStartRunLoop'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|callLater
dedent|''
dedent|''
name|'def'
name|'callLater'
op|'('
name|'self'
op|','
name|'howlong'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rval'
op|'='
name|'posixbase'
op|'.'
name|'PosixReactorBase'
op|'.'
name|'callLater'
op|'('
name|'self'
op|','
name|'howlong'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'timer'
op|':'
newline|'\n'
indent|'            '
name|'timeout'
op|'='
name|'self'
op|'.'
name|'timeout'
op|'('
op|')'
newline|'\n'
name|'if'
name|'timeout'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'timeout'
op|'='
name|'howlong'
newline|'\n'
dedent|''
name|'sleepUntil'
op|'='
name|'cf'
op|'.'
name|'now'
op|'('
op|')'
op|'+'
name|'min'
op|'('
name|'timeout'
op|','
name|'howlong'
op|')'
newline|'\n'
name|'if'
name|'sleepUntil'
op|'<'
name|'self'
op|'.'
name|'timer'
op|'.'
name|'getNextFireDate'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'timer'
op|'.'
name|'setNextFireDate'
op|'('
name|'sleepUntil'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'return'
name|'rval'
newline|'\n'
nl|'\n'
DECL|member|iterate
dedent|''
name|'def'
name|'iterate'
op|'('
name|'self'
op|','
name|'howlong'
op|'='
number|'0.0'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'running'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|','
string|'"Can\'t iterate a running reactor"'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'runUntilCurrent'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'doIteration'
op|'('
name|'howlong'
op|')'
newline|'\n'
nl|'\n'
DECL|member|doIteration
dedent|''
name|'def'
name|'doIteration'
op|'('
name|'self'
op|','
name|'howlong'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'running'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|','
string|'"Can\'t iterate a running reactor"'
newline|'\n'
dedent|''
name|'howlong'
op|'='
name|'howlong'
name|'or'
number|'0.01'
newline|'\n'
name|'pi'
op|'='
name|'self'
op|'.'
name|'pollInterval'
newline|'\n'
name|'self'
op|'.'
name|'pollInterval'
op|'='
name|'howlong'
newline|'\n'
name|'self'
op|'.'
name|'_doRunUntilCurrent'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'run'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_doRunUntilCurrent'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'pollInterval'
op|'='
name|'pi'
newline|'\n'
nl|'\n'
DECL|member|simulate
dedent|''
name|'def'
name|'simulate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'crashing'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'running'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|','
string|'"You can\'t simulate a stopped reactor"'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'_doRunUntilCurrent'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'runUntilCurrent'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'crashing'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'timer'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'nap'
op|'='
name|'self'
op|'.'
name|'timeout'
op|'('
op|')'
newline|'\n'
name|'if'
name|'nap'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'nap'
op|'='
name|'self'
op|'.'
name|'pollInterval'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'nap'
op|'='
name|'min'
op|'('
name|'self'
op|'.'
name|'pollInterval'
op|','
name|'nap'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'running'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'timer'
op|'.'
name|'setNextFireDate'
op|'('
name|'cf'
op|'.'
name|'now'
op|'('
op|')'
op|'+'
name|'nap'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'_doRunUntilCurrent'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'crash'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_startup
dedent|''
dedent|''
name|'def'
name|'_startup'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'running'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|','
string|'"Can\'t bootstrap a running reactor"'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'timer'
op|'='
name|'cf'
op|'.'
name|'PyCFRunLoopTimer'
op|'('
name|'cf'
op|'.'
name|'now'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'pollInterval'
op|','
name|'self'
op|'.'
name|'simulate'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'runLoop'
op|'.'
name|'addTimer'
op|'('
name|'self'
op|'.'
name|'timer'
op|')'
newline|'\n'
nl|'\n'
DECL|member|cleanup
dedent|''
name|'def'
name|'cleanup'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|sigInt
dedent|''
name|'def'
name|'sigInt'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'callLater'
op|'('
number|'0.0'
op|','
name|'self'
op|'.'
name|'stop'
op|')'
newline|'\n'
nl|'\n'
DECL|member|crash
dedent|''
name|'def'
name|'crash'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'running'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|','
string|'"Can\'t crash a stopped reactor"'
newline|'\n'
dedent|''
name|'posixbase'
op|'.'
name|'PosixReactorBase'
op|'.'
name|'crash'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'crashing'
op|'='
name|'True'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'timer'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'runLoop'
op|'.'
name|'removeTimer'
op|'('
name|'self'
op|'.'
name|'timer'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'timer'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'didStartRunLoop'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'runLoop'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|stop
dedent|''
dedent|''
name|'def'
name|'stop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'running'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|','
string|'"Can\'t stop a stopped reactor"'
newline|'\n'
dedent|''
name|'posixbase'
op|'.'
name|'PosixReactorBase'
op|'.'
name|'stop'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|function|install
dedent|''
dedent|''
name|'def'
name|'install'
op|'('
name|'runLoop'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Configure the twisted mainloop to be run inside CFRunLoop.\n    """'
newline|'\n'
name|'reactor'
op|'='
name|'CFReactor'
op|'('
name|'runLoop'
op|'='
name|'runLoop'
op|')'
newline|'\n'
name|'reactor'
op|'.'
name|'addSystemEventTrigger'
op|'('
string|"'after'"
op|','
string|"'shutdown'"
op|','
name|'reactor'
op|'.'
name|'cleanup'
op|')'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'main'
name|'import'
name|'installReactor'
newline|'\n'
name|'installReactor'
op|'('
name|'reactor'
op|')'
newline|'\n'
name|'return'
name|'reactor'
newline|'\n'
dedent|''
endmarker|''
end_unit
