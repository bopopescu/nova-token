begin_unit
nl|'\n'
comment|'# Copyright (c) 2001-2004 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""L{twisted.manhole} L{PB<twisted.spread.pb>} service implementation.\n"""'
newline|'\n'
nl|'\n'
comment|'# twisted imports'
nl|'\n'
name|'from'
name|'twisted'
name|'import'
name|'copyright'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'spread'
name|'import'
name|'pb'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
op|','
name|'failure'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'cred'
name|'import'
name|'portal'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'application'
name|'import'
name|'service'
newline|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
op|','
name|'Interface'
newline|'\n'
nl|'\n'
comment|'# sibling imports'
nl|'\n'
name|'import'
name|'explorer'
newline|'\n'
nl|'\n'
comment|'# system imports'
nl|'\n'
name|'from'
name|'cStringIO'
name|'import'
name|'StringIO'
newline|'\n'
nl|'\n'
name|'import'
name|'string'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'traceback'
newline|'\n'
name|'import'
name|'types'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeStdIO
name|'class'
name|'FakeStdIO'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'type_'
op|','
name|'list'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'type'
op|'='
name|'type_'
newline|'\n'
name|'self'
op|'.'
name|'list'
op|'='
name|'list'
newline|'\n'
nl|'\n'
DECL|member|write
dedent|''
name|'def'
name|'write'
op|'('
name|'self'
op|','
name|'text'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"%s: %s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'type'
op|','
name|'string'
op|'.'
name|'strip'
op|'('
name|'str'
op|'('
name|'text'
op|')'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'list'
op|'.'
name|'append'
op|'('
op|'('
name|'self'
op|'.'
name|'type'
op|','
name|'text'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|flush
dedent|''
name|'def'
name|'flush'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|consolidate
dedent|''
name|'def'
name|'consolidate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Concatenate adjacent messages of same type into one.\n\n        Greatly cuts down on the number of elements, increasing\n        network transport friendliness considerably.\n        """'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'list'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'inlist'
op|'='
name|'self'
op|'.'
name|'list'
newline|'\n'
name|'outlist'
op|'='
op|'['
op|']'
newline|'\n'
name|'last_type'
op|'='
name|'inlist'
op|'['
number|'0'
op|']'
newline|'\n'
name|'block_begin'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'list'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
op|'('
name|'mtype'
op|','
name|'message'
op|')'
op|'='
name|'inlist'
op|'['
name|'i'
op|']'
newline|'\n'
name|'if'
name|'mtype'
op|'=='
name|'last_type'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'if'
op|'('
name|'i'
op|'-'
name|'block_begin'
op|')'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'                    '
name|'outlist'
op|'.'
name|'append'
op|'('
name|'inlist'
op|'['
name|'block_begin'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'messages'
op|'='
name|'map'
op|'('
name|'lambda'
name|'l'
op|':'
name|'l'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'inlist'
op|'['
name|'block_begin'
op|':'
name|'i'
op|']'
op|')'
newline|'\n'
name|'message'
op|'='
name|'string'
op|'.'
name|'join'
op|'('
name|'messages'
op|','
string|"''"
op|')'
newline|'\n'
name|'outlist'
op|'.'
name|'append'
op|'('
op|'('
name|'last_type'
op|','
name|'message'
op|')'
op|')'
newline|'\n'
dedent|''
name|'last_type'
op|'='
name|'mtype'
newline|'\n'
name|'block_begin'
op|'='
name|'i'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|IManholeClient
dedent|''
dedent|''
dedent|''
dedent|''
name|'class'
name|'IManholeClient'
op|'('
name|'Interface'
op|')'
op|':'
newline|'\n'
DECL|member|console
indent|'    '
name|'def'
name|'console'
op|'('
name|'list_of_messages'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Takes a list of (type, message) pairs to display.\n\n        Types include:\n            - \\"stdout\\" -- string sent to sys.stdout\n\n            - \\"stderr\\" -- string sent to sys.stderr\n\n            - \\"result\\" -- string repr of the resulting value\n                 of the expression\n\n            - \\"exception\\" -- a L{failure.Failure}\n        """'
newline|'\n'
nl|'\n'
DECL|member|receiveExplorer
dedent|''
name|'def'
name|'receiveExplorer'
op|'('
name|'xplorer'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Receives an explorer.Explorer\n        """'
newline|'\n'
nl|'\n'
DECL|member|listCapabilities
dedent|''
name|'def'
name|'listCapabilities'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""List what manholey things I am capable of doing.\n\n        i.e. C{\\"Explorer\\"}, C{\\"Failure\\"}\n        """'
newline|'\n'
nl|'\n'
DECL|function|runInConsole
dedent|''
dedent|''
name|'def'
name|'runInConsole'
op|'('
name|'command'
op|','
name|'console'
op|','
name|'globalNS'
op|'='
name|'None'
op|','
name|'localNS'
op|'='
name|'None'
op|','
nl|'\n'
name|'filename'
op|'='
name|'None'
op|','
name|'args'
op|'='
name|'None'
op|','
name|'kw'
op|'='
name|'None'
op|','
name|'unsafeTracebacks'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Run this, directing all output to the specified console.\n\n    If command is callable, it will be called with the args and keywords\n    provided.  Otherwise, command will be compiled and eval\'d.\n    (Wouldn\'t you like a macro?)\n\n    Returns the command\'s return value.\n\n    The console is called with a list of (type, message) pairs for\n    display, see L{IManholeClient.console}.\n    """'
newline|'\n'
name|'output'
op|'='
op|'['
op|']'
newline|'\n'
name|'fakeout'
op|'='
name|'FakeStdIO'
op|'('
string|'"stdout"'
op|','
name|'output'
op|')'
newline|'\n'
name|'fakeerr'
op|'='
name|'FakeStdIO'
op|'('
string|'"stderr"'
op|','
name|'output'
op|')'
newline|'\n'
name|'errfile'
op|'='
name|'FakeStdIO'
op|'('
string|'"exception"'
op|','
name|'output'
op|')'
newline|'\n'
name|'code'
op|'='
name|'None'
newline|'\n'
name|'val'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'filename'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'filename'
op|'='
name|'str'
op|'('
name|'console'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'args'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'args'
op|'='
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'kw'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'kw'
op|'='
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'if'
name|'localNS'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'localNS'
op|'='
name|'globalNS'
newline|'\n'
dedent|''
name|'if'
op|'('
name|'globalNS'
name|'is'
name|'None'
op|')'
name|'and'
op|'('
name|'not'
name|'callable'
op|'('
name|'command'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
op|'('
string|'"Need a namespace to evaluate the command in."'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'out'
op|'='
name|'sys'
op|'.'
name|'stdout'
newline|'\n'
name|'err'
op|'='
name|'sys'
op|'.'
name|'stderr'
newline|'\n'
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'fakeout'
newline|'\n'
name|'sys'
op|'.'
name|'stderr'
op|'='
name|'fakeerr'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'callable'
op|'('
name|'command'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'val'
op|'='
name|'apply'
op|'('
name|'command'
op|','
name|'args'
op|','
name|'kw'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'code'
op|'='
name|'compile'
op|'('
name|'command'
op|','
name|'filename'
op|','
string|"'eval'"
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                    '
name|'code'
op|'='
name|'compile'
op|'('
name|'command'
op|','
name|'filename'
op|','
string|"'single'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'code'
op|':'
newline|'\n'
indent|'                    '
name|'val'
op|'='
name|'eval'
op|'('
name|'code'
op|','
name|'globalNS'
op|','
name|'localNS'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'out'
newline|'\n'
name|'sys'
op|'.'
name|'stderr'
op|'='
name|'err'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'        '
op|'('
name|'eType'
op|','
name|'eVal'
op|','
name|'tb'
op|')'
op|'='
name|'sys'
op|'.'
name|'exc_info'
op|'('
op|')'
newline|'\n'
name|'fail'
op|'='
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'eVal'
op|','
name|'eType'
op|','
name|'tb'
op|')'
newline|'\n'
name|'del'
name|'tb'
newline|'\n'
comment|'# In CVS reversion 1.35, there was some code here to fill in the'
nl|'\n'
comment|'# source lines in the traceback for frames in the local command'
nl|'\n'
comment|"# buffer.  But I can't figure out when that's triggered, so it's"
nl|'\n'
comment|'# going away in the conversion to Failure, until you bring it back.'
nl|'\n'
name|'errfile'
op|'.'
name|'write'
op|'('
name|'pb'
op|'.'
name|'failure2Copyable'
op|'('
name|'fail'
op|','
name|'unsafeTracebacks'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'console'
op|':'
newline|'\n'
indent|'        '
name|'fakeout'
op|'.'
name|'consolidate'
op|'('
op|')'
newline|'\n'
name|'console'
op|'('
name|'output'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'val'
newline|'\n'
nl|'\n'
DECL|function|_failureOldStyle
dedent|''
name|'def'
name|'_failureOldStyle'
op|'('
name|'fail'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Pre-Failure manhole representation of exceptions.\n\n    For compatibility with manhole clients without the \\"Failure\\"\n    capability.\n\n    A dictionary with two members:\n        - \\\'traceback\\\' -- traceback.extract_tb output; a list of tuples\n             (filename, line number, function name, text) suitable for\n             feeding to traceback.format_list.\n\n        - \\\'exception\\\' -- a list of one or more strings, each\n             ending in a newline. (traceback.format_exception_only output)\n    """'
newline|'\n'
name|'import'
name|'linecache'
newline|'\n'
name|'tb'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'f'
name|'in'
name|'fail'
op|'.'
name|'frames'
op|':'
newline|'\n'
comment|'# (filename, line number, function name, text)'
nl|'\n'
indent|'        '
name|'tb'
op|'.'
name|'append'
op|'('
op|'('
name|'f'
op|'['
number|'1'
op|']'
op|','
name|'f'
op|'['
number|'2'
op|']'
op|','
name|'f'
op|'['
number|'0'
op|']'
op|','
name|'linecache'
op|'.'
name|'getline'
op|'('
name|'f'
op|'['
number|'1'
op|']'
op|','
name|'f'
op|'['
number|'2'
op|']'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
op|'{'
nl|'\n'
string|"'traceback'"
op|':'
name|'tb'
op|','
nl|'\n'
string|"'exception'"
op|':'
name|'traceback'
op|'.'
name|'format_exception_only'
op|'('
name|'fail'
op|'.'
name|'type'
op|','
name|'fail'
op|'.'
name|'value'
op|')'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
comment|'# Capabilities clients are likely to have before they knew how to answer a'
nl|'\n'
comment|'# "listCapabilities" query.'
nl|'\n'
DECL|variable|_defaultCapabilities
dedent|''
name|'_defaultCapabilities'
op|'='
op|'{'
nl|'\n'
string|'"Explorer"'
op|':'
string|"'Set'"
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|class|Perspective
name|'class'
name|'Perspective'
op|'('
name|'pb'
op|'.'
name|'Avatar'
op|')'
op|':'
newline|'\n'
DECL|variable|lastDeferred
indent|'    '
name|'lastDeferred'
op|'='
number|'0'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'service'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'localNamespace'
op|'='
op|'{'
nl|'\n'
string|'"service"'
op|':'
name|'service'
op|','
nl|'\n'
string|'"avatar"'
op|':'
name|'self'
op|','
nl|'\n'
string|'"_"'
op|':'
name|'None'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'clients'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'service'
op|'='
name|'service'
newline|'\n'
nl|'\n'
DECL|member|__getstate__
dedent|''
name|'def'
name|'__getstate__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'state'
op|'='
name|'self'
op|'.'
name|'__dict__'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'state'
op|'['
string|"'clients'"
op|']'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'state'
op|'['
string|"'localNamespace'"
op|']'
op|'.'
name|'has_key'
op|'('
string|'"__builtins__"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'state'
op|'['
string|"'localNamespace'"
op|']'
op|'['
string|"'__builtins__'"
op|']'
newline|'\n'
dedent|''
name|'return'
name|'state'
newline|'\n'
nl|'\n'
DECL|member|attached
dedent|''
name|'def'
name|'attached'
op|'('
name|'self'
op|','
name|'client'
op|','
name|'identity'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""A client has attached -- welcome them and add them to the list.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'clients'
op|'['
name|'client'
op|']'
op|'='
name|'identity'
newline|'\n'
nl|'\n'
name|'host'
op|'='
string|"':'"
op|'.'
name|'join'
op|'('
name|'map'
op|'('
name|'str'
op|','
name|'client'
op|'.'
name|'broker'
op|'.'
name|'transport'
op|'.'
name|'getHost'
op|'('
op|')'
op|'['
number|'1'
op|':'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'msg'
op|'='
name|'self'
op|'.'
name|'service'
op|'.'
name|'welcomeMessage'
op|'%'
op|'{'
nl|'\n'
string|"'you'"
op|':'
name|'getattr'
op|'('
name|'identity'
op|','
string|"'name'"
op|','
name|'str'
op|'('
name|'identity'
op|')'
op|')'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'host'
op|','
nl|'\n'
string|"'longversion'"
op|':'
name|'copyright'
op|'.'
name|'longversion'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'client'
op|'.'
name|'callRemote'
op|'('
string|"'console'"
op|','
op|'['
op|'('
string|'"stdout"'
op|','
name|'msg'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'client'
op|'.'
name|'capabilities'
op|'='
name|'_defaultCapabilities'
newline|'\n'
name|'client'
op|'.'
name|'callRemote'
op|'('
string|"'listCapabilities'"
op|')'
op|'.'
name|'addCallbacks'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_cbClientCapable'
op|','
name|'self'
op|'.'
name|'_ebClientCapable'
op|','
nl|'\n'
name|'callbackArgs'
op|'='
op|'('
name|'client'
op|','
op|')'
op|','
name|'errbackArgs'
op|'='
op|'('
name|'client'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|detached
dedent|''
name|'def'
name|'detached'
op|'('
name|'self'
op|','
name|'client'
op|','
name|'identity'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'self'
op|'.'
name|'clients'
op|'['
name|'client'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|runInConsole
dedent|''
dedent|''
name|'def'
name|'runInConsole'
op|'('
name|'self'
op|','
name|'command'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Convience method to \\"runInConsole with my stuff\\".\n        """'
newline|'\n'
name|'return'
name|'runInConsole'
op|'('
name|'command'
op|','
nl|'\n'
name|'self'
op|'.'
name|'console'
op|','
nl|'\n'
name|'self'
op|'.'
name|'service'
op|'.'
name|'namespace'
op|','
nl|'\n'
name|'self'
op|'.'
name|'localNamespace'
op|','
nl|'\n'
name|'str'
op|'('
name|'self'
op|'.'
name|'service'
op|')'
op|','
nl|'\n'
name|'args'
op|'='
name|'args'
op|','
nl|'\n'
name|'kw'
op|'='
name|'kw'
op|','
nl|'\n'
name|'unsafeTracebacks'
op|'='
name|'self'
op|'.'
name|'service'
op|'.'
name|'unsafeTracebacks'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'### Methods for communicating to my clients.'
nl|'\n'
nl|'\n'
DECL|member|console
dedent|''
name|'def'
name|'console'
op|'('
name|'self'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Pass a message to my clients\' console.\n        """'
newline|'\n'
name|'clients'
op|'='
name|'self'
op|'.'
name|'clients'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'origMessage'
op|'='
name|'message'
newline|'\n'
name|'compatMessage'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'client'
name|'in'
name|'clients'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'client'
op|'.'
name|'capabilities'
op|'.'
name|'has_key'
op|'('
string|'"Failure"'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'compatMessage'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                        '
name|'compatMessage'
op|'='
name|'origMessage'
op|'['
op|':'
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
name|'len'
op|'('
name|'message'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                            '
name|'if'
op|'('
op|'('
name|'message'
op|'['
name|'i'
op|']'
op|'['
number|'0'
op|']'
op|'=='
string|'"exception"'
op|')'
name|'and'
nl|'\n'
name|'isinstance'
op|'('
name|'message'
op|'['
name|'i'
op|']'
op|'['
number|'1'
op|']'
op|','
name|'failure'
op|'.'
name|'Failure'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                                '
name|'compatMessage'
op|'['
name|'i'
op|']'
op|'='
op|'('
nl|'\n'
name|'message'
op|'['
name|'i'
op|']'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'_failureOldStyle'
op|'('
name|'message'
op|'['
name|'i'
op|']'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'client'
op|'.'
name|'callRemote'
op|'('
string|"'console'"
op|','
name|'compatMessage'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'client'
op|'.'
name|'callRemote'
op|'('
string|"'console'"
op|','
name|'message'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'pb'
op|'.'
name|'ProtocolError'
op|':'
newline|'\n'
comment|'# Stale broker.'
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'detached'
op|'('
name|'client'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|receiveExplorer
dedent|''
dedent|''
dedent|''
name|'def'
name|'receiveExplorer'
op|'('
name|'self'
op|','
name|'objectLink'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Pass an Explorer on to my clients.\n        """'
newline|'\n'
name|'clients'
op|'='
name|'self'
op|'.'
name|'clients'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'for'
name|'client'
name|'in'
name|'clients'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'client'
op|'.'
name|'callRemote'
op|'('
string|"'receiveExplorer'"
op|','
name|'objectLink'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'pb'
op|'.'
name|'ProtocolError'
op|':'
newline|'\n'
comment|'# Stale broker.'
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'detached'
op|'('
name|'client'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_cbResult
dedent|''
dedent|''
dedent|''
name|'def'
name|'_cbResult'
op|'('
name|'self'
op|','
name|'val'
op|','
name|'dnum'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'console'
op|'('
op|'['
op|'('
string|"'result'"
op|','
string|'"Deferred #%s Result: %r\\n"'
op|'%'
op|'('
name|'dnum'
op|','
name|'val'
op|')'
op|')'
op|']'
op|')'
newline|'\n'
name|'return'
name|'val'
newline|'\n'
nl|'\n'
DECL|member|_cbClientCapable
dedent|''
name|'def'
name|'_cbClientCapable'
op|'('
name|'self'
op|','
name|'capabilities'
op|','
name|'client'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"client %x has %s"'
op|'%'
op|'('
name|'id'
op|'('
name|'client'
op|')'
op|','
name|'capabilities'
op|')'
op|')'
newline|'\n'
name|'client'
op|'.'
name|'capabilities'
op|'='
name|'capabilities'
newline|'\n'
nl|'\n'
DECL|member|_ebClientCapable
dedent|''
name|'def'
name|'_ebClientCapable'
op|'('
name|'self'
op|','
name|'reason'
op|','
name|'client'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'reason'
op|'.'
name|'trap'
op|'('
name|'AttributeError'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Couldn\'t get capabilities from %s, assuming defaults."'
op|'%'
nl|'\n'
op|'('
name|'client'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'### perspective_ methods, commands used by the client.'
nl|'\n'
nl|'\n'
DECL|member|perspective_do
dedent|''
name|'def'
name|'perspective_do'
op|'('
name|'self'
op|','
name|'expr'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Evaluate the given expression, with output to the console.\n\n        The result is stored in the local variable \'_\', and its repr()\n        string is sent to the console as a \\"result\\" message.\n        """'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'">>> %s"'
op|'%'
name|'expr'
op|')'
newline|'\n'
name|'val'
op|'='
name|'self'
op|'.'
name|'runInConsole'
op|'('
name|'expr'
op|')'
newline|'\n'
name|'if'
name|'val'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'localNamespace'
op|'['
string|'"_"'
op|']'
op|'='
name|'val'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'defer'
name|'import'
name|'Deferred'
newline|'\n'
comment|'# TODO: client support for Deferred.'
nl|'\n'
name|'if'
name|'isinstance'
op|'('
name|'val'
op|','
name|'Deferred'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'lastDeferred'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'console'
op|'('
op|'['
op|'('
string|"'result'"
op|','
string|'"Waiting for Deferred #%s...\\n"'
op|'%'
name|'self'
op|'.'
name|'lastDeferred'
op|')'
op|']'
op|')'
newline|'\n'
name|'val'
op|'.'
name|'addBoth'
op|'('
name|'self'
op|'.'
name|'_cbResult'
op|','
name|'self'
op|'.'
name|'lastDeferred'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'console'
op|'('
op|'['
op|'('
string|'"result"'
op|','
name|'repr'
op|'('
name|'val'
op|')'
op|'+'
string|"'\\n'"
op|')'
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'log'
op|'.'
name|'msg'
op|'('
string|'"<<<"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|perspective_explore
dedent|''
name|'def'
name|'perspective_explore'
op|'('
name|'self'
op|','
name|'identifier'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Browse the object obtained by evaluating the identifier.\n\n        The resulting ObjectLink is passed back through the client\'s\n        receiveBrowserObject method.\n        """'
newline|'\n'
name|'object'
op|'='
name|'self'
op|'.'
name|'runInConsole'
op|'('
name|'identifier'
op|')'
newline|'\n'
name|'if'
name|'object'
op|':'
newline|'\n'
indent|'            '
name|'expl'
op|'='
name|'explorer'
op|'.'
name|'explorerPool'
op|'.'
name|'getExplorer'
op|'('
name|'object'
op|','
name|'identifier'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'receiveExplorer'
op|'('
name|'expl'
op|')'
newline|'\n'
nl|'\n'
DECL|member|perspective_watch
dedent|''
dedent|''
name|'def'
name|'perspective_watch'
op|'('
name|'self'
op|','
name|'identifier'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Watch the object obtained by evaluating the identifier.\n\n        Whenever I think this object might have changed, I will pass\n        an ObjectLink of it back to the client\'s receiveBrowserObject\n        method.\n        """'
newline|'\n'
name|'raise'
name|'NotImplementedError'
newline|'\n'
name|'object'
op|'='
name|'self'
op|'.'
name|'runInConsole'
op|'('
name|'identifier'
op|')'
newline|'\n'
name|'if'
name|'object'
op|':'
newline|'\n'
comment|'# Return an ObjectLink of this right away, before the watch.'
nl|'\n'
indent|'            '
name|'oLink'
op|'='
name|'self'
op|'.'
name|'runInConsole'
op|'('
name|'self'
op|'.'
name|'browser'
op|'.'
name|'browseObject'
op|','
nl|'\n'
name|'object'
op|','
name|'identifier'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'receiveExplorer'
op|'('
name|'oLink'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'runInConsole'
op|'('
name|'self'
op|'.'
name|'browser'
op|'.'
name|'watchObject'
op|','
nl|'\n'
name|'object'
op|','
name|'identifier'
op|','
nl|'\n'
name|'self'
op|'.'
name|'receiveExplorer'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Realm
dedent|''
dedent|''
dedent|''
name|'class'
name|'Realm'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'implements'
op|'('
name|'portal'
op|'.'
name|'IRealm'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'service'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'service'
op|'='
name|'service'
newline|'\n'
name|'self'
op|'.'
name|'_cache'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|requestAvatar
dedent|''
name|'def'
name|'requestAvatar'
op|'('
name|'self'
op|','
name|'avatarId'
op|','
name|'mind'
op|','
op|'*'
name|'interfaces'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'pb'
op|'.'
name|'IPerspective'
name|'not'
name|'in'
name|'interfaces'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'NotImplementedError'
op|'('
string|'"no interface"'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'avatarId'
name|'in'
name|'self'
op|'.'
name|'_cache'
op|':'
newline|'\n'
indent|'            '
name|'p'
op|'='
name|'self'
op|'.'
name|'_cache'
op|'['
name|'avatarId'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'p'
op|'='
name|'Perspective'
op|'('
name|'self'
op|'.'
name|'service'
op|')'
newline|'\n'
dedent|''
name|'p'
op|'.'
name|'attached'
op|'('
name|'mind'
op|','
name|'avatarId'
op|')'
newline|'\n'
DECL|function|detached
name|'def'
name|'detached'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'p'
op|'.'
name|'detached'
op|'('
name|'mind'
op|','
name|'avatarId'
op|')'
newline|'\n'
dedent|''
name|'return'
op|'('
name|'pb'
op|'.'
name|'IPerspective'
op|','
name|'p'
op|','
name|'detached'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Service
dedent|''
dedent|''
name|'class'
name|'Service'
op|'('
name|'service'
op|'.'
name|'Service'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|welcomeMessage
indent|'    '
name|'welcomeMessage'
op|'='
op|'('
nl|'\n'
string|'"\\nHello %(you)s, welcome to Manhole "'
nl|'\n'
string|'"on %(host)s.\\n"'
nl|'\n'
string|'"%(longversion)s.\\n\\n"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'unsafeTracebacks'
op|'='
name|'False'
op|','
name|'namespace'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'unsafeTracebacks'
op|'='
name|'unsafeTracebacks'
newline|'\n'
name|'self'
op|'.'
name|'namespace'
op|'='
op|'{'
nl|'\n'
string|"'__name__'"
op|':'
string|"'__manhole%x__'"
op|'%'
op|'('
name|'id'
op|'('
name|'self'
op|')'
op|','
op|')'
op|','
nl|'\n'
string|"'sys'"
op|':'
name|'sys'
nl|'\n'
op|'}'
newline|'\n'
name|'if'
name|'namespace'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'namespace'
op|'.'
name|'update'
op|'('
name|'namespace'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__getstate__
dedent|''
dedent|''
name|'def'
name|'__getstate__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""This returns the persistent state of this shell factory.\n        """'
newline|'\n'
comment|'# TODO -- refactor this and twisted.reality.author.Author to'
nl|'\n'
comment|"# use common functionality (perhaps the 'code' module?)"
nl|'\n'
name|'dict'
op|'='
name|'self'
op|'.'
name|'__dict__'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'ns'
op|'='
name|'dict'
op|'['
string|"'namespace'"
op|']'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'dict'
op|'['
string|"'namespace'"
op|']'
op|'='
name|'ns'
newline|'\n'
name|'if'
name|'ns'
op|'.'
name|'has_key'
op|'('
string|"'__builtins__'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'ns'
op|'['
string|"'__builtins__'"
op|']'
newline|'\n'
dedent|''
name|'return'
name|'dict'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
