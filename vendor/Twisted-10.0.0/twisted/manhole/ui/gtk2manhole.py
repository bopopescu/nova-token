begin_unit
comment|'# -*- test-case-name: twisted.manhole.ui.test.test_gtk2manhole -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2009 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nManhole client with a GTK v2.x front-end.\n"""'
newline|'\n'
nl|'\n'
DECL|variable|__version__
name|'__version__'
op|'='
string|"'$Revision: 1.9 $'"
op|'['
number|'11'
op|':'
op|'-'
number|'2'
op|']'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
name|'import'
name|'copyright'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'components'
op|','
name|'failure'
op|','
name|'log'
op|','
name|'util'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'reflect'
name|'import'
name|'prefixedMethodNames'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'spread'
name|'import'
name|'pb'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'spread'
op|'.'
name|'ui'
name|'import'
name|'gtk2util'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'manhole'
op|'.'
name|'service'
name|'import'
name|'IManholeClient'
newline|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
newline|'\n'
nl|'\n'
comment|'# The pygtk.require for version 2.0 has already been done by the reactor.'
nl|'\n'
name|'import'
name|'gtk'
newline|'\n'
nl|'\n'
name|'import'
name|'code'
op|','
name|'types'
op|','
name|'inspect'
newline|'\n'
nl|'\n'
comment|'# TODO:'
nl|'\n'
comment|'#  Make wrap-mode a run-time option.'
nl|'\n'
comment|'#  Explorer.'
nl|'\n'
comment|"#  Code doesn't cleanly handle opening a second connection.  Fix that."
nl|'\n'
comment|'#  Make some acknowledgement of when a command has completed, even if'
nl|'\n'
comment|"#     it has no return value so it doesn't print anything to the console."
nl|'\n'
nl|'\n'
DECL|class|OfflineError
name|'class'
name|'OfflineError'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
DECL|class|ManholeWindow
dedent|''
name|'class'
name|'ManholeWindow'
op|'('
name|'components'
op|'.'
name|'Componentized'
op|','
name|'gtk2util'
op|'.'
name|'GladeKeeper'
op|')'
op|':'
newline|'\n'
DECL|variable|gladefile
indent|'    '
name|'gladefile'
op|'='
name|'util'
op|'.'
name|'sibpath'
op|'('
name|'__file__'
op|','
string|'"gtk2manhole.glade"'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|_widgets
name|'_widgets'
op|'='
op|'('
string|"'input'"
op|','
string|"'output'"
op|','
string|"'manholeWindow'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'defaults'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'gtk2util'
op|'.'
name|'GladeKeeper'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'components'
op|'.'
name|'Componentized'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'input'
op|'='
name|'ConsoleInput'
op|'('
name|'self'
op|'.'
name|'_input'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'input'
op|'.'
name|'toplevel'
op|'='
name|'self'
newline|'\n'
name|'self'
op|'.'
name|'output'
op|'='
name|'ConsoleOutput'
op|'('
name|'self'
op|'.'
name|'_output'
op|')'
newline|'\n'
nl|'\n'
comment|"# Ugh.  GladeKeeper actually isn't so good for composite objects."
nl|'\n'
comment|"# I want this connected to the ConsoleInput's handler, not something"
nl|'\n'
comment|'# on this class.'
nl|'\n'
name|'self'
op|'.'
name|'_input'
op|'.'
name|'connect'
op|'('
string|'"key_press_event"'
op|','
name|'self'
op|'.'
name|'input'
op|'.'
name|'_on_key_press_event'
op|')'
newline|'\n'
nl|'\n'
DECL|member|setDefaults
dedent|''
name|'def'
name|'setDefaults'
op|'('
name|'self'
op|','
name|'defaults'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'defaults'
op|'='
name|'defaults'
newline|'\n'
nl|'\n'
DECL|member|login
dedent|''
name|'def'
name|'login'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'client'
op|'='
name|'self'
op|'.'
name|'getComponent'
op|'('
name|'IManholeClient'
op|')'
newline|'\n'
name|'d'
op|'='
name|'gtk2util'
op|'.'
name|'login'
op|'('
name|'client'
op|','
op|'**'
name|'self'
op|'.'
name|'defaults'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbLogin'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'client'
op|'.'
name|'_cbLogin'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebLogin'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cbDisconnected
dedent|''
name|'def'
name|'_cbDisconnected'
op|'('
name|'self'
op|','
name|'perspective'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'output'
op|'.'
name|'append'
op|'('
string|'"%s went away. :(\\n"'
op|'%'
op|'('
name|'perspective'
op|','
op|')'
op|','
string|'"local"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_manholeWindow'
op|'.'
name|'set_title'
op|'('
string|'"Manhole"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cbLogin
dedent|''
name|'def'
name|'_cbLogin'
op|'('
name|'self'
op|','
name|'perspective'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'peer'
op|'='
name|'perspective'
op|'.'
name|'broker'
op|'.'
name|'transport'
op|'.'
name|'getPeer'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'output'
op|'.'
name|'append'
op|'('
string|'"Connected to %s\\n"'
op|'%'
op|'('
name|'peer'
op|','
op|')'
op|','
string|'"local"'
op|')'
newline|'\n'
name|'perspective'
op|'.'
name|'notifyOnDisconnect'
op|'('
name|'self'
op|'.'
name|'_cbDisconnected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_manholeWindow'
op|'.'
name|'set_title'
op|'('
string|'"Manhole - %s"'
op|'%'
op|'('
name|'peer'
op|')'
op|')'
newline|'\n'
name|'return'
name|'perspective'
newline|'\n'
nl|'\n'
DECL|member|_ebLogin
dedent|''
name|'def'
name|'_ebLogin'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'output'
op|'.'
name|'append'
op|'('
string|'"Login FAILED %s\\n"'
op|'%'
op|'('
name|'reason'
op|'.'
name|'value'
op|','
op|')'
op|','
string|'"exception"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_on_aboutMenuItem_activate
dedent|''
name|'def'
name|'_on_aboutMenuItem_activate'
op|'('
name|'self'
op|','
name|'widget'
op|','
op|'*'
name|'unused'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'import'
name|'sys'
newline|'\n'
name|'from'
name|'os'
name|'import'
name|'path'
newline|'\n'
name|'self'
op|'.'
name|'output'
op|'.'
name|'append'
op|'('
string|'"""\\\na Twisted Manhole client\n  Versions:\n    %(twistedVer)s\n    Python %(pythonVer)s on %(platform)s\n    GTK %(gtkVer)s / PyGTK %(pygtkVer)s\n    %(module)s %(modVer)s\nhttp://twistedmatrix.com/\n"""'
op|'%'
op|'{'
string|"'twistedVer'"
op|':'
name|'copyright'
op|'.'
name|'longversion'
op|','
nl|'\n'
string|"'pythonVer'"
op|':'
name|'sys'
op|'.'
name|'version'
op|'.'
name|'replace'
op|'('
string|"'\\n'"
op|','
string|"'\\n      '"
op|')'
op|','
nl|'\n'
string|"'platform'"
op|':'
name|'sys'
op|'.'
name|'platform'
op|','
nl|'\n'
string|"'gtkVer'"
op|':'
string|'"."'
op|'.'
name|'join'
op|'('
name|'map'
op|'('
name|'str'
op|','
name|'gtk'
op|'.'
name|'gtk_version'
op|')'
op|')'
op|','
nl|'\n'
string|"'pygtkVer'"
op|':'
string|'"."'
op|'.'
name|'join'
op|'('
name|'map'
op|'('
name|'str'
op|','
name|'gtk'
op|'.'
name|'pygtk_version'
op|')'
op|')'
op|','
nl|'\n'
string|"'module'"
op|':'
name|'path'
op|'.'
name|'basename'
op|'('
name|'__file__'
op|')'
op|','
nl|'\n'
string|"'modVer'"
op|':'
name|'__version__'
op|','
nl|'\n'
op|'}'
op|','
string|'"local"'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_on_openMenuItem_activate
dedent|''
name|'def'
name|'_on_openMenuItem_activate'
op|'('
name|'self'
op|','
name|'widget'
op|','
name|'userdata'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'login'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|_on_manholeWindow_delete_event
dedent|''
name|'def'
name|'_on_manholeWindow_delete_event'
op|'('
name|'self'
op|','
name|'widget'
op|','
op|'*'
name|'unused'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'reactor'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|_on_quitMenuItem_activate
dedent|''
name|'def'
name|'_on_quitMenuItem_activate'
op|'('
name|'self'
op|','
name|'widget'
op|','
op|'*'
name|'unused'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'reactor'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|on_reload_self_activate
dedent|''
name|'def'
name|'on_reload_self_activate'
op|'('
name|'self'
op|','
op|'*'
name|'unused'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'rebuild'
newline|'\n'
name|'rebuild'
op|'.'
name|'rebuild'
op|'('
name|'inspect'
op|'.'
name|'getmodule'
op|'('
name|'self'
op|'.'
name|'__class__'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|tagdefs
dedent|''
dedent|''
name|'tagdefs'
op|'='
op|'{'
nl|'\n'
string|"'default'"
op|':'
op|'{'
string|'"family"'
op|':'
string|'"monospace"'
op|'}'
op|','
nl|'\n'
comment|'# These are message types we get from the server.'
nl|'\n'
string|"'stdout'"
op|':'
op|'{'
string|'"foreground"'
op|':'
string|'"black"'
op|'}'
op|','
nl|'\n'
string|"'stderr'"
op|':'
op|'{'
string|'"foreground"'
op|':'
string|'"#AA8000"'
op|'}'
op|','
nl|'\n'
string|"'result'"
op|':'
op|'{'
string|'"foreground"'
op|':'
string|'"blue"'
op|'}'
op|','
nl|'\n'
string|"'exception'"
op|':'
op|'{'
string|'"foreground"'
op|':'
string|'"red"'
op|'}'
op|','
nl|'\n'
comment|'# Messages generate locally.'
nl|'\n'
string|"'local'"
op|':'
op|'{'
string|'"foreground"'
op|':'
string|'"#008000"'
op|'}'
op|','
nl|'\n'
string|"'log'"
op|':'
op|'{'
string|'"foreground"'
op|':'
string|'"#000080"'
op|'}'
op|','
nl|'\n'
string|"'command'"
op|':'
op|'{'
string|'"foreground"'
op|':'
string|'"#666666"'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
comment|'# TODO: Factor Python console stuff back out to pywidgets.'
nl|'\n'
nl|'\n'
DECL|class|ConsoleOutput
name|'class'
name|'ConsoleOutput'
op|':'
newline|'\n'
DECL|variable|_willScroll
indent|'    '
name|'_willScroll'
op|'='
name|'None'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'textView'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'textView'
op|'='
name|'textView'
newline|'\n'
name|'self'
op|'.'
name|'buffer'
op|'='
name|'textView'
op|'.'
name|'get_buffer'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# TODO: Make this a singleton tag table.'
nl|'\n'
name|'for'
name|'name'
op|','
name|'props'
name|'in'
name|'tagdefs'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'tag'
op|'='
name|'self'
op|'.'
name|'buffer'
op|'.'
name|'create_tag'
op|'('
name|'name'
op|')'
newline|'\n'
comment|'# This can be done in the constructor in newer pygtk (post 1.99.14)'
nl|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'props'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'tag'
op|'.'
name|'set_property'
op|'('
name|'k'
op|','
name|'v'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'buffer'
op|'.'
name|'tag_table'
op|'.'
name|'lookup'
op|'('
string|'"default"'
op|')'
op|'.'
name|'set_priority'
op|'('
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_captureLocalLog'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_captureLocalLog
dedent|''
name|'def'
name|'_captureLocalLog'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'log'
op|'.'
name|'startLogging'
op|'('
name|'_Notafile'
op|'('
name|'self'
op|','
string|'"log"'
op|')'
op|','
name|'setStdout'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|append
dedent|''
name|'def'
name|'append'
op|'('
name|'self'
op|','
name|'text'
op|','
name|'kind'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
comment|'# XXX: It seems weird to have to do this thing with always applying'
nl|'\n'
comment|"# a 'default' tag.  Can't we change the fundamental look instead?"
nl|'\n'
indent|'        '
name|'tags'
op|'='
op|'['
string|'"default"'
op|']'
newline|'\n'
name|'if'
name|'kind'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'tags'
op|'.'
name|'append'
op|'('
name|'kind'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'buffer'
op|'.'
name|'insert_with_tags_by_name'
op|'('
name|'self'
op|'.'
name|'buffer'
op|'.'
name|'get_end_iter'
op|'('
op|')'
op|','
nl|'\n'
name|'text'
op|','
op|'*'
name|'tags'
op|')'
newline|'\n'
comment|'# Silly things, the TextView needs to update itself before it knows'
nl|'\n'
comment|'# where the bottom is.'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'_willScroll'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_willScroll'
op|'='
name|'gtk'
op|'.'
name|'idle_add'
op|'('
name|'self'
op|'.'
name|'_scrollDown'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_scrollDown
dedent|''
dedent|''
name|'def'
name|'_scrollDown'
op|'('
name|'self'
op|','
op|'*'
name|'unused'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'textView'
op|'.'
name|'scroll_to_iter'
op|'('
name|'self'
op|'.'
name|'buffer'
op|'.'
name|'get_end_iter'
op|'('
op|')'
op|','
number|'0'
op|','
nl|'\n'
name|'True'
op|','
number|'1.0'
op|','
number|'1.0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_willScroll'
op|'='
name|'None'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|class|History
dedent|''
dedent|''
name|'class'
name|'History'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'maxhist'
op|'='
number|'10000'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ringbuffer'
op|'='
op|'['
string|"''"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'maxhist'
op|'='
name|'maxhist'
newline|'\n'
name|'self'
op|'.'
name|'histCursor'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|append
dedent|''
name|'def'
name|'append'
op|'('
name|'self'
op|','
name|'htext'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ringbuffer'
op|'.'
name|'insert'
op|'('
op|'-'
number|'1'
op|','
name|'htext'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'ringbuffer'
op|')'
op|'>'
name|'self'
op|'.'
name|'maxhist'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'ringbuffer'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'histCursor'
op|'='
name|'len'
op|'('
name|'self'
op|'.'
name|'ringbuffer'
op|')'
op|'-'
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'ringbuffer'
op|'['
op|'-'
number|'1'
op|']'
op|'='
string|"''"
newline|'\n'
nl|'\n'
DECL|member|move
dedent|''
name|'def'
name|'move'
op|'('
name|'self'
op|','
name|'prevnext'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'        '
string|"'''\n        Return next/previous item in the history, stopping at top/bottom.\n        '''"
newline|'\n'
name|'hcpn'
op|'='
name|'self'
op|'.'
name|'histCursor'
op|'+'
name|'prevnext'
newline|'\n'
name|'if'
name|'hcpn'
op|'>='
number|'0'
name|'and'
name|'hcpn'
op|'<'
name|'len'
op|'('
name|'self'
op|'.'
name|'ringbuffer'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'histCursor'
op|'='
name|'hcpn'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'ringbuffer'
op|'['
name|'hcpn'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|histup
dedent|''
dedent|''
name|'def'
name|'histup'
op|'('
name|'self'
op|','
name|'textbuffer'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'histCursor'
op|'=='
name|'len'
op|'('
name|'self'
op|'.'
name|'ringbuffer'
op|')'
op|'-'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'si'
op|','
name|'ei'
op|'='
name|'textbuffer'
op|'.'
name|'get_start_iter'
op|'('
op|')'
op|','
name|'textbuffer'
op|'.'
name|'get_end_iter'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ringbuffer'
op|'['
op|'-'
number|'1'
op|']'
op|'='
name|'textbuffer'
op|'.'
name|'get_text'
op|'('
name|'si'
op|','
name|'ei'
op|')'
newline|'\n'
dedent|''
name|'newtext'
op|'='
name|'self'
op|'.'
name|'move'
op|'('
op|'-'
number|'1'
op|')'
newline|'\n'
name|'if'
name|'newtext'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'textbuffer'
op|'.'
name|'set_text'
op|'('
name|'newtext'
op|')'
newline|'\n'
nl|'\n'
DECL|member|histdown
dedent|''
name|'def'
name|'histdown'
op|'('
name|'self'
op|','
name|'textbuffer'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'newtext'
op|'='
name|'self'
op|'.'
name|'move'
op|'('
number|'1'
op|')'
newline|'\n'
name|'if'
name|'newtext'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'textbuffer'
op|'.'
name|'set_text'
op|'('
name|'newtext'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConsoleInput
dedent|''
dedent|''
name|'class'
name|'ConsoleInput'
op|':'
newline|'\n'
indent|'    '
name|'toplevel'
op|','
name|'rkeymap'
op|'='
name|'None'
op|','
name|'None'
newline|'\n'
DECL|variable|__debug
name|'__debug'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'textView'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'textView'
op|'='
name|'textView'
newline|'\n'
name|'self'
op|'.'
name|'rkeymap'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'history'
op|'='
name|'History'
op|'('
op|')'
newline|'\n'
name|'for'
name|'name'
name|'in'
name|'prefixedMethodNames'
op|'('
name|'self'
op|'.'
name|'__class__'
op|','
string|'"key_"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'keysymName'
op|'='
name|'name'
op|'.'
name|'split'
op|'('
string|'"_"'
op|')'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'rkeymap'
op|'['
name|'getattr'
op|'('
name|'gtk'
op|'.'
name|'keysyms'
op|','
name|'keysymName'
op|')'
op|']'
op|'='
name|'keysymName'
newline|'\n'
nl|'\n'
DECL|member|_on_key_press_event
dedent|''
dedent|''
name|'def'
name|'_on_key_press_event'
op|'('
name|'self'
op|','
name|'entry'
op|','
name|'event'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'stopSignal'
op|'='
name|'False'
newline|'\n'
name|'ksym'
op|'='
name|'self'
op|'.'
name|'rkeymap'
op|'.'
name|'get'
op|'('
name|'event'
op|'.'
name|'keyval'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'mods'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'prefix'
op|','
name|'mask'
name|'in'
op|'['
op|'('
string|"'ctrl'"
op|','
name|'gtk'
op|'.'
name|'gdk'
op|'.'
name|'CONTROL_MASK'
op|')'
op|','
op|'('
string|"'shift'"
op|','
name|'gtk'
op|'.'
name|'gdk'
op|'.'
name|'SHIFT_MASK'
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'event'
op|'.'
name|'state'
op|'&'
name|'mask'
op|':'
newline|'\n'
indent|'                '
name|'mods'
op|'.'
name|'append'
op|'('
name|'prefix'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'mods'
op|':'
newline|'\n'
indent|'            '
name|'ksym'
op|'='
string|"'_'"
op|'.'
name|'join'
op|'('
name|'mods'
op|'+'
op|'['
name|'ksym'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'ksym'
op|':'
newline|'\n'
indent|'            '
name|'rvalue'
op|'='
name|'getattr'
op|'('
nl|'\n'
name|'self'
op|','
string|"'key_%s'"
op|'%'
name|'ksym'
op|','
name|'lambda'
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|':'
name|'None'
op|')'
op|'('
name|'entry'
op|','
name|'event'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'__debug'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'ksym'
newline|'\n'
dedent|''
name|'return'
name|'rvalue'
newline|'\n'
nl|'\n'
DECL|member|getText
dedent|''
name|'def'
name|'getText'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'buffer'
op|'='
name|'self'
op|'.'
name|'textView'
op|'.'
name|'get_buffer'
op|'('
op|')'
newline|'\n'
name|'iter1'
op|','
name|'iter2'
op|'='
name|'buffer'
op|'.'
name|'get_bounds'
op|'('
op|')'
newline|'\n'
name|'text'
op|'='
name|'buffer'
op|'.'
name|'get_text'
op|'('
name|'iter1'
op|','
name|'iter2'
op|','
name|'False'
op|')'
newline|'\n'
name|'return'
name|'text'
newline|'\n'
nl|'\n'
DECL|member|setText
dedent|''
name|'def'
name|'setText'
op|'('
name|'self'
op|','
name|'text'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'textView'
op|'.'
name|'get_buffer'
op|'('
op|')'
op|'.'
name|'set_text'
op|'('
name|'text'
op|')'
newline|'\n'
nl|'\n'
DECL|member|key_Return
dedent|''
name|'def'
name|'key_Return'
op|'('
name|'self'
op|','
name|'entry'
op|','
name|'event'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'text'
op|'='
name|'self'
op|'.'
name|'getText'
op|'('
op|')'
newline|'\n'
comment|'# Figure out if that Return meant "next line" or "execute."'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'c'
op|'='
name|'code'
op|'.'
name|'compile_command'
op|'('
name|'text'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'SyntaxError'
op|','
name|'e'
op|':'
newline|'\n'
comment|"# This could conceivably piss you off if the client's python"
nl|'\n'
comment|"# doesn't accept keywords that are known to the manhole's"
nl|'\n'
comment|'# python.'
nl|'\n'
indent|'            '
name|'point'
op|'='
name|'buffer'
op|'.'
name|'get_iter_at_line_offset'
op|'('
name|'e'
op|'.'
name|'lineno'
op|','
name|'e'
op|'.'
name|'offset'
op|')'
newline|'\n'
name|'buffer'
op|'.'
name|'place'
op|'('
name|'point'
op|')'
newline|'\n'
comment|'# TODO: Componentize!'
nl|'\n'
name|'self'
op|'.'
name|'toplevel'
op|'.'
name|'output'
op|'.'
name|'append'
op|'('
name|'str'
op|'('
name|'e'
op|')'
op|','
string|'"exception"'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'OverflowError'
op|','
name|'ValueError'
op|')'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'toplevel'
op|'.'
name|'output'
op|'.'
name|'append'
op|'('
name|'str'
op|'('
name|'e'
op|')'
op|','
string|'"exception"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'c'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'sendMessage'
op|'('
op|')'
newline|'\n'
comment|"# Don't insert Return as a newline in the buffer."
nl|'\n'
name|'self'
op|'.'
name|'history'
op|'.'
name|'append'
op|'('
name|'text'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
comment|'# entry.emit_stop_by_name("key_press_event")'
nl|'\n'
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# not a complete code block'
nl|'\n'
indent|'                '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|member|key_Up
dedent|''
name|'def'
name|'key_Up'
op|'('
name|'self'
op|','
name|'entry'
op|','
name|'event'
op|')'
op|':'
newline|'\n'
comment|"# if I'm at the top, previous history item."
nl|'\n'
indent|'        '
name|'textbuffer'
op|'='
name|'self'
op|'.'
name|'textView'
op|'.'
name|'get_buffer'
op|'('
op|')'
newline|'\n'
name|'if'
name|'textbuffer'
op|'.'
name|'get_iter_at_mark'
op|'('
name|'textbuffer'
op|'.'
name|'get_insert'
op|'('
op|')'
op|')'
op|'.'
name|'get_line'
op|'('
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'history'
op|'.'
name|'histup'
op|'('
name|'textbuffer'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|member|key_Down
dedent|''
name|'def'
name|'key_Down'
op|'('
name|'self'
op|','
name|'entry'
op|','
name|'event'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'textbuffer'
op|'='
name|'self'
op|'.'
name|'textView'
op|'.'
name|'get_buffer'
op|'('
op|')'
newline|'\n'
name|'if'
name|'textbuffer'
op|'.'
name|'get_iter_at_mark'
op|'('
name|'textbuffer'
op|'.'
name|'get_insert'
op|'('
op|')'
op|')'
op|'.'
name|'get_line'
op|'('
op|')'
op|'=='
op|'('
nl|'\n'
name|'textbuffer'
op|'.'
name|'get_line_count'
op|'('
op|')'
op|'-'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'history'
op|'.'
name|'histdown'
op|'('
name|'textbuffer'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|variable|key_ctrl_p
dedent|''
name|'key_ctrl_p'
op|'='
name|'key_Up'
newline|'\n'
DECL|variable|key_ctrl_n
name|'key_ctrl_n'
op|'='
name|'key_Down'
newline|'\n'
nl|'\n'
DECL|member|key_ctrl_shift_F9
name|'def'
name|'key_ctrl_shift_F9'
op|'('
name|'self'
op|','
name|'entry'
op|','
name|'event'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'__debug'
op|':'
newline|'\n'
indent|'            '
name|'import'
name|'pdb'
op|';'
name|'pdb'
op|'.'
name|'set_trace'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|clear
dedent|''
dedent|''
name|'def'
name|'clear'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'buffer'
op|'='
name|'self'
op|'.'
name|'textView'
op|'.'
name|'get_buffer'
op|'('
op|')'
newline|'\n'
name|'buffer'
op|'.'
name|'delete'
op|'('
op|'*'
name|'buffer'
op|'.'
name|'get_bounds'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|sendMessage
dedent|''
name|'def'
name|'sendMessage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'buffer'
op|'='
name|'self'
op|'.'
name|'textView'
op|'.'
name|'get_buffer'
op|'('
op|')'
newline|'\n'
name|'iter1'
op|','
name|'iter2'
op|'='
name|'buffer'
op|'.'
name|'get_bounds'
op|'('
op|')'
newline|'\n'
name|'text'
op|'='
name|'buffer'
op|'.'
name|'get_text'
op|'('
name|'iter1'
op|','
name|'iter2'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'toplevel'
op|'.'
name|'output'
op|'.'
name|'append'
op|'('
name|'pythonify'
op|'('
name|'text'
op|')'
op|','
string|"'command'"
op|')'
newline|'\n'
comment|'# TODO: Componentize better!'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'toplevel'
op|'.'
name|'getComponent'
op|'('
name|'IManholeClient'
op|')'
op|'.'
name|'do'
op|'('
name|'text'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OfflineError'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'toplevel'
op|'.'
name|'output'
op|'.'
name|'append'
op|'('
string|'"Not connected, command not sent.\\n"'
op|','
nl|'\n'
string|'"exception"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|pythonify
dedent|''
dedent|''
dedent|''
name|'def'
name|'pythonify'
op|'('
name|'text'
op|')'
op|':'
newline|'\n'
indent|'    '
string|"'''\n    Make some text appear as though it was typed in at a Python prompt.\n    '''"
newline|'\n'
name|'lines'
op|'='
name|'text'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
name|'lines'
op|'['
number|'0'
op|']'
op|'='
string|"'>>> '"
op|'+'
name|'lines'
op|'['
number|'0'
op|']'
newline|'\n'
name|'return'
string|"'\\n... '"
op|'.'
name|'join'
op|'('
name|'lines'
op|')'
op|'+'
string|"'\\n'"
newline|'\n'
nl|'\n'
DECL|class|_Notafile
dedent|''
name|'class'
name|'_Notafile'
op|':'
newline|'\n'
indent|'    '
string|'"""Curry to make failure.printTraceback work with the output widget."""'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'output'
op|','
name|'kind'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'output'
op|'='
name|'output'
newline|'\n'
name|'self'
op|'.'
name|'kind'
op|'='
name|'kind'
newline|'\n'
nl|'\n'
DECL|member|write
dedent|''
name|'def'
name|'write'
op|'('
name|'self'
op|','
name|'txt'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'output'
op|'.'
name|'append'
op|'('
name|'txt'
op|','
name|'self'
op|'.'
name|'kind'
op|')'
newline|'\n'
nl|'\n'
DECL|member|flush
dedent|''
name|'def'
name|'flush'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|class|ManholeClient
dedent|''
dedent|''
name|'class'
name|'ManholeClient'
op|'('
name|'components'
op|'.'
name|'Adapter'
op|','
name|'pb'
op|'.'
name|'Referenceable'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'implements'
op|'('
name|'IManholeClient'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|capabilities
name|'capabilities'
op|'='
op|'{'
nl|'\n'
comment|'#        "Explorer": \'Set\','
nl|'\n'
string|'"Failure"'
op|':'
string|"'Set'"
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_cbLogin
name|'def'
name|'_cbLogin'
op|'('
name|'self'
op|','
name|'perspective'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'perspective'
op|'='
name|'perspective'
newline|'\n'
name|'perspective'
op|'.'
name|'notifyOnDisconnect'
op|'('
name|'self'
op|'.'
name|'_cbDisconnected'
op|')'
newline|'\n'
name|'return'
name|'perspective'
newline|'\n'
nl|'\n'
DECL|member|remote_console
dedent|''
name|'def'
name|'remote_console'
op|'('
name|'self'
op|','
name|'messages'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'kind'
op|','
name|'content'
name|'in'
name|'messages'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'isinstance'
op|'('
name|'content'
op|','
name|'types'
op|'.'
name|'StringTypes'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'original'
op|'.'
name|'output'
op|'.'
name|'append'
op|'('
name|'content'
op|','
name|'kind'
op|')'
newline|'\n'
dedent|''
name|'elif'
op|'('
name|'kind'
op|'=='
string|'"exception"'
op|')'
name|'and'
name|'isinstance'
op|'('
name|'content'
op|','
name|'failure'
op|'.'
name|'Failure'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'content'
op|'.'
name|'printTraceback'
op|'('
name|'_Notafile'
op|'('
name|'self'
op|'.'
name|'original'
op|'.'
name|'output'
op|','
nl|'\n'
string|'"exception"'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'original'
op|'.'
name|'output'
op|'.'
name|'append'
op|'('
name|'str'
op|'('
name|'content'
op|')'
op|','
name|'kind'
op|')'
newline|'\n'
nl|'\n'
DECL|member|remote_receiveExplorer
dedent|''
dedent|''
dedent|''
name|'def'
name|'remote_receiveExplorer'
op|'('
name|'self'
op|','
name|'xplorer'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|remote_listCapabilities
dedent|''
name|'def'
name|'remote_listCapabilities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'capabilities'
newline|'\n'
nl|'\n'
DECL|member|_cbDisconnected
dedent|''
name|'def'
name|'_cbDisconnected'
op|'('
name|'self'
op|','
name|'perspective'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'perspective'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|do
dedent|''
name|'def'
name|'do'
op|'('
name|'self'
op|','
name|'text'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'perspective'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'OfflineError'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'perspective'
op|'.'
name|'callRemote'
op|'('
string|'"do"'
op|','
name|'text'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'components'
op|'.'
name|'registerAdapter'
op|'('
name|'ManholeClient'
op|','
name|'ManholeWindow'
op|','
name|'IManholeClient'
op|')'
newline|'\n'
endmarker|''
end_unit
