begin_unit
comment|'# Copyright (c) 2009 Twisted Matrix Laboratories.'
nl|'\n'
string|'"""\nTests for GTK2 GUI manhole.\n"""'
newline|'\n'
nl|'\n'
DECL|variable|skip
name|'skip'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'pygtk'
newline|'\n'
name|'pygtk'
op|'.'
name|'require'
op|'('
string|'"2.0"'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
DECL|variable|skip
indent|'    '
name|'skip'
op|'='
string|'"GTK 2.0 not available"'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'    '
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'import'
name|'gtk'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
DECL|variable|skip
indent|'        '
name|'skip'
op|'='
string|'"GTK 2.0 not available"'
newline|'\n'
dedent|''
name|'except'
name|'RuntimeError'
op|':'
newline|'\n'
DECL|variable|skip
indent|'        '
name|'skip'
op|'='
string|'"Old version of GTK 2.0 requires DISPLAY, and we don\'t have one."'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'gtk'
op|'.'
name|'gtk_version'
op|'['
number|'0'
op|']'
op|'=='
number|'1'
op|':'
newline|'\n'
DECL|variable|skip
indent|'            '
name|'skip'
op|'='
string|'"Requested GTK 2.0, but 1.0 was already imported."'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'from'
name|'twisted'
op|'.'
name|'manhole'
op|'.'
name|'ui'
op|'.'
name|'gtk2manhole'
name|'import'
name|'ConsoleInput'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'from'
name|'twisted'
op|'.'
name|'trial'
op|'.'
name|'unittest'
name|'import'
name|'TestCase'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'reflect'
name|'import'
name|'prefixedMethodNames'
newline|'\n'
nl|'\n'
DECL|class|ConsoleInputTests
name|'class'
name|'ConsoleInputTests'
op|'('
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Tests for L{ConsoleInput}.\n    """'
newline|'\n'
nl|'\n'
DECL|member|test_reverseKeymap
name|'def'
name|'test_reverseKeymap'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Verify that a L{ConsoleInput} has a reverse mapping of the keysym names\n        it needs for event handling to their corresponding keysym.\n        """'
newline|'\n'
name|'ci'
op|'='
name|'ConsoleInput'
op|'('
name|'None'
op|')'
newline|'\n'
name|'for'
name|'eventName'
name|'in'
name|'prefixedMethodNames'
op|'('
name|'ConsoleInput'
op|','
string|"'key_'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'keysymName'
op|'='
name|'eventName'
op|'.'
name|'split'
op|'('
string|'"_"'
op|')'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'keysymValue'
op|'='
name|'getattr'
op|'('
name|'gtk'
op|'.'
name|'keysyms'
op|','
name|'keysymName'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ci'
op|'.'
name|'rkeymap'
op|'['
name|'keysymValue'
op|']'
op|','
name|'keysymName'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|skip
dedent|''
dedent|''
name|'skip'
op|'='
name|'skip'
newline|'\n'
nl|'\n'
dedent|''
endmarker|''
end_unit
