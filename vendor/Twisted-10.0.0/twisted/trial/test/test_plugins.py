begin_unit
comment|'# Copyright (c) 2009 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Maintainer: Jonathan Lange'
nl|'\n'
nl|'\n'
string|'"""\nTests for L{twisted.plugins.twisted_trial}.\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'plugin'
name|'import'
name|'getPlugins'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
op|'.'
name|'itrial'
name|'import'
name|'IReporter'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestPlugins
name|'class'
name|'TestPlugins'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Tests for Trial\'s reporter plugins.\n    """'
newline|'\n'
nl|'\n'
DECL|member|getPluginsByLongOption
name|'def'
name|'getPluginsByLongOption'
op|'('
name|'self'
op|','
name|'longOption'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Return the Trial reporter plugin with the given long option.\n\n        If more than one is found, raise ValueError. If none are found, raise\n        IndexError.\n        """'
newline|'\n'
name|'plugins'
op|'='
op|'['
nl|'\n'
name|'plugin'
name|'for'
name|'plugin'
name|'in'
name|'getPlugins'
op|'('
name|'IReporter'
op|')'
nl|'\n'
name|'if'
name|'plugin'
op|'.'
name|'longOpt'
op|'=='
name|'longOption'
op|']'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'plugins'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|'('
nl|'\n'
string|'"More than one plugin found with long option %r: %r"'
nl|'\n'
op|'%'
op|'('
name|'longOption'
op|','
name|'plugins'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'plugins'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_subunitPlugin
dedent|''
name|'def'
name|'test_subunitPlugin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        One of the reporter plugins is the subunit reporter plugin.\n        """'
newline|'\n'
name|'subunitPlugin'
op|'='
name|'self'
op|'.'
name|'getPluginsByLongOption'
op|'('
string|"'subunit'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'Subunit Reporter'"
op|','
name|'subunitPlugin'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'twisted.trial.reporter'"
op|','
name|'subunitPlugin'
op|'.'
name|'module'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'subunit'"
op|','
name|'subunitPlugin'
op|'.'
name|'longOpt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIdentical'
op|'('
name|'None'
op|','
name|'subunitPlugin'
op|'.'
name|'shortOpt'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'SubunitReporter'"
op|','
name|'subunitPlugin'
op|'.'
name|'klass'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
