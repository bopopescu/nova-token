begin_unit
name|'from'
name|'__future__'
name|'import'
name|'generators'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'defer'
op|','
name|'threads'
op|','
name|'reactor'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DeferredSetUpOK
name|'class'
name|'DeferredSetUpOK'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'defer'
op|'.'
name|'succeed'
op|'('
string|"'value'"
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cb_setUpCalled'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|_cb_setUpCalled
dedent|''
name|'def'
name|'_cb_setUpCalled'
op|'('
name|'self'
op|','
name|'ignored'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_setUpCalled'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|test_ok
dedent|''
name|'def'
name|'test_ok'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'self'
op|'.'
name|'_setUpCalled'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DeferredSetUpFail
dedent|''
dedent|''
name|'class'
name|'DeferredSetUpFail'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|testCalled
indent|'    '
name|'testCalled'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'unittest'
op|'.'
name|'FailTest'
op|'('
string|"'i fail'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ok
dedent|''
name|'def'
name|'test_ok'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'DeferredSetUpFail'
op|'.'
name|'testCalled'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'fail'
op|'('
string|'"I should not get called"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DeferredSetUpCallbackFail
dedent|''
dedent|''
name|'class'
name|'DeferredSetUpCallbackFail'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|testCalled
indent|'    '
name|'testCalled'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'defer'
op|'.'
name|'succeed'
op|'('
string|"'value'"
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cb_setUpCalled'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|_cb_setUpCalled
dedent|''
name|'def'
name|'_cb_setUpCalled'
op|'('
name|'self'
op|','
name|'ignored'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'deliberate failure'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ok
dedent|''
name|'def'
name|'test_ok'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'DeferredSetUpCallbackFail'
op|'.'
name|'testCalled'
op|'='
name|'True'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DeferredSetUpError
dedent|''
dedent|''
name|'class'
name|'DeferredSetUpError'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|testCalled
indent|'    '
name|'testCalled'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'RuntimeError'
op|'('
string|"'deliberate error'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ok
dedent|''
name|'def'
name|'test_ok'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'DeferredSetUpError'
op|'.'
name|'testCalled'
op|'='
name|'True'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DeferredSetUpNeverFire
dedent|''
dedent|''
name|'class'
name|'DeferredSetUpNeverFire'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|testCalled
indent|'    '
name|'testCalled'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ok
dedent|''
name|'def'
name|'test_ok'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'DeferredSetUpNeverFire'
op|'.'
name|'testCalled'
op|'='
name|'True'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DeferredSetUpSkip
dedent|''
dedent|''
name|'class'
name|'DeferredSetUpSkip'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|testCalled
indent|'    '
name|'testCalled'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'defer'
op|'.'
name|'succeed'
op|'('
string|"'value'"
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cb1'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|_cb1
dedent|''
name|'def'
name|'_cb1'
op|'('
name|'self'
op|','
name|'ignored'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'unittest'
op|'.'
name|'SkipTest'
op|'('
string|'"skip me"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ok
dedent|''
name|'def'
name|'test_ok'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'DeferredSetUpSkip'
op|'.'
name|'testCalled'
op|'='
name|'True'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DeferredTests
dedent|''
dedent|''
name|'class'
name|'DeferredTests'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|touched
indent|'    '
name|'touched'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|_cb_fail
name|'def'
name|'_cb_fail'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'fail'
op|'('
name|'reason'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cb_error
dedent|''
name|'def'
name|'_cb_error'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'RuntimeError'
op|'('
name|'reason'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cb_skip
dedent|''
name|'def'
name|'_cb_skip'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'unittest'
op|'.'
name|'SkipTest'
op|'('
name|'reason'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_touchClass
dedent|''
name|'def'
name|'_touchClass'
op|'('
name|'self'
op|','
name|'ignored'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'__class__'
op|'.'
name|'touched'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'__class__'
op|'.'
name|'touched'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|test_pass
dedent|''
name|'def'
name|'test_pass'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
string|"'success'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_passGenerated
dedent|''
name|'def'
name|'test_passGenerated'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_touchClass'
op|'('
name|'None'
op|')'
newline|'\n'
name|'yield'
name|'None'
newline|'\n'
DECL|variable|test_passGenerated
dedent|''
name|'test_passGenerated'
op|'='
name|'defer'
op|'.'
name|'deferredGenerator'
op|'('
name|'test_passGenerated'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fail
name|'def'
name|'test_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'self'
op|'.'
name|'failureException'
op|'('
string|"'I fail'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_failureInCallback
dedent|''
name|'def'
name|'test_failureInCallback'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'defer'
op|'.'
name|'succeed'
op|'('
string|"'fail'"
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cb_fail'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|test_errorInCallback
dedent|''
name|'def'
name|'test_errorInCallback'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'defer'
op|'.'
name|'succeed'
op|'('
string|"'error'"
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cb_error'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|test_skip
dedent|''
name|'def'
name|'test_skip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'defer'
op|'.'
name|'succeed'
op|'('
string|"'skip'"
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cb_skip'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_touchClass'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|test_thread
dedent|''
name|'def'
name|'test_thread'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'threads'
op|'.'
name|'deferToThread'
op|'('
name|'lambda'
op|':'
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_expectedFailure
dedent|''
name|'def'
name|'test_expectedFailure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'defer'
op|'.'
name|'succeed'
op|'('
string|"'todo'"
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cb_error'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
dedent|''
name|'test_expectedFailure'
op|'.'
name|'todo'
op|'='
string|'"Expected failure"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TimeoutTests
dedent|''
name|'class'
name|'TimeoutTests'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|timedOut
indent|'    '
name|'timedOut'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|test_pass
name|'def'
name|'test_pass'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'reactor'
op|'.'
name|'callLater'
op|'('
number|'0'
op|','
name|'d'
op|'.'
name|'callback'
op|','
string|"'hoorj!'"
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
dedent|''
name|'test_pass'
op|'.'
name|'timeout'
op|'='
number|'2'
newline|'\n'
nl|'\n'
DECL|member|test_passDefault
name|'def'
name|'test_passDefault'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# test default timeout'
nl|'\n'
indent|'        '
name|'d'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'reactor'
op|'.'
name|'callLater'
op|'('
number|'0'
op|','
name|'d'
op|'.'
name|'callback'
op|','
string|"'hoorj!'"
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|test_timeout
dedent|''
name|'def'
name|'test_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
dedent|''
name|'test_timeout'
op|'.'
name|'timeout'
op|'='
number|'0.1'
newline|'\n'
nl|'\n'
DECL|member|test_timeoutZero
name|'def'
name|'test_timeoutZero'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
dedent|''
name|'test_timeoutZero'
op|'.'
name|'timeout'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|test_expectedFailure
name|'def'
name|'test_expectedFailure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
dedent|''
name|'test_expectedFailure'
op|'.'
name|'timeout'
op|'='
number|'0.1'
newline|'\n'
name|'test_expectedFailure'
op|'.'
name|'todo'
op|'='
string|'"i will get it right, eventually"'
newline|'\n'
nl|'\n'
DECL|member|test_skip
name|'def'
name|'test_skip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
dedent|''
name|'test_skip'
op|'.'
name|'timeout'
op|'='
number|'0.1'
newline|'\n'
name|'test_skip'
op|'.'
name|'skip'
op|'='
string|'"i will get it right, eventually"'
newline|'\n'
nl|'\n'
DECL|member|test_errorPropagation
name|'def'
name|'test_errorPropagation'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|timedOut
indent|'        '
name|'def'
name|'timedOut'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'__class__'
op|'.'
name|'timedOut'
op|'='
name|'err'
newline|'\n'
name|'return'
name|'err'
newline|'\n'
dedent|''
name|'d'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'timedOut'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
dedent|''
name|'test_errorPropagation'
op|'.'
name|'timeout'
op|'='
number|'0.1'
newline|'\n'
nl|'\n'
DECL|member|test_calledButNeverCallback
name|'def'
name|'test_calledButNeverCallback'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
DECL|function|neverFire
name|'def'
name|'neverFire'
op|'('
name|'r'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
dedent|''
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'neverFire'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'callback'
op|'('
number|'1'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
dedent|''
name|'test_calledButNeverCallback'
op|'.'
name|'timeout'
op|'='
number|'0.1'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestClassTimeoutAttribute
dedent|''
name|'class'
name|'TestClassTimeoutAttribute'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|timeout
indent|'    '
name|'timeout'
op|'='
number|'0.2'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'d'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|testMethod
dedent|''
name|'def'
name|'testMethod'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'methodCalled'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'d'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
