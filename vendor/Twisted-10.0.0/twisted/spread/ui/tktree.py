begin_unit
comment|'# Copyright (c) 2001-2004 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nWhat I want it to look like:\n\n+- One\n| \\- Two\n| |- Three\n| |- Four\n| +- Five\n| | \\- Six\n| |- Seven\n+- Eight\n| \\- Nine\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'from'
name|'Tkinter'
name|'import'
op|'*'
newline|'\n'
nl|'\n'
DECL|class|Node
name|'class'
name|'Node'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Do whatever you want here.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'item'
op|'='
name|'None'
newline|'\n'
DECL|member|getName
dedent|''
name|'def'
name|'getName'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Return the name of this node in the tree.\n        """'
newline|'\n'
name|'pass'
newline|'\n'
DECL|member|isExpandable
dedent|''
name|'def'
name|'isExpandable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Return true if this node is expandable.\n        """'
newline|'\n'
name|'return'
name|'len'
op|'('
name|'self'
op|'.'
name|'getSubNodes'
op|'('
op|')'
op|')'
op|'>'
number|'0'
newline|'\n'
DECL|member|getSubNodes
dedent|''
name|'def'
name|'getSubNodes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Return the sub nodes of this node.\n        """'
newline|'\n'
name|'return'
op|'['
op|']'
newline|'\n'
DECL|member|gotDoubleClick
dedent|''
name|'def'
name|'gotDoubleClick'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Called when we are double clicked.\n        """'
newline|'\n'
name|'pass'
newline|'\n'
DECL|member|updateMe
dedent|''
name|'def'
name|'updateMe'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Call me when something about me changes, so that my representation\n        changes.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'item'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'item'
op|'.'
name|'update'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|class|FileNode
dedent|''
dedent|''
dedent|''
name|'class'
name|'FileNode'
op|'('
name|'Node'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'Node'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
DECL|member|getName
dedent|''
name|'def'
name|'getName'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'self'
op|'.'
name|'name'
op|')'
newline|'\n'
DECL|member|isExpandable
dedent|''
name|'def'
name|'isExpandable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'self'
op|'.'
name|'name'
op|')'
newline|'\n'
DECL|member|getSubNodes
dedent|''
name|'def'
name|'getSubNodes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'names'
op|'='
name|'map'
op|'('
name|'lambda'
name|'x'
op|','
name|'n'
op|'='
name|'self'
op|'.'
name|'name'
op|':'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'n'
op|','
name|'x'
op|')'
op|','
name|'os'
op|'.'
name|'listdir'
op|'('
name|'self'
op|'.'
name|'name'
op|')'
op|')'
newline|'\n'
name|'return'
name|'map'
op|'('
name|'FileNode'
op|','
name|'names'
op|')'
newline|'\n'
nl|'\n'
DECL|class|TreeItem
dedent|''
dedent|''
name|'class'
name|'TreeItem'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'widget'
op|','
name|'parent'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'widget'
op|'='
name|'widget'
newline|'\n'
name|'self'
op|'.'
name|'node'
op|'='
name|'node'
newline|'\n'
name|'node'
op|'.'
name|'item'
op|'='
name|'self'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'node'
op|'.'
name|'isExpandable'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'expand'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'expand'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'parent'
op|'='
name|'parent'
newline|'\n'
name|'if'
name|'parent'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'level'
op|'='
name|'self'
op|'.'
name|'parent'
op|'.'
name|'level'
op|'+'
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'level'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'first'
op|'='
number|'0'
comment|'# gets set in Tree.expand()'
newline|'\n'
name|'self'
op|'.'
name|'subitems'
op|'='
op|'['
op|']'
newline|'\n'
DECL|member|__del__
dedent|''
name|'def'
name|'__del__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'del'
name|'self'
op|'.'
name|'node'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'widget'
newline|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|'"<Item for Node %s at level %s>"'
op|'%'
op|'('
name|'self'
op|'.'
name|'node'
op|'.'
name|'getName'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'level'
op|')'
newline|'\n'
DECL|member|render
dedent|''
name|'def'
name|'render'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Override in a subclass.\n        """'
newline|'\n'
name|'raise'
name|'NotImplementedError'
newline|'\n'
DECL|member|update
dedent|''
name|'def'
name|'update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'widget'
op|'.'
name|'update'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|class|ListboxTreeItem
dedent|''
dedent|''
name|'class'
name|'ListboxTreeItem'
op|'('
name|'TreeItem'
op|')'
op|':'
newline|'\n'
DECL|member|render
indent|'    '
name|'def'
name|'render'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'start'
op|'='
name|'self'
op|'.'
name|'level'
op|'*'
string|'"|    "'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'expand'
op|'=='
name|'None'
name|'and'
name|'not'
name|'self'
op|'.'
name|'first'
op|':'
newline|'\n'
indent|'            '
name|'start'
op|'='
name|'start'
op|'+'
string|'"|"'
newline|'\n'
dedent|''
name|'elif'
name|'self'
op|'.'
name|'expand'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'start'
op|'='
name|'start'
op|'+'
string|'"L"'
newline|'\n'
dedent|''
name|'elif'
name|'self'
op|'.'
name|'expand'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'start'
op|'='
name|'start'
op|'+'
string|'"+"'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'start'
op|'='
name|'start'
op|'+'
string|'"\\\\"'
newline|'\n'
dedent|''
name|'r'
op|'='
op|'['
name|'start'
op|'+'
string|'"- "'
op|'+'
name|'self'
op|'.'
name|'node'
op|'.'
name|'getName'
op|'('
op|')'
op|']'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'expand'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'i'
name|'in'
name|'self'
op|'.'
name|'subitems'
op|':'
newline|'\n'
indent|'                '
name|'r'
op|'.'
name|'extend'
op|'('
name|'i'
op|'.'
name|'render'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'r'
newline|'\n'
nl|'\n'
DECL|class|ListboxTree
dedent|''
dedent|''
name|'class'
name|'ListboxTree'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'parent'
op|'='
name|'None'
op|','
op|'**'
name|'options'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'box'
op|'='
name|'apply'
op|'('
name|'Listbox'
op|','
op|'['
name|'parent'
op|']'
op|','
name|'options'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'box'
op|'.'
name|'bind'
op|'('
string|'"<Double-1>"'
op|','
name|'self'
op|'.'
name|'flip'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'roots'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'items'
op|'='
op|'['
op|']'
newline|'\n'
DECL|member|pack
dedent|''
name|'def'
name|'pack'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        for packing.\n        """'
newline|'\n'
name|'apply'
op|'('
name|'self'
op|'.'
name|'box'
op|'.'
name|'pack'
op|','
name|'args'
op|','
name|'kw'
op|')'
newline|'\n'
DECL|member|grid
dedent|''
name|'def'
name|'grid'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        for gridding.\n        """'
newline|'\n'
name|'apply'
op|'('
name|'self'
op|'.'
name|'box'
op|'.'
name|'grid'
op|','
name|'args'
op|','
name|'kw'
op|')'
newline|'\n'
DECL|member|yview
dedent|''
name|'def'
name|'yview'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        for scrolling.\n        """'
newline|'\n'
name|'apply'
op|'('
name|'self'
op|'.'
name|'box'
op|'.'
name|'yview'
op|','
name|'args'
op|','
name|'kw'
op|')'
newline|'\n'
DECL|member|addRoot
dedent|''
name|'def'
name|'addRoot'
op|'('
name|'self'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'ListboxTreeItem'
op|'('
name|'self'
op|','
name|'None'
op|','
name|'node'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'roots'
op|'.'
name|'append'
op|'('
name|'r'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'items'
op|'.'
name|'append'
op|'('
name|'r'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'box'
op|'.'
name|'insert'
op|'('
name|'END'
op|','
name|'r'
op|'.'
name|'render'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'return'
name|'r'
newline|'\n'
DECL|member|curselection
dedent|''
name|'def'
name|'curselection'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'c'
op|'='
name|'self'
op|'.'
name|'box'
op|'.'
name|'curselection'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'c'
op|':'
name|'return'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'items'
op|'['
name|'int'
op|'('
name|'c'
op|'['
number|'0'
op|']'
op|')'
op|']'
newline|'\n'
DECL|member|flip
dedent|''
name|'def'
name|'flip'
op|'('
name|'self'
op|','
op|'*'
name|'foo'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'box'
op|'.'
name|'curselection'
op|'('
op|')'
op|':'
name|'return'
newline|'\n'
name|'item'
op|'='
name|'self'
op|'.'
name|'items'
op|'['
name|'int'
op|'('
name|'self'
op|'.'
name|'box'
op|'.'
name|'curselection'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|')'
op|']'
newline|'\n'
name|'if'
name|'item'
op|'.'
name|'expand'
op|'=='
name|'None'
op|':'
name|'return'
newline|'\n'
name|'if'
name|'not'
name|'item'
op|'.'
name|'expand'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'expand'
op|'('
name|'item'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'close'
op|'('
name|'item'
op|')'
newline|'\n'
dedent|''
name|'item'
op|'.'
name|'node'
op|'.'
name|'gotDoubleClick'
op|'('
op|')'
newline|'\n'
DECL|member|expand
dedent|''
name|'def'
name|'expand'
op|'('
name|'self'
op|','
name|'item'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'item'
op|'.'
name|'expand'
name|'or'
name|'item'
op|'.'
name|'expand'
op|'=='
name|'None'
op|':'
name|'return'
newline|'\n'
name|'item'
op|'.'
name|'expand'
op|'='
number|'1'
newline|'\n'
name|'item'
op|'.'
name|'subitems'
op|'='
name|'map'
op|'('
name|'lambda'
name|'x'
op|','
name|'i'
op|'='
name|'item'
op|','
name|'s'
op|'='
name|'self'
op|':'
name|'ListboxTreeItem'
op|'('
name|'s'
op|','
name|'i'
op|','
name|'x'
op|')'
op|','
name|'item'
op|'.'
name|'node'
op|'.'
name|'getSubNodes'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'item'
op|'.'
name|'subitems'
op|':'
newline|'\n'
indent|'            '
name|'item'
op|'.'
name|'subitems'
op|'['
number|'0'
op|']'
op|'.'
name|'first'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'i'
op|'='
name|'self'
op|'.'
name|'items'
op|'.'
name|'index'
op|'('
name|'item'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'items'
op|','
name|'after'
op|'='
name|'self'
op|'.'
name|'items'
op|'['
op|':'
name|'i'
op|'+'
number|'1'
op|']'
op|','
name|'self'
op|'.'
name|'items'
op|'['
name|'i'
op|'+'
number|'1'
op|':'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'items'
op|'='
name|'self'
op|'.'
name|'items'
op|'+'
name|'item'
op|'.'
name|'subitems'
op|'+'
name|'after'
newline|'\n'
name|'c'
op|'='
name|'self'
op|'.'
name|'items'
op|'.'
name|'index'
op|'('
name|'item'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'box'
op|'.'
name|'delete'
op|'('
name|'c'
op|')'
newline|'\n'
name|'r'
op|'='
name|'item'
op|'.'
name|'render'
op|'('
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'r'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'box'
op|'.'
name|'insert'
op|'('
name|'c'
op|','
name|'i'
op|')'
newline|'\n'
name|'c'
op|'='
name|'c'
op|'+'
number|'1'
newline|'\n'
DECL|member|close
dedent|''
dedent|''
name|'def'
name|'close'
op|'('
name|'self'
op|','
name|'item'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'item'
op|'.'
name|'expand'
op|':'
name|'return'
newline|'\n'
name|'item'
op|'.'
name|'expand'
op|'='
number|'0'
newline|'\n'
name|'length'
op|'='
name|'len'
op|'('
name|'item'
op|'.'
name|'subitems'
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'item'
op|'.'
name|'subitems'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'close'
op|'('
name|'i'
op|')'
newline|'\n'
dedent|''
name|'c'
op|'='
name|'self'
op|'.'
name|'items'
op|'.'
name|'index'
op|'('
name|'item'
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'items'
op|'['
name|'c'
op|'+'
number|'1'
op|':'
name|'c'
op|'+'
number|'1'
op|'+'
name|'length'
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'length'
op|'+'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'box'
op|'.'
name|'delete'
op|'('
name|'c'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'box'
op|'.'
name|'insert'
op|'('
name|'c'
op|','
name|'item'
op|'.'
name|'render'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
DECL|member|remove
dedent|''
name|'def'
name|'remove'
op|'('
name|'self'
op|','
name|'item'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'item'
op|'.'
name|'expand'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'close'
op|'('
name|'item'
op|')'
newline|'\n'
dedent|''
name|'c'
op|'='
name|'self'
op|'.'
name|'items'
op|'.'
name|'index'
op|'('
name|'item'
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'items'
op|'['
name|'c'
op|']'
newline|'\n'
name|'if'
name|'item'
op|'.'
name|'parent'
op|':'
newline|'\n'
indent|'            '
name|'item'
op|'.'
name|'parent'
op|'.'
name|'subitems'
op|'.'
name|'remove'
op|'('
name|'item'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'box'
op|'.'
name|'delete'
op|'('
name|'c'
op|')'
newline|'\n'
DECL|member|update
dedent|''
name|'def'
name|'update'
op|'('
name|'self'
op|','
name|'item'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'item'
op|'.'
name|'expand'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'c'
op|'='
name|'self'
op|'.'
name|'items'
op|'.'
name|'index'
op|'('
name|'item'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'box'
op|'.'
name|'delete'
op|'('
name|'c'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'box'
op|'.'
name|'insert'
op|'('
name|'c'
op|','
name|'item'
op|'.'
name|'render'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'item'
op|'.'
name|'expand'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'close'
op|'('
name|'item'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'expand'
op|'('
name|'item'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|'"__main__"'
op|':'
newline|'\n'
DECL|variable|tk
indent|'    '
name|'tk'
op|'='
name|'Tk'
op|'('
op|')'
newline|'\n'
DECL|variable|s
name|'s'
op|'='
name|'Scrollbar'
op|'('
op|')'
newline|'\n'
DECL|variable|t
name|'t'
op|'='
name|'ListboxTree'
op|'('
name|'tk'
op|','
name|'yscrollcommand'
op|'='
name|'s'
op|'.'
name|'set'
op|')'
newline|'\n'
name|'t'
op|'.'
name|'pack'
op|'('
name|'side'
op|'='
name|'LEFT'
op|','
name|'fill'
op|'='
name|'BOTH'
op|')'
newline|'\n'
name|'s'
op|'.'
name|'config'
op|'('
name|'command'
op|'='
name|'t'
op|'.'
name|'yview'
op|')'
newline|'\n'
name|'s'
op|'.'
name|'pack'
op|'('
name|'side'
op|'='
name|'RIGHT'
op|','
name|'fill'
op|'='
name|'Y'
op|')'
newline|'\n'
name|'t'
op|'.'
name|'addRoot'
op|'('
name|'FileNode'
op|'('
string|'"C:/"'
op|')'
op|')'
newline|'\n'
comment|'#mainloop()'
nl|'\n'
dedent|''
endmarker|''
end_unit
