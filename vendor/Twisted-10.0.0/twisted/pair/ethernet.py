begin_unit
comment|'# -*- test-case-name: twisted.pair.test.test_ethernet -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2004 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
comment|'#'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""Support for working directly with ethernet frames"""'
newline|'\n'
nl|'\n'
name|'import'
name|'struct'
newline|'\n'
nl|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'protocol'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'pair'
name|'import'
name|'raw'
newline|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
op|','
name|'Interface'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|IEthernetProtocol
name|'class'
name|'IEthernetProtocol'
op|'('
name|'Interface'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""An interface for protocols that handle Ethernet frames"""'
newline|'\n'
DECL|member|addProto
name|'def'
name|'addProto'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Add an IRawPacketProtocol protocol"""'
newline|'\n'
nl|'\n'
DECL|member|datagramReceived
dedent|''
name|'def'
name|'datagramReceived'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""An Ethernet frame has been received"""'
newline|'\n'
nl|'\n'
DECL|class|EthernetHeader
dedent|''
dedent|''
name|'class'
name|'EthernetHeader'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
op|'('
name|'self'
op|'.'
name|'dest'
op|','
name|'self'
op|'.'
name|'source'
op|','
name|'self'
op|'.'
name|'proto'
op|')'
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|'"!6s6sH"'
op|','
name|'data'
op|'['
op|':'
number|'6'
op|'+'
number|'6'
op|'+'
number|'2'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|class|EthernetProtocol
dedent|''
dedent|''
name|'class'
name|'EthernetProtocol'
op|'('
name|'protocol'
op|'.'
name|'AbstractDatagramProtocol'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'implements'
op|'('
name|'IEthernetProtocol'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'etherProtos'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|addProto
dedent|''
name|'def'
name|'addProto'
op|'('
name|'self'
op|','
name|'num'
op|','
name|'proto'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'proto'
op|'='
name|'raw'
op|'.'
name|'IRawPacketProtocol'
op|'('
name|'proto'
op|')'
newline|'\n'
name|'if'
name|'num'
op|'<'
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'TypeError'
op|','
string|"'Added protocol must be positive or zero'"
newline|'\n'
dedent|''
name|'if'
name|'num'
op|'>='
number|'2'
op|'**'
number|'16'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'TypeError'
op|','
string|"'Added protocol must fit in 16 bits'"
newline|'\n'
dedent|''
name|'if'
name|'num'
name|'not'
name|'in'
name|'self'
op|'.'
name|'etherProtos'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'etherProtos'
op|'['
name|'num'
op|']'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'etherProtos'
op|'['
name|'num'
op|']'
op|'.'
name|'append'
op|'('
name|'proto'
op|')'
newline|'\n'
nl|'\n'
DECL|member|datagramReceived
dedent|''
name|'def'
name|'datagramReceived'
op|'('
name|'self'
op|','
name|'data'
op|','
name|'partial'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'header'
op|'='
name|'EthernetHeader'
op|'('
name|'data'
op|'['
op|':'
number|'14'
op|']'
op|')'
newline|'\n'
name|'for'
name|'proto'
name|'in'
name|'self'
op|'.'
name|'etherProtos'
op|'.'
name|'get'
op|'('
name|'header'
op|'.'
name|'proto'
op|','
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'proto'
op|'.'
name|'datagramReceived'
op|'('
name|'data'
op|'='
name|'data'
op|'['
number|'14'
op|':'
op|']'
op|','
nl|'\n'
name|'partial'
op|'='
name|'partial'
op|','
nl|'\n'
name|'dest'
op|'='
name|'header'
op|'.'
name|'dest'
op|','
nl|'\n'
name|'source'
op|'='
name|'header'
op|'.'
name|'source'
op|','
nl|'\n'
name|'protocol'
op|'='
name|'header'
op|'.'
name|'proto'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
