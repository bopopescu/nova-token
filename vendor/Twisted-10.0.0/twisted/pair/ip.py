begin_unit
comment|'# -*- test-case-name: twisted.pair.test.test_ip -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2004 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
comment|'#'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""Support for working directly with IP packets"""'
newline|'\n'
nl|'\n'
name|'import'
name|'struct'
newline|'\n'
name|'import'
name|'socket'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'protocol'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'pair'
name|'import'
name|'raw'
newline|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|IPHeader
name|'class'
name|'IPHeader'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
op|'('
name|'ihlversion'
op|','
name|'self'
op|'.'
name|'tos'
op|','
name|'self'
op|'.'
name|'tot_len'
op|','
name|'self'
op|'.'
name|'fragment_id'
op|','
name|'frag_off'
op|','
nl|'\n'
name|'self'
op|'.'
name|'ttl'
op|','
name|'self'
op|'.'
name|'protocol'
op|','
name|'self'
op|'.'
name|'check'
op|','
name|'saddr'
op|','
name|'daddr'
op|')'
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|'"!BBHHHBBH4s4s"'
op|','
name|'data'
op|'['
op|':'
number|'20'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'saddr'
op|'='
name|'socket'
op|'.'
name|'inet_ntoa'
op|'('
name|'saddr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'daddr'
op|'='
name|'socket'
op|'.'
name|'inet_ntoa'
op|'('
name|'daddr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'version'
op|'='
name|'ihlversion'
op|'&'
number|'0x0F'
newline|'\n'
name|'self'
op|'.'
name|'ihl'
op|'='
op|'('
op|'('
name|'ihlversion'
op|'&'
number|'0xF0'
op|')'
op|'>>'
number|'4'
op|')'
op|'<<'
number|'2'
newline|'\n'
name|'self'
op|'.'
name|'fragment_offset'
op|'='
name|'frag_off'
op|'&'
number|'0x1FFF'
newline|'\n'
name|'self'
op|'.'
name|'dont_fragment'
op|'='
op|'('
name|'frag_off'
op|'&'
number|'0x4000'
op|'!='
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'more_fragments'
op|'='
op|'('
name|'frag_off'
op|'&'
number|'0x2000'
op|'!='
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|MAX_SIZE
dedent|''
dedent|''
name|'MAX_SIZE'
op|'='
number|'2L'
op|'**'
number|'32'
newline|'\n'
nl|'\n'
DECL|class|IPProtocol
name|'class'
name|'IPProtocol'
op|'('
name|'protocol'
op|'.'
name|'AbstractDatagramProtocol'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'implements'
op|'('
name|'raw'
op|'.'
name|'IRawPacketProtocol'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ipProtos'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|addProto
dedent|''
name|'def'
name|'addProto'
op|'('
name|'self'
op|','
name|'num'
op|','
name|'proto'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'proto'
op|'='
name|'raw'
op|'.'
name|'IRawDatagramProtocol'
op|'('
name|'proto'
op|')'
newline|'\n'
name|'if'
name|'num'
op|'<'
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'TypeError'
op|','
string|"'Added protocol must be positive or zero'"
newline|'\n'
dedent|''
name|'if'
name|'num'
op|'>='
name|'MAX_SIZE'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'TypeError'
op|','
string|"'Added protocol must fit in 32 bits'"
newline|'\n'
dedent|''
name|'if'
name|'num'
name|'not'
name|'in'
name|'self'
op|'.'
name|'ipProtos'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'ipProtos'
op|'['
name|'num'
op|']'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'ipProtos'
op|'['
name|'num'
op|']'
op|'.'
name|'append'
op|'('
name|'proto'
op|')'
newline|'\n'
nl|'\n'
DECL|member|datagramReceived
dedent|''
name|'def'
name|'datagramReceived'
op|'('
name|'self'
op|','
nl|'\n'
name|'data'
op|','
nl|'\n'
name|'partial'
op|','
nl|'\n'
name|'dest'
op|','
nl|'\n'
name|'source'
op|','
nl|'\n'
name|'protocol'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'header'
op|'='
name|'IPHeader'
op|'('
name|'data'
op|')'
newline|'\n'
name|'for'
name|'proto'
name|'in'
name|'self'
op|'.'
name|'ipProtos'
op|'.'
name|'get'
op|'('
name|'header'
op|'.'
name|'protocol'
op|','
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'proto'
op|'.'
name|'datagramReceived'
op|'('
name|'data'
op|'='
name|'data'
op|'['
number|'20'
op|':'
op|']'
op|','
nl|'\n'
name|'partial'
op|'='
name|'partial'
op|','
nl|'\n'
name|'source'
op|'='
name|'header'
op|'.'
name|'saddr'
op|','
nl|'\n'
name|'dest'
op|'='
name|'header'
op|'.'
name|'daddr'
op|','
nl|'\n'
name|'protocol'
op|'='
name|'header'
op|'.'
name|'protocol'
op|','
nl|'\n'
name|'version'
op|'='
name|'header'
op|'.'
name|'version'
op|','
nl|'\n'
name|'ihl'
op|'='
name|'header'
op|'.'
name|'ihl'
op|','
nl|'\n'
name|'tos'
op|'='
name|'header'
op|'.'
name|'tos'
op|','
nl|'\n'
name|'tot_len'
op|'='
name|'header'
op|'.'
name|'tot_len'
op|','
nl|'\n'
name|'fragment_id'
op|'='
name|'header'
op|'.'
name|'fragment_id'
op|','
nl|'\n'
name|'fragment_offset'
op|'='
name|'header'
op|'.'
name|'fragment_offset'
op|','
nl|'\n'
name|'dont_fragment'
op|'='
name|'header'
op|'.'
name|'dont_fragment'
op|','
nl|'\n'
name|'more_fragments'
op|'='
name|'header'
op|'.'
name|'more_fragments'
op|','
nl|'\n'
name|'ttl'
op|'='
name|'header'
op|'.'
name|'ttl'
op|','
nl|'\n'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
