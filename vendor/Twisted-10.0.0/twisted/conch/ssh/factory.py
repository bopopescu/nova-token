begin_unit
comment|'# Copyright (c) 2001-2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nA Factory for SSH servers, along with an OpenSSHFactory to use the same\ndata sources as OpenSSH.\n\nMaintainer: Paul Swartz\n"""'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'resource'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
DECL|variable|resource
indent|'    '
name|'resource'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'protocol'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'reflect'
name|'import'
name|'qual'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'conch'
name|'import'
name|'error'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'conch'
op|'.'
name|'ssh'
name|'import'
name|'keys'
newline|'\n'
name|'import'
name|'transport'
op|','
name|'userauth'
op|','
name|'connection'
newline|'\n'
nl|'\n'
name|'import'
name|'random'
newline|'\n'
name|'import'
name|'warnings'
newline|'\n'
nl|'\n'
DECL|class|SSHFactory
name|'class'
name|'SSHFactory'
op|'('
name|'protocol'
op|'.'
name|'Factory'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|protocol
indent|'    '
name|'protocol'
op|'='
name|'transport'
op|'.'
name|'SSHServerTransport'
newline|'\n'
nl|'\n'
DECL|variable|services
name|'services'
op|'='
op|'{'
nl|'\n'
string|"'ssh-userauth'"
op|':'
name|'userauth'
op|'.'
name|'SSHUserAuthServer'
op|','
nl|'\n'
string|"'ssh-connection'"
op|':'
name|'connection'
op|'.'
name|'SSHConnection'
nl|'\n'
op|'}'
newline|'\n'
DECL|member|startFactory
name|'def'
name|'startFactory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# disable coredumps'
nl|'\n'
indent|'        '
name|'if'
name|'resource'
op|':'
newline|'\n'
indent|'            '
name|'resource'
op|'.'
name|'setrlimit'
op|'('
name|'resource'
op|'.'
name|'RLIMIT_CORE'
op|','
op|'('
number|'0'
op|','
number|'0'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'INSECURE: unable to disable core dumps.'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'self'
op|','
string|"'publicKeys'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'publicKeys'
op|'='
name|'self'
op|'.'
name|'getPublicKeys'
op|'('
op|')'
newline|'\n'
dedent|''
name|'for'
name|'keyType'
op|','
name|'value'
name|'in'
name|'self'
op|'.'
name|'publicKeys'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'isinstance'
op|'('
name|'value'
op|','
name|'str'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'warnings'
op|'.'
name|'warn'
op|'('
string|'"Returning a mapping from strings to "'
nl|'\n'
string|'"strings from getPublicKeys()/publicKeys (in %s) "'
nl|'\n'
string|'"is deprecated.  Return a mapping from "'
nl|'\n'
string|'"strings to Key objects instead."'
op|'%'
nl|'\n'
op|'('
name|'qual'
op|'('
name|'self'
op|'.'
name|'__class__'
op|')'
op|')'
op|','
nl|'\n'
name|'DeprecationWarning'
op|','
name|'stacklevel'
op|'='
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'publicKeys'
op|'['
name|'keyType'
op|']'
op|'='
name|'keys'
op|'.'
name|'Key'
op|'.'
name|'fromString'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'self'
op|','
string|"'privateKeys'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'privateKeys'
op|'='
name|'self'
op|'.'
name|'getPrivateKeys'
op|'('
op|')'
newline|'\n'
dedent|''
name|'for'
name|'keyType'
op|','
name|'value'
name|'in'
name|'self'
op|'.'
name|'privateKeys'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'value'
op|','
name|'keys'
op|'.'
name|'Key'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'warnings'
op|'.'
name|'warn'
op|'('
string|'"Returning a mapping from strings to "'
nl|'\n'
string|'"PyCrypto key objects from "'
nl|'\n'
string|'"getPrivateKeys()/privateKeys (in %s) "'
nl|'\n'
string|'"is deprecated.  Return a mapping from "'
nl|'\n'
string|'"strings to Key objects instead."'
op|'%'
nl|'\n'
op|'('
name|'qual'
op|'('
name|'self'
op|'.'
name|'__class__'
op|')'
op|','
op|')'
op|','
nl|'\n'
name|'DeprecationWarning'
op|','
name|'stacklevel'
op|'='
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'privateKeys'
op|'['
name|'keyType'
op|']'
op|'='
name|'keys'
op|'.'
name|'Key'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'publicKeys'
name|'or'
name|'not'
name|'self'
op|'.'
name|'privateKeys'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'error'
op|'.'
name|'ConchError'
op|'('
string|"'no host keys, failing'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'self'
op|','
string|"'primes'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'primes'
op|'='
name|'self'
op|'.'
name|'getPrimes'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|buildProtocol
dedent|''
dedent|''
name|'def'
name|'buildProtocol'
op|'('
name|'self'
op|','
name|'addr'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'t'
op|'='
name|'protocol'
op|'.'
name|'Factory'
op|'.'
name|'buildProtocol'
op|'('
name|'self'
op|','
name|'addr'
op|')'
newline|'\n'
name|'t'
op|'.'
name|'supportedPublicKeys'
op|'='
name|'self'
op|'.'
name|'privateKeys'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'primes'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'disabling diffie-hellman-group-exchange because we '"
nl|'\n'
string|"'cannot find moduli file'"
op|')'
newline|'\n'
name|'ske'
op|'='
name|'t'
op|'.'
name|'supportedKeyExchanges'
op|'['
op|':'
op|']'
newline|'\n'
name|'ske'
op|'.'
name|'remove'
op|'('
string|"'diffie-hellman-group-exchange-sha1'"
op|')'
newline|'\n'
name|'t'
op|'.'
name|'supportedKeyExchanges'
op|'='
name|'ske'
newline|'\n'
dedent|''
name|'return'
name|'t'
newline|'\n'
nl|'\n'
DECL|member|getPublicKeys
dedent|''
name|'def'
name|'getPublicKeys'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Called when the factory is started to get the public portions of the\n        servers host keys.  Returns a dictionary mapping SSH key types to\n        public key strings.\n\n        @rtype: C{dict}\n        """'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
string|"'getPublicKeys unimplemented'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|getPrivateKeys
dedent|''
name|'def'
name|'getPrivateKeys'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Called when the factory is started to get the  private portions of the\n        servers host keys.  Returns a dictionary mapping SSH key types to\n        C{Crypto.PublicKey.pubkey.pubkey} objects.\n\n        @rtype: C{dict}\n        """'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
string|"'getPrivateKeys unimplemented'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|getPrimes
dedent|''
name|'def'
name|'getPrimes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Called when the factory is started to get Diffie-Hellman generators and\n        primes to use.  Returns a dictionary mapping number of bits to lists\n        of tuple of (generator, prime).\n\n        @rtype: C{dict}\n        """'
newline|'\n'
nl|'\n'
DECL|member|getDHPrime
dedent|''
name|'def'
name|'getDHPrime'
op|'('
name|'self'
op|','
name|'bits'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Return a tuple of (g, p) for a Diffe-Hellman process, with p being as\n        close to bits bits as possible.\n\n        @type bits: C{int}\n        @rtype:     C{tuple}\n        """'
newline|'\n'
name|'primesKeys'
op|'='
name|'self'
op|'.'
name|'primes'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'primesKeys'
op|'.'
name|'sort'
op|'('
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'cmp'
op|'('
name|'abs'
op|'('
name|'x'
op|'-'
name|'bits'
op|')'
op|','
name|'abs'
op|'('
name|'y'
op|'-'
name|'bits'
op|')'
op|')'
op|')'
newline|'\n'
name|'realBits'
op|'='
name|'primesKeys'
op|'['
number|'0'
op|']'
newline|'\n'
name|'return'
name|'random'
op|'.'
name|'choice'
op|'('
name|'self'
op|'.'
name|'primes'
op|'['
name|'realBits'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getService
dedent|''
name|'def'
name|'getService'
op|'('
name|'self'
op|','
name|'transport'
op|','
name|'service'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Return a class to use as a service for the given transport.\n\n        @type transport:    L{transport.SSHServerTransport}\n        @type service:      C{str}\n        @rtype:             subclass of L{service.SSHService}\n        """'
newline|'\n'
name|'if'
name|'service'
op|'=='
string|"'ssh-userauth'"
name|'or'
name|'hasattr'
op|'('
name|'transport'
op|','
string|"'avatar'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'services'
op|'['
name|'service'
op|']'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
