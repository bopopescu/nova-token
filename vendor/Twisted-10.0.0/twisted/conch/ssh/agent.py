begin_unit
comment|'# Copyright (c) 2001-2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nImplements the SSH v2 key agent protocol.  This protocol is documented in the\nSSH source code, in the file\nU{PROTOCOL.agent<http://www.openbsd.org/cgi-bin/cvsweb/src/usr.bin/ssh/PROTOCOL.agent>}.\n\nMaintainer: Paul Swartz\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'struct'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'conch'
op|'.'
name|'ssh'
op|'.'
name|'common'
name|'import'
name|'NS'
op|','
name|'getNS'
op|','
name|'getMP'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'conch'
op|'.'
name|'error'
name|'import'
name|'ConchError'
op|','
name|'MissingKeyStoreError'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'conch'
op|'.'
name|'ssh'
name|'import'
name|'keys'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'defer'
op|','
name|'protocol'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|SSHAgentClient
name|'class'
name|'SSHAgentClient'
op|'('
name|'protocol'
op|'.'
name|'Protocol'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    The client side of the SSH agent protocol.  This is equivalent to\n    ssh-add(1) and can be used with either ssh-agent(1) or the SSHAgentServer\n    protocol, also in this package.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'buf'
op|'='
string|"''"
newline|'\n'
name|'self'
op|'.'
name|'deferreds'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|dataReceived
dedent|''
name|'def'
name|'dataReceived'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'buf'
op|'+='
name|'data'
newline|'\n'
name|'while'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'buf'
op|')'
op|'<='
number|'4'
op|':'
newline|'\n'
indent|'                '
name|'return'
newline|'\n'
dedent|''
name|'packLen'
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'!L'"
op|','
name|'self'
op|'.'
name|'buf'
op|'['
op|':'
number|'4'
op|']'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'buf'
op|')'
op|'<'
number|'4'
op|'+'
name|'packLen'
op|':'
newline|'\n'
indent|'                '
name|'return'
newline|'\n'
dedent|''
name|'packet'
op|','
name|'self'
op|'.'
name|'buf'
op|'='
name|'self'
op|'.'
name|'buf'
op|'['
number|'4'
op|':'
number|'4'
op|'+'
name|'packLen'
op|']'
op|','
name|'self'
op|'.'
name|'buf'
op|'['
number|'4'
op|'+'
name|'packLen'
op|':'
op|']'
newline|'\n'
name|'reqType'
op|'='
name|'ord'
op|'('
name|'packet'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'deferreds'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
name|'if'
name|'reqType'
op|'=='
name|'AGENT_FAILURE'
op|':'
newline|'\n'
indent|'                '
name|'d'
op|'.'
name|'errback'
op|'('
name|'ConchError'
op|'('
string|"'agent failure'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'reqType'
op|'=='
name|'AGENT_SUCCESS'
op|':'
newline|'\n'
indent|'                '
name|'d'
op|'.'
name|'callback'
op|'('
string|"''"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'d'
op|'.'
name|'callback'
op|'('
name|'packet'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|sendRequest
dedent|''
dedent|''
dedent|''
name|'def'
name|'sendRequest'
op|'('
name|'self'
op|','
name|'reqType'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pack'
op|'='
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'!LB'"
op|','
name|'len'
op|'('
name|'data'
op|')'
op|'+'
number|'1'
op|','
name|'reqType'
op|')'
op|'+'
name|'data'
newline|'\n'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
name|'pack'
op|')'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'deferreds'
op|'.'
name|'append'
op|'('
name|'d'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|requestIdentities
dedent|''
name|'def'
name|'requestIdentities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        @return: A L{Deferred} which will fire with a list of all keys found in\n            the SSH agent. The list of keys is comprised of (public key blob,\n            comment) tuples.\n        """'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'sendRequest'
op|'('
name|'AGENTC_REQUEST_IDENTITIES'
op|','
string|"''"
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbRequestIdentities'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_cbRequestIdentities
dedent|''
name|'def'
name|'_cbRequestIdentities'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Unpack a collection of identities into a list of tuples comprised of\n        public key blobs and comments.\n        """'
newline|'\n'
name|'if'
name|'ord'
op|'('
name|'data'
op|'['
number|'0'
op|']'
op|')'
op|'!='
name|'AGENT_IDENTITIES_ANSWER'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ConchError'
op|'('
string|"'unexpected response: %i'"
op|'%'
name|'ord'
op|'('
name|'data'
op|'['
number|'0'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'numKeys'
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'!L'"
op|','
name|'data'
op|'['
number|'1'
op|':'
number|'5'
op|']'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'keys'
op|'='
op|'['
op|']'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'5'
op|':'
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'numKeys'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'blob'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'comment'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'keys'
op|'.'
name|'append'
op|'('
op|'('
name|'blob'
op|','
name|'comment'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'keys'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|addIdentity
dedent|''
name|'def'
name|'addIdentity'
op|'('
name|'self'
op|','
name|'blob'
op|','
name|'comment'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Add a private key blob to the agent\'s collection of keys.\n        """'
newline|'\n'
name|'req'
op|'='
name|'blob'
newline|'\n'
name|'req'
op|'+='
name|'NS'
op|'('
name|'comment'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'sendRequest'
op|'('
name|'AGENTC_ADD_IDENTITY'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|signData
dedent|''
name|'def'
name|'signData'
op|'('
name|'self'
op|','
name|'blob'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Request that the agent sign the given C{data} with the private key\n        which corresponds to the public key given by C{blob}.  The private\n        key should have been added to the agent already.\n\n        @type blob: C{str}\n        @type data: C{str}\n        @return: A L{Deferred} which fires with a signature for given data\n            created with the given key.\n        """'
newline|'\n'
name|'req'
op|'='
name|'NS'
op|'('
name|'blob'
op|')'
newline|'\n'
name|'req'
op|'+='
name|'NS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'req'
op|'+='
string|"'\\000\\000\\000\\000'"
comment|'# flags'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'sendRequest'
op|'('
name|'AGENTC_SIGN_REQUEST'
op|','
name|'req'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbSignData'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_cbSignData
dedent|''
name|'def'
name|'_cbSignData'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'ord'
op|'('
name|'data'
op|'['
number|'0'
op|']'
op|')'
op|'!='
name|'AGENT_SIGN_RESPONSE'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ConchError'
op|'('
string|"'unexpected data: %i'"
op|'%'
name|'ord'
op|'('
name|'data'
op|'['
number|'0'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'signature'
op|'='
name|'getNS'
op|'('
name|'data'
op|'['
number|'1'
op|':'
op|']'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'return'
name|'signature'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|removeIdentity
dedent|''
name|'def'
name|'removeIdentity'
op|'('
name|'self'
op|','
name|'blob'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Remove the private key corresponding to the public key in blob from the\n        running agent.\n        """'
newline|'\n'
name|'req'
op|'='
name|'NS'
op|'('
name|'blob'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'sendRequest'
op|'('
name|'AGENTC_REMOVE_IDENTITY'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|removeAllIdentities
dedent|''
name|'def'
name|'removeAllIdentities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Remove all keys from the running agent.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'sendRequest'
op|'('
name|'AGENTC_REMOVE_ALL_IDENTITIES'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|SSHAgentServer
dedent|''
dedent|''
name|'class'
name|'SSHAgentServer'
op|'('
name|'protocol'
op|'.'
name|'Protocol'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    The server side of the SSH agent protocol.  This is equivalent to\n    ssh-agent(1) and can be used with either ssh-add(1) or the SSHAgentClient\n    protocol, also in this package.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'buf'
op|'='
string|"''"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|dataReceived
dedent|''
name|'def'
name|'dataReceived'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'buf'
op|'+='
name|'data'
newline|'\n'
name|'while'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'buf'
op|')'
op|'<='
number|'4'
op|':'
newline|'\n'
indent|'                '
name|'return'
newline|'\n'
dedent|''
name|'packLen'
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'!L'"
op|','
name|'self'
op|'.'
name|'buf'
op|'['
op|':'
number|'4'
op|']'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'buf'
op|')'
op|'<'
number|'4'
op|'+'
name|'packLen'
op|':'
newline|'\n'
indent|'                '
name|'return'
newline|'\n'
dedent|''
name|'packet'
op|','
name|'self'
op|'.'
name|'buf'
op|'='
name|'self'
op|'.'
name|'buf'
op|'['
number|'4'
op|':'
number|'4'
op|'+'
name|'packLen'
op|']'
op|','
name|'self'
op|'.'
name|'buf'
op|'['
number|'4'
op|'+'
name|'packLen'
op|':'
op|']'
newline|'\n'
name|'reqType'
op|'='
name|'ord'
op|'('
name|'packet'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'reqName'
op|'='
name|'messages'
op|'.'
name|'get'
op|'('
name|'reqType'
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'reqName'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'sendResponse'
op|'('
name|'AGENT_FAILURE'
op|','
string|"''"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'f'
op|'='
name|'getattr'
op|'('
name|'self'
op|','
string|"'agentc_%s'"
op|'%'
name|'reqName'
op|')'
newline|'\n'
name|'if'
name|'getattr'
op|'('
name|'self'
op|'.'
name|'factory'
op|','
string|"'keys'"
op|','
name|'None'
op|')'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'sendResponse'
op|'('
name|'AGENT_FAILURE'
op|','
string|"''"
op|')'
newline|'\n'
name|'raise'
name|'MissingKeyStoreError'
op|'('
op|')'
newline|'\n'
dedent|''
name|'f'
op|'('
name|'packet'
op|'['
number|'1'
op|':'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|sendResponse
dedent|''
dedent|''
dedent|''
name|'def'
name|'sendResponse'
op|'('
name|'self'
op|','
name|'reqType'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pack'
op|'='
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'!LB'"
op|','
name|'len'
op|'('
name|'data'
op|')'
op|'+'
number|'1'
op|','
name|'reqType'
op|')'
op|'+'
name|'data'
newline|'\n'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
name|'pack'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|agentc_REQUEST_IDENTITIES
dedent|''
name|'def'
name|'agentc_REQUEST_IDENTITIES'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Return all of the identities that have been added to the server\n        """'
newline|'\n'
name|'assert'
name|'data'
op|'=='
string|"''"
newline|'\n'
name|'numKeys'
op|'='
name|'len'
op|'('
name|'self'
op|'.'
name|'factory'
op|'.'
name|'keys'
op|')'
newline|'\n'
name|'resp'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'resp'
op|'.'
name|'append'
op|'('
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'!L'"
op|','
name|'numKeys'
op|')'
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'comment'
name|'in'
name|'self'
op|'.'
name|'factory'
op|'.'
name|'keys'
op|'.'
name|'itervalues'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'.'
name|'append'
op|'('
name|'NS'
op|'('
name|'key'
op|'.'
name|'blob'
op|'('
op|')'
op|')'
op|')'
comment|'# yes, wrapped in an NS'
newline|'\n'
name|'resp'
op|'.'
name|'append'
op|'('
name|'NS'
op|'('
name|'comment'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'sendResponse'
op|'('
name|'AGENT_IDENTITIES_ANSWER'
op|','
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|agentc_SIGN_REQUEST
dedent|''
name|'def'
name|'agentc_SIGN_REQUEST'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Data is a structure with a reference to an already added key object and\n        some data that the clients wants signed with that key.  If the key\n        object wasn\'t loaded, return AGENT_FAILURE, else return the signature.\n        """'
newline|'\n'
name|'blob'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'if'
name|'blob'
name|'not'
name|'in'
name|'self'
op|'.'
name|'factory'
op|'.'
name|'keys'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'sendResponse'
op|'('
name|'AGENT_FAILURE'
op|','
string|"''"
op|')'
newline|'\n'
dedent|''
name|'signData'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'assert'
name|'data'
op|'=='
string|"'\\000\\000\\000\\000'"
newline|'\n'
name|'self'
op|'.'
name|'sendResponse'
op|'('
name|'AGENT_SIGN_RESPONSE'
op|','
name|'NS'
op|'('
name|'self'
op|'.'
name|'factory'
op|'.'
name|'keys'
op|'['
name|'blob'
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'sign'
op|'('
name|'signData'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|agentc_ADD_IDENTITY
dedent|''
name|'def'
name|'agentc_ADD_IDENTITY'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Adds a private key to the agent\'s collection of identities.  On\n        subsequent interactions, the private key can be accessed using only the\n        corresponding public key.\n        """'
newline|'\n'
nl|'\n'
comment|'# need to pre-read the key data so we can get past it to the comment string'
nl|'\n'
name|'keyType'
op|','
name|'rest'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'if'
name|'keyType'
op|'=='
string|"'ssh-rsa'"
op|':'
newline|'\n'
indent|'            '
name|'nmp'
op|'='
number|'6'
newline|'\n'
dedent|''
name|'elif'
name|'keyType'
op|'=='
string|"'ssh-dss'"
op|':'
newline|'\n'
indent|'            '
name|'nmp'
op|'='
number|'5'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'keys'
op|'.'
name|'BadKeyError'
op|'('
string|"'unknown blob type: %s'"
op|'%'
name|'keyType'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'rest'
op|'='
name|'getMP'
op|'('
name|'rest'
op|','
name|'nmp'
op|')'
op|'['
op|'-'
number|'1'
op|']'
comment|'# ignore the key data for now, we just want the comment'
newline|'\n'
name|'comment'
op|','
name|'rest'
op|'='
name|'getNS'
op|'('
name|'rest'
op|')'
comment|'# the comment, tacked onto the end of the key blob'
newline|'\n'
nl|'\n'
name|'k'
op|'='
name|'keys'
op|'.'
name|'Key'
op|'.'
name|'fromString'
op|'('
name|'data'
op|','
name|'type'
op|'='
string|"'private_blob'"
op|')'
comment|'# not wrapped in NS here'
newline|'\n'
name|'self'
op|'.'
name|'factory'
op|'.'
name|'keys'
op|'['
name|'k'
op|'.'
name|'blob'
op|'('
op|')'
op|']'
op|'='
op|'('
name|'k'
op|','
name|'comment'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sendResponse'
op|'('
name|'AGENT_SUCCESS'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|agentc_REMOVE_IDENTITY
dedent|''
name|'def'
name|'agentc_REMOVE_IDENTITY'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Remove a specific key from the agent\'s collection of identities.\n        """'
newline|'\n'
name|'blob'
op|','
name|'_'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'k'
op|'='
name|'keys'
op|'.'
name|'Key'
op|'.'
name|'fromString'
op|'('
name|'blob'
op|','
name|'type'
op|'='
string|"'blob'"
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'factory'
op|'.'
name|'keys'
op|'['
name|'k'
op|'.'
name|'blob'
op|'('
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'sendResponse'
op|'('
name|'AGENT_SUCCESS'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|agentc_REMOVE_ALL_IDENTITIES
dedent|''
name|'def'
name|'agentc_REMOVE_ALL_IDENTITIES'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Remove all keys from the agent\'s collection of identities.\n        """'
newline|'\n'
name|'assert'
name|'data'
op|'=='
string|"''"
newline|'\n'
name|'self'
op|'.'
name|'factory'
op|'.'
name|'keys'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sendResponse'
op|'('
name|'AGENT_SUCCESS'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
comment|"# v1 messages that we ignore because we don't keep v1 keys"
nl|'\n'
comment|'# open-ssh sends both v1 and v2 commands, so we have to'
nl|'\n'
comment|'# do no-ops for v1 commands or we\'ll get "bad request" errors'
nl|'\n'
nl|'\n'
DECL|member|agentc_REQUEST_RSA_IDENTITIES
dedent|''
name|'def'
name|'agentc_REQUEST_RSA_IDENTITIES'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        v1 message for listing RSA1 keys; superseded by\n        agentc_REQUEST_IDENTITIES, which handles different key types.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'sendResponse'
op|'('
name|'AGENT_RSA_IDENTITIES_ANSWER'
op|','
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'!L'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|agentc_REMOVE_RSA_IDENTITY
dedent|''
name|'def'
name|'agentc_REMOVE_RSA_IDENTITY'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        v1 message for removing RSA1 keys; superseded by\n        agentc_REMOVE_IDENTITY, which handles different key types.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'sendResponse'
op|'('
name|'AGENT_SUCCESS'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|agentc_REMOVE_ALL_RSA_IDENTITIES
dedent|''
name|'def'
name|'agentc_REMOVE_ALL_RSA_IDENTITIES'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        v1 message for removing all RSA1 keys; superseded by\n        agentc_REMOVE_ALL_IDENTITIES, which handles different key types.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'sendResponse'
op|'('
name|'AGENT_SUCCESS'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|AGENTC_REQUEST_RSA_IDENTITIES
dedent|''
dedent|''
name|'AGENTC_REQUEST_RSA_IDENTITIES'
op|'='
number|'1'
newline|'\n'
DECL|variable|AGENT_RSA_IDENTITIES_ANSWER
name|'AGENT_RSA_IDENTITIES_ANSWER'
op|'='
number|'2'
newline|'\n'
DECL|variable|AGENT_FAILURE
name|'AGENT_FAILURE'
op|'='
number|'5'
newline|'\n'
DECL|variable|AGENT_SUCCESS
name|'AGENT_SUCCESS'
op|'='
number|'6'
newline|'\n'
nl|'\n'
DECL|variable|AGENTC_REMOVE_RSA_IDENTITY
name|'AGENTC_REMOVE_RSA_IDENTITY'
op|'='
number|'8'
newline|'\n'
DECL|variable|AGENTC_REMOVE_ALL_RSA_IDENTITIES
name|'AGENTC_REMOVE_ALL_RSA_IDENTITIES'
op|'='
number|'9'
newline|'\n'
nl|'\n'
DECL|variable|AGENTC_REQUEST_IDENTITIES
name|'AGENTC_REQUEST_IDENTITIES'
op|'='
number|'11'
newline|'\n'
DECL|variable|AGENT_IDENTITIES_ANSWER
name|'AGENT_IDENTITIES_ANSWER'
op|'='
number|'12'
newline|'\n'
DECL|variable|AGENTC_SIGN_REQUEST
name|'AGENTC_SIGN_REQUEST'
op|'='
number|'13'
newline|'\n'
DECL|variable|AGENT_SIGN_RESPONSE
name|'AGENT_SIGN_RESPONSE'
op|'='
number|'14'
newline|'\n'
DECL|variable|AGENTC_ADD_IDENTITY
name|'AGENTC_ADD_IDENTITY'
op|'='
number|'17'
newline|'\n'
DECL|variable|AGENTC_REMOVE_IDENTITY
name|'AGENTC_REMOVE_IDENTITY'
op|'='
number|'18'
newline|'\n'
DECL|variable|AGENTC_REMOVE_ALL_IDENTITIES
name|'AGENTC_REMOVE_ALL_IDENTITIES'
op|'='
number|'19'
newline|'\n'
nl|'\n'
DECL|variable|messages
name|'messages'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'name'
op|','
name|'value'
name|'in'
name|'locals'
op|'('
op|')'
op|'.'
name|'copy'
op|'('
op|')'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'name'
op|'['
op|':'
number|'7'
op|']'
op|'=='
string|"'AGENTC_'"
op|':'
newline|'\n'
indent|'        '
name|'messages'
op|'['
name|'value'
op|']'
op|'='
name|'name'
op|'['
number|'7'
op|':'
op|']'
comment|"# doesn't handle doubles"
newline|'\n'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
