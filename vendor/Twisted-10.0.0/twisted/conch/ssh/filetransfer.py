begin_unit
comment|'# -*- test-case-name: twisted.conch.test.test_filetransfer -*-'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Copyright (c) 2001-2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
name|'import'
name|'struct'
op|','
name|'errno'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'defer'
op|','
name|'protocol'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'failure'
op|','
name|'log'
newline|'\n'
nl|'\n'
name|'from'
name|'common'
name|'import'
name|'NS'
op|','
name|'getNS'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'conch'
op|'.'
name|'interfaces'
name|'import'
name|'ISFTPServer'
op|','
name|'ISFTPFile'
newline|'\n'
nl|'\n'
name|'from'
name|'zope'
name|'import'
name|'interface'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|FileTransferBase
name|'class'
name|'FileTransferBase'
op|'('
name|'protocol'
op|'.'
name|'Protocol'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|versions
indent|'    '
name|'versions'
op|'='
op|'('
number|'3'
op|','
op|')'
newline|'\n'
nl|'\n'
DECL|variable|packetTypes
name|'packetTypes'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'buf'
op|'='
string|"''"
newline|'\n'
name|'self'
op|'.'
name|'otherVersion'
op|'='
name|'None'
comment|'# this gets set'
newline|'\n'
nl|'\n'
DECL|member|sendPacket
dedent|''
name|'def'
name|'sendPacket'
op|'('
name|'self'
op|','
name|'kind'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'!LB'"
op|','
name|'len'
op|'('
name|'data'
op|')'
op|'+'
number|'1'
op|','
name|'kind'
op|')'
op|'+'
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|dataReceived
dedent|''
name|'def'
name|'dataReceived'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'buf'
op|'+='
name|'data'
newline|'\n'
name|'while'
name|'len'
op|'('
name|'self'
op|'.'
name|'buf'
op|')'
op|'>'
number|'5'
op|':'
newline|'\n'
indent|'            '
name|'length'
op|','
name|'kind'
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'!LB'"
op|','
name|'self'
op|'.'
name|'buf'
op|'['
op|':'
number|'5'
op|']'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'buf'
op|')'
op|'<'
number|'4'
op|'+'
name|'length'
op|':'
newline|'\n'
indent|'                '
name|'return'
newline|'\n'
dedent|''
name|'data'
op|','
name|'self'
op|'.'
name|'buf'
op|'='
name|'self'
op|'.'
name|'buf'
op|'['
number|'5'
op|':'
number|'4'
op|'+'
name|'length'
op|']'
op|','
name|'self'
op|'.'
name|'buf'
op|'['
number|'4'
op|'+'
name|'length'
op|':'
op|']'
newline|'\n'
name|'packetType'
op|'='
name|'self'
op|'.'
name|'packetTypes'
op|'.'
name|'get'
op|'('
name|'kind'
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'packetType'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'no packet type for'"
op|','
name|'kind'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'f'
op|'='
name|'getattr'
op|'('
name|'self'
op|','
string|"'packet_%s'"
op|'%'
name|'packetType'
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'f'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'not implemented: %s'"
op|'%'
name|'packetType'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
name|'repr'
op|'('
name|'data'
op|'['
number|'4'
op|':'
op|']'
op|')'
op|')'
newline|'\n'
name|'reqId'
op|','
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'!L'"
op|','
name|'data'
op|'['
op|':'
number|'4'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_sendStatus'
op|'('
name|'reqId'
op|','
name|'FX_OP_UNSUPPORTED'
op|','
nl|'\n'
string|'"don\'t understand %s"'
op|'%'
name|'packetType'
op|')'
newline|'\n'
comment|'#XXX not implemented'
nl|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'f'
op|'('
name|'data'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'err'
op|'('
op|')'
newline|'\n'
name|'continue'
newline|'\n'
name|'reqId'
op|','
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'!L'"
op|','
name|'data'
op|'['
op|':'
number|'4'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_ebStatus'
op|'('
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'e'
op|')'
op|','
name|'reqId'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_parseAttributes
dedent|''
dedent|''
dedent|''
name|'def'
name|'_parseAttributes'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flags'
op|','
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'!L'"
op|','
name|'data'
op|'['
op|':'
number|'4'
op|']'
op|')'
newline|'\n'
name|'attrs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'if'
name|'flags'
op|'&'
name|'FILEXFER_ATTR_SIZE'
op|'=='
name|'FILEXFER_ATTR_SIZE'
op|':'
newline|'\n'
indent|'            '
name|'size'
op|','
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'!Q'"
op|','
name|'data'
op|'['
op|':'
number|'8'
op|']'
op|')'
newline|'\n'
name|'attrs'
op|'['
string|"'size'"
op|']'
op|'='
name|'size'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'8'
op|':'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'flags'
op|'&'
name|'FILEXFER_ATTR_OWNERGROUP'
op|'=='
name|'FILEXFER_ATTR_OWNERGROUP'
op|':'
newline|'\n'
indent|'            '
name|'uid'
op|','
name|'gid'
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'!2L'"
op|','
name|'data'
op|'['
op|':'
number|'8'
op|']'
op|')'
newline|'\n'
name|'attrs'
op|'['
string|"'uid'"
op|']'
op|'='
name|'uid'
newline|'\n'
name|'attrs'
op|'['
string|"'gid'"
op|']'
op|'='
name|'gid'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'8'
op|':'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'flags'
op|'&'
name|'FILEXFER_ATTR_PERMISSIONS'
op|'=='
name|'FILEXFER_ATTR_PERMISSIONS'
op|':'
newline|'\n'
indent|'            '
name|'perms'
op|','
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'!L'"
op|','
name|'data'
op|'['
op|':'
number|'4'
op|']'
op|')'
newline|'\n'
name|'attrs'
op|'['
string|"'permissions'"
op|']'
op|'='
name|'perms'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'flags'
op|'&'
name|'FILEXFER_ATTR_ACMODTIME'
op|'=='
name|'FILEXFER_ATTR_ACMODTIME'
op|':'
newline|'\n'
indent|'            '
name|'atime'
op|','
name|'mtime'
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'!2L'"
op|','
name|'data'
op|'['
op|':'
number|'8'
op|']'
op|')'
newline|'\n'
name|'attrs'
op|'['
string|"'atime'"
op|']'
op|'='
name|'atime'
newline|'\n'
name|'attrs'
op|'['
string|"'mtime'"
op|']'
op|'='
name|'mtime'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'8'
op|':'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'flags'
op|'&'
name|'FILEXFER_ATTR_EXTENDED'
op|'=='
name|'FILEXFER_ATTR_EXTENDED'
op|':'
newline|'\n'
indent|'            '
name|'extended_count'
op|','
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'!L'"
op|','
name|'data'
op|'['
op|':'
number|'4'
op|']'
op|')'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
name|'extended_count'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'extended_type'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'extended_data'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'attrs'
op|'['
string|"'ext_%s'"
op|'%'
name|'extended_type'
op|']'
op|'='
name|'extended_data'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'attrs'
op|','
name|'data'
newline|'\n'
nl|'\n'
DECL|member|_packAttributes
dedent|''
name|'def'
name|'_packAttributes'
op|'('
name|'self'
op|','
name|'attrs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flags'
op|'='
number|'0'
newline|'\n'
name|'data'
op|'='
string|"''"
newline|'\n'
name|'if'
string|"'size'"
name|'in'
name|'attrs'
op|':'
newline|'\n'
indent|'            '
name|'data'
op|'+='
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'!Q'"
op|','
name|'attrs'
op|'['
string|"'size'"
op|']'
op|')'
newline|'\n'
name|'flags'
op|'|='
name|'FILEXFER_ATTR_SIZE'
newline|'\n'
dedent|''
name|'if'
string|"'uid'"
name|'in'
name|'attrs'
name|'and'
string|"'gid'"
name|'in'
name|'attrs'
op|':'
newline|'\n'
indent|'            '
name|'data'
op|'+='
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'!2L'"
op|','
name|'attrs'
op|'['
string|"'uid'"
op|']'
op|','
name|'attrs'
op|'['
string|"'gid'"
op|']'
op|')'
newline|'\n'
name|'flags'
op|'|='
name|'FILEXFER_ATTR_OWNERGROUP'
newline|'\n'
dedent|''
name|'if'
string|"'permissions'"
name|'in'
name|'attrs'
op|':'
newline|'\n'
indent|'            '
name|'data'
op|'+='
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'!L'"
op|','
name|'attrs'
op|'['
string|"'permissions'"
op|']'
op|')'
newline|'\n'
name|'flags'
op|'|='
name|'FILEXFER_ATTR_PERMISSIONS'
newline|'\n'
dedent|''
name|'if'
string|"'atime'"
name|'in'
name|'attrs'
name|'and'
string|"'mtime'"
name|'in'
name|'attrs'
op|':'
newline|'\n'
indent|'            '
name|'data'
op|'+='
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'!2L'"
op|','
name|'attrs'
op|'['
string|"'atime'"
op|']'
op|','
name|'attrs'
op|'['
string|"'mtime'"
op|']'
op|')'
newline|'\n'
name|'flags'
op|'|='
name|'FILEXFER_ATTR_ACMODTIME'
newline|'\n'
dedent|''
name|'extended'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'k'
name|'in'
name|'attrs'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'k'
op|'.'
name|'startswith'
op|'('
string|"'ext_'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'ext_type'
op|'='
name|'NS'
op|'('
name|'k'
op|'['
number|'4'
op|':'
op|']'
op|')'
newline|'\n'
name|'ext_data'
op|'='
name|'NS'
op|'('
name|'attrs'
op|'['
name|'k'
op|']'
op|')'
newline|'\n'
name|'extended'
op|'.'
name|'append'
op|'('
name|'ext_type'
op|'+'
name|'ext_data'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'extended'
op|':'
newline|'\n'
indent|'            '
name|'data'
op|'+='
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'!L'"
op|','
name|'len'
op|'('
name|'extended'
op|')'
op|')'
newline|'\n'
name|'data'
op|'+='
string|"''"
op|'.'
name|'join'
op|'('
name|'extended'
op|')'
newline|'\n'
name|'flags'
op|'|='
name|'FILEXFER_ATTR_EXTENDED'
newline|'\n'
dedent|''
name|'return'
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'!L'"
op|','
name|'flags'
op|')'
op|'+'
name|'data'
newline|'\n'
nl|'\n'
DECL|class|FileTransferServer
dedent|''
dedent|''
name|'class'
name|'FileTransferServer'
op|'('
name|'FileTransferBase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'data'
op|'='
name|'None'
op|','
name|'avatar'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'FileTransferBase'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'='
name|'ISFTPServer'
op|'('
name|'avatar'
op|')'
comment|'# yay interfaces'
newline|'\n'
name|'self'
op|'.'
name|'openFiles'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'openDirs'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|packet_INIT
dedent|''
name|'def'
name|'packet_INIT'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'version'
op|','
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'!L'"
op|','
name|'data'
op|'['
op|':'
number|'4'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'version'
op|'='
name|'min'
op|'('
name|'list'
op|'('
name|'self'
op|'.'
name|'versions'
op|')'
op|'+'
op|'['
name|'version'
op|']'
op|')'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'ext'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'while'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'ext_name'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'ext_data'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'ext'
op|'['
name|'ext_name'
op|']'
op|'='
name|'ext_data'
newline|'\n'
dedent|''
name|'our_ext'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'gotVersion'
op|'('
name|'version'
op|','
name|'ext'
op|')'
newline|'\n'
name|'our_ext_data'
op|'='
string|'""'
newline|'\n'
name|'for'
op|'('
name|'k'
op|','
name|'v'
op|')'
name|'in'
name|'our_ext'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'our_ext_data'
op|'+='
name|'NS'
op|'('
name|'k'
op|')'
op|'+'
name|'NS'
op|'('
name|'v'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'sendPacket'
op|'('
name|'FXP_VERSION'
op|','
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'!L'"
op|','
name|'self'
op|'.'
name|'version'
op|')'
op|'+'
name|'our_ext_data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_OPEN
dedent|''
name|'def'
name|'packet_OPEN'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requestId'
op|'='
name|'data'
op|'['
op|':'
number|'4'
op|']'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'filename'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'flags'
op|','
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'!L'"
op|','
name|'data'
op|'['
op|':'
number|'4'
op|']'
op|')'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'attrs'
op|','
name|'data'
op|'='
name|'self'
op|'.'
name|'_parseAttributes'
op|'('
name|'data'
op|')'
newline|'\n'
name|'assert'
name|'data'
op|'=='
string|"''"
op|','
string|"'still have data in OPEN: %s'"
op|'%'
name|'repr'
op|'('
name|'data'
op|')'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'client'
op|'.'
name|'openFile'
op|','
name|'filename'
op|','
name|'flags'
op|','
name|'attrs'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbOpenFile'
op|','
name|'requestId'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebStatus'
op|','
name|'requestId'
op|','
string|'"open failed"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cbOpenFile
dedent|''
name|'def'
name|'_cbOpenFile'
op|'('
name|'self'
op|','
name|'fileObj'
op|','
name|'requestId'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fileId'
op|'='
name|'str'
op|'('
name|'hash'
op|'('
name|'fileObj'
op|')'
op|')'
newline|'\n'
name|'if'
name|'fileId'
name|'in'
name|'self'
op|'.'
name|'openFiles'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'KeyError'
op|','
string|"'id already open'"
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'openFiles'
op|'['
name|'fileId'
op|']'
op|'='
name|'fileObj'
newline|'\n'
name|'self'
op|'.'
name|'sendPacket'
op|'('
name|'FXP_HANDLE'
op|','
name|'requestId'
op|'+'
name|'NS'
op|'('
name|'fileId'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_CLOSE
dedent|''
name|'def'
name|'packet_CLOSE'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requestId'
op|'='
name|'data'
op|'['
op|':'
number|'4'
op|']'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'handle'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'assert'
name|'data'
op|'=='
string|"''"
op|','
string|"'still have data in CLOSE: %s'"
op|'%'
name|'repr'
op|'('
name|'data'
op|')'
newline|'\n'
name|'if'
name|'handle'
name|'in'
name|'self'
op|'.'
name|'openFiles'
op|':'
newline|'\n'
indent|'            '
name|'fileObj'
op|'='
name|'self'
op|'.'
name|'openFiles'
op|'['
name|'handle'
op|']'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'fileObj'
op|'.'
name|'close'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbClose'
op|','
name|'handle'
op|','
name|'requestId'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebStatus'
op|','
name|'requestId'
op|','
string|'"close failed"'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'handle'
name|'in'
name|'self'
op|'.'
name|'openDirs'
op|':'
newline|'\n'
indent|'            '
name|'dirObj'
op|'='
name|'self'
op|'.'
name|'openDirs'
op|'['
name|'handle'
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'dirObj'
op|'.'
name|'close'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbClose'
op|','
name|'handle'
op|','
name|'requestId'
op|','
number|'1'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebStatus'
op|','
name|'requestId'
op|','
string|'"close failed"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_ebClose'
op|'('
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'KeyError'
op|'('
op|')'
op|')'
op|','
name|'requestId'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cbClose
dedent|''
dedent|''
name|'def'
name|'_cbClose'
op|'('
name|'self'
op|','
name|'result'
op|','
name|'handle'
op|','
name|'requestId'
op|','
name|'isDir'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isDir'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'self'
op|'.'
name|'openDirs'
op|'['
name|'handle'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'self'
op|'.'
name|'openFiles'
op|'['
name|'handle'
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_sendStatus'
op|'('
name|'requestId'
op|','
name|'FX_OK'
op|','
string|"'file closed'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_READ
dedent|''
name|'def'
name|'packet_READ'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requestId'
op|'='
name|'data'
op|'['
op|':'
number|'4'
op|']'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'handle'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
op|'('
name|'offset'
op|','
name|'length'
op|')'
op|','
name|'data'
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'!QL'"
op|','
name|'data'
op|'['
op|':'
number|'12'
op|']'
op|')'
op|','
name|'data'
op|'['
number|'12'
op|':'
op|']'
newline|'\n'
name|'assert'
name|'data'
op|'=='
string|"''"
op|','
string|"'still have data in READ: %s'"
op|'%'
name|'repr'
op|'('
name|'data'
op|')'
newline|'\n'
name|'if'
name|'handle'
name|'not'
name|'in'
name|'self'
op|'.'
name|'openFiles'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_ebRead'
op|'('
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'KeyError'
op|'('
op|')'
op|')'
op|','
name|'requestId'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'fileObj'
op|'='
name|'self'
op|'.'
name|'openFiles'
op|'['
name|'handle'
op|']'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'fileObj'
op|'.'
name|'readChunk'
op|','
name|'offset'
op|','
name|'length'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbRead'
op|','
name|'requestId'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebStatus'
op|','
name|'requestId'
op|','
string|'"read failed"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cbRead
dedent|''
dedent|''
name|'def'
name|'_cbRead'
op|'('
name|'self'
op|','
name|'result'
op|','
name|'requestId'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'result'
op|'=='
string|"''"
op|':'
comment|"# python's read will return this for EOF"
newline|'\n'
indent|'            '
name|'raise'
name|'EOFError'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'sendPacket'
op|'('
name|'FXP_DATA'
op|','
name|'requestId'
op|'+'
name|'NS'
op|'('
name|'result'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_WRITE
dedent|''
name|'def'
name|'packet_WRITE'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requestId'
op|'='
name|'data'
op|'['
op|':'
number|'4'
op|']'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'handle'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'offset'
op|','
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'!Q'"
op|','
name|'data'
op|'['
op|':'
number|'8'
op|']'
op|')'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'8'
op|':'
op|']'
newline|'\n'
name|'writeData'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'assert'
name|'data'
op|'=='
string|"''"
op|','
string|"'still have data in WRITE: %s'"
op|'%'
name|'repr'
op|'('
name|'data'
op|')'
newline|'\n'
name|'if'
name|'handle'
name|'not'
name|'in'
name|'self'
op|'.'
name|'openFiles'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_ebWrite'
op|'('
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'KeyError'
op|'('
op|')'
op|')'
op|','
name|'requestId'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'fileObj'
op|'='
name|'self'
op|'.'
name|'openFiles'
op|'['
name|'handle'
op|']'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'fileObj'
op|'.'
name|'writeChunk'
op|','
name|'offset'
op|','
name|'writeData'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbStatus'
op|','
name|'requestId'
op|','
string|'"write succeeded"'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebStatus'
op|','
name|'requestId'
op|','
string|'"write failed"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_REMOVE
dedent|''
dedent|''
name|'def'
name|'packet_REMOVE'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requestId'
op|'='
name|'data'
op|'['
op|':'
number|'4'
op|']'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'filename'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'assert'
name|'data'
op|'=='
string|"''"
op|','
string|"'still have data in REMOVE: %s'"
op|'%'
name|'repr'
op|'('
name|'data'
op|')'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'client'
op|'.'
name|'removeFile'
op|','
name|'filename'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbStatus'
op|','
name|'requestId'
op|','
string|'"remove succeeded"'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebStatus'
op|','
name|'requestId'
op|','
string|'"remove failed"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_RENAME
dedent|''
name|'def'
name|'packet_RENAME'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requestId'
op|'='
name|'data'
op|'['
op|':'
number|'4'
op|']'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'oldPath'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'newPath'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'assert'
name|'data'
op|'=='
string|"''"
op|','
string|"'still have data in RENAME: %s'"
op|'%'
name|'repr'
op|'('
name|'data'
op|')'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'client'
op|'.'
name|'renameFile'
op|','
name|'oldPath'
op|','
name|'newPath'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbStatus'
op|','
name|'requestId'
op|','
string|'"rename succeeded"'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebStatus'
op|','
name|'requestId'
op|','
string|'"rename failed"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_MKDIR
dedent|''
name|'def'
name|'packet_MKDIR'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requestId'
op|'='
name|'data'
op|'['
op|':'
number|'4'
op|']'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'path'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'attrs'
op|','
name|'data'
op|'='
name|'self'
op|'.'
name|'_parseAttributes'
op|'('
name|'data'
op|')'
newline|'\n'
name|'assert'
name|'data'
op|'=='
string|"''"
op|','
string|"'still have data in MKDIR: %s'"
op|'%'
name|'repr'
op|'('
name|'data'
op|')'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'client'
op|'.'
name|'makeDirectory'
op|','
name|'path'
op|','
name|'attrs'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbStatus'
op|','
name|'requestId'
op|','
string|'"mkdir succeeded"'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebStatus'
op|','
name|'requestId'
op|','
string|'"mkdir failed"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_RMDIR
dedent|''
name|'def'
name|'packet_RMDIR'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requestId'
op|'='
name|'data'
op|'['
op|':'
number|'4'
op|']'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'path'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'assert'
name|'data'
op|'=='
string|"''"
op|','
string|"'still have data in RMDIR: %s'"
op|'%'
name|'repr'
op|'('
name|'data'
op|')'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'client'
op|'.'
name|'removeDirectory'
op|','
name|'path'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbStatus'
op|','
name|'requestId'
op|','
string|'"rmdir succeeded"'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebStatus'
op|','
name|'requestId'
op|','
string|'"rmdir failed"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_OPENDIR
dedent|''
name|'def'
name|'packet_OPENDIR'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requestId'
op|'='
name|'data'
op|'['
op|':'
number|'4'
op|']'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'path'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'assert'
name|'data'
op|'=='
string|"''"
op|','
string|"'still have data in OPENDIR: %s'"
op|'%'
name|'repr'
op|'('
name|'data'
op|')'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'client'
op|'.'
name|'openDirectory'
op|','
name|'path'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbOpenDirectory'
op|','
name|'requestId'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebStatus'
op|','
name|'requestId'
op|','
string|'"opendir failed"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cbOpenDirectory
dedent|''
name|'def'
name|'_cbOpenDirectory'
op|'('
name|'self'
op|','
name|'dirObj'
op|','
name|'requestId'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'handle'
op|'='
name|'str'
op|'('
name|'hash'
op|'('
name|'dirObj'
op|')'
op|')'
newline|'\n'
name|'if'
name|'handle'
name|'in'
name|'self'
op|'.'
name|'openDirs'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'KeyError'
op|','
string|'"already opened this directory"'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'openDirs'
op|'['
name|'handle'
op|']'
op|'='
op|'['
name|'dirObj'
op|','
name|'iter'
op|'('
name|'dirObj'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'sendPacket'
op|'('
name|'FXP_HANDLE'
op|','
name|'requestId'
op|'+'
name|'NS'
op|'('
name|'handle'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_READDIR
dedent|''
name|'def'
name|'packet_READDIR'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requestId'
op|'='
name|'data'
op|'['
op|':'
number|'4'
op|']'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'handle'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'assert'
name|'data'
op|'=='
string|"''"
op|','
string|"'still have data in READDIR: %s'"
op|'%'
name|'repr'
op|'('
name|'data'
op|')'
newline|'\n'
name|'if'
name|'handle'
name|'not'
name|'in'
name|'self'
op|'.'
name|'openDirs'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_ebStatus'
op|'('
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'KeyError'
op|'('
op|')'
op|')'
op|','
name|'requestId'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'dirObj'
op|','
name|'dirIter'
op|'='
name|'self'
op|'.'
name|'openDirs'
op|'['
name|'handle'
op|']'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'_scanDirectory'
op|','
name|'dirIter'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbSendDirectory'
op|','
name|'requestId'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebStatus'
op|','
name|'requestId'
op|','
string|'"scan directory failed"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_scanDirectory
dedent|''
dedent|''
name|'def'
name|'_scanDirectory'
op|'('
name|'self'
op|','
name|'dirIter'
op|','
name|'f'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'while'
name|'len'
op|'('
name|'f'
op|')'
op|'<'
number|'250'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'info'
op|'='
name|'dirIter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'f'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'EOFError'
newline|'\n'
dedent|''
name|'return'
name|'f'
newline|'\n'
dedent|''
name|'if'
name|'isinstance'
op|'('
name|'info'
op|','
name|'defer'
op|'.'
name|'Deferred'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'info'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbScanDirectory'
op|','
name|'dirIter'
op|','
name|'f'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'f'
op|'.'
name|'append'
op|'('
name|'info'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'f'
newline|'\n'
nl|'\n'
DECL|member|_cbScanDirectory
dedent|''
name|'def'
name|'_cbScanDirectory'
op|'('
name|'self'
op|','
name|'result'
op|','
name|'dirIter'
op|','
name|'f'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'f'
op|'.'
name|'append'
op|'('
name|'result'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_scanDirectory'
op|'('
name|'dirIter'
op|','
name|'f'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cbSendDirectory
dedent|''
name|'def'
name|'_cbSendDirectory'
op|'('
name|'self'
op|','
name|'result'
op|','
name|'requestId'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
string|"''"
newline|'\n'
name|'for'
op|'('
name|'filename'
op|','
name|'longname'
op|','
name|'attrs'
op|')'
name|'in'
name|'result'
op|':'
newline|'\n'
indent|'            '
name|'data'
op|'+='
name|'NS'
op|'('
name|'filename'
op|')'
newline|'\n'
name|'data'
op|'+='
name|'NS'
op|'('
name|'longname'
op|')'
newline|'\n'
name|'data'
op|'+='
name|'self'
op|'.'
name|'_packAttributes'
op|'('
name|'attrs'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'sendPacket'
op|'('
name|'FXP_NAME'
op|','
name|'requestId'
op|'+'
nl|'\n'
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'!L'"
op|','
name|'len'
op|'('
name|'result'
op|')'
op|')'
op|'+'
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_STAT
dedent|''
name|'def'
name|'packet_STAT'
op|'('
name|'self'
op|','
name|'data'
op|','
name|'followLinks'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requestId'
op|'='
name|'data'
op|'['
op|':'
number|'4'
op|']'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'path'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'assert'
name|'data'
op|'=='
string|"''"
op|','
string|"'still have data in STAT/LSTAT: %s'"
op|'%'
name|'repr'
op|'('
name|'data'
op|')'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'client'
op|'.'
name|'getAttrs'
op|','
name|'path'
op|','
name|'followLinks'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbStat'
op|','
name|'requestId'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebStatus'
op|','
name|'requestId'
op|','
string|"'stat/lstat failed'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_LSTAT
dedent|''
name|'def'
name|'packet_LSTAT'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'packet_STAT'
op|'('
name|'data'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_FSTAT
dedent|''
name|'def'
name|'packet_FSTAT'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requestId'
op|'='
name|'data'
op|'['
op|':'
number|'4'
op|']'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'handle'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'assert'
name|'data'
op|'=='
string|"''"
op|','
string|"'still have data in FSTAT: %s'"
op|'%'
name|'repr'
op|'('
name|'data'
op|')'
newline|'\n'
name|'if'
name|'handle'
name|'not'
name|'in'
name|'self'
op|'.'
name|'openFiles'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_ebStatus'
op|'('
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'KeyError'
op|'('
string|"'%s not in self.openFiles'"
nl|'\n'
op|'%'
name|'handle'
op|')'
op|')'
op|','
name|'requestId'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'fileObj'
op|'='
name|'self'
op|'.'
name|'openFiles'
op|'['
name|'handle'
op|']'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'fileObj'
op|'.'
name|'getAttrs'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbStat'
op|','
name|'requestId'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebStatus'
op|','
name|'requestId'
op|','
string|"'fstat failed'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cbStat
dedent|''
dedent|''
name|'def'
name|'_cbStat'
op|'('
name|'self'
op|','
name|'result'
op|','
name|'requestId'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
name|'requestId'
op|'+'
name|'self'
op|'.'
name|'_packAttributes'
op|'('
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sendPacket'
op|'('
name|'FXP_ATTRS'
op|','
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_SETSTAT
dedent|''
name|'def'
name|'packet_SETSTAT'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requestId'
op|'='
name|'data'
op|'['
op|':'
number|'4'
op|']'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'path'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'attrs'
op|','
name|'data'
op|'='
name|'self'
op|'.'
name|'_parseAttributes'
op|'('
name|'data'
op|')'
newline|'\n'
name|'if'
name|'data'
op|'!='
string|"''"
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'WARN: still have data in SETSTAT: %s'"
op|'%'
name|'repr'
op|'('
name|'data'
op|')'
op|')'
newline|'\n'
dedent|''
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'client'
op|'.'
name|'setAttrs'
op|','
name|'path'
op|','
name|'attrs'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbStatus'
op|','
name|'requestId'
op|','
string|"'setstat succeeded'"
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebStatus'
op|','
name|'requestId'
op|','
string|"'setstat failed'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_FSETSTAT
dedent|''
name|'def'
name|'packet_FSETSTAT'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requestId'
op|'='
name|'data'
op|'['
op|':'
number|'4'
op|']'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'handle'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'attrs'
op|','
name|'data'
op|'='
name|'self'
op|'.'
name|'_parseAttributes'
op|'('
name|'data'
op|')'
newline|'\n'
name|'assert'
name|'data'
op|'=='
string|"''"
op|','
string|"'still have data in FSETSTAT: %s'"
op|'%'
name|'repr'
op|'('
name|'data'
op|')'
newline|'\n'
name|'if'
name|'handle'
name|'not'
name|'in'
name|'self'
op|'.'
name|'openFiles'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_ebStatus'
op|'('
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'KeyError'
op|'('
op|')'
op|')'
op|','
name|'requestId'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'fileObj'
op|'='
name|'self'
op|'.'
name|'openFiles'
op|'['
name|'handle'
op|']'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'fileObj'
op|'.'
name|'setAttrs'
op|','
name|'attrs'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbStatus'
op|','
name|'requestId'
op|','
string|"'fsetstat succeeded'"
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebStatus'
op|','
name|'requestId'
op|','
string|"'fsetstat failed'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_READLINK
dedent|''
dedent|''
name|'def'
name|'packet_READLINK'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requestId'
op|'='
name|'data'
op|'['
op|':'
number|'4'
op|']'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'path'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'assert'
name|'data'
op|'=='
string|"''"
op|','
string|"'still have data in READLINK: %s'"
op|'%'
name|'repr'
op|'('
name|'data'
op|')'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'client'
op|'.'
name|'readLink'
op|','
name|'path'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbReadLink'
op|','
name|'requestId'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebStatus'
op|','
name|'requestId'
op|','
string|"'readlink failed'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cbReadLink
dedent|''
name|'def'
name|'_cbReadLink'
op|'('
name|'self'
op|','
name|'result'
op|','
name|'requestId'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_cbSendDirectory'
op|'('
op|'['
op|'('
name|'result'
op|','
string|"''"
op|','
op|'{'
op|'}'
op|')'
op|']'
op|','
name|'requestId'
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_SYMLINK
dedent|''
name|'def'
name|'packet_SYMLINK'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requestId'
op|'='
name|'data'
op|'['
op|':'
number|'4'
op|']'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'linkPath'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'targetPath'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'client'
op|'.'
name|'makeLink'
op|','
name|'linkPath'
op|','
name|'targetPath'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbStatus'
op|','
name|'requestId'
op|','
string|"'symlink succeeded'"
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebStatus'
op|','
name|'requestId'
op|','
string|"'symlink failed'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_REALPATH
dedent|''
name|'def'
name|'packet_REALPATH'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requestId'
op|'='
name|'data'
op|'['
op|':'
number|'4'
op|']'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'path'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'assert'
name|'data'
op|'=='
string|"''"
op|','
string|"'still have data in REALPATH: %s'"
op|'%'
name|'repr'
op|'('
name|'data'
op|')'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'client'
op|'.'
name|'realPath'
op|','
name|'path'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbReadLink'
op|','
name|'requestId'
op|')'
comment|'# same return format'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebStatus'
op|','
name|'requestId'
op|','
string|"'realpath failed'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_EXTENDED
dedent|''
name|'def'
name|'packet_EXTENDED'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'requestId'
op|'='
name|'data'
op|'['
op|':'
number|'4'
op|']'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'extName'
op|','
name|'extData'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'client'
op|'.'
name|'extendedRequest'
op|','
name|'extName'
op|','
name|'extData'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbExtended'
op|','
name|'requestId'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebStatus'
op|','
name|'requestId'
op|','
string|"'extended %s failed'"
op|'%'
name|'extName'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cbExtended
dedent|''
name|'def'
name|'_cbExtended'
op|'('
name|'self'
op|','
name|'data'
op|','
name|'requestId'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendPacket'
op|'('
name|'FXP_EXTENDED_REPLY'
op|','
name|'requestId'
op|'+'
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cbStatus
dedent|''
name|'def'
name|'_cbStatus'
op|'('
name|'self'
op|','
name|'result'
op|','
name|'requestId'
op|','
name|'msg'
op|'='
string|'"request succeeded"'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_sendStatus'
op|'('
name|'requestId'
op|','
name|'FX_OK'
op|','
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_ebStatus
dedent|''
name|'def'
name|'_ebStatus'
op|'('
name|'self'
op|','
name|'reason'
op|','
name|'requestId'
op|','
name|'msg'
op|'='
string|'"request failed"'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'code'
op|'='
name|'FX_FAILURE'
newline|'\n'
name|'message'
op|'='
name|'msg'
newline|'\n'
name|'if'
name|'reason'
op|'.'
name|'type'
name|'in'
op|'('
name|'IOError'
op|','
name|'OSError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'reason'
op|'.'
name|'value'
op|'.'
name|'errno'
op|'=='
name|'errno'
op|'.'
name|'ENOENT'
op|':'
comment|'# no such file'
newline|'\n'
indent|'                '
name|'code'
op|'='
name|'FX_NO_SUCH_FILE'
newline|'\n'
name|'message'
op|'='
name|'reason'
op|'.'
name|'value'
op|'.'
name|'strerror'
newline|'\n'
dedent|''
name|'elif'
name|'reason'
op|'.'
name|'value'
op|'.'
name|'errno'
op|'=='
name|'errno'
op|'.'
name|'EACCES'
op|':'
comment|'# permission denied'
newline|'\n'
indent|'                '
name|'code'
op|'='
name|'FX_PERMISSION_DENIED'
newline|'\n'
name|'message'
op|'='
name|'reason'
op|'.'
name|'value'
op|'.'
name|'strerror'
newline|'\n'
dedent|''
name|'elif'
name|'reason'
op|'.'
name|'value'
op|'.'
name|'errno'
op|'=='
name|'errno'
op|'.'
name|'EEXIST'
op|':'
newline|'\n'
indent|'                '
name|'code'
op|'='
name|'FX_FILE_ALREADY_EXISTS'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'err'
op|'('
name|'reason'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'reason'
op|'.'
name|'type'
op|'=='
name|'EOFError'
op|':'
comment|'# EOF'
newline|'\n'
indent|'            '
name|'code'
op|'='
name|'FX_EOF'
newline|'\n'
name|'if'
name|'reason'
op|'.'
name|'value'
op|'.'
name|'args'
op|':'
newline|'\n'
indent|'                '
name|'message'
op|'='
name|'reason'
op|'.'
name|'value'
op|'.'
name|'args'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'reason'
op|'.'
name|'type'
op|'=='
name|'NotImplementedError'
op|':'
newline|'\n'
indent|'            '
name|'code'
op|'='
name|'FX_OP_UNSUPPORTED'
newline|'\n'
name|'if'
name|'reason'
op|'.'
name|'value'
op|'.'
name|'args'
op|':'
newline|'\n'
indent|'                '
name|'message'
op|'='
name|'reason'
op|'.'
name|'value'
op|'.'
name|'args'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'reason'
op|'.'
name|'type'
op|'=='
name|'SFTPError'
op|':'
newline|'\n'
indent|'            '
name|'code'
op|'='
name|'reason'
op|'.'
name|'value'
op|'.'
name|'code'
newline|'\n'
name|'message'
op|'='
name|'reason'
op|'.'
name|'value'
op|'.'
name|'message'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'err'
op|'('
name|'reason'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_sendStatus'
op|'('
name|'requestId'
op|','
name|'code'
op|','
name|'message'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_sendStatus
dedent|''
name|'def'
name|'_sendStatus'
op|'('
name|'self'
op|','
name|'requestId'
op|','
name|'code'
op|','
name|'message'
op|','
name|'lang'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Helper method to send a FXP_STATUS message.\n        """'
newline|'\n'
name|'data'
op|'='
name|'requestId'
op|'+'
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'!L'"
op|','
name|'code'
op|')'
newline|'\n'
name|'data'
op|'+='
name|'NS'
op|'('
name|'message'
op|')'
newline|'\n'
name|'data'
op|'+='
name|'NS'
op|'('
name|'lang'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sendPacket'
op|'('
name|'FXP_STATUS'
op|','
name|'data'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|connectionLost
dedent|''
name|'def'
name|'connectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Clean all opened files and directories.\n        """'
newline|'\n'
name|'for'
name|'fileObj'
name|'in'
name|'self'
op|'.'
name|'openFiles'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fileObj'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'openFiles'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
op|'('
name|'dirObj'
op|','
name|'dirIter'
op|')'
name|'in'
name|'self'
op|'.'
name|'openDirs'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'dirObj'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'openDirs'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|FileTransferClient
dedent|''
dedent|''
name|'class'
name|'FileTransferClient'
op|'('
name|'FileTransferBase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'extData'
op|'='
op|'{'
op|'}'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        @param extData: a dict of extended_name : extended_data items\n        to be sent to the server.\n        """'
newline|'\n'
name|'FileTransferBase'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'extData'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'counter'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'openRequests'
op|'='
op|'{'
op|'}'
comment|'# id -> Deferred'
newline|'\n'
name|'self'
op|'.'
name|'wasAFile'
op|'='
op|'{'
op|'}'
comment|'# Deferred -> 1 TERRIBLE HACK'
newline|'\n'
nl|'\n'
DECL|member|connectionMade
dedent|''
name|'def'
name|'connectionMade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'!L'"
op|','
name|'max'
op|'('
name|'self'
op|'.'
name|'versions'
op|')'
op|')'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'self'
op|'.'
name|'extData'
op|'.'
name|'itervalues'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'data'
op|'+='
name|'NS'
op|'('
name|'k'
op|')'
op|'+'
name|'NS'
op|'('
name|'v'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'sendPacket'
op|'('
name|'FXP_INIT'
op|','
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_sendRequest
dedent|''
name|'def'
name|'_sendRequest'
op|'('
name|'self'
op|','
name|'msg'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'!L'"
op|','
name|'self'
op|'.'
name|'counter'
op|')'
op|'+'
name|'data'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'openRequests'
op|'['
name|'self'
op|'.'
name|'counter'
op|']'
op|'='
name|'d'
newline|'\n'
name|'self'
op|'.'
name|'counter'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'sendPacket'
op|'('
name|'msg'
op|','
name|'data'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|_parseRequest
dedent|''
name|'def'
name|'_parseRequest'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
op|'('
name|'id'
op|','
op|')'
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'!L'"
op|','
name|'data'
op|'['
op|':'
number|'4'
op|']'
op|')'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'openRequests'
op|'['
name|'id'
op|']'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'openRequests'
op|'['
name|'id'
op|']'
newline|'\n'
name|'return'
name|'d'
op|','
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
nl|'\n'
DECL|member|openFile
dedent|''
name|'def'
name|'openFile'
op|'('
name|'self'
op|','
name|'filename'
op|','
name|'flags'
op|','
name|'attrs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Open a file.\n\n        This method returns a L{Deferred} that is called back with an object\n        that provides the L{ISFTPFile} interface.\n\n        @param filename: a string representing the file to open.\n\n        @param flags: a integer of the flags to open the file with, ORed together.\n        The flags and their values are listed at the bottom of this file.\n\n        @param attrs: a list of attributes to open the file with.  It is a\n        dictionary, consisting of 0 or more keys.  The possible keys are::\n\n            size: the size of the file in bytes\n            uid: the user ID of the file as an integer\n            gid: the group ID of the file as an integer\n            permissions: the permissions of the file with as an integer.\n            the bit representation of this field is defined by POSIX.\n            atime: the access time of the file as seconds since the epoch.\n            mtime: the modification time of the file as seconds since the epoch.\n            ext_*: extended attributes.  The server is not required to\n            understand this, but it may.\n\n        NOTE: there is no way to indicate text or binary files.  it is up\n        to the SFTP client to deal with this.\n        """'
newline|'\n'
name|'data'
op|'='
name|'NS'
op|'('
name|'filename'
op|')'
op|'+'
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'!L'"
op|','
name|'flags'
op|')'
op|'+'
name|'self'
op|'.'
name|'_packAttributes'
op|'('
name|'attrs'
op|')'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'_sendRequest'
op|'('
name|'FXP_OPEN'
op|','
name|'data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'wasAFile'
op|'['
name|'d'
op|']'
op|'='
op|'('
number|'1'
op|','
name|'filename'
op|')'
comment|'# HACK'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|removeFile
dedent|''
name|'def'
name|'removeFile'
op|'('
name|'self'
op|','
name|'filename'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Remove the given file.\n\n        This method returns a Deferred that is called back when it succeeds.\n\n        @param filename: the name of the file as a string.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_sendRequest'
op|'('
name|'FXP_REMOVE'
op|','
name|'NS'
op|'('
name|'filename'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|renameFile
dedent|''
name|'def'
name|'renameFile'
op|'('
name|'self'
op|','
name|'oldpath'
op|','
name|'newpath'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Rename the given file.\n\n        This method returns a Deferred that is called back when it succeeds.\n\n        @param oldpath: the current location of the file.\n        @param newpath: the new file name.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_sendRequest'
op|'('
name|'FXP_RENAME'
op|','
name|'NS'
op|'('
name|'oldpath'
op|')'
op|'+'
name|'NS'
op|'('
name|'newpath'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|makeDirectory
dedent|''
name|'def'
name|'makeDirectory'
op|'('
name|'self'
op|','
name|'path'
op|','
name|'attrs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Make a directory.\n\n        This method returns a Deferred that is called back when it is\n        created.\n\n        @param path: the name of the directory to create as a string.\n\n        @param attrs: a dictionary of attributes to create the directory\n        with.  Its meaning is the same as the attrs in the openFile method.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_sendRequest'
op|'('
name|'FXP_MKDIR'
op|','
name|'NS'
op|'('
name|'path'
op|')'
op|'+'
name|'self'
op|'.'
name|'_packAttributes'
op|'('
name|'attrs'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|removeDirectory
dedent|''
name|'def'
name|'removeDirectory'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Remove a directory (non-recursively)\n\n        It is an error to remove a directory that has files or directories in\n        it.\n\n        This method returns a Deferred that is called back when it is removed.\n\n        @param path: the directory to remove.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_sendRequest'
op|'('
name|'FXP_RMDIR'
op|','
name|'NS'
op|'('
name|'path'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|openDirectory
dedent|''
name|'def'
name|'openDirectory'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Open a directory for scanning.\n\n        This method returns a Deferred that is called back with an iterable\n        object that has a close() method.\n\n        The close() method is called when the client is finished reading\n        from the directory.  At this point, the iterable will no longer\n        be used.\n\n        The iterable returns triples of the form (filename, longname, attrs)\n        or a Deferred that returns the same.  The sequence must support\n        __getitem__, but otherwise may be any \'sequence-like\' object.\n\n        filename is the name of the file relative to the directory.\n        logname is an expanded format of the filename.  The recommended format\n        is:\n        -rwxr-xr-x   1 mjos     staff      348911 Mar 25 14:29 t-filexfer\n        1234567890 123 12345678 12345678 12345678 123456789012\n\n        The first line is sample output, the second is the length of the field.\n        The fields are: permissions, link count, user owner, group owner,\n        size in bytes, modification time.\n\n        attrs is a dictionary in the format of the attrs argument to openFile.\n\n        @param path: the directory to open.\n        """'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'_sendRequest'
op|'('
name|'FXP_OPENDIR'
op|','
name|'NS'
op|'('
name|'path'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'wasAFile'
op|'['
name|'d'
op|']'
op|'='
op|'('
number|'0'
op|','
name|'path'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|getAttrs
dedent|''
name|'def'
name|'getAttrs'
op|'('
name|'self'
op|','
name|'path'
op|','
name|'followLinks'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Return the attributes for the given path.\n\n        This method returns a dictionary in the same format as the attrs\n        argument to openFile or a Deferred that is called back with same.\n\n        @param path: the path to return attributes for as a string.\n        @param followLinks: a boolean.  if it is True, follow symbolic links\n        and return attributes for the real path at the base.  if it is False,\n        return attributes for the specified path.\n        """'
newline|'\n'
name|'if'
name|'followLinks'
op|':'
name|'m'
op|'='
name|'FXP_STAT'
newline|'\n'
name|'else'
op|':'
name|'m'
op|'='
name|'FXP_LSTAT'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_sendRequest'
op|'('
name|'m'
op|','
name|'NS'
op|'('
name|'path'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|setAttrs
dedent|''
name|'def'
name|'setAttrs'
op|'('
name|'self'
op|','
name|'path'
op|','
name|'attrs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Set the attributes for the path.\n\n        This method returns when the attributes are set or a Deferred that is\n        called back when they are.\n\n        @param path: the path to set attributes for as a string.\n        @param attrs: a dictionary in the same format as the attrs argument to\n        openFile.\n        """'
newline|'\n'
name|'data'
op|'='
name|'NS'
op|'('
name|'path'
op|')'
op|'+'
name|'self'
op|'.'
name|'_packAttributes'
op|'('
name|'attrs'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_sendRequest'
op|'('
name|'FXP_SETSTAT'
op|','
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|readLink
dedent|''
name|'def'
name|'readLink'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Find the root of a set of symbolic links.\n\n        This method returns the target of the link, or a Deferred that\n        returns the same.\n\n        @param path: the path of the symlink to read.\n        """'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'_sendRequest'
op|'('
name|'FXP_READLINK'
op|','
name|'NS'
op|'('
name|'path'
op|')'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbRealPath'
op|')'
newline|'\n'
nl|'\n'
DECL|member|makeLink
dedent|''
name|'def'
name|'makeLink'
op|'('
name|'self'
op|','
name|'linkPath'
op|','
name|'targetPath'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create a symbolic link.\n\n        This method returns when the link is made, or a Deferred that\n        returns the same.\n\n        @param linkPath: the pathname of the symlink as a string\n        @param targetPath: the path of the target of the link as a string.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_sendRequest'
op|'('
name|'FXP_SYMLINK'
op|','
name|'NS'
op|'('
name|'linkPath'
op|')'
op|'+'
name|'NS'
op|'('
name|'targetPath'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|realPath
dedent|''
name|'def'
name|'realPath'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Convert any path to an absolute path.\n\n        This method returns the absolute path as a string, or a Deferred\n        that returns the same.\n\n        @param path: the path to convert as a string.\n        """'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'_sendRequest'
op|'('
name|'FXP_REALPATH'
op|','
name|'NS'
op|'('
name|'path'
op|')'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbRealPath'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cbRealPath
dedent|''
name|'def'
name|'_cbRealPath'
op|'('
name|'self'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'name'
op|','
name|'longname'
op|','
name|'attrs'
op|'='
name|'result'
op|'['
number|'0'
op|']'
newline|'\n'
name|'return'
name|'name'
newline|'\n'
nl|'\n'
DECL|member|extendedRequest
dedent|''
name|'def'
name|'extendedRequest'
op|'('
name|'self'
op|','
name|'request'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Make an extended request of the server.\n\n        The method returns a Deferred that is called back with\n        the result of the extended request.\n\n        @param request: the name of the extended request to make.\n        @param data: any other data that goes along with the request.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_sendRequest'
op|'('
name|'FXP_EXTENDED'
op|','
name|'NS'
op|'('
name|'request'
op|')'
op|'+'
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_VERSION
dedent|''
name|'def'
name|'packet_VERSION'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'version'
op|','
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'!L'"
op|','
name|'data'
op|'['
op|':'
number|'4'
op|']'
op|')'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'d'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'while'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'k'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'v'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'d'
op|'['
name|'k'
op|']'
op|'='
name|'v'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'version'
op|'='
name|'version'
newline|'\n'
name|'self'
op|'.'
name|'gotServerVersion'
op|'('
name|'version'
op|','
name|'d'
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_STATUS
dedent|''
name|'def'
name|'packet_STATUS'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|','
name|'data'
op|'='
name|'self'
op|'.'
name|'_parseRequest'
op|'('
name|'data'
op|')'
newline|'\n'
name|'code'
op|','
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'!L'"
op|','
name|'data'
op|'['
op|':'
number|'4'
op|']'
op|')'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'msg'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'lang'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'if'
name|'code'
op|'=='
name|'FX_OK'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'.'
name|'callback'
op|'('
op|'('
name|'msg'
op|','
name|'lang'
op|')'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'code'
op|'=='
name|'FX_EOF'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'.'
name|'errback'
op|'('
name|'EOFError'
op|'('
name|'msg'
op|')'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'code'
op|'=='
name|'FX_OP_UNSUPPORTED'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'.'
name|'errback'
op|'('
name|'NotImplementedError'
op|'('
name|'msg'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'.'
name|'errback'
op|'('
name|'SFTPError'
op|'('
name|'code'
op|','
name|'msg'
op|','
name|'lang'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_HANDLE
dedent|''
dedent|''
name|'def'
name|'packet_HANDLE'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|','
name|'data'
op|'='
name|'self'
op|'.'
name|'_parseRequest'
op|'('
name|'data'
op|')'
newline|'\n'
name|'isFile'
op|','
name|'name'
op|'='
name|'self'
op|'.'
name|'wasAFile'
op|'.'
name|'pop'
op|'('
name|'d'
op|')'
newline|'\n'
name|'if'
name|'isFile'
op|':'
newline|'\n'
indent|'            '
name|'cb'
op|'='
name|'ClientFile'
op|'('
name|'self'
op|','
name|'getNS'
op|'('
name|'data'
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'cb'
op|'='
name|'ClientDirectory'
op|'('
name|'self'
op|','
name|'getNS'
op|'('
name|'data'
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'cb'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'d'
op|'.'
name|'callback'
op|'('
name|'cb'
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_DATA
dedent|''
name|'def'
name|'packet_DATA'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|','
name|'data'
op|'='
name|'self'
op|'.'
name|'_parseRequest'
op|'('
name|'data'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'callback'
op|'('
name|'getNS'
op|'('
name|'data'
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_NAME
dedent|''
name|'def'
name|'packet_NAME'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|','
name|'data'
op|'='
name|'self'
op|'.'
name|'_parseRequest'
op|'('
name|'data'
op|')'
newline|'\n'
name|'count'
op|','
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'!L'"
op|','
name|'data'
op|'['
op|':'
number|'4'
op|']'
op|')'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
name|'files'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'count'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'filename'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'longname'
op|','
name|'data'
op|'='
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'attrs'
op|','
name|'data'
op|'='
name|'self'
op|'.'
name|'_parseAttributes'
op|'('
name|'data'
op|')'
newline|'\n'
name|'files'
op|'.'
name|'append'
op|'('
op|'('
name|'filename'
op|','
name|'longname'
op|','
name|'attrs'
op|')'
op|')'
newline|'\n'
dedent|''
name|'d'
op|'.'
name|'callback'
op|'('
name|'files'
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_ATTRS
dedent|''
name|'def'
name|'packet_ATTRS'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|','
name|'data'
op|'='
name|'self'
op|'.'
name|'_parseRequest'
op|'('
name|'data'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'callback'
op|'('
name|'self'
op|'.'
name|'_parseAttributes'
op|'('
name|'data'
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|packet_EXTENDED_REPLY
dedent|''
name|'def'
name|'packet_EXTENDED_REPLY'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|','
name|'data'
op|'='
name|'self'
op|'.'
name|'_parseRequest'
op|'('
name|'data'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'callback'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|gotServerVersion
dedent|''
name|'def'
name|'gotServerVersion'
op|'('
name|'self'
op|','
name|'serverVersion'
op|','
name|'extData'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Called when the client sends their version info.\n\n        @param otherVersion: an integer representing the version of the SFTP\n        protocol they are claiming.\n        @param extData: a dictionary of extended_name : extended_data items.\n        These items are sent by the client to indicate additional features.\n        """'
newline|'\n'
nl|'\n'
DECL|class|ClientFile
dedent|''
dedent|''
name|'class'
name|'ClientFile'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'interface'
op|'.'
name|'implements'
op|'('
name|'ISFTPFile'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'parent'
op|','
name|'handle'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'parent'
op|'='
name|'parent'
newline|'\n'
name|'self'
op|'.'
name|'handle'
op|'='
name|'NS'
op|'('
name|'handle'
op|')'
newline|'\n'
nl|'\n'
DECL|member|close
dedent|''
name|'def'
name|'close'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'parent'
op|'.'
name|'_sendRequest'
op|'('
name|'FXP_CLOSE'
op|','
name|'self'
op|'.'
name|'handle'
op|')'
newline|'\n'
nl|'\n'
DECL|member|readChunk
dedent|''
name|'def'
name|'readChunk'
op|'('
name|'self'
op|','
name|'offset'
op|','
name|'length'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
name|'self'
op|'.'
name|'handle'
op|'+'
name|'struct'
op|'.'
name|'pack'
op|'('
string|'"!QL"'
op|','
name|'offset'
op|','
name|'length'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'parent'
op|'.'
name|'_sendRequest'
op|'('
name|'FXP_READ'
op|','
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|writeChunk
dedent|''
name|'def'
name|'writeChunk'
op|'('
name|'self'
op|','
name|'offset'
op|','
name|'chunk'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
name|'self'
op|'.'
name|'handle'
op|'+'
name|'struct'
op|'.'
name|'pack'
op|'('
string|'"!Q"'
op|','
name|'offset'
op|')'
op|'+'
name|'NS'
op|'('
name|'chunk'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'parent'
op|'.'
name|'_sendRequest'
op|'('
name|'FXP_WRITE'
op|','
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getAttrs
dedent|''
name|'def'
name|'getAttrs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'parent'
op|'.'
name|'_sendRequest'
op|'('
name|'FXP_FSTAT'
op|','
name|'self'
op|'.'
name|'handle'
op|')'
newline|'\n'
nl|'\n'
DECL|member|setAttrs
dedent|''
name|'def'
name|'setAttrs'
op|'('
name|'self'
op|','
name|'attrs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
name|'self'
op|'.'
name|'handle'
op|'+'
name|'self'
op|'.'
name|'parent'
op|'.'
name|'_packAttributes'
op|'('
name|'attrs'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'parent'
op|'.'
name|'_sendRequest'
op|'('
name|'FXP_FSTAT'
op|','
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|class|ClientDirectory
dedent|''
dedent|''
name|'class'
name|'ClientDirectory'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'parent'
op|','
name|'handle'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'parent'
op|'='
name|'parent'
newline|'\n'
name|'self'
op|'.'
name|'handle'
op|'='
name|'NS'
op|'('
name|'handle'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'filesCache'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|read
dedent|''
name|'def'
name|'read'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'parent'
op|'.'
name|'_sendRequest'
op|'('
name|'FXP_READDIR'
op|','
name|'self'
op|'.'
name|'handle'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|close
dedent|''
name|'def'
name|'close'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'parent'
op|'.'
name|'_sendRequest'
op|'('
name|'FXP_CLOSE'
op|','
name|'self'
op|'.'
name|'handle'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|next
dedent|''
name|'def'
name|'next'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'filesCache'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'filesCache'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
dedent|''
name|'d'
op|'='
name|'self'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbReadDir'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebReadDir'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|_cbReadDir
dedent|''
name|'def'
name|'_cbReadDir'
op|'('
name|'self'
op|','
name|'names'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'filesCache'
op|'='
name|'names'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
name|'return'
name|'names'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_ebReadDir
dedent|''
name|'def'
name|'_ebReadDir'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'reason'
op|'.'
name|'trap'
op|'('
name|'EOFError'
op|')'
newline|'\n'
DECL|function|_
name|'def'
name|'_'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'StopIteration'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'next'
op|'='
name|'_'
newline|'\n'
name|'return'
name|'reason'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SFTPError
dedent|''
dedent|''
name|'class'
name|'SFTPError'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'errorCode'
op|','
name|'errorMessage'
op|','
name|'lang'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'Exception'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'code'
op|'='
name|'errorCode'
newline|'\n'
name|'self'
op|'.'
name|'_message'
op|'='
name|'errorMessage'
newline|'\n'
name|'self'
op|'.'
name|'lang'
op|'='
name|'lang'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|message
dedent|''
name|'def'
name|'message'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A string received over the network that explains the error to a human.\n        """'
newline|'\n'
comment|"# Python 2.6 deprecates assigning to the 'message' attribute of an"
nl|'\n'
comment|'# exception. We define this read-only property here in order to'
nl|'\n'
comment|'# prevent the warning about deprecation while maintaining backwards'
nl|'\n'
comment|"# compatibility with object clients that rely on the 'message'"
nl|'\n'
comment|'# attribute being set correctly. See bug #3897.'
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'_message'
newline|'\n'
DECL|variable|message
dedent|''
name|'message'
op|'='
name|'property'
op|'('
name|'message'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|__str__
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'SFTPError %s: %s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'code'
op|','
name|'self'
op|'.'
name|'message'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|FXP_INIT
dedent|''
dedent|''
name|'FXP_INIT'
op|'='
number|'1'
newline|'\n'
DECL|variable|FXP_VERSION
name|'FXP_VERSION'
op|'='
number|'2'
newline|'\n'
DECL|variable|FXP_OPEN
name|'FXP_OPEN'
op|'='
number|'3'
newline|'\n'
DECL|variable|FXP_CLOSE
name|'FXP_CLOSE'
op|'='
number|'4'
newline|'\n'
DECL|variable|FXP_READ
name|'FXP_READ'
op|'='
number|'5'
newline|'\n'
DECL|variable|FXP_WRITE
name|'FXP_WRITE'
op|'='
number|'6'
newline|'\n'
DECL|variable|FXP_LSTAT
name|'FXP_LSTAT'
op|'='
number|'7'
newline|'\n'
DECL|variable|FXP_FSTAT
name|'FXP_FSTAT'
op|'='
number|'8'
newline|'\n'
DECL|variable|FXP_SETSTAT
name|'FXP_SETSTAT'
op|'='
number|'9'
newline|'\n'
DECL|variable|FXP_FSETSTAT
name|'FXP_FSETSTAT'
op|'='
number|'10'
newline|'\n'
DECL|variable|FXP_OPENDIR
name|'FXP_OPENDIR'
op|'='
number|'11'
newline|'\n'
DECL|variable|FXP_READDIR
name|'FXP_READDIR'
op|'='
number|'12'
newline|'\n'
DECL|variable|FXP_REMOVE
name|'FXP_REMOVE'
op|'='
number|'13'
newline|'\n'
DECL|variable|FXP_MKDIR
name|'FXP_MKDIR'
op|'='
number|'14'
newline|'\n'
DECL|variable|FXP_RMDIR
name|'FXP_RMDIR'
op|'='
number|'15'
newline|'\n'
DECL|variable|FXP_REALPATH
name|'FXP_REALPATH'
op|'='
number|'16'
newline|'\n'
DECL|variable|FXP_STAT
name|'FXP_STAT'
op|'='
number|'17'
newline|'\n'
DECL|variable|FXP_RENAME
name|'FXP_RENAME'
op|'='
number|'18'
newline|'\n'
DECL|variable|FXP_READLINK
name|'FXP_READLINK'
op|'='
number|'19'
newline|'\n'
DECL|variable|FXP_SYMLINK
name|'FXP_SYMLINK'
op|'='
number|'20'
newline|'\n'
DECL|variable|FXP_STATUS
name|'FXP_STATUS'
op|'='
number|'101'
newline|'\n'
DECL|variable|FXP_HANDLE
name|'FXP_HANDLE'
op|'='
number|'102'
newline|'\n'
DECL|variable|FXP_DATA
name|'FXP_DATA'
op|'='
number|'103'
newline|'\n'
DECL|variable|FXP_NAME
name|'FXP_NAME'
op|'='
number|'104'
newline|'\n'
DECL|variable|FXP_ATTRS
name|'FXP_ATTRS'
op|'='
number|'105'
newline|'\n'
DECL|variable|FXP_EXTENDED
name|'FXP_EXTENDED'
op|'='
number|'200'
newline|'\n'
DECL|variable|FXP_EXTENDED_REPLY
name|'FXP_EXTENDED_REPLY'
op|'='
number|'201'
newline|'\n'
nl|'\n'
DECL|variable|FILEXFER_ATTR_SIZE
name|'FILEXFER_ATTR_SIZE'
op|'='
number|'0x00000001'
newline|'\n'
DECL|variable|FILEXFER_ATTR_UIDGID
name|'FILEXFER_ATTR_UIDGID'
op|'='
number|'0x00000002'
newline|'\n'
DECL|variable|FILEXFER_ATTR_OWNERGROUP
name|'FILEXFER_ATTR_OWNERGROUP'
op|'='
name|'FILEXFER_ATTR_UIDGID'
newline|'\n'
DECL|variable|FILEXFER_ATTR_PERMISSIONS
name|'FILEXFER_ATTR_PERMISSIONS'
op|'='
number|'0x00000004'
newline|'\n'
DECL|variable|FILEXFER_ATTR_ACMODTIME
name|'FILEXFER_ATTR_ACMODTIME'
op|'='
number|'0x00000008'
newline|'\n'
DECL|variable|FILEXFER_ATTR_EXTENDED
name|'FILEXFER_ATTR_EXTENDED'
op|'='
number|'0x80000000L'
newline|'\n'
nl|'\n'
DECL|variable|FILEXFER_TYPE_REGULAR
name|'FILEXFER_TYPE_REGULAR'
op|'='
number|'1'
newline|'\n'
DECL|variable|FILEXFER_TYPE_DIRECTORY
name|'FILEXFER_TYPE_DIRECTORY'
op|'='
number|'2'
newline|'\n'
DECL|variable|FILEXFER_TYPE_SYMLINK
name|'FILEXFER_TYPE_SYMLINK'
op|'='
number|'3'
newline|'\n'
DECL|variable|FILEXFER_TYPE_SPECIAL
name|'FILEXFER_TYPE_SPECIAL'
op|'='
number|'4'
newline|'\n'
DECL|variable|FILEXFER_TYPE_UNKNOWN
name|'FILEXFER_TYPE_UNKNOWN'
op|'='
number|'5'
newline|'\n'
nl|'\n'
DECL|variable|FXF_READ
name|'FXF_READ'
op|'='
number|'0x00000001'
newline|'\n'
DECL|variable|FXF_WRITE
name|'FXF_WRITE'
op|'='
number|'0x00000002'
newline|'\n'
DECL|variable|FXF_APPEND
name|'FXF_APPEND'
op|'='
number|'0x00000004'
newline|'\n'
DECL|variable|FXF_CREAT
name|'FXF_CREAT'
op|'='
number|'0x00000008'
newline|'\n'
DECL|variable|FXF_TRUNC
name|'FXF_TRUNC'
op|'='
number|'0x00000010'
newline|'\n'
DECL|variable|FXF_EXCL
name|'FXF_EXCL'
op|'='
number|'0x00000020'
newline|'\n'
DECL|variable|FXF_TEXT
name|'FXF_TEXT'
op|'='
number|'0x00000040'
newline|'\n'
nl|'\n'
DECL|variable|FX_OK
name|'FX_OK'
op|'='
number|'0'
newline|'\n'
DECL|variable|FX_EOF
name|'FX_EOF'
op|'='
number|'1'
newline|'\n'
DECL|variable|FX_NO_SUCH_FILE
name|'FX_NO_SUCH_FILE'
op|'='
number|'2'
newline|'\n'
DECL|variable|FX_PERMISSION_DENIED
name|'FX_PERMISSION_DENIED'
op|'='
number|'3'
newline|'\n'
DECL|variable|FX_FAILURE
name|'FX_FAILURE'
op|'='
number|'4'
newline|'\n'
DECL|variable|FX_BAD_MESSAGE
name|'FX_BAD_MESSAGE'
op|'='
number|'5'
newline|'\n'
DECL|variable|FX_NO_CONNECTION
name|'FX_NO_CONNECTION'
op|'='
number|'6'
newline|'\n'
DECL|variable|FX_CONNECTION_LOST
name|'FX_CONNECTION_LOST'
op|'='
number|'7'
newline|'\n'
DECL|variable|FX_OP_UNSUPPORTED
name|'FX_OP_UNSUPPORTED'
op|'='
number|'8'
newline|'\n'
DECL|variable|FX_FILE_ALREADY_EXISTS
name|'FX_FILE_ALREADY_EXISTS'
op|'='
number|'11'
newline|'\n'
comment|'# http://tools.ietf.org/wg/secsh/draft-ietf-secsh-filexfer/ defines more'
nl|'\n'
comment|"# useful error codes, but so far OpenSSH doesn't implement them.  We use them"
nl|'\n'
comment|'# internally for clarity, but for now define them all as FX_FAILURE to be'
nl|'\n'
comment|'# compatible with existing software.'
nl|'\n'
DECL|variable|FX_NOT_A_DIRECTORY
name|'FX_NOT_A_DIRECTORY'
op|'='
name|'FX_FAILURE'
newline|'\n'
DECL|variable|FX_FILE_IS_A_DIRECTORY
name|'FX_FILE_IS_A_DIRECTORY'
op|'='
name|'FX_FAILURE'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# initialize FileTransferBase.packetTypes:'
nl|'\n'
DECL|variable|g
name|'g'
op|'='
name|'globals'
op|'('
op|')'
newline|'\n'
name|'for'
name|'name'
name|'in'
name|'g'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'name'
op|'.'
name|'startswith'
op|'('
string|"'FXP_'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'value'
op|'='
name|'g'
op|'['
name|'name'
op|']'
newline|'\n'
name|'FileTransferBase'
op|'.'
name|'packetTypes'
op|'['
name|'value'
op|']'
op|'='
name|'name'
op|'['
number|'4'
op|':'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'del'
name|'g'
op|','
name|'name'
op|','
name|'value'
newline|'\n'
endmarker|''
end_unit
