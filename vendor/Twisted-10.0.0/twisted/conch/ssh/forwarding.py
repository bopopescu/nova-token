begin_unit
comment|'# Copyright (c) 2001-2004 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
comment|'# '
nl|'\n'
nl|'\n'
string|'"""\nThis module contains the implementation of the TCP forwarding, which allows\nclients and servers to forward arbitrary TCP data across the connection.\n\nMaintainer: Paul Swartz\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'struct'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'protocol'
op|','
name|'reactor'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
newline|'\n'
nl|'\n'
name|'import'
name|'common'
op|','
name|'channel'
newline|'\n'
nl|'\n'
DECL|class|SSHListenForwardingFactory
name|'class'
name|'SSHListenForwardingFactory'
op|'('
name|'protocol'
op|'.'
name|'Factory'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'connection'
op|','
name|'hostport'
op|','
name|'klass'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'conn'
op|'='
name|'connection'
newline|'\n'
name|'self'
op|'.'
name|'hostport'
op|'='
name|'hostport'
comment|'# tuple'
newline|'\n'
name|'self'
op|'.'
name|'klass'
op|'='
name|'klass'
newline|'\n'
nl|'\n'
DECL|member|buildProtocol
dedent|''
name|'def'
name|'buildProtocol'
op|'('
name|'self'
op|','
name|'addr'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'channel'
op|'='
name|'self'
op|'.'
name|'klass'
op|'('
name|'conn'
op|'='
name|'self'
op|'.'
name|'conn'
op|')'
newline|'\n'
name|'client'
op|'='
name|'SSHForwardingClient'
op|'('
name|'channel'
op|')'
newline|'\n'
name|'channel'
op|'.'
name|'client'
op|'='
name|'client'
newline|'\n'
name|'addrTuple'
op|'='
op|'('
name|'addr'
op|'.'
name|'host'
op|','
name|'addr'
op|'.'
name|'port'
op|')'
newline|'\n'
name|'channelOpenData'
op|'='
name|'packOpen_direct_tcpip'
op|'('
name|'self'
op|'.'
name|'hostport'
op|','
name|'addrTuple'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'openChannel'
op|'('
name|'channel'
op|','
name|'channelOpenData'
op|')'
newline|'\n'
name|'return'
name|'client'
newline|'\n'
nl|'\n'
DECL|class|SSHListenForwardingChannel
dedent|''
dedent|''
name|'class'
name|'SSHListenForwardingChannel'
op|'('
name|'channel'
op|'.'
name|'SSHChannel'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|channelOpen
indent|'    '
name|'def'
name|'channelOpen'
op|'('
name|'self'
op|','
name|'specificData'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'opened forwarding channel %s'"
op|'%'
name|'self'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'client'
op|'.'
name|'buf'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'b'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'buf'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'write'
op|'('
name|'b'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'client'
op|'.'
name|'buf'
op|'='
string|"''"
newline|'\n'
nl|'\n'
DECL|member|openFailed
dedent|''
name|'def'
name|'openFailed'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'closed'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|dataReceived
dedent|''
name|'def'
name|'dataReceived'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'client'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|eofReceived
dedent|''
name|'def'
name|'eofReceived'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'client'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|closed
dedent|''
name|'def'
name|'closed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'hasattr'
op|'('
name|'self'
op|','
string|"'client'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'closing local forwarding channel %s'"
op|'%'
name|'self'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'client'
newline|'\n'
nl|'\n'
DECL|class|SSHListenClientForwardingChannel
dedent|''
dedent|''
dedent|''
name|'class'
name|'SSHListenClientForwardingChannel'
op|'('
name|'SSHListenForwardingChannel'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|name
indent|'    '
name|'name'
op|'='
string|"'direct-tcpip'"
newline|'\n'
nl|'\n'
DECL|class|SSHListenServerForwardingChannel
dedent|''
name|'class'
name|'SSHListenServerForwardingChannel'
op|'('
name|'SSHListenForwardingChannel'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|name
indent|'    '
name|'name'
op|'='
string|"'forwarded-tcpip'"
newline|'\n'
nl|'\n'
DECL|class|SSHConnectForwardingChannel
dedent|''
name|'class'
name|'SSHConnectForwardingChannel'
op|'('
name|'channel'
op|'.'
name|'SSHChannel'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'hostport'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'channel'
op|'.'
name|'SSHChannel'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kw'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'hostport'
op|'='
name|'hostport'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'clientBuf'
op|'='
string|"''"
newline|'\n'
nl|'\n'
DECL|member|channelOpen
dedent|''
name|'def'
name|'channelOpen'
op|'('
name|'self'
op|','
name|'specificData'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cc'
op|'='
name|'protocol'
op|'.'
name|'ClientCreator'
op|'('
name|'reactor'
op|','
name|'SSHForwardingClient'
op|','
name|'self'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'"connecting to %s:%i"'
op|'%'
name|'self'
op|'.'
name|'hostport'
op|')'
newline|'\n'
name|'cc'
op|'.'
name|'connectTCP'
op|'('
op|'*'
name|'self'
op|'.'
name|'hostport'
op|')'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_setClient'
op|','
name|'self'
op|'.'
name|'_close'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setClient
dedent|''
name|'def'
name|'_setClient'
op|'('
name|'self'
op|','
name|'client'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'client'
op|'='
name|'client'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'"connected to %s:%i"'
op|'%'
name|'self'
op|'.'
name|'hostport'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'clientBuf'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'client'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
name|'self'
op|'.'
name|'clientBuf'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'clientBuf'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'client'
op|'.'
name|'buf'
op|'['
number|'1'
op|':'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'write'
op|'('
name|'self'
op|'.'
name|'client'
op|'.'
name|'buf'
op|'['
number|'1'
op|':'
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'client'
op|'.'
name|'buf'
op|'='
string|"''"
newline|'\n'
nl|'\n'
DECL|member|_close
dedent|''
name|'def'
name|'_close'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"failed to connect: %s"'
op|'%'
name|'reason'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|dataReceived
dedent|''
name|'def'
name|'dataReceived'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'client'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'client'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'clientBuf'
op|'+='
name|'data'
newline|'\n'
nl|'\n'
DECL|member|closed
dedent|''
dedent|''
name|'def'
name|'closed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'client'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'closed remote forwarding channel %s'"
op|'%'
name|'self'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'client'
op|'.'
name|'channel'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'client'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'client'
newline|'\n'
nl|'\n'
DECL|function|openConnectForwardingClient
dedent|''
dedent|''
dedent|''
name|'def'
name|'openConnectForwardingClient'
op|'('
name|'remoteWindow'
op|','
name|'remoteMaxPacket'
op|','
name|'data'
op|','
name|'avatar'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'remoteHP'
op|','
name|'origHP'
op|'='
name|'unpackOpen_direct_tcpip'
op|'('
name|'data'
op|')'
newline|'\n'
name|'return'
name|'SSHConnectForwardingChannel'
op|'('
name|'remoteHP'
op|','
nl|'\n'
name|'remoteWindow'
op|'='
name|'remoteWindow'
op|','
nl|'\n'
name|'remoteMaxPacket'
op|'='
name|'remoteMaxPacket'
op|','
nl|'\n'
name|'avatar'
op|'='
name|'avatar'
op|')'
newline|'\n'
nl|'\n'
DECL|class|SSHForwardingClient
dedent|''
name|'class'
name|'SSHForwardingClient'
op|'('
name|'protocol'
op|'.'
name|'Protocol'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'channel'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'channel'
op|'='
name|'channel'
newline|'\n'
name|'self'
op|'.'
name|'buf'
op|'='
string|"'\\000'"
newline|'\n'
nl|'\n'
DECL|member|dataReceived
dedent|''
name|'def'
name|'dataReceived'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'buf'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'buf'
op|'+='
name|'data'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'channel'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|connectionLost
dedent|''
dedent|''
name|'def'
name|'connectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'channel'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'channel'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'channel'
op|'='
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|packOpen_direct_tcpip
dedent|''
dedent|''
dedent|''
name|'def'
name|'packOpen_direct_tcpip'
op|'('
op|'('
name|'connHost'
op|','
name|'connPort'
op|')'
op|','
op|'('
name|'origHost'
op|','
name|'origPort'
op|')'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Pack the data suitable for sending in a CHANNEL_OPEN packet.\n    """'
newline|'\n'
name|'conn'
op|'='
name|'common'
op|'.'
name|'NS'
op|'('
name|'connHost'
op|')'
op|'+'
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'>L'"
op|','
name|'connPort'
op|')'
newline|'\n'
name|'orig'
op|'='
name|'common'
op|'.'
name|'NS'
op|'('
name|'origHost'
op|')'
op|'+'
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'>L'"
op|','
name|'origPort'
op|')'
newline|'\n'
name|'return'
name|'conn'
op|'+'
name|'orig'
newline|'\n'
nl|'\n'
DECL|variable|packOpen_forwarded_tcpip
dedent|''
name|'packOpen_forwarded_tcpip'
op|'='
name|'packOpen_direct_tcpip'
newline|'\n'
nl|'\n'
DECL|function|unpackOpen_direct_tcpip
name|'def'
name|'unpackOpen_direct_tcpip'
op|'('
name|'data'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Unpack the data to a usable format.\n    """'
newline|'\n'
name|'connHost'
op|','
name|'rest'
op|'='
name|'common'
op|'.'
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'connPort'
op|'='
name|'int'
op|'('
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'>L'"
op|','
name|'rest'
op|'['
op|':'
number|'4'
op|']'
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'origHost'
op|','
name|'rest'
op|'='
name|'common'
op|'.'
name|'getNS'
op|'('
name|'rest'
op|'['
number|'4'
op|':'
op|']'
op|')'
newline|'\n'
name|'origPort'
op|'='
name|'int'
op|'('
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'>L'"
op|','
name|'rest'
op|'['
op|':'
number|'4'
op|']'
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'return'
op|'('
name|'connHost'
op|','
name|'connPort'
op|')'
op|','
op|'('
name|'origHost'
op|','
name|'origPort'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|unpackOpen_forwarded_tcpip
dedent|''
name|'unpackOpen_forwarded_tcpip'
op|'='
name|'unpackOpen_direct_tcpip'
newline|'\n'
nl|'\n'
DECL|function|packGlobal_tcpip_forward
name|'def'
name|'packGlobal_tcpip_forward'
op|'('
op|'('
name|'host'
op|','
name|'port'
op|')'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'common'
op|'.'
name|'NS'
op|'('
name|'host'
op|')'
op|'+'
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'>L'"
op|','
name|'port'
op|')'
newline|'\n'
nl|'\n'
DECL|function|unpackGlobal_tcpip_forward
dedent|''
name|'def'
name|'unpackGlobal_tcpip_forward'
op|'('
name|'data'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'host'
op|','
name|'rest'
op|'='
name|'common'
op|'.'
name|'getNS'
op|'('
name|'data'
op|')'
newline|'\n'
name|'port'
op|'='
name|'int'
op|'('
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'>L'"
op|','
name|'rest'
op|'['
op|':'
number|'4'
op|']'
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'return'
name|'host'
op|','
name|'port'
newline|'\n'
nl|'\n'
dedent|''
string|'"""This is how the data -> eof -> close stuff /should/ work.\n\ndebug3: channel 1: waiting for connection\ndebug1: channel 1: connected\ndebug1: channel 1: read<=0 rfd 7 len 0\ndebug1: channel 1: read failed\ndebug1: channel 1: close_read\ndebug1: channel 1: input open -> drain\ndebug1: channel 1: ibuf empty\ndebug1: channel 1: send eof\ndebug1: channel 1: input drain -> closed\ndebug1: channel 1: rcvd eof\ndebug1: channel 1: output open -> drain\ndebug1: channel 1: obuf empty\ndebug1: channel 1: close_write\ndebug1: channel 1: output drain -> closed\ndebug1: channel 1: rcvd close\ndebug3: channel 1: will not send data after close\ndebug1: channel 1: send close\ndebug1: channel 1: is dead\n"""'
newline|'\n'
endmarker|''
end_unit
