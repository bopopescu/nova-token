begin_unit
comment|'# -*- test-case-name: twisted.conch.test.test_filetransfer -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE file for details.'
nl|'\n'
nl|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
name|'import'
name|'struct'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
name|'import'
name|'unittest'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'from'
name|'twisted'
op|'.'
name|'conch'
name|'import'
name|'unix'
newline|'\n'
name|'unix'
comment|'# shut up pyflakes'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
DECL|variable|unix
indent|'    '
name|'unix'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'del'
name|'sys'
op|'.'
name|'modules'
op|'['
string|"'twisted.conch.unix'"
op|']'
comment|'# remove the bad import'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
comment|'# In Python 2.4, the bad import has already been cleaned up for us.'
nl|'\n'
comment|'# Hooray.'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'from'
name|'twisted'
op|'.'
name|'conch'
name|'import'
name|'avatar'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'conch'
op|'.'
name|'ssh'
name|'import'
name|'common'
op|','
name|'connection'
op|','
name|'filetransfer'
op|','
name|'session'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'defer'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'protocols'
name|'import'
name|'loopback'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'components'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestAvatar
name|'class'
name|'TestAvatar'
op|'('
name|'avatar'
op|'.'
name|'ConchUser'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'avatar'
op|'.'
name|'ConchUser'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'channelLookup'
op|'['
string|"'session'"
op|']'
op|'='
name|'session'
op|'.'
name|'SSHSession'
newline|'\n'
name|'self'
op|'.'
name|'subsystemLookup'
op|'['
string|"'sftp'"
op|']'
op|'='
name|'filetransfer'
op|'.'
name|'FileTransferServer'
newline|'\n'
nl|'\n'
DECL|member|_runAsUser
dedent|''
name|'def'
name|'_runAsUser'
op|'('
name|'self'
op|','
name|'f'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'='
name|'iter'
op|'('
name|'f'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'TypeError'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'='
op|'['
op|'('
name|'f'
op|','
name|'args'
op|','
name|'kw'
op|')'
op|']'
newline|'\n'
dedent|''
name|'for'
name|'i'
name|'in'
name|'f'
op|':'
newline|'\n'
indent|'            '
name|'func'
op|'='
name|'i'
op|'['
number|'0'
op|']'
newline|'\n'
name|'args'
op|'='
name|'len'
op|'('
name|'i'
op|')'
op|'>'
number|'1'
name|'and'
name|'i'
op|'['
number|'1'
op|']'
name|'or'
op|'('
op|')'
newline|'\n'
name|'kw'
op|'='
name|'len'
op|'('
name|'i'
op|')'
op|'>'
number|'2'
name|'and'
name|'i'
op|'['
number|'2'
op|']'
name|'or'
op|'{'
op|'}'
newline|'\n'
name|'r'
op|'='
name|'func'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kw'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'r'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FileTransferTestAvatar
dedent|''
dedent|''
name|'class'
name|'FileTransferTestAvatar'
op|'('
name|'TestAvatar'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'homeDir'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'TestAvatar'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'homeDir'
op|'='
name|'homeDir'
newline|'\n'
nl|'\n'
DECL|member|getHomeDir
dedent|''
name|'def'
name|'getHomeDir'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'os'
op|'.'
name|'getcwd'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'homeDir'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConchSessionForTestAvatar
dedent|''
dedent|''
name|'class'
name|'ConchSessionForTestAvatar'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'avatar'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'avatar'
op|'='
name|'avatar'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'unix'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'unix'
op|','
string|"'SFTPServerForUnixConchUser'"
op|')'
op|':'
newline|'\n'
comment|"# unix should either be a fully working module, or None.  I'm not sure"
nl|'\n'
comment|'# how this happens, but on win32 it does.  Try to cope.  --spiv.'
nl|'\n'
indent|'        '
name|'import'
name|'warnings'
newline|'\n'
name|'warnings'
op|'.'
name|'warn'
op|'('
op|'('
string|'"twisted.conch.unix imported %r, "'
nl|'\n'
string|'"but doesn\'t define SFTPServerForUnixConchUser\'"'
op|')'
nl|'\n'
op|'%'
op|'('
name|'unix'
op|','
op|')'
op|')'
newline|'\n'
name|'unix'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
DECL|class|FileTransferForTestAvatar
indent|'        '
name|'class'
name|'FileTransferForTestAvatar'
op|'('
name|'unix'
op|'.'
name|'SFTPServerForUnixConchUser'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|gotVersion
indent|'            '
name|'def'
name|'gotVersion'
op|'('
name|'self'
op|','
name|'version'
op|','
name|'otherExt'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'conchTest'"
op|':'
string|"'ext data'"
op|'}'
newline|'\n'
nl|'\n'
DECL|member|extendedRequest
dedent|''
name|'def'
name|'extendedRequest'
op|'('
name|'self'
op|','
name|'extName'
op|','
name|'extData'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'extName'
op|'=='
string|"'testExtendedRequest'"
op|':'
newline|'\n'
indent|'                    '
name|'return'
string|"'bar'"
newline|'\n'
dedent|''
name|'raise'
name|'NotImplementedError'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'components'
op|'.'
name|'registerAdapter'
op|'('
name|'FileTransferForTestAvatar'
op|','
nl|'\n'
name|'TestAvatar'
op|','
nl|'\n'
name|'filetransfer'
op|'.'
name|'ISFTPServer'
op|')'
newline|'\n'
nl|'\n'
DECL|class|SFTPTestBase
dedent|''
dedent|''
name|'class'
name|'SFTPTestBase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'testDir'
op|'='
name|'self'
op|'.'
name|'mktemp'
op|'('
op|')'
newline|'\n'
comment|'# Give the testDir another level so we can safely "cd .." from it in'
nl|'\n'
comment|'# tests.'
nl|'\n'
name|'self'
op|'.'
name|'testDir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testDir'
op|','
string|"'extra'"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'makedirs'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testDir'
op|','
string|"'testDirectory'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'f'
op|'='
name|'file'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testDir'
op|','
string|"'testfile1'"
op|')'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'a'"
op|'*'
number|'10'
op|'+'
string|"'b'"
op|'*'
number|'10'
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
name|'file'
op|'('
string|"'/dev/urandom'"
op|')'
op|'.'
name|'read'
op|'('
number|'1024'
op|'*'
number|'64'
op|')'
op|')'
comment|'# random data'
newline|'\n'
name|'os'
op|'.'
name|'chmod'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testDir'
op|','
string|"'testfile1'"
op|')'
op|','
number|'0644'
op|')'
newline|'\n'
name|'file'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testDir'
op|','
string|"'testRemoveFile'"
op|')'
op|','
string|"'w'"
op|')'
op|'.'
name|'write'
op|'('
string|"'a'"
op|')'
newline|'\n'
name|'file'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testDir'
op|','
string|"'testRenameFile'"
op|')'
op|','
string|"'w'"
op|')'
op|'.'
name|'write'
op|'('
string|"'a'"
op|')'
newline|'\n'
name|'file'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testDir'
op|','
string|"'.testHiddenFile'"
op|')'
op|','
string|"'w'"
op|')'
op|'.'
name|'write'
op|'('
string|"'a'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestOurServerOurClient
dedent|''
dedent|''
name|'class'
name|'TestOurServerOurClient'
op|'('
name|'SFTPTestBase'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'if'
name|'not'
name|'unix'
op|':'
newline|'\n'
DECL|variable|skip
indent|'        '
name|'skip'
op|'='
string|'"can\'t run on non-posix computers"'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'SFTPTestBase'
op|'.'
name|'setUp'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'avatar'
op|'='
name|'FileTransferTestAvatar'
op|'('
name|'self'
op|'.'
name|'testDir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'server'
op|'='
name|'filetransfer'
op|'.'
name|'FileTransferServer'
op|'('
name|'avatar'
op|'='
name|'self'
op|'.'
name|'avatar'
op|')'
newline|'\n'
name|'clientTransport'
op|'='
name|'loopback'
op|'.'
name|'LoopbackRelay'
op|'('
name|'self'
op|'.'
name|'server'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'client'
op|'='
name|'filetransfer'
op|'.'
name|'FileTransferClient'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_serverVersion'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_extData'
op|'='
name|'None'
newline|'\n'
DECL|function|_
name|'def'
name|'_'
op|'('
name|'serverVersion'
op|','
name|'extData'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_serverVersion'
op|'='
name|'serverVersion'
newline|'\n'
name|'self'
op|'.'
name|'_extData'
op|'='
name|'extData'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'client'
op|'.'
name|'gotServerVersion'
op|'='
name|'_'
newline|'\n'
name|'serverTransport'
op|'='
name|'loopback'
op|'.'
name|'LoopbackRelay'
op|'('
name|'self'
op|'.'
name|'client'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'.'
name|'makeConnection'
op|'('
name|'clientTransport'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'server'
op|'.'
name|'makeConnection'
op|'('
name|'serverTransport'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'clientTransport'
op|'='
name|'clientTransport'
newline|'\n'
name|'self'
op|'.'
name|'serverTransport'
op|'='
name|'serverTransport'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_emptyBuffers
dedent|''
name|'def'
name|'_emptyBuffers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'while'
name|'self'
op|'.'
name|'serverTransport'
op|'.'
name|'buffer'
name|'or'
name|'self'
op|'.'
name|'clientTransport'
op|'.'
name|'buffer'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'serverTransport'
op|'.'
name|'clearBuffer'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'clientTransport'
op|'.'
name|'clearBuffer'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'serverTransport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'clientTransport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'serverTransport'
op|'.'
name|'clearBuffer'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'clientTransport'
op|'.'
name|'clearBuffer'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|testServerVersion
dedent|''
name|'def'
name|'testServerVersion'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'failUnlessEqual'
op|'('
name|'self'
op|'.'
name|'_serverVersion'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnlessEqual'
op|'('
name|'self'
op|'.'
name|'_extData'
op|','
op|'{'
string|"'conchTest'"
op|':'
string|"'ext data'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_openedFileClosedWithConnection
dedent|''
name|'def'
name|'test_openedFileClosedWithConnection'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A file opened with C{openFile} is close when the connection is lost.\n        """'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'openFile'
op|'('
string|'"testfile1"'
op|','
name|'filetransfer'
op|'.'
name|'FXF_READ'
op|'|'
nl|'\n'
name|'filetransfer'
op|'.'
name|'FXF_WRITE'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'oldClose'
op|'='
name|'os'
op|'.'
name|'close'
newline|'\n'
name|'closed'
op|'='
op|'['
op|']'
newline|'\n'
DECL|function|close
name|'def'
name|'close'
op|'('
name|'fd'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'closed'
op|'.'
name|'append'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'oldClose'
op|'('
name|'fd'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'patch'
op|'('
name|'os'
op|','
string|'"close"'
op|','
name|'close'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_fileOpened
name|'def'
name|'_fileOpened'
op|'('
name|'openFile'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fd'
op|'='
name|'self'
op|'.'
name|'server'
op|'.'
name|'openFiles'
op|'['
name|'openFile'
op|'.'
name|'handle'
op|'['
number|'4'
op|':'
op|']'
op|']'
op|'.'
name|'fd'
newline|'\n'
name|'self'
op|'.'
name|'serverTransport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'clientTransport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'serverTransport'
op|'.'
name|'clearBuffer'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'clientTransport'
op|'.'
name|'clearBuffer'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'server'
op|'.'
name|'openFiles'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'fd'
op|','
name|'closed'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_fileOpened'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_openedDirectoryClosedWithConnection
dedent|''
name|'def'
name|'test_openedDirectoryClosedWithConnection'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A directory opened with C{openDirectory} is close when the connection\n        is lost.\n        """'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'openDirectory'
op|'('
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|_getFiles
name|'def'
name|'_getFiles'
op|'('
name|'openDir'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'serverTransport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'clientTransport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'serverTransport'
op|'.'
name|'clearBuffer'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'clientTransport'
op|'.'
name|'clearBuffer'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'server'
op|'.'
name|'openDirs'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_getFiles'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|testOpenFileIO
dedent|''
name|'def'
name|'testOpenFileIO'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'openFile'
op|'('
string|'"testfile1"'
op|','
name|'filetransfer'
op|'.'
name|'FXF_READ'
op|'|'
nl|'\n'
name|'filetransfer'
op|'.'
name|'FXF_WRITE'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|_fileOpened
name|'def'
name|'_fileOpened'
op|'('
name|'openFile'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'failUnlessEqual'
op|'('
name|'openFile'
op|','
name|'filetransfer'
op|'.'
name|'ISFTPFile'
op|'('
name|'openFile'
op|')'
op|')'
newline|'\n'
name|'d'
op|'='
name|'_readChunk'
op|'('
name|'openFile'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_writeChunk'
op|','
name|'openFile'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|function|_readChunk
dedent|''
name|'def'
name|'_readChunk'
op|'('
name|'openFile'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'openFile'
op|'.'
name|'readChunk'
op|'('
number|'0'
op|','
number|'20'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'failUnlessEqual'
op|','
string|"'a'"
op|'*'
number|'10'
op|'+'
string|"'b'"
op|'*'
number|'10'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|function|_writeChunk
dedent|''
name|'def'
name|'_writeChunk'
op|'('
name|'_'
op|','
name|'openFile'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'openFile'
op|'.'
name|'writeChunk'
op|'('
number|'20'
op|','
string|"'c'"
op|'*'
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_readChunk2'
op|','
name|'openFile'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|function|_readChunk2
dedent|''
name|'def'
name|'_readChunk2'
op|'('
name|'_'
op|','
name|'openFile'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'openFile'
op|'.'
name|'readChunk'
op|'('
number|'0'
op|','
number|'30'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'failUnlessEqual'
op|','
string|"'a'"
op|'*'
number|'10'
op|'+'
string|"'b'"
op|'*'
number|'10'
op|'+'
string|"'c'"
op|'*'
number|'10'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
dedent|''
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_fileOpened'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|testClosedFileGetAttrs
dedent|''
name|'def'
name|'testClosedFileGetAttrs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'openFile'
op|'('
string|'"testfile1"'
op|','
name|'filetransfer'
op|'.'
name|'FXF_READ'
op|'|'
nl|'\n'
name|'filetransfer'
op|'.'
name|'FXF_WRITE'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|_getAttrs
name|'def'
name|'_getAttrs'
op|'('
name|'_'
op|','
name|'openFile'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'openFile'
op|'.'
name|'getAttrs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|function|_err
dedent|''
name|'def'
name|'_err'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'flushLoggedErrors'
op|'('
op|')'
newline|'\n'
name|'return'
name|'f'
newline|'\n'
nl|'\n'
DECL|function|_close
dedent|''
name|'def'
name|'_close'
op|'('
name|'openFile'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'openFile'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_getAttrs'
op|','
name|'openFile'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'_err'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'assertFailure'
op|'('
name|'d'
op|','
name|'filetransfer'
op|'.'
name|'SFTPError'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_close'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|testOpenFileAttributes
dedent|''
name|'def'
name|'testOpenFileAttributes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'openFile'
op|'('
string|'"testfile1"'
op|','
name|'filetransfer'
op|'.'
name|'FXF_READ'
op|'|'
nl|'\n'
name|'filetransfer'
op|'.'
name|'FXF_WRITE'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|_getAttrs
name|'def'
name|'_getAttrs'
op|'('
name|'openFile'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'openFile'
op|'.'
name|'getAttrs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_getAttrs2'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|function|_getAttrs2
dedent|''
name|'def'
name|'_getAttrs2'
op|'('
name|'attrs1'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'getAttrs'
op|'('
string|"'testfile1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'failUnlessEqual'
op|','
name|'attrs1'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_getAttrs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|testOpenFileSetAttrs
dedent|''
name|'def'
name|'testOpenFileSetAttrs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# XXX test setAttrs'
nl|'\n'
comment|'# Ok, how about this for a start?  It caught a bug :)  -- spiv.'
nl|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'openFile'
op|'('
string|'"testfile1"'
op|','
name|'filetransfer'
op|'.'
name|'FXF_READ'
op|'|'
nl|'\n'
name|'filetransfer'
op|'.'
name|'FXF_WRITE'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|_getAttrs
name|'def'
name|'_getAttrs'
op|'('
name|'openFile'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'openFile'
op|'.'
name|'getAttrs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_setAttrs'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|function|_setAttrs
dedent|''
name|'def'
name|'_setAttrs'
op|'('
name|'attrs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'attrs'
op|'['
string|"'atime'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'setAttrs'
op|'('
string|"'testfile1'"
op|','
name|'attrs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_getAttrs2'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'failUnlessEqual'
op|','
name|'attrs'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|function|_getAttrs2
dedent|''
name|'def'
name|'_getAttrs2'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'getAttrs'
op|'('
string|"'testfile1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
dedent|''
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_getAttrs'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_openFileExtendedAttributes
dedent|''
name|'def'
name|'test_openFileExtendedAttributes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Check that L{filetransfer.FileTransferClient.openFile} can send\n        extended attributes, that should be extracted server side. By default,\n        they are ignored, so we just verify they are correctly parsed.\n        """'
newline|'\n'
name|'savedAttributes'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'oldOpenFile'
op|'='
name|'self'
op|'.'
name|'server'
op|'.'
name|'client'
op|'.'
name|'openFile'
newline|'\n'
DECL|function|openFile
name|'def'
name|'openFile'
op|'('
name|'filename'
op|','
name|'flags'
op|','
name|'attrs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'savedAttributes'
op|'.'
name|'update'
op|'('
name|'attrs'
op|')'
newline|'\n'
name|'return'
name|'oldOpenFile'
op|'('
name|'filename'
op|','
name|'flags'
op|','
name|'attrs'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'server'
op|'.'
name|'client'
op|'.'
name|'openFile'
op|'='
name|'openFile'
newline|'\n'
nl|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'openFile'
op|'('
string|'"testfile1"'
op|','
name|'filetransfer'
op|'.'
name|'FXF_READ'
op|'|'
nl|'\n'
name|'filetransfer'
op|'.'
name|'FXF_WRITE'
op|','
op|'{'
string|'"ext_foo"'
op|':'
string|'"bar"'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|check
name|'def'
name|'check'
op|'('
name|'ign'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'savedAttributes'
op|','
op|'{'
string|'"ext_foo"'
op|':'
string|'"bar"'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'check'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|testRemoveFile
dedent|''
name|'def'
name|'testRemoveFile'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'getAttrs'
op|'('
string|'"testRemoveFile"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
DECL|function|_removeFile
name|'def'
name|'_removeFile'
op|'('
name|'ignored'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'removeFile'
op|'('
string|'"testRemoveFile"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
dedent|''
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_removeFile'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_removeFile'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'assertFailure'
op|'('
name|'d'
op|','
name|'filetransfer'
op|'.'
name|'SFTPError'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testRenameFile
dedent|''
name|'def'
name|'testRenameFile'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'getAttrs'
op|'('
string|'"testRenameFile"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
DECL|function|_rename
name|'def'
name|'_rename'
op|'('
name|'attrs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'renameFile'
op|'('
string|'"testRenameFile"'
op|','
string|'"testRenamedFile"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_testRenamed'
op|','
name|'attrs'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
DECL|function|_testRenamed
dedent|''
name|'def'
name|'_testRenamed'
op|'('
name|'_'
op|','
name|'attrs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'getAttrs'
op|'('
string|'"testRenamedFile"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'failUnlessEqual'
op|','
name|'attrs'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_rename'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testDirectoryBad
dedent|''
name|'def'
name|'testDirectoryBad'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'getAttrs'
op|'('
string|'"testMakeDirectory"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'assertFailure'
op|'('
name|'d'
op|','
name|'filetransfer'
op|'.'
name|'SFTPError'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testDirectoryCreation
dedent|''
name|'def'
name|'testDirectoryCreation'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'makeDirectory'
op|'('
string|'"testMakeDirectory"'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|_getAttrs
name|'def'
name|'_getAttrs'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'getAttrs'
op|'('
string|'"testMakeDirectory"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
comment|'# XXX not until version 4/5'
nl|'\n'
comment|"# self.failUnlessEqual(filetransfer.FILEXFER_TYPE_DIRECTORY&attrs['type'],"
nl|'\n'
comment|'#                     filetransfer.FILEXFER_TYPE_DIRECTORY)'
nl|'\n'
nl|'\n'
DECL|function|_removeDirectory
dedent|''
name|'def'
name|'_removeDirectory'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'removeDirectory'
op|'('
string|'"testMakeDirectory"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
dedent|''
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_getAttrs'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_removeDirectory'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_getAttrs'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'assertFailure'
op|'('
name|'d'
op|','
name|'filetransfer'
op|'.'
name|'SFTPError'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testOpenDirectory
dedent|''
name|'def'
name|'testOpenDirectory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'openDirectory'
op|'('
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'files'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|_getFiles
name|'def'
name|'_getFiles'
op|'('
name|'openDir'
op|')'
op|':'
newline|'\n'
DECL|function|append
indent|'            '
name|'def'
name|'append'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'files'
op|'.'
name|'append'
op|'('
name|'f'
op|')'
newline|'\n'
name|'return'
name|'openDir'
newline|'\n'
dedent|''
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'openDir'
op|'.'
name|'next'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'append'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_getFiles'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'_close'
op|','
name|'openDir'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|function|_checkFiles
dedent|''
name|'def'
name|'_checkFiles'
op|'('
name|'ignored'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fs'
op|'='
name|'list'
op|'('
name|'zip'
op|'('
op|'*'
name|'files'
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'fs'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnlessEqual'
op|'('
name|'fs'
op|','
nl|'\n'
op|'['
string|"'.testHiddenFile'"
op|','
string|"'testDirectory'"
op|','
nl|'\n'
string|"'testRemoveFile'"
op|','
string|"'testRenameFile'"
op|','
nl|'\n'
string|"'testfile1'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_close
dedent|''
name|'def'
name|'_close'
op|'('
name|'_'
op|','
name|'openDir'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'openDir'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
dedent|''
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_getFiles'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_checkFiles'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|testLinkDoesntExist
dedent|''
name|'def'
name|'testLinkDoesntExist'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'getAttrs'
op|'('
string|"'testLink'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'assertFailure'
op|'('
name|'d'
op|','
name|'filetransfer'
op|'.'
name|'SFTPError'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testLinkSharesAttrs
dedent|''
name|'def'
name|'testLinkSharesAttrs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'makeLink'
op|'('
string|"'testLink'"
op|','
string|"'testfile1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
DECL|function|_getFirstAttrs
name|'def'
name|'_getFirstAttrs'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'getAttrs'
op|'('
string|"'testLink'"
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
DECL|function|_getSecondAttrs
dedent|''
name|'def'
name|'_getSecondAttrs'
op|'('
name|'firstAttrs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'getAttrs'
op|'('
string|"'testfile1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'assertEqual'
op|','
name|'firstAttrs'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
dedent|''
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_getFirstAttrs'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_getSecondAttrs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testLinkPath
dedent|''
name|'def'
name|'testLinkPath'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'makeLink'
op|'('
string|"'testLink'"
op|','
string|"'testfile1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
DECL|function|_readLink
name|'def'
name|'_readLink'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'readLink'
op|'('
string|"'testLink'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'failUnlessEqual'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'os'
op|'.'
name|'getcwd'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'testDir'
op|','
string|"'testfile1'"
op|')'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
DECL|function|_realPath
dedent|''
name|'def'
name|'_realPath'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'realPath'
op|'('
string|"'testLink'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'failUnlessEqual'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'os'
op|'.'
name|'getcwd'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'testDir'
op|','
string|"'testfile1'"
op|')'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
dedent|''
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_readLink'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_realPath'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|testExtendedRequest
dedent|''
name|'def'
name|'testExtendedRequest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'extendedRequest'
op|'('
string|"'testExtendedRequest'"
op|','
string|"'foo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'failUnlessEqual'
op|','
string|"'bar'"
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbTestExtendedRequest'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|_cbTestExtendedRequest
dedent|''
name|'def'
name|'_cbTestExtendedRequest'
op|'('
name|'self'
op|','
name|'ignored'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'extendedRequest'
op|'('
string|"'testBadRequest'"
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_emptyBuffers'
op|'('
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'assertFailure'
op|'('
name|'d'
op|','
name|'NotImplementedError'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeConn
dedent|''
dedent|''
name|'class'
name|'FakeConn'
op|':'
newline|'\n'
DECL|member|sendClose
indent|'    '
name|'def'
name|'sendClose'
op|'('
name|'self'
op|','
name|'channel'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestFileTransferClose
dedent|''
dedent|''
name|'class'
name|'TestFileTransferClose'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'if'
name|'not'
name|'unix'
op|':'
newline|'\n'
DECL|variable|skip
indent|'        '
name|'skip'
op|'='
string|'"can\'t run on non-posix computers"'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'avatar'
op|'='
name|'TestAvatar'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|buildServerConnection
dedent|''
name|'def'
name|'buildServerConnection'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# make a server connection'
nl|'\n'
indent|'        '
name|'conn'
op|'='
name|'connection'
op|'.'
name|'SSHConnection'
op|'('
op|')'
newline|'\n'
comment|"# server connections have a 'self.transport.avatar'."
nl|'\n'
DECL|class|DummyTransport
name|'class'
name|'DummyTransport'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'transport'
op|'='
name|'self'
newline|'\n'
DECL|member|sendPacket
dedent|''
name|'def'
name|'sendPacket'
op|'('
name|'self'
op|','
name|'kind'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
DECL|member|logPrefix
dedent|''
name|'def'
name|'logPrefix'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|"'dummy transport'"
newline|'\n'
dedent|''
dedent|''
name|'conn'
op|'.'
name|'transport'
op|'='
name|'DummyTransport'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'transport'
op|'.'
name|'avatar'
op|'='
name|'self'
op|'.'
name|'avatar'
newline|'\n'
name|'return'
name|'conn'
newline|'\n'
nl|'\n'
DECL|member|interceptConnectionLost
dedent|''
name|'def'
name|'interceptConnectionLost'
op|'('
name|'self'
op|','
name|'sftpServer'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'connectionLostFired'
op|'='
name|'False'
newline|'\n'
name|'origConnectionLost'
op|'='
name|'sftpServer'
op|'.'
name|'connectionLost'
newline|'\n'
DECL|function|connectionLost
name|'def'
name|'connectionLost'
op|'('
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'connectionLostFired'
op|'='
name|'True'
newline|'\n'
name|'origConnectionLost'
op|'('
name|'reason'
op|')'
newline|'\n'
dedent|''
name|'sftpServer'
op|'.'
name|'connectionLost'
op|'='
name|'connectionLost'
newline|'\n'
nl|'\n'
DECL|member|assertSFTPConnectionLost
dedent|''
name|'def'
name|'assertSFTPConnectionLost'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'connectionLostFired'
op|','
nl|'\n'
string|'"sftpServer\'s connectionLost was not called"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sessionClose
dedent|''
name|'def'
name|'test_sessionClose'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Closing a session should notify an SFTP subsystem launched by that\n        session.\n        """'
newline|'\n'
comment|'# make a session'
nl|'\n'
name|'testSession'
op|'='
name|'session'
op|'.'
name|'SSHSession'
op|'('
name|'conn'
op|'='
name|'FakeConn'
op|'('
op|')'
op|','
name|'avatar'
op|'='
name|'self'
op|'.'
name|'avatar'
op|')'
newline|'\n'
nl|'\n'
comment|'# start an SFTP subsystem on the session'
nl|'\n'
name|'testSession'
op|'.'
name|'request_subsystem'
op|'('
name|'common'
op|'.'
name|'NS'
op|'('
string|"'sftp'"
op|')'
op|')'
newline|'\n'
name|'sftpServer'
op|'='
name|'testSession'
op|'.'
name|'client'
op|'.'
name|'transport'
op|'.'
name|'proto'
newline|'\n'
nl|'\n'
comment|"# intercept connectionLost so we can check that it's called"
nl|'\n'
name|'self'
op|'.'
name|'interceptConnectionLost'
op|'('
name|'sftpServer'
op|')'
newline|'\n'
nl|'\n'
comment|'# close session'
nl|'\n'
name|'testSession'
op|'.'
name|'closeReceived'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertSFTPConnectionLost'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_clientClosesChannelOnConnnection
dedent|''
name|'def'
name|'test_clientClosesChannelOnConnnection'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A client sending CHANNEL_CLOSE should trigger closeReceived on the\n        associated channel instance.\n        """'
newline|'\n'
name|'conn'
op|'='
name|'self'
op|'.'
name|'buildServerConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# somehow get a session'
nl|'\n'
name|'packet'
op|'='
name|'common'
op|'.'
name|'NS'
op|'('
string|"'session'"
op|')'
op|'+'
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'>L'"
op|','
number|'0'
op|')'
op|'*'
number|'3'
newline|'\n'
name|'conn'
op|'.'
name|'ssh_CHANNEL_OPEN'
op|'('
name|'packet'
op|')'
newline|'\n'
name|'sessionChannel'
op|'='
name|'conn'
op|'.'
name|'channels'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
name|'sessionChannel'
op|'.'
name|'request_subsystem'
op|'('
name|'common'
op|'.'
name|'NS'
op|'('
string|"'sftp'"
op|')'
op|')'
newline|'\n'
name|'sftpServer'
op|'='
name|'sessionChannel'
op|'.'
name|'client'
op|'.'
name|'transport'
op|'.'
name|'proto'
newline|'\n'
name|'self'
op|'.'
name|'interceptConnectionLost'
op|'('
name|'sftpServer'
op|')'
newline|'\n'
nl|'\n'
comment|'# intercept closeReceived'
nl|'\n'
name|'self'
op|'.'
name|'interceptConnectionLost'
op|'('
name|'sftpServer'
op|')'
newline|'\n'
nl|'\n'
comment|'# close the connection'
nl|'\n'
name|'conn'
op|'.'
name|'ssh_CHANNEL_CLOSE'
op|'('
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'>L'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertSFTPConnectionLost'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_stopConnectionServiceClosesChannel
dedent|''
name|'def'
name|'test_stopConnectionServiceClosesChannel'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Closing an SSH connection should close all sessions within it.\n        """'
newline|'\n'
name|'conn'
op|'='
name|'self'
op|'.'
name|'buildServerConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# somehow get a session'
nl|'\n'
name|'packet'
op|'='
name|'common'
op|'.'
name|'NS'
op|'('
string|"'session'"
op|')'
op|'+'
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'>L'"
op|','
number|'0'
op|')'
op|'*'
number|'3'
newline|'\n'
name|'conn'
op|'.'
name|'ssh_CHANNEL_OPEN'
op|'('
name|'packet'
op|')'
newline|'\n'
name|'sessionChannel'
op|'='
name|'conn'
op|'.'
name|'channels'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
name|'sessionChannel'
op|'.'
name|'request_subsystem'
op|'('
name|'common'
op|'.'
name|'NS'
op|'('
string|"'sftp'"
op|')'
op|')'
newline|'\n'
name|'sftpServer'
op|'='
name|'sessionChannel'
op|'.'
name|'client'
op|'.'
name|'transport'
op|'.'
name|'proto'
newline|'\n'
name|'self'
op|'.'
name|'interceptConnectionLost'
op|'('
name|'sftpServer'
op|')'
newline|'\n'
nl|'\n'
comment|'# close the connection'
nl|'\n'
name|'conn'
op|'.'
name|'serviceStopped'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertSFTPConnectionLost'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestConstants
dedent|''
dedent|''
name|'class'
name|'TestConstants'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Tests for the constants used by the SFTP protocol implementation.\n\n    @ivar filexferSpecExcerpts: Excerpts from the\n        draft-ietf-secsh-filexfer-02.txt (draft) specification of the SFTP\n        protocol.  There are more recent drafts of the specification, but this\n        one describes version 3, which is what conch (and OpenSSH) implements.\n    """'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|filexferSpecExcerpts
name|'filexferSpecExcerpts'
op|'='
op|'['
nl|'\n'
string|'"""\n           The following values are defined for packet types.\n\n                #define SSH_FXP_INIT                1\n                #define SSH_FXP_VERSION             2\n                #define SSH_FXP_OPEN                3\n                #define SSH_FXP_CLOSE               4\n                #define SSH_FXP_READ                5\n                #define SSH_FXP_WRITE               6\n                #define SSH_FXP_LSTAT               7\n                #define SSH_FXP_FSTAT               8\n                #define SSH_FXP_SETSTAT             9\n                #define SSH_FXP_FSETSTAT           10\n                #define SSH_FXP_OPENDIR            11\n                #define SSH_FXP_READDIR            12\n                #define SSH_FXP_REMOVE             13\n                #define SSH_FXP_MKDIR              14\n                #define SSH_FXP_RMDIR              15\n                #define SSH_FXP_REALPATH           16\n                #define SSH_FXP_STAT               17\n                #define SSH_FXP_RENAME             18\n                #define SSH_FXP_READLINK           19\n                #define SSH_FXP_SYMLINK            20\n                #define SSH_FXP_STATUS            101\n                #define SSH_FXP_HANDLE            102\n                #define SSH_FXP_DATA              103\n                #define SSH_FXP_NAME              104\n                #define SSH_FXP_ATTRS             105\n                #define SSH_FXP_EXTENDED          200\n                #define SSH_FXP_EXTENDED_REPLY    201\n\n           Additional packet types should only be defined if the protocol\n           version number (see Section ``Protocol Initialization\'\') is\n           incremented, and their use MUST be negotiated using the version\n           number.  However, the SSH_FXP_EXTENDED and SSH_FXP_EXTENDED_REPLY\n           packets can be used to implement vendor-specific extensions.  See\n           Section ``Vendor-Specific-Extensions\'\' for more details.\n        """'
op|','
nl|'\n'
string|'"""\n            The flags bits are defined to have the following values:\n\n                #define SSH_FILEXFER_ATTR_SIZE          0x00000001\n                #define SSH_FILEXFER_ATTR_UIDGID        0x00000002\n                #define SSH_FILEXFER_ATTR_PERMISSIONS   0x00000004\n                #define SSH_FILEXFER_ATTR_ACMODTIME     0x00000008\n                #define SSH_FILEXFER_ATTR_EXTENDED      0x80000000\n\n        """'
op|','
nl|'\n'
string|'"""\n            The `pflags\' field is a bitmask.  The following bits have been\n           defined.\n\n                #define SSH_FXF_READ            0x00000001\n                #define SSH_FXF_WRITE           0x00000002\n                #define SSH_FXF_APPEND          0x00000004\n                #define SSH_FXF_CREAT           0x00000008\n                #define SSH_FXF_TRUNC           0x00000010\n                #define SSH_FXF_EXCL            0x00000020\n        """'
op|','
nl|'\n'
string|'"""\n            Currently, the following values are defined (other values may be\n           defined by future versions of this protocol):\n\n                #define SSH_FX_OK                            0\n                #define SSH_FX_EOF                           1\n                #define SSH_FX_NO_SUCH_FILE                  2\n                #define SSH_FX_PERMISSION_DENIED             3\n                #define SSH_FX_FAILURE                       4\n                #define SSH_FX_BAD_MESSAGE                   5\n                #define SSH_FX_NO_CONNECTION                 6\n                #define SSH_FX_CONNECTION_LOST               7\n                #define SSH_FX_OP_UNSUPPORTED                8\n        """'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_constantsAgainstSpec
name|'def'
name|'test_constantsAgainstSpec'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        The constants used by the SFTP protocol implementation match those\n        found by searching through the spec.\n        """'
newline|'\n'
name|'constants'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'excerpt'
name|'in'
name|'self'
op|'.'
name|'filexferSpecExcerpts'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'line'
name|'in'
name|'excerpt'
op|'.'
name|'splitlines'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'m'
op|'='
name|'re'
op|'.'
name|'match'
op|'('
string|"'^\\s*#define SSH_([A-Z_]+)\\s+([0-9x]*)\\s*$'"
op|','
name|'line'
op|')'
newline|'\n'
name|'if'
name|'m'
op|':'
newline|'\n'
indent|'                    '
name|'constants'
op|'['
name|'m'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
op|']'
op|'='
name|'long'
op|'('
name|'m'
op|'.'
name|'group'
op|'('
number|'2'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'len'
op|'('
name|'constants'
op|')'
op|'>'
number|'0'
op|','
string|'"No constants found (the test must be buggy)."'
op|')'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'constants'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'v'
op|','
name|'getattr'
op|'('
name|'filetransfer'
op|','
name|'k'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
