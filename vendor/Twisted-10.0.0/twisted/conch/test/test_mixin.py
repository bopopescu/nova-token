begin_unit
comment|'# -*- twisted.conch.test.test_mixin -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2004 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
op|','
name|'protocol'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'test'
op|'.'
name|'proto_helpers'
name|'import'
name|'StringTransport'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'conch'
name|'import'
name|'mixin'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestBufferingProto
name|'class'
name|'TestBufferingProto'
op|'('
name|'mixin'
op|'.'
name|'BufferingMixin'
op|')'
op|':'
newline|'\n'
DECL|variable|scheduled
indent|'    '
name|'scheduled'
op|'='
name|'False'
newline|'\n'
DECL|variable|rescheduled
name|'rescheduled'
op|'='
number|'0'
newline|'\n'
DECL|member|schedule
name|'def'
name|'schedule'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'scheduled'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'object'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|reschedule
dedent|''
name|'def'
name|'reschedule'
op|'('
name|'self'
op|','
name|'token'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'rescheduled'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|BufferingTest
dedent|''
dedent|''
name|'class'
name|'BufferingTest'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|testBuffering
indent|'    '
name|'def'
name|'testBuffering'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|'='
name|'TestBufferingProto'
op|'('
op|')'
newline|'\n'
name|'t'
op|'='
name|'p'
op|'.'
name|'transport'
op|'='
name|'StringTransport'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'failIf'
op|'('
name|'p'
op|'.'
name|'scheduled'
op|')'
newline|'\n'
nl|'\n'
name|'L'
op|'='
op|'['
string|"'foo'"
op|','
string|"'bar'"
op|','
string|"'baz'"
op|','
string|"'quux'"
op|']'
newline|'\n'
nl|'\n'
name|'p'
op|'.'
name|'write'
op|'('
string|"'foo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'p'
op|'.'
name|'scheduled'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failIf'
op|'('
name|'p'
op|'.'
name|'rescheduled'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'s'
name|'in'
name|'L'
op|':'
newline|'\n'
indent|'            '
name|'n'
op|'='
name|'p'
op|'.'
name|'rescheduled'
newline|'\n'
name|'p'
op|'.'
name|'write'
op|'('
name|'s'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'p'
op|'.'
name|'rescheduled'
op|','
name|'n'
op|'+'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'p'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|"'foo'"
op|'+'
string|"''"
op|'.'
name|'join'
op|'('
name|'L'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
