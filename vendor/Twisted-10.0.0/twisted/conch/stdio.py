begin_unit
comment|'# -*- test-case-name: twisted.conch.test.test_manhole -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2007 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nAsynchronous local terminal input handling\n\n@author: Jp Calderone\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
op|','
name|'tty'
op|','
name|'sys'
op|','
name|'termios'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
op|','
name|'stdio'
op|','
name|'protocol'
op|','
name|'defer'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'failure'
op|','
name|'reflect'
op|','
name|'log'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'conch'
op|'.'
name|'insults'
op|'.'
name|'insults'
name|'import'
name|'ServerProtocol'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'conch'
op|'.'
name|'manhole'
name|'import'
name|'ColoredManhole'
newline|'\n'
nl|'\n'
DECL|class|UnexpectedOutputError
name|'class'
name|'UnexpectedOutputError'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
DECL|class|TerminalProcessProtocol
dedent|''
name|'class'
name|'TerminalProcessProtocol'
op|'('
name|'protocol'
op|'.'
name|'ProcessProtocol'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'proto'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'proto'
op|'='
name|'proto'
newline|'\n'
name|'self'
op|'.'
name|'onConnection'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|connectionMade
dedent|''
name|'def'
name|'connectionMade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'proto'
op|'.'
name|'makeConnection'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'onConnection'
op|'.'
name|'callback'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'onConnection'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|write
dedent|''
name|'def'
name|'write'
op|'('
name|'self'
op|','
name|'bytes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
name|'bytes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|outReceived
dedent|''
name|'def'
name|'outReceived'
op|'('
name|'self'
op|','
name|'bytes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'proto'
op|'.'
name|'dataReceived'
op|'('
name|'bytes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|errReceived
dedent|''
name|'def'
name|'errReceived'
op|'('
name|'self'
op|','
name|'bytes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'proto'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'proto'
op|'.'
name|'connectionLost'
op|'('
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'UnexpectedOutputError'
op|'('
name|'bytes'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proto'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|childConnectionLost
dedent|''
dedent|''
name|'def'
name|'childConnectionLost'
op|'('
name|'self'
op|','
name|'childFD'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'proto'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'proto'
op|'.'
name|'childConnectionLost'
op|'('
name|'childFD'
op|')'
newline|'\n'
nl|'\n'
DECL|member|processEnded
dedent|''
dedent|''
name|'def'
name|'processEnded'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'proto'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'proto'
op|'.'
name|'connectionLost'
op|'('
name|'reason'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proto'
op|'='
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConsoleManhole
dedent|''
dedent|''
dedent|''
name|'class'
name|'ConsoleManhole'
op|'('
name|'ColoredManhole'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A manhole protocol specifically for use with L{stdio.StandardIO}.\n    """'
newline|'\n'
DECL|member|connectionLost
name|'def'
name|'connectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        When the connection is lost, there is nothing more to do.  Stop the\n        reactor so that the process can exit.\n        """'
newline|'\n'
name|'reactor'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|runWithProtocol
dedent|''
dedent|''
name|'def'
name|'runWithProtocol'
op|'('
name|'klass'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'fd'
op|'='
name|'sys'
op|'.'
name|'__stdin__'
op|'.'
name|'fileno'
op|'('
op|')'
newline|'\n'
name|'oldSettings'
op|'='
name|'termios'
op|'.'
name|'tcgetattr'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'tty'
op|'.'
name|'setraw'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|'='
name|'ServerProtocol'
op|'('
name|'klass'
op|')'
newline|'\n'
name|'stdio'
op|'.'
name|'StandardIO'
op|'('
name|'p'
op|')'
newline|'\n'
name|'reactor'
op|'.'
name|'run'
op|'('
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'        '
name|'termios'
op|'.'
name|'tcsetattr'
op|'('
name|'fd'
op|','
name|'termios'
op|'.'
name|'TCSANOW'
op|','
name|'oldSettings'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'write'
op|'('
name|'fd'
op|','
string|'"\\r\\x1bc\\r"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|main
dedent|''
dedent|''
name|'def'
name|'main'
op|'('
name|'argv'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'log'
op|'.'
name|'startLogging'
op|'('
name|'file'
op|'('
string|"'child.log'"
op|','
string|"'w'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'argv'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'argv'
op|'='
name|'sys'
op|'.'
name|'argv'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'argv'
op|':'
newline|'\n'
indent|'        '
name|'klass'
op|'='
name|'reflect'
op|'.'
name|'namedClass'
op|'('
name|'argv'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'klass'
op|'='
name|'ConsoleManhole'
newline|'\n'
dedent|''
name|'runWithProtocol'
op|'('
name|'klass'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
