begin_unit
comment|'# -*- test-case-name: twisted.conch.test.test_cftp -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2009 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nImplementation module for the I{cftp} command.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
op|','
name|'sys'
op|','
name|'getpass'
op|','
name|'struct'
op|','
name|'tty'
op|','
name|'fcntl'
op|','
name|'stat'
newline|'\n'
name|'import'
name|'fnmatch'
op|','
name|'pwd'
op|','
name|'time'
op|','
name|'glob'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'conch'
op|'.'
name|'client'
name|'import'
name|'connect'
op|','
name|'default'
op|','
name|'options'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'conch'
op|'.'
name|'ssh'
name|'import'
name|'connection'
op|','
name|'common'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'conch'
op|'.'
name|'ssh'
name|'import'
name|'channel'
op|','
name|'filetransfer'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'protocols'
name|'import'
name|'basic'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
op|','
name|'stdio'
op|','
name|'defer'
op|','
name|'utils'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
op|','
name|'usage'
op|','
name|'failure'
newline|'\n'
nl|'\n'
DECL|class|ClientOptions
name|'class'
name|'ClientOptions'
op|'('
name|'options'
op|'.'
name|'ConchOptions'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'synopsis'
op|'='
string|'"""Usage:   cftp [options] [user@]host\n         cftp [options] [user@]host[:dir[/]]\n         cftp [options] [user@]host[:file [localfile]]\n"""'
newline|'\n'
DECL|variable|longdesc
name|'longdesc'
op|'='
op|'('
string|'"cftp is a client for logging into a remote machine and "'
nl|'\n'
string|'"executing commands to send and receive file information"'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|optParameters
name|'optParameters'
op|'='
op|'['
nl|'\n'
op|'['
string|"'buffersize'"
op|','
string|"'B'"
op|','
number|'32768'
op|','
string|"'Size of the buffer to use for sending/receiving.'"
op|']'
op|','
nl|'\n'
op|'['
string|"'batchfile'"
op|','
string|"'b'"
op|','
name|'None'
op|','
string|"'File to read commands from, or \\'-\\' for stdin.'"
op|']'
op|','
nl|'\n'
op|'['
string|"'requests'"
op|','
string|"'R'"
op|','
number|'5'
op|','
string|"'Number of requests to make before waiting for a reply.'"
op|']'
op|','
nl|'\n'
op|'['
string|"'subsystem'"
op|','
string|"'s'"
op|','
string|"'sftp'"
op|','
string|"'Subsystem/server program to connect to.'"
op|']'
op|']'
newline|'\n'
DECL|variable|zsh_altArgDescr
name|'zsh_altArgDescr'
op|'='
op|'{'
string|'"buffersize"'
op|':'
string|'"Size of send/receive buffer (default: 32768)"'
op|'}'
newline|'\n'
comment|'#zsh_multiUse = ["foo", "bar"]'
nl|'\n'
comment|'#zsh_mutuallyExclusive = [("foo", "bar"), ("bar", "baz")]'
nl|'\n'
comment|'#zsh_actions = {"foo":\'_files -g "*.foo"\', "bar":"(one two three)"}'
nl|'\n'
comment|'#zsh_actionDescr = {"logfile":"log file name", "random":"random seed"}'
nl|'\n'
name|'zsh_extras'
op|'='
op|'['
string|"'2::localfile:{if [[ $words[1] == *:* ]]; then; _files; fi}'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|parseArgs
name|'def'
name|'parseArgs'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'localPath'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'['
string|"'remotePath'"
op|']'
op|'='
string|"''"
newline|'\n'
name|'if'
string|"':'"
name|'in'
name|'host'
op|':'
newline|'\n'
indent|'            '
name|'host'
op|','
name|'self'
op|'['
string|"'remotePath'"
op|']'
op|'='
name|'host'
op|'.'
name|'split'
op|'('
string|"':'"
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'['
string|"'remotePath'"
op|']'
op|'.'
name|'rstrip'
op|'('
string|"'/'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'['
string|"'host'"
op|']'
op|'='
name|'host'
newline|'\n'
name|'self'
op|'['
string|"'localPath'"
op|']'
op|'='
name|'localPath'
newline|'\n'
nl|'\n'
DECL|function|run
dedent|''
dedent|''
name|'def'
name|'run'
op|'('
op|')'
op|':'
newline|'\n'
comment|'#    import hotshot'
nl|'\n'
comment|"#    prof = hotshot.Profile('cftp.prof')"
nl|'\n'
comment|'#    prof.start()'
nl|'\n'
indent|'    '
name|'args'
op|'='
name|'sys'
op|'.'
name|'argv'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
name|'if'
string|"'-l'"
name|'in'
name|'args'
op|':'
comment|'# cvs is an idiot'
newline|'\n'
indent|'        '
name|'i'
op|'='
name|'args'
op|'.'
name|'index'
op|'('
string|"'-l'"
op|')'
newline|'\n'
name|'args'
op|'='
name|'args'
op|'['
name|'i'
op|':'
name|'i'
op|'+'
number|'2'
op|']'
op|'+'
name|'args'
newline|'\n'
name|'del'
name|'args'
op|'['
name|'i'
op|'+'
number|'2'
op|':'
name|'i'
op|'+'
number|'4'
op|']'
newline|'\n'
dedent|''
name|'options'
op|'='
name|'ClientOptions'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'options'
op|'.'
name|'parseOptions'
op|'('
name|'args'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'usage'
op|'.'
name|'UsageError'
op|','
name|'u'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'ERROR: %s'"
op|'%'
name|'u'
newline|'\n'
name|'sys'
op|'.'
name|'exit'
op|'('
number|'1'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'options'
op|'['
string|"'log'"
op|']'
op|':'
newline|'\n'
indent|'        '
name|'realout'
op|'='
name|'sys'
op|'.'
name|'stdout'
newline|'\n'
name|'log'
op|'.'
name|'startLogging'
op|'('
name|'sys'
op|'.'
name|'stderr'
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'realout'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'discardLogs'
op|'('
op|')'
newline|'\n'
dedent|''
name|'doConnect'
op|'('
name|'options'
op|')'
newline|'\n'
name|'reactor'
op|'.'
name|'run'
op|'('
op|')'
newline|'\n'
comment|'#    prof.stop()'
nl|'\n'
comment|'#    prof.close()'
nl|'\n'
nl|'\n'
DECL|function|handleError
dedent|''
name|'def'
name|'handleError'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'global'
name|'exitStatus'
newline|'\n'
name|'exitStatus'
op|'='
number|'2'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'reactor'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
name|'pass'
newline|'\n'
name|'log'
op|'.'
name|'err'
op|'('
name|'failure'
op|'.'
name|'Failure'
op|'('
op|')'
op|')'
newline|'\n'
name|'raise'
newline|'\n'
nl|'\n'
DECL|function|doConnect
dedent|''
name|'def'
name|'doConnect'
op|'('
name|'options'
op|')'
op|':'
newline|'\n'
comment|'#    log.deferr = handleError # HACK'
nl|'\n'
indent|'    '
name|'if'
string|"'@'"
name|'in'
name|'options'
op|'['
string|"'host'"
op|']'
op|':'
newline|'\n'
indent|'        '
name|'options'
op|'['
string|"'user'"
op|']'
op|','
name|'options'
op|'['
string|"'host'"
op|']'
op|'='
name|'options'
op|'['
string|"'host'"
op|']'
op|'.'
name|'split'
op|'('
string|"'@'"
op|','
number|'1'
op|')'
newline|'\n'
dedent|''
name|'host'
op|'='
name|'options'
op|'['
string|"'host'"
op|']'
newline|'\n'
name|'if'
name|'not'
name|'options'
op|'['
string|"'user'"
op|']'
op|':'
newline|'\n'
indent|'        '
name|'options'
op|'['
string|"'user'"
op|']'
op|'='
name|'getpass'
op|'.'
name|'getuser'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'options'
op|'['
string|"'port'"
op|']'
op|':'
newline|'\n'
indent|'        '
name|'options'
op|'['
string|"'port'"
op|']'
op|'='
number|'22'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'options'
op|'['
string|"'port'"
op|']'
op|'='
name|'int'
op|'('
name|'options'
op|'['
string|"'port'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'host'
op|'='
name|'options'
op|'['
string|"'host'"
op|']'
newline|'\n'
name|'port'
op|'='
name|'options'
op|'['
string|"'port'"
op|']'
newline|'\n'
name|'conn'
op|'='
name|'SSHConnection'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'options'
op|'='
name|'options'
newline|'\n'
name|'vhk'
op|'='
name|'default'
op|'.'
name|'verifyHostKey'
newline|'\n'
name|'uao'
op|'='
name|'default'
op|'.'
name|'SSHUserAuthClient'
op|'('
name|'options'
op|'['
string|"'user'"
op|']'
op|','
name|'options'
op|','
name|'conn'
op|')'
newline|'\n'
name|'connect'
op|'.'
name|'connect'
op|'('
name|'host'
op|','
name|'port'
op|','
name|'options'
op|','
name|'vhk'
op|','
name|'uao'
op|')'
op|'.'
name|'addErrback'
op|'('
name|'_ebExit'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_ebExit
dedent|''
name|'def'
name|'_ebExit'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
comment|'#global exitStatus'
nl|'\n'
indent|'    '
name|'if'
name|'hasattr'
op|'('
name|'f'
op|'.'
name|'value'
op|','
string|"'value'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'s'
op|'='
name|'f'
op|'.'
name|'value'
op|'.'
name|'value'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'s'
op|'='
name|'str'
op|'('
name|'f'
op|')'
newline|'\n'
dedent|''
name|'print'
name|'s'
newline|'\n'
comment|'#exitStatus = "conch: exiting with error %s" % f'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'reactor'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|_ignore
dedent|''
name|'def'
name|'_ignore'
op|'('
op|'*'
name|'args'
op|')'
op|':'
name|'pass'
newline|'\n'
nl|'\n'
DECL|class|FileWrapper
name|'class'
name|'FileWrapper'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'f'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'f'
op|'='
name|'f'
newline|'\n'
name|'self'
op|'.'
name|'total'
op|'='
number|'0.0'
newline|'\n'
name|'f'
op|'.'
name|'seek'
op|'('
number|'0'
op|','
number|'2'
op|')'
comment|'# seek to the end'
newline|'\n'
name|'self'
op|'.'
name|'size'
op|'='
name|'f'
op|'.'
name|'tell'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|__getattr__
dedent|''
name|'def'
name|'__getattr__'
op|'('
name|'self'
op|','
name|'attr'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'getattr'
op|'('
name|'self'
op|'.'
name|'f'
op|','
name|'attr'
op|')'
newline|'\n'
nl|'\n'
DECL|class|StdioClient
dedent|''
dedent|''
name|'class'
name|'StdioClient'
op|'('
name|'basic'
op|'.'
name|'LineReceiver'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|_pwd
indent|'    '
name|'_pwd'
op|'='
name|'pwd'
newline|'\n'
nl|'\n'
DECL|variable|ps
name|'ps'
op|'='
string|"'cftp> '"
newline|'\n'
DECL|variable|delimiter
name|'delimiter'
op|'='
string|"'\\n'"
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'client'
op|','
name|'f'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'client'
op|'='
name|'client'
newline|'\n'
name|'self'
op|'.'
name|'currentDirectory'
op|'='
string|"''"
newline|'\n'
name|'self'
op|'.'
name|'file'
op|'='
name|'f'
newline|'\n'
name|'self'
op|'.'
name|'useProgressBar'
op|'='
op|'('
name|'not'
name|'f'
name|'and'
number|'1'
op|')'
name|'or'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|connectionMade
dedent|''
name|'def'
name|'connectionMade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'client'
op|'.'
name|'realPath'
op|'('
string|"''"
op|')'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbSetCurDir'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cbSetCurDir
dedent|''
name|'def'
name|'_cbSetCurDir'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'currentDirectory'
op|'='
name|'path'
newline|'\n'
name|'self'
op|'.'
name|'_newLine'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|lineReceived
dedent|''
name|'def'
name|'lineReceived'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'client'
op|'.'
name|'transport'
op|'.'
name|'localClosed'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'log'
op|'.'
name|'msg'
op|'('
string|"'got line %s'"
op|'%'
name|'repr'
op|'('
name|'line'
op|')'
op|')'
newline|'\n'
name|'line'
op|'='
name|'line'
op|'.'
name|'lstrip'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'line'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_newLine'
op|'('
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'file'
name|'and'
name|'line'
op|'.'
name|'startswith'
op|'('
string|"'-'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'ignoreErrors'
op|'='
number|'1'
newline|'\n'
name|'line'
op|'='
name|'line'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'ignoreErrors'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'d'
op|'='
name|'self'
op|'.'
name|'_dispatchCommand'
op|'('
name|'line'
op|')'
newline|'\n'
name|'if'
name|'d'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbCommand'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebCommand'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_dispatchCommand
dedent|''
dedent|''
name|'def'
name|'_dispatchCommand'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"' '"
name|'in'
name|'line'
op|':'
newline|'\n'
indent|'            '
name|'command'
op|','
name|'rest'
op|'='
name|'line'
op|'.'
name|'split'
op|'('
string|"' '"
op|','
number|'1'
op|')'
newline|'\n'
name|'rest'
op|'='
name|'rest'
op|'.'
name|'lstrip'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'command'
op|','
name|'rest'
op|'='
name|'line'
op|','
string|"''"
newline|'\n'
dedent|''
name|'if'
name|'command'
op|'.'
name|'startswith'
op|'('
string|"'!'"
op|')'
op|':'
comment|'# command'
newline|'\n'
indent|'            '
name|'f'
op|'='
name|'self'
op|'.'
name|'cmd_EXEC'
newline|'\n'
name|'rest'
op|'='
op|'('
name|'command'
op|'['
number|'1'
op|':'
op|']'
op|'+'
string|"' '"
op|'+'
name|'rest'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'command'
op|'='
name|'command'
op|'.'
name|'upper'
op|'('
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|"'looking up cmd %s'"
op|'%'
name|'command'
op|')'
newline|'\n'
name|'f'
op|'='
name|'getattr'
op|'('
name|'self'
op|','
string|"'cmd_%s'"
op|'%'
name|'command'
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'f'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'f'
op|','
name|'rest'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_ebCommand'
op|'('
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'NotImplementedError'
op|'('
nl|'\n'
string|'"No command called `%s\'"'
op|'%'
name|'command'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_newLine'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_printFailure
dedent|''
dedent|''
name|'def'
name|'_printFailure'
op|'('
name|'self'
op|','
name|'f'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
name|'f'
op|')'
newline|'\n'
name|'e'
op|'='
name|'f'
op|'.'
name|'trap'
op|'('
name|'NotImplementedError'
op|','
name|'filetransfer'
op|'.'
name|'SFTPError'
op|','
name|'OSError'
op|','
name|'IOError'
op|')'
newline|'\n'
name|'if'
name|'e'
op|'=='
name|'NotImplementedError'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
name|'self'
op|'.'
name|'cmd_HELP'
op|'('
string|"''"
op|')'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'e'
op|'=='
name|'filetransfer'
op|'.'
name|'SFTPError'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
string|'"remote error %i: %s\\n"'
op|'%'
nl|'\n'
op|'('
name|'f'
op|'.'
name|'value'
op|'.'
name|'code'
op|','
name|'f'
op|'.'
name|'value'
op|'.'
name|'message'
op|')'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'e'
name|'in'
op|'('
name|'OSError'
op|','
name|'IOError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
string|'"local error %i: %s\\n"'
op|'%'
nl|'\n'
op|'('
name|'f'
op|'.'
name|'value'
op|'.'
name|'errno'
op|','
name|'f'
op|'.'
name|'value'
op|'.'
name|'strerror'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_newLine
dedent|''
dedent|''
name|'def'
name|'_newLine'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'client'
op|'.'
name|'transport'
op|'.'
name|'localClosed'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
name|'self'
op|'.'
name|'ps'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ignoreErrors'
op|'='
number|'0'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'file'
op|':'
newline|'\n'
indent|'            '
name|'l'
op|'='
name|'self'
op|'.'
name|'file'
op|'.'
name|'readline'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'l'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'client'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
name|'l'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'lineReceived'
op|'('
name|'l'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cbCommand
dedent|''
dedent|''
dedent|''
name|'def'
name|'_cbCommand'
op|'('
name|'self'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'result'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
name|'result'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'result'
op|'.'
name|'endswith'
op|'('
string|"'\\n'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'_newLine'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_ebCommand
dedent|''
name|'def'
name|'_ebCommand'
op|'('
name|'self'
op|','
name|'f'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_printFailure'
op|'('
name|'f'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'file'
name|'and'
name|'not'
name|'self'
op|'.'
name|'ignoreErrors'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'client'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_newLine'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|cmd_CD
dedent|''
name|'def'
name|'cmd_CD'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|','
name|'rest'
op|'='
name|'self'
op|'.'
name|'_getFilename'
op|'('
name|'path'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'path'
op|'.'
name|'endswith'
op|'('
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'+='
string|"'/'"
newline|'\n'
dedent|''
name|'newPath'
op|'='
name|'path'
name|'and'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'currentDirectory'
op|','
name|'path'
op|')'
name|'or'
string|"''"
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'openDirectory'
op|'('
name|'newPath'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbCd'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebCommand'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|_cbCd
dedent|''
name|'def'
name|'_cbCd'
op|'('
name|'self'
op|','
name|'directory'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'directory'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'realPath'
op|'('
name|'directory'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbCurDir'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|_cbCurDir
dedent|''
name|'def'
name|'_cbCurDir'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'currentDirectory'
op|'='
name|'path'
newline|'\n'
nl|'\n'
DECL|member|cmd_CHGRP
dedent|''
name|'def'
name|'cmd_CHGRP'
op|'('
name|'self'
op|','
name|'rest'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'grp'
op|','
name|'rest'
op|'='
name|'rest'
op|'.'
name|'split'
op|'('
name|'None'
op|','
number|'1'
op|')'
newline|'\n'
name|'path'
op|','
name|'rest'
op|'='
name|'self'
op|'.'
name|'_getFilename'
op|'('
name|'rest'
op|')'
newline|'\n'
name|'grp'
op|'='
name|'int'
op|'('
name|'grp'
op|')'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'getAttrs'
op|'('
name|'path'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbSetUsrGrp'
op|','
name|'path'
op|','
name|'grp'
op|'='
name|'grp'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|cmd_CHMOD
dedent|''
name|'def'
name|'cmd_CHMOD'
op|'('
name|'self'
op|','
name|'rest'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mod'
op|','
name|'rest'
op|'='
name|'rest'
op|'.'
name|'split'
op|'('
name|'None'
op|','
number|'1'
op|')'
newline|'\n'
name|'path'
op|','
name|'rest'
op|'='
name|'self'
op|'.'
name|'_getFilename'
op|'('
name|'rest'
op|')'
newline|'\n'
name|'mod'
op|'='
name|'int'
op|'('
name|'mod'
op|','
number|'8'
op|')'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'setAttrs'
op|'('
name|'path'
op|','
op|'{'
string|"'permissions'"
op|':'
name|'mod'
op|'}'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_ignore'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|cmd_CHOWN
dedent|''
name|'def'
name|'cmd_CHOWN'
op|'('
name|'self'
op|','
name|'rest'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'usr'
op|','
name|'rest'
op|'='
name|'rest'
op|'.'
name|'split'
op|'('
name|'None'
op|','
number|'1'
op|')'
newline|'\n'
name|'path'
op|','
name|'rest'
op|'='
name|'self'
op|'.'
name|'_getFilename'
op|'('
name|'rest'
op|')'
newline|'\n'
name|'usr'
op|'='
name|'int'
op|'('
name|'usr'
op|')'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'getAttrs'
op|'('
name|'path'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbSetUsrGrp'
op|','
name|'path'
op|','
name|'usr'
op|'='
name|'usr'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|_cbSetUsrGrp
dedent|''
name|'def'
name|'_cbSetUsrGrp'
op|'('
name|'self'
op|','
name|'attrs'
op|','
name|'path'
op|','
name|'usr'
op|'='
name|'None'
op|','
name|'grp'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'new'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'new'
op|'['
string|"'uid'"
op|']'
op|'='
op|'('
name|'usr'
name|'is'
name|'not'
name|'None'
op|')'
name|'and'
name|'usr'
name|'or'
name|'attrs'
op|'['
string|"'uid'"
op|']'
newline|'\n'
name|'new'
op|'['
string|"'gid'"
op|']'
op|'='
op|'('
name|'grp'
name|'is'
name|'not'
name|'None'
op|')'
name|'and'
name|'grp'
name|'or'
name|'attrs'
op|'['
string|"'gid'"
op|']'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'setAttrs'
op|'('
name|'path'
op|','
name|'new'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_ignore'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|cmd_GET
dedent|''
name|'def'
name|'cmd_GET'
op|'('
name|'self'
op|','
name|'rest'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'remote'
op|','
name|'rest'
op|'='
name|'self'
op|'.'
name|'_getFilename'
op|'('
name|'rest'
op|')'
newline|'\n'
name|'if'
string|"'*'"
name|'in'
name|'remote'
name|'or'
string|"'?'"
name|'in'
name|'remote'
op|':'
comment|'# wildcard'
newline|'\n'
indent|'            '
name|'if'
name|'rest'
op|':'
newline|'\n'
indent|'                '
name|'local'
op|','
name|'rest'
op|'='
name|'self'
op|'.'
name|'_getFilename'
op|'('
name|'rest'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'local'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'return'
string|'"Wildcard get with non-directory target."'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'local'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'d'
op|'='
name|'self'
op|'.'
name|'_remoteGlob'
op|'('
name|'remote'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbGetMultiple'
op|','
name|'local'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
dedent|''
name|'if'
name|'rest'
op|':'
newline|'\n'
indent|'            '
name|'local'
op|','
name|'rest'
op|'='
name|'self'
op|'.'
name|'_getFilename'
op|'('
name|'rest'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'local'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'split'
op|'('
name|'remote'
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
dedent|''
name|'log'
op|'.'
name|'msg'
op|'('
op|'('
name|'remote'
op|','
name|'local'
op|')'
op|')'
newline|'\n'
name|'lf'
op|'='
name|'file'
op|'('
name|'local'
op|','
string|"'w'"
op|','
number|'0'
op|')'
newline|'\n'
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'currentDirectory'
op|','
name|'remote'
op|')'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'openFile'
op|'('
name|'path'
op|','
name|'filetransfer'
op|'.'
name|'FXF_READ'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbGetOpenFile'
op|','
name|'lf'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebCloseLf'
op|','
name|'lf'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|_cbGetMultiple
dedent|''
name|'def'
name|'_cbGetMultiple'
op|'('
name|'self'
op|','
name|'files'
op|','
name|'local'
op|')'
op|':'
newline|'\n'
comment|'#if self._useProgressBar: # one at a time'
nl|'\n'
comment|'# XXX this can be optimized for times w/o progress bar'
nl|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_cbGetMultipleNext'
op|'('
name|'None'
op|','
name|'files'
op|','
name|'local'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cbGetMultipleNext
dedent|''
name|'def'
name|'_cbGetMultipleNext'
op|'('
name|'self'
op|','
name|'res'
op|','
name|'files'
op|','
name|'local'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'res'
op|','
name|'failure'
op|'.'
name|'Failure'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_printFailure'
op|'('
name|'res'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'res'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
name|'res'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'res'
op|'.'
name|'endswith'
op|'('
string|"'\\n'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'files'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'f'
op|'='
name|'files'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'lf'
op|'='
name|'file'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'local'
op|','
name|'os'
op|'.'
name|'path'
op|'.'
name|'split'
op|'('
name|'f'
op|')'
op|'['
number|'1'
op|']'
op|')'
op|','
string|"'w'"
op|','
number|'0'
op|')'
newline|'\n'
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'currentDirectory'
op|','
name|'f'
op|')'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'openFile'
op|'('
name|'path'
op|','
name|'filetransfer'
op|'.'
name|'FXF_READ'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbGetOpenFile'
op|','
name|'lf'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebCloseLf'
op|','
name|'lf'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addBoth'
op|'('
name|'self'
op|'.'
name|'_cbGetMultipleNext'
op|','
name|'files'
op|','
name|'local'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|_ebCloseLf
dedent|''
name|'def'
name|'_ebCloseLf'
op|'('
name|'self'
op|','
name|'f'
op|','
name|'lf'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'lf'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'return'
name|'f'
newline|'\n'
nl|'\n'
DECL|member|_cbGetOpenFile
dedent|''
name|'def'
name|'_cbGetOpenFile'
op|'('
name|'self'
op|','
name|'rf'
op|','
name|'lf'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'rf'
op|'.'
name|'getAttrs'
op|'('
op|')'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbGetFileSize'
op|','
name|'rf'
op|','
name|'lf'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cbGetFileSize
dedent|''
name|'def'
name|'_cbGetFileSize'
op|'('
name|'self'
op|','
name|'attrs'
op|','
name|'rf'
op|','
name|'lf'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'stat'
op|'.'
name|'S_ISREG'
op|'('
name|'attrs'
op|'['
string|"'permissions'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'rf'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'lf'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'return'
string|'"Can\'t get non-regular file: %s"'
op|'%'
name|'rf'
op|'.'
name|'name'
newline|'\n'
dedent|''
name|'rf'
op|'.'
name|'size'
op|'='
name|'attrs'
op|'['
string|"'size'"
op|']'
newline|'\n'
name|'bufferSize'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'transport'
op|'.'
name|'conn'
op|'.'
name|'options'
op|'['
string|"'buffersize'"
op|']'
newline|'\n'
name|'numRequests'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'transport'
op|'.'
name|'conn'
op|'.'
name|'options'
op|'['
string|"'requests'"
op|']'
newline|'\n'
name|'rf'
op|'.'
name|'total'
op|'='
number|'0.0'
newline|'\n'
name|'dList'
op|'='
op|'['
op|']'
newline|'\n'
name|'chunks'
op|'='
op|'['
op|']'
newline|'\n'
name|'startTime'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'numRequests'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'self'
op|'.'
name|'_cbGetRead'
op|'('
string|"''"
op|','
name|'rf'
op|','
name|'lf'
op|','
name|'chunks'
op|','
number|'0'
op|','
name|'bufferSize'
op|','
name|'startTime'
op|')'
newline|'\n'
name|'dList'
op|'.'
name|'append'
op|'('
name|'d'
op|')'
newline|'\n'
dedent|''
name|'dl'
op|'='
name|'defer'
op|'.'
name|'DeferredList'
op|'('
name|'dList'
op|','
name|'fireOnOneErrback'
op|'='
number|'1'
op|')'
newline|'\n'
name|'dl'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbGetDone'
op|','
name|'rf'
op|','
name|'lf'
op|')'
newline|'\n'
name|'return'
name|'dl'
newline|'\n'
nl|'\n'
DECL|member|_getNextChunk
dedent|''
name|'def'
name|'_getNextChunk'
op|'('
name|'self'
op|','
name|'chunks'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'end'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'chunk'
name|'in'
name|'chunks'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'end'
op|'=='
string|"'eof'"
op|':'
newline|'\n'
indent|'                '
name|'return'
comment|'# nothing more to get'
newline|'\n'
dedent|''
name|'if'
name|'end'
op|'!='
name|'chunk'
op|'['
number|'0'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'i'
op|'='
name|'chunks'
op|'.'
name|'index'
op|'('
name|'chunk'
op|')'
newline|'\n'
name|'chunks'
op|'.'
name|'insert'
op|'('
name|'i'
op|','
op|'('
name|'end'
op|','
name|'chunk'
op|'['
number|'0'
op|']'
op|')'
op|')'
newline|'\n'
name|'return'
op|'('
name|'end'
op|','
name|'chunk'
op|'['
number|'0'
op|']'
op|'-'
name|'end'
op|')'
newline|'\n'
dedent|''
name|'end'
op|'='
name|'chunk'
op|'['
number|'1'
op|']'
newline|'\n'
dedent|''
name|'bufSize'
op|'='
name|'int'
op|'('
name|'self'
op|'.'
name|'client'
op|'.'
name|'transport'
op|'.'
name|'conn'
op|'.'
name|'options'
op|'['
string|"'buffersize'"
op|']'
op|')'
newline|'\n'
name|'chunks'
op|'.'
name|'append'
op|'('
op|'('
name|'end'
op|','
name|'end'
op|'+'
name|'bufSize'
op|')'
op|')'
newline|'\n'
name|'return'
op|'('
name|'end'
op|','
name|'bufSize'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cbGetRead
dedent|''
name|'def'
name|'_cbGetRead'
op|'('
name|'self'
op|','
name|'data'
op|','
name|'rf'
op|','
name|'lf'
op|','
name|'chunks'
op|','
name|'start'
op|','
name|'size'
op|','
name|'startTime'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'data'
name|'and'
name|'isinstance'
op|'('
name|'data'
op|','
name|'failure'
op|'.'
name|'Failure'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'get read err: %s'"
op|'%'
name|'data'
op|')'
newline|'\n'
name|'reason'
op|'='
name|'data'
newline|'\n'
name|'reason'
op|'.'
name|'trap'
op|'('
name|'EOFError'
op|')'
newline|'\n'
name|'i'
op|'='
name|'chunks'
op|'.'
name|'index'
op|'('
op|'('
name|'start'
op|','
name|'start'
op|'+'
name|'size'
op|')'
op|')'
newline|'\n'
name|'del'
name|'chunks'
op|'['
name|'i'
op|']'
newline|'\n'
name|'chunks'
op|'.'
name|'insert'
op|'('
name|'i'
op|','
op|'('
name|'start'
op|','
string|"'eof'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'get read data: %i'"
op|'%'
name|'len'
op|'('
name|'data'
op|')'
op|')'
newline|'\n'
name|'lf'
op|'.'
name|'seek'
op|'('
name|'start'
op|')'
newline|'\n'
name|'lf'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'data'
op|')'
op|'!='
name|'size'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'got less than we asked for: %i < %i'"
op|'%'
nl|'\n'
op|'('
name|'len'
op|'('
name|'data'
op|')'
op|','
name|'size'
op|')'
op|')'
newline|'\n'
name|'i'
op|'='
name|'chunks'
op|'.'
name|'index'
op|'('
op|'('
name|'start'
op|','
name|'start'
op|'+'
name|'size'
op|')'
op|')'
newline|'\n'
name|'del'
name|'chunks'
op|'['
name|'i'
op|']'
newline|'\n'
name|'chunks'
op|'.'
name|'insert'
op|'('
name|'i'
op|','
op|'('
name|'start'
op|','
name|'start'
op|'+'
name|'len'
op|'('
name|'data'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'rf'
op|'.'
name|'total'
op|'+='
name|'len'
op|'('
name|'data'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'useProgressBar'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_printProgessBar'
op|'('
name|'rf'
op|','
name|'startTime'
op|')'
newline|'\n'
dedent|''
name|'chunk'
op|'='
name|'self'
op|'.'
name|'_getNextChunk'
op|'('
name|'chunks'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'chunk'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'start'
op|','
name|'length'
op|'='
name|'chunk'
newline|'\n'
dedent|''
name|'log'
op|'.'
name|'msg'
op|'('
string|"'asking for %i -> %i'"
op|'%'
op|'('
name|'start'
op|','
name|'start'
op|'+'
name|'length'
op|')'
op|')'
newline|'\n'
name|'d'
op|'='
name|'rf'
op|'.'
name|'readChunk'
op|'('
name|'start'
op|','
name|'length'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addBoth'
op|'('
name|'self'
op|'.'
name|'_cbGetRead'
op|','
name|'rf'
op|','
name|'lf'
op|','
name|'chunks'
op|','
name|'start'
op|','
name|'length'
op|','
name|'startTime'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|_cbGetDone
dedent|''
name|'def'
name|'_cbGetDone'
op|'('
name|'self'
op|','
name|'ignored'
op|','
name|'rf'
op|','
name|'lf'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'get done'"
op|')'
newline|'\n'
name|'rf'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'lf'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'useProgressBar'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
dedent|''
name|'return'
string|'"Transferred %s to %s"'
op|'%'
op|'('
name|'rf'
op|'.'
name|'name'
op|','
name|'lf'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|cmd_PUT
dedent|''
name|'def'
name|'cmd_PUT'
op|'('
name|'self'
op|','
name|'rest'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'local'
op|','
name|'rest'
op|'='
name|'self'
op|'.'
name|'_getFilename'
op|'('
name|'rest'
op|')'
newline|'\n'
name|'if'
string|"'*'"
name|'in'
name|'local'
name|'or'
string|"'?'"
name|'in'
name|'local'
op|':'
comment|'# wildcard'
newline|'\n'
indent|'            '
name|'if'
name|'rest'
op|':'
newline|'\n'
indent|'                '
name|'remote'
op|','
name|'rest'
op|'='
name|'self'
op|'.'
name|'_getFilename'
op|'('
name|'rest'
op|')'
newline|'\n'
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'currentDirectory'
op|','
name|'remote'
op|')'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'getAttrs'
op|'('
name|'path'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbPutTargetAttrs'
op|','
name|'remote'
op|','
name|'local'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'remote'
op|'='
string|"''"
newline|'\n'
name|'files'
op|'='
name|'glob'
op|'.'
name|'glob'
op|'('
name|'local'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_cbPutMultipleNext'
op|'('
name|'None'
op|','
name|'files'
op|','
name|'remote'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'rest'
op|':'
newline|'\n'
indent|'            '
name|'remote'
op|','
name|'rest'
op|'='
name|'self'
op|'.'
name|'_getFilename'
op|'('
name|'rest'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'remote'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'split'
op|'('
name|'local'
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
dedent|''
name|'lf'
op|'='
name|'file'
op|'('
name|'local'
op|','
string|"'r'"
op|')'
newline|'\n'
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'currentDirectory'
op|','
name|'remote'
op|')'
newline|'\n'
name|'flags'
op|'='
name|'filetransfer'
op|'.'
name|'FXF_WRITE'
op|'|'
name|'filetransfer'
op|'.'
name|'FXF_CREAT'
op|'|'
name|'filetransfer'
op|'.'
name|'FXF_TRUNC'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'openFile'
op|'('
name|'path'
op|','
name|'flags'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbPutOpenFile'
op|','
name|'lf'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebCloseLf'
op|','
name|'lf'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|_cbPutTargetAttrs
dedent|''
name|'def'
name|'_cbPutTargetAttrs'
op|'('
name|'self'
op|','
name|'attrs'
op|','
name|'path'
op|','
name|'local'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'stat'
op|'.'
name|'S_ISDIR'
op|'('
name|'attrs'
op|'['
string|"'permissions'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|'"Wildcard put with non-directory target."'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_cbPutMultipleNext'
op|'('
name|'None'
op|','
name|'files'
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cbPutMultipleNext
dedent|''
name|'def'
name|'_cbPutMultipleNext'
op|'('
name|'self'
op|','
name|'res'
op|','
name|'files'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'res'
op|','
name|'failure'
op|'.'
name|'Failure'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_printFailure'
op|'('
name|'res'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'res'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
name|'res'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'res'
op|'.'
name|'endswith'
op|'('
string|"'\\n'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'f'
op|'='
name|'None'
newline|'\n'
name|'while'
name|'files'
name|'and'
name|'not'
name|'f'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'f'
op|'='
name|'files'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
name|'lf'
op|'='
name|'file'
op|'('
name|'f'
op|','
string|"'r'"
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_printFailure'
op|'('
name|'failure'
op|'.'
name|'Failure'
op|'('
op|')'
op|')'
newline|'\n'
name|'f'
op|'='
name|'None'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'f'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'name'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'split'
op|'('
name|'f'
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'remote'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'currentDirectory'
op|','
name|'path'
op|','
name|'name'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
op|'('
name|'name'
op|','
name|'remote'
op|','
name|'path'
op|')'
op|')'
newline|'\n'
name|'flags'
op|'='
name|'filetransfer'
op|'.'
name|'FXF_WRITE'
op|'|'
name|'filetransfer'
op|'.'
name|'FXF_CREAT'
op|'|'
name|'filetransfer'
op|'.'
name|'FXF_TRUNC'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'openFile'
op|'('
name|'remote'
op|','
name|'flags'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbPutOpenFile'
op|','
name|'lf'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebCloseLf'
op|','
name|'lf'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addBoth'
op|'('
name|'self'
op|'.'
name|'_cbPutMultipleNext'
op|','
name|'files'
op|','
name|'path'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|_cbPutOpenFile
dedent|''
name|'def'
name|'_cbPutOpenFile'
op|'('
name|'self'
op|','
name|'rf'
op|','
name|'lf'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'numRequests'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'transport'
op|'.'
name|'conn'
op|'.'
name|'options'
op|'['
string|"'requests'"
op|']'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'useProgressBar'
op|':'
newline|'\n'
indent|'            '
name|'lf'
op|'='
name|'FileWrapper'
op|'('
name|'lf'
op|')'
newline|'\n'
dedent|''
name|'dList'
op|'='
op|'['
op|']'
newline|'\n'
name|'chunks'
op|'='
op|'['
op|']'
newline|'\n'
name|'startTime'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'numRequests'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'self'
op|'.'
name|'_cbPutWrite'
op|'('
name|'None'
op|','
name|'rf'
op|','
name|'lf'
op|','
name|'chunks'
op|','
name|'startTime'
op|')'
newline|'\n'
name|'if'
name|'d'
op|':'
newline|'\n'
indent|'                '
name|'dList'
op|'.'
name|'append'
op|'('
name|'d'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'dl'
op|'='
name|'defer'
op|'.'
name|'DeferredList'
op|'('
name|'dList'
op|','
name|'fireOnOneErrback'
op|'='
number|'1'
op|')'
newline|'\n'
name|'dl'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbPutDone'
op|','
name|'rf'
op|','
name|'lf'
op|')'
newline|'\n'
name|'return'
name|'dl'
newline|'\n'
nl|'\n'
DECL|member|_cbPutWrite
dedent|''
name|'def'
name|'_cbPutWrite'
op|'('
name|'self'
op|','
name|'ignored'
op|','
name|'rf'
op|','
name|'lf'
op|','
name|'chunks'
op|','
name|'startTime'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'chunk'
op|'='
name|'self'
op|'.'
name|'_getNextChunk'
op|'('
name|'chunks'
op|')'
newline|'\n'
name|'start'
op|','
name|'size'
op|'='
name|'chunk'
newline|'\n'
name|'lf'
op|'.'
name|'seek'
op|'('
name|'start'
op|')'
newline|'\n'
name|'data'
op|'='
name|'lf'
op|'.'
name|'read'
op|'('
name|'size'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'useProgressBar'
op|':'
newline|'\n'
indent|'            '
name|'lf'
op|'.'
name|'total'
op|'+='
name|'len'
op|'('
name|'data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_printProgessBar'
op|'('
name|'lf'
op|','
name|'startTime'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'rf'
op|'.'
name|'writeChunk'
op|'('
name|'start'
op|','
name|'data'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbPutWrite'
op|','
name|'rf'
op|','
name|'lf'
op|','
name|'chunks'
op|','
name|'startTime'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
DECL|member|_cbPutDone
dedent|''
dedent|''
name|'def'
name|'_cbPutDone'
op|'('
name|'self'
op|','
name|'ignored'
op|','
name|'rf'
op|','
name|'lf'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'lf'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'rf'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'useProgressBar'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
dedent|''
name|'return'
string|"'Transferred %s to %s'"
op|'%'
op|'('
name|'lf'
op|'.'
name|'name'
op|','
name|'rf'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|cmd_LCD
dedent|''
name|'def'
name|'cmd_LCD'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'os'
op|'.'
name|'chdir'
op|'('
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|cmd_LN
dedent|''
name|'def'
name|'cmd_LN'
op|'('
name|'self'
op|','
name|'rest'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'linkpath'
op|','
name|'rest'
op|'='
name|'self'
op|'.'
name|'_getFilename'
op|'('
name|'rest'
op|')'
newline|'\n'
name|'targetpath'
op|','
name|'rest'
op|'='
name|'self'
op|'.'
name|'_getFilename'
op|'('
name|'rest'
op|')'
newline|'\n'
name|'linkpath'
op|','
name|'targetpath'
op|'='
name|'map'
op|'('
nl|'\n'
name|'lambda'
name|'x'
op|':'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'currentDirectory'
op|','
name|'x'
op|')'
op|','
nl|'\n'
op|'('
name|'linkpath'
op|','
name|'targetpath'
op|')'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'client'
op|'.'
name|'makeLink'
op|'('
name|'linkpath'
op|','
name|'targetpath'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'_ignore'
op|')'
newline|'\n'
nl|'\n'
DECL|member|cmd_LS
dedent|''
name|'def'
name|'cmd_LS'
op|'('
name|'self'
op|','
name|'rest'
op|')'
op|':'
newline|'\n'
comment|'# possible lines:'
nl|'\n'
comment|'# ls                    current directory'
nl|'\n'
comment|'# ls name_of_file       that file'
nl|'\n'
comment|'# ls name_of_directory  that directory'
nl|'\n'
comment|'# ls some_glob_string   current directory, globbed for that string'
nl|'\n'
indent|'        '
name|'options'
op|'='
op|'['
op|']'
newline|'\n'
name|'rest'
op|'='
name|'rest'
op|'.'
name|'split'
op|'('
op|')'
newline|'\n'
name|'while'
name|'rest'
name|'and'
name|'rest'
op|'['
number|'0'
op|']'
name|'and'
name|'rest'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|'=='
string|"'-'"
op|':'
newline|'\n'
indent|'            '
name|'opts'
op|'='
name|'rest'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
name|'for'
name|'o'
name|'in'
name|'opts'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'o'
op|'=='
string|"'l'"
op|':'
newline|'\n'
indent|'                    '
name|'options'
op|'.'
name|'append'
op|'('
string|"'verbose'"
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'o'
op|'=='
string|"'a'"
op|':'
newline|'\n'
indent|'                    '
name|'options'
op|'.'
name|'append'
op|'('
string|"'all'"
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'rest'
op|'='
string|"' '"
op|'.'
name|'join'
op|'('
name|'rest'
op|')'
newline|'\n'
name|'path'
op|','
name|'rest'
op|'='
name|'self'
op|'.'
name|'_getFilename'
op|'('
name|'rest'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'path'
op|':'
newline|'\n'
indent|'            '
name|'fullPath'
op|'='
name|'self'
op|'.'
name|'currentDirectory'
op|'+'
string|"'/'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'fullPath'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'currentDirectory'
op|','
name|'path'
op|')'
newline|'\n'
dedent|''
name|'d'
op|'='
name|'self'
op|'.'
name|'_remoteGlob'
op|'('
name|'fullPath'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbDisplayFiles'
op|','
name|'options'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|_cbDisplayFiles
dedent|''
name|'def'
name|'_cbDisplayFiles'
op|'('
name|'self'
op|','
name|'files'
op|','
name|'options'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'files'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'if'
string|"'all'"
name|'not'
name|'in'
name|'options'
op|':'
newline|'\n'
indent|'            '
name|'files'
op|'='
op|'['
name|'f'
name|'for'
name|'f'
name|'in'
name|'files'
name|'if'
name|'not'
name|'f'
op|'['
number|'0'
op|']'
op|'.'
name|'startswith'
op|'('
string|"'.'"
op|')'
op|']'
newline|'\n'
dedent|''
name|'if'
string|"'verbose'"
name|'in'
name|'options'
op|':'
newline|'\n'
indent|'            '
name|'lines'
op|'='
op|'['
name|'f'
op|'['
number|'1'
op|']'
name|'for'
name|'f'
name|'in'
name|'files'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'lines'
op|'='
op|'['
name|'f'
op|'['
number|'0'
op|']'
name|'for'
name|'f'
name|'in'
name|'files'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'lines'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'\\n'"
op|'.'
name|'join'
op|'('
name|'lines'
op|')'
newline|'\n'
nl|'\n'
DECL|member|cmd_MKDIR
dedent|''
dedent|''
name|'def'
name|'cmd_MKDIR'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|','
name|'rest'
op|'='
name|'self'
op|'.'
name|'_getFilename'
op|'('
name|'path'
op|')'
newline|'\n'
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'currentDirectory'
op|','
name|'path'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'client'
op|'.'
name|'makeDirectory'
op|'('
name|'path'
op|','
op|'{'
op|'}'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'_ignore'
op|')'
newline|'\n'
nl|'\n'
DECL|member|cmd_RMDIR
dedent|''
name|'def'
name|'cmd_RMDIR'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|','
name|'rest'
op|'='
name|'self'
op|'.'
name|'_getFilename'
op|'('
name|'path'
op|')'
newline|'\n'
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'currentDirectory'
op|','
name|'path'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'client'
op|'.'
name|'removeDirectory'
op|'('
name|'path'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'_ignore'
op|')'
newline|'\n'
nl|'\n'
DECL|member|cmd_LMKDIR
dedent|''
name|'def'
name|'cmd_LMKDIR'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'os'
op|'.'
name|'system'
op|'('
string|'"mkdir %s"'
op|'%'
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|cmd_RM
dedent|''
name|'def'
name|'cmd_RM'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|','
name|'rest'
op|'='
name|'self'
op|'.'
name|'_getFilename'
op|'('
name|'path'
op|')'
newline|'\n'
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'currentDirectory'
op|','
name|'path'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'client'
op|'.'
name|'removeFile'
op|'('
name|'path'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'_ignore'
op|')'
newline|'\n'
nl|'\n'
DECL|member|cmd_LLS
dedent|''
name|'def'
name|'cmd_LLS'
op|'('
name|'self'
op|','
name|'rest'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'os'
op|'.'
name|'system'
op|'('
string|'"ls %s"'
op|'%'
name|'rest'
op|')'
newline|'\n'
nl|'\n'
DECL|member|cmd_RENAME
dedent|''
name|'def'
name|'cmd_RENAME'
op|'('
name|'self'
op|','
name|'rest'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'oldpath'
op|','
name|'rest'
op|'='
name|'self'
op|'.'
name|'_getFilename'
op|'('
name|'rest'
op|')'
newline|'\n'
name|'newpath'
op|','
name|'rest'
op|'='
name|'self'
op|'.'
name|'_getFilename'
op|'('
name|'rest'
op|')'
newline|'\n'
name|'oldpath'
op|','
name|'newpath'
op|'='
name|'map'
op|'('
nl|'\n'
name|'lambda'
name|'x'
op|':'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'currentDirectory'
op|','
name|'x'
op|')'
op|','
nl|'\n'
op|'('
name|'oldpath'
op|','
name|'newpath'
op|')'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'client'
op|'.'
name|'renameFile'
op|'('
name|'oldpath'
op|','
name|'newpath'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'_ignore'
op|')'
newline|'\n'
nl|'\n'
DECL|member|cmd_EXIT
dedent|''
name|'def'
name|'cmd_EXIT'
op|'('
name|'self'
op|','
name|'ignored'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'client'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|variable|cmd_QUIT
dedent|''
name|'cmd_QUIT'
op|'='
name|'cmd_EXIT'
newline|'\n'
nl|'\n'
DECL|member|cmd_VERSION
name|'def'
name|'cmd_VERSION'
op|'('
name|'self'
op|','
name|'ignored'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|'"SFTP version %i"'
op|'%'
name|'self'
op|'.'
name|'client'
op|'.'
name|'version'
newline|'\n'
nl|'\n'
DECL|member|cmd_HELP
dedent|''
name|'def'
name|'cmd_HELP'
op|'('
name|'self'
op|','
name|'ignored'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|'"""Available commands:\ncd path                         Change remote directory to \'path\'.\nchgrp gid path                  Change gid of \'path\' to \'gid\'.\nchmod mode path                 Change mode of \'path\' to \'mode\'.\nchown uid path                  Change uid of \'path\' to \'uid\'.\nexit                            Disconnect from the server.\nget remote-path [local-path]    Get remote file.\nhelp                            Get a list of available commands.\nlcd path                        Change local directory to \'path\'.\nlls [ls-options] [path]         Display local directory listing.\nlmkdir path                     Create local directory.\nln linkpath targetpath          Symlink remote file.\nlpwd                            Print the local working directory.\nls [-l] [path]                  Display remote directory listing.\nmkdir path                      Create remote directory.\nprogress                        Toggle progress bar.\nput local-path [remote-path]    Put local file.\npwd                             Print the remote working directory.\nquit                            Disconnect from the server.\nrename oldpath newpath          Rename remote file.\nrmdir path                      Remove remote directory.\nrm path                         Remove remote file.\nversion                         Print the SFTP version.\n?                               Synonym for \'help\'.\n"""'
newline|'\n'
nl|'\n'
DECL|function|cmd_PWD
dedent|''
name|'def'
name|'cmd_PWD'
op|'('
name|'self'
op|','
name|'ignored'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'currentDirectory'
newline|'\n'
nl|'\n'
DECL|function|cmd_LPWD
dedent|''
name|'def'
name|'cmd_LPWD'
op|'('
name|'self'
op|','
name|'ignored'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'os'
op|'.'
name|'getcwd'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|cmd_PROGRESS
dedent|''
name|'def'
name|'cmd_PROGRESS'
op|'('
name|'self'
op|','
name|'ignored'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'useProgressBar'
op|'='
name|'not'
name|'self'
op|'.'
name|'useProgressBar'
newline|'\n'
name|'return'
string|'"%ssing progess bar."'
op|'%'
op|'('
name|'self'
op|'.'
name|'useProgressBar'
name|'and'
string|'"U"'
name|'or'
string|'"Not u"'
op|')'
newline|'\n'
nl|'\n'
DECL|function|cmd_EXEC
dedent|''
name|'def'
name|'cmd_EXEC'
op|'('
name|'self'
op|','
name|'rest'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Run C{rest} using the user\'s shell (or /bin/sh if they do not have\n        one).\n        """'
newline|'\n'
name|'shell'
op|'='
name|'self'
op|'.'
name|'_pwd'
op|'.'
name|'getpwnam'
op|'('
name|'getpass'
op|'.'
name|'getuser'
op|'('
op|')'
op|')'
op|'['
number|'6'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'shell'
op|':'
newline|'\n'
indent|'            '
name|'shell'
op|'='
string|"'/bin/sh'"
newline|'\n'
dedent|''
name|'if'
name|'rest'
op|':'
newline|'\n'
indent|'            '
name|'cmds'
op|'='
op|'['
string|"'-c'"
op|','
name|'rest'
op|']'
newline|'\n'
name|'return'
name|'utils'
op|'.'
name|'getProcessOutput'
op|'('
name|'shell'
op|','
name|'cmds'
op|','
name|'errortoo'
op|'='
number|'1'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'system'
op|'('
name|'shell'
op|')'
newline|'\n'
nl|'\n'
comment|'# accessory functions'
nl|'\n'
nl|'\n'
DECL|function|_remoteGlob
dedent|''
dedent|''
name|'def'
name|'_remoteGlob'
op|'('
name|'self'
op|','
name|'fullPath'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'looking up %s'"
op|'%'
name|'fullPath'
op|')'
newline|'\n'
name|'head'
op|','
name|'tail'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'split'
op|'('
name|'fullPath'
op|')'
newline|'\n'
name|'if'
string|"'*'"
name|'in'
name|'tail'
name|'or'
string|"'?'"
name|'in'
name|'tail'
op|':'
newline|'\n'
indent|'            '
name|'glob'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'glob'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'if'
name|'tail'
name|'and'
name|'not'
name|'glob'
op|':'
comment|'# could be file or directory'
newline|'\n'
comment|'# try directory first'
nl|'\n'
indent|'           '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'openDirectory'
op|'('
name|'fullPath'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbOpenList'
op|','
string|"''"
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebNotADirectory'
op|','
name|'head'
op|','
name|'tail'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'openDirectory'
op|'('
name|'head'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbOpenList'
op|','
name|'tail'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|function|_cbOpenList
dedent|''
name|'def'
name|'_cbOpenList'
op|'('
name|'self'
op|','
name|'directory'
op|','
name|'glob'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'files'
op|'='
op|'['
op|']'
newline|'\n'
name|'d'
op|'='
name|'directory'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addBoth'
op|'('
name|'self'
op|'.'
name|'_cbReadFile'
op|','
name|'files'
op|','
name|'directory'
op|','
name|'glob'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|function|_ebNotADirectory
dedent|''
name|'def'
name|'_ebNotADirectory'
op|'('
name|'self'
op|','
name|'reason'
op|','
name|'path'
op|','
name|'glob'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'openDirectory'
op|'('
name|'path'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbOpenList'
op|','
name|'glob'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|function|_cbReadFile
dedent|''
name|'def'
name|'_cbReadFile'
op|'('
name|'self'
op|','
name|'files'
op|','
name|'l'
op|','
name|'directory'
op|','
name|'glob'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'files'
op|','
name|'failure'
op|'.'
name|'Failure'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'glob'
op|':'
newline|'\n'
indent|'                '
name|'l'
op|'.'
name|'extend'
op|'('
op|'['
name|'f'
name|'for'
name|'f'
name|'in'
name|'files'
name|'if'
name|'fnmatch'
op|'.'
name|'fnmatch'
op|'('
name|'f'
op|'['
number|'0'
op|']'
op|','
name|'glob'
op|')'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'l'
op|'.'
name|'extend'
op|'('
name|'files'
op|')'
newline|'\n'
dedent|''
name|'d'
op|'='
name|'directory'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addBoth'
op|'('
name|'self'
op|'.'
name|'_cbReadFile'
op|','
name|'l'
op|','
name|'directory'
op|','
name|'glob'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'reason'
op|'='
name|'files'
newline|'\n'
name|'reason'
op|'.'
name|'trap'
op|'('
name|'EOFError'
op|')'
newline|'\n'
name|'directory'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'return'
name|'l'
newline|'\n'
nl|'\n'
DECL|function|_abbrevSize
dedent|''
dedent|''
name|'def'
name|'_abbrevSize'
op|'('
name|'self'
op|','
name|'size'
op|')'
op|':'
newline|'\n'
comment|'# from http://mail.python.org/pipermail/python-list/1999-December/018395.html'
nl|'\n'
indent|'        '
name|'_abbrevs'
op|'='
op|'['
nl|'\n'
op|'('
number|'1'
op|'<<'
number|'50L'
op|','
string|"'PB'"
op|')'
op|','
nl|'\n'
op|'('
number|'1'
op|'<<'
number|'40L'
op|','
string|"'TB'"
op|')'
op|','
nl|'\n'
op|'('
number|'1'
op|'<<'
number|'30L'
op|','
string|"'GB'"
op|')'
op|','
nl|'\n'
op|'('
number|'1'
op|'<<'
number|'20L'
op|','
string|"'MB'"
op|')'
op|','
nl|'\n'
op|'('
number|'1'
op|'<<'
number|'10L'
op|','
string|"'kb'"
op|')'
op|','
nl|'\n'
op|'('
number|'1'
op|','
string|"''"
op|')'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'factor'
op|','
name|'suffix'
name|'in'
name|'_abbrevs'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'size'
op|'>'
name|'factor'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'return'
string|"'%.1f'"
op|'%'
op|'('
name|'size'
op|'/'
name|'factor'
op|')'
op|'+'
name|'suffix'
newline|'\n'
nl|'\n'
DECL|function|_abbrevTime
dedent|''
name|'def'
name|'_abbrevTime'
op|'('
name|'self'
op|','
name|'t'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'t'
op|'>'
number|'3600'
op|':'
comment|'# 1 hour'
newline|'\n'
indent|'            '
name|'hours'
op|'='
name|'int'
op|'('
name|'t'
op|'/'
number|'3600'
op|')'
newline|'\n'
name|'t'
op|'-='
op|'('
number|'3600'
op|'*'
name|'hours'
op|')'
newline|'\n'
name|'mins'
op|'='
name|'int'
op|'('
name|'t'
op|'/'
number|'60'
op|')'
newline|'\n'
name|'t'
op|'-='
op|'('
number|'60'
op|'*'
name|'mins'
op|')'
newline|'\n'
name|'return'
string|'"%i:%02i:%02i"'
op|'%'
op|'('
name|'hours'
op|','
name|'mins'
op|','
name|'t'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'mins'
op|'='
name|'int'
op|'('
name|'t'
op|'/'
number|'60'
op|')'
newline|'\n'
name|'t'
op|'-='
op|'('
number|'60'
op|'*'
name|'mins'
op|')'
newline|'\n'
name|'return'
string|'"%02i:%02i"'
op|'%'
op|'('
name|'mins'
op|','
name|'t'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_printProgessBar
dedent|''
dedent|''
name|'def'
name|'_printProgessBar'
op|'('
name|'self'
op|','
name|'f'
op|','
name|'startTime'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'diff'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'startTime'
newline|'\n'
name|'total'
op|'='
name|'f'
op|'.'
name|'total'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'winSize'
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'4H'"
op|','
nl|'\n'
name|'fcntl'
op|'.'
name|'ioctl'
op|'('
number|'0'
op|','
name|'tty'
op|'.'
name|'TIOCGWINSZ'
op|','
string|"'12345679'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'IOError'
op|':'
newline|'\n'
indent|'            '
name|'winSize'
op|'='
op|'['
name|'None'
op|','
number|'80'
op|']'
newline|'\n'
dedent|''
name|'speed'
op|'='
name|'total'
op|'/'
name|'diff'
newline|'\n'
name|'if'
name|'speed'
op|':'
newline|'\n'
indent|'            '
name|'timeLeft'
op|'='
op|'('
name|'f'
op|'.'
name|'size'
op|'-'
name|'total'
op|')'
op|'/'
name|'speed'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'timeLeft'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'front'
op|'='
name|'f'
op|'.'
name|'name'
newline|'\n'
name|'back'
op|'='
string|"'%3i%% %s %sps %s '"
op|'%'
op|'('
op|'('
name|'total'
op|'/'
name|'f'
op|'.'
name|'size'
op|')'
op|'*'
number|'100'
op|','
name|'self'
op|'.'
name|'_abbrevSize'
op|'('
name|'total'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_abbrevSize'
op|'('
name|'total'
op|'/'
name|'diff'
op|')'
op|','
name|'self'
op|'.'
name|'_abbrevTime'
op|'('
name|'timeLeft'
op|')'
op|')'
newline|'\n'
name|'spaces'
op|'='
op|'('
name|'winSize'
op|'['
number|'1'
op|']'
op|'-'
op|'('
name|'len'
op|'('
name|'front'
op|')'
op|'+'
name|'len'
op|'('
name|'back'
op|')'
op|'+'
number|'1'
op|')'
op|')'
op|'*'
string|"' '"
newline|'\n'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
string|"'\\r%s%s%s'"
op|'%'
op|'('
name|'front'
op|','
name|'spaces'
op|','
name|'back'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_getFilename
dedent|''
name|'def'
name|'_getFilename'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'line'
op|'.'
name|'lstrip'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'line'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
op|','
string|"''"
newline|'\n'
dedent|''
name|'if'
name|'line'
op|'['
number|'0'
op|']'
name|'in'
string|'\'\\\'"\''
op|':'
newline|'\n'
indent|'            '
name|'ret'
op|'='
op|'['
op|']'
newline|'\n'
name|'line'
op|'='
name|'list'
op|'('
name|'line'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'line'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'c'
op|'='
name|'line'
op|'['
name|'i'
op|']'
newline|'\n'
name|'if'
name|'c'
op|'=='
name|'line'
op|'['
number|'0'
op|']'
op|':'
newline|'\n'
indent|'                        '
name|'return'
string|"''"
op|'.'
name|'join'
op|'('
name|'ret'
op|')'
op|','
string|"''"
op|'.'
name|'join'
op|'('
name|'line'
op|'['
name|'i'
op|'+'
number|'1'
op|':'
op|']'
op|')'
op|'.'
name|'lstrip'
op|'('
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'c'
op|'=='
string|"'\\\\'"
op|':'
comment|'# quoted character'
newline|'\n'
indent|'                        '
name|'del'
name|'line'
op|'['
name|'i'
op|']'
newline|'\n'
name|'if'
name|'line'
op|'['
name|'i'
op|']'
name|'not'
name|'in'
string|'\'\\\'"\\\\\''
op|':'
newline|'\n'
indent|'                            '
name|'raise'
name|'IndexError'
op|','
string|'"bad quote: \\\\%s"'
op|'%'
name|'line'
op|'['
name|'i'
op|']'
newline|'\n'
dedent|''
name|'ret'
op|'.'
name|'append'
op|'('
name|'line'
op|'['
name|'i'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'ret'
op|'.'
name|'append'
op|'('
name|'line'
op|'['
name|'i'
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'except'
name|'IndexError'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'IndexError'
op|','
string|'"unterminated quote"'
newline|'\n'
dedent|''
dedent|''
name|'ret'
op|'='
name|'line'
op|'.'
name|'split'
op|'('
name|'None'
op|','
number|'1'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'ret'
op|')'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'ret'
op|'['
number|'0'
op|']'
op|','
string|"''"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'ret'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'StdioClient'
op|'.'
name|'__dict__'
op|'['
string|"'cmd_?'"
op|']'
op|'='
name|'StdioClient'
op|'.'
name|'cmd_HELP'
newline|'\n'
nl|'\n'
DECL|class|SSHConnection
name|'class'
name|'SSHConnection'
op|'('
name|'connection'
op|'.'
name|'SSHConnection'
op|')'
op|':'
newline|'\n'
DECL|member|serviceStarted
indent|'    '
name|'def'
name|'serviceStarted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'openChannel'
op|'('
name|'SSHSession'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|class|SSHSession
dedent|''
dedent|''
name|'class'
name|'SSHSession'
op|'('
name|'channel'
op|'.'
name|'SSHChannel'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|name
indent|'    '
name|'name'
op|'='
string|"'session'"
newline|'\n'
nl|'\n'
DECL|member|channelOpen
name|'def'
name|'channelOpen'
op|'('
name|'self'
op|','
name|'foo'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'session %s open'"
op|'%'
name|'self'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'options'
op|'['
string|"'subsystem'"
op|']'
op|'.'
name|'startswith'
op|'('
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'request'
op|'='
string|"'exec'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'request'
op|'='
string|"'subsystem'"
newline|'\n'
dedent|''
name|'d'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'sendRequest'
op|'('
name|'self'
op|','
name|'request'
op|','
name|'common'
op|'.'
name|'NS'
op|'('
name|'self'
op|'.'
name|'conn'
op|'.'
name|'options'
op|'['
string|"'subsystem'"
op|']'
op|')'
op|','
name|'wantReply'
op|'='
number|'1'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbSubsystem'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'_ebExit'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cbSubsystem
dedent|''
name|'def'
name|'_cbSubsystem'
op|'('
name|'self'
op|','
name|'result'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'client'
op|'='
name|'filetransfer'
op|'.'
name|'FileTransferClient'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'.'
name|'makeConnection'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dataReceived'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'dataReceived'
newline|'\n'
name|'f'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'options'
op|'['
string|"'batchfile'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'fn'
op|'='
name|'self'
op|'.'
name|'conn'
op|'.'
name|'options'
op|'['
string|"'batchfile'"
op|']'
newline|'\n'
name|'if'
name|'fn'
op|'!='
string|"'-'"
op|':'
newline|'\n'
indent|'                '
name|'f'
op|'='
name|'file'
op|'('
name|'fn'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'stdio'
op|'='
name|'stdio'
op|'.'
name|'StandardIO'
op|'('
name|'StdioClient'
op|'('
name|'self'
op|'.'
name|'client'
op|','
name|'f'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|extReceived
dedent|''
name|'def'
name|'extReceived'
op|'('
name|'self'
op|','
name|'t'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'t'
op|'=='
name|'connection'
op|'.'
name|'EXTENDED_DATA_STDERR'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'got %s stderr data'"
op|'%'
name|'len'
op|'('
name|'data'
op|')'
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'stderr'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'stderr'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|eofReceived
dedent|''
dedent|''
name|'def'
name|'eofReceived'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'got eof'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stdio'
op|'.'
name|'closeStdin'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|closeReceived
dedent|''
name|'def'
name|'closeReceived'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'remote side closed %s'"
op|'%'
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn'
op|'.'
name|'sendClose'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|closed
dedent|''
name|'def'
name|'closed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'reactor'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|stopWriting
dedent|''
dedent|''
name|'def'
name|'stopWriting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stdio'
op|'.'
name|'pauseProducing'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|startWriting
dedent|''
name|'def'
name|'startWriting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stdio'
op|'.'
name|'resumeProducing'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'run'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
endmarker|''
end_unit
