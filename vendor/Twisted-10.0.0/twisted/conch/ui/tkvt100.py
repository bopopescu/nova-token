begin_unit
comment|'# Copyright (c) 2001-2004 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
comment|'#'
nl|'\n'
nl|'\n'
string|'"""Module to emulate a VT100 terminal in Tkinter.\n\nMaintainer: Paul Swartz\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'Tkinter'
op|','
name|'tkFont'
newline|'\n'
name|'import'
name|'ansi'
newline|'\n'
name|'import'
name|'string'
newline|'\n'
nl|'\n'
DECL|variable|ttyFont
name|'ttyFont'
op|'='
name|'None'
comment|"#tkFont.Font(family = 'Courier', size = 10)"
newline|'\n'
name|'fontWidth'
op|','
name|'fontHeight'
op|'='
name|'None'
op|','
name|'None'
comment|"#max(map(ttyFont.measure, string.letters+string.digits)), int(ttyFont.metrics()['linespace'])"
newline|'\n'
nl|'\n'
DECL|variable|colorKeys
name|'colorKeys'
op|'='
op|'('
nl|'\n'
string|"'b'"
op|','
string|"'r'"
op|','
string|"'g'"
op|','
string|"'y'"
op|','
string|"'l'"
op|','
string|"'m'"
op|','
string|"'c'"
op|','
string|"'w'"
op|','
nl|'\n'
string|"'B'"
op|','
string|"'R'"
op|','
string|"'G'"
op|','
string|"'Y'"
op|','
string|"'L'"
op|','
string|"'M'"
op|','
string|"'C'"
op|','
string|"'W'"
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|colorMap
name|'colorMap'
op|'='
op|'{'
nl|'\n'
string|"'b'"
op|':'
string|"'#000000'"
op|','
string|"'r'"
op|':'
string|"'#c40000'"
op|','
string|"'g'"
op|':'
string|"'#00c400'"
op|','
string|"'y'"
op|':'
string|"'#c4c400'"
op|','
nl|'\n'
string|"'l'"
op|':'
string|"'#000080'"
op|','
string|"'m'"
op|':'
string|"'#c400c4'"
op|','
string|"'c'"
op|':'
string|"'#00c4c4'"
op|','
string|"'w'"
op|':'
string|"'#c4c4c4'"
op|','
nl|'\n'
string|"'B'"
op|':'
string|"'#626262'"
op|','
string|"'R'"
op|':'
string|"'#ff0000'"
op|','
string|"'G'"
op|':'
string|"'#00ff00'"
op|','
string|"'Y'"
op|':'
string|"'#ffff00'"
op|','
nl|'\n'
string|"'L'"
op|':'
string|"'#0000ff'"
op|','
string|"'M'"
op|':'
string|"'#ff00ff'"
op|','
string|"'C'"
op|':'
string|"'#00ffff'"
op|','
string|"'W'"
op|':'
string|"'#ffffff'"
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|class|VT100Frame
name|'class'
name|'VT100Frame'
op|'('
name|'Tkinter'
op|'.'
name|'Frame'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'global'
name|'ttyFont'
op|','
name|'fontHeight'
op|','
name|'fontWidth'
newline|'\n'
name|'ttyFont'
op|'='
name|'tkFont'
op|'.'
name|'Font'
op|'('
name|'family'
op|'='
string|"'Courier'"
op|','
name|'size'
op|'='
number|'10'
op|')'
newline|'\n'
name|'fontWidth'
op|','
name|'fontHeight'
op|'='
name|'max'
op|'('
name|'map'
op|'('
name|'ttyFont'
op|'.'
name|'measure'
op|','
name|'string'
op|'.'
name|'letters'
op|'+'
name|'string'
op|'.'
name|'digits'
op|')'
op|')'
op|','
name|'int'
op|'('
name|'ttyFont'
op|'.'
name|'metrics'
op|'('
op|')'
op|'['
string|"'linespace'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'width'
op|'='
name|'kw'
op|'.'
name|'get'
op|'('
string|"'width'"
op|','
number|'80'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'height'
op|'='
name|'kw'
op|'.'
name|'get'
op|'('
string|"'height'"
op|','
number|'25'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'callback'
op|'='
name|'kw'
op|'['
string|"'callback'"
op|']'
newline|'\n'
name|'del'
name|'kw'
op|'['
string|"'callback'"
op|']'
newline|'\n'
name|'kw'
op|'['
string|"'width'"
op|']'
op|'='
name|'w'
op|'='
name|'fontWidth'
op|'*'
name|'self'
op|'.'
name|'width'
newline|'\n'
name|'kw'
op|'['
string|"'height'"
op|']'
op|'='
name|'h'
op|'='
name|'fontHeight'
op|'*'
name|'self'
op|'.'
name|'height'
newline|'\n'
name|'Tkinter'
op|'.'
name|'Frame'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kw'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'canvas'
op|'='
name|'Tkinter'
op|'.'
name|'Canvas'
op|'('
name|'bg'
op|'='
string|"'#000000'"
op|','
name|'width'
op|'='
name|'w'
op|','
name|'height'
op|'='
name|'h'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'canvas'
op|'.'
name|'pack'
op|'('
name|'side'
op|'='
name|'Tkinter'
op|'.'
name|'TOP'
op|','
name|'fill'
op|'='
name|'Tkinter'
op|'.'
name|'BOTH'
op|','
name|'expand'
op|'='
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'canvas'
op|'.'
name|'bind'
op|'('
string|"'<Key>'"
op|','
name|'self'
op|'.'
name|'keyPressed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'canvas'
op|'.'
name|'bind'
op|'('
string|"'<1>'"
op|','
name|'lambda'
name|'x'
op|':'
string|"'break'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'canvas'
op|'.'
name|'bind'
op|'('
string|"'<Up>'"
op|','
name|'self'
op|'.'
name|'upPressed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'canvas'
op|'.'
name|'bind'
op|'('
string|"'<Down>'"
op|','
name|'self'
op|'.'
name|'downPressed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'canvas'
op|'.'
name|'bind'
op|'('
string|"'<Left>'"
op|','
name|'self'
op|'.'
name|'leftPressed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'canvas'
op|'.'
name|'bind'
op|'('
string|"'<Right>'"
op|','
name|'self'
op|'.'
name|'rightPressed'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'canvas'
op|'.'
name|'focus'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'ansiParser'
op|'='
name|'ansi'
op|'.'
name|'AnsiParser'
op|'('
name|'ansi'
op|'.'
name|'ColorText'
op|'.'
name|'WHITE'
op|','
name|'ansi'
op|'.'
name|'ColorText'
op|'.'
name|'BLACK'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ansiParser'
op|'.'
name|'writeString'
op|'='
name|'self'
op|'.'
name|'writeString'
newline|'\n'
name|'self'
op|'.'
name|'ansiParser'
op|'.'
name|'parseCursor'
op|'='
name|'self'
op|'.'
name|'parseCursor'
newline|'\n'
name|'self'
op|'.'
name|'ansiParser'
op|'.'
name|'parseErase'
op|'='
name|'self'
op|'.'
name|'parseErase'
newline|'\n'
comment|'#for (a, b) in colorMap.items():'
nl|'\n'
comment|'#    self.canvas.tag_config(a, foreground=b)'
nl|'\n'
comment|"#    self.canvas.tag_config('b'+a, background=b)"
nl|'\n'
comment|"#self.canvas.tag_config('underline', underline=1)"
nl|'\n'
nl|'\n'
name|'self'
op|'.'
name|'x'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'y'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'cursor'
op|'='
name|'self'
op|'.'
name|'canvas'
op|'.'
name|'create_rectangle'
op|'('
number|'0'
op|','
number|'0'
op|','
name|'fontWidth'
op|'-'
number|'1'
op|','
name|'fontHeight'
op|'-'
number|'1'
op|','
name|'fill'
op|'='
string|"'green'"
op|','
name|'outline'
op|'='
string|"'green'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|_delete
dedent|''
name|'def'
name|'_delete'
op|'('
name|'self'
op|','
name|'sx'
op|','
name|'sy'
op|','
name|'ex'
op|','
name|'ey'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'csx'
op|'='
name|'sx'
op|'*'
name|'fontWidth'
op|'+'
number|'1'
newline|'\n'
name|'csy'
op|'='
name|'sy'
op|'*'
name|'fontHeight'
op|'+'
number|'1'
newline|'\n'
name|'cex'
op|'='
name|'ex'
op|'*'
name|'fontWidth'
op|'+'
number|'3'
newline|'\n'
name|'cey'
op|'='
name|'ey'
op|'*'
name|'fontHeight'
op|'+'
number|'3'
newline|'\n'
name|'items'
op|'='
name|'self'
op|'.'
name|'canvas'
op|'.'
name|'find_overlapping'
op|'('
name|'csx'
op|','
name|'csy'
op|','
name|'cex'
op|','
name|'cey'
op|')'
newline|'\n'
name|'for'
name|'item'
name|'in'
name|'items'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'canvas'
op|'.'
name|'delete'
op|'('
name|'item'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_write
dedent|''
dedent|''
name|'def'
name|'_write'
op|'('
name|'self'
op|','
name|'ch'
op|','
name|'fg'
op|','
name|'bg'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'x'
op|'=='
name|'self'
op|'.'
name|'width'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'x'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'y'
op|'+='
number|'1'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'y'
op|'=='
name|'self'
op|'.'
name|'height'
op|':'
newline|'\n'
indent|'                '
op|'['
name|'self'
op|'.'
name|'canvas'
op|'.'
name|'move'
op|'('
name|'x'
op|','
number|'0'
op|','
op|'-'
name|'fontHeight'
op|')'
name|'for'
name|'x'
name|'in'
name|'self'
op|'.'
name|'canvas'
op|'.'
name|'find_all'
op|'('
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'y'
op|'-='
number|'1'
newline|'\n'
dedent|''
dedent|''
name|'canvasX'
op|'='
name|'self'
op|'.'
name|'x'
op|'*'
name|'fontWidth'
op|'+'
number|'1'
newline|'\n'
name|'canvasY'
op|'='
name|'self'
op|'.'
name|'y'
op|'*'
name|'fontHeight'
op|'+'
number|'1'
newline|'\n'
name|'items'
op|'='
name|'self'
op|'.'
name|'canvas'
op|'.'
name|'find_overlapping'
op|'('
name|'canvasX'
op|','
name|'canvasY'
op|','
name|'canvasX'
op|'+'
number|'2'
op|','
name|'canvasY'
op|'+'
number|'2'
op|')'
newline|'\n'
name|'if'
name|'items'
op|':'
newline|'\n'
indent|'            '
op|'['
name|'self'
op|'.'
name|'canvas'
op|'.'
name|'delete'
op|'('
name|'item'
op|')'
name|'for'
name|'item'
name|'in'
name|'items'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'bg'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'canvas'
op|'.'
name|'create_rectangle'
op|'('
name|'canvasX'
op|','
name|'canvasY'
op|','
name|'canvasX'
op|'+'
name|'fontWidth'
op|'-'
number|'1'
op|','
name|'canvasY'
op|'+'
name|'fontHeight'
op|'-'
number|'1'
op|','
name|'fill'
op|'='
name|'bg'
op|','
name|'outline'
op|'='
name|'bg'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'canvas'
op|'.'
name|'create_text'
op|'('
name|'canvasX'
op|','
name|'canvasY'
op|','
name|'anchor'
op|'='
name|'Tkinter'
op|'.'
name|'NW'
op|','
name|'font'
op|'='
name|'ttyFont'
op|','
name|'text'
op|'='
name|'ch'
op|','
name|'fill'
op|'='
name|'fg'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'x'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|write
dedent|''
name|'def'
name|'write'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
comment|'#print self.x,self.y,repr(data)'
nl|'\n'
comment|'#if len(data)>5: raw_input()'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'ansiParser'
op|'.'
name|'parseString'
op|'('
name|'data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'canvas'
op|'.'
name|'delete'
op|'('
name|'self'
op|'.'
name|'cursor'
op|')'
newline|'\n'
name|'canvasX'
op|'='
name|'self'
op|'.'
name|'x'
op|'*'
name|'fontWidth'
op|'+'
number|'1'
newline|'\n'
name|'canvasY'
op|'='
name|'self'
op|'.'
name|'y'
op|'*'
name|'fontHeight'
op|'+'
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'cursor'
op|'='
name|'self'
op|'.'
name|'canvas'
op|'.'
name|'create_rectangle'
op|'('
name|'canvasX'
op|','
name|'canvasY'
op|','
name|'canvasX'
op|'+'
name|'fontWidth'
op|'-'
number|'1'
op|','
name|'canvasY'
op|'+'
name|'fontHeight'
op|'-'
number|'1'
op|','
name|'fill'
op|'='
string|"'green'"
op|','
name|'outline'
op|'='
string|"'green'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'canvas'
op|'.'
name|'lower'
op|'('
name|'self'
op|'.'
name|'cursor'
op|')'
newline|'\n'
nl|'\n'
DECL|member|writeString
dedent|''
name|'def'
name|'writeString'
op|'('
name|'self'
op|','
name|'i'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'i'
op|'.'
name|'display'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'fg'
op|'='
name|'colorMap'
op|'['
name|'i'
op|'.'
name|'fg'
op|']'
newline|'\n'
name|'bg'
op|'='
name|'i'
op|'.'
name|'bg'
op|'!='
string|"'b'"
name|'and'
name|'colorMap'
op|'['
name|'i'
op|'.'
name|'bg'
op|']'
newline|'\n'
name|'for'
name|'ch'
name|'in'
name|'i'
op|'.'
name|'text'
op|':'
newline|'\n'
indent|'            '
name|'b'
op|'='
name|'ord'
op|'('
name|'ch'
op|')'
newline|'\n'
name|'if'
name|'b'
op|'=='
number|'7'
op|':'
comment|'# bell'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'bell'
op|'('
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'b'
op|'=='
number|'8'
op|':'
comment|'# BS'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'x'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'x'
op|'-='
number|'1'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'b'
op|'=='
number|'9'
op|':'
comment|'# TAB'
newline|'\n'
indent|'                '
op|'['
name|'self'
op|'.'
name|'_write'
op|'('
string|"' '"
op|','
name|'fg'
op|','
name|'bg'
op|')'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'8'
op|')'
op|']'
newline|'\n'
dedent|''
name|'elif'
name|'b'
op|'=='
number|'10'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'y'
op|'=='
name|'self'
op|'.'
name|'height'
op|'-'
number|'1'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'_delete'
op|'('
number|'0'
op|','
number|'0'
op|','
name|'self'
op|'.'
name|'width'
op|','
number|'0'
op|')'
newline|'\n'
op|'['
name|'self'
op|'.'
name|'canvas'
op|'.'
name|'move'
op|'('
name|'x'
op|','
number|'0'
op|','
op|'-'
name|'fontHeight'
op|')'
name|'for'
name|'x'
name|'in'
name|'self'
op|'.'
name|'canvas'
op|'.'
name|'find_all'
op|'('
op|')'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'y'
op|'+='
number|'1'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'b'
op|'=='
number|'13'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'x'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'elif'
number|'32'
op|'<='
name|'b'
op|'<'
number|'127'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_write'
op|'('
name|'ch'
op|','
name|'fg'
op|','
name|'bg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|parseErase
dedent|''
dedent|''
dedent|''
name|'def'
name|'parseErase'
op|'('
name|'self'
op|','
name|'erase'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"';'"
name|'in'
name|'erase'
op|':'
newline|'\n'
indent|'            '
name|'end'
op|'='
name|'erase'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'parts'
op|'='
name|'erase'
op|'['
op|':'
op|'-'
number|'1'
op|']'
op|'.'
name|'split'
op|'('
string|"';'"
op|')'
newline|'\n'
op|'['
name|'self'
op|'.'
name|'parseErase'
op|'('
name|'x'
op|'+'
name|'end'
op|')'
name|'for'
name|'x'
name|'in'
name|'parts'
op|']'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'start'
op|'='
number|'0'
newline|'\n'
name|'x'
op|','
name|'y'
op|'='
name|'self'
op|'.'
name|'x'
op|','
name|'self'
op|'.'
name|'y'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'erase'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'start'
op|'='
name|'int'
op|'('
name|'erase'
op|'['
op|':'
op|'-'
number|'1'
op|']'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'erase'
op|'['
op|'-'
number|'1'
op|']'
op|'=='
string|"'J'"
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'start'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_delete'
op|'('
name|'x'
op|','
name|'y'
op|','
name|'self'
op|'.'
name|'width'
op|','
name|'self'
op|'.'
name|'height'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_delete'
op|'('
number|'0'
op|','
number|'0'
op|','
name|'self'
op|'.'
name|'width'
op|','
name|'self'
op|'.'
name|'height'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'x'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'y'
op|'='
number|'0'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'erase'
op|'['
op|'-'
number|'1'
op|']'
op|'=='
string|"'K'"
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'start'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_delete'
op|'('
name|'x'
op|','
name|'y'
op|','
name|'self'
op|'.'
name|'width'
op|','
name|'y'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'start'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_delete'
op|'('
number|'0'
op|','
name|'y'
op|','
name|'x'
op|','
name|'y'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'x'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_delete'
op|'('
number|'0'
op|','
name|'y'
op|','
name|'self'
op|'.'
name|'width'
op|','
name|'y'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'x'
op|'='
number|'0'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'erase'
op|'['
op|'-'
number|'1'
op|']'
op|'=='
string|"'P'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_delete'
op|'('
name|'x'
op|','
name|'y'
op|','
name|'x'
op|'+'
name|'start'
op|','
name|'y'
op|')'
newline|'\n'
nl|'\n'
DECL|member|parseCursor
dedent|''
dedent|''
name|'def'
name|'parseCursor'
op|'('
name|'self'
op|','
name|'cursor'
op|')'
op|':'
newline|'\n'
comment|"#if ';' in cursor and cursor[-1]!='H':"
nl|'\n'
comment|'#    end = cursor[-1]'
nl|'\n'
comment|"#    parts = cursor[:-1].split(';')"
nl|'\n'
comment|'#    [self.parseCursor(x+end) for x in parts]'
nl|'\n'
comment|'#    return'
nl|'\n'
indent|'        '
name|'start'
op|'='
number|'1'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'cursor'
op|')'
op|'>'
number|'1'
name|'and'
name|'cursor'
op|'['
op|'-'
number|'1'
op|']'
op|'!='
string|"'H'"
op|':'
newline|'\n'
indent|'            '
name|'start'
op|'='
name|'int'
op|'('
name|'cursor'
op|'['
op|':'
op|'-'
number|'1'
op|']'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'cursor'
op|'['
op|'-'
number|'1'
op|']'
op|'=='
string|"'C'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'x'
op|'+='
name|'start'
newline|'\n'
dedent|''
name|'elif'
name|'cursor'
op|'['
op|'-'
number|'1'
op|']'
op|'=='
string|"'D'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'x'
op|'-='
name|'start'
newline|'\n'
dedent|''
name|'elif'
name|'cursor'
op|'['
op|'-'
number|'1'
op|']'
op|'=='
string|"'d'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'y'
op|'='
name|'start'
op|'-'
number|'1'
newline|'\n'
dedent|''
name|'elif'
name|'cursor'
op|'['
op|'-'
number|'1'
op|']'
op|'=='
string|"'G'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'x'
op|'='
name|'start'
op|'-'
number|'1'
newline|'\n'
dedent|''
name|'elif'
name|'cursor'
op|'['
op|'-'
number|'1'
op|']'
op|'=='
string|"'H'"
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'len'
op|'('
name|'cursor'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'y'
op|','
name|'x'
op|'='
name|'map'
op|'('
name|'int'
op|','
name|'cursor'
op|'['
op|':'
op|'-'
number|'1'
op|']'
op|'.'
name|'split'
op|'('
string|"';'"
op|')'
op|')'
newline|'\n'
name|'y'
op|'-='
number|'1'
newline|'\n'
name|'x'
op|'-='
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'x'
op|','
name|'y'
op|'='
number|'0'
op|','
number|'0'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'x'
op|'='
name|'x'
newline|'\n'
name|'self'
op|'.'
name|'y'
op|'='
name|'y'
newline|'\n'
nl|'\n'
DECL|member|keyPressed
dedent|''
dedent|''
name|'def'
name|'keyPressed'
op|'('
name|'self'
op|','
name|'event'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'callback'
name|'and'
name|'event'
op|'.'
name|'char'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'callback'
op|'('
name|'event'
op|'.'
name|'char'
op|')'
newline|'\n'
dedent|''
name|'return'
string|"'break'"
newline|'\n'
nl|'\n'
DECL|member|upPressed
dedent|''
name|'def'
name|'upPressed'
op|'('
name|'self'
op|','
name|'event'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'callback'
op|'('
string|"'\\x1bOA'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|downPressed
dedent|''
name|'def'
name|'downPressed'
op|'('
name|'self'
op|','
name|'event'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'callback'
op|'('
string|"'\\x1bOB'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|rightPressed
dedent|''
name|'def'
name|'rightPressed'
op|'('
name|'self'
op|','
name|'event'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'callback'
op|'('
string|"'\\x1bOC'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|leftPressed
dedent|''
name|'def'
name|'leftPressed'
op|'('
name|'self'
op|','
name|'event'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'callback'
op|'('
string|"'\\x1bOD'"
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
