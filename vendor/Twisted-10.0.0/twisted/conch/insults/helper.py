begin_unit
comment|'# -*- test-case-name: twisted.conch.test.test_helper -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2004 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nPartial in-memory terminal emulator\n\n@author: Jp Calderone\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'re'
op|','
name|'string'
newline|'\n'
nl|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'defer'
op|','
name|'protocol'
op|','
name|'reactor'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'conch'
op|'.'
name|'insults'
name|'import'
name|'insults'
newline|'\n'
nl|'\n'
DECL|variable|FOREGROUND
name|'FOREGROUND'
op|'='
number|'30'
newline|'\n'
DECL|variable|BACKGROUND
name|'BACKGROUND'
op|'='
number|'40'
newline|'\n'
name|'BLACK'
op|','
name|'RED'
op|','
name|'GREEN'
op|','
name|'YELLOW'
op|','
name|'BLUE'
op|','
name|'MAGENTA'
op|','
name|'CYAN'
op|','
name|'WHITE'
op|','
name|'N_COLORS'
op|'='
name|'range'
op|'('
number|'9'
op|')'
newline|'\n'
nl|'\n'
DECL|class|CharacterAttribute
name|'class'
name|'CharacterAttribute'
op|':'
newline|'\n'
indent|'    '
string|'"""Represents the attributes of a single character.\n\n    Character set, intensity, underlinedness, blinkitude, video\n    reversal, as well as foreground and background colors made up a\n    character\'s attributes.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'charset'
op|'='
name|'insults'
op|'.'
name|'G0'
op|','
nl|'\n'
name|'bold'
op|'='
name|'False'
op|','
name|'underline'
op|'='
name|'False'
op|','
nl|'\n'
name|'blink'
op|'='
name|'False'
op|','
name|'reverseVideo'
op|'='
name|'False'
op|','
nl|'\n'
name|'foreground'
op|'='
name|'WHITE'
op|','
name|'background'
op|'='
name|'BLACK'
op|','
nl|'\n'
nl|'\n'
name|'_subtracting'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'charset'
op|'='
name|'charset'
newline|'\n'
name|'self'
op|'.'
name|'bold'
op|'='
name|'bold'
newline|'\n'
name|'self'
op|'.'
name|'underline'
op|'='
name|'underline'
newline|'\n'
name|'self'
op|'.'
name|'blink'
op|'='
name|'blink'
newline|'\n'
name|'self'
op|'.'
name|'reverseVideo'
op|'='
name|'reverseVideo'
newline|'\n'
name|'self'
op|'.'
name|'foreground'
op|'='
name|'foreground'
newline|'\n'
name|'self'
op|'.'
name|'background'
op|'='
name|'background'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_subtracting'
op|'='
name|'_subtracting'
newline|'\n'
nl|'\n'
DECL|member|__eq__
dedent|''
name|'def'
name|'__eq__'
op|'('
name|'self'
op|','
name|'other'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'vars'
op|'('
name|'self'
op|')'
op|'=='
name|'vars'
op|'('
name|'other'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__ne__
dedent|''
name|'def'
name|'__ne__'
op|'('
name|'self'
op|','
name|'other'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'not'
name|'self'
op|'.'
name|'__eq__'
op|'('
name|'other'
op|')'
newline|'\n'
nl|'\n'
DECL|member|copy
dedent|''
name|'def'
name|'copy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'c'
op|'='
name|'self'
op|'.'
name|'__class__'
op|'('
op|')'
newline|'\n'
name|'c'
op|'.'
name|'__dict__'
op|'.'
name|'update'
op|'('
name|'vars'
op|'('
name|'self'
op|')'
op|')'
newline|'\n'
name|'return'
name|'c'
newline|'\n'
nl|'\n'
DECL|member|wantOne
dedent|''
name|'def'
name|'wantOne'
op|'('
name|'self'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'k'
op|','
name|'v'
op|'='
name|'kw'
op|'.'
name|'popitem'
op|'('
op|')'
newline|'\n'
name|'if'
name|'getattr'
op|'('
name|'self'
op|','
name|'k'
op|')'
op|'!='
name|'v'
op|':'
newline|'\n'
indent|'            '
name|'attr'
op|'='
name|'self'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'attr'
op|'.'
name|'_subtracting'
op|'='
name|'not'
name|'v'
newline|'\n'
name|'setattr'
op|'('
name|'attr'
op|','
name|'k'
op|','
name|'v'
op|')'
newline|'\n'
name|'return'
name|'attr'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|toVT102
dedent|''
dedent|''
name|'def'
name|'toVT102'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Spit out a vt102 control sequence that will set up'
nl|'\n'
comment|'# all the attributes set here.  Except charset.'
nl|'\n'
indent|'        '
name|'attrs'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_subtracting'
op|':'
newline|'\n'
indent|'            '
name|'attrs'
op|'.'
name|'append'
op|'('
number|'0'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'bold'
op|':'
newline|'\n'
indent|'            '
name|'attrs'
op|'.'
name|'append'
op|'('
name|'insults'
op|'.'
name|'BOLD'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'underline'
op|':'
newline|'\n'
indent|'            '
name|'attrs'
op|'.'
name|'append'
op|'('
name|'insults'
op|'.'
name|'UNDERLINE'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'blink'
op|':'
newline|'\n'
indent|'            '
name|'attrs'
op|'.'
name|'append'
op|'('
name|'insults'
op|'.'
name|'BLINK'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'reverseVideo'
op|':'
newline|'\n'
indent|'            '
name|'attrs'
op|'.'
name|'append'
op|'('
name|'insults'
op|'.'
name|'REVERSE_VIDEO'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'foreground'
op|'!='
name|'WHITE'
op|':'
newline|'\n'
indent|'            '
name|'attrs'
op|'.'
name|'append'
op|'('
name|'FOREGROUND'
op|'+'
name|'self'
op|'.'
name|'foreground'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'background'
op|'!='
name|'BLACK'
op|':'
newline|'\n'
indent|'            '
name|'attrs'
op|'.'
name|'append'
op|'('
name|'BACKGROUND'
op|'+'
name|'self'
op|'.'
name|'background'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'attrs'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'\\x1b['"
op|'+'
string|"';'"
op|'.'
name|'join'
op|'('
name|'map'
op|'('
name|'str'
op|','
name|'attrs'
op|')'
op|')'
op|'+'
string|"'m'"
newline|'\n'
dedent|''
name|'return'
string|"''"
newline|'\n'
nl|'\n'
comment|'# XXX - need to support scroll regions and scroll history'
nl|'\n'
DECL|class|TerminalBuffer
dedent|''
dedent|''
name|'class'
name|'TerminalBuffer'
op|'('
name|'protocol'
op|'.'
name|'Protocol'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    An in-memory terminal emulator.\n    """'
newline|'\n'
name|'implements'
op|'('
name|'insults'
op|'.'
name|'ITerminalTransport'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'keyID'
name|'in'
op|'('
string|"'UP_ARROW'"
op|','
string|"'DOWN_ARROW'"
op|','
string|"'RIGHT_ARROW'"
op|','
string|"'LEFT_ARROW'"
op|','
nl|'\n'
string|"'HOME'"
op|','
string|"'INSERT'"
op|','
string|"'DELETE'"
op|','
string|"'END'"
op|','
string|"'PGUP'"
op|','
string|"'PGDN'"
op|','
nl|'\n'
string|"'F1'"
op|','
string|"'F2'"
op|','
string|"'F3'"
op|','
string|"'F4'"
op|','
string|"'F5'"
op|','
string|"'F6'"
op|','
string|"'F7'"
op|','
string|"'F8'"
op|','
string|"'F9'"
op|','
nl|'\n'
string|"'F10'"
op|','
string|"'F11'"
op|','
string|"'F12'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'exec'
string|"'%s = object()'"
op|'%'
op|'('
name|'keyID'
op|','
op|')'
newline|'\n'
nl|'\n'
DECL|variable|TAB
dedent|''
name|'TAB'
op|'='
string|"'\\t'"
newline|'\n'
DECL|variable|BACKSPACE
name|'BACKSPACE'
op|'='
string|"'\\x7f'"
newline|'\n'
nl|'\n'
DECL|variable|width
name|'width'
op|'='
number|'80'
newline|'\n'
DECL|variable|height
name|'height'
op|'='
number|'24'
newline|'\n'
nl|'\n'
DECL|variable|fill
name|'fill'
op|'='
string|"' '"
newline|'\n'
DECL|variable|void
name|'void'
op|'='
name|'object'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|getCharacter
name|'def'
name|'getCharacter'
op|'('
name|'self'
op|','
name|'x'
op|','
name|'y'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'lines'
op|'['
name|'y'
op|']'
op|'['
name|'x'
op|']'
newline|'\n'
nl|'\n'
DECL|member|connectionMade
dedent|''
name|'def'
name|'connectionMade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|write
dedent|''
name|'def'
name|'write'
op|'('
name|'self'
op|','
name|'bytes'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Add the given printable bytes to the terminal.\n\n        Line feeds in C{bytes} will be replaced with carriage return / line\n        feed pairs.\n        """'
newline|'\n'
name|'for'
name|'b'
name|'in'
name|'bytes'
op|'.'
name|'replace'
op|'('
string|"'\\n'"
op|','
string|"'\\r\\n'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'insertAtCursor'
op|'('
name|'b'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_currentCharacterAttributes
dedent|''
dedent|''
name|'def'
name|'_currentCharacterAttributes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'CharacterAttribute'
op|'('
name|'self'
op|'.'
name|'activeCharset'
op|','
op|'**'
name|'self'
op|'.'
name|'graphicRendition'
op|')'
newline|'\n'
nl|'\n'
DECL|member|insertAtCursor
dedent|''
name|'def'
name|'insertAtCursor'
op|'('
name|'self'
op|','
name|'b'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Add one byte to the terminal at the cursor and make consequent state\n        updates.\n\n        If b is a carriage return, move the cursor to the beginning of the\n        current row.\n\n        If b is a line feed, move the cursor to the next row or scroll down if\n        the cursor is already in the last row.\n\n        Otherwise, if b is printable, put it at the cursor position (inserting\n        or overwriting as dictated by the current mode) and move the cursor.\n        """'
newline|'\n'
name|'if'
name|'b'
op|'=='
string|"'\\r'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'x'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'elif'
name|'b'
op|'=='
string|"'\\n'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_scrollDown'
op|'('
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'b'
name|'in'
name|'string'
op|'.'
name|'printable'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'x'
op|'>='
name|'self'
op|'.'
name|'width'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'nextLine'
op|'('
op|')'
newline|'\n'
dedent|''
name|'ch'
op|'='
op|'('
name|'b'
op|','
name|'self'
op|'.'
name|'_currentCharacterAttributes'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'modes'
op|'.'
name|'get'
op|'('
name|'insults'
op|'.'
name|'modes'
op|'.'
name|'IRM'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'lines'
op|'['
name|'self'
op|'.'
name|'y'
op|']'
op|'['
name|'self'
op|'.'
name|'x'
op|':'
name|'self'
op|'.'
name|'x'
op|']'
op|'='
op|'['
name|'ch'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'lines'
op|'['
name|'self'
op|'.'
name|'y'
op|']'
op|'.'
name|'pop'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'lines'
op|'['
name|'self'
op|'.'
name|'y'
op|']'
op|'['
name|'self'
op|'.'
name|'x'
op|']'
op|'='
name|'ch'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'x'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|_emptyLine
dedent|''
dedent|''
name|'def'
name|'_emptyLine'
op|'('
name|'self'
op|','
name|'width'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
op|'('
name|'self'
op|'.'
name|'void'
op|','
name|'self'
op|'.'
name|'_currentCharacterAttributes'
op|'('
op|')'
op|')'
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
name|'width'
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_scrollDown
dedent|''
name|'def'
name|'_scrollDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'y'
op|'+='
number|'1'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'y'
op|'>='
name|'self'
op|'.'
name|'height'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'y'
op|'-='
number|'1'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'lines'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'lines'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'_emptyLine'
op|'('
name|'self'
op|'.'
name|'width'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_scrollUp
dedent|''
dedent|''
name|'def'
name|'_scrollUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'y'
op|'-='
number|'1'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'y'
op|'<'
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'y'
op|'='
number|'0'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'lines'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'lines'
op|'.'
name|'insert'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'_emptyLine'
op|'('
name|'self'
op|'.'
name|'width'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|cursorUp
dedent|''
dedent|''
name|'def'
name|'cursorUp'
op|'('
name|'self'
op|','
name|'n'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'y'
op|'='
name|'max'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'y'
op|'-'
name|'n'
op|')'
newline|'\n'
nl|'\n'
DECL|member|cursorDown
dedent|''
name|'def'
name|'cursorDown'
op|'('
name|'self'
op|','
name|'n'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'y'
op|'='
name|'min'
op|'('
name|'self'
op|'.'
name|'height'
op|'-'
number|'1'
op|','
name|'self'
op|'.'
name|'y'
op|'+'
name|'n'
op|')'
newline|'\n'
nl|'\n'
DECL|member|cursorBackward
dedent|''
name|'def'
name|'cursorBackward'
op|'('
name|'self'
op|','
name|'n'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'x'
op|'='
name|'max'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'x'
op|'-'
name|'n'
op|')'
newline|'\n'
nl|'\n'
DECL|member|cursorForward
dedent|''
name|'def'
name|'cursorForward'
op|'('
name|'self'
op|','
name|'n'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'x'
op|'='
name|'min'
op|'('
name|'self'
op|'.'
name|'width'
op|','
name|'self'
op|'.'
name|'x'
op|'+'
name|'n'
op|')'
newline|'\n'
nl|'\n'
DECL|member|cursorPosition
dedent|''
name|'def'
name|'cursorPosition'
op|'('
name|'self'
op|','
name|'column'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'x'
op|'='
name|'column'
newline|'\n'
name|'self'
op|'.'
name|'y'
op|'='
name|'line'
newline|'\n'
nl|'\n'
DECL|member|cursorHome
dedent|''
name|'def'
name|'cursorHome'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'x'
op|'='
name|'self'
op|'.'
name|'home'
op|'.'
name|'x'
newline|'\n'
name|'self'
op|'.'
name|'y'
op|'='
name|'self'
op|'.'
name|'home'
op|'.'
name|'y'
newline|'\n'
nl|'\n'
DECL|member|index
dedent|''
name|'def'
name|'index'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_scrollDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|reverseIndex
dedent|''
name|'def'
name|'reverseIndex'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_scrollUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|nextLine
dedent|''
name|'def'
name|'nextLine'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Update the cursor position attributes and scroll down if appropriate.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'x'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'_scrollDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|saveCursor
dedent|''
name|'def'
name|'saveCursor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_savedCursor'
op|'='
op|'('
name|'self'
op|'.'
name|'x'
op|','
name|'self'
op|'.'
name|'y'
op|')'
newline|'\n'
nl|'\n'
DECL|member|restoreCursor
dedent|''
name|'def'
name|'restoreCursor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'x'
op|','
name|'self'
op|'.'
name|'y'
op|'='
name|'self'
op|'.'
name|'_savedCursor'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'_savedCursor'
newline|'\n'
nl|'\n'
DECL|member|setModes
dedent|''
name|'def'
name|'setModes'
op|'('
name|'self'
op|','
name|'modes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'m'
name|'in'
name|'modes'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'modes'
op|'['
name|'m'
op|']'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|resetModes
dedent|''
dedent|''
name|'def'
name|'resetModes'
op|'('
name|'self'
op|','
name|'modes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'m'
name|'in'
name|'modes'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'del'
name|'self'
op|'.'
name|'modes'
op|'['
name|'m'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|setPrivateModes
dedent|''
dedent|''
dedent|''
name|'def'
name|'setPrivateModes'
op|'('
name|'self'
op|','
name|'modes'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Enable the given modes.\n\n        Track which modes have been enabled so that the implementations of\n        other L{insults.ITerminalTransport} methods can be properly implemented\n        to respect these settings.\n\n        @see: L{resetPrivateModes}\n        @see: L{insults.ITerminalTransport.setPrivateModes}\n        """'
newline|'\n'
name|'for'
name|'m'
name|'in'
name|'modes'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'privateModes'
op|'['
name|'m'
op|']'
op|'='
name|'True'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|resetPrivateModes
dedent|''
dedent|''
name|'def'
name|'resetPrivateModes'
op|'('
name|'self'
op|','
name|'modes'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Disable the given modes.\n\n        @see: L{setPrivateModes}\n        @see: L{insults.ITerminalTransport.resetPrivateModes}\n        """'
newline|'\n'
name|'for'
name|'m'
name|'in'
name|'modes'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'del'
name|'self'
op|'.'
name|'privateModes'
op|'['
name|'m'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|applicationKeypadMode
dedent|''
dedent|''
dedent|''
name|'def'
name|'applicationKeypadMode'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'keypadMode'
op|'='
string|"'app'"
newline|'\n'
nl|'\n'
DECL|member|numericKeypadMode
dedent|''
name|'def'
name|'numericKeypadMode'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'keypadMode'
op|'='
string|"'num'"
newline|'\n'
nl|'\n'
DECL|member|selectCharacterSet
dedent|''
name|'def'
name|'selectCharacterSet'
op|'('
name|'self'
op|','
name|'charSet'
op|','
name|'which'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'charsets'
op|'['
name|'which'
op|']'
op|'='
name|'charSet'
newline|'\n'
nl|'\n'
DECL|member|shiftIn
dedent|''
name|'def'
name|'shiftIn'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'activeCharset'
op|'='
name|'insults'
op|'.'
name|'G0'
newline|'\n'
nl|'\n'
DECL|member|shiftOut
dedent|''
name|'def'
name|'shiftOut'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'activeCharset'
op|'='
name|'insults'
op|'.'
name|'G1'
newline|'\n'
nl|'\n'
DECL|member|singleShift2
dedent|''
name|'def'
name|'singleShift2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'oldActiveCharset'
op|'='
name|'self'
op|'.'
name|'activeCharset'
newline|'\n'
name|'self'
op|'.'
name|'activeCharset'
op|'='
name|'insults'
op|'.'
name|'G2'
newline|'\n'
name|'f'
op|'='
name|'self'
op|'.'
name|'insertAtCursor'
newline|'\n'
DECL|function|insertAtCursor
name|'def'
name|'insertAtCursor'
op|'('
name|'b'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'('
name|'b'
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'insertAtCursor'
newline|'\n'
name|'self'
op|'.'
name|'activeCharset'
op|'='
name|'oldActiveCharset'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'insertAtCursor'
op|'='
name|'insertAtCursor'
newline|'\n'
nl|'\n'
DECL|member|singleShift3
dedent|''
name|'def'
name|'singleShift3'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'oldActiveCharset'
op|'='
name|'self'
op|'.'
name|'activeCharset'
newline|'\n'
name|'self'
op|'.'
name|'activeCharset'
op|'='
name|'insults'
op|'.'
name|'G3'
newline|'\n'
name|'f'
op|'='
name|'self'
op|'.'
name|'insertAtCursor'
newline|'\n'
DECL|function|insertAtCursor
name|'def'
name|'insertAtCursor'
op|'('
name|'b'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'('
name|'b'
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'insertAtCursor'
newline|'\n'
name|'self'
op|'.'
name|'activeCharset'
op|'='
name|'oldActiveCharset'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'insertAtCursor'
op|'='
name|'insertAtCursor'
newline|'\n'
nl|'\n'
DECL|member|selectGraphicRendition
dedent|''
name|'def'
name|'selectGraphicRendition'
op|'('
name|'self'
op|','
op|'*'
name|'attributes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'a'
name|'in'
name|'attributes'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'a'
op|'=='
name|'insults'
op|'.'
name|'NORMAL'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'graphicRendition'
op|'='
op|'{'
nl|'\n'
string|"'bold'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'underline'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'blink'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'reverseVideo'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'foreground'"
op|':'
name|'WHITE'
op|','
nl|'\n'
string|"'background'"
op|':'
name|'BLACK'
op|'}'
newline|'\n'
dedent|''
name|'elif'
name|'a'
op|'=='
name|'insults'
op|'.'
name|'BOLD'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'graphicRendition'
op|'['
string|"'bold'"
op|']'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'elif'
name|'a'
op|'=='
name|'insults'
op|'.'
name|'UNDERLINE'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'graphicRendition'
op|'['
string|"'underline'"
op|']'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'elif'
name|'a'
op|'=='
name|'insults'
op|'.'
name|'BLINK'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'graphicRendition'
op|'['
string|"'blink'"
op|']'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'elif'
name|'a'
op|'=='
name|'insults'
op|'.'
name|'REVERSE_VIDEO'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'graphicRendition'
op|'['
string|"'reverseVideo'"
op|']'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'v'
op|'='
name|'int'
op|'('
name|'a'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                    '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Unknown graphic rendition attribute: "'
op|'+'
name|'repr'
op|'('
name|'a'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'FOREGROUND'
op|'<='
name|'v'
op|'<='
name|'FOREGROUND'
op|'+'
name|'N_COLORS'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'graphicRendition'
op|'['
string|"'foreground'"
op|']'
op|'='
name|'v'
op|'-'
name|'FOREGROUND'
newline|'\n'
dedent|''
name|'elif'
name|'BACKGROUND'
op|'<='
name|'v'
op|'<='
name|'BACKGROUND'
op|'+'
name|'N_COLORS'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'graphicRendition'
op|'['
string|"'background'"
op|']'
op|'='
name|'v'
op|'-'
name|'BACKGROUND'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Unknown graphic rendition attribute: "'
op|'+'
name|'repr'
op|'('
name|'a'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|eraseLine
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'eraseLine'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'lines'
op|'['
name|'self'
op|'.'
name|'y'
op|']'
op|'='
name|'self'
op|'.'
name|'_emptyLine'
op|'('
name|'self'
op|'.'
name|'width'
op|')'
newline|'\n'
nl|'\n'
DECL|member|eraseToLineEnd
dedent|''
name|'def'
name|'eraseToLineEnd'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'width'
op|'='
name|'self'
op|'.'
name|'width'
op|'-'
name|'self'
op|'.'
name|'x'
newline|'\n'
name|'self'
op|'.'
name|'lines'
op|'['
name|'self'
op|'.'
name|'y'
op|']'
op|'['
name|'self'
op|'.'
name|'x'
op|':'
op|']'
op|'='
name|'self'
op|'.'
name|'_emptyLine'
op|'('
name|'width'
op|')'
newline|'\n'
nl|'\n'
DECL|member|eraseToLineBeginning
dedent|''
name|'def'
name|'eraseToLineBeginning'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'lines'
op|'['
name|'self'
op|'.'
name|'y'
op|']'
op|'['
op|':'
name|'self'
op|'.'
name|'x'
op|'+'
number|'1'
op|']'
op|'='
name|'self'
op|'.'
name|'_emptyLine'
op|'('
name|'self'
op|'.'
name|'x'
op|'+'
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|eraseDisplay
dedent|''
name|'def'
name|'eraseDisplay'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'lines'
op|'='
op|'['
name|'self'
op|'.'
name|'_emptyLine'
op|'('
name|'self'
op|'.'
name|'width'
op|')'
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
name|'self'
op|'.'
name|'height'
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|member|eraseToDisplayEnd
dedent|''
name|'def'
name|'eraseToDisplayEnd'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'eraseToLineEnd'
op|'('
op|')'
newline|'\n'
name|'height'
op|'='
name|'self'
op|'.'
name|'height'
op|'-'
name|'self'
op|'.'
name|'y'
op|'-'
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'lines'
op|'['
name|'self'
op|'.'
name|'y'
op|'+'
number|'1'
op|':'
op|']'
op|'='
op|'['
name|'self'
op|'.'
name|'_emptyLine'
op|'('
name|'self'
op|'.'
name|'width'
op|')'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'height'
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|member|eraseToDisplayBeginning
dedent|''
name|'def'
name|'eraseToDisplayBeginning'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'eraseToLineBeginning'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'lines'
op|'['
op|':'
name|'self'
op|'.'
name|'y'
op|']'
op|'='
op|'['
name|'self'
op|'.'
name|'_emptyLine'
op|'('
name|'self'
op|'.'
name|'width'
op|')'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'self'
op|'.'
name|'y'
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|member|deleteCharacter
dedent|''
name|'def'
name|'deleteCharacter'
op|'('
name|'self'
op|','
name|'n'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'del'
name|'self'
op|'.'
name|'lines'
op|'['
name|'self'
op|'.'
name|'y'
op|']'
op|'['
name|'self'
op|'.'
name|'x'
op|':'
name|'self'
op|'.'
name|'x'
op|'+'
name|'n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'lines'
op|'['
name|'self'
op|'.'
name|'y'
op|']'
op|'.'
name|'extend'
op|'('
name|'self'
op|'.'
name|'_emptyLine'
op|'('
name|'min'
op|'('
name|'self'
op|'.'
name|'width'
op|'-'
name|'self'
op|'.'
name|'x'
op|','
name|'n'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|insertLine
dedent|''
name|'def'
name|'insertLine'
op|'('
name|'self'
op|','
name|'n'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'lines'
op|'['
name|'self'
op|'.'
name|'y'
op|':'
name|'self'
op|'.'
name|'y'
op|']'
op|'='
op|'['
name|'self'
op|'.'
name|'_emptyLine'
op|'('
name|'self'
op|'.'
name|'width'
op|')'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'n'
op|')'
op|']'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'lines'
op|'['
name|'self'
op|'.'
name|'height'
op|':'
op|']'
newline|'\n'
nl|'\n'
DECL|member|deleteLine
dedent|''
name|'def'
name|'deleteLine'
op|'('
name|'self'
op|','
name|'n'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'del'
name|'self'
op|'.'
name|'lines'
op|'['
name|'self'
op|'.'
name|'y'
op|':'
name|'self'
op|'.'
name|'y'
op|'+'
name|'n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'lines'
op|'.'
name|'extend'
op|'('
op|'['
name|'self'
op|'.'
name|'_emptyLine'
op|'('
name|'self'
op|'.'
name|'width'
op|')'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'n'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|reportCursorPosition
dedent|''
name|'def'
name|'reportCursorPosition'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'('
name|'self'
op|'.'
name|'x'
op|','
name|'self'
op|'.'
name|'y'
op|')'
newline|'\n'
nl|'\n'
DECL|member|reset
dedent|''
name|'def'
name|'reset'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'home'
op|'='
name|'insults'
op|'.'
name|'Vector'
op|'('
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'x'
op|'='
name|'self'
op|'.'
name|'y'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'modes'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'privateModes'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'setPrivateModes'
op|'('
op|'['
name|'insults'
op|'.'
name|'privateModes'
op|'.'
name|'AUTO_WRAP'
op|','
nl|'\n'
name|'insults'
op|'.'
name|'privateModes'
op|'.'
name|'CURSOR_MODE'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'numericKeypad'
op|'='
string|"'app'"
newline|'\n'
name|'self'
op|'.'
name|'activeCharset'
op|'='
name|'insults'
op|'.'
name|'G0'
newline|'\n'
name|'self'
op|'.'
name|'graphicRendition'
op|'='
op|'{'
nl|'\n'
string|"'bold'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'underline'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'blink'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'reverseVideo'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'foreground'"
op|':'
name|'WHITE'
op|','
nl|'\n'
string|"'background'"
op|':'
name|'BLACK'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'charsets'
op|'='
op|'{'
nl|'\n'
name|'insults'
op|'.'
name|'G0'
op|':'
name|'insults'
op|'.'
name|'CS_US'
op|','
nl|'\n'
name|'insults'
op|'.'
name|'G1'
op|':'
name|'insults'
op|'.'
name|'CS_US'
op|','
nl|'\n'
name|'insults'
op|'.'
name|'G2'
op|':'
name|'insults'
op|'.'
name|'CS_ALTERNATE'
op|','
nl|'\n'
name|'insults'
op|'.'
name|'G3'
op|':'
name|'insults'
op|'.'
name|'CS_ALTERNATE_SPECIAL'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'eraseDisplay'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|unhandledControlSequence
dedent|''
name|'def'
name|'unhandledControlSequence'
op|'('
name|'self'
op|','
name|'buf'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'Could not handle'"
op|','
name|'repr'
op|'('
name|'buf'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'lines'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'L'
name|'in'
name|'self'
op|'.'
name|'lines'
op|':'
newline|'\n'
indent|'            '
name|'buf'
op|'='
op|'['
op|']'
newline|'\n'
name|'length'
op|'='
number|'0'
newline|'\n'
name|'for'
op|'('
name|'ch'
op|','
name|'attr'
op|')'
name|'in'
name|'L'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'ch'
name|'is'
name|'not'
name|'self'
op|'.'
name|'void'
op|':'
newline|'\n'
indent|'                    '
name|'buf'
op|'.'
name|'append'
op|'('
name|'ch'
op|')'
newline|'\n'
name|'length'
op|'='
name|'len'
op|'('
name|'buf'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'buf'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'fill'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'lines'
op|'.'
name|'append'
op|'('
string|"''"
op|'.'
name|'join'
op|'('
name|'buf'
op|'['
op|':'
name|'length'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
string|"'\\n'"
op|'.'
name|'join'
op|'('
name|'lines'
op|')'
newline|'\n'
nl|'\n'
DECL|class|ExpectationTimeout
dedent|''
dedent|''
name|'class'
name|'ExpectationTimeout'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
DECL|class|ExpectableBuffer
dedent|''
name|'class'
name|'ExpectableBuffer'
op|'('
name|'TerminalBuffer'
op|')'
op|':'
newline|'\n'
DECL|variable|_mark
indent|'    '
name|'_mark'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|connectionMade
name|'def'
name|'connectionMade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'TerminalBuffer'
op|'.'
name|'connectionMade'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_expecting'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|write
dedent|''
name|'def'
name|'write'
op|'('
name|'self'
op|','
name|'bytes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'TerminalBuffer'
op|'.'
name|'write'
op|'('
name|'self'
op|','
name|'bytes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_checkExpected'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|cursorHome
dedent|''
name|'def'
name|'cursorHome'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'TerminalBuffer'
op|'.'
name|'cursorHome'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_mark'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|_timeoutExpected
dedent|''
name|'def'
name|'_timeoutExpected'
op|'('
name|'self'
op|','
name|'d'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'.'
name|'errback'
op|'('
name|'ExpectationTimeout'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_checkExpected'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_checkExpected
dedent|''
name|'def'
name|'_checkExpected'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'s'
op|'='
name|'str'
op|'('
name|'self'
op|')'
op|'['
name|'self'
op|'.'
name|'_mark'
op|':'
op|']'
newline|'\n'
name|'while'
name|'self'
op|'.'
name|'_expecting'
op|':'
newline|'\n'
indent|'            '
name|'expr'
op|','
name|'timer'
op|','
name|'deferred'
op|'='
name|'self'
op|'.'
name|'_expecting'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'timer'
name|'and'
name|'not'
name|'timer'
op|'.'
name|'active'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'del'
name|'self'
op|'.'
name|'_expecting'
op|'['
number|'0'
op|']'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'for'
name|'match'
name|'in'
name|'expr'
op|'.'
name|'finditer'
op|'('
name|'s'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'timer'
op|':'
newline|'\n'
indent|'                    '
name|'timer'
op|'.'
name|'cancel'
op|'('
op|')'
newline|'\n'
dedent|''
name|'del'
name|'self'
op|'.'
name|'_expecting'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_mark'
op|'+='
name|'match'
op|'.'
name|'end'
op|'('
op|')'
newline|'\n'
name|'s'
op|'='
name|'s'
op|'['
name|'match'
op|'.'
name|'end'
op|'('
op|')'
op|':'
op|']'
newline|'\n'
name|'deferred'
op|'.'
name|'callback'
op|'('
name|'match'
op|')'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
newline|'\n'
nl|'\n'
DECL|member|expect
dedent|''
dedent|''
dedent|''
name|'def'
name|'expect'
op|'('
name|'self'
op|','
name|'expression'
op|','
name|'timeout'
op|'='
name|'None'
op|','
name|'scheduler'
op|'='
name|'reactor'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'timer'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'timeout'
op|':'
newline|'\n'
indent|'            '
name|'timer'
op|'='
name|'scheduler'
op|'.'
name|'callLater'
op|'('
name|'timeout'
op|','
name|'self'
op|'.'
name|'_timeoutExpected'
op|','
name|'d'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_expecting'
op|'.'
name|'append'
op|'('
op|'('
name|'re'
op|'.'
name|'compile'
op|'('
name|'expression'
op|')'
op|','
name|'timer'
op|','
name|'d'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_checkExpected'
op|'('
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|variable|__all__
dedent|''
dedent|''
name|'__all__'
op|'='
op|'['
string|"'CharacterAttribute'"
op|','
string|"'TerminalBuffer'"
op|','
string|"'ExpectableBuffer'"
op|']'
newline|'\n'
endmarker|''
end_unit
