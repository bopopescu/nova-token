begin_unit
comment|'# Copyright (c) 2001-2004 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nTAP plugin for creating telnet- and ssh-accessible manhole servers.\n\n@author: Jp Calderone\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'protocol'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'application'
name|'import'
name|'service'
op|','
name|'strports'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'conch'
op|'.'
name|'ssh'
name|'import'
name|'session'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'conch'
name|'import'
name|'interfaces'
name|'as'
name|'iconch'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'cred'
name|'import'
name|'portal'
op|','
name|'checkers'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'usage'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'conch'
op|'.'
name|'insults'
name|'import'
name|'insults'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'conch'
name|'import'
name|'manhole'
op|','
name|'manhole_ssh'
op|','
name|'telnet'
newline|'\n'
nl|'\n'
DECL|class|makeTelnetProtocol
name|'class'
name|'makeTelnetProtocol'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'portal'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'portal'
op|'='
name|'portal'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'auth'
op|'='
name|'telnet'
op|'.'
name|'AuthenticatingTelnetProtocol'
newline|'\n'
name|'args'
op|'='
op|'('
name|'self'
op|'.'
name|'portal'
op|','
op|')'
newline|'\n'
name|'return'
name|'telnet'
op|'.'
name|'TelnetTransport'
op|'('
name|'auth'
op|','
op|'*'
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|class|chainedProtocolFactory
dedent|''
dedent|''
name|'class'
name|'chainedProtocolFactory'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'namespace'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'namespace'
op|'='
name|'namespace'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'insults'
op|'.'
name|'ServerProtocol'
op|'('
name|'manhole'
op|'.'
name|'ColoredManhole'
op|','
name|'self'
op|'.'
name|'namespace'
op|')'
newline|'\n'
nl|'\n'
DECL|class|_StupidRealm
dedent|''
dedent|''
name|'class'
name|'_StupidRealm'
op|':'
newline|'\n'
indent|'    '
name|'implements'
op|'('
name|'portal'
op|'.'
name|'IRealm'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'proto'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'protocolFactory'
op|'='
name|'proto'
newline|'\n'
name|'self'
op|'.'
name|'protocolArgs'
op|'='
name|'a'
newline|'\n'
name|'self'
op|'.'
name|'protocolKwArgs'
op|'='
name|'kw'
newline|'\n'
nl|'\n'
DECL|member|requestAvatar
dedent|''
name|'def'
name|'requestAvatar'
op|'('
name|'self'
op|','
name|'avatarId'
op|','
op|'*'
name|'interfaces'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'telnet'
op|'.'
name|'ITelnetProtocol'
name|'in'
name|'interfaces'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
name|'telnet'
op|'.'
name|'ITelnetProtocol'
op|','
nl|'\n'
name|'self'
op|'.'
name|'protocolFactory'
op|'('
op|'*'
name|'self'
op|'.'
name|'protocolArgs'
op|','
op|'**'
name|'self'
op|'.'
name|'protocolKwArgs'
op|')'
op|','
nl|'\n'
name|'lambda'
op|':'
name|'None'
op|')'
newline|'\n'
dedent|''
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|class|Options
dedent|''
dedent|''
name|'class'
name|'Options'
op|'('
name|'usage'
op|'.'
name|'Options'
op|')'
op|':'
newline|'\n'
DECL|variable|optParameters
indent|'    '
name|'optParameters'
op|'='
op|'['
nl|'\n'
op|'['
string|'"telnetPort"'
op|','
string|'"t"'
op|','
name|'None'
op|','
string|'"strports description of the address on which to listen for telnet connections"'
op|']'
op|','
nl|'\n'
op|'['
string|'"sshPort"'
op|','
string|'"s"'
op|','
name|'None'
op|','
string|'"strports description of the address on which to listen for ssh connections"'
op|']'
op|','
nl|'\n'
op|'['
string|'"passwd"'
op|','
string|'"p"'
op|','
string|'"/etc/passwd"'
op|','
string|'"name of a passwd(5)-format username/password file"'
op|']'
op|']'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'usage'
op|'.'
name|'Options'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'users'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'['
string|"'namespace'"
op|']'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|opt_user
dedent|''
name|'def'
name|'opt_user'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'users'
op|'.'
name|'append'
op|'('
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|postOptions
dedent|''
name|'def'
name|'postOptions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'['
string|"'telnetPort'"
op|']'
name|'is'
name|'None'
name|'and'
name|'self'
op|'['
string|"'sshPort'"
op|']'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'usage'
op|'.'
name|'UsageError'
op|'('
string|'"At least one of --telnetPort and --sshPort must be specified"'
op|')'
newline|'\n'
nl|'\n'
DECL|function|makeService
dedent|''
dedent|''
dedent|''
name|'def'
name|'makeService'
op|'('
name|'options'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Create a manhole server service.\n\n    @type options: C{dict}\n    @param options: A mapping describing the configuration of\n    the desired service.  Recognized key/value pairs are::\n\n        "telnetPort": strports description of the address on which\n                      to listen for telnet connections.  If None,\n                      no telnet service will be started.\n\n        "sshPort": strports description of the address on which to\n                   listen for ssh connections.  If None, no ssh\n                   service will be started.\n\n        "namespace": dictionary containing desired initial locals\n                     for manhole connections.  If None, an empty\n                     dictionary will be used.\n\n        "passwd": Name of a passwd(5)-format username/password file.\n\n    @rtype: L{twisted.application.service.IService}\n    @return: A manhole service.\n    """'
newline|'\n'
nl|'\n'
name|'svc'
op|'='
name|'service'
op|'.'
name|'MultiService'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'namespace'
op|'='
name|'options'
op|'['
string|"'namespace'"
op|']'
newline|'\n'
name|'if'
name|'namespace'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'namespace'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'checker'
op|'='
name|'checkers'
op|'.'
name|'FilePasswordDB'
op|'('
name|'options'
op|'['
string|"'passwd'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'options'
op|'['
string|"'telnetPort'"
op|']'
op|':'
newline|'\n'
indent|'        '
name|'telnetRealm'
op|'='
name|'_StupidRealm'
op|'('
name|'telnet'
op|'.'
name|'TelnetBootstrapProtocol'
op|','
nl|'\n'
name|'insults'
op|'.'
name|'ServerProtocol'
op|','
nl|'\n'
name|'manhole'
op|'.'
name|'ColoredManhole'
op|','
nl|'\n'
name|'namespace'
op|')'
newline|'\n'
nl|'\n'
name|'telnetPortal'
op|'='
name|'portal'
op|'.'
name|'Portal'
op|'('
name|'telnetRealm'
op|','
op|'['
name|'checker'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'telnetFactory'
op|'='
name|'protocol'
op|'.'
name|'ServerFactory'
op|'('
op|')'
newline|'\n'
name|'telnetFactory'
op|'.'
name|'protocol'
op|'='
name|'makeTelnetProtocol'
op|'('
name|'telnetPortal'
op|')'
newline|'\n'
name|'telnetService'
op|'='
name|'strports'
op|'.'
name|'service'
op|'('
name|'options'
op|'['
string|"'telnetPort'"
op|']'
op|','
nl|'\n'
name|'telnetFactory'
op|')'
newline|'\n'
name|'telnetService'
op|'.'
name|'setServiceParent'
op|'('
name|'svc'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'options'
op|'['
string|"'sshPort'"
op|']'
op|':'
newline|'\n'
indent|'        '
name|'sshRealm'
op|'='
name|'manhole_ssh'
op|'.'
name|'TerminalRealm'
op|'('
op|')'
newline|'\n'
name|'sshRealm'
op|'.'
name|'chainedProtocolFactory'
op|'='
name|'chainedProtocolFactory'
op|'('
name|'namespace'
op|')'
newline|'\n'
nl|'\n'
name|'sshPortal'
op|'='
name|'portal'
op|'.'
name|'Portal'
op|'('
name|'sshRealm'
op|','
op|'['
name|'checker'
op|']'
op|')'
newline|'\n'
name|'sshFactory'
op|'='
name|'manhole_ssh'
op|'.'
name|'ConchFactory'
op|'('
name|'sshPortal'
op|')'
newline|'\n'
name|'sshService'
op|'='
name|'strports'
op|'.'
name|'service'
op|'('
name|'options'
op|'['
string|"'sshPort'"
op|']'
op|','
nl|'\n'
name|'sshFactory'
op|')'
newline|'\n'
name|'sshService'
op|'.'
name|'setServiceParent'
op|'('
name|'svc'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'svc'
newline|'\n'
dedent|''
endmarker|''
end_unit
