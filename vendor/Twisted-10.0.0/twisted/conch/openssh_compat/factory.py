begin_unit
comment|'# -*- test-case-name: twisted.conch.test.test_openssh_compat -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nFactory for reading openssh configuration files: public keys, private keys, and\nmodile file.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
op|','
name|'errno'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'util'
name|'import'
name|'runAsEffectiveUser'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'conch'
op|'.'
name|'ssh'
name|'import'
name|'keys'
op|','
name|'factory'
op|','
name|'common'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'conch'
op|'.'
name|'openssh_compat'
name|'import'
name|'primes'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|OpenSSHFactory
name|'class'
name|'OpenSSHFactory'
op|'('
name|'factory'
op|'.'
name|'SSHFactory'
op|')'
op|':'
newline|'\n'
DECL|variable|dataRoot
indent|'    '
name|'dataRoot'
op|'='
string|"'/usr/local/etc'"
newline|'\n'
DECL|variable|moduliRoot
name|'moduliRoot'
op|'='
string|"'/usr/local/etc'"
comment|'# for openbsd which puts moduli in a different'
newline|'\n'
comment|'# directory from keys'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|member|getPublicKeys
name|'def'
name|'getPublicKeys'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Return the server public keys.\n        """'
newline|'\n'
name|'ks'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'filename'
name|'in'
name|'os'
op|'.'
name|'listdir'
op|'('
name|'self'
op|'.'
name|'dataRoot'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'filename'
op|'['
op|':'
number|'9'
op|']'
op|'=='
string|"'ssh_host_'"
name|'and'
name|'filename'
op|'['
op|'-'
number|'8'
op|':'
op|']'
op|'=='
string|"'_key.pub'"
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'k'
op|'='
name|'keys'
op|'.'
name|'Key'
op|'.'
name|'fromFile'
op|'('
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'dataRoot'
op|','
name|'filename'
op|')'
op|')'
newline|'\n'
name|'t'
op|'='
name|'common'
op|'.'
name|'getNS'
op|'('
name|'k'
op|'.'
name|'blob'
op|'('
op|')'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'ks'
op|'['
name|'t'
op|']'
op|'='
name|'k'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'e'
op|':'
newline|'\n'
indent|'                    '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'bad public key file %s: %s'"
op|'%'
op|'('
name|'filename'
op|','
name|'e'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'ks'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getPrivateKeys
dedent|''
name|'def'
name|'getPrivateKeys'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Return the server private keys.\n        """'
newline|'\n'
name|'privateKeys'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'filename'
name|'in'
name|'os'
op|'.'
name|'listdir'
op|'('
name|'self'
op|'.'
name|'dataRoot'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'filename'
op|'['
op|':'
number|'9'
op|']'
op|'=='
string|"'ssh_host_'"
name|'and'
name|'filename'
op|'['
op|'-'
number|'4'
op|':'
op|']'
op|'=='
string|"'_key'"
op|':'
newline|'\n'
indent|'                '
name|'fullPath'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'dataRoot'
op|','
name|'filename'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'key'
op|'='
name|'keys'
op|'.'
name|'Key'
op|'.'
name|'fromFile'
op|'('
name|'fullPath'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'IOError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'e'
op|'.'
name|'errno'
op|'=='
name|'errno'
op|'.'
name|'EACCES'
op|':'
newline|'\n'
comment|"# Not allowed, let's switch to root"
nl|'\n'
indent|'                        '
name|'key'
op|'='
name|'runAsEffectiveUser'
op|'('
number|'0'
op|','
number|'0'
op|','
name|'keys'
op|'.'
name|'Key'
op|'.'
name|'fromFile'
op|','
name|'fullPath'
op|')'
newline|'\n'
name|'keyType'
op|'='
name|'keys'
op|'.'
name|'objectType'
op|'('
name|'key'
op|'.'
name|'keyObject'
op|')'
newline|'\n'
name|'privateKeys'
op|'['
name|'keyType'
op|']'
op|'='
name|'key'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'raise'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
op|','
name|'e'
op|':'
newline|'\n'
indent|'                    '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'bad private key file %s: %s'"
op|'%'
op|'('
name|'filename'
op|','
name|'e'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'keyType'
op|'='
name|'keys'
op|'.'
name|'objectType'
op|'('
name|'key'
op|'.'
name|'keyObject'
op|')'
newline|'\n'
name|'privateKeys'
op|'['
name|'keyType'
op|']'
op|'='
name|'key'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'privateKeys'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getPrimes
dedent|''
name|'def'
name|'getPrimes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'primes'
op|'.'
name|'parseModuliFile'
op|'('
name|'self'
op|'.'
name|'moduliRoot'
op|'+'
string|"'/moduli'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'IOError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
