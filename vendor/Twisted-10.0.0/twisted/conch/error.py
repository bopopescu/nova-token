begin_unit
comment|'# Copyright (c) 2001-2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nAn error to represent bad things happening in Conch.\n\nMaintainer: Paul Swartz\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'cred'
op|'.'
name|'error'
name|'import'
name|'UnauthorizedLogin'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|ConchError
name|'class'
name|'ConchError'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'value'
op|','
name|'data'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'Exception'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'value'
op|','
name|'data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'value'
op|'='
name|'value'
newline|'\n'
name|'self'
op|'.'
name|'data'
op|'='
name|'data'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|NotEnoughAuthentication
dedent|''
dedent|''
name|'class'
name|'NotEnoughAuthentication'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    This is thrown if the authentication is valid, but is not enough to\n    successfully verify the user.  i.e. don\'t retry this type of\n    authentication, try another one.\n    """'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|ValidPublicKey
dedent|''
name|'class'
name|'ValidPublicKey'
op|'('
name|'UnauthorizedLogin'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Raised by public key checkers when they receive public key credentials\n    that don\'t contain a signature at all, but are valid in every other way.\n    (e.g. the public key matches one in the user\'s authorized_keys file).\n\n    Protocol code (eg\n    L{SSHUserAuthServer<twisted.conch.ssh.userauth.SSHUserAuthServer>}) which\n    attempts to log in using\n    L{ISSHPrivateKey<twisted.cred.credentials.ISSHPrivateKey>} credentials\n    should be prepared to handle a failure of this type by telling the user to\n    re-authenticate using the same key and to include a signature with the new\n    attempt.\n\n    See U{http://www.ietf.org/rfc/rfc4252.txt} section 7 for more details.\n    """'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|IgnoreAuthentication
dedent|''
name|'class'
name|'IgnoreAuthentication'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    This is thrown to let the UserAuthServer know it doesn\'t need to handle the\n    authentication anymore.\n    """'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|MissingKeyStoreError
dedent|''
name|'class'
name|'MissingKeyStoreError'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Raised if an SSHAgentServer starts receiving data without its factory\n    providing a keys dict on which to read/write key data.\n    """'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|UserRejectedKey
dedent|''
name|'class'
name|'UserRejectedKey'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    The user interactively rejected a key.\n    """'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|InvalidEntry
dedent|''
name|'class'
name|'InvalidEntry'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    An entry in a known_hosts file could not be interpreted as a valid entry.\n    """'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|HostKeyChanged
dedent|''
name|'class'
name|'HostKeyChanged'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    The host key of a remote host has changed.\n\n    @ivar offendingEntry: The entry which contains the persistent host key that\n    disagrees with the given host key.\n\n    @type offendingEntry: L{twisted.conch.interfaces.IKnownHostEntry}\n\n    @ivar path: a reference to the known_hosts file that the offending entry\n    was loaded from\n\n    @type path: L{twisted.python.filepath.FilePath}\n\n    @ivar lineno: The line number of the offending entry in the given path.\n\n    @type lineno: L{int}\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'offendingEntry'
op|','
name|'path'
op|','
name|'lineno'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'Exception'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'offendingEntry'
op|'='
name|'offendingEntry'
newline|'\n'
name|'self'
op|'.'
name|'path'
op|'='
name|'path'
newline|'\n'
name|'self'
op|'.'
name|'lineno'
op|'='
name|'lineno'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
