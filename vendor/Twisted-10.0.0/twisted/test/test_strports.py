begin_unit
comment|'# Copyright (c) 2001-2004 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
comment|'#'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'application'
name|'import'
name|'strports'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
name|'import'
name|'unittest'
newline|'\n'
nl|'\n'
DECL|class|ParserTestCase
name|'class'
name|'ParserTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|f
indent|'    '
name|'f'
op|'='
string|'"Factory"'
newline|'\n'
nl|'\n'
DECL|member|testSimpleNumeric
name|'def'
name|'testSimpleNumeric'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'strports'
op|'.'
name|'parse'
op|'('
string|"'80'"
op|','
name|'self'
op|'.'
name|'f'
op|')'
op|','
nl|'\n'
op|'('
string|"'TCP'"
op|','
op|'('
number|'80'
op|','
name|'self'
op|'.'
name|'f'
op|')'
op|','
op|'{'
string|"'interface'"
op|':'
string|"''"
op|','
string|"'backlog'"
op|':'
number|'50'
op|'}'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testSimpleTCP
dedent|''
name|'def'
name|'testSimpleTCP'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'strports'
op|'.'
name|'parse'
op|'('
string|"'tcp:80'"
op|','
name|'self'
op|'.'
name|'f'
op|')'
op|','
nl|'\n'
op|'('
string|"'TCP'"
op|','
op|'('
number|'80'
op|','
name|'self'
op|'.'
name|'f'
op|')'
op|','
op|'{'
string|"'interface'"
op|':'
string|"''"
op|','
string|"'backlog'"
op|':'
number|'50'
op|'}'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testInterfaceTCP
dedent|''
name|'def'
name|'testInterfaceTCP'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'strports'
op|'.'
name|'parse'
op|'('
string|"'tcp:80:interface=127.0.0.1'"
op|','
name|'self'
op|'.'
name|'f'
op|')'
op|','
nl|'\n'
op|'('
string|"'TCP'"
op|','
op|'('
number|'80'
op|','
name|'self'
op|'.'
name|'f'
op|')'
op|','
nl|'\n'
op|'{'
string|"'interface'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'backlog'"
op|':'
number|'50'
op|'}'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testBacklogTCP
dedent|''
name|'def'
name|'testBacklogTCP'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'strports'
op|'.'
name|'parse'
op|'('
string|"'tcp:80:backlog=6'"
op|','
name|'self'
op|'.'
name|'f'
op|')'
op|','
nl|'\n'
op|'('
string|"'TCP'"
op|','
op|'('
number|'80'
op|','
name|'self'
op|'.'
name|'f'
op|')'
op|','
nl|'\n'
op|'{'
string|"'interface'"
op|':'
string|"''"
op|','
string|"'backlog'"
op|':'
number|'6'
op|'}'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_simpleUNIX
dedent|''
name|'def'
name|'test_simpleUNIX'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        L{strports.parse} returns a C{\'UNIX\'} port description with defaults\n        for C{\'mode\'}, C{\'backlog\'}, and C{\'wantPID\'} when passed a string with\n        the C{\'unix:\'} prefix and no other parameter values.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'strports'
op|'.'
name|'parse'
op|'('
string|"'unix:/var/run/finger'"
op|','
name|'self'
op|'.'
name|'f'
op|')'
op|','
nl|'\n'
op|'('
string|"'UNIX'"
op|','
op|'('
string|"'/var/run/finger'"
op|','
name|'self'
op|'.'
name|'f'
op|')'
op|','
nl|'\n'
op|'{'
string|"'mode'"
op|':'
number|'0666'
op|','
string|"'backlog'"
op|':'
number|'50'
op|','
string|"'wantPID'"
op|':'
name|'True'
op|'}'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_modeUNIX
dedent|''
name|'def'
name|'test_modeUNIX'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        C{mode} can be set by including C{"mode=<some integer>"}.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'strports'
op|'.'
name|'parse'
op|'('
string|"'unix:/var/run/finger:mode=0660'"
op|','
name|'self'
op|'.'
name|'f'
op|')'
op|','
nl|'\n'
op|'('
string|"'UNIX'"
op|','
op|'('
string|"'/var/run/finger'"
op|','
name|'self'
op|'.'
name|'f'
op|')'
op|','
nl|'\n'
op|'{'
string|"'mode'"
op|':'
number|'0660'
op|','
string|"'backlog'"
op|':'
number|'50'
op|','
string|"'wantPID'"
op|':'
name|'True'
op|'}'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_wantPIDUNIX
dedent|''
name|'def'
name|'test_wantPIDUNIX'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        C{wantPID} can be set to false by included C{"lockfile=0"}.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'strports'
op|'.'
name|'parse'
op|'('
string|"'unix:/var/run/finger:lockfile=0'"
op|','
name|'self'
op|'.'
name|'f'
op|')'
op|','
nl|'\n'
op|'('
string|"'UNIX'"
op|','
op|'('
string|"'/var/run/finger'"
op|','
name|'self'
op|'.'
name|'f'
op|')'
op|','
nl|'\n'
op|'{'
string|"'mode'"
op|':'
number|'0666'
op|','
string|"'backlog'"
op|':'
number|'50'
op|','
string|"'wantPID'"
op|':'
name|'False'
op|'}'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|testAllKeywords
dedent|''
name|'def'
name|'testAllKeywords'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'strports'
op|'.'
name|'parse'
op|'('
string|"'port=80'"
op|','
name|'self'
op|'.'
name|'f'
op|')'
op|','
nl|'\n'
op|'('
string|"'TCP'"
op|','
op|'('
number|'80'
op|','
name|'self'
op|'.'
name|'f'
op|')'
op|','
op|'{'
string|"'interface'"
op|':'
string|"''"
op|','
string|"'backlog'"
op|':'
number|'50'
op|'}'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testEscape
dedent|''
name|'def'
name|'testEscape'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'strports'
op|'.'
name|'parse'
op|'('
string|"r'unix:foo\\:bar\\=baz\\:qux\\\\'"
op|','
name|'self'
op|'.'
name|'f'
op|')'
op|','
nl|'\n'
op|'('
string|"'UNIX'"
op|','
op|'('
string|"'foo:bar=baz:qux\\\\'"
op|','
name|'self'
op|'.'
name|'f'
op|')'
op|','
nl|'\n'
op|'{'
string|"'mode'"
op|':'
number|'0666'
op|','
string|"'backlog'"
op|':'
number|'50'
op|','
string|"'wantPID'"
op|':'
name|'True'
op|'}'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|testImpliedEscape
dedent|''
name|'def'
name|'testImpliedEscape'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'strports'
op|'.'
name|'parse'
op|'('
string|"r'unix:address=foo=bar'"
op|','
name|'self'
op|'.'
name|'f'
op|')'
op|','
nl|'\n'
op|'('
string|"'UNIX'"
op|','
op|'('
string|"'foo=bar'"
op|','
name|'self'
op|'.'
name|'f'
op|')'
op|','
nl|'\n'
op|'{'
string|"'mode'"
op|':'
number|'0666'
op|','
string|"'backlog'"
op|':'
number|'50'
op|','
string|"'wantPID'"
op|':'
name|'True'
op|'}'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testNonstandardDefault
dedent|''
name|'def'
name|'testNonstandardDefault'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'strports'
op|'.'
name|'parse'
op|'('
string|"'filename'"
op|','
name|'self'
op|'.'
name|'f'
op|','
string|"'unix'"
op|')'
op|','
nl|'\n'
op|'('
string|"'UNIX'"
op|','
op|'('
string|"'filename'"
op|','
name|'self'
op|'.'
name|'f'
op|')'
op|','
nl|'\n'
op|'{'
string|"'mode'"
op|':'
number|'0666'
op|','
string|"'backlog'"
op|':'
number|'50'
op|','
string|"'wantPID'"
op|':'
name|'True'
op|'}'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
