begin_unit
comment|'# Copyright 2005 Divmod, Inc.  See LICENSE file for details'
nl|'\n'
comment|'# Copyright (c) 2006-2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nTests for L{twisted.internet._sslverify}.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'itertools'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'from'
name|'OpenSSL'
name|'import'
name|'SSL'
newline|'\n'
name|'from'
name|'OpenSSL'
op|'.'
name|'crypto'
name|'import'
name|'PKey'
op|','
name|'X509'
op|','
name|'X509Req'
newline|'\n'
name|'from'
name|'OpenSSL'
op|'.'
name|'crypto'
name|'import'
name|'TYPE_RSA'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'_sslverify'
name|'as'
name|'sslverify'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'from'
name|'twisted'
op|'.'
name|'trial'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'protocol'
op|','
name|'defer'
op|','
name|'reactor'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'reflect'
name|'import'
name|'objgrep'
op|','
name|'isSame'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'error'
name|'import'
name|'CertificateError'
op|','
name|'ConnectionLost'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'interfaces'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# A couple of static PEM-format certificates to be used by various tests.'
nl|'\n'
name|'A_HOST_CERTIFICATE_PEM'
op|'='
string|'"""\n-----BEGIN CERTIFICATE-----\n        MIIC2jCCAkMCAjA5MA0GCSqGSIb3DQEBBAUAMIG0MQswCQYDVQQGEwJVUzEiMCAG\n        A1UEAxMZZXhhbXBsZS50d2lzdGVkbWF0cml4LmNvbTEPMA0GA1UEBxMGQm9zdG9u\n        MRwwGgYDVQQKExNUd2lzdGVkIE1hdHJpeCBMYWJzMRYwFAYDVQQIEw1NYXNzYWNo\n        dXNldHRzMScwJQYJKoZIhvcNAQkBFhhub2JvZHlAdHdpc3RlZG1hdHJpeC5jb20x\n        ETAPBgNVBAsTCFNlY3VyaXR5MB4XDTA2MDgxNjAxMDEwOFoXDTA3MDgxNjAxMDEw\n        OFowgbQxCzAJBgNVBAYTAlVTMSIwIAYDVQQDExlleGFtcGxlLnR3aXN0ZWRtYXRy\n        aXguY29tMQ8wDQYDVQQHEwZCb3N0b24xHDAaBgNVBAoTE1R3aXN0ZWQgTWF0cml4\n        IExhYnMxFjAUBgNVBAgTDU1hc3NhY2h1c2V0dHMxJzAlBgkqhkiG9w0BCQEWGG5v\n        Ym9keUB0d2lzdGVkbWF0cml4LmNvbTERMA8GA1UECxMIU2VjdXJpdHkwgZ8wDQYJ\n        KoZIhvcNAQEBBQADgY0AMIGJAoGBAMzH8CDF/U91y/bdbdbJKnLgnyvQ9Ig9ZNZp\n        8hpsu4huil60zF03+Lexg2l1FIfURScjBuaJMR6HiMYTMjhzLuByRZ17KW4wYkGi\n        KXstz03VIKy4Tjc+v4aXFI4XdRw10gGMGQlGGscXF/RSoN84VoDKBfOMWdXeConJ\n        VyC4w3iJAgMBAAEwDQYJKoZIhvcNAQEEBQADgYEAviMT4lBoxOgQy32LIgZ4lVCj\n        JNOiZYg8GMQ6y0ugp86X80UjOvkGtNf/R7YgED/giKRN/q/XJiLJDEhzknkocwmO\n        S+4b2XpiaZYxRyKWwL221O7CGmtWYyZl2+92YYmmCiNzWQPfP6BOMlfax0AGLHls\n        fXzCWdG0O/3Lk2SRM0I=\n-----END CERTIFICATE-----\n"""'
newline|'\n'
nl|'\n'
name|'A_PEER_CERTIFICATE_PEM'
op|'='
string|'"""\n-----BEGIN CERTIFICATE-----\n        MIIC3jCCAkcCAjA6MA0GCSqGSIb3DQEBBAUAMIG2MQswCQYDVQQGEwJVUzEiMCAG\n        A1UEAxMZZXhhbXBsZS50d2lzdGVkbWF0cml4LmNvbTEPMA0GA1UEBxMGQm9zdG9u\n        MRwwGgYDVQQKExNUd2lzdGVkIE1hdHJpeCBMYWJzMRYwFAYDVQQIEw1NYXNzYWNo\n        dXNldHRzMSkwJwYJKoZIhvcNAQkBFhpzb21lYm9keUB0d2lzdGVkbWF0cml4LmNv\n        bTERMA8GA1UECxMIU2VjdXJpdHkwHhcNMDYwODE2MDEwMTU2WhcNMDcwODE2MDEw\n        MTU2WjCBtjELMAkGA1UEBhMCVVMxIjAgBgNVBAMTGWV4YW1wbGUudHdpc3RlZG1h\n        dHJpeC5jb20xDzANBgNVBAcTBkJvc3RvbjEcMBoGA1UEChMTVHdpc3RlZCBNYXRy\n        aXggTGFiczEWMBQGA1UECBMNTWFzc2FjaHVzZXR0czEpMCcGCSqGSIb3DQEJARYa\n        c29tZWJvZHlAdHdpc3RlZG1hdHJpeC5jb20xETAPBgNVBAsTCFNlY3VyaXR5MIGf\n        MA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCnm+WBlgFNbMlHehib9ePGGDXF+Nz4\n        CjGuUmVBaXCRCiVjg3kSDecwqfb0fqTksBZ+oQ1UBjMcSh7OcvFXJZnUesBikGWE\n        JE4V8Bjh+RmbJ1ZAlUPZ40bAkww0OpyIRAGMvKG+4yLFTO4WDxKmfDcrOb6ID8WJ\n        e1u+i3XGkIf/5QIDAQABMA0GCSqGSIb3DQEBBAUAA4GBAD4Oukm3YYkhedUepBEA\n        vvXIQhVDqL7mk6OqYdXmNj6R7ZMC8WWvGZxrzDI1bZuB+4aIxxd1FXC3UOHiR/xg\n        i9cDl1y8P/qRp4aEBNF6rI0D4AxTbfnHQx4ERDAOShJdYZs/2zifPJ6va6YvrEyr\n        yqDtGhklsWW3ZwBzEh5VEOUp\n-----END CERTIFICATE-----\n"""'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|variable|counter
name|'counter'
op|'='
name|'itertools'
op|'.'
name|'count'
op|'('
op|')'
op|'.'
name|'next'
newline|'\n'
DECL|function|makeCertificate
name|'def'
name|'makeCertificate'
op|'('
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'keypair'
op|'='
name|'PKey'
op|'('
op|')'
newline|'\n'
name|'keypair'
op|'.'
name|'generate_key'
op|'('
name|'TYPE_RSA'
op|','
number|'512'
op|')'
newline|'\n'
nl|'\n'
name|'certificate'
op|'='
name|'X509'
op|'('
op|')'
newline|'\n'
name|'certificate'
op|'.'
name|'gmtime_adj_notBefore'
op|'('
number|'0'
op|')'
newline|'\n'
name|'certificate'
op|'.'
name|'gmtime_adj_notAfter'
op|'('
number|'60'
op|'*'
number|'60'
op|'*'
number|'24'
op|'*'
number|'365'
op|')'
comment|'# One year'
newline|'\n'
name|'for'
name|'xname'
name|'in'
name|'certificate'
op|'.'
name|'get_issuer'
op|'('
op|')'
op|','
name|'certificate'
op|'.'
name|'get_subject'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
op|'('
name|'k'
op|','
name|'v'
op|')'
name|'in'
name|'kw'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'setattr'
op|'('
name|'xname'
op|','
name|'k'
op|','
name|'v'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'certificate'
op|'.'
name|'set_serial_number'
op|'('
name|'counter'
op|'('
op|')'
op|')'
newline|'\n'
name|'certificate'
op|'.'
name|'set_pubkey'
op|'('
name|'keypair'
op|')'
newline|'\n'
name|'certificate'
op|'.'
name|'sign'
op|'('
name|'keypair'
op|','
string|'"md5"'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'keypair'
op|','
name|'certificate'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|DataCallbackProtocol
dedent|''
name|'class'
name|'DataCallbackProtocol'
op|'('
name|'protocol'
op|'.'
name|'Protocol'
op|')'
op|':'
newline|'\n'
DECL|member|dataReceived
indent|'    '
name|'def'
name|'dataReceived'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|','
name|'self'
op|'.'
name|'factory'
op|'.'
name|'onData'
op|'='
name|'self'
op|'.'
name|'factory'
op|'.'
name|'onData'
op|','
name|'None'
newline|'\n'
name|'if'
name|'d'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'.'
name|'callback'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|connectionLost
dedent|''
dedent|''
name|'def'
name|'connectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|','
name|'self'
op|'.'
name|'factory'
op|'.'
name|'onLost'
op|'='
name|'self'
op|'.'
name|'factory'
op|'.'
name|'onLost'
op|','
name|'None'
newline|'\n'
name|'if'
name|'d'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'.'
name|'errback'
op|'('
name|'reason'
op|')'
newline|'\n'
nl|'\n'
DECL|class|WritingProtocol
dedent|''
dedent|''
dedent|''
name|'class'
name|'WritingProtocol'
op|'('
name|'protocol'
op|'.'
name|'Protocol'
op|')'
op|':'
newline|'\n'
DECL|variable|byte
indent|'    '
name|'byte'
op|'='
string|"'x'"
newline|'\n'
DECL|member|connectionMade
name|'def'
name|'connectionMade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
name|'self'
op|'.'
name|'byte'
op|')'
newline|'\n'
nl|'\n'
DECL|member|connectionLost
dedent|''
name|'def'
name|'connectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'factory'
op|'.'
name|'onLost'
op|'.'
name|'errback'
op|'('
name|'reason'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|OpenSSLOptions
dedent|''
dedent|''
name|'class'
name|'OpenSSLOptions'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'serverPort'
op|'='
name|'clientConn'
op|'='
name|'None'
newline|'\n'
name|'onServerLost'
op|'='
name|'onClientLost'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|variable|sKey
name|'sKey'
op|'='
name|'None'
newline|'\n'
DECL|variable|sCert
name|'sCert'
op|'='
name|'None'
newline|'\n'
DECL|variable|cKey
name|'cKey'
op|'='
name|'None'
newline|'\n'
DECL|variable|cCert
name|'cCert'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create class variables of client and server certificates.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'sKey'
op|','
name|'self'
op|'.'
name|'sCert'
op|'='
name|'makeCertificate'
op|'('
nl|'\n'
name|'O'
op|'='
string|'"Server Test Certificate"'
op|','
nl|'\n'
name|'CN'
op|'='
string|'"server"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cKey'
op|','
name|'self'
op|'.'
name|'cCert'
op|'='
name|'makeCertificate'
op|'('
nl|'\n'
name|'O'
op|'='
string|'"Client Test Certificate"'
op|','
nl|'\n'
name|'CN'
op|'='
string|'"client"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'serverPort'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'serverPort'
op|'.'
name|'stopListening'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'clientConn'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'clientConn'
op|'.'
name|'disconnect'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'L'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'onServerLost'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'L'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'onServerLost'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'onClientLost'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'L'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'onClientLost'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'defer'
op|'.'
name|'DeferredList'
op|'('
name|'L'
op|','
name|'consumeErrors'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|loopback
dedent|''
name|'def'
name|'loopback'
op|'('
name|'self'
op|','
name|'serverCertOpts'
op|','
name|'clientCertOpts'
op|','
nl|'\n'
name|'onServerLost'
op|'='
name|'None'
op|','
name|'onClientLost'
op|'='
name|'None'
op|','
name|'onData'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'onServerLost'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'onServerLost'
op|'='
name|'onServerLost'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'onClientLost'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'onClientLost'
op|'='
name|'onClientLost'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'onData'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'onData'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'serverFactory'
op|'='
name|'protocol'
op|'.'
name|'ServerFactory'
op|'('
op|')'
newline|'\n'
name|'serverFactory'
op|'.'
name|'protocol'
op|'='
name|'DataCallbackProtocol'
newline|'\n'
name|'serverFactory'
op|'.'
name|'onLost'
op|'='
name|'onServerLost'
newline|'\n'
name|'serverFactory'
op|'.'
name|'onData'
op|'='
name|'onData'
newline|'\n'
nl|'\n'
name|'clientFactory'
op|'='
name|'protocol'
op|'.'
name|'ClientFactory'
op|'('
op|')'
newline|'\n'
name|'clientFactory'
op|'.'
name|'protocol'
op|'='
name|'WritingProtocol'
newline|'\n'
name|'clientFactory'
op|'.'
name|'onLost'
op|'='
name|'onClientLost'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'serverPort'
op|'='
name|'reactor'
op|'.'
name|'listenSSL'
op|'('
number|'0'
op|','
name|'serverFactory'
op|','
name|'serverCertOpts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'clientConn'
op|'='
name|'reactor'
op|'.'
name|'connectSSL'
op|'('
string|"'127.0.0.1'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'serverPort'
op|'.'
name|'getHost'
op|'('
op|')'
op|'.'
name|'port'
op|','
name|'clientFactory'
op|','
name|'clientCertOpts'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_abbreviatingDistinguishedNames
dedent|''
name|'def'
name|'test_abbreviatingDistinguishedNames'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Check that abbreviations used in certificates correctly map to\n        complete names.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'sslverify'
op|'.'
name|'DN'
op|'('
name|'CN'
op|'='
string|"'a'"
op|','
name|'OU'
op|'='
string|"'hello'"
op|')'
op|','
nl|'\n'
name|'sslverify'
op|'.'
name|'DistinguishedName'
op|'('
name|'commonName'
op|'='
string|"'a'"
op|','
nl|'\n'
name|'organizationalUnitName'
op|'='
string|"'hello'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEquals'
op|'('
nl|'\n'
name|'sslverify'
op|'.'
name|'DN'
op|'('
name|'CN'
op|'='
string|"'a'"
op|','
name|'OU'
op|'='
string|"'hello'"
op|')'
op|','
nl|'\n'
name|'sslverify'
op|'.'
name|'DN'
op|'('
name|'CN'
op|'='
string|"'a'"
op|','
name|'OU'
op|'='
string|"'hello'"
op|','
name|'emailAddress'
op|'='
string|"'xxx'"
op|')'
op|')'
newline|'\n'
name|'dn'
op|'='
name|'sslverify'
op|'.'
name|'DN'
op|'('
name|'CN'
op|'='
string|"'abcdefg'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AttributeError'
op|','
name|'setattr'
op|','
name|'dn'
op|','
string|"'Cn'"
op|','
string|"'x'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'dn'
op|'.'
name|'CN'
op|','
name|'dn'
op|'.'
name|'commonName'
op|')'
newline|'\n'
name|'dn'
op|'.'
name|'CN'
op|'='
string|"'bcdefga'"
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'dn'
op|'.'
name|'CN'
op|','
name|'dn'
op|'.'
name|'commonName'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|testInspectDistinguishedName
dedent|''
name|'def'
name|'testInspectDistinguishedName'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'n'
op|'='
name|'sslverify'
op|'.'
name|'DN'
op|'('
name|'commonName'
op|'='
string|"'common name'"
op|','
nl|'\n'
name|'organizationName'
op|'='
string|"'organization name'"
op|','
nl|'\n'
name|'organizationalUnitName'
op|'='
string|"'organizational unit name'"
op|','
nl|'\n'
name|'localityName'
op|'='
string|"'locality name'"
op|','
nl|'\n'
name|'stateOrProvinceName'
op|'='
string|"'state or province name'"
op|','
nl|'\n'
name|'countryName'
op|'='
string|"'country name'"
op|','
nl|'\n'
name|'emailAddress'
op|'='
string|"'email address'"
op|')'
newline|'\n'
name|'s'
op|'='
name|'n'
op|'.'
name|'inspect'
op|'('
op|')'
newline|'\n'
name|'for'
name|'k'
name|'in'
op|'['
nl|'\n'
string|"'common name'"
op|','
nl|'\n'
string|"'organization name'"
op|','
nl|'\n'
string|"'organizational unit name'"
op|','
nl|'\n'
string|"'locality name'"
op|','
nl|'\n'
string|"'state or province name'"
op|','
nl|'\n'
string|"'country name'"
op|','
nl|'\n'
string|"'email address'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'k'
op|','
name|'s'
op|','
string|'"%r was not in inspect output."'
op|'%'
op|'('
name|'k'
op|','
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
name|'k'
op|'.'
name|'title'
op|'('
op|')'
op|','
name|'s'
op|','
string|'"%r was not in inspect output."'
op|'%'
op|'('
name|'k'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|testInspectDistinguishedNameWithoutAllFields
dedent|''
dedent|''
name|'def'
name|'testInspectDistinguishedNameWithoutAllFields'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'n'
op|'='
name|'sslverify'
op|'.'
name|'DN'
op|'('
name|'localityName'
op|'='
string|"'locality name'"
op|')'
newline|'\n'
name|'s'
op|'='
name|'n'
op|'.'
name|'inspect'
op|'('
op|')'
newline|'\n'
name|'for'
name|'k'
name|'in'
op|'['
nl|'\n'
string|"'common name'"
op|','
nl|'\n'
string|"'organization name'"
op|','
nl|'\n'
string|"'organizational unit name'"
op|','
nl|'\n'
string|"'state or province name'"
op|','
nl|'\n'
string|"'country name'"
op|','
nl|'\n'
string|"'email address'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotIn'
op|'('
name|'k'
op|','
name|'s'
op|','
string|'"%r was in inspect output."'
op|'%'
op|'('
name|'k'
op|','
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
name|'k'
op|'.'
name|'title'
op|'('
op|')'
op|','
name|'s'
op|','
string|'"%r was in inspect output."'
op|'%'
op|'('
name|'k'
op|','
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'locality name'"
op|','
name|'s'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'Locality Name'"
op|','
name|'s'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_inspectCertificate
dedent|''
name|'def'
name|'test_inspectCertificate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test that the C{inspect} method of L{sslverify.Certificate} returns\n        a human-readable string containing some basic information about the\n        certificate.\n        """'
newline|'\n'
name|'c'
op|'='
name|'sslverify'
op|'.'
name|'Certificate'
op|'.'
name|'loadPEM'
op|'('
name|'A_HOST_CERTIFICATE_PEM'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'c'
op|'.'
name|'inspect'
op|'('
op|')'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
op|','
nl|'\n'
op|'['
string|'"Certificate For Subject:"'
op|','
nl|'\n'
string|'"  Organizational Unit Name: Security"'
op|','
nl|'\n'
string|'"         Organization Name: Twisted Matrix Labs"'
op|','
nl|'\n'
string|'"               Common Name: example.twistedmatrix.com"'
op|','
nl|'\n'
string|'"    State Or Province Name: Massachusetts"'
op|','
nl|'\n'
string|'"              Country Name: US"'
op|','
nl|'\n'
string|'"             Email Address: nobody@twistedmatrix.com"'
op|','
nl|'\n'
string|'"             Locality Name: Boston"'
op|','
nl|'\n'
string|'""'
op|','
nl|'\n'
string|'"Issuer:"'
op|','
nl|'\n'
string|'"  Organizational Unit Name: Security"'
op|','
nl|'\n'
string|'"         Organization Name: Twisted Matrix Labs"'
op|','
nl|'\n'
string|'"               Common Name: example.twistedmatrix.com"'
op|','
nl|'\n'
string|'"    State Or Province Name: Massachusetts"'
op|','
nl|'\n'
string|'"              Country Name: US"'
op|','
nl|'\n'
string|'"             Email Address: nobody@twistedmatrix.com"'
op|','
nl|'\n'
string|'"             Locality Name: Boston"'
op|','
nl|'\n'
string|'""'
op|','
nl|'\n'
string|'"Serial Number: 12345"'
op|','
nl|'\n'
string|'"Digest: C4:96:11:00:30:C3:EC:EE:A3:55:AA:ED:8C:84:85:18"'
op|','
nl|'\n'
string|'"Public Key with Hash: ff33994c80812aa95a79cdb85362d054"'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_certificateOptionsSerialization
dedent|''
name|'def'
name|'test_certificateOptionsSerialization'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test that __setstate__(__getstate__()) round-trips properly.\n        """'
newline|'\n'
name|'firstOpts'
op|'='
name|'sslverify'
op|'.'
name|'OpenSSLCertificateOptions'
op|'('
nl|'\n'
name|'privateKey'
op|'='
name|'self'
op|'.'
name|'sKey'
op|','
nl|'\n'
name|'certificate'
op|'='
name|'self'
op|'.'
name|'sCert'
op|','
nl|'\n'
name|'method'
op|'='
name|'SSL'
op|'.'
name|'SSLv3_METHOD'
op|','
nl|'\n'
name|'verify'
op|'='
name|'True'
op|','
nl|'\n'
name|'caCerts'
op|'='
op|'['
name|'self'
op|'.'
name|'sCert'
op|']'
op|','
nl|'\n'
name|'verifyDepth'
op|'='
number|'2'
op|','
nl|'\n'
name|'requireCertificate'
op|'='
name|'False'
op|','
nl|'\n'
name|'verifyOnce'
op|'='
name|'False'
op|','
nl|'\n'
name|'enableSingleUseKeys'
op|'='
name|'False'
op|','
nl|'\n'
name|'enableSessions'
op|'='
name|'False'
op|','
nl|'\n'
name|'fixBrokenPeers'
op|'='
name|'True'
op|','
nl|'\n'
name|'enableSessionTickets'
op|'='
name|'True'
op|')'
newline|'\n'
name|'context'
op|'='
name|'firstOpts'
op|'.'
name|'getContext'
op|'('
op|')'
newline|'\n'
name|'state'
op|'='
name|'firstOpts'
op|'.'
name|'__getstate__'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|"# The context shouldn't be in the state to serialize"
nl|'\n'
name|'self'
op|'.'
name|'failIf'
op|'('
name|'objgrep'
op|'('
name|'state'
op|','
name|'context'
op|','
name|'isSame'
op|')'
op|','
nl|'\n'
name|'objgrep'
op|'('
name|'state'
op|','
name|'context'
op|','
name|'isSame'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'opts'
op|'='
name|'sslverify'
op|'.'
name|'OpenSSLCertificateOptions'
op|'('
op|')'
newline|'\n'
name|'opts'
op|'.'
name|'__setstate__'
op|'('
name|'state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'opts'
op|'.'
name|'privateKey'
op|','
name|'self'
op|'.'
name|'sKey'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'opts'
op|'.'
name|'certificate'
op|','
name|'self'
op|'.'
name|'sCert'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'opts'
op|'.'
name|'method'
op|','
name|'SSL'
op|'.'
name|'SSLv3_METHOD'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'opts'
op|'.'
name|'verify'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'opts'
op|'.'
name|'caCerts'
op|','
op|'['
name|'self'
op|'.'
name|'sCert'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'opts'
op|'.'
name|'verifyDepth'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'opts'
op|'.'
name|'requireCertificate'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'opts'
op|'.'
name|'verifyOnce'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'opts'
op|'.'
name|'enableSingleUseKeys'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'opts'
op|'.'
name|'enableSessions'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'opts'
op|'.'
name|'fixBrokenPeers'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'opts'
op|'.'
name|'enableSessionTickets'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_certificateOptionsSessionTickets
dedent|''
name|'def'
name|'test_certificateOptionsSessionTickets'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Enabling session tickets should not set the OP_NO_TICKET option.\n        """'
newline|'\n'
name|'opts'
op|'='
name|'sslverify'
op|'.'
name|'OpenSSLCertificateOptions'
op|'('
name|'enableSessionTickets'
op|'='
name|'True'
op|')'
newline|'\n'
name|'ctx'
op|'='
name|'opts'
op|'.'
name|'getContext'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'0'
op|','
name|'ctx'
op|'.'
name|'set_options'
op|'('
number|'0'
op|')'
op|'&'
number|'0x00004000'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_certificateOptionsSessionTicketsDisabled
dedent|''
name|'def'
name|'test_certificateOptionsSessionTicketsDisabled'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Enabling session tickets should set the OP_NO_TICKET option.\n        """'
newline|'\n'
name|'opts'
op|'='
name|'sslverify'
op|'.'
name|'OpenSSLCertificateOptions'
op|'('
name|'enableSessionTickets'
op|'='
name|'False'
op|')'
newline|'\n'
name|'ctx'
op|'='
name|'opts'
op|'.'
name|'getContext'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'0x00004000'
op|','
name|'ctx'
op|'.'
name|'set_options'
op|'('
number|'0'
op|')'
op|'&'
number|'0x00004000'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_allowedAnonymousClientConnection
dedent|''
name|'def'
name|'test_allowedAnonymousClientConnection'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Check that anonymous connections are allowed when certificates aren\'t\n        required on the server.\n        """'
newline|'\n'
name|'onData'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'loopback'
op|'('
name|'sslverify'
op|'.'
name|'OpenSSLCertificateOptions'
op|'('
name|'privateKey'
op|'='
name|'self'
op|'.'
name|'sKey'
op|','
nl|'\n'
name|'certificate'
op|'='
name|'self'
op|'.'
name|'sCert'
op|','
name|'requireCertificate'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'sslverify'
op|'.'
name|'OpenSSLCertificateOptions'
op|'('
nl|'\n'
name|'requireCertificate'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'onData'
op|'='
name|'onData'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'onData'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'lambda'
name|'result'
op|':'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'result'
op|','
name|'WritingProtocol'
op|'.'
name|'byte'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_refusedAnonymousClientConnection
dedent|''
name|'def'
name|'test_refusedAnonymousClientConnection'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Check that anonymous connections are refused when certificates are\n        required on the server.\n        """'
newline|'\n'
name|'onServerLost'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'onClientLost'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'loopback'
op|'('
name|'sslverify'
op|'.'
name|'OpenSSLCertificateOptions'
op|'('
name|'privateKey'
op|'='
name|'self'
op|'.'
name|'sKey'
op|','
nl|'\n'
name|'certificate'
op|'='
name|'self'
op|'.'
name|'sCert'
op|','
name|'verify'
op|'='
name|'True'
op|','
nl|'\n'
name|'caCerts'
op|'='
op|'['
name|'self'
op|'.'
name|'sCert'
op|']'
op|','
name|'requireCertificate'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'sslverify'
op|'.'
name|'OpenSSLCertificateOptions'
op|'('
nl|'\n'
name|'requireCertificate'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'onServerLost'
op|'='
name|'onServerLost'
op|','
nl|'\n'
name|'onClientLost'
op|'='
name|'onClientLost'
op|')'
newline|'\n'
nl|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'DeferredList'
op|'('
op|'['
name|'onClientLost'
op|','
name|'onServerLost'
op|']'
op|','
nl|'\n'
name|'consumeErrors'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|afterLost
name|'def'
name|'afterLost'
op|'('
op|'('
op|'('
name|'cSuccess'
op|','
name|'cResult'
op|')'
op|','
op|'('
name|'sSuccess'
op|','
name|'sResult'
op|')'
op|')'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'failIf'
op|'('
name|'cSuccess'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failIf'
op|'('
name|'sSuccess'
op|')'
newline|'\n'
comment|'# Win32 fails to report the SSL Error, and report a connection lost'
nl|'\n'
comment|"# instead: there is a race condition so that's not totally"
nl|'\n'
comment|'# surprising (see ticket #2877 in the tracker)'
nl|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'cResult'
op|'.'
name|'value'
op|','
op|'('
name|'SSL'
op|'.'
name|'Error'
op|','
name|'ConnectionLost'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'sResult'
op|'.'
name|'value'
op|','
name|'SSL'
op|'.'
name|'Error'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'afterLost'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_failedCertificateVerification
dedent|''
name|'def'
name|'test_failedCertificateVerification'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Check that connecting with a certificate not accepted by the server CA\n        fails.\n        """'
newline|'\n'
name|'onServerLost'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'onClientLost'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'loopback'
op|'('
name|'sslverify'
op|'.'
name|'OpenSSLCertificateOptions'
op|'('
name|'privateKey'
op|'='
name|'self'
op|'.'
name|'sKey'
op|','
nl|'\n'
name|'certificate'
op|'='
name|'self'
op|'.'
name|'sCert'
op|','
name|'verify'
op|'='
name|'False'
op|','
nl|'\n'
name|'requireCertificate'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'sslverify'
op|'.'
name|'OpenSSLCertificateOptions'
op|'('
name|'verify'
op|'='
name|'True'
op|','
nl|'\n'
name|'requireCertificate'
op|'='
name|'False'
op|','
name|'caCerts'
op|'='
op|'['
name|'self'
op|'.'
name|'cCert'
op|']'
op|')'
op|','
nl|'\n'
name|'onServerLost'
op|'='
name|'onServerLost'
op|','
nl|'\n'
name|'onClientLost'
op|'='
name|'onClientLost'
op|')'
newline|'\n'
nl|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'DeferredList'
op|'('
op|'['
name|'onClientLost'
op|','
name|'onServerLost'
op|']'
op|','
nl|'\n'
name|'consumeErrors'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|function|afterLost
name|'def'
name|'afterLost'
op|'('
op|'('
op|'('
name|'cSuccess'
op|','
name|'cResult'
op|')'
op|','
op|'('
name|'sSuccess'
op|','
name|'sResult'
op|')'
op|')'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'failIf'
op|'('
name|'cSuccess'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failIf'
op|'('
name|'sSuccess'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'afterLost'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_successfulCertificateVerification
dedent|''
name|'def'
name|'test_successfulCertificateVerification'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test a successful connection with client certificate validation on\n        server side.\n        """'
newline|'\n'
name|'onData'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'loopback'
op|'('
name|'sslverify'
op|'.'
name|'OpenSSLCertificateOptions'
op|'('
name|'privateKey'
op|'='
name|'self'
op|'.'
name|'sKey'
op|','
nl|'\n'
name|'certificate'
op|'='
name|'self'
op|'.'
name|'sCert'
op|','
name|'verify'
op|'='
name|'False'
op|','
nl|'\n'
name|'requireCertificate'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
name|'sslverify'
op|'.'
name|'OpenSSLCertificateOptions'
op|'('
name|'verify'
op|'='
name|'True'
op|','
nl|'\n'
name|'requireCertificate'
op|'='
name|'True'
op|','
name|'caCerts'
op|'='
op|'['
name|'self'
op|'.'
name|'sCert'
op|']'
op|')'
op|','
nl|'\n'
name|'onData'
op|'='
name|'onData'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'onData'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'lambda'
name|'result'
op|':'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'result'
op|','
name|'WritingProtocol'
op|'.'
name|'byte'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_successfulSymmetricSelfSignedCertificateVerification
dedent|''
name|'def'
name|'test_successfulSymmetricSelfSignedCertificateVerification'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test a successful connection with validation on both server and client\n        sides.\n        """'
newline|'\n'
name|'onData'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'loopback'
op|'('
name|'sslverify'
op|'.'
name|'OpenSSLCertificateOptions'
op|'('
name|'privateKey'
op|'='
name|'self'
op|'.'
name|'sKey'
op|','
nl|'\n'
name|'certificate'
op|'='
name|'self'
op|'.'
name|'sCert'
op|','
name|'verify'
op|'='
name|'True'
op|','
nl|'\n'
name|'requireCertificate'
op|'='
name|'True'
op|','
name|'caCerts'
op|'='
op|'['
name|'self'
op|'.'
name|'cCert'
op|']'
op|')'
op|','
nl|'\n'
name|'sslverify'
op|'.'
name|'OpenSSLCertificateOptions'
op|'('
name|'privateKey'
op|'='
name|'self'
op|'.'
name|'cKey'
op|','
nl|'\n'
name|'certificate'
op|'='
name|'self'
op|'.'
name|'cCert'
op|','
name|'verify'
op|'='
name|'True'
op|','
nl|'\n'
name|'requireCertificate'
op|'='
name|'True'
op|','
name|'caCerts'
op|'='
op|'['
name|'self'
op|'.'
name|'sCert'
op|']'
op|')'
op|','
nl|'\n'
name|'onData'
op|'='
name|'onData'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'onData'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'lambda'
name|'result'
op|':'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'result'
op|','
name|'WritingProtocol'
op|'.'
name|'byte'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_verification
dedent|''
name|'def'
name|'test_verification'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Check certificates verification building custom certificates data.\n        """'
newline|'\n'
name|'clientDN'
op|'='
name|'sslverify'
op|'.'
name|'DistinguishedName'
op|'('
name|'commonName'
op|'='
string|"'client'"
op|')'
newline|'\n'
name|'clientKey'
op|'='
name|'sslverify'
op|'.'
name|'KeyPair'
op|'.'
name|'generate'
op|'('
op|')'
newline|'\n'
name|'clientCertReq'
op|'='
name|'clientKey'
op|'.'
name|'certificateRequest'
op|'('
name|'clientDN'
op|')'
newline|'\n'
nl|'\n'
name|'serverDN'
op|'='
name|'sslverify'
op|'.'
name|'DistinguishedName'
op|'('
name|'commonName'
op|'='
string|"'server'"
op|')'
newline|'\n'
name|'serverKey'
op|'='
name|'sslverify'
op|'.'
name|'KeyPair'
op|'.'
name|'generate'
op|'('
op|')'
newline|'\n'
name|'serverCertReq'
op|'='
name|'serverKey'
op|'.'
name|'certificateRequest'
op|'('
name|'serverDN'
op|')'
newline|'\n'
nl|'\n'
name|'clientSelfCertReq'
op|'='
name|'clientKey'
op|'.'
name|'certificateRequest'
op|'('
name|'clientDN'
op|')'
newline|'\n'
name|'clientSelfCertData'
op|'='
name|'clientKey'
op|'.'
name|'signCertificateRequest'
op|'('
nl|'\n'
name|'clientDN'
op|','
name|'clientSelfCertReq'
op|','
name|'lambda'
name|'dn'
op|':'
name|'True'
op|','
number|'132'
op|')'
newline|'\n'
name|'clientSelfCert'
op|'='
name|'clientKey'
op|'.'
name|'newCertificate'
op|'('
name|'clientSelfCertData'
op|')'
newline|'\n'
nl|'\n'
name|'serverSelfCertReq'
op|'='
name|'serverKey'
op|'.'
name|'certificateRequest'
op|'('
name|'serverDN'
op|')'
newline|'\n'
name|'serverSelfCertData'
op|'='
name|'serverKey'
op|'.'
name|'signCertificateRequest'
op|'('
nl|'\n'
name|'serverDN'
op|','
name|'serverSelfCertReq'
op|','
name|'lambda'
name|'dn'
op|':'
name|'True'
op|','
number|'516'
op|')'
newline|'\n'
name|'serverSelfCert'
op|'='
name|'serverKey'
op|'.'
name|'newCertificate'
op|'('
name|'serverSelfCertData'
op|')'
newline|'\n'
nl|'\n'
name|'clientCertData'
op|'='
name|'serverKey'
op|'.'
name|'signCertificateRequest'
op|'('
nl|'\n'
name|'serverDN'
op|','
name|'clientCertReq'
op|','
name|'lambda'
name|'dn'
op|':'
name|'True'
op|','
number|'7'
op|')'
newline|'\n'
name|'clientCert'
op|'='
name|'clientKey'
op|'.'
name|'newCertificate'
op|'('
name|'clientCertData'
op|')'
newline|'\n'
nl|'\n'
name|'serverCertData'
op|'='
name|'clientKey'
op|'.'
name|'signCertificateRequest'
op|'('
nl|'\n'
name|'clientDN'
op|','
name|'serverCertReq'
op|','
name|'lambda'
name|'dn'
op|':'
name|'True'
op|','
number|'42'
op|')'
newline|'\n'
name|'serverCert'
op|'='
name|'serverKey'
op|'.'
name|'newCertificate'
op|'('
name|'serverCertData'
op|')'
newline|'\n'
nl|'\n'
name|'onData'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'serverOpts'
op|'='
name|'serverCert'
op|'.'
name|'options'
op|'('
name|'serverSelfCert'
op|')'
newline|'\n'
name|'clientOpts'
op|'='
name|'clientCert'
op|'.'
name|'options'
op|'('
name|'clientSelfCert'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'loopback'
op|'('
name|'serverOpts'
op|','
nl|'\n'
name|'clientOpts'
op|','
nl|'\n'
name|'onData'
op|'='
name|'onData'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'onData'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'lambda'
name|'result'
op|':'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'result'
op|','
name|'WritingProtocol'
op|'.'
name|'byte'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'interfaces'
op|'.'
name|'IReactorSSL'
op|'('
name|'reactor'
op|','
name|'None'
op|')'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'    '
name|'OpenSSLOptions'
op|'.'
name|'skip'
op|'='
string|'"Reactor does not support SSL, cannot run SSL tests"'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|_NotSSLTransport
dedent|''
name|'class'
name|'_NotSSLTransport'
op|':'
newline|'\n'
DECL|member|getHandle
indent|'    '
name|'def'
name|'getHandle'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|class|_MaybeSSLTransport
dedent|''
dedent|''
name|'class'
name|'_MaybeSSLTransport'
op|':'
newline|'\n'
DECL|member|getHandle
indent|'    '
name|'def'
name|'getHandle'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|get_peer_certificate
dedent|''
name|'def'
name|'get_peer_certificate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|get_host_certificate
dedent|''
name|'def'
name|'get_host_certificate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_ActualSSLTransport
dedent|''
dedent|''
name|'class'
name|'_ActualSSLTransport'
op|':'
newline|'\n'
DECL|member|getHandle
indent|'    '
name|'def'
name|'getHandle'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|get_host_certificate
dedent|''
name|'def'
name|'get_host_certificate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'sslverify'
op|'.'
name|'Certificate'
op|'.'
name|'loadPEM'
op|'('
name|'A_HOST_CERTIFICATE_PEM'
op|')'
op|'.'
name|'original'
newline|'\n'
nl|'\n'
DECL|member|get_peer_certificate
dedent|''
name|'def'
name|'get_peer_certificate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'sslverify'
op|'.'
name|'Certificate'
op|'.'
name|'loadPEM'
op|'('
name|'A_PEER_CERTIFICATE_PEM'
op|')'
op|'.'
name|'original'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Constructors
dedent|''
dedent|''
name|'class'
name|'Constructors'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_peerFromNonSSLTransport
indent|'    '
name|'def'
name|'test_peerFromNonSSLTransport'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Verify that peerFromTransport raises an exception if the transport\n        passed is not actually an SSL transport.\n        """'
newline|'\n'
name|'x'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'CertificateError'
op|','
nl|'\n'
name|'sslverify'
op|'.'
name|'Certificate'
op|'.'
name|'peerFromTransport'
op|','
nl|'\n'
name|'_NotSSLTransport'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'str'
op|'('
name|'x'
op|')'
op|'.'
name|'startswith'
op|'('
string|'"non-TLS"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_peerFromBlankSSLTransport
dedent|''
name|'def'
name|'test_peerFromBlankSSLTransport'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Verify that peerFromTransport raises an exception if the transport\n        passed is an SSL transport, but doesn\'t have a peer certificate.\n        """'
newline|'\n'
name|'x'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'CertificateError'
op|','
nl|'\n'
name|'sslverify'
op|'.'
name|'Certificate'
op|'.'
name|'peerFromTransport'
op|','
nl|'\n'
name|'_MaybeSSLTransport'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'str'
op|'('
name|'x'
op|')'
op|'.'
name|'startswith'
op|'('
string|'"TLS"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_hostFromNonSSLTransport
dedent|''
name|'def'
name|'test_hostFromNonSSLTransport'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Verify that hostFromTransport raises an exception if the transport\n        passed is not actually an SSL transport.\n        """'
newline|'\n'
name|'x'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'CertificateError'
op|','
nl|'\n'
name|'sslverify'
op|'.'
name|'Certificate'
op|'.'
name|'hostFromTransport'
op|','
nl|'\n'
name|'_NotSSLTransport'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'str'
op|'('
name|'x'
op|')'
op|'.'
name|'startswith'
op|'('
string|'"non-TLS"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_hostFromBlankSSLTransport
dedent|''
name|'def'
name|'test_hostFromBlankSSLTransport'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Verify that hostFromTransport raises an exception if the transport\n        passed is an SSL transport, but doesn\'t have a host certificate.\n        """'
newline|'\n'
name|'x'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'CertificateError'
op|','
nl|'\n'
name|'sslverify'
op|'.'
name|'Certificate'
op|'.'
name|'hostFromTransport'
op|','
nl|'\n'
name|'_MaybeSSLTransport'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'str'
op|'('
name|'x'
op|')'
op|'.'
name|'startswith'
op|'('
string|'"TLS"'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_hostFromSSLTransport
dedent|''
name|'def'
name|'test_hostFromSSLTransport'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Verify that hostFromTransport successfully creates the correct\n        certificate if passed a valid SSL transport.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'sslverify'
op|'.'
name|'Certificate'
op|'.'
name|'hostFromTransport'
op|'('
nl|'\n'
name|'_ActualSSLTransport'
op|'('
op|')'
op|')'
op|'.'
name|'serialNumber'
op|'('
op|')'
op|','
nl|'\n'
number|'12345'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_peerFromSSLTransport
dedent|''
name|'def'
name|'test_peerFromSSLTransport'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Verify that peerFromTransport successfully creates the correct\n        certificate if passed a valid SSL transport.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'sslverify'
op|'.'
name|'Certificate'
op|'.'
name|'peerFromTransport'
op|'('
nl|'\n'
name|'_ActualSSLTransport'
op|'('
op|')'
op|')'
op|'.'
name|'serialNumber'
op|'('
op|')'
op|','
nl|'\n'
number|'12346'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'interfaces'
op|'.'
name|'IReactorSSL'
op|'('
name|'reactor'
op|','
name|'None'
op|')'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'    '
name|'Constructors'
op|'.'
name|'skip'
op|'='
string|'"Reactor does not support SSL, cannot run SSL tests"'
newline|'\n'
dedent|''
endmarker|''
end_unit
