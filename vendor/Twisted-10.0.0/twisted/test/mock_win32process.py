begin_unit
comment|'# Copyright (c) 2007-2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nThis is a mock win32process module.\n\nThe purpose of this module is mock process creation for the PID test.\n\nCreateProcess(...) will spawn a process, and always return a PID of 42.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'win32process'
newline|'\n'
DECL|variable|GetExitCodeProcess
name|'GetExitCodeProcess'
op|'='
name|'win32process'
op|'.'
name|'GetExitCodeProcess'
newline|'\n'
DECL|variable|STARTUPINFO
name|'STARTUPINFO'
op|'='
name|'win32process'
op|'.'
name|'STARTUPINFO'
newline|'\n'
nl|'\n'
DECL|variable|STARTF_USESTDHANDLES
name|'STARTF_USESTDHANDLES'
op|'='
name|'win32process'
op|'.'
name|'STARTF_USESTDHANDLES'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|CreateProcess
name|'def'
name|'CreateProcess'
op|'('
name|'appName'
op|','
nl|'\n'
name|'cmdline'
op|','
nl|'\n'
name|'procSecurity'
op|','
nl|'\n'
name|'threadSecurity'
op|','
nl|'\n'
name|'inheritHandles'
op|','
nl|'\n'
name|'newEnvironment'
op|','
nl|'\n'
name|'env'
op|','
nl|'\n'
name|'workingDir'
op|','
nl|'\n'
name|'startupInfo'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    This function mocks the generated pid aspect of the win32.CreateProcess\n    function.\n      - the true win32process.CreateProcess is called\n      - return values are harvested in a tuple.\n      - all return values from createProcess are passed back to the calling\n        function except for the pid, the returned pid is hardcoded to 42\n    """'
newline|'\n'
nl|'\n'
name|'hProcess'
op|','
name|'hThread'
op|','
name|'dwPid'
op|','
name|'dwTid'
op|'='
name|'win32process'
op|'.'
name|'CreateProcess'
op|'('
nl|'\n'
name|'appName'
op|','
nl|'\n'
name|'cmdline'
op|','
nl|'\n'
name|'procSecurity'
op|','
nl|'\n'
name|'threadSecurity'
op|','
nl|'\n'
name|'inheritHandles'
op|','
nl|'\n'
name|'newEnvironment'
op|','
nl|'\n'
name|'env'
op|','
nl|'\n'
name|'workingDir'
op|','
nl|'\n'
name|'startupInfo'
op|')'
newline|'\n'
name|'dwPid'
op|'='
number|'42'
newline|'\n'
name|'return'
op|'('
name|'hProcess'
op|','
name|'hThread'
op|','
name|'dwPid'
op|','
name|'dwTid'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
