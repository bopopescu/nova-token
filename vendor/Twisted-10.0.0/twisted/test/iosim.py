begin_unit
comment|'# -*- test-case-name: twisted.test.test_amp.TLSTest -*-'
nl|'\n'
comment|'# Copyright (c) 2008-2009 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nUtilities and helpers for simulating a network\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'itertools'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'from'
name|'OpenSSL'
op|'.'
name|'SSL'
name|'import'
name|'Error'
name|'as'
name|'NativeOpenSSLError'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
op|','
name|'directlyProvides'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'failure'
name|'import'
name|'Failure'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'error'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'interfaces'
newline|'\n'
nl|'\n'
DECL|class|TLSNegotiation
name|'class'
name|'TLSNegotiation'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'obj'
op|','
name|'connectState'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'obj'
op|'='
name|'obj'
newline|'\n'
name|'self'
op|'.'
name|'connectState'
op|'='
name|'connectState'
newline|'\n'
name|'self'
op|'.'
name|'sent'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'readyToSend'
op|'='
name|'connectState'
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'TLSNegotiation(%r)'"
op|'%'
op|'('
name|'self'
op|'.'
name|'obj'
op|','
op|')'
newline|'\n'
nl|'\n'
DECL|member|pretendToVerify
dedent|''
name|'def'
name|'pretendToVerify'
op|'('
name|'self'
op|','
name|'other'
op|','
name|'tpt'
op|')'
op|':'
newline|'\n'
comment|'# Set the transport problems list here?  disconnections?'
nl|'\n'
comment|'# hmmmmm... need some negative path tests.'
nl|'\n'
nl|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'obj'
op|'.'
name|'iosimVerify'
op|'('
name|'other'
op|'.'
name|'obj'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'tpt'
op|'.'
name|'disconnectReason'
op|'='
name|'NativeOpenSSLError'
op|'('
op|')'
newline|'\n'
name|'tpt'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeTransport
dedent|''
dedent|''
dedent|''
name|'class'
name|'FakeTransport'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A wrapper around a file-like object to make it behave as a Transport.\n\n    This doesn\'t actually stream the file to the attached protocol,\n    and is thus useful mainly as a utility for debugging protocols.\n    """'
newline|'\n'
name|'implements'
op|'('
name|'interfaces'
op|'.'
name|'ITransport'
op|','
nl|'\n'
name|'interfaces'
op|'.'
name|'ITLSTransport'
op|')'
comment|'# ha ha not really'
newline|'\n'
nl|'\n'
DECL|variable|_nextserial
name|'_nextserial'
op|'='
name|'itertools'
op|'.'
name|'count'
op|'('
op|')'
op|'.'
name|'next'
newline|'\n'
DECL|variable|closed
name|'closed'
op|'='
number|'0'
newline|'\n'
DECL|variable|disconnecting
name|'disconnecting'
op|'='
number|'0'
newline|'\n'
DECL|variable|disconnected
name|'disconnected'
op|'='
number|'0'
newline|'\n'
DECL|variable|disconnectReason
name|'disconnectReason'
op|'='
name|'error'
op|'.'
name|'ConnectionDone'
op|'('
string|'"Connection done"'
op|')'
newline|'\n'
DECL|variable|producer
name|'producer'
op|'='
name|'None'
newline|'\n'
DECL|variable|streamingProducer
name|'streamingProducer'
op|'='
number|'0'
newline|'\n'
DECL|variable|tls
name|'tls'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stream'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'serial'
op|'='
name|'self'
op|'.'
name|'_nextserial'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'FakeTransport<%s,%s,%s>'"
op|'%'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'isServer'
name|'and'
string|"'S'"
name|'or'
string|"'C'"
op|','
name|'self'
op|'.'
name|'serial'
op|','
nl|'\n'
name|'self'
op|'.'
name|'protocol'
op|'.'
name|'__class__'
op|'.'
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
DECL|member|write
dedent|''
name|'def'
name|'write'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'tls'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'tlsbuf'
op|'.'
name|'append'
op|'('
name|'data'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stream'
op|'.'
name|'append'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_checkProducer
dedent|''
dedent|''
name|'def'
name|'_checkProducer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Cheating; this is called at "idle" times to allow producers to be'
nl|'\n'
comment|'# found and dealt with'
nl|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'producer'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'producer'
op|'.'
name|'resumeProducing'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|registerProducer
dedent|''
dedent|''
name|'def'
name|'registerProducer'
op|'('
name|'self'
op|','
name|'producer'
op|','
name|'streaming'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""From abstract.FileDescriptor\n        """'
newline|'\n'
name|'self'
op|'.'
name|'producer'
op|'='
name|'producer'
newline|'\n'
name|'self'
op|'.'
name|'streamingProducer'
op|'='
name|'streaming'
newline|'\n'
name|'if'
name|'not'
name|'streaming'
op|':'
newline|'\n'
indent|'            '
name|'producer'
op|'.'
name|'resumeProducing'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|unregisterProducer
dedent|''
dedent|''
name|'def'
name|'unregisterProducer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'producer'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|stopConsuming
dedent|''
name|'def'
name|'stopConsuming'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'unregisterProducer'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|writeSequence
dedent|''
name|'def'
name|'writeSequence'
op|'('
name|'self'
op|','
name|'iovec'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'write'
op|'('
string|'""'
op|'.'
name|'join'
op|'('
name|'iovec'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|loseConnection
dedent|''
name|'def'
name|'loseConnection'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'disconnecting'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|reportDisconnect
dedent|''
name|'def'
name|'reportDisconnect'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'tls'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
comment|'# We were in the middle of negotiating!  Must have been a TLS problem.'
nl|'\n'
indent|'            '
name|'err'
op|'='
name|'NativeOpenSSLError'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'err'
op|'='
name|'self'
op|'.'
name|'disconnectReason'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'protocol'
op|'.'
name|'connectionLost'
op|'('
name|'Failure'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getPeer
dedent|''
name|'def'
name|'getPeer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# XXX: According to ITransport, this should return an IAddress!'
nl|'\n'
indent|'        '
name|'return'
string|"'file'"
op|','
string|"'file'"
newline|'\n'
nl|'\n'
DECL|member|getHost
dedent|''
name|'def'
name|'getHost'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# XXX: According to ITransport, this should return an IAddress!'
nl|'\n'
indent|'        '
name|'return'
string|"'file'"
newline|'\n'
nl|'\n'
DECL|member|resumeProducing
dedent|''
name|'def'
name|'resumeProducing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Never sends data anyways'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|pauseProducing
dedent|''
name|'def'
name|'pauseProducing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Never sends data anyways'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|stopProducing
dedent|''
name|'def'
name|'stopProducing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|startTLS
dedent|''
name|'def'
name|'startTLS'
op|'('
name|'self'
op|','
name|'contextFactory'
op|','
name|'beNormal'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
comment|"# Nothing's using this feature yet, but startTLS has an undocumented"
nl|'\n'
comment|'# second argument which defaults to true; if set to False, servers will'
nl|'\n'
comment|'# behave like clients and clients will behave like servers.'
nl|'\n'
indent|'        '
name|'connectState'
op|'='
name|'self'
op|'.'
name|'isServer'
op|'^'
name|'beNormal'
newline|'\n'
name|'self'
op|'.'
name|'tls'
op|'='
name|'TLSNegotiation'
op|'('
name|'contextFactory'
op|','
name|'connectState'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tlsbuf'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|getOutBuffer
dedent|''
name|'def'
name|'getOutBuffer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'S'
op|'='
name|'self'
op|'.'
name|'stream'
newline|'\n'
name|'if'
name|'S'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stream'
op|'='
op|'['
op|']'
newline|'\n'
name|'return'
string|"''"
op|'.'
name|'join'
op|'('
name|'S'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'self'
op|'.'
name|'tls'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'tls'
op|'.'
name|'readyToSend'
op|':'
newline|'\n'
comment|'# Only _send_ the TLS negotiation "packet" if I\'m ready to.'
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'tls'
op|'.'
name|'sent'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'tls'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'None'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|bufferReceived
dedent|''
dedent|''
name|'def'
name|'bufferReceived'
op|'('
name|'self'
op|','
name|'buf'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'buf'
op|','
name|'TLSNegotiation'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'assert'
name|'self'
op|'.'
name|'tls'
name|'is'
name|'not'
name|'None'
comment|"# By the time you're receiving a"
newline|'\n'
comment|'# negotiation, you have to have called'
nl|'\n'
comment|'# startTLS already.'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'tls'
op|'.'
name|'sent'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'tls'
op|'.'
name|'pretendToVerify'
op|'('
name|'buf'
op|','
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tls'
op|'='
name|'None'
comment|"# we're done with the handshake if we've gotten"
newline|'\n'
comment|'# this far... although maybe it failed...?'
nl|'\n'
comment|'# TLS started!  Unbuffer...'
nl|'\n'
name|'b'
op|','
name|'self'
op|'.'
name|'tlsbuf'
op|'='
name|'self'
op|'.'
name|'tlsbuf'
op|','
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'writeSequence'
op|'('
name|'b'
op|')'
newline|'\n'
name|'directlyProvides'
op|'('
name|'self'
op|','
name|'interfaces'
op|'.'
name|'ISSLTransport'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|"# We haven't sent our own TLS negotiation: time to do that!"
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'tls'
op|'.'
name|'readyToSend'
op|'='
name|'True'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'protocol'
op|'.'
name|'dataReceived'
op|'('
name|'buf'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|makeFakeClient
dedent|''
dedent|''
dedent|''
name|'def'
name|'makeFakeClient'
op|'('
name|'c'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'ft'
op|'='
name|'FakeTransport'
op|'('
op|')'
newline|'\n'
name|'ft'
op|'.'
name|'isServer'
op|'='
name|'False'
newline|'\n'
name|'ft'
op|'.'
name|'protocol'
op|'='
name|'c'
newline|'\n'
name|'return'
name|'ft'
newline|'\n'
nl|'\n'
DECL|function|makeFakeServer
dedent|''
name|'def'
name|'makeFakeServer'
op|'('
name|'s'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'ft'
op|'='
name|'FakeTransport'
op|'('
op|')'
newline|'\n'
name|'ft'
op|'.'
name|'isServer'
op|'='
name|'True'
newline|'\n'
name|'ft'
op|'.'
name|'protocol'
op|'='
name|'s'
newline|'\n'
name|'return'
name|'ft'
newline|'\n'
nl|'\n'
DECL|class|IOPump
dedent|''
name|'class'
name|'IOPump'
op|':'
newline|'\n'
indent|'    '
string|'"""Utility to pump data between clients and servers for protocol testing.\n\n    Perhaps this is a utility worthy of being in protocol.py?\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'client'
op|','
name|'server'
op|','
name|'clientIO'
op|','
name|'serverIO'
op|','
name|'debug'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'client'
op|'='
name|'client'
newline|'\n'
name|'self'
op|'.'
name|'server'
op|'='
name|'server'
newline|'\n'
name|'self'
op|'.'
name|'clientIO'
op|'='
name|'clientIO'
newline|'\n'
name|'self'
op|'.'
name|'serverIO'
op|'='
name|'serverIO'
newline|'\n'
name|'self'
op|'.'
name|'debug'
op|'='
name|'debug'
newline|'\n'
nl|'\n'
DECL|member|flush
dedent|''
name|'def'
name|'flush'
op|'('
name|'self'
op|','
name|'debug'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Pump until there is no more input or output.\n\n        Returns whether any data was moved.\n        """'
newline|'\n'
name|'result'
op|'='
name|'False'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'range'
op|'('
number|'1000'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'pump'
op|'('
name|'debug'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'result'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'assert'
number|'0'
op|','
string|'"Too long"'
newline|'\n'
dedent|''
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|pump
dedent|''
name|'def'
name|'pump'
op|'('
name|'self'
op|','
name|'debug'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Move data back and forth.\n\n        Returns whether any data was moved.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'debug'
name|'or'
name|'debug'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'-- GLUG --'"
newline|'\n'
dedent|''
name|'sData'
op|'='
name|'self'
op|'.'
name|'serverIO'
op|'.'
name|'getOutBuffer'
op|'('
op|')'
newline|'\n'
name|'cData'
op|'='
name|'self'
op|'.'
name|'clientIO'
op|'.'
name|'getOutBuffer'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'clientIO'
op|'.'
name|'_checkProducer'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'serverIO'
op|'.'
name|'_checkProducer'
op|'('
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'debug'
name|'or'
name|'debug'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'.'"
newline|'\n'
comment|'# XXX slightly buggy in the face of incremental output'
nl|'\n'
name|'if'
name|'cData'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|"'C: '"
op|'+'
name|'repr'
op|'('
name|'cData'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'sData'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|"'S: '"
op|'+'
name|'repr'
op|'('
name|'sData'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'cData'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'serverIO'
op|'.'
name|'bufferReceived'
op|'('
name|'cData'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'sData'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'clientIO'
op|'.'
name|'bufferReceived'
op|'('
name|'sData'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'cData'
name|'or'
name|'sData'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'if'
op|'('
name|'self'
op|'.'
name|'serverIO'
op|'.'
name|'disconnecting'
name|'and'
nl|'\n'
name|'not'
name|'self'
op|'.'
name|'serverIO'
op|'.'
name|'disconnected'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'debug'
name|'or'
name|'debug'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|"'* C'"
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'serverIO'
op|'.'
name|'disconnected'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'clientIO'
op|'.'
name|'disconnecting'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'clientIO'
op|'.'
name|'reportDisconnect'
op|'('
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'clientIO'
op|'.'
name|'disconnecting'
name|'and'
name|'not'
name|'self'
op|'.'
name|'clientIO'
op|'.'
name|'disconnected'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'debug'
name|'or'
name|'debug'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|"'* S'"
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'clientIO'
op|'.'
name|'disconnected'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'serverIO'
op|'.'
name|'disconnecting'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'serverIO'
op|'.'
name|'reportDisconnect'
op|'('
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'return'
name|'False'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|connectedServerAndClient
dedent|''
dedent|''
name|'def'
name|'connectedServerAndClient'
op|'('
name|'ServerClass'
op|','
name|'ClientClass'
op|','
nl|'\n'
name|'clientTransportFactory'
op|'='
name|'makeFakeClient'
op|','
nl|'\n'
name|'serverTransportFactory'
op|'='
name|'makeFakeServer'
op|','
nl|'\n'
name|'debug'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Returns a 3-tuple: (client, server, pump)\n    """'
newline|'\n'
name|'c'
op|'='
name|'ClientClass'
op|'('
op|')'
newline|'\n'
name|'s'
op|'='
name|'ServerClass'
op|'('
op|')'
newline|'\n'
name|'cio'
op|'='
name|'clientTransportFactory'
op|'('
name|'c'
op|')'
newline|'\n'
name|'sio'
op|'='
name|'serverTransportFactory'
op|'('
name|'s'
op|')'
newline|'\n'
name|'c'
op|'.'
name|'makeConnection'
op|'('
name|'cio'
op|')'
newline|'\n'
name|'s'
op|'.'
name|'makeConnection'
op|'('
name|'sio'
op|')'
newline|'\n'
name|'pump'
op|'='
name|'IOPump'
op|'('
name|'c'
op|','
name|'s'
op|','
name|'cio'
op|','
name|'sio'
op|','
name|'debug'
op|')'
newline|'\n'
comment|'# kick off server greeting, etc'
nl|'\n'
name|'pump'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'return'
name|'c'
op|','
name|'s'
op|','
name|'pump'
newline|'\n'
dedent|''
endmarker|''
end_unit
