begin_unit
nl|'\n'
comment|'# Copyright (c) 2001-2004 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'protocols'
name|'import'
name|'loopback'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'protocols'
name|'import'
name|'basic'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'protocol'
op|','
name|'abstract'
newline|'\n'
nl|'\n'
name|'import'
name|'StringIO'
newline|'\n'
nl|'\n'
DECL|class|BufferingServer
name|'class'
name|'BufferingServer'
op|'('
name|'protocol'
op|'.'
name|'Protocol'
op|')'
op|':'
newline|'\n'
DECL|variable|buffer
indent|'    '
name|'buffer'
op|'='
string|"''"
newline|'\n'
DECL|member|dataReceived
name|'def'
name|'dataReceived'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'buffer'
op|'+='
name|'data'
newline|'\n'
nl|'\n'
DECL|class|FileSendingClient
dedent|''
dedent|''
name|'class'
name|'FileSendingClient'
op|'('
name|'protocol'
op|'.'
name|'Protocol'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'f'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'f'
op|'='
name|'f'
newline|'\n'
nl|'\n'
DECL|member|connectionMade
dedent|''
name|'def'
name|'connectionMade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'s'
op|'='
name|'basic'
op|'.'
name|'FileSender'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'s'
op|'.'
name|'beginFileTransfer'
op|'('
name|'self'
op|'.'
name|'f'
op|','
name|'self'
op|'.'
name|'transport'
op|','
name|'lambda'
name|'x'
op|':'
name|'x'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'r'
op|':'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|class|FileSenderTestCase
dedent|''
dedent|''
name|'class'
name|'FileSenderTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|testSendingFile
indent|'    '
name|'def'
name|'testSendingFile'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'testStr'
op|'='
string|"'xyz'"
op|'*'
number|'100'
op|'+'
string|"'abc'"
op|'*'
number|'100'
op|'+'
string|"'123'"
op|'*'
number|'100'
newline|'\n'
name|'s'
op|'='
name|'BufferingServer'
op|'('
op|')'
newline|'\n'
name|'c'
op|'='
name|'FileSendingClient'
op|'('
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
name|'testStr'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'d'
op|'='
name|'loopback'
op|'.'
name|'loopbackTCP'
op|'('
name|'s'
op|','
name|'c'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'x'
op|':'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'s'
op|'.'
name|'buffer'
op|','
name|'testStr'
op|')'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|testSendingEmptyFile
dedent|''
name|'def'
name|'testSendingEmptyFile'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fileSender'
op|'='
name|'basic'
op|'.'
name|'FileSender'
op|'('
op|')'
newline|'\n'
name|'consumer'
op|'='
name|'abstract'
op|'.'
name|'FileDescriptor'
op|'('
op|')'
newline|'\n'
name|'consumer'
op|'.'
name|'connected'
op|'='
number|'1'
newline|'\n'
name|'emptyFile'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
string|"''"
op|')'
newline|'\n'
nl|'\n'
name|'d'
op|'='
name|'fileSender'
op|'.'
name|'beginFileTransfer'
op|'('
name|'emptyFile'
op|','
name|'consumer'
op|','
name|'lambda'
name|'x'
op|':'
name|'x'
op|')'
newline|'\n'
nl|'\n'
comment|'# The producer will be immediately exhausted, and so immediately'
nl|'\n'
comment|'# unregistered'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'consumer'
op|'.'
name|'producer'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
comment|'# Which means the Deferred from FileSender should have been called'
nl|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'d'
op|'.'
name|'called'
op|','
nl|'\n'
string|"'producer unregistered with deferred being called'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
