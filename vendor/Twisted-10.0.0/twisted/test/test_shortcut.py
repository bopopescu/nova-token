begin_unit
string|'"""Test win32 shortcut script\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
name|'import'
name|'unittest'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'name'
op|'=='
string|"'nt'"
op|':'
newline|'\n'
nl|'\n'
DECL|variable|skipWindowsNopywin32
indent|'    '
name|'skipWindowsNopywin32'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'shortcut'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
DECL|variable|skipWindowsNopywin32
indent|'        '
name|'skipWindowsNopywin32'
op|'='
op|'('
string|'"On windows, twisted.python.shortcut is not "'
nl|'\n'
string|'"available in the absence of win32com."'
op|')'
newline|'\n'
dedent|''
name|'import'
name|'os'
op|'.'
name|'path'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
nl|'\n'
DECL|class|ShortcutTest
name|'class'
name|'ShortcutTest'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|testCreate
indent|'        '
name|'def'
name|'testCreate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'s1'
op|'='
name|'shortcut'
op|'.'
name|'Shortcut'
op|'('
string|'"test_shortcut.py"'
op|')'
newline|'\n'
name|'tempname'
op|'='
name|'self'
op|'.'
name|'mktemp'
op|'('
op|')'
op|'+'
string|"'.lnk'"
newline|'\n'
name|'s1'
op|'.'
name|'save'
op|'('
name|'tempname'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'tempname'
op|')'
op|')'
newline|'\n'
name|'sc'
op|'='
name|'shortcut'
op|'.'
name|'open'
op|'('
name|'tempname'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'sc'
op|'.'
name|'GetPath'
op|'('
number|'0'
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'endswith'
op|'('
string|"'test_shortcut.py'"
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'ShortcutTest'
op|'.'
name|'skip'
op|'='
name|'skipWindowsNopywin32'
newline|'\n'
dedent|''
endmarker|''
end_unit
