begin_unit
comment|'# Copyright (c) 2001-2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nTests for L{twisted.cred}, now with 30% more starch.\n"""'
newline|'\n'
nl|'\n'
nl|'\n'
name|'import'
name|'hmac'
newline|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
op|','
name|'Interface'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'cred'
name|'import'
name|'portal'
op|','
name|'checkers'
op|','
name|'credentials'
op|','
name|'error'
op|','
name|'util'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'components'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'defer'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'defer'
name|'import'
name|'deferredGenerator'
name|'as'
name|'dG'
op|','
name|'waitForDeferred'
name|'as'
name|'wFD'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'from'
name|'crypt'
name|'import'
name|'crypt'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
DECL|variable|crypt
indent|'    '
name|'crypt'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'from'
name|'twisted'
op|'.'
name|'cred'
op|'.'
name|'pamauth'
name|'import'
name|'callIntoPAM'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
DECL|variable|pamauth
indent|'    '
name|'pamauth'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'    '
name|'from'
name|'twisted'
op|'.'
name|'cred'
name|'import'
name|'pamauth'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DeprecatedUtilTests
dedent|''
name|'class'
name|'DeprecatedUtilTests'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Tests for the deprecation of the functions in L{twisted.cred.util}.\n    """'
newline|'\n'
DECL|member|test_respond
name|'def'
name|'test_respond'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        L{respond} applies a particular hashing to a challenge and a password\n        and returns the result.  It is deprecated and calling it emits a\n        deprecation warning.\n        """'
newline|'\n'
comment|'# Use some values and test against the known correct output.'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'util'
op|'.'
name|'respond'
op|'('
string|"'foo'"
op|','
string|"'bar'"
op|')'
op|'.'
name|'encode'
op|'('
string|"'hex'"
op|')'
op|','
nl|'\n'
string|"'ebe4a2902532198cafaa223fb5ac0f20'"
op|')'
newline|'\n'
nl|'\n'
name|'warnings'
op|'='
name|'self'
op|'.'
name|'flushWarnings'
op|'('
name|'offendingFunctions'
op|'='
op|'['
name|'self'
op|'.'
name|'test_respond'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'warnings'
op|'['
number|'0'
op|']'
op|'['
string|"'message'"
op|']'
op|','
nl|'\n'
string|"'twisted.cred.util.respond is deprecated since Twisted 8.3.'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'warnings'
op|'['
number|'0'
op|']'
op|'['
string|"'category'"
op|']'
op|','
nl|'\n'
name|'PendingDeprecationWarning'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'warnings'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_challenge
dedent|''
name|'def'
name|'test_challenge'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        L{challenge} returns a different string each time it is called.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'util'
op|'.'
name|'challenge'
op|'('
op|')'
op|','
name|'util'
op|'.'
name|'challenge'
op|'('
op|')'
op|')'
newline|'\n'
name|'warnings'
op|'='
name|'self'
op|'.'
name|'flushWarnings'
op|'('
name|'offendingFunctions'
op|'='
op|'['
name|'self'
op|'.'
name|'test_challenge'
op|']'
op|')'
newline|'\n'
name|'for'
name|'w'
name|'in'
name|'warnings'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'w'
op|'['
string|"'message'"
op|']'
op|','
nl|'\n'
string|"'twisted.cred.util.challenge is deprecated since Twisted 8.3.'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'w'
op|'['
string|"'category'"
op|']'
op|','
nl|'\n'
name|'PendingDeprecationWarning'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'warnings'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|ITestable
dedent|''
dedent|''
name|'class'
name|'ITestable'
op|'('
name|'Interface'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
DECL|class|TestAvatar
dedent|''
name|'class'
name|'TestAvatar'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'loggedIn'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'loggedOut'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|login
dedent|''
name|'def'
name|'login'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'assert'
name|'not'
name|'self'
op|'.'
name|'loggedIn'
newline|'\n'
name|'self'
op|'.'
name|'loggedIn'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|logout
dedent|''
name|'def'
name|'logout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'loggedOut'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|class|Testable
dedent|''
dedent|''
name|'class'
name|'Testable'
op|'('
name|'components'
op|'.'
name|'Adapter'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'implements'
op|'('
name|'ITestable'
op|')'
newline|'\n'
nl|'\n'
comment|'# components.Interface(TestAvatar).adaptWith(Testable, ITestable)'
nl|'\n'
nl|'\n'
dedent|''
name|'components'
op|'.'
name|'registerAdapter'
op|'('
name|'Testable'
op|','
name|'TestAvatar'
op|','
name|'ITestable'
op|')'
newline|'\n'
nl|'\n'
DECL|class|IDerivedCredentials
name|'class'
name|'IDerivedCredentials'
op|'('
name|'credentials'
op|'.'
name|'IUsernamePassword'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
DECL|class|DerivedCredentials
dedent|''
name|'class'
name|'DerivedCredentials'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'implements'
op|'('
name|'IDerivedCredentials'
op|','
name|'ITestable'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'username'
op|','
name|'password'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'username'
op|'='
name|'username'
newline|'\n'
name|'self'
op|'.'
name|'password'
op|'='
name|'password'
newline|'\n'
nl|'\n'
DECL|member|checkPassword
dedent|''
name|'def'
name|'checkPassword'
op|'('
name|'self'
op|','
name|'password'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'password'
op|'=='
name|'self'
op|'.'
name|'password'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestRealm
dedent|''
dedent|''
name|'class'
name|'TestRealm'
op|':'
newline|'\n'
indent|'    '
name|'implements'
op|'('
name|'portal'
op|'.'
name|'IRealm'
op|')'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'avatars'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|requestAvatar
dedent|''
name|'def'
name|'requestAvatar'
op|'('
name|'self'
op|','
name|'avatarId'
op|','
name|'mind'
op|','
op|'*'
name|'interfaces'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'avatars'
op|'.'
name|'has_key'
op|'('
name|'avatarId'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'avatar'
op|'='
name|'self'
op|'.'
name|'avatars'
op|'['
name|'avatarId'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'avatar'
op|'='
name|'TestAvatar'
op|'('
name|'avatarId'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'avatars'
op|'['
name|'avatarId'
op|']'
op|'='
name|'avatar'
newline|'\n'
dedent|''
name|'avatar'
op|'.'
name|'login'
op|'('
op|')'
newline|'\n'
name|'return'
op|'('
name|'interfaces'
op|'['
number|'0'
op|']'
op|','
name|'interfaces'
op|'['
number|'0'
op|']'
op|'('
name|'avatar'
op|')'
op|','
nl|'\n'
name|'avatar'
op|'.'
name|'logout'
op|')'
newline|'\n'
nl|'\n'
DECL|class|NewCredTest
dedent|''
dedent|''
name|'class'
name|'NewCredTest'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'self'
op|'.'
name|'realm'
op|'='
name|'TestRealm'
op|'('
op|')'
newline|'\n'
name|'p'
op|'='
name|'self'
op|'.'
name|'portal'
op|'='
name|'portal'
op|'.'
name|'Portal'
op|'('
name|'r'
op|')'
newline|'\n'
name|'up'
op|'='
name|'self'
op|'.'
name|'checker'
op|'='
name|'checkers'
op|'.'
name|'InMemoryUsernamePasswordDatabaseDontUse'
op|'('
op|')'
newline|'\n'
name|'up'
op|'.'
name|'addUser'
op|'('
string|'"bob"'
op|','
string|'"hello"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'registerChecker'
op|'('
name|'up'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testListCheckers
dedent|''
name|'def'
name|'testListCheckers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected'
op|'='
op|'['
name|'credentials'
op|'.'
name|'IUsernamePassword'
op|','
name|'credentials'
op|'.'
name|'IUsernameHashedPassword'
op|']'
newline|'\n'
name|'got'
op|'='
name|'self'
op|'.'
name|'portal'
op|'.'
name|'listCredentialsInterfaces'
op|'('
op|')'
newline|'\n'
name|'expected'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'got'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'got'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testBasicLogin
dedent|''
name|'def'
name|'testBasicLogin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'l'
op|'='
op|'['
op|']'
op|';'
name|'f'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'portal'
op|'.'
name|'login'
op|'('
name|'credentials'
op|'.'
name|'UsernamePassword'
op|'('
string|'"bob"'
op|','
string|'"hello"'
op|')'
op|','
nl|'\n'
name|'self'
op|','
name|'ITestable'
op|')'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'l'
op|'.'
name|'append'
op|')'
op|'.'
name|'addErrback'
op|'('
name|'f'
op|'.'
name|'append'
op|')'
newline|'\n'
name|'if'
name|'f'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'f'
op|'['
number|'0'
op|']'
newline|'\n'
comment|'# print l[0].getBriefTraceback()'
nl|'\n'
dedent|''
name|'iface'
op|','
name|'impl'
op|','
name|'logout'
op|'='
name|'l'
op|'['
number|'0'
op|']'
newline|'\n'
comment|'# whitebox'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'iface'
op|','
name|'ITestable'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'iface'
op|'.'
name|'providedBy'
op|'('
name|'impl'
op|')'
op|','
nl|'\n'
string|'"%s does not implement %s"'
op|'%'
op|'('
name|'impl'
op|','
name|'iface'
op|')'
op|')'
newline|'\n'
comment|'# greybox'
nl|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'impl'
op|'.'
name|'original'
op|'.'
name|'loggedIn'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'not'
name|'impl'
op|'.'
name|'original'
op|'.'
name|'loggedOut'
op|')'
newline|'\n'
name|'logout'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'impl'
op|'.'
name|'original'
op|'.'
name|'loggedOut'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_derivedInterface
dedent|''
name|'def'
name|'test_derivedInterface'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Login with credentials implementing an interface inheriting from an\n        interface registered with a checker (but not itself registered).\n        """'
newline|'\n'
name|'l'
op|'='
op|'['
op|']'
newline|'\n'
name|'f'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'portal'
op|'.'
name|'login'
op|'('
name|'DerivedCredentials'
op|'('
string|'"bob"'
op|','
string|'"hello"'
op|')'
op|','
name|'self'
op|','
name|'ITestable'
nl|'\n'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'l'
op|'.'
name|'append'
nl|'\n'
op|')'
op|'.'
name|'addErrback'
op|'('
name|'f'
op|'.'
name|'append'
op|')'
newline|'\n'
name|'if'
name|'f'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'f'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'iface'
op|','
name|'impl'
op|','
name|'logout'
op|'='
name|'l'
op|'['
number|'0'
op|']'
newline|'\n'
comment|'# whitebox'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'iface'
op|','
name|'ITestable'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'iface'
op|'.'
name|'providedBy'
op|'('
name|'impl'
op|')'
op|','
nl|'\n'
string|'"%s does not implement %s"'
op|'%'
op|'('
name|'impl'
op|','
name|'iface'
op|')'
op|')'
newline|'\n'
comment|'# greybox'
nl|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'impl'
op|'.'
name|'original'
op|'.'
name|'loggedIn'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'not'
name|'impl'
op|'.'
name|'original'
op|'.'
name|'loggedOut'
op|')'
newline|'\n'
name|'logout'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'impl'
op|'.'
name|'original'
op|'.'
name|'loggedOut'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testFailedLogin
dedent|''
name|'def'
name|'testFailedLogin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'l'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'portal'
op|'.'
name|'login'
op|'('
name|'credentials'
op|'.'
name|'UsernamePassword'
op|'('
string|'"bob"'
op|','
string|'"h3llo"'
op|')'
op|','
nl|'\n'
name|'self'
op|','
name|'ITestable'
op|')'
op|'.'
name|'addErrback'
op|'('
nl|'\n'
name|'lambda'
name|'x'
op|':'
name|'x'
op|'.'
name|'trap'
op|'('
name|'error'
op|'.'
name|'UnauthorizedLogin'
op|')'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'l'
op|'.'
name|'append'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'l'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnlessEqual'
op|'('
name|'error'
op|'.'
name|'UnauthorizedLogin'
op|','
name|'l'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testFailedLoginName
dedent|''
name|'def'
name|'testFailedLoginName'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'l'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'portal'
op|'.'
name|'login'
op|'('
name|'credentials'
op|'.'
name|'UsernamePassword'
op|'('
string|'"jay"'
op|','
string|'"hello"'
op|')'
op|','
nl|'\n'
name|'self'
op|','
name|'ITestable'
op|')'
op|'.'
name|'addErrback'
op|'('
nl|'\n'
name|'lambda'
name|'x'
op|':'
name|'x'
op|'.'
name|'trap'
op|'('
name|'error'
op|'.'
name|'UnauthorizedLogin'
op|')'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'l'
op|'.'
name|'append'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'l'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnlessEqual'
op|'('
name|'error'
op|'.'
name|'UnauthorizedLogin'
op|','
name|'l'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CramMD5CredentialsTestCase
dedent|''
dedent|''
name|'class'
name|'CramMD5CredentialsTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|testIdempotentChallenge
indent|'    '
name|'def'
name|'testIdempotentChallenge'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'c'
op|'='
name|'credentials'
op|'.'
name|'CramMD5Credentials'
op|'('
op|')'
newline|'\n'
name|'chal'
op|'='
name|'c'
op|'.'
name|'getChallenge'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'chal'
op|','
name|'c'
op|'.'
name|'getChallenge'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testCheckPassword
dedent|''
name|'def'
name|'testCheckPassword'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'c'
op|'='
name|'credentials'
op|'.'
name|'CramMD5Credentials'
op|'('
op|')'
newline|'\n'
name|'chal'
op|'='
name|'c'
op|'.'
name|'getChallenge'
op|'('
op|')'
newline|'\n'
name|'c'
op|'.'
name|'response'
op|'='
name|'hmac'
op|'.'
name|'HMAC'
op|'('
string|"'secret'"
op|','
name|'chal'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'c'
op|'.'
name|'checkPassword'
op|'('
string|"'secret'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testWrongPassword
dedent|''
name|'def'
name|'testWrongPassword'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'c'
op|'='
name|'credentials'
op|'.'
name|'CramMD5Credentials'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failIf'
op|'('
name|'c'
op|'.'
name|'checkPassword'
op|'('
string|"'secret'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|class|OnDiskDatabaseTestCase
dedent|''
dedent|''
name|'class'
name|'OnDiskDatabaseTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|users
indent|'    '
name|'users'
op|'='
op|'['
nl|'\n'
op|'('
string|"'user1'"
op|','
string|"'pass1'"
op|')'
op|','
nl|'\n'
op|'('
string|"'user2'"
op|','
string|"'pass2'"
op|')'
op|','
nl|'\n'
op|'('
string|"'user3'"
op|','
string|"'pass3'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|testUserLookup
name|'def'
name|'testUserLookup'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dbfile'
op|'='
name|'self'
op|'.'
name|'mktemp'
op|'('
op|')'
newline|'\n'
name|'db'
op|'='
name|'checkers'
op|'.'
name|'FilePasswordDB'
op|'('
name|'dbfile'
op|')'
newline|'\n'
name|'f'
op|'='
name|'file'
op|'('
name|'dbfile'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'for'
op|'('
name|'u'
op|','
name|'p'
op|')'
name|'in'
name|'self'
op|'.'
name|'users'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'.'
name|'write'
op|'('
string|"'%s:%s\\n'"
op|'%'
op|'('
name|'u'
op|','
name|'p'
op|')'
op|')'
newline|'\n'
dedent|''
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'for'
op|'('
name|'u'
op|','
name|'p'
op|')'
name|'in'
name|'self'
op|'.'
name|'users'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'failUnlessRaises'
op|'('
name|'KeyError'
op|','
name|'db'
op|'.'
name|'getUser'
op|','
name|'u'
op|'.'
name|'upper'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'db'
op|'.'
name|'getUser'
op|'('
name|'u'
op|')'
op|','
op|'('
name|'u'
op|','
name|'p'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testCaseInSensitivity
dedent|''
dedent|''
name|'def'
name|'testCaseInSensitivity'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dbfile'
op|'='
name|'self'
op|'.'
name|'mktemp'
op|'('
op|')'
newline|'\n'
name|'db'
op|'='
name|'checkers'
op|'.'
name|'FilePasswordDB'
op|'('
name|'dbfile'
op|','
name|'caseSensitive'
op|'='
number|'0'
op|')'
newline|'\n'
name|'f'
op|'='
name|'file'
op|'('
name|'dbfile'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'for'
op|'('
name|'u'
op|','
name|'p'
op|')'
name|'in'
name|'self'
op|'.'
name|'users'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'.'
name|'write'
op|'('
string|"'%s:%s\\n'"
op|'%'
op|'('
name|'u'
op|','
name|'p'
op|')'
op|')'
newline|'\n'
dedent|''
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'for'
op|'('
name|'u'
op|','
name|'p'
op|')'
name|'in'
name|'self'
op|'.'
name|'users'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'db'
op|'.'
name|'getUser'
op|'('
name|'u'
op|'.'
name|'upper'
op|'('
op|')'
op|')'
op|','
op|'('
name|'u'
op|','
name|'p'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testRequestAvatarId
dedent|''
dedent|''
name|'def'
name|'testRequestAvatarId'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dbfile'
op|'='
name|'self'
op|'.'
name|'mktemp'
op|'('
op|')'
newline|'\n'
name|'db'
op|'='
name|'checkers'
op|'.'
name|'FilePasswordDB'
op|'('
name|'dbfile'
op|','
name|'caseSensitive'
op|'='
number|'0'
op|')'
newline|'\n'
name|'f'
op|'='
name|'file'
op|'('
name|'dbfile'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'for'
op|'('
name|'u'
op|','
name|'p'
op|')'
name|'in'
name|'self'
op|'.'
name|'users'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'.'
name|'write'
op|'('
string|"'%s:%s\\n'"
op|'%'
op|'('
name|'u'
op|','
name|'p'
op|')'
op|')'
newline|'\n'
dedent|''
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'creds'
op|'='
op|'['
name|'credentials'
op|'.'
name|'UsernamePassword'
op|'('
name|'u'
op|','
name|'p'
op|')'
name|'for'
name|'u'
op|','
name|'p'
name|'in'
name|'self'
op|'.'
name|'users'
op|']'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'gatherResults'
op|'('
nl|'\n'
op|'['
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'db'
op|'.'
name|'requestAvatarId'
op|','
name|'c'
op|')'
name|'for'
name|'c'
name|'in'
name|'creds'
op|']'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'assertEquals'
op|','
op|'['
name|'u'
name|'for'
name|'u'
op|','
name|'p'
name|'in'
name|'self'
op|'.'
name|'users'
op|']'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|testRequestAvatarId_hashed
dedent|''
name|'def'
name|'testRequestAvatarId_hashed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dbfile'
op|'='
name|'self'
op|'.'
name|'mktemp'
op|'('
op|')'
newline|'\n'
name|'db'
op|'='
name|'checkers'
op|'.'
name|'FilePasswordDB'
op|'('
name|'dbfile'
op|','
name|'caseSensitive'
op|'='
number|'0'
op|')'
newline|'\n'
name|'f'
op|'='
name|'file'
op|'('
name|'dbfile'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'for'
op|'('
name|'u'
op|','
name|'p'
op|')'
name|'in'
name|'self'
op|'.'
name|'users'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'.'
name|'write'
op|'('
string|"'%s:%s\\n'"
op|'%'
op|'('
name|'u'
op|','
name|'p'
op|')'
op|')'
newline|'\n'
dedent|''
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'creds'
op|'='
op|'['
name|'credentials'
op|'.'
name|'UsernameHashedPassword'
op|'('
name|'u'
op|','
name|'p'
op|')'
name|'for'
name|'u'
op|','
name|'p'
name|'in'
name|'self'
op|'.'
name|'users'
op|']'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'gatherResults'
op|'('
nl|'\n'
op|'['
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'db'
op|'.'
name|'requestAvatarId'
op|','
name|'c'
op|')'
name|'for'
name|'c'
name|'in'
name|'creds'
op|']'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'assertEquals'
op|','
op|'['
name|'u'
name|'for'
name|'u'
op|','
name|'p'
name|'in'
name|'self'
op|'.'
name|'users'
op|']'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|HashedPasswordOnDiskDatabaseTestCase
dedent|''
dedent|''
name|'class'
name|'HashedPasswordOnDiskDatabaseTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|users
indent|'    '
name|'users'
op|'='
op|'['
nl|'\n'
op|'('
string|"'user1'"
op|','
string|"'pass1'"
op|')'
op|','
nl|'\n'
op|'('
string|"'user2'"
op|','
string|"'pass2'"
op|')'
op|','
nl|'\n'
op|'('
string|"'user3'"
op|','
string|"'pass3'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|hash
name|'def'
name|'hash'
op|'('
name|'self'
op|','
name|'u'
op|','
name|'p'
op|','
name|'s'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'crypt'
op|'('
name|'p'
op|','
name|'s'
op|')'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'dbfile'
op|'='
name|'self'
op|'.'
name|'mktemp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'db'
op|'='
name|'checkers'
op|'.'
name|'FilePasswordDB'
op|'('
name|'dbfile'
op|','
name|'hash'
op|'='
name|'self'
op|'.'
name|'hash'
op|')'
newline|'\n'
name|'f'
op|'='
name|'file'
op|'('
name|'dbfile'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'for'
op|'('
name|'u'
op|','
name|'p'
op|')'
name|'in'
name|'self'
op|'.'
name|'users'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'.'
name|'write'
op|'('
string|"'%s:%s\\n'"
op|'%'
op|'('
name|'u'
op|','
name|'crypt'
op|'('
name|'p'
op|','
name|'u'
op|'['
op|':'
number|'2'
op|']'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'r'
op|'='
name|'TestRealm'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'port'
op|'='
name|'portal'
op|'.'
name|'Portal'
op|'('
name|'r'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'port'
op|'.'
name|'registerChecker'
op|'('
name|'self'
op|'.'
name|'db'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testGoodCredentials
dedent|''
name|'def'
name|'testGoodCredentials'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'goodCreds'
op|'='
op|'['
name|'credentials'
op|'.'
name|'UsernamePassword'
op|'('
name|'u'
op|','
name|'p'
op|')'
name|'for'
name|'u'
op|','
name|'p'
name|'in'
name|'self'
op|'.'
name|'users'
op|']'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'gatherResults'
op|'('
op|'['
name|'self'
op|'.'
name|'db'
op|'.'
name|'requestAvatarId'
op|'('
name|'c'
op|')'
name|'for'
name|'c'
name|'in'
name|'goodCreds'
op|']'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'assertEquals'
op|','
op|'['
name|'u'
name|'for'
name|'u'
op|','
name|'p'
name|'in'
name|'self'
op|'.'
name|'users'
op|']'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|testGoodCredentials_login
dedent|''
name|'def'
name|'testGoodCredentials_login'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'goodCreds'
op|'='
op|'['
name|'credentials'
op|'.'
name|'UsernamePassword'
op|'('
name|'u'
op|','
name|'p'
op|')'
name|'for'
name|'u'
op|','
name|'p'
name|'in'
name|'self'
op|'.'
name|'users'
op|']'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'gatherResults'
op|'('
op|'['
name|'self'
op|'.'
name|'port'
op|'.'
name|'login'
op|'('
name|'c'
op|','
name|'None'
op|','
name|'ITestable'
op|')'
nl|'\n'
name|'for'
name|'c'
name|'in'
name|'goodCreds'
op|']'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'x'
op|':'
op|'['
name|'a'
op|'.'
name|'original'
op|'.'
name|'name'
name|'for'
name|'i'
op|','
name|'a'
op|','
name|'l'
name|'in'
name|'x'
op|']'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'assertEquals'
op|','
op|'['
name|'u'
name|'for'
name|'u'
op|','
name|'p'
name|'in'
name|'self'
op|'.'
name|'users'
op|']'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|testBadCredentials
dedent|''
name|'def'
name|'testBadCredentials'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'badCreds'
op|'='
op|'['
name|'credentials'
op|'.'
name|'UsernamePassword'
op|'('
name|'u'
op|','
string|"'wrong password'"
op|')'
nl|'\n'
name|'for'
name|'u'
op|','
name|'p'
name|'in'
name|'self'
op|'.'
name|'users'
op|']'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'DeferredList'
op|'('
op|'['
name|'self'
op|'.'
name|'port'
op|'.'
name|'login'
op|'('
name|'c'
op|','
name|'None'
op|','
name|'ITestable'
op|')'
nl|'\n'
name|'for'
name|'c'
name|'in'
name|'badCreds'
op|']'
op|','
name|'consumeErrors'
op|'='
name|'True'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_assertFailures'
op|','
name|'error'
op|'.'
name|'UnauthorizedLogin'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|testHashedCredentials
dedent|''
name|'def'
name|'testHashedCredentials'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'hashedCreds'
op|'='
op|'['
name|'credentials'
op|'.'
name|'UsernameHashedPassword'
op|'('
name|'u'
op|','
name|'crypt'
op|'('
name|'p'
op|','
name|'u'
op|'['
op|':'
number|'2'
op|']'
op|')'
op|')'
nl|'\n'
name|'for'
name|'u'
op|','
name|'p'
name|'in'
name|'self'
op|'.'
name|'users'
op|']'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'DeferredList'
op|'('
op|'['
name|'self'
op|'.'
name|'port'
op|'.'
name|'login'
op|'('
name|'c'
op|','
name|'None'
op|','
name|'ITestable'
op|')'
nl|'\n'
name|'for'
name|'c'
name|'in'
name|'hashedCreds'
op|']'
op|','
name|'consumeErrors'
op|'='
name|'True'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_assertFailures'
op|','
name|'error'
op|'.'
name|'UnhandledCredentials'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|_assertFailures
dedent|''
name|'def'
name|'_assertFailures'
op|'('
name|'self'
op|','
name|'failures'
op|','
op|'*'
name|'expectedFailures'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'flag'
op|','
name|'failure'
name|'in'
name|'failures'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'failUnlessEqual'
op|'('
name|'flag'
op|','
name|'defer'
op|'.'
name|'FAILURE'
op|')'
newline|'\n'
name|'failure'
op|'.'
name|'trap'
op|'('
op|'*'
name|'expectedFailures'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'crypt'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'skip'
op|'='
string|'"crypt module not available"'
newline|'\n'
nl|'\n'
DECL|class|PluggableAuthenticationModulesTest
dedent|''
dedent|''
name|'class'
name|'PluggableAuthenticationModulesTest'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Replace L{pamauth.callIntoPAM} with a dummy implementation with\n        easily-controlled behavior.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_oldCallIntoPAM'
op|'='
name|'pamauth'
op|'.'
name|'callIntoPAM'
newline|'\n'
name|'pamauth'
op|'.'
name|'callIntoPAM'
op|'='
name|'self'
op|'.'
name|'callIntoPAM'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Restore the original value of L{pamauth.callIntoPAM}.\n        """'
newline|'\n'
name|'pamauth'
op|'.'
name|'callIntoPAM'
op|'='
name|'self'
op|'.'
name|'_oldCallIntoPAM'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|callIntoPAM
dedent|''
name|'def'
name|'callIntoPAM'
op|'('
name|'self'
op|','
name|'service'
op|','
name|'user'
op|','
name|'conv'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'service'
op|'!='
string|"'Twisted'"
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'error'
op|'.'
name|'UnauthorizedLogin'
op|'('
string|"'bad service: %s'"
op|'%'
name|'service'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'user'
op|'!='
string|"'testuser'"
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'error'
op|'.'
name|'UnauthorizedLogin'
op|'('
string|"'bad username: %s'"
op|'%'
name|'user'
op|')'
newline|'\n'
dedent|''
name|'questions'
op|'='
op|'['
nl|'\n'
op|'('
number|'1'
op|','
string|'"Password"'
op|')'
op|','
nl|'\n'
op|'('
number|'2'
op|','
string|'"Message w/ Input"'
op|')'
op|','
nl|'\n'
op|'('
number|'3'
op|','
string|'"Message w/o Input"'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'replies'
op|'='
name|'conv'
op|'('
name|'questions'
op|')'
newline|'\n'
name|'if'
name|'replies'
op|'!='
op|'['
nl|'\n'
op|'('
string|'"password"'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
string|'"entry"'
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|'('
string|'""'
op|','
number|'0'
op|')'
nl|'\n'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'error'
op|'.'
name|'UnauthorizedLogin'
op|'('
string|"'bad conversion: %s'"
op|'%'
name|'repr'
op|'('
name|'replies'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
number|'1'
newline|'\n'
nl|'\n'
DECL|member|_makeConv
dedent|''
name|'def'
name|'_makeConv'
op|'('
name|'self'
op|','
name|'d'
op|')'
op|':'
newline|'\n'
DECL|function|conv
indent|'        '
name|'def'
name|'conv'
op|'('
name|'questions'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
op|'['
op|'('
name|'d'
op|'['
name|'t'
op|']'
op|','
number|'0'
op|')'
name|'for'
name|'t'
op|','
name|'q'
name|'in'
name|'questions'
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'conv'
newline|'\n'
nl|'\n'
DECL|member|testRequestAvatarId
dedent|''
name|'def'
name|'testRequestAvatarId'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'='
name|'checkers'
op|'.'
name|'PluggableAuthenticationModulesChecker'
op|'('
op|')'
newline|'\n'
name|'conv'
op|'='
name|'self'
op|'.'
name|'_makeConv'
op|'('
op|'{'
number|'1'
op|':'
string|"'password'"
op|','
number|'2'
op|':'
string|"'entry'"
op|','
number|'3'
op|':'
string|"''"
op|'}'
op|')'
newline|'\n'
name|'creds'
op|'='
name|'credentials'
op|'.'
name|'PluggableAuthenticationModules'
op|'('
string|"'testuser'"
op|','
nl|'\n'
name|'conv'
op|')'
newline|'\n'
name|'d'
op|'='
name|'db'
op|'.'
name|'requestAvatarId'
op|'('
name|'creds'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'assertEquals'
op|','
string|"'testuser'"
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|testBadCredentials
dedent|''
name|'def'
name|'testBadCredentials'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'='
name|'checkers'
op|'.'
name|'PluggableAuthenticationModulesChecker'
op|'('
op|')'
newline|'\n'
name|'conv'
op|'='
name|'self'
op|'.'
name|'_makeConv'
op|'('
op|'{'
number|'1'
op|':'
string|"''"
op|','
number|'2'
op|':'
string|"''"
op|','
number|'3'
op|':'
string|"''"
op|'}'
op|')'
newline|'\n'
name|'creds'
op|'='
name|'credentials'
op|'.'
name|'PluggableAuthenticationModules'
op|'('
string|"'testuser'"
op|','
nl|'\n'
name|'conv'
op|')'
newline|'\n'
name|'d'
op|'='
name|'db'
op|'.'
name|'requestAvatarId'
op|'('
name|'creds'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFailure'
op|'('
name|'d'
op|','
name|'error'
op|'.'
name|'UnauthorizedLogin'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|testBadUsername
dedent|''
name|'def'
name|'testBadUsername'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db'
op|'='
name|'checkers'
op|'.'
name|'PluggableAuthenticationModulesChecker'
op|'('
op|')'
newline|'\n'
name|'conv'
op|'='
name|'self'
op|'.'
name|'_makeConv'
op|'('
op|'{'
number|'1'
op|':'
string|"'password'"
op|','
number|'2'
op|':'
string|"'entry'"
op|','
number|'3'
op|':'
string|"''"
op|'}'
op|')'
newline|'\n'
name|'creds'
op|'='
name|'credentials'
op|'.'
name|'PluggableAuthenticationModules'
op|'('
string|"'baduser'"
op|','
nl|'\n'
name|'conv'
op|')'
newline|'\n'
name|'d'
op|'='
name|'db'
op|'.'
name|'requestAvatarId'
op|'('
name|'creds'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFailure'
op|'('
name|'d'
op|','
name|'error'
op|'.'
name|'UnauthorizedLogin'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'pamauth'
op|':'
newline|'\n'
indent|'        '
name|'skip'
op|'='
string|'"Can\'t run without PyPAM"'
newline|'\n'
nl|'\n'
DECL|class|CheckersMixin
dedent|''
dedent|''
name|'class'
name|'CheckersMixin'
op|':'
newline|'\n'
DECL|member|testPositive
indent|'    '
name|'def'
name|'testPositive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'chk'
name|'in'
name|'self'
op|'.'
name|'getCheckers'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
op|'('
name|'cred'
op|','
name|'avatarId'
op|')'
name|'in'
name|'self'
op|'.'
name|'getGoodCredentials'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'r'
op|'='
name|'wFD'
op|'('
name|'chk'
op|'.'
name|'requestAvatarId'
op|'('
name|'cred'
op|')'
op|')'
newline|'\n'
name|'yield'
name|'r'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'r'
op|'.'
name|'getResult'
op|'('
op|')'
op|','
name|'avatarId'
op|')'
newline|'\n'
DECL|variable|testPositive
dedent|''
dedent|''
dedent|''
name|'testPositive'
op|'='
name|'dG'
op|'('
name|'testPositive'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testNegative
name|'def'
name|'testNegative'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'chk'
name|'in'
name|'self'
op|'.'
name|'getCheckers'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'cred'
name|'in'
name|'self'
op|'.'
name|'getBadCredentials'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'r'
op|'='
name|'wFD'
op|'('
name|'chk'
op|'.'
name|'requestAvatarId'
op|'('
name|'cred'
op|')'
op|')'
newline|'\n'
name|'yield'
name|'r'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'error'
op|'.'
name|'UnauthorizedLogin'
op|','
name|'r'
op|'.'
name|'getResult'
op|')'
newline|'\n'
DECL|variable|testNegative
dedent|''
dedent|''
dedent|''
name|'testNegative'
op|'='
name|'dG'
op|'('
name|'testNegative'
op|')'
newline|'\n'
nl|'\n'
DECL|class|HashlessFilePasswordDBMixin
dedent|''
name|'class'
name|'HashlessFilePasswordDBMixin'
op|':'
newline|'\n'
DECL|variable|credClass
indent|'    '
name|'credClass'
op|'='
name|'credentials'
op|'.'
name|'UsernamePassword'
newline|'\n'
DECL|variable|diskHash
name|'diskHash'
op|'='
name|'None'
newline|'\n'
DECL|variable|networkHash
name|'networkHash'
op|'='
name|'staticmethod'
op|'('
name|'lambda'
name|'x'
op|':'
name|'x'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|_validCredentials
name|'_validCredentials'
op|'='
op|'['
nl|'\n'
op|'('
string|"'user1'"
op|','
string|"'password1'"
op|')'
op|','
nl|'\n'
op|'('
string|"'user2'"
op|','
string|"'password2'"
op|')'
op|','
nl|'\n'
op|'('
string|"'user3'"
op|','
string|"'password3'"
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|member|getGoodCredentials
name|'def'
name|'getGoodCredentials'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'u'
op|','
name|'p'
name|'in'
name|'self'
op|'.'
name|'_validCredentials'
op|':'
newline|'\n'
indent|'            '
name|'yield'
name|'self'
op|'.'
name|'credClass'
op|'('
name|'u'
op|','
name|'self'
op|'.'
name|'networkHash'
op|'('
name|'p'
op|')'
op|')'
op|','
name|'u'
newline|'\n'
nl|'\n'
DECL|member|getBadCredentials
dedent|''
dedent|''
name|'def'
name|'getBadCredentials'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'u'
op|','
name|'p'
name|'in'
op|'['
op|'('
string|"'user1'"
op|','
string|"'password3'"
op|')'
op|','
nl|'\n'
op|'('
string|"'user2'"
op|','
string|"'password1'"
op|')'
op|','
nl|'\n'
op|'('
string|"'bloof'"
op|','
string|"'blarf'"
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'yield'
name|'self'
op|'.'
name|'credClass'
op|'('
name|'u'
op|','
name|'self'
op|'.'
name|'networkHash'
op|'('
name|'p'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getCheckers
dedent|''
dedent|''
name|'def'
name|'getCheckers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'diskHash'
op|'='
name|'self'
op|'.'
name|'diskHash'
name|'or'
op|'('
name|'lambda'
name|'x'
op|':'
name|'x'
op|')'
newline|'\n'
name|'hashCheck'
op|'='
name|'self'
op|'.'
name|'diskHash'
name|'and'
op|'('
name|'lambda'
name|'username'
op|','
name|'password'
op|','
name|'stored'
op|':'
name|'self'
op|'.'
name|'diskHash'
op|'('
name|'password'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'cache'
name|'in'
name|'True'
op|','
name|'False'
op|':'
newline|'\n'
indent|'            '
name|'fn'
op|'='
name|'self'
op|'.'
name|'mktemp'
op|'('
op|')'
newline|'\n'
name|'fObj'
op|'='
name|'file'
op|'('
name|'fn'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'for'
name|'u'
op|','
name|'p'
name|'in'
name|'self'
op|'.'
name|'_validCredentials'
op|':'
newline|'\n'
indent|'                '
name|'fObj'
op|'.'
name|'write'
op|'('
string|"'%s:%s\\n'"
op|'%'
op|'('
name|'u'
op|','
name|'diskHash'
op|'('
name|'p'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'fObj'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'yield'
name|'checkers'
op|'.'
name|'FilePasswordDB'
op|'('
name|'fn'
op|','
name|'cache'
op|'='
name|'cache'
op|','
name|'hash'
op|'='
name|'hashCheck'
op|')'
newline|'\n'
nl|'\n'
name|'fn'
op|'='
name|'self'
op|'.'
name|'mktemp'
op|'('
op|')'
newline|'\n'
name|'fObj'
op|'='
name|'file'
op|'('
name|'fn'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'for'
name|'u'
op|','
name|'p'
name|'in'
name|'self'
op|'.'
name|'_validCredentials'
op|':'
newline|'\n'
indent|'                '
name|'fObj'
op|'.'
name|'write'
op|'('
string|"'%s dingle dongle %s\\n'"
op|'%'
op|'('
name|'diskHash'
op|'('
name|'p'
op|')'
op|','
name|'u'
op|')'
op|')'
newline|'\n'
dedent|''
name|'fObj'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'yield'
name|'checkers'
op|'.'
name|'FilePasswordDB'
op|'('
name|'fn'
op|','
string|"' '"
op|','
number|'3'
op|','
number|'0'
op|','
name|'cache'
op|'='
name|'cache'
op|','
name|'hash'
op|'='
name|'hashCheck'
op|')'
newline|'\n'
nl|'\n'
name|'fn'
op|'='
name|'self'
op|'.'
name|'mktemp'
op|'('
op|')'
newline|'\n'
name|'fObj'
op|'='
name|'file'
op|'('
name|'fn'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'for'
name|'u'
op|','
name|'p'
name|'in'
name|'self'
op|'.'
name|'_validCredentials'
op|':'
newline|'\n'
indent|'                '
name|'fObj'
op|'.'
name|'write'
op|'('
string|"'zip,zap,%s,zup,%s\\n'"
op|'%'
op|'('
name|'u'
op|'.'
name|'title'
op|'('
op|')'
op|','
name|'diskHash'
op|'('
name|'p'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'fObj'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'yield'
name|'checkers'
op|'.'
name|'FilePasswordDB'
op|'('
name|'fn'
op|','
string|"','"
op|','
number|'2'
op|','
number|'4'
op|','
name|'False'
op|','
name|'cache'
op|'='
name|'cache'
op|','
name|'hash'
op|'='
name|'hashCheck'
op|')'
newline|'\n'
nl|'\n'
DECL|class|LocallyHashedFilePasswordDBMixin
dedent|''
dedent|''
dedent|''
name|'class'
name|'LocallyHashedFilePasswordDBMixin'
op|'('
name|'HashlessFilePasswordDBMixin'
op|')'
op|':'
newline|'\n'
DECL|variable|diskHash
indent|'    '
name|'diskHash'
op|'='
name|'staticmethod'
op|'('
name|'lambda'
name|'x'
op|':'
name|'x'
op|'.'
name|'encode'
op|'('
string|"'hex'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|class|NetworkHashedFilePasswordDBMixin
dedent|''
name|'class'
name|'NetworkHashedFilePasswordDBMixin'
op|'('
name|'HashlessFilePasswordDBMixin'
op|')'
op|':'
newline|'\n'
DECL|variable|networkHash
indent|'    '
name|'networkHash'
op|'='
name|'staticmethod'
op|'('
name|'lambda'
name|'x'
op|':'
name|'x'
op|'.'
name|'encode'
op|'('
string|"'hex'"
op|')'
op|')'
newline|'\n'
DECL|class|credClass
name|'class'
name|'credClass'
op|'('
name|'credentials'
op|'.'
name|'UsernameHashedPassword'
op|')'
op|':'
newline|'\n'
DECL|member|checkPassword
indent|'        '
name|'def'
name|'checkPassword'
op|'('
name|'self'
op|','
name|'password'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'hashed'
op|'.'
name|'decode'
op|'('
string|"'hex'"
op|')'
op|'=='
name|'password'
newline|'\n'
nl|'\n'
DECL|class|HashlessFilePasswordDBCheckerTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'HashlessFilePasswordDBCheckerTestCase'
op|'('
name|'HashlessFilePasswordDBMixin'
op|','
name|'CheckersMixin'
op|','
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
DECL|class|LocallyHashedFilePasswordDBCheckerTestCase
dedent|''
name|'class'
name|'LocallyHashedFilePasswordDBCheckerTestCase'
op|'('
name|'LocallyHashedFilePasswordDBMixin'
op|','
name|'CheckersMixin'
op|','
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
DECL|class|NetworkHashedFilePasswordDBCheckerTestCase
dedent|''
name|'class'
name|'NetworkHashedFilePasswordDBCheckerTestCase'
op|'('
name|'NetworkHashedFilePasswordDBMixin'
op|','
name|'CheckersMixin'
op|','
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
endmarker|''
end_unit
