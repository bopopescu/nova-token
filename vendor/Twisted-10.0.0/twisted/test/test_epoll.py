begin_unit
comment|'# Copyright (c) 2001-2006 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nTests for epoll wrapper.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'socket'
op|','
name|'errno'
op|','
name|'time'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'util'
name|'import'
name|'untilConcludes'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'_epoll'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
DECL|variable|_epoll
indent|'    '
name|'_epoll'
op|'='
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|EPoll
dedent|''
name|'class'
name|'EPoll'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Tests for the low-level epoll bindings.\n    """'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create a listening server port and a list with which to keep track\n        of created sockets.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'serverSocket'
op|'='
name|'socket'
op|'.'
name|'socket'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'serverSocket'
op|'.'
name|'bind'
op|'('
op|'('
string|"'127.0.0.1'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'serverSocket'
op|'.'
name|'listen'
op|'('
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connections'
op|'='
op|'['
name|'self'
op|'.'
name|'serverSocket'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Close any sockets which were opened by the test.\n        """'
newline|'\n'
name|'for'
name|'skt'
name|'in'
name|'self'
op|'.'
name|'connections'
op|':'
newline|'\n'
indent|'            '
name|'skt'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_connectedPair
dedent|''
dedent|''
name|'def'
name|'_connectedPair'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Return the two sockets which make up a new TCP connection.\n        """'
newline|'\n'
name|'client'
op|'='
name|'socket'
op|'.'
name|'socket'
op|'('
op|')'
newline|'\n'
name|'client'
op|'.'
name|'setblocking'
op|'('
name|'False'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'client'
op|'.'
name|'connect'
op|'('
op|'('
string|"'127.0.0.1'"
op|','
name|'self'
op|'.'
name|'serverSocket'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'socket'
op|'.'
name|'error'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'e'
op|'.'
name|'args'
op|'['
number|'0'
op|']'
op|','
name|'errno'
op|'.'
name|'EINPROGRESS'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'unittest'
op|'.'
name|'FailTest'
op|'('
string|'"Connect should have raised EINPROGRESS"'
op|')'
newline|'\n'
dedent|''
name|'server'
op|','
name|'addr'
op|'='
name|'self'
op|'.'
name|'serverSocket'
op|'.'
name|'accept'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'connections'
op|'.'
name|'extend'
op|'('
op|'('
name|'client'
op|','
name|'server'
op|')'
op|')'
newline|'\n'
name|'return'
name|'client'
op|','
name|'server'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_create
dedent|''
name|'def'
name|'test_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test the creation of an epoll object.\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'p'
op|'='
name|'_epoll'
op|'.'
name|'epoll'
op|'('
number|'16'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'unittest'
op|'.'
name|'FailTest'
op|'('
name|'str'
op|'('
name|'e'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'p'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_badCreate
dedent|''
dedent|''
name|'def'
name|'test_badCreate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test that attempting to create an epoll object with some random\n        objects raises a TypeError.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'TypeError'
op|','
name|'_epoll'
op|'.'
name|'epoll'
op|','
number|'1'
op|','
number|'2'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'TypeError'
op|','
name|'_epoll'
op|'.'
name|'epoll'
op|','
string|"'foo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'TypeError'
op|','
name|'_epoll'
op|'.'
name|'epoll'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'TypeError'
op|','
name|'_epoll'
op|'.'
name|'epoll'
op|','
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'TypeError'
op|','
name|'_epoll'
op|'.'
name|'epoll'
op|','
op|'['
string|"'foo'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'TypeError'
op|','
name|'_epoll'
op|'.'
name|'epoll'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'TypeError'
op|','
name|'_epoll'
op|'.'
name|'epoll'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_add
dedent|''
name|'def'
name|'test_add'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test adding a socket to an epoll object.\n        """'
newline|'\n'
name|'server'
op|','
name|'client'
op|'='
name|'self'
op|'.'
name|'_connectedPair'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'p'
op|'='
name|'_epoll'
op|'.'
name|'epoll'
op|'('
number|'2'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'p'
op|'.'
name|'_control'
op|'('
name|'_epoll'
op|'.'
name|'CTL_ADD'
op|','
name|'server'
op|'.'
name|'fileno'
op|'('
op|')'
op|','
name|'_epoll'
op|'.'
name|'IN'
op|'|'
name|'_epoll'
op|'.'
name|'OUT'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'_control'
op|'('
name|'_epoll'
op|'.'
name|'CTL_ADD'
op|','
name|'client'
op|'.'
name|'fileno'
op|'('
op|')'
op|','
name|'_epoll'
op|'.'
name|'IN'
op|'|'
name|'_epoll'
op|'.'
name|'OUT'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'p'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_controlAndWait
dedent|''
dedent|''
name|'def'
name|'test_controlAndWait'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test waiting on an epoll object which has had some sockets added to\n        it.\n        """'
newline|'\n'
name|'client'
op|','
name|'server'
op|'='
name|'self'
op|'.'
name|'_connectedPair'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'p'
op|'='
name|'_epoll'
op|'.'
name|'epoll'
op|'('
number|'16'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'_control'
op|'('
name|'_epoll'
op|'.'
name|'CTL_ADD'
op|','
name|'client'
op|'.'
name|'fileno'
op|'('
op|')'
op|','
name|'_epoll'
op|'.'
name|'IN'
op|'|'
name|'_epoll'
op|'.'
name|'OUT'
op|'|'
nl|'\n'
name|'_epoll'
op|'.'
name|'ET'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'_control'
op|'('
name|'_epoll'
op|'.'
name|'CTL_ADD'
op|','
name|'server'
op|'.'
name|'fileno'
op|'('
op|')'
op|','
name|'_epoll'
op|'.'
name|'IN'
op|'|'
name|'_epoll'
op|'.'
name|'OUT'
op|'|'
nl|'\n'
name|'_epoll'
op|'.'
name|'ET'
op|')'
newline|'\n'
nl|'\n'
name|'now'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'events'
op|'='
name|'untilConcludes'
op|'('
name|'p'
op|'.'
name|'wait'
op|','
number|'4'
op|','
number|'1000'
op|')'
newline|'\n'
name|'then'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failIf'
op|'('
name|'then'
op|'-'
name|'now'
op|'>'
number|'0.01'
op|')'
newline|'\n'
nl|'\n'
name|'events'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
op|'('
name|'client'
op|'.'
name|'fileno'
op|'('
op|')'
op|','
name|'_epoll'
op|'.'
name|'OUT'
op|')'
op|','
nl|'\n'
op|'('
name|'server'
op|'.'
name|'fileno'
op|'('
op|')'
op|','
name|'_epoll'
op|'.'
name|'OUT'
op|')'
op|']'
newline|'\n'
name|'expected'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'events'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
name|'now'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'events'
op|'='
name|'untilConcludes'
op|'('
name|'p'
op|'.'
name|'wait'
op|','
number|'4'
op|','
number|'200'
op|')'
newline|'\n'
name|'then'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'then'
op|'-'
name|'now'
op|'>'
number|'0.1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failIf'
op|'('
name|'events'
op|')'
newline|'\n'
nl|'\n'
name|'client'
op|'.'
name|'send'
op|'('
string|'"Hello!"'
op|')'
newline|'\n'
name|'server'
op|'.'
name|'send'
op|'('
string|'"world!!!"'
op|')'
newline|'\n'
nl|'\n'
name|'now'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'events'
op|'='
name|'untilConcludes'
op|'('
name|'p'
op|'.'
name|'wait'
op|','
number|'4'
op|','
number|'1000'
op|')'
newline|'\n'
name|'then'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failIf'
op|'('
name|'then'
op|'-'
name|'now'
op|'>'
number|'0.01'
op|')'
newline|'\n'
nl|'\n'
name|'events'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
op|'('
name|'client'
op|'.'
name|'fileno'
op|'('
op|')'
op|','
name|'_epoll'
op|'.'
name|'IN'
op|'|'
name|'_epoll'
op|'.'
name|'OUT'
op|')'
op|','
nl|'\n'
op|'('
name|'server'
op|'.'
name|'fileno'
op|'('
op|')'
op|','
name|'_epoll'
op|'.'
name|'IN'
op|'|'
name|'_epoll'
op|'.'
name|'OUT'
op|')'
op|']'
newline|'\n'
name|'expected'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'events'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'_epoll'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'    '
name|'EPoll'
op|'.'
name|'skip'
op|'='
string|'"_epoll module unavailable"'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'    '
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'e'
op|'='
name|'_epoll'
op|'.'
name|'epoll'
op|'('
number|'16'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'IOError'
op|','
name|'exc'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'exc'
op|'.'
name|'errno'
op|'=='
name|'errno'
op|'.'
name|'ENOSYS'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'exc'
newline|'\n'
name|'EPoll'
op|'.'
name|'skip'
op|'='
string|'"epoll support missing from platform"'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'e'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'del'
name|'e'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
