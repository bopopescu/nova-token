begin_unit
name|'from'
name|'cStringIO'
name|'import'
name|'StringIO'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'protocol'
name|'import'
name|'FileWrapper'
newline|'\n'
nl|'\n'
DECL|class|IOPump
name|'class'
name|'IOPump'
op|':'
newline|'\n'
indent|'    '
string|'"""Utility to pump data between clients and servers for protocol testing.\n\n    Perhaps this is a utility worthy of being in protocol.py?\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'client'
op|','
name|'server'
op|','
name|'clientIO'
op|','
name|'serverIO'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'client'
op|'='
name|'client'
newline|'\n'
name|'self'
op|'.'
name|'server'
op|'='
name|'server'
newline|'\n'
name|'self'
op|'.'
name|'clientIO'
op|'='
name|'clientIO'
newline|'\n'
name|'self'
op|'.'
name|'serverIO'
op|'='
name|'serverIO'
newline|'\n'
nl|'\n'
DECL|member|flush
dedent|''
name|'def'
name|'flush'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Pump until there is no more input or output."'
newline|'\n'
name|'while'
name|'self'
op|'.'
name|'pump'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|pump
dedent|''
dedent|''
name|'def'
name|'pump'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Move data back and forth.\n\n        Returns whether any data was moved.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'clientIO'
op|'.'
name|'seek'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'serverIO'
op|'.'
name|'seek'
op|'('
number|'0'
op|')'
newline|'\n'
name|'cData'
op|'='
name|'self'
op|'.'
name|'clientIO'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'sData'
op|'='
name|'self'
op|'.'
name|'serverIO'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'clientIO'
op|'.'
name|'seek'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'serverIO'
op|'.'
name|'seek'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'clientIO'
op|'.'
name|'truncate'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'serverIO'
op|'.'
name|'truncate'
op|'('
op|')'
newline|'\n'
name|'for'
name|'byte'
name|'in'
name|'cData'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'server'
op|'.'
name|'dataReceived'
op|'('
name|'byte'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'byte'
name|'in'
name|'sData'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'client'
op|'.'
name|'dataReceived'
op|'('
name|'byte'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'cData'
name|'or'
name|'sData'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|returnConnected
dedent|''
dedent|''
dedent|''
name|'def'
name|'returnConnected'
op|'('
name|'server'
op|','
name|'client'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Take two Protocol instances and connect them.\n    """'
newline|'\n'
name|'cio'
op|'='
name|'StringIO'
op|'('
op|')'
newline|'\n'
name|'sio'
op|'='
name|'StringIO'
op|'('
op|')'
newline|'\n'
name|'client'
op|'.'
name|'makeConnection'
op|'('
name|'FileWrapper'
op|'('
name|'cio'
op|')'
op|')'
newline|'\n'
name|'server'
op|'.'
name|'makeConnection'
op|'('
name|'FileWrapper'
op|'('
name|'sio'
op|')'
op|')'
newline|'\n'
name|'pump'
op|'='
name|'IOPump'
op|'('
name|'client'
op|','
name|'server'
op|','
name|'cio'
op|','
name|'sio'
op|')'
newline|'\n'
comment|'# Challenge-response authentication:'
nl|'\n'
name|'pump'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
comment|'# Uh...'
nl|'\n'
name|'pump'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'return'
name|'pump'
newline|'\n'
dedent|''
endmarker|''
end_unit
