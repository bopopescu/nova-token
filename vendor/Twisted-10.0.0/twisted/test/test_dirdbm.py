begin_unit
comment|'# Copyright (c) 2001-2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nTest cases for dirdbm module.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
op|','
name|'shutil'
op|','
name|'glob'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'persisted'
name|'import'
name|'dirdbm'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|DirDbmTestCase
name|'class'
name|'DirDbmTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'path'
op|'='
name|'self'
op|'.'
name|'mktemp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dbm'
op|'='
name|'dirdbm'
op|'.'
name|'open'
op|'('
name|'self'
op|'.'
name|'path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'items'
op|'='
op|'('
op|'('
string|"'abc'"
op|','
string|"'foo'"
op|')'
op|','
op|'('
string|"'/lalal'"
op|','
string|"'\\000\\001'"
op|')'
op|','
op|'('
string|"'\\000\\012'"
op|','
string|"'baz'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|testAll
dedent|''
name|'def'
name|'testAll'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'k'
op|'='
string|'"//=="'
op|'.'
name|'decode'
op|'('
string|'"base64"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dbm'
op|'['
name|'k'
op|']'
op|'='
string|'"a"'
newline|'\n'
name|'self'
op|'.'
name|'dbm'
op|'['
name|'k'
op|']'
op|'='
string|'"a"'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'dbm'
op|'['
name|'k'
op|']'
op|','
string|'"a"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|testRebuildInteraction
dedent|''
name|'def'
name|'testRebuildInteraction'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'from'
name|'twisted'
op|'.'
name|'persisted'
name|'import'
name|'dirdbm'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'rebuild'
newline|'\n'
nl|'\n'
name|'s'
op|'='
name|'dirdbm'
op|'.'
name|'Shelf'
op|'('
string|"'dirdbm.rebuild.test'"
op|')'
newline|'\n'
name|'s'
op|'['
string|"'key'"
op|']'
op|'='
string|"'value'"
newline|'\n'
name|'rebuild'
op|'.'
name|'rebuild'
op|'('
name|'dirdbm'
op|')'
newline|'\n'
comment|"# print s['key']"
nl|'\n'
nl|'\n'
nl|'\n'
DECL|member|testDbm
dedent|''
name|'def'
name|'testDbm'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'dbm'
newline|'\n'
nl|'\n'
comment|'# insert keys'
nl|'\n'
name|'keys'
op|'='
op|'['
op|']'
newline|'\n'
name|'values'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'self'
op|'.'
name|'items'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'['
name|'k'
op|']'
op|'='
name|'v'
newline|'\n'
name|'keys'
op|'.'
name|'append'
op|'('
name|'k'
op|')'
newline|'\n'
name|'values'
op|'.'
name|'append'
op|'('
name|'v'
op|')'
newline|'\n'
dedent|''
name|'keys'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'values'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# check they exist'
nl|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'self'
op|'.'
name|'items'
op|':'
newline|'\n'
indent|'            '
name|'assert'
name|'d'
op|'.'
name|'has_key'
op|'('
name|'k'
op|')'
op|','
string|'"has_key() failed"'
newline|'\n'
name|'assert'
name|'d'
op|'['
name|'k'
op|']'
op|'=='
name|'v'
op|','
string|'"database has wrong value"'
newline|'\n'
nl|'\n'
comment|'# check non existent key'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'['
string|'"XXX"'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'assert'
number|'0'
op|','
string|'"didn\'t raise KeyError on non-existent key"'
newline|'\n'
nl|'\n'
comment|'# check keys(), values() and items()'
nl|'\n'
dedent|''
name|'dbkeys'
op|'='
name|'list'
op|'('
name|'d'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
newline|'\n'
name|'dbvalues'
op|'='
name|'list'
op|'('
name|'d'
op|'.'
name|'values'
op|'('
op|')'
op|')'
newline|'\n'
name|'dbitems'
op|'='
name|'list'
op|'('
name|'d'
op|'.'
name|'items'
op|'('
op|')'
op|')'
newline|'\n'
name|'dbkeys'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'dbvalues'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'dbitems'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'items'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'items'
op|')'
newline|'\n'
name|'items'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'assert'
name|'keys'
op|'=='
name|'dbkeys'
op|','
string|'".keys() output didn\'t match: %s != %s"'
op|'%'
op|'('
name|'repr'
op|'('
name|'keys'
op|')'
op|','
name|'repr'
op|'('
name|'dbkeys'
op|')'
op|')'
newline|'\n'
name|'assert'
name|'values'
op|'=='
name|'dbvalues'
op|','
string|'".values() output didn\'t match: %s != %s"'
op|'%'
op|'('
name|'repr'
op|'('
name|'values'
op|')'
op|','
name|'repr'
op|'('
name|'dbvalues'
op|')'
op|')'
newline|'\n'
name|'assert'
name|'items'
op|'=='
name|'dbitems'
op|','
string|'"items() didn\'t match: %s != %s"'
op|'%'
op|'('
name|'repr'
op|'('
name|'items'
op|')'
op|','
name|'repr'
op|'('
name|'dbitems'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'copyPath'
op|'='
name|'self'
op|'.'
name|'mktemp'
op|'('
op|')'
newline|'\n'
name|'d2'
op|'='
name|'d'
op|'.'
name|'copyTo'
op|'('
name|'copyPath'
op|')'
newline|'\n'
nl|'\n'
name|'copykeys'
op|'='
name|'list'
op|'('
name|'d'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
newline|'\n'
name|'copyvalues'
op|'='
name|'list'
op|'('
name|'d'
op|'.'
name|'values'
op|'('
op|')'
op|')'
newline|'\n'
name|'copyitems'
op|'='
name|'list'
op|'('
name|'d'
op|'.'
name|'items'
op|'('
op|')'
op|')'
newline|'\n'
name|'copykeys'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'copyvalues'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'copyitems'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'assert'
name|'dbkeys'
op|'=='
name|'copykeys'
op|','
string|'".copyTo().keys() didn\'t match: %s != %s"'
op|'%'
op|'('
name|'repr'
op|'('
name|'dbkeys'
op|')'
op|','
name|'repr'
op|'('
name|'copykeys'
op|')'
op|')'
newline|'\n'
name|'assert'
name|'dbvalues'
op|'=='
name|'copyvalues'
op|','
string|'".copyTo().values() didn\'t match: %s != %s"'
op|'%'
op|'('
name|'repr'
op|'('
name|'dbvalues'
op|')'
op|','
name|'repr'
op|'('
name|'copyvalues'
op|')'
op|')'
newline|'\n'
name|'assert'
name|'dbitems'
op|'=='
name|'copyitems'
op|','
string|'".copyTo().items() didn\'t match: %s != %s"'
op|'%'
op|'('
name|'repr'
op|'('
name|'dbkeys'
op|')'
op|','
name|'repr'
op|'('
name|'copyitems'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'d2'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
name|'assert'
name|'len'
op|'('
name|'d2'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|'=='
name|'len'
op|'('
name|'d2'
op|'.'
name|'values'
op|'('
op|')'
op|')'
op|'=='
name|'len'
op|'('
name|'d2'
op|'.'
name|'items'
op|'('
op|')'
op|')'
op|'=='
number|'0'
op|','
string|'".clear() failed"'
newline|'\n'
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'copyPath'
op|')'
newline|'\n'
nl|'\n'
comment|'# delete items'
nl|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'self'
op|'.'
name|'items'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'d'
op|'['
name|'k'
op|']'
newline|'\n'
name|'assert'
name|'not'
name|'d'
op|'.'
name|'has_key'
op|'('
name|'k'
op|')'
op|','
string|'"has_key() even though we deleted it"'
newline|'\n'
dedent|''
name|'assert'
name|'len'
op|'('
name|'d'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|'=='
number|'0'
op|','
string|'"database has keys"'
newline|'\n'
name|'assert'
name|'len'
op|'('
name|'d'
op|'.'
name|'values'
op|'('
op|')'
op|')'
op|'=='
number|'0'
op|','
string|'"database has values"'
newline|'\n'
name|'assert'
name|'len'
op|'('
name|'d'
op|'.'
name|'items'
op|'('
op|')'
op|')'
op|'=='
number|'0'
op|','
string|'"database has items"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|testModificationTime
dedent|''
name|'def'
name|'testModificationTime'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'import'
name|'time'
newline|'\n'
comment|'# the mtime value for files comes from a different place than the'
nl|'\n'
comment|'# gettimeofday() system call. On linux, gettimeofday() can be'
nl|'\n'
comment|'# slightly ahead (due to clock drift which gettimeofday() takes into'
nl|'\n'
comment|'# account but which open()/write()/close() do not), and if we are'
nl|'\n'
comment|'# close to the edge of the next second, time.time() can give a value'
nl|'\n'
comment|'# which is larger than the mtime which results from a subsequent'
nl|'\n'
comment|'# write(). I consider this a kernel bug, but it is beyond the scope'
nl|'\n'
comment|'# of this test. Thus we keep the range of acceptability to 3 seconds time.'
nl|'\n'
comment|'# -warner'
nl|'\n'
name|'self'
op|'.'
name|'dbm'
op|'['
string|'"k"'
op|']'
op|'='
string|'"v"'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'abs'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'self'
op|'.'
name|'dbm'
op|'.'
name|'getModificationTime'
op|'('
string|'"k"'
op|')'
op|')'
op|'<='
number|'3'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|testRecovery
dedent|''
name|'def'
name|'testRecovery'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""DirDBM: test recovery from directory after a faked crash"""'
newline|'\n'
name|'k'
op|'='
name|'self'
op|'.'
name|'dbm'
op|'.'
name|'_encode'
op|'('
string|'"key1"'
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'path'
op|','
name|'k'
op|'+'
string|'".rpl"'
op|')'
op|','
string|'"wb"'
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|'"value"'
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'k2'
op|'='
name|'self'
op|'.'
name|'dbm'
op|'.'
name|'_encode'
op|'('
string|'"key2"'
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'path'
op|','
name|'k2'
op|')'
op|','
string|'"wb"'
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|'"correct"'
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'path'
op|','
name|'k2'
op|'+'
string|'".rpl"'
op|')'
op|','
string|'"wb"'
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|'"wrong"'
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'path'
op|','
string|'"aa.new"'
op|')'
op|','
string|'"wb"'
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|'"deleted"'
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'dbm'
op|'='
name|'dirdbm'
op|'.'
name|'DirDBM'
op|'('
name|'self'
op|'.'
name|'path'
op|')'
newline|'\n'
name|'assert'
name|'dbm'
op|'['
string|'"key1"'
op|']'
op|'=='
string|'"value"'
newline|'\n'
name|'assert'
name|'dbm'
op|'['
string|'"key2"'
op|']'
op|'=='
string|'"correct"'
newline|'\n'
name|'assert'
name|'not'
name|'glob'
op|'.'
name|'glob'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'path'
op|','
string|'"*.new"'
op|')'
op|')'
newline|'\n'
name|'assert'
name|'not'
name|'glob'
op|'.'
name|'glob'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'path'
op|','
string|'"*.rpl"'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_nonStringKeys
dedent|''
name|'def'
name|'test_nonStringKeys'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        L{dirdbm.DirDBM} operations only support string keys: other types\n        should raise a C{AssertionError}. This really ought to be a\n        C{TypeError}, but it\'ll stay like this for backward compatibility.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AssertionError'
op|','
name|'self'
op|'.'
name|'dbm'
op|'.'
name|'__setitem__'
op|','
number|'2'
op|','
string|'"3"'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AssertionError'
op|','
name|'self'
op|'.'
name|'dbm'
op|'.'
name|'__setitem__'
op|','
string|'"2"'
op|','
number|'3'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'unittest'
op|'.'
name|'FailTest'
op|':'
newline|'\n'
comment|'# dirdbm.Shelf.__setitem__ supports non-string values'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'self'
op|'.'
name|'dbm'
op|','
name|'dirdbm'
op|'.'
name|'Shelf'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AssertionError'
op|','
name|'self'
op|'.'
name|'dbm'
op|'.'
name|'__getitem__'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AssertionError'
op|','
name|'self'
op|'.'
name|'dbm'
op|'.'
name|'__delitem__'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AssertionError'
op|','
name|'self'
op|'.'
name|'dbm'
op|'.'
name|'has_key'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AssertionError'
op|','
name|'self'
op|'.'
name|'dbm'
op|'.'
name|'__contains__'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AssertionError'
op|','
name|'self'
op|'.'
name|'dbm'
op|'.'
name|'getModificationTime'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|ShelfTestCase
dedent|''
dedent|''
name|'class'
name|'ShelfTestCase'
op|'('
name|'DirDbmTestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'path'
op|'='
name|'self'
op|'.'
name|'mktemp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dbm'
op|'='
name|'dirdbm'
op|'.'
name|'Shelf'
op|'('
name|'self'
op|'.'
name|'path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'items'
op|'='
op|'('
op|'('
string|"'abc'"
op|','
string|"'foo'"
op|')'
op|','
op|'('
string|"'/lalal'"
op|','
string|"'\\000\\001'"
op|')'
op|','
op|'('
string|"'\\000\\012'"
op|','
string|"'baz'"
op|')'
op|','
nl|'\n'
op|'('
string|"'int'"
op|','
number|'12'
op|')'
op|','
op|'('
string|"'float'"
op|','
number|'12.0'
op|')'
op|','
op|'('
string|"'tuple'"
op|','
op|'('
name|'None'
op|','
number|'12'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|testCases
dedent|''
dedent|''
name|'testCases'
op|'='
op|'['
name|'DirDbmTestCase'
op|','
name|'ShelfTestCase'
op|']'
newline|'\n'
endmarker|''
end_unit
