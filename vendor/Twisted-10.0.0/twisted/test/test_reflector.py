begin_unit
comment|'# Copyright (c) 2001-2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nTests for twisted.enterprise reflectors.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'random'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
op|','
name|'interfaces'
op|','
name|'defer'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'enterprise'
op|'.'
name|'row'
name|'import'
name|'RowObject'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'enterprise'
op|'.'
name|'reflector'
name|'import'
name|'EQUAL'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'enterprise'
op|'.'
name|'sqlreflector'
name|'import'
name|'SQLReflector'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'enterprise'
name|'import'
name|'util'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'test'
op|'.'
name|'test_adbapi'
name|'import'
name|'makeSQLTests'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
op|'.'
name|'util'
name|'import'
name|'suppress'
name|'as'
name|'suppressWarning'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
name|'import'
name|'unittest'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|tableName
name|'tableName'
op|'='
string|'"testTable"'
newline|'\n'
DECL|variable|childTableName
name|'childTableName'
op|'='
string|'"childTable"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestRow
name|'class'
name|'TestRow'
op|'('
name|'RowObject'
op|')'
op|':'
newline|'\n'
DECL|variable|rowColumns
indent|'    '
name|'rowColumns'
op|'='
op|'['
op|'('
string|'"key_string"'
op|','
string|'"varchar"'
op|')'
op|','
nl|'\n'
op|'('
string|'"col2"'
op|','
string|'"int"'
op|')'
op|','
nl|'\n'
op|'('
string|'"another_column"'
op|','
string|'"varchar"'
op|')'
op|','
nl|'\n'
op|'('
string|'"Column4"'
op|','
string|'"varchar"'
op|')'
op|','
nl|'\n'
op|'('
string|'"column_5_"'
op|','
string|'"int"'
op|')'
op|']'
newline|'\n'
DECL|variable|rowKeyColumns
name|'rowKeyColumns'
op|'='
op|'['
op|'('
string|'"key_string"'
op|','
string|'"varchar"'
op|')'
op|']'
newline|'\n'
DECL|variable|rowTableName
name|'rowTableName'
op|'='
name|'tableName'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ChildRow
dedent|''
name|'class'
name|'ChildRow'
op|'('
name|'RowObject'
op|')'
op|':'
newline|'\n'
DECL|variable|rowColumns
indent|'    '
name|'rowColumns'
op|'='
op|'['
op|'('
string|'"childId"'
op|','
string|'"int"'
op|')'
op|','
nl|'\n'
op|'('
string|'"foo"'
op|','
string|'"varchar"'
op|')'
op|','
nl|'\n'
op|'('
string|'"test_key"'
op|','
string|'"varchar"'
op|')'
op|','
nl|'\n'
op|'('
string|'"stuff"'
op|','
string|'"varchar"'
op|')'
op|','
nl|'\n'
op|'('
string|'"gogogo"'
op|','
string|'"int"'
op|')'
op|','
nl|'\n'
op|'('
string|'"data"'
op|','
string|'"varchar"'
op|')'
op|']'
newline|'\n'
DECL|variable|rowKeyColumns
name|'rowKeyColumns'
op|'='
op|'['
op|'('
string|'"childId"'
op|','
string|'"int"'
op|')'
op|']'
newline|'\n'
DECL|variable|rowTableName
name|'rowTableName'
op|'='
name|'childTableName'
newline|'\n'
DECL|variable|rowForeignKeys
name|'rowForeignKeys'
op|'='
op|'['
op|'('
name|'tableName'
op|','
nl|'\n'
op|'['
op|'('
string|'"test_key"'
op|','
string|'"varchar"'
op|')'
op|']'
op|','
nl|'\n'
op|'['
op|'('
string|'"key_string"'
op|','
string|'"varchar"'
op|')'
op|']'
op|','
nl|'\n'
name|'None'
op|','
number|'1'
op|')'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'main_table_schema'
op|'='
string|'"""\nCREATE TABLE testTable (\n  key_string     varchar(64),\n  col2           integer,\n  another_column varchar(64),\n  Column4        varchar(64),\n  column_5_      integer\n)\n"""'
newline|'\n'
nl|'\n'
name|'child_table_schema'
op|'='
string|'"""\nCREATE TABLE childTable (\n  childId        integer,\n  foo            varchar(64),\n  test_key       varchar(64),\n  stuff          varchar(64),\n  gogogo         integer,\n  data           varchar(64)\n)\n"""'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|randomizeRow
name|'def'
name|'randomizeRow'
op|'('
name|'row'
op|','
name|'nulls_ok'
op|'='
name|'True'
op|','
name|'trailing_spaces_ok'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'values'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'name'
op|','
name|'type'
name|'in'
name|'row'
op|'.'
name|'rowColumns'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'util'
op|'.'
name|'getKeyColumn'
op|'('
name|'row'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'['
name|'name'
op|']'
op|'='
name|'getattr'
op|'('
name|'row'
op|','
name|'name'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'elif'
name|'nulls_ok'
name|'and'
name|'random'
op|'.'
name|'randint'
op|'('
number|'0'
op|','
number|'9'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'value'
op|'='
name|'None'
comment|'# null'
newline|'\n'
dedent|''
name|'elif'
name|'type'
op|'=='
string|"'int'"
op|':'
newline|'\n'
indent|'            '
name|'value'
op|'='
name|'random'
op|'.'
name|'randint'
op|'('
op|'-'
number|'10000'
op|','
number|'10000'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'random'
op|'.'
name|'randint'
op|'('
number|'0'
op|','
number|'9'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'value'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'value'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'map'
op|'('
name|'lambda'
name|'i'
op|':'
name|'chr'
op|'('
name|'random'
op|'.'
name|'randrange'
op|'('
number|'32'
op|','
number|'127'
op|')'
op|')'
op|','
nl|'\n'
name|'xrange'
op|'('
name|'random'
op|'.'
name|'randint'
op|'('
number|'1'
op|','
number|'64'
op|')'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'trailing_spaces_ok'
op|':'
newline|'\n'
indent|'                '
name|'value'
op|'='
name|'value'
op|'.'
name|'rstrip'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'setattr'
op|'('
name|'row'
op|','
name|'name'
op|','
name|'value'
op|')'
newline|'\n'
name|'values'
op|'['
name|'name'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'return'
name|'values'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|rowMatches
dedent|''
name|'def'
name|'rowMatches'
op|'('
name|'row'
op|','
name|'values'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'for'
name|'name'
op|','
name|'type'
name|'in'
name|'row'
op|'.'
name|'rowColumns'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'getattr'
op|'('
name|'row'
op|','
name|'name'
op|')'
op|'!='
name|'values'
op|'['
name|'name'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|'"Mismatch on column %s: |%s| (row) |%s| (values)"'
op|'%'
nl|'\n'
op|'('
name|'name'
op|','
name|'getattr'
op|'('
name|'row'
op|','
name|'name'
op|')'
op|','
name|'values'
op|'['
name|'name'
op|']'
op|')'
op|')'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|rowObjectSuppression
dedent|''
name|'rowObjectSuppression'
op|'='
name|'suppressWarning'
op|'('
nl|'\n'
name|'message'
op|'='
string|'"twisted.enterprise.row is deprecated since Twisted 8.0"'
op|','
nl|'\n'
name|'category'
op|'='
name|'DeprecationWarning'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|reflectorSuppression
name|'reflectorSuppression'
op|'='
name|'suppressWarning'
op|'('
nl|'\n'
DECL|variable|message
name|'message'
op|'='
string|'"twisted.enterprise.reflector is deprecated since Twisted 8.0"'
op|','
nl|'\n'
DECL|variable|category
name|'category'
op|'='
name|'DeprecationWarning'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ReflectorTestBase
name|'class'
name|'ReflectorTestBase'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Base class for testing reflectors.\n\n    @ivar reflector: The reflector created during setup.\n    """'
newline|'\n'
nl|'\n'
name|'if'
name|'interfaces'
op|'.'
name|'IReactorThreads'
op|'('
name|'reactor'
op|','
name|'None'
op|')'
name|'is'
name|'None'
op|':'
newline|'\n'
DECL|variable|skip
indent|'        '
name|'skip'
op|'='
string|'"No thread support, no reflector tests"'
newline|'\n'
nl|'\n'
DECL|variable|count
dedent|''
name|'count'
op|'='
number|'100'
comment|'# a parameter used for running iterative tests'
newline|'\n'
nl|'\n'
DECL|member|randomizeRow
name|'def'
name|'randomizeRow'
op|'('
name|'self'
op|','
name|'row'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'randomizeRow'
op|'('
name|'row'
op|','
name|'self'
op|'.'
name|'nulls_ok'
op|','
name|'self'
op|'.'
name|'trailing_spaces_ok'
op|')'
newline|'\n'
nl|'\n'
DECL|member|extraSetUp
dedent|''
name|'def'
name|'extraSetUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create and store a reference to a SQL reflector for use by the tests.\n        """'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'createReflector'
op|'('
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbSetUp'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|_cbSetUp
dedent|''
name|'def'
name|'_cbSetUp'
op|'('
name|'self'
op|','
name|'reflector'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'reflector'
op|'='
name|'reflector'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'destroyReflector'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|destroyReflector
dedent|''
name|'def'
name|'destroyReflector'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_reflector
dedent|''
name|'def'
name|'test_reflector'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Full featured tests of reflector.\n        """'
newline|'\n'
comment|'# create one row to work with'
nl|'\n'
name|'row'
op|'='
name|'TestRow'
op|'('
op|')'
newline|'\n'
name|'row'
op|'.'
name|'assignKeyAttr'
op|'('
string|'"key_string"'
op|','
string|'"first"'
op|')'
newline|'\n'
name|'values'
op|'='
name|'self'
op|'.'
name|'randomizeRow'
op|'('
name|'row'
op|')'
newline|'\n'
nl|'\n'
comment|'# save it'
nl|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'reflector'
op|'.'
name|'insertRow'
op|'('
name|'row'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_loadBack
name|'def'
name|'_loadBack'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
comment|'# now load it back in'
nl|'\n'
indent|'            '
name|'whereClause'
op|'='
op|'['
op|'('
string|'"key_string"'
op|','
name|'EQUAL'
op|','
string|'"first"'
op|')'
op|']'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'reflector'
op|'.'
name|'loadObjectsFrom'
op|'('
name|'tableName'
op|','
nl|'\n'
name|'whereClause'
op|'='
name|'whereClause'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'gotData'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_getParent
dedent|''
name|'def'
name|'_getParent'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
comment|'# make sure it came back as what we saved'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'data'
op|')'
op|'=='
number|'1'
op|','
string|'"no row"'
op|')'
newline|'\n'
name|'parent'
op|'='
name|'self'
op|'.'
name|'data'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'rowMatches'
op|'('
name|'parent'
op|','
name|'values'
op|')'
op|','
string|'"no match"'
op|')'
newline|'\n'
name|'return'
name|'parent'
newline|'\n'
nl|'\n'
dedent|''
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_loadBack'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_getParent'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbTestReflector'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
dedent|''
name|'test_reflector'
op|'.'
name|'suppress'
op|'='
op|'['
name|'rowObjectSuppression'
op|','
name|'reflectorSuppression'
op|']'
newline|'\n'
nl|'\n'
DECL|member|_cbTestReflector
name|'def'
name|'_cbTestReflector'
op|'('
name|'self'
op|','
name|'parent'
op|')'
op|':'
newline|'\n'
comment|'# create some child rows'
nl|'\n'
indent|'        '
name|'test_values'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'inserts'
op|'='
op|'['
op|']'
newline|'\n'
name|'child_values'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'num_iterations'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'row'
op|'='
name|'ChildRow'
op|'('
op|')'
newline|'\n'
name|'row'
op|'.'
name|'assignKeyAttr'
op|'('
string|'"childId"'
op|','
name|'i'
op|')'
newline|'\n'
name|'values'
op|'='
name|'self'
op|'.'
name|'randomizeRow'
op|'('
name|'row'
op|')'
newline|'\n'
name|'values'
op|'['
string|"'test_key'"
op|']'
op|'='
name|'row'
op|'.'
name|'test_key'
op|'='
string|'"first"'
newline|'\n'
name|'child_values'
op|'['
name|'i'
op|']'
op|'='
name|'values'
newline|'\n'
name|'inserts'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'reflector'
op|'.'
name|'insertRow'
op|'('
name|'row'
op|')'
op|')'
newline|'\n'
name|'row'
op|'='
name|'None'
newline|'\n'
comment|'#del inserts'
nl|'\n'
dedent|''
name|'d'
op|'='
name|'defer'
op|'.'
name|'gatherResults'
op|'('
name|'inserts'
op|')'
newline|'\n'
name|'values'
op|'='
op|'['
name|'None'
op|']'
newline|'\n'
nl|'\n'
DECL|function|_loadObjects
name|'def'
name|'_loadObjects'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'self'
op|'.'
name|'reflector'
op|'.'
name|'loadObjectsFrom'
op|'('
name|'childTableName'
op|','
name|'parentRow'
op|'='
name|'parent'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'gotData'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_checkLoadObjects
dedent|''
name|'def'
name|'_checkLoadObjects'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'data'
op|')'
op|'=='
name|'self'
op|'.'
name|'num_iterations'
op|','
nl|'\n'
string|'"no rows on query"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'len'
op|'('
name|'parent'
op|'.'
name|'childRows'
op|')'
op|'=='
name|'self'
op|'.'
name|'num_iterations'
op|','
nl|'\n'
string|'"did not load child rows: %d"'
op|'%'
name|'len'
op|'('
name|'parent'
op|'.'
name|'childRows'
op|')'
op|')'
newline|'\n'
name|'for'
name|'child'
name|'in'
name|'parent'
op|'.'
name|'childRows'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'rowMatches'
op|'('
name|'child'
op|','
name|'child_values'
op|'['
name|'child'
op|'.'
name|'childId'
op|']'
op|')'
op|','
nl|'\n'
string|'"child %d does not match"'
op|'%'
name|'child'
op|'.'
name|'childId'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_checkLoadObjects2
dedent|''
dedent|''
name|'def'
name|'_checkLoadObjects2'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'data'
op|')'
op|'=='
name|'self'
op|'.'
name|'num_iterations'
op|','
nl|'\n'
string|'"no rows on query"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'len'
op|'('
name|'parent'
op|'.'
name|'childRows'
op|')'
op|'=='
name|'self'
op|'.'
name|'num_iterations'
op|','
nl|'\n'
string|'"child rows added twice!: %d"'
op|'%'
name|'len'
op|'('
name|'parent'
op|'.'
name|'childRows'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_changeParent
dedent|''
name|'def'
name|'_changeParent'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
comment|'# now change the parent'
nl|'\n'
indent|'            '
name|'values'
op|'['
number|'0'
op|']'
op|'='
name|'self'
op|'.'
name|'randomizeRow'
op|'('
name|'parent'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'reflector'
op|'.'
name|'updateRow'
op|'('
name|'parent'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_loadBack
dedent|''
name|'def'
name|'_loadBack'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
comment|'# now load it back in'
nl|'\n'
indent|'            '
name|'whereClause'
op|'='
op|'['
op|'('
string|'"key_string"'
op|','
name|'EQUAL'
op|','
string|'"first"'
op|')'
op|']'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'reflector'
op|'.'
name|'loadObjectsFrom'
op|'('
name|'tableName'
op|','
name|'whereClause'
op|'='
name|'whereClause'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'gotData'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_checkLoadBack
dedent|''
name|'def'
name|'_checkLoadBack'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
comment|'# make sure it came back as what we saved'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'data'
op|')'
op|'=='
number|'1'
op|','
string|'"no row"'
op|')'
newline|'\n'
name|'parent'
op|'='
name|'self'
op|'.'
name|'data'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'rowMatches'
op|'('
name|'parent'
op|','
name|'values'
op|'['
number|'0'
op|']'
op|')'
op|','
string|'"no match"'
op|')'
newline|'\n'
comment|'# save parent'
nl|'\n'
name|'test_values'
op|'['
name|'parent'
op|'.'
name|'key_string'
op|']'
op|'='
name|'values'
op|'['
number|'0'
op|']'
newline|'\n'
name|'parent'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|function|_saveMoreTestRows
dedent|''
name|'def'
name|'_saveMoreTestRows'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
comment|'# save some more test rows'
nl|'\n'
indent|'            '
name|'ds'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'num_iterations'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'row'
op|'='
name|'TestRow'
op|'('
op|')'
newline|'\n'
name|'row'
op|'.'
name|'assignKeyAttr'
op|'('
string|'"key_string"'
op|','
string|'"bulk%d"'
op|'%'
name|'i'
op|')'
newline|'\n'
name|'test_values'
op|'['
name|'row'
op|'.'
name|'key_string'
op|']'
op|'='
name|'self'
op|'.'
name|'randomizeRow'
op|'('
name|'row'
op|')'
newline|'\n'
name|'ds'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'reflector'
op|'.'
name|'insertRow'
op|'('
name|'row'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'defer'
op|'.'
name|'gatherResults'
op|'('
name|'ds'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_loadRowsBack
dedent|''
name|'def'
name|'_loadRowsBack'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
comment|'# now load them all back in'
nl|'\n'
indent|'            '
name|'d'
op|'='
name|'self'
op|'.'
name|'reflector'
op|'.'
name|'loadObjectsFrom'
op|'('
string|'"testTable"'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'gotData'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_checkRowsBack
dedent|''
name|'def'
name|'_checkRowsBack'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
comment|'# make sure they are the same'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'data'
op|')'
op|'=='
name|'self'
op|'.'
name|'num_iterations'
op|'+'
number|'1'
op|','
nl|'\n'
string|'"query did not get rows"'
op|')'
newline|'\n'
name|'for'
name|'row'
name|'in'
name|'self'
op|'.'
name|'data'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'rowMatches'
op|'('
name|'row'
op|','
name|'test_values'
op|'['
name|'row'
op|'.'
name|'key_string'
op|']'
op|')'
op|','
nl|'\n'
string|'"child %s does not match"'
op|'%'
name|'row'
op|'.'
name|'key_string'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_changeRows
dedent|''
dedent|''
name|'def'
name|'_changeRows'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
comment|'# now change them all'
nl|'\n'
indent|'            '
name|'ds'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'row'
name|'in'
name|'self'
op|'.'
name|'data'
op|':'
newline|'\n'
indent|'                '
name|'test_values'
op|'['
name|'row'
op|'.'
name|'key_string'
op|']'
op|'='
name|'self'
op|'.'
name|'randomizeRow'
op|'('
name|'row'
op|')'
newline|'\n'
name|'ds'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'reflector'
op|'.'
name|'updateRow'
op|'('
name|'row'
op|')'
op|')'
newline|'\n'
dedent|''
name|'d'
op|'='
name|'defer'
op|'.'
name|'gatherResults'
op|'('
name|'ds'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_cbChangeRows'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_cbChangeRows
dedent|''
name|'def'
name|'_cbChangeRows'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'data'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|function|_deleteRows
dedent|''
name|'def'
name|'_deleteRows'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
comment|'# now delete them'
nl|'\n'
indent|'            '
name|'ds'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'row'
name|'in'
name|'self'
op|'.'
name|'data'
op|':'
newline|'\n'
indent|'                '
name|'ds'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'reflector'
op|'.'
name|'deleteRow'
op|'('
name|'row'
op|')'
op|')'
newline|'\n'
dedent|''
name|'d'
op|'='
name|'defer'
op|'.'
name|'gatherResults'
op|'('
name|'ds'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_cbChangeRows'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_checkRowsDeleted
dedent|''
name|'def'
name|'_checkRowsDeleted'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'data'
op|')'
op|'=='
number|'0'
op|','
string|'"rows were not deleted"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_loadObjects'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_checkLoadObjects'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_loadObjects'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_checkLoadObjects2'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_changeParent'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_loadBack'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_checkLoadBack'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_saveMoreTestRows'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_loadRowsBack'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_checkRowsBack'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_changeRows'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_loadRowsBack'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_checkRowsBack'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_deleteRows'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_loadRowsBack'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_checkRowsDeleted'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_saveAndDelete
dedent|''
name|'def'
name|'test_saveAndDelete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create a row and then try to delete it.\n        """'
newline|'\n'
comment|'# create one row to work with'
nl|'\n'
name|'row'
op|'='
name|'TestRow'
op|'('
op|')'
newline|'\n'
name|'row'
op|'.'
name|'assignKeyAttr'
op|'('
string|'"key_string"'
op|','
string|'"first"'
op|')'
newline|'\n'
name|'values'
op|'='
name|'self'
op|'.'
name|'randomizeRow'
op|'('
name|'row'
op|')'
newline|'\n'
comment|'# save it'
nl|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'reflector'
op|'.'
name|'insertRow'
op|'('
name|'row'
op|')'
newline|'\n'
DECL|function|_deleteRow
name|'def'
name|'_deleteRow'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
comment|'# delete it'
nl|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'reflector'
op|'.'
name|'deleteRow'
op|'('
name|'row'
op|')'
newline|'\n'
dedent|''
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'_deleteRow'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
dedent|''
name|'test_saveAndDelete'
op|'.'
name|'suppress'
op|'='
op|'['
name|'rowObjectSuppression'
op|','
name|'reflectorSuppression'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|gotData
name|'def'
name|'gotData'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'data'
op|'='
name|'data'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'ReflectorTestBase'
op|'.'
name|'timeout'
op|'='
number|'30.0'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SQLReflectorTestBase
name|'class'
name|'SQLReflectorTestBase'
op|'('
name|'ReflectorTestBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Base class for the SQL reflector.\n    """'
newline|'\n'
nl|'\n'
DECL|member|createReflector
name|'def'
name|'createReflector'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'startDB'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dbpool'
op|'='
name|'self'
op|'.'
name|'makePool'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dbpool'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'can_clear'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'self'
op|'.'
name|'dbpool'
op|'.'
name|'runOperation'
op|'('
string|"'DROP TABLE testTable'"
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'_'
op|':'
nl|'\n'
name|'self'
op|'.'
name|'dbpool'
op|'.'
name|'runOperation'
op|'('
string|"'DROP TABLE childTable'"
op|')'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'lambda'
name|'_'
op|':'
name|'None'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'_'
op|':'
name|'self'
op|'.'
name|'dbpool'
op|'.'
name|'runOperation'
op|'('
name|'main_table_schema'
op|')'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'_'
op|':'
name|'self'
op|'.'
name|'dbpool'
op|'.'
name|'runOperation'
op|'('
name|'child_table_schema'
op|')'
op|')'
newline|'\n'
name|'reflectorClass'
op|'='
name|'self'
op|'.'
name|'escape_slashes'
name|'and'
name|'SQLReflector'
name|'or'
name|'NoSlashSQLReflector'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'_'
op|':'
nl|'\n'
name|'reflectorClass'
op|'('
name|'self'
op|'.'
name|'dbpool'
op|','
op|'['
name|'TestRow'
op|','
name|'ChildRow'
op|']'
op|')'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|destroyReflector
dedent|''
name|'def'
name|'destroyReflector'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'dbpool'
op|'.'
name|'runOperation'
op|'('
string|"'DROP TABLE testTable'"
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'_'
op|':'
nl|'\n'
name|'self'
op|'.'
name|'dbpool'
op|'.'
name|'runOperation'
op|'('
string|"'DROP TABLE childTable'"
op|')'
op|')'
newline|'\n'
DECL|function|close
name|'def'
name|'close'
op|'('
name|'_'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'dbpool'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stopDB'
op|'('
op|')'
newline|'\n'
dedent|''
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'close'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DeprecationTestCase
dedent|''
dedent|''
name|'class'
name|'DeprecationTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Test various deprecations of twisted.enterprise.\n    """'
newline|'\n'
nl|'\n'
DECL|member|test_rowDeprecation
name|'def'
name|'test_rowDeprecation'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test deprecation of L{RowObject}.\n        """'
newline|'\n'
DECL|function|wrapper
name|'def'
name|'wrapper'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'TestRow'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertWarns'
op|'('
name|'DeprecationWarning'
op|','
nl|'\n'
string|'"twisted.enterprise.row is deprecated since Twisted 8.0"'
op|','
nl|'\n'
name|'__file__'
op|','
nl|'\n'
name|'wrapper'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reflectorDeprecation
dedent|''
name|'def'
name|'test_reflectorDeprecation'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test deprecation of L{SQLReflector}.\n        """'
newline|'\n'
DECL|function|wrapper
name|'def'
name|'wrapper'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'SQLReflector'
op|'('
name|'None'
op|','
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'from'
name|'twisted'
op|'.'
name|'enterprise'
name|'import'
name|'sqlreflector'
newline|'\n'
name|'self'
op|'.'
name|'assertWarns'
op|'('
name|'DeprecationWarning'
op|','
nl|'\n'
string|'"twisted.enterprise.reflector is deprecated since Twisted 8.0"'
op|','
nl|'\n'
name|'sqlreflector'
op|'.'
name|'__file__'
op|','
nl|'\n'
name|'wrapper'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# GadflyReflectorTestCase SQLiteReflectorTestCase PyPgSQLReflectorTestCase'
nl|'\n'
comment|'# PsycopgReflectorTestCase MySQLReflectorTestCase FirebirdReflectorTestCase'
nl|'\n'
dedent|''
dedent|''
name|'makeSQLTests'
op|'('
name|'SQLReflectorTestBase'
op|','
string|"'ReflectorTestCase'"
op|','
name|'globals'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NoSlashSQLReflector
name|'class'
name|'NoSlashSQLReflector'
op|'('
name|'SQLReflector'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    An sql reflector that only escapes single quotes.\n    """'
newline|'\n'
nl|'\n'
DECL|member|escape_string
name|'def'
name|'escape_string'
op|'('
name|'self'
op|','
name|'text'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'text'
op|'.'
name|'replace'
op|'('
string|'"\'"'
op|','
string|'"\'\'"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
