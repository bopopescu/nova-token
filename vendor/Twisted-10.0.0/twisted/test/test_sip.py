begin_unit
comment|'# -*- test-case-name: twisted.test.test_sip -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2009 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""Session Initialization Protocol tests."""'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
name|'import'
name|'unittest'
op|','
name|'util'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'protocols'
name|'import'
name|'sip'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'defer'
op|','
name|'reactor'
op|','
name|'utils'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'versions'
name|'import'
name|'Version'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'test'
name|'import'
name|'proto_helpers'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
name|'import'
name|'cred'
newline|'\n'
name|'import'
name|'twisted'
op|'.'
name|'cred'
op|'.'
name|'portal'
newline|'\n'
name|'import'
name|'twisted'
op|'.'
name|'cred'
op|'.'
name|'checkers'
newline|'\n'
nl|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# request, prefixed by random CRLFs'
nl|'\n'
name|'request1'
op|'='
string|'"\\n\\r\\n\\n\\r"'
op|'+'
string|'"""\\\nINVITE sip:foo SIP/2.0\nFrom: mo\nTo: joe\nContent-Length: 4\n\nabcd"""'
op|'.'
name|'replace'
op|'('
string|'"\\n"'
op|','
string|'"\\r\\n"'
op|')'
newline|'\n'
nl|'\n'
comment|'# request, no content-length'
nl|'\n'
name|'request2'
op|'='
string|'"""INVITE sip:foo SIP/2.0\nFrom: mo\nTo: joe\n\n1234"""'
op|'.'
name|'replace'
op|'('
string|'"\\n"'
op|','
string|'"\\r\\n"'
op|')'
newline|'\n'
nl|'\n'
comment|'# request, with garbage after'
nl|'\n'
name|'request3'
op|'='
string|'"""INVITE sip:foo SIP/2.0\nFrom: mo\nTo: joe\nContent-Length: 4\n\n1234\n\nlalalal"""'
op|'.'
name|'replace'
op|'('
string|'"\\n"'
op|','
string|'"\\r\\n"'
op|')'
newline|'\n'
nl|'\n'
comment|'# three requests'
nl|'\n'
name|'request4'
op|'='
string|'"""INVITE sip:foo SIP/2.0\nFrom: mo\nTo: joe\nContent-Length: 0\n\nINVITE sip:loop SIP/2.0\nFrom: foo\nTo: bar\nContent-Length: 4\n\nabcdINVITE sip:loop SIP/2.0\nFrom: foo\nTo: bar\nContent-Length: 4\n\n1234"""'
op|'.'
name|'replace'
op|'('
string|'"\\n"'
op|','
string|'"\\r\\n"'
op|')'
newline|'\n'
nl|'\n'
comment|'# response, no content'
nl|'\n'
name|'response1'
op|'='
string|'"""SIP/2.0 200 OK\nFrom:  foo\nTo:bar\nContent-Length: 0\n\n"""'
op|'.'
name|'replace'
op|'('
string|'"\\n"'
op|','
string|'"\\r\\n"'
op|')'
newline|'\n'
nl|'\n'
comment|'# short header version'
nl|'\n'
name|'request_short'
op|'='
string|'"""\\\nINVITE sip:foo SIP/2.0\nf: mo\nt: joe\nl: 4\n\nabcd"""'
op|'.'
name|'replace'
op|'('
string|'"\\n"'
op|','
string|'"\\r\\n"'
op|')'
newline|'\n'
nl|'\n'
name|'request_natted'
op|'='
string|'"""\\\nINVITE sip:foo SIP/2.0\nVia: SIP/2.0/UDP 10.0.0.1:5060;rport\n\n"""'
op|'.'
name|'replace'
op|'('
string|'"\\n"'
op|','
string|'"\\r\\n"'
op|')'
newline|'\n'
nl|'\n'
DECL|class|TestRealm
name|'class'
name|'TestRealm'
op|':'
newline|'\n'
DECL|member|requestAvatar
indent|'    '
name|'def'
name|'requestAvatar'
op|'('
name|'self'
op|','
name|'avatarId'
op|','
name|'mind'
op|','
op|'*'
name|'interfaces'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'sip'
op|'.'
name|'IContact'
op|','
name|'None'
op|','
name|'lambda'
op|':'
name|'None'
newline|'\n'
nl|'\n'
DECL|class|MessageParsingTestCase
dedent|''
dedent|''
name|'class'
name|'MessageParsingTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'l'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'parser'
op|'='
name|'sip'
op|'.'
name|'MessagesParser'
op|'('
name|'self'
op|'.'
name|'l'
op|'.'
name|'append'
op|')'
newline|'\n'
nl|'\n'
DECL|member|feedMessage
dedent|''
name|'def'
name|'feedMessage'
op|'('
name|'self'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'parser'
op|'.'
name|'dataReceived'
op|'('
name|'message'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'parser'
op|'.'
name|'dataDone'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|validateMessage
dedent|''
name|'def'
name|'validateMessage'
op|'('
name|'self'
op|','
name|'m'
op|','
name|'method'
op|','
name|'uri'
op|','
name|'headers'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Validate Requests."""'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'method'
op|','
name|'method'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'uri'
op|'.'
name|'toString'
op|'('
op|')'
op|','
name|'uri'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'headers'
op|','
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'body'
op|','
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'finished'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testSimple
dedent|''
name|'def'
name|'testSimple'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'l'
op|'='
name|'self'
op|'.'
name|'l'
newline|'\n'
name|'self'
op|'.'
name|'feedMessage'
op|'('
name|'request1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'l'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'validateMessage'
op|'('
nl|'\n'
name|'l'
op|'['
number|'0'
op|']'
op|','
string|'"INVITE"'
op|','
string|'"sip:foo"'
op|','
nl|'\n'
op|'{'
string|'"from"'
op|':'
op|'['
string|'"mo"'
op|']'
op|','
string|'"to"'
op|':'
op|'['
string|'"joe"'
op|']'
op|','
string|'"content-length"'
op|':'
op|'['
string|'"4"'
op|']'
op|'}'
op|','
nl|'\n'
string|'"abcd"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testTwoMessages
dedent|''
name|'def'
name|'testTwoMessages'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'l'
op|'='
name|'self'
op|'.'
name|'l'
newline|'\n'
name|'self'
op|'.'
name|'feedMessage'
op|'('
name|'request1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'feedMessage'
op|'('
name|'request2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'l'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'validateMessage'
op|'('
nl|'\n'
name|'l'
op|'['
number|'0'
op|']'
op|','
string|'"INVITE"'
op|','
string|'"sip:foo"'
op|','
nl|'\n'
op|'{'
string|'"from"'
op|':'
op|'['
string|'"mo"'
op|']'
op|','
string|'"to"'
op|':'
op|'['
string|'"joe"'
op|']'
op|','
string|'"content-length"'
op|':'
op|'['
string|'"4"'
op|']'
op|'}'
op|','
nl|'\n'
string|'"abcd"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'validateMessage'
op|'('
name|'l'
op|'['
number|'1'
op|']'
op|','
string|'"INVITE"'
op|','
string|'"sip:foo"'
op|','
nl|'\n'
op|'{'
string|'"from"'
op|':'
op|'['
string|'"mo"'
op|']'
op|','
string|'"to"'
op|':'
op|'['
string|'"joe"'
op|']'
op|'}'
op|','
nl|'\n'
string|'"1234"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testGarbage
dedent|''
name|'def'
name|'testGarbage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'l'
op|'='
name|'self'
op|'.'
name|'l'
newline|'\n'
name|'self'
op|'.'
name|'feedMessage'
op|'('
name|'request3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'l'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'validateMessage'
op|'('
nl|'\n'
name|'l'
op|'['
number|'0'
op|']'
op|','
string|'"INVITE"'
op|','
string|'"sip:foo"'
op|','
nl|'\n'
op|'{'
string|'"from"'
op|':'
op|'['
string|'"mo"'
op|']'
op|','
string|'"to"'
op|':'
op|'['
string|'"joe"'
op|']'
op|','
string|'"content-length"'
op|':'
op|'['
string|'"4"'
op|']'
op|'}'
op|','
nl|'\n'
string|'"1234"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testThreeInOne
dedent|''
name|'def'
name|'testThreeInOne'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'l'
op|'='
name|'self'
op|'.'
name|'l'
newline|'\n'
name|'self'
op|'.'
name|'feedMessage'
op|'('
name|'request4'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'l'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'validateMessage'
op|'('
nl|'\n'
name|'l'
op|'['
number|'0'
op|']'
op|','
string|'"INVITE"'
op|','
string|'"sip:foo"'
op|','
nl|'\n'
op|'{'
string|'"from"'
op|':'
op|'['
string|'"mo"'
op|']'
op|','
string|'"to"'
op|':'
op|'['
string|'"joe"'
op|']'
op|','
string|'"content-length"'
op|':'
op|'['
string|'"0"'
op|']'
op|'}'
op|','
nl|'\n'
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'validateMessage'
op|'('
nl|'\n'
name|'l'
op|'['
number|'1'
op|']'
op|','
string|'"INVITE"'
op|','
string|'"sip:loop"'
op|','
nl|'\n'
op|'{'
string|'"from"'
op|':'
op|'['
string|'"foo"'
op|']'
op|','
string|'"to"'
op|':'
op|'['
string|'"bar"'
op|']'
op|','
string|'"content-length"'
op|':'
op|'['
string|'"4"'
op|']'
op|'}'
op|','
nl|'\n'
string|'"abcd"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'validateMessage'
op|'('
nl|'\n'
name|'l'
op|'['
number|'2'
op|']'
op|','
string|'"INVITE"'
op|','
string|'"sip:loop"'
op|','
nl|'\n'
op|'{'
string|'"from"'
op|':'
op|'['
string|'"foo"'
op|']'
op|','
string|'"to"'
op|':'
op|'['
string|'"bar"'
op|']'
op|','
string|'"content-length"'
op|':'
op|'['
string|'"4"'
op|']'
op|'}'
op|','
nl|'\n'
string|'"1234"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testShort
dedent|''
name|'def'
name|'testShort'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'l'
op|'='
name|'self'
op|'.'
name|'l'
newline|'\n'
name|'self'
op|'.'
name|'feedMessage'
op|'('
name|'request_short'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'l'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'validateMessage'
op|'('
nl|'\n'
name|'l'
op|'['
number|'0'
op|']'
op|','
string|'"INVITE"'
op|','
string|'"sip:foo"'
op|','
nl|'\n'
op|'{'
string|'"from"'
op|':'
op|'['
string|'"mo"'
op|']'
op|','
string|'"to"'
op|':'
op|'['
string|'"joe"'
op|']'
op|','
string|'"content-length"'
op|':'
op|'['
string|'"4"'
op|']'
op|'}'
op|','
nl|'\n'
string|'"abcd"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testSimpleResponse
dedent|''
name|'def'
name|'testSimpleResponse'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'l'
op|'='
name|'self'
op|'.'
name|'l'
newline|'\n'
name|'self'
op|'.'
name|'feedMessage'
op|'('
name|'response1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'l'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'m'
op|'='
name|'l'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'code'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'phrase'
op|','
string|'"OK"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'m'
op|'.'
name|'headers'
op|','
nl|'\n'
op|'{'
string|'"from"'
op|':'
op|'['
string|'"foo"'
op|']'
op|','
string|'"to"'
op|':'
op|'['
string|'"bar"'
op|']'
op|','
string|'"content-length"'
op|':'
op|'['
string|'"0"'
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'body'
op|','
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'finished'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MessageParsingTestCase2
dedent|''
dedent|''
name|'class'
name|'MessageParsingTestCase2'
op|'('
name|'MessageParsingTestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Same as base class, but feed data char by char."""'
newline|'\n'
nl|'\n'
DECL|member|feedMessage
name|'def'
name|'feedMessage'
op|'('
name|'self'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'c'
name|'in'
name|'message'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'parser'
op|'.'
name|'dataReceived'
op|'('
name|'c'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'parser'
op|'.'
name|'dataDone'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MakeMessageTestCase
dedent|''
dedent|''
name|'class'
name|'MakeMessageTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|testRequest
indent|'    '
name|'def'
name|'testRequest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'sip'
op|'.'
name|'Request'
op|'('
string|'"INVITE"'
op|','
string|'"sip:foo"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"foo"'
op|','
string|'"bar"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'r'
op|'.'
name|'toString'
op|'('
op|')'
op|','
nl|'\n'
string|'"INVITE sip:foo SIP/2.0\\r\\nFoo: bar\\r\\n\\r\\n"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testResponse
dedent|''
name|'def'
name|'testResponse'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'sip'
op|'.'
name|'Response'
op|'('
number|'200'
op|','
string|'"OK"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"foo"'
op|','
string|'"bar"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"Content-Length"'
op|','
string|'"4"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'bodyDataReceived'
op|'('
string|'"1234"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'r'
op|'.'
name|'toString'
op|'('
op|')'
op|','
nl|'\n'
string|'"SIP/2.0 200 OK\\r\\nFoo: bar\\r\\nContent-Length: 4\\r\\n\\r\\n1234"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testStatusCode
dedent|''
name|'def'
name|'testStatusCode'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'sip'
op|'.'
name|'Response'
op|'('
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'r'
op|'.'
name|'toString'
op|'('
op|')'
op|','
string|'"SIP/2.0 200 OK\\r\\n\\r\\n"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ViaTestCase
dedent|''
dedent|''
name|'class'
name|'ViaTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|checkRoundtrip
indent|'    '
name|'def'
name|'checkRoundtrip'
op|'('
name|'self'
op|','
name|'v'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'s'
op|'='
name|'v'
op|'.'
name|'toString'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'s'
op|','
name|'sip'
op|'.'
name|'parseViaHeader'
op|'('
name|'s'
op|')'
op|'.'
name|'toString'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testExtraWhitespace
dedent|''
name|'def'
name|'testExtraWhitespace'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v1'
op|'='
name|'sip'
op|'.'
name|'parseViaHeader'
op|'('
string|"'SIP/2.0/UDP 192.168.1.1:5060'"
op|')'
newline|'\n'
name|'v2'
op|'='
name|'sip'
op|'.'
name|'parseViaHeader'
op|'('
string|"'SIP/2.0/UDP     192.168.1.1:5060'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v1'
op|'.'
name|'transport'
op|','
name|'v2'
op|'.'
name|'transport'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v1'
op|'.'
name|'host'
op|','
name|'v2'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v1'
op|'.'
name|'port'
op|','
name|'v2'
op|'.'
name|'port'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_complex
dedent|''
name|'def'
name|'test_complex'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test parsing a Via header with one of everything.\n        """'
newline|'\n'
name|'s'
op|'='
op|'('
string|'"SIP/2.0/UDP first.example.com:4000;ttl=16;maddr=224.2.0.1"'
nl|'\n'
string|'" ;branch=a7c6a8dlze (Example)"'
op|')'
newline|'\n'
name|'v'
op|'='
name|'sip'
op|'.'
name|'parseViaHeader'
op|'('
name|'s'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'transport'
op|','
string|'"UDP"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'host'
op|','
string|'"first.example.com"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'port'
op|','
number|'4000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'rport'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'rportValue'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'rportRequested'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'ttl'
op|','
number|'16'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'maddr'
op|','
string|'"224.2.0.1"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'branch'
op|','
string|'"a7c6a8dlze"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'hidden'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'toString'
op|'('
op|')'
op|','
nl|'\n'
string|'"SIP/2.0/UDP first.example.com:4000"'
nl|'\n'
string|'";ttl=16;branch=a7c6a8dlze;maddr=224.2.0.1"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'checkRoundtrip'
op|'('
name|'v'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_simple
dedent|''
name|'def'
name|'test_simple'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test parsing a simple Via header.\n        """'
newline|'\n'
name|'s'
op|'='
string|'"SIP/2.0/UDP example.com;hidden"'
newline|'\n'
name|'v'
op|'='
name|'sip'
op|'.'
name|'parseViaHeader'
op|'('
name|'s'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'transport'
op|','
string|'"UDP"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'host'
op|','
string|'"example.com"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'port'
op|','
number|'5060'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'rport'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'rportValue'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'rportRequested'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'ttl'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'maddr'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'branch'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'hidden'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'toString'
op|'('
op|')'
op|','
nl|'\n'
string|'"SIP/2.0/UDP example.com:5060;hidden"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'checkRoundtrip'
op|'('
name|'v'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testSimpler
dedent|''
name|'def'
name|'testSimpler'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'v'
op|'='
name|'sip'
op|'.'
name|'Via'
op|'('
string|'"example.com"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'checkRoundtrip'
op|'('
name|'v'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_deprecatedRPort
dedent|''
name|'def'
name|'test_deprecatedRPort'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Setting rport to True is deprecated, but still produces a Via header\n        with the expected properties.\n        """'
newline|'\n'
name|'v'
op|'='
name|'sip'
op|'.'
name|'Via'
op|'('
string|'"foo.bar"'
op|','
name|'rport'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'warnings'
op|'='
name|'self'
op|'.'
name|'flushWarnings'
op|'('
nl|'\n'
name|'offendingFunctions'
op|'='
op|'['
name|'self'
op|'.'
name|'test_deprecatedRPort'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'warnings'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'warnings'
op|'['
number|'0'
op|']'
op|'['
string|"'message'"
op|']'
op|','
nl|'\n'
string|"'rport=True is deprecated since Twisted 9.0.'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'warnings'
op|'['
number|'0'
op|']'
op|'['
string|"'category'"
op|']'
op|','
nl|'\n'
name|'DeprecationWarning'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'v'
op|'.'
name|'toString'
op|'('
op|')'
op|','
string|'"SIP/2.0/UDP foo.bar:5060;rport"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'v'
op|'.'
name|'rport'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'v'
op|'.'
name|'rportRequested'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'v'
op|'.'
name|'rportValue'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_rport
dedent|''
name|'def'
name|'test_rport'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        An rport setting of None should insert the parameter with no value.\n        """'
newline|'\n'
name|'v'
op|'='
name|'sip'
op|'.'
name|'Via'
op|'('
string|'"foo.bar"'
op|','
name|'rport'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'v'
op|'.'
name|'toString'
op|'('
op|')'
op|','
string|'"SIP/2.0/UDP foo.bar:5060;rport"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'v'
op|'.'
name|'rportRequested'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'v'
op|'.'
name|'rportValue'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_rportValue
dedent|''
name|'def'
name|'test_rportValue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        An rport numeric setting should insert the parameter with the number\n        value given.\n        """'
newline|'\n'
name|'v'
op|'='
name|'sip'
op|'.'
name|'Via'
op|'('
string|'"foo.bar"'
op|','
name|'rport'
op|'='
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'v'
op|'.'
name|'toString'
op|'('
op|')'
op|','
string|'"SIP/2.0/UDP foo.bar:5060;rport=1"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'v'
op|'.'
name|'rportRequested'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'v'
op|'.'
name|'rportValue'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'v'
op|'.'
name|'rport'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|testNAT
dedent|''
name|'def'
name|'testNAT'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'s'
op|'='
string|'"SIP/2.0/UDP 10.0.0.1:5060;received=22.13.1.5;rport=12345"'
newline|'\n'
name|'v'
op|'='
name|'sip'
op|'.'
name|'parseViaHeader'
op|'('
name|'s'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'transport'
op|','
string|'"UDP"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'host'
op|','
string|'"10.0.0.1"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'port'
op|','
number|'5060'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'received'
op|','
string|'"22.13.1.5"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|'.'
name|'rport'
op|','
number|'12345'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertNotEquals'
op|'('
name|'v'
op|'.'
name|'toString'
op|'('
op|')'
op|'.'
name|'find'
op|'('
string|'"rport=12345"'
op|')'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_unknownParams
dedent|''
name|'def'
name|'test_unknownParams'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'       '
string|'"""\n       Parsing and serializing Via headers with unknown parameters should work.\n       """'
newline|'\n'
name|'s'
op|'='
string|'"SIP/2.0/UDP example.com:5060;branch=a12345b;bogus;pie=delicious"'
newline|'\n'
name|'v'
op|'='
name|'sip'
op|'.'
name|'parseViaHeader'
op|'('
name|'s'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'v'
op|'.'
name|'toString'
op|'('
op|')'
op|','
name|'s'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|URLTestCase
dedent|''
dedent|''
name|'class'
name|'URLTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|testRoundtrip
indent|'    '
name|'def'
name|'testRoundtrip'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'url'
name|'in'
op|'['
nl|'\n'
string|'"sip:j.doe@big.com"'
op|','
nl|'\n'
string|'"sip:j.doe:secret@big.com;transport=tcp"'
op|','
nl|'\n'
string|'"sip:j.doe@big.com?subject=project"'
op|','
nl|'\n'
string|'"sip:example.com"'
op|','
nl|'\n'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'sip'
op|'.'
name|'parseURL'
op|'('
name|'url'
op|')'
op|'.'
name|'toString'
op|'('
op|')'
op|','
name|'url'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testComplex
dedent|''
dedent|''
name|'def'
name|'testComplex'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'s'
op|'='
op|'('
string|'"sip:user:pass@hosta:123;transport=udp;user=phone;method=foo;"'
nl|'\n'
string|'"ttl=12;maddr=1.2.3.4;blah;goo=bar?a=b&c=d"'
op|')'
newline|'\n'
name|'url'
op|'='
name|'sip'
op|'.'
name|'parseURL'
op|'('
name|'s'
op|')'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
op|'['
op|'('
string|'"username"'
op|','
string|'"user"'
op|')'
op|','
op|'('
string|'"password"'
op|','
string|'"pass"'
op|')'
op|','
nl|'\n'
op|'('
string|'"host"'
op|','
string|'"hosta"'
op|')'
op|','
op|'('
string|'"port"'
op|','
number|'123'
op|')'
op|','
nl|'\n'
op|'('
string|'"transport"'
op|','
string|'"udp"'
op|')'
op|','
op|'('
string|'"usertype"'
op|','
string|'"phone"'
op|')'
op|','
nl|'\n'
op|'('
string|'"method"'
op|','
string|'"foo"'
op|')'
op|','
op|'('
string|'"ttl"'
op|','
number|'12'
op|')'
op|','
nl|'\n'
op|'('
string|'"maddr"'
op|','
string|'"1.2.3.4"'
op|')'
op|','
op|'('
string|'"other"'
op|','
op|'['
string|'"blah"'
op|','
string|'"goo=bar"'
op|']'
op|')'
op|','
nl|'\n'
op|'('
string|'"headers"'
op|','
op|'{'
string|'"a"'
op|':'
string|'"b"'
op|','
string|'"c"'
op|':'
string|'"d"'
op|'}'
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'getattr'
op|'('
name|'url'
op|','
name|'k'
op|')'
op|','
name|'v'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ParseTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'ParseTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|testParseAddress
indent|'    '
name|'def'
name|'testParseAddress'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'address'
op|','
name|'name'
op|','
name|'urls'
op|','
name|'params'
name|'in'
op|'['
nl|'\n'
op|'('
string|'\'"A. G. Bell" <sip:foo@example.com>\''
op|','
nl|'\n'
string|'"A. G. Bell"'
op|','
string|'"sip:foo@example.com"'
op|','
op|'{'
op|'}'
op|')'
op|','
nl|'\n'
op|'('
string|'"Anon <sip:foo@example.com>"'
op|','
string|'"Anon"'
op|','
string|'"sip:foo@example.com"'
op|','
op|'{'
op|'}'
op|')'
op|','
nl|'\n'
op|'('
string|'"sip:foo@example.com"'
op|','
string|'""'
op|','
string|'"sip:foo@example.com"'
op|','
op|'{'
op|'}'
op|')'
op|','
nl|'\n'
op|'('
string|'"<sip:foo@example.com>"'
op|','
string|'""'
op|','
string|'"sip:foo@example.com"'
op|','
op|'{'
op|'}'
op|')'
op|','
nl|'\n'
op|'('
string|'"foo <sip:foo@example.com>;tag=bar;foo=baz"'
op|','
string|'"foo"'
op|','
nl|'\n'
string|'"sip:foo@example.com"'
op|','
op|'{'
string|'"tag"'
op|':'
string|'"bar"'
op|','
string|'"foo"'
op|':'
string|'"baz"'
op|'}'
op|')'
op|','
nl|'\n'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'gname'
op|','
name|'gurl'
op|','
name|'gparams'
op|'='
name|'sip'
op|'.'
name|'parseAddress'
op|'('
name|'address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'name'
op|','
name|'gname'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'gurl'
op|'.'
name|'toString'
op|'('
op|')'
op|','
name|'urls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'gparams'
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DummyLocator
dedent|''
dedent|''
dedent|''
name|'class'
name|'DummyLocator'
op|':'
newline|'\n'
indent|'    '
name|'implements'
op|'('
name|'sip'
op|'.'
name|'ILocator'
op|')'
newline|'\n'
DECL|member|getAddress
name|'def'
name|'getAddress'
op|'('
name|'self'
op|','
name|'logicalURL'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'sip'
op|'.'
name|'URL'
op|'('
string|'"server.com"'
op|','
name|'port'
op|'='
number|'5060'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|class|FailingLocator
dedent|''
dedent|''
name|'class'
name|'FailingLocator'
op|':'
newline|'\n'
indent|'    '
name|'implements'
op|'('
name|'sip'
op|'.'
name|'ILocator'
op|')'
newline|'\n'
DECL|member|getAddress
name|'def'
name|'getAddress'
op|'('
name|'self'
op|','
name|'logicalURL'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'LookupError'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ProxyTestCase
dedent|''
dedent|''
name|'class'
name|'ProxyTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'proxy'
op|'='
name|'sip'
op|'.'
name|'Proxy'
op|'('
string|'"127.0.0.1"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'locator'
op|'='
name|'DummyLocator'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sent'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'sendMessage'
op|'='
name|'lambda'
name|'dest'
op|','
name|'msg'
op|':'
name|'self'
op|'.'
name|'sent'
op|'.'
name|'append'
op|'('
op|'('
name|'dest'
op|','
name|'msg'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testRequestForward
dedent|''
name|'def'
name|'testRequestForward'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'sip'
op|'.'
name|'Request'
op|'('
string|'"INVITE"'
op|','
string|'"sip:foo"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"via"'
op|','
name|'sip'
op|'.'
name|'Via'
op|'('
string|'"1.2.3.4"'
op|')'
op|'.'
name|'toString'
op|'('
op|')'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"via"'
op|','
name|'sip'
op|'.'
name|'Via'
op|'('
string|'"1.2.3.5"'
op|')'
op|'.'
name|'toString'
op|'('
op|')'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"foo"'
op|','
string|'"bar"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"to"'
op|','
string|'"<sip:joe@server.com>"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"contact"'
op|','
string|'"<sip:joe@1.2.3.5>"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'datagramReceived'
op|'('
name|'r'
op|'.'
name|'toString'
op|'('
op|')'
op|','
op|'('
string|'"1.2.3.4"'
op|','
number|'5060'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'sent'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'dest'
op|','
name|'m'
op|'='
name|'self'
op|'.'
name|'sent'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'dest'
op|'.'
name|'port'
op|','
number|'5060'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'dest'
op|'.'
name|'host'
op|','
string|'"server.com"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'uri'
op|'.'
name|'toString'
op|'('
op|')'
op|','
string|'"sip:foo"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'method'
op|','
string|'"INVITE"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'headers'
op|'['
string|'"via"'
op|']'
op|','
nl|'\n'
op|'['
string|'"SIP/2.0/UDP 127.0.0.1:5060"'
op|','
nl|'\n'
string|'"SIP/2.0/UDP 1.2.3.4:5060"'
op|','
nl|'\n'
string|'"SIP/2.0/UDP 1.2.3.5:5060"'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|testReceivedRequestForward
dedent|''
name|'def'
name|'testReceivedRequestForward'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'sip'
op|'.'
name|'Request'
op|'('
string|'"INVITE"'
op|','
string|'"sip:foo"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"via"'
op|','
name|'sip'
op|'.'
name|'Via'
op|'('
string|'"1.2.3.4"'
op|')'
op|'.'
name|'toString'
op|'('
op|')'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"foo"'
op|','
string|'"bar"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"to"'
op|','
string|'"<sip:joe@server.com>"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"contact"'
op|','
string|'"<sip:joe@1.2.3.4>"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'datagramReceived'
op|'('
name|'r'
op|'.'
name|'toString'
op|'('
op|')'
op|','
op|'('
string|'"1.1.1.1"'
op|','
number|'5060'
op|')'
op|')'
newline|'\n'
name|'dest'
op|','
name|'m'
op|'='
name|'self'
op|'.'
name|'sent'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'headers'
op|'['
string|'"via"'
op|']'
op|','
nl|'\n'
op|'['
string|'"SIP/2.0/UDP 127.0.0.1:5060"'
op|','
nl|'\n'
string|'"SIP/2.0/UDP 1.2.3.4:5060;received=1.1.1.1"'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|testResponseWrongVia
dedent|''
name|'def'
name|'testResponseWrongVia'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# first via must match proxy's address"
nl|'\n'
indent|'        '
name|'r'
op|'='
name|'sip'
op|'.'
name|'Response'
op|'('
number|'200'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"via"'
op|','
name|'sip'
op|'.'
name|'Via'
op|'('
string|'"foo.com"'
op|')'
op|'.'
name|'toString'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'datagramReceived'
op|'('
name|'r'
op|'.'
name|'toString'
op|'('
op|')'
op|','
op|'('
string|'"1.1.1.1"'
op|','
number|'5060'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'sent'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testResponseForward
dedent|''
name|'def'
name|'testResponseForward'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'sip'
op|'.'
name|'Response'
op|'('
number|'200'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"via"'
op|','
name|'sip'
op|'.'
name|'Via'
op|'('
string|'"127.0.0.1"'
op|')'
op|'.'
name|'toString'
op|'('
op|')'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"via"'
op|','
name|'sip'
op|'.'
name|'Via'
op|'('
string|'"client.com"'
op|','
name|'port'
op|'='
number|'1234'
op|')'
op|'.'
name|'toString'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'datagramReceived'
op|'('
name|'r'
op|'.'
name|'toString'
op|'('
op|')'
op|','
op|'('
string|'"1.1.1.1"'
op|','
number|'5060'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'sent'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'dest'
op|','
name|'m'
op|'='
name|'self'
op|'.'
name|'sent'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'('
name|'dest'
op|'.'
name|'host'
op|','
name|'dest'
op|'.'
name|'port'
op|')'
op|','
op|'('
string|'"client.com"'
op|','
number|'1234'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'code'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'headers'
op|'['
string|'"via"'
op|']'
op|','
op|'['
string|'"SIP/2.0/UDP client.com:1234"'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testReceivedResponseForward
dedent|''
name|'def'
name|'testReceivedResponseForward'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'sip'
op|'.'
name|'Response'
op|'('
number|'200'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"via"'
op|','
name|'sip'
op|'.'
name|'Via'
op|'('
string|'"127.0.0.1"'
op|')'
op|'.'
name|'toString'
op|'('
op|')'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
nl|'\n'
string|'"via"'
op|','
nl|'\n'
name|'sip'
op|'.'
name|'Via'
op|'('
string|'"10.0.0.1"'
op|','
name|'received'
op|'='
string|'"client.com"'
op|')'
op|'.'
name|'toString'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'datagramReceived'
op|'('
name|'r'
op|'.'
name|'toString'
op|'('
op|')'
op|','
op|'('
string|'"1.1.1.1"'
op|','
number|'5060'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'sent'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'dest'
op|','
name|'m'
op|'='
name|'self'
op|'.'
name|'sent'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'('
name|'dest'
op|'.'
name|'host'
op|','
name|'dest'
op|'.'
name|'port'
op|')'
op|','
op|'('
string|'"client.com"'
op|','
number|'5060'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testResponseToUs
dedent|''
name|'def'
name|'testResponseToUs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'sip'
op|'.'
name|'Response'
op|'('
number|'200'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"via"'
op|','
name|'sip'
op|'.'
name|'Via'
op|'('
string|'"127.0.0.1"'
op|')'
op|'.'
name|'toString'
op|'('
op|')'
op|')'
newline|'\n'
name|'l'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'gotResponse'
op|'='
name|'lambda'
op|'*'
name|'a'
op|':'
name|'l'
op|'.'
name|'append'
op|'('
name|'a'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'datagramReceived'
op|'('
name|'r'
op|'.'
name|'toString'
op|'('
op|')'
op|','
op|'('
string|'"1.1.1.1"'
op|','
number|'5060'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'l'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'m'
op|','
name|'addr'
op|'='
name|'l'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'m'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|'"via"'
op|','
op|'['
op|']'
op|')'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'code'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testLoop
dedent|''
name|'def'
name|'testLoop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'sip'
op|'.'
name|'Request'
op|'('
string|'"INVITE"'
op|','
string|'"sip:foo"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"via"'
op|','
name|'sip'
op|'.'
name|'Via'
op|'('
string|'"1.2.3.4"'
op|')'
op|'.'
name|'toString'
op|'('
op|')'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"via"'
op|','
name|'sip'
op|'.'
name|'Via'
op|'('
string|'"127.0.0.1"'
op|')'
op|'.'
name|'toString'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'datagramReceived'
op|'('
name|'r'
op|'.'
name|'toString'
op|'('
op|')'
op|','
op|'('
string|'"client.com"'
op|','
number|'5060'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'sent'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testCantForwardRequest
dedent|''
name|'def'
name|'testCantForwardRequest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'sip'
op|'.'
name|'Request'
op|'('
string|'"INVITE"'
op|','
string|'"sip:foo"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"via"'
op|','
name|'sip'
op|'.'
name|'Via'
op|'('
string|'"1.2.3.4"'
op|')'
op|'.'
name|'toString'
op|'('
op|')'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"to"'
op|','
string|'"<sip:joe@server.com>"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'locator'
op|'='
name|'FailingLocator'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'datagramReceived'
op|'('
name|'r'
op|'.'
name|'toString'
op|'('
op|')'
op|','
op|'('
string|'"1.2.3.4"'
op|','
number|'5060'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'sent'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'dest'
op|','
name|'m'
op|'='
name|'self'
op|'.'
name|'sent'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'('
name|'dest'
op|'.'
name|'host'
op|','
name|'dest'
op|'.'
name|'port'
op|')'
op|','
op|'('
string|'"1.2.3.4"'
op|','
number|'5060'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'code'
op|','
number|'404'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'headers'
op|'['
string|'"via"'
op|']'
op|','
op|'['
string|'"SIP/2.0/UDP 1.2.3.4:5060"'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testCantForwardResponse
dedent|''
name|'def'
name|'testCantForwardResponse'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
comment|'#testCantForwardResponse.skip = "not implemented yet"'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|RegistrationTestCase
dedent|''
dedent|''
name|'class'
name|'RegistrationTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'proxy'
op|'='
name|'sip'
op|'.'
name|'RegisterProxy'
op|'('
name|'host'
op|'='
string|'"127.0.0.1"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'registry'
op|'='
name|'sip'
op|'.'
name|'InMemoryRegistry'
op|'('
string|'"bell.example.com"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'registry'
op|'='
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'locator'
op|'='
name|'self'
op|'.'
name|'registry'
newline|'\n'
name|'self'
op|'.'
name|'sent'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'sendMessage'
op|'='
name|'lambda'
name|'dest'
op|','
name|'msg'
op|':'
name|'self'
op|'.'
name|'sent'
op|'.'
name|'append'
op|'('
op|'('
name|'dest'
op|','
name|'msg'
op|')'
op|')'
newline|'\n'
DECL|variable|setUp
dedent|''
name|'setUp'
op|'='
name|'utils'
op|'.'
name|'suppressWarnings'
op|'('
name|'setUp'
op|','
nl|'\n'
name|'util'
op|'.'
name|'suppress'
op|'('
name|'category'
op|'='
name|'DeprecationWarning'
op|','
nl|'\n'
name|'message'
op|'='
string|"r'twisted.protocols.sip.DigestAuthorizer was deprecated'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'d'
op|','
name|'uri'
name|'in'
name|'self'
op|'.'
name|'registry'
op|'.'
name|'users'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'.'
name|'cancel'
op|'('
op|')'
newline|'\n'
dedent|''
name|'del'
name|'self'
op|'.'
name|'proxy'
newline|'\n'
nl|'\n'
DECL|member|register
dedent|''
name|'def'
name|'register'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'sip'
op|'.'
name|'Request'
op|'('
string|'"REGISTER"'
op|','
string|'"sip:bell.example.com"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"to"'
op|','
string|'"sip:joe@bell.example.com"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"contact"'
op|','
string|'"sip:joe@client.com:1234"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"via"'
op|','
name|'sip'
op|'.'
name|'Via'
op|'('
string|'"client.com"'
op|')'
op|'.'
name|'toString'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'datagramReceived'
op|'('
name|'r'
op|'.'
name|'toString'
op|'('
op|')'
op|','
op|'('
string|'"client.com"'
op|','
number|'5060'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|unregister
dedent|''
name|'def'
name|'unregister'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'sip'
op|'.'
name|'Request'
op|'('
string|'"REGISTER"'
op|','
string|'"sip:bell.example.com"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"to"'
op|','
string|'"sip:joe@bell.example.com"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"contact"'
op|','
string|'"*"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"via"'
op|','
name|'sip'
op|'.'
name|'Via'
op|'('
string|'"client.com"'
op|')'
op|'.'
name|'toString'
op|'('
op|')'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"expires"'
op|','
string|'"0"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'datagramReceived'
op|'('
name|'r'
op|'.'
name|'toString'
op|'('
op|')'
op|','
op|'('
string|'"client.com"'
op|','
number|'5060'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testRegister
dedent|''
name|'def'
name|'testRegister'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'register'
op|'('
op|')'
newline|'\n'
name|'dest'
op|','
name|'m'
op|'='
name|'self'
op|'.'
name|'sent'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'('
name|'dest'
op|'.'
name|'host'
op|','
name|'dest'
op|'.'
name|'port'
op|')'
op|','
op|'('
string|'"client.com"'
op|','
number|'5060'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'code'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'headers'
op|'['
string|'"via"'
op|']'
op|','
op|'['
string|'"SIP/2.0/UDP client.com:5060"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'headers'
op|'['
string|'"to"'
op|']'
op|','
op|'['
string|'"sip:joe@bell.example.com"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'headers'
op|'['
string|'"contact"'
op|']'
op|','
op|'['
string|'"sip:joe@client.com:5060"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
nl|'\n'
name|'int'
op|'('
name|'m'
op|'.'
name|'headers'
op|'['
string|'"expires"'
op|']'
op|'['
number|'0'
op|']'
op|')'
name|'in'
op|'('
number|'3600'
op|','
number|'3601'
op|','
number|'3599'
op|','
number|'3598'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'registry'
op|'.'
name|'users'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'dc'
op|','
name|'uri'
op|'='
name|'self'
op|'.'
name|'registry'
op|'.'
name|'users'
op|'['
string|'"joe"'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'uri'
op|'.'
name|'toString'
op|'('
op|')'
op|','
string|'"sip:joe@client.com:5060"'
op|')'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'locator'
op|'.'
name|'getAddress'
op|'('
name|'sip'
op|'.'
name|'URL'
op|'('
name|'username'
op|'='
string|'"joe"'
op|','
nl|'\n'
name|'host'
op|'='
string|'"bell.example.com"'
op|')'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'desturl'
op|':'
op|'('
name|'desturl'
op|'.'
name|'host'
op|','
name|'desturl'
op|'.'
name|'port'
op|')'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'assertEquals'
op|','
op|'('
string|"'client.com'"
op|','
number|'5060'
op|')'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|testUnregister
dedent|''
name|'def'
name|'testUnregister'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'register'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'unregister'
op|'('
op|')'
newline|'\n'
name|'dest'
op|','
name|'m'
op|'='
name|'self'
op|'.'
name|'sent'
op|'['
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'('
name|'dest'
op|'.'
name|'host'
op|','
name|'dest'
op|'.'
name|'port'
op|')'
op|','
op|'('
string|'"client.com"'
op|','
number|'5060'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'code'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'headers'
op|'['
string|'"via"'
op|']'
op|','
op|'['
string|'"SIP/2.0/UDP client.com:5060"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'headers'
op|'['
string|'"to"'
op|']'
op|','
op|'['
string|'"sip:joe@bell.example.com"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'headers'
op|'['
string|'"contact"'
op|']'
op|','
op|'['
string|'"sip:joe@client.com:5060"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'headers'
op|'['
string|'"expires"'
op|']'
op|','
op|'['
string|'"0"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'registry'
op|'.'
name|'users'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|addPortal
dedent|''
name|'def'
name|'addPortal'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'TestRealm'
op|'('
op|')'
newline|'\n'
name|'p'
op|'='
name|'cred'
op|'.'
name|'portal'
op|'.'
name|'Portal'
op|'('
name|'r'
op|')'
newline|'\n'
name|'c'
op|'='
name|'cred'
op|'.'
name|'checkers'
op|'.'
name|'InMemoryUsernamePasswordDatabaseDontUse'
op|'('
op|')'
newline|'\n'
name|'c'
op|'.'
name|'addUser'
op|'('
string|"'userXname@127.0.0.1'"
op|','
string|"'passXword'"
op|')'
newline|'\n'
name|'p'
op|'.'
name|'registerChecker'
op|'('
name|'c'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'portal'
op|'='
name|'p'
newline|'\n'
nl|'\n'
DECL|member|testFailedAuthentication
dedent|''
name|'def'
name|'testFailedAuthentication'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'addPortal'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'register'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'registry'
op|'.'
name|'users'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'sent'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'dest'
op|','
name|'m'
op|'='
name|'self'
op|'.'
name|'sent'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'code'
op|','
number|'401'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_basicAuthentication
dedent|''
name|'def'
name|'test_basicAuthentication'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Test that registration with basic authentication suceeds.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'addPortal'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'authorizers'
op|'='
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'authorizers'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'authorizers'
op|'['
string|"'basic'"
op|']'
op|'='
name|'sip'
op|'.'
name|'BasicAuthorizer'
op|'('
op|')'
newline|'\n'
name|'warnings'
op|'='
name|'self'
op|'.'
name|'flushWarnings'
op|'('
nl|'\n'
name|'offendingFunctions'
op|'='
op|'['
name|'self'
op|'.'
name|'test_basicAuthentication'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'warnings'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'warnings'
op|'['
number|'0'
op|']'
op|'['
string|"'message'"
op|']'
op|','
nl|'\n'
string|'"twisted.protocols.sip.BasicAuthorizer was deprecated in "'
nl|'\n'
string|'"Twisted 9.0.0"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'warnings'
op|'['
number|'0'
op|']'
op|'['
string|"'category'"
op|']'
op|','
nl|'\n'
name|'DeprecationWarning'
op|')'
newline|'\n'
name|'r'
op|'='
name|'sip'
op|'.'
name|'Request'
op|'('
string|'"REGISTER"'
op|','
string|'"sip:bell.example.com"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"to"'
op|','
string|'"sip:joe@bell.example.com"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"contact"'
op|','
string|'"sip:joe@client.com:1234"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"via"'
op|','
name|'sip'
op|'.'
name|'Via'
op|'('
string|'"client.com"'
op|')'
op|'.'
name|'toString'
op|'('
op|')'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"authorization"'
op|','
nl|'\n'
string|'"Basic "'
op|'+'
string|'"userXname:passXword"'
op|'.'
name|'encode'
op|'('
string|"'base64'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'datagramReceived'
op|'('
name|'r'
op|'.'
name|'toString'
op|'('
op|')'
op|','
op|'('
string|'"client.com"'
op|','
number|'5060'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'registry'
op|'.'
name|'users'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'sent'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'dest'
op|','
name|'m'
op|'='
name|'self'
op|'.'
name|'sent'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'code'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_failedBasicAuthentication
dedent|''
name|'def'
name|'test_failedBasicAuthentication'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Failed registration with basic authentication results in an\n        unauthorized error response.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'addPortal'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'authorizers'
op|'='
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'authorizers'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'authorizers'
op|'['
string|"'basic'"
op|']'
op|'='
name|'sip'
op|'.'
name|'BasicAuthorizer'
op|'('
op|')'
newline|'\n'
name|'warnings'
op|'='
name|'self'
op|'.'
name|'flushWarnings'
op|'('
nl|'\n'
name|'offendingFunctions'
op|'='
op|'['
name|'self'
op|'.'
name|'test_failedBasicAuthentication'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'warnings'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'warnings'
op|'['
number|'0'
op|']'
op|'['
string|"'message'"
op|']'
op|','
nl|'\n'
string|'"twisted.protocols.sip.BasicAuthorizer was deprecated in "'
nl|'\n'
string|'"Twisted 9.0.0"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'warnings'
op|'['
number|'0'
op|']'
op|'['
string|"'category'"
op|']'
op|','
nl|'\n'
name|'DeprecationWarning'
op|')'
newline|'\n'
name|'r'
op|'='
name|'sip'
op|'.'
name|'Request'
op|'('
string|'"REGISTER"'
op|','
string|'"sip:bell.example.com"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"to"'
op|','
string|'"sip:joe@bell.example.com"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"contact"'
op|','
string|'"sip:joe@client.com:1234"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"via"'
op|','
name|'sip'
op|'.'
name|'Via'
op|'('
string|'"client.com"'
op|')'
op|'.'
name|'toString'
op|'('
op|')'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
nl|'\n'
string|'"authorization"'
op|','
string|'"Basic "'
op|'+'
string|'"userXname:password"'
op|'.'
name|'encode'
op|'('
string|"'base64'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'datagramReceived'
op|'('
name|'r'
op|'.'
name|'toString'
op|'('
op|')'
op|','
op|'('
string|'"client.com"'
op|','
number|'5060'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'registry'
op|'.'
name|'users'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'sent'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'dest'
op|','
name|'m'
op|'='
name|'self'
op|'.'
name|'sent'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'code'
op|','
number|'401'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|testWrongDomainRegister
dedent|''
name|'def'
name|'testWrongDomainRegister'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'sip'
op|'.'
name|'Request'
op|'('
string|'"REGISTER"'
op|','
string|'"sip:wrong.com"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"to"'
op|','
string|'"sip:joe@bell.example.com"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"contact"'
op|','
string|'"sip:joe@client.com:1234"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"via"'
op|','
name|'sip'
op|'.'
name|'Via'
op|'('
string|'"client.com"'
op|')'
op|'.'
name|'toString'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'datagramReceived'
op|'('
name|'r'
op|'.'
name|'toString'
op|'('
op|')'
op|','
op|'('
string|'"client.com"'
op|','
number|'5060'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'sent'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testWrongToDomainRegister
dedent|''
name|'def'
name|'testWrongToDomainRegister'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'sip'
op|'.'
name|'Request'
op|'('
string|'"REGISTER"'
op|','
string|'"sip:bell.example.com"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"to"'
op|','
string|'"sip:joe@foo.com"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"contact"'
op|','
string|'"sip:joe@client.com:1234"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"via"'
op|','
name|'sip'
op|'.'
name|'Via'
op|'('
string|'"client.com"'
op|')'
op|'.'
name|'toString'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'datagramReceived'
op|'('
name|'r'
op|'.'
name|'toString'
op|'('
op|')'
op|','
op|'('
string|'"client.com"'
op|','
number|'5060'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'sent'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testWrongDomainLookup
dedent|''
name|'def'
name|'testWrongDomainLookup'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'register'
op|'('
op|')'
newline|'\n'
name|'url'
op|'='
name|'sip'
op|'.'
name|'URL'
op|'('
name|'username'
op|'='
string|'"joe"'
op|','
name|'host'
op|'='
string|'"foo.com"'
op|')'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'locator'
op|'.'
name|'getAddress'
op|'('
name|'url'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFailure'
op|'('
name|'d'
op|','
name|'LookupError'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|testNoContactLookup
dedent|''
name|'def'
name|'testNoContactLookup'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'register'
op|'('
op|')'
newline|'\n'
name|'url'
op|'='
name|'sip'
op|'.'
name|'URL'
op|'('
name|'username'
op|'='
string|'"jane"'
op|','
name|'host'
op|'='
string|'"bell.example.com"'
op|')'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'locator'
op|'.'
name|'getAddress'
op|'('
name|'url'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFailure'
op|'('
name|'d'
op|','
name|'LookupError'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Client
dedent|''
dedent|''
name|'class'
name|'Client'
op|'('
name|'sip'
op|'.'
name|'Base'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sip'
op|'.'
name|'Base'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'received'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'deferred'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|handle_response
dedent|''
name|'def'
name|'handle_response'
op|'('
name|'self'
op|','
name|'response'
op|','
name|'addr'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'received'
op|'.'
name|'append'
op|'('
name|'response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'deferred'
op|'.'
name|'callback'
op|'('
name|'self'
op|'.'
name|'received'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LiveTest
dedent|''
dedent|''
name|'class'
name|'LiveTest'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'proxy'
op|'='
name|'sip'
op|'.'
name|'RegisterProxy'
op|'('
name|'host'
op|'='
string|'"127.0.0.1"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'registry'
op|'='
name|'sip'
op|'.'
name|'InMemoryRegistry'
op|'('
string|'"bell.example.com"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'registry'
op|'='
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'locator'
op|'='
name|'self'
op|'.'
name|'registry'
newline|'\n'
name|'self'
op|'.'
name|'serverPort'
op|'='
name|'reactor'
op|'.'
name|'listenUDP'
op|'('
nl|'\n'
number|'0'
op|','
name|'self'
op|'.'
name|'proxy'
op|','
name|'interface'
op|'='
string|'"127.0.0.1"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'='
name|'Client'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'clientPort'
op|'='
name|'reactor'
op|'.'
name|'listenUDP'
op|'('
nl|'\n'
number|'0'
op|','
name|'self'
op|'.'
name|'client'
op|','
name|'interface'
op|'='
string|'"127.0.0.1"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'serverAddress'
op|'='
op|'('
name|'self'
op|'.'
name|'serverPort'
op|'.'
name|'getHost'
op|'('
op|')'
op|'.'
name|'host'
op|','
nl|'\n'
name|'self'
op|'.'
name|'serverPort'
op|'.'
name|'getHost'
op|'('
op|')'
op|'.'
name|'port'
op|')'
newline|'\n'
DECL|variable|setUp
dedent|''
name|'setUp'
op|'='
name|'utils'
op|'.'
name|'suppressWarnings'
op|'('
name|'setUp'
op|','
nl|'\n'
name|'util'
op|'.'
name|'suppress'
op|'('
name|'category'
op|'='
name|'DeprecationWarning'
op|','
nl|'\n'
name|'message'
op|'='
string|"r'twisted.protocols.sip.DigestAuthorizer was deprecated'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'d'
op|','
name|'uri'
name|'in'
name|'self'
op|'.'
name|'registry'
op|'.'
name|'users'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'.'
name|'cancel'
op|'('
op|')'
newline|'\n'
dedent|''
name|'d1'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'clientPort'
op|'.'
name|'stopListening'
op|')'
newline|'\n'
name|'d2'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'serverPort'
op|'.'
name|'stopListening'
op|')'
newline|'\n'
name|'return'
name|'defer'
op|'.'
name|'gatherResults'
op|'('
op|'['
name|'d1'
op|','
name|'d2'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testRegister
dedent|''
name|'def'
name|'testRegister'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|'='
name|'self'
op|'.'
name|'clientPort'
op|'.'
name|'getHost'
op|'('
op|')'
op|'.'
name|'port'
newline|'\n'
name|'r'
op|'='
name|'sip'
op|'.'
name|'Request'
op|'('
string|'"REGISTER"'
op|','
string|'"sip:bell.example.com"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"to"'
op|','
string|'"sip:joe@bell.example.com"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"contact"'
op|','
string|'"sip:joe@127.0.0.1:%d"'
op|'%'
name|'p'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"via"'
op|','
name|'sip'
op|'.'
name|'Via'
op|'('
string|'"127.0.0.1"'
op|','
name|'port'
op|'='
name|'p'
op|')'
op|'.'
name|'toString'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'.'
name|'sendMessage'
op|'('
nl|'\n'
name|'sip'
op|'.'
name|'URL'
op|'('
name|'host'
op|'='
string|'"127.0.0.1"'
op|','
name|'port'
op|'='
name|'self'
op|'.'
name|'serverAddress'
op|'['
number|'1'
op|']'
op|')'
op|','
name|'r'
op|')'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'deferred'
newline|'\n'
DECL|function|check
name|'def'
name|'check'
op|'('
name|'received'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'received'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'r'
op|'='
name|'received'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'r'
op|'.'
name|'code'
op|','
number|'200'
op|')'
newline|'\n'
dedent|''
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'check'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|member|test_amoralRPort
dedent|''
name|'def'
name|'test_amoralRPort'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        rport is allowed without a value, apparently because server\n        implementors might be too stupid to check the received port\n        against 5060 and see if they\'re equal, and because client\n        implementors might be too stupid to bind to port 5060, or set a\n        value on the rport parameter they send if they bind to another\n        port.\n        """'
newline|'\n'
name|'p'
op|'='
name|'self'
op|'.'
name|'clientPort'
op|'.'
name|'getHost'
op|'('
op|')'
op|'.'
name|'port'
newline|'\n'
name|'r'
op|'='
name|'sip'
op|'.'
name|'Request'
op|'('
string|'"REGISTER"'
op|','
string|'"sip:bell.example.com"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"to"'
op|','
string|'"sip:joe@bell.example.com"'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"contact"'
op|','
string|'"sip:joe@127.0.0.1:%d"'
op|'%'
name|'p'
op|')'
newline|'\n'
name|'r'
op|'.'
name|'addHeader'
op|'('
string|'"via"'
op|','
name|'sip'
op|'.'
name|'Via'
op|'('
string|'"127.0.0.1"'
op|','
name|'port'
op|'='
name|'p'
op|','
name|'rport'
op|'='
name|'True'
op|')'
op|'.'
name|'toString'
op|'('
op|')'
op|')'
newline|'\n'
name|'warnings'
op|'='
name|'self'
op|'.'
name|'flushWarnings'
op|'('
nl|'\n'
name|'offendingFunctions'
op|'='
op|'['
name|'self'
op|'.'
name|'test_amoralRPort'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'warnings'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'warnings'
op|'['
number|'0'
op|']'
op|'['
string|"'message'"
op|']'
op|','
nl|'\n'
string|"'rport=True is deprecated since Twisted 9.0.'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'warnings'
op|'['
number|'0'
op|']'
op|'['
string|"'category'"
op|']'
op|','
nl|'\n'
name|'DeprecationWarning'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'.'
name|'sendMessage'
op|'('
name|'sip'
op|'.'
name|'URL'
op|'('
name|'host'
op|'='
string|'"127.0.0.1"'
op|','
nl|'\n'
name|'port'
op|'='
name|'self'
op|'.'
name|'serverAddress'
op|'['
number|'1'
op|']'
op|')'
op|','
nl|'\n'
name|'r'
op|')'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'deferred'
newline|'\n'
DECL|function|check
name|'def'
name|'check'
op|'('
name|'received'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'received'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'r'
op|'='
name|'received'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'r'
op|'.'
name|'code'
op|','
number|'200'
op|')'
newline|'\n'
dedent|''
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'check'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'registerRequest'
op|'='
string|'"""\nREGISTER sip:intarweb.us SIP/2.0\\r\nVia: SIP/2.0/UDP 192.168.1.100:50609\\r\nFrom: <sip:exarkun@intarweb.us:50609>\\r\nTo: <sip:exarkun@intarweb.us:50609>\\r\nContact: "exarkun" <sip:exarkun@192.168.1.100:50609>\\r\nCall-ID: 94E7E5DAF39111D791C6000393764646@intarweb.us\\r\nCSeq: 9898 REGISTER\\r\nExpires: 500\\r\nUser-Agent: X-Lite build 1061\\r\nContent-Length: 0\\r\n\\r\n"""'
newline|'\n'
nl|'\n'
name|'challengeResponse'
op|'='
string|'"""\\\nSIP/2.0 401 Unauthorized\\r\nVia: SIP/2.0/UDP 192.168.1.100:50609;received=127.0.0.1;rport=5632\\r\nTo: <sip:exarkun@intarweb.us:50609>\\r\nFrom: <sip:exarkun@intarweb.us:50609>\\r\nCall-ID: 94E7E5DAF39111D791C6000393764646@intarweb.us\\r\nCSeq: 9898 REGISTER\\r\nWWW-Authenticate: Digest nonce="92956076410767313901322208775",opaque="1674186428",qop-options="auth",algorithm="MD5",realm="intarweb.us"\\r\n\\r\n"""'
newline|'\n'
nl|'\n'
name|'authRequest'
op|'='
string|'"""\\\nREGISTER sip:intarweb.us SIP/2.0\\r\nVia: SIP/2.0/UDP 192.168.1.100:50609\\r\nFrom: <sip:exarkun@intarweb.us:50609>\\r\nTo: <sip:exarkun@intarweb.us:50609>\\r\nContact: "exarkun" <sip:exarkun@192.168.1.100:50609>\\r\nCall-ID: 94E7E5DAF39111D791C6000393764646@intarweb.us\\r\nCSeq: 9899 REGISTER\\r\nExpires: 500\\r\nAuthorization: Digest username="exarkun",realm="intarweb.us",nonce="92956076410767313901322208775",response="4a47980eea31694f997369214292374b",uri="sip:intarweb.us",algorithm=MD5,opaque="1674186428"\\r\nUser-Agent: X-Lite build 1061\\r\nContent-Length: 0\\r\n\\r\n"""'
newline|'\n'
nl|'\n'
name|'okResponse'
op|'='
string|'"""\\\nSIP/2.0 200 OK\\r\nVia: SIP/2.0/UDP 192.168.1.100:50609;received=127.0.0.1;rport=5632\\r\nTo: <sip:exarkun@intarweb.us:50609>\\r\nFrom: <sip:exarkun@intarweb.us:50609>\\r\nCall-ID: 94E7E5DAF39111D791C6000393764646@intarweb.us\\r\nCSeq: 9899 REGISTER\\r\nContact: sip:exarkun@127.0.0.1:5632\\r\nExpires: 3600\\r\nContent-Length: 0\\r\n\\r\n"""'
newline|'\n'
nl|'\n'
DECL|class|FakeDigestAuthorizer
name|'class'
name|'FakeDigestAuthorizer'
op|'('
name|'sip'
op|'.'
name|'DigestAuthorizer'
op|')'
op|':'
newline|'\n'
DECL|member|generateNonce
indent|'    '
name|'def'
name|'generateNonce'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'92956076410767313901322208775'"
newline|'\n'
DECL|member|generateOpaque
dedent|''
name|'def'
name|'generateOpaque'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'1674186428'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeRegistry
dedent|''
dedent|''
name|'class'
name|'FakeRegistry'
op|'('
name|'sip'
op|'.'
name|'InMemoryRegistry'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Make sure expiration is always seen to be 3600.\n\n    Otherwise slow reactors fail tests incorrectly.\n    """'
newline|'\n'
nl|'\n'
DECL|member|_cbReg
name|'def'
name|'_cbReg'
op|'('
name|'self'
op|','
name|'reg'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
number|'3600'
op|'<'
name|'reg'
op|'.'
name|'secondsToExpiry'
name|'or'
name|'reg'
op|'.'
name|'secondsToExpiry'
op|'<'
number|'3598'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'RuntimeError'
op|'('
nl|'\n'
string|'"bad seconds to expire: %s"'
op|'%'
name|'reg'
op|'.'
name|'secondsToExpiry'
op|')'
newline|'\n'
dedent|''
name|'reg'
op|'.'
name|'secondsToExpiry'
op|'='
number|'3600'
newline|'\n'
name|'return'
name|'reg'
newline|'\n'
nl|'\n'
DECL|member|getRegistrationInfo
dedent|''
name|'def'
name|'getRegistrationInfo'
op|'('
name|'self'
op|','
name|'uri'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'sip'
op|'.'
name|'InMemoryRegistry'
op|'.'
name|'getRegistrationInfo'
op|'('
name|'self'
op|','
name|'uri'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbReg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|registerAddress
dedent|''
name|'def'
name|'registerAddress'
op|'('
name|'self'
op|','
name|'domainURL'
op|','
name|'logicalURL'
op|','
name|'physicalURL'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'sip'
op|'.'
name|'InMemoryRegistry'
op|'.'
name|'registerAddress'
op|'('
nl|'\n'
name|'self'
op|','
name|'domainURL'
op|','
name|'logicalURL'
op|','
name|'physicalURL'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbReg'
op|')'
newline|'\n'
nl|'\n'
DECL|class|AuthorizationTestCase
dedent|''
dedent|''
name|'class'
name|'AuthorizationTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'proxy'
op|'='
name|'sip'
op|'.'
name|'RegisterProxy'
op|'('
name|'host'
op|'='
string|'"intarweb.us"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'authorizers'
op|'='
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'authorizers'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'authorizers'
op|'['
string|"'digest'"
op|']'
op|'='
name|'FakeDigestAuthorizer'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'registry'
op|'='
name|'FakeRegistry'
op|'('
string|'"intarweb.us"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'registry'
op|'='
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'locator'
op|'='
name|'self'
op|'.'
name|'registry'
newline|'\n'
name|'self'
op|'.'
name|'transport'
op|'='
name|'proto_helpers'
op|'.'
name|'FakeDatagramTransport'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'transport'
op|'='
name|'self'
op|'.'
name|'transport'
newline|'\n'
nl|'\n'
name|'r'
op|'='
name|'TestRealm'
op|'('
op|')'
newline|'\n'
name|'p'
op|'='
name|'cred'
op|'.'
name|'portal'
op|'.'
name|'Portal'
op|'('
name|'r'
op|')'
newline|'\n'
name|'c'
op|'='
name|'cred'
op|'.'
name|'checkers'
op|'.'
name|'InMemoryUsernamePasswordDatabaseDontUse'
op|'('
op|')'
newline|'\n'
name|'c'
op|'.'
name|'addUser'
op|'('
string|"'exarkun@intarweb.us'"
op|','
string|"'password'"
op|')'
newline|'\n'
name|'p'
op|'.'
name|'registerChecker'
op|'('
name|'c'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'portal'
op|'='
name|'p'
newline|'\n'
DECL|variable|setUp
dedent|''
name|'setUp'
op|'='
name|'utils'
op|'.'
name|'suppressWarnings'
op|'('
name|'setUp'
op|','
nl|'\n'
name|'util'
op|'.'
name|'suppress'
op|'('
name|'category'
op|'='
name|'DeprecationWarning'
op|','
nl|'\n'
name|'message'
op|'='
string|"r'twisted.protocols.sip.DigestAuthorizer was deprecated'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'d'
op|','
name|'uri'
name|'in'
name|'self'
op|'.'
name|'registry'
op|'.'
name|'users'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'.'
name|'cancel'
op|'('
op|')'
newline|'\n'
dedent|''
name|'del'
name|'self'
op|'.'
name|'proxy'
newline|'\n'
nl|'\n'
DECL|member|testChallenge
dedent|''
name|'def'
name|'testChallenge'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'datagramReceived'
op|'('
name|'registerRequest'
op|','
op|'('
string|'"127.0.0.1"'
op|','
number|'5632'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'written'
op|'['
op|'-'
number|'1'
op|']'
op|','
nl|'\n'
op|'('
op|'('
name|'challengeResponse'
op|','
op|'('
string|'"127.0.0.1"'
op|','
number|'5632'
op|')'
op|')'
op|')'
nl|'\n'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'written'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'proxy'
op|'.'
name|'datagramReceived'
op|'('
name|'authRequest'
op|','
op|'('
string|'"127.0.0.1"'
op|','
number|'5632'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'written'
op|'['
op|'-'
number|'1'
op|']'
op|','
nl|'\n'
op|'('
op|'('
name|'okResponse'
op|','
op|'('
string|'"127.0.0.1"'
op|','
number|'5632'
op|')'
op|')'
op|')'
nl|'\n'
op|')'
newline|'\n'
dedent|''
name|'testChallenge'
op|'.'
name|'suppress'
op|'='
op|'['
nl|'\n'
name|'util'
op|'.'
name|'suppress'
op|'('
nl|'\n'
name|'category'
op|'='
name|'DeprecationWarning'
op|','
nl|'\n'
name|'message'
op|'='
string|"r'twisted.protocols.sip.DigestAuthorizer was deprecated'"
op|')'
op|','
nl|'\n'
name|'util'
op|'.'
name|'suppress'
op|'('
nl|'\n'
name|'category'
op|'='
name|'DeprecationWarning'
op|','
nl|'\n'
name|'message'
op|'='
string|"r'twisted.protocols.sip.DigestedCredentials was deprecated'"
op|')'
op|','
nl|'\n'
name|'util'
op|'.'
name|'suppress'
op|'('
nl|'\n'
name|'category'
op|'='
name|'DeprecationWarning'
op|','
nl|'\n'
name|'message'
op|'='
string|"r'twisted.protocols.sip.DigestCalcHA1 was deprecated'"
op|')'
op|','
nl|'\n'
name|'util'
op|'.'
name|'suppress'
op|'('
nl|'\n'
name|'category'
op|'='
name|'DeprecationWarning'
op|','
nl|'\n'
name|'message'
op|'='
string|"r'twisted.protocols.sip.DigestCalcResponse was deprecated'"
op|')'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|DeprecationTests
dedent|''
name|'class'
name|'DeprecationTests'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Tests for deprecation of obsolete components of L{twisted.protocols.sip}.\n    """'
newline|'\n'
nl|'\n'
DECL|member|test_deprecatedDigestCalcHA1
name|'def'
name|'test_deprecatedDigestCalcHA1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        L{sip.DigestCalcHA1} is deprecated.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'callDeprecated'
op|'('
name|'Version'
op|'('
string|'"Twisted"'
op|','
number|'9'
op|','
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
name|'sip'
op|'.'
name|'DigestCalcHA1'
op|','
string|"''"
op|','
string|"''"
op|','
string|"''"
op|','
string|"''"
op|','
string|"''"
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_deprecatedDigestCalcResponse
dedent|''
name|'def'
name|'test_deprecatedDigestCalcResponse'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        L{sip.DigestCalcResponse} is deprecated.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'callDeprecated'
op|'('
name|'Version'
op|'('
string|'"Twisted"'
op|','
number|'9'
op|','
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
name|'sip'
op|'.'
name|'DigestCalcResponse'
op|','
string|"''"
op|','
string|"''"
op|','
string|"''"
op|','
string|"''"
op|','
string|"''"
op|','
string|"''"
op|','
string|"''"
op|','
nl|'\n'
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_deprecatedBasicAuthorizer
dedent|''
name|'def'
name|'test_deprecatedBasicAuthorizer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        L{sip.BasicAuthorizer} is deprecated.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'callDeprecated'
op|'('
name|'Version'
op|'('
string|'"Twisted"'
op|','
number|'9'
op|','
number|'0'
op|','
number|'0'
op|')'
op|','
name|'sip'
op|'.'
name|'BasicAuthorizer'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_deprecatedDigestAuthorizer
dedent|''
name|'def'
name|'test_deprecatedDigestAuthorizer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        L{sip.DigestAuthorizer} is deprecated.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'callDeprecated'
op|'('
name|'Version'
op|'('
string|'"Twisted"'
op|','
number|'9'
op|','
number|'0'
op|','
number|'0'
op|')'
op|','
name|'sip'
op|'.'
name|'DigestAuthorizer'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_deprecatedDigestedCredentials
dedent|''
name|'def'
name|'test_deprecatedDigestedCredentials'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        L{sip.DigestedCredentials} is deprecated.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'callDeprecated'
op|'('
name|'Version'
op|'('
string|'"Twisted"'
op|','
number|'9'
op|','
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
name|'sip'
op|'.'
name|'DigestedCredentials'
op|','
string|"''"
op|','
op|'{'
op|'}'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
