begin_unit
comment|'# Copyright (c) 2001-2007 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""\nTest cases for twisted.protocols.ident module.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'struct'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'protocols'
name|'import'
name|'ident'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'failure'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'error'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'defer'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'test'
op|'.'
name|'proto_helpers'
name|'import'
name|'StringTransport'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|ClassParserTestCase
name|'class'
name|'ClassParserTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Test parsing of ident responses.\n    """'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create a ident client used in tests.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'='
name|'ident'
op|'.'
name|'IdentClient'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_indentError
dedent|''
name|'def'
name|'test_indentError'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        \'UNKNOWN-ERROR\' error should map to the L{ident.IdentError} exception.\n        """'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'.'
name|'queries'
op|'.'
name|'append'
op|'('
op|'('
name|'d'
op|','
number|'123'
op|','
number|'456'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'.'
name|'lineReceived'
op|'('
string|"'123, 456 : ERROR : UNKNOWN-ERROR'"
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'assertFailure'
op|'('
name|'d'
op|','
name|'ident'
op|'.'
name|'IdentError'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_noUSerError
dedent|''
name|'def'
name|'test_noUSerError'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        \'NO-USER\' error should map to the L{ident.NoUser} exception.\n        """'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'.'
name|'queries'
op|'.'
name|'append'
op|'('
op|'('
name|'d'
op|','
number|'234'
op|','
number|'456'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'.'
name|'lineReceived'
op|'('
string|"'234, 456 : ERROR : NO-USER'"
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'assertFailure'
op|'('
name|'d'
op|','
name|'ident'
op|'.'
name|'NoUser'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_invalidPortError
dedent|''
name|'def'
name|'test_invalidPortError'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        \'INVALID-PORT\' error should map to the L{ident.InvalidPort} exception.\n        """'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'.'
name|'queries'
op|'.'
name|'append'
op|'('
op|'('
name|'d'
op|','
number|'345'
op|','
number|'567'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'.'
name|'lineReceived'
op|'('
string|"'345, 567 :  ERROR : INVALID-PORT'"
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'assertFailure'
op|'('
name|'d'
op|','
name|'ident'
op|'.'
name|'InvalidPort'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_hiddenUserError
dedent|''
name|'def'
name|'test_hiddenUserError'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        \'HIDDEN-USER\' error should map to the L{ident.HiddenUser} exception.\n        """'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'.'
name|'queries'
op|'.'
name|'append'
op|'('
op|'('
name|'d'
op|','
number|'567'
op|','
number|'789'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'.'
name|'lineReceived'
op|'('
string|"'567, 789 : ERROR : HIDDEN-USER'"
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'assertFailure'
op|'('
name|'d'
op|','
name|'ident'
op|'.'
name|'HiddenUser'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_lostConnection
dedent|''
name|'def'
name|'test_lostConnection'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A pending query which failed because of a ConnectionLost should\n        receive an L{ident.IdentError}.\n        """'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'.'
name|'queries'
op|'.'
name|'append'
op|'('
op|'('
name|'d'
op|','
number|'765'
op|','
number|'432'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'.'
name|'connectionLost'
op|'('
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'error'
op|'.'
name|'ConnectionLost'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'assertFailure'
op|'('
name|'d'
op|','
name|'ident'
op|'.'
name|'IdentError'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestIdentServer
dedent|''
dedent|''
name|'class'
name|'TestIdentServer'
op|'('
name|'ident'
op|'.'
name|'IdentServer'
op|')'
op|':'
newline|'\n'
DECL|member|lookup
indent|'    '
name|'def'
name|'lookup'
op|'('
name|'self'
op|','
name|'serverAddress'
op|','
name|'clientAddress'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'resultValue'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestErrorIdentServer
dedent|''
dedent|''
name|'class'
name|'TestErrorIdentServer'
op|'('
name|'ident'
op|'.'
name|'IdentServer'
op|')'
op|':'
newline|'\n'
DECL|member|lookup
indent|'    '
name|'def'
name|'lookup'
op|'('
name|'self'
op|','
name|'serverAddress'
op|','
name|'clientAddress'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'self'
op|'.'
name|'exceptionType'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NewException
dedent|''
dedent|''
name|'class'
name|'NewException'
op|'('
name|'RuntimeError'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerParserTestCase
dedent|''
name|'class'
name|'ServerParserTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|testErrors
indent|'    '
name|'def'
name|'testErrors'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|'='
name|'TestErrorIdentServer'
op|'('
op|')'
newline|'\n'
name|'p'
op|'.'
name|'makeConnection'
op|'('
name|'StringTransport'
op|'('
op|')'
op|')'
newline|'\n'
name|'L'
op|'='
op|'['
op|']'
newline|'\n'
name|'p'
op|'.'
name|'sendLine'
op|'='
name|'L'
op|'.'
name|'append'
newline|'\n'
nl|'\n'
name|'p'
op|'.'
name|'exceptionType'
op|'='
name|'ident'
op|'.'
name|'IdentError'
newline|'\n'
name|'p'
op|'.'
name|'lineReceived'
op|'('
string|"'123, 345'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'L'
op|'['
number|'0'
op|']'
op|','
string|"'123, 345 : ERROR : UNKNOWN-ERROR'"
op|')'
newline|'\n'
nl|'\n'
name|'p'
op|'.'
name|'exceptionType'
op|'='
name|'ident'
op|'.'
name|'NoUser'
newline|'\n'
name|'p'
op|'.'
name|'lineReceived'
op|'('
string|"'432, 210'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'L'
op|'['
number|'1'
op|']'
op|','
string|"'432, 210 : ERROR : NO-USER'"
op|')'
newline|'\n'
nl|'\n'
name|'p'
op|'.'
name|'exceptionType'
op|'='
name|'ident'
op|'.'
name|'InvalidPort'
newline|'\n'
name|'p'
op|'.'
name|'lineReceived'
op|'('
string|"'987, 654'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'L'
op|'['
number|'2'
op|']'
op|','
string|"'987, 654 : ERROR : INVALID-PORT'"
op|')'
newline|'\n'
nl|'\n'
name|'p'
op|'.'
name|'exceptionType'
op|'='
name|'ident'
op|'.'
name|'HiddenUser'
newline|'\n'
name|'p'
op|'.'
name|'lineReceived'
op|'('
string|"'756, 827'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'L'
op|'['
number|'3'
op|']'
op|','
string|"'756, 827 : ERROR : HIDDEN-USER'"
op|')'
newline|'\n'
nl|'\n'
name|'p'
op|'.'
name|'exceptionType'
op|'='
name|'NewException'
newline|'\n'
name|'p'
op|'.'
name|'lineReceived'
op|'('
string|"'987, 789'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'L'
op|'['
number|'4'
op|']'
op|','
string|"'987, 789 : ERROR : UNKNOWN-ERROR'"
op|')'
newline|'\n'
name|'errs'
op|'='
name|'self'
op|'.'
name|'flushLoggedErrors'
op|'('
name|'NewException'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'errs'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'port'
name|'in'
op|'-'
number|'1'
op|','
number|'0'
op|','
number|'65536'
op|','
number|'65537'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'L'
op|'['
op|':'
op|']'
newline|'\n'
name|'p'
op|'.'
name|'lineReceived'
op|'('
string|"'%d, 5'"
op|'%'
op|'('
name|'port'
op|','
op|')'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'lineReceived'
op|'('
string|"'5, %d'"
op|'%'
op|'('
name|'port'
op|','
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'L'
op|','
op|'['
string|"'%d, 5 : ERROR : INVALID-PORT'"
op|'%'
op|'('
name|'port'
op|','
op|')'
op|','
nl|'\n'
string|"'5, %d : ERROR : INVALID-PORT'"
op|'%'
op|'('
name|'port'
op|','
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testSuccess
dedent|''
dedent|''
name|'def'
name|'testSuccess'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|'='
name|'TestIdentServer'
op|'('
op|')'
newline|'\n'
name|'p'
op|'.'
name|'makeConnection'
op|'('
name|'StringTransport'
op|'('
op|')'
op|')'
newline|'\n'
name|'L'
op|'='
op|'['
op|']'
newline|'\n'
name|'p'
op|'.'
name|'sendLine'
op|'='
name|'L'
op|'.'
name|'append'
newline|'\n'
nl|'\n'
name|'p'
op|'.'
name|'resultValue'
op|'='
op|'('
string|"'SYS'"
op|','
string|"'USER'"
op|')'
newline|'\n'
name|'p'
op|'.'
name|'lineReceived'
op|'('
string|"'123, 456'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'L'
op|'['
number|'0'
op|']'
op|','
string|"'123, 456 : USERID : SYS : USER'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'=L'"
op|','
number|'1'
op|')'
op|'['
number|'0'
op|']'
op|'=='
string|"'\\x01'"
op|':'
newline|'\n'
DECL|variable|_addr1
indent|'    '
name|'_addr1'
op|'='
string|"'0100007F'"
newline|'\n'
DECL|variable|_addr2
name|'_addr2'
op|'='
string|"'04030201'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
DECL|variable|_addr1
indent|'    '
name|'_addr1'
op|'='
string|"'7F000001'"
newline|'\n'
DECL|variable|_addr2
name|'_addr2'
op|'='
string|"'01020304'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ProcMixinTestCase
dedent|''
name|'class'
name|'ProcMixinTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|line
indent|'    '
name|'line'
op|'='
op|'('
string|"'4: %s:0019 %s:02FA 0A 00000000:00000000 '"
nl|'\n'
string|"'00:00000000 00000000     0        0 10927 1 f72a5b80 '"
nl|'\n'
string|"'3000 0 0 2 -1'"
op|')'
op|'%'
op|'('
name|'_addr1'
op|','
name|'_addr2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testDottedQuadFromHexString
name|'def'
name|'testDottedQuadFromHexString'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|'='
name|'ident'
op|'.'
name|'ProcServerMixin'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'p'
op|'.'
name|'dottedQuadFromHexString'
op|'('
name|'_addr1'
op|')'
op|','
string|"'127.0.0.1'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|testUnpackAddress
dedent|''
name|'def'
name|'testUnpackAddress'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|'='
name|'ident'
op|'.'
name|'ProcServerMixin'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'p'
op|'.'
name|'unpackAddress'
op|'('
name|'_addr1'
op|'+'
string|"':0277'"
op|')'
op|','
nl|'\n'
op|'('
string|"'127.0.0.1'"
op|','
number|'631'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testLineParser
dedent|''
name|'def'
name|'testLineParser'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|'='
name|'ident'
op|'.'
name|'ProcServerMixin'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'p'
op|'.'
name|'parseLine'
op|'('
name|'self'
op|'.'
name|'line'
op|')'
op|','
nl|'\n'
op|'('
op|'('
string|"'127.0.0.1'"
op|','
number|'25'
op|')'
op|','
op|'('
string|"'1.2.3.4'"
op|','
number|'762'
op|')'
op|','
number|'0'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testExistingAddress
dedent|''
name|'def'
name|'testExistingAddress'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'username'
op|'='
op|'['
op|']'
newline|'\n'
name|'p'
op|'='
name|'ident'
op|'.'
name|'ProcServerMixin'
op|'('
op|')'
newline|'\n'
name|'p'
op|'.'
name|'entries'
op|'='
name|'lambda'
op|':'
name|'iter'
op|'('
op|'['
name|'self'
op|'.'
name|'line'
op|']'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'getUsername'
op|'='
name|'lambda'
name|'uid'
op|':'
op|'('
name|'username'
op|'.'
name|'append'
op|'('
name|'uid'
op|')'
op|','
string|"'root'"
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'p'
op|'.'
name|'lookup'
op|'('
op|'('
string|"'127.0.0.1'"
op|','
number|'25'
op|')'
op|','
op|'('
string|"'1.2.3.4'"
op|','
number|'762'
op|')'
op|')'
op|','
nl|'\n'
op|'('
name|'p'
op|'.'
name|'SYSTEM_NAME'
op|','
string|"'root'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'username'
op|','
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testNonExistingAddress
dedent|''
name|'def'
name|'testNonExistingAddress'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|'='
name|'ident'
op|'.'
name|'ProcServerMixin'
op|'('
op|')'
newline|'\n'
name|'p'
op|'.'
name|'entries'
op|'='
name|'lambda'
op|':'
name|'iter'
op|'('
op|'['
name|'self'
op|'.'
name|'line'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ident'
op|'.'
name|'NoUser'
op|','
name|'p'
op|'.'
name|'lookup'
op|','
op|'('
string|"'127.0.0.1'"
op|','
number|'26'
op|')'
op|','
nl|'\n'
op|'('
string|"'1.2.3.4'"
op|','
number|'762'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ident'
op|'.'
name|'NoUser'
op|','
name|'p'
op|'.'
name|'lookup'
op|','
op|'('
string|"'127.0.0.1'"
op|','
number|'25'
op|')'
op|','
nl|'\n'
op|'('
string|"'1.2.3.5'"
op|','
number|'762'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ident'
op|'.'
name|'NoUser'
op|','
name|'p'
op|'.'
name|'lookup'
op|','
op|'('
string|"'127.0.0.1'"
op|','
number|'25'
op|')'
op|','
nl|'\n'
op|'('
string|"'1.2.3.4'"
op|','
number|'763'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
