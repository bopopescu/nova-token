begin_unit
comment|'# Copyright (c) 2001-2007 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""\nTest cases for twisted.protocols.stateful\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'test'
name|'import'
name|'test_protocols'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'protocols'
op|'.'
name|'stateful'
name|'import'
name|'StatefulProtocol'
newline|'\n'
nl|'\n'
name|'from'
name|'struct'
name|'import'
name|'pack'
op|','
name|'unpack'
op|','
name|'calcsize'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MyInt32StringReceiver
name|'class'
name|'MyInt32StringReceiver'
op|'('
name|'StatefulProtocol'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A stateful Int32StringReceiver.\n    """'
newline|'\n'
DECL|variable|MAX_LENGTH
name|'MAX_LENGTH'
op|'='
number|'99999'
newline|'\n'
DECL|variable|structFormat
name|'structFormat'
op|'='
string|'"!I"'
newline|'\n'
DECL|variable|prefixLength
name|'prefixLength'
op|'='
name|'calcsize'
op|'('
name|'structFormat'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getInitialState
name|'def'
name|'getInitialState'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_getHeader'
op|','
number|'4'
newline|'\n'
nl|'\n'
DECL|member|lengthLimitExceeded
dedent|''
name|'def'
name|'lengthLimitExceeded'
op|'('
name|'self'
op|','
name|'length'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_getHeader
dedent|''
name|'def'
name|'_getHeader'
op|'('
name|'self'
op|','
name|'msg'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'length'
op|','
op|'='
name|'unpack'
op|'('
string|'"!i"'
op|','
name|'msg'
op|')'
newline|'\n'
name|'if'
name|'length'
op|'>'
name|'self'
op|'.'
name|'MAX_LENGTH'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'lengthLimitExceeded'
op|'('
name|'length'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_getString'
op|','
name|'length'
newline|'\n'
nl|'\n'
DECL|member|_getString
dedent|''
name|'def'
name|'_getString'
op|'('
name|'self'
op|','
name|'msg'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stringReceived'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_getHeader'
op|','
number|'4'
newline|'\n'
nl|'\n'
DECL|member|stringReceived
dedent|''
name|'def'
name|'stringReceived'
op|'('
name|'self'
op|','
name|'msg'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Override this.\n        """'
newline|'\n'
name|'raise'
name|'NotImplementedError'
newline|'\n'
nl|'\n'
DECL|member|sendString
dedent|''
name|'def'
name|'sendString'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Send an int32-prefixed string to the other end of the connection.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
name|'pack'
op|'('
name|'self'
op|'.'
name|'structFormat'
op|','
name|'len'
op|'('
name|'data'
op|')'
op|')'
op|'+'
name|'data'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestInt32
dedent|''
dedent|''
name|'class'
name|'TestInt32'
op|'('
name|'MyInt32StringReceiver'
op|')'
op|':'
newline|'\n'
DECL|member|connectionMade
indent|'    '
name|'def'
name|'connectionMade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'received'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|stringReceived
dedent|''
name|'def'
name|'stringReceived'
op|'('
name|'self'
op|','
name|'s'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'received'
op|'.'
name|'append'
op|'('
name|'s'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|MAX_LENGTH
dedent|''
name|'MAX_LENGTH'
op|'='
number|'50'
newline|'\n'
DECL|variable|closed
name|'closed'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|connectionLost
name|'def'
name|'connectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'closed'
op|'='
number|'1'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Int32TestCase
dedent|''
dedent|''
name|'class'
name|'Int32TestCase'
op|'('
name|'test_protocols'
op|'.'
name|'Int32TestCase'
op|')'
op|':'
newline|'\n'
DECL|variable|protocol
indent|'    '
name|'protocol'
op|'='
name|'TestInt32'
newline|'\n'
nl|'\n'
DECL|member|test_bigReceive
name|'def'
name|'test_bigReceive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'self'
op|'.'
name|'getProtocol'
op|'('
op|')'
newline|'\n'
name|'big'
op|'='
string|'""'
newline|'\n'
name|'for'
name|'s'
name|'in'
name|'self'
op|'.'
name|'strings'
op|'*'
number|'4'
op|':'
newline|'\n'
indent|'            '
name|'big'
op|'+='
name|'pack'
op|'('
string|'"!i"'
op|','
name|'len'
op|'('
name|'s'
op|')'
op|')'
op|'+'
name|'s'
newline|'\n'
dedent|''
name|'r'
op|'.'
name|'dataReceived'
op|'('
name|'big'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'r'
op|'.'
name|'received'
op|','
name|'self'
op|'.'
name|'strings'
op|'*'
number|'4'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
