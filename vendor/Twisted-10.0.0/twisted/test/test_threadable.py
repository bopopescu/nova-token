begin_unit
comment|'# Copyright (c) 2001-2004 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
name|'import'
name|'sys'
op|','
name|'pickle'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'threading'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
DECL|variable|threading
indent|'    '
name|'threading'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'from'
name|'twisted'
op|'.'
name|'trial'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'threadable'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'defer'
op|','
name|'reactor'
newline|'\n'
nl|'\n'
DECL|class|TestObject
name|'class'
name|'TestObject'
op|':'
newline|'\n'
DECL|variable|synchronized
indent|'    '
name|'synchronized'
op|'='
op|'['
string|"'aMethod'"
op|']'
newline|'\n'
nl|'\n'
DECL|variable|x
name|'x'
op|'='
op|'-'
number|'1'
newline|'\n'
DECL|variable|y
name|'y'
op|'='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|aMethod
name|'def'
name|'aMethod'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'x'
op|','
name|'self'
op|'.'
name|'y'
op|'='
name|'self'
op|'.'
name|'y'
op|','
name|'self'
op|'.'
name|'x'
newline|'\n'
name|'self'
op|'.'
name|'z'
op|'='
name|'self'
op|'.'
name|'x'
op|'+'
name|'self'
op|'.'
name|'y'
newline|'\n'
name|'assert'
name|'self'
op|'.'
name|'z'
op|'=='
number|'0'
op|','
string|'"z == %d, not 0 as expected"'
op|'%'
op|'('
name|'self'
op|'.'
name|'z'
op|','
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'threadable'
op|'.'
name|'synchronize'
op|'('
name|'TestObject'
op|')'
newline|'\n'
nl|'\n'
DECL|class|SynchronizationTestCase
name|'class'
name|'SynchronizationTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Reduce the CPython check interval so that thread switches happen much\n        more often, hopefully exercising more possible race conditions.  Also,\n        delay actual test startup until the reactor has been started.\n        """'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'sys'
op|','
string|"'getcheckinterval'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'sys'
op|'.'
name|'setcheckinterval'
op|','
name|'sys'
op|'.'
name|'getcheckinterval'
op|'('
op|')'
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'setcheckinterval'
op|'('
number|'7'
op|')'
newline|'\n'
comment|'# XXX This is a trial hack.  We need to make sure the reactor'
nl|'\n'
comment|'# actually *starts* for isInIOThread() to have a meaningful result.'
nl|'\n'
comment|'# Returning a Deferred here should force that to happen, if it has'
nl|'\n'
comment|'# not happened already.  In the future, this should not be'
nl|'\n'
comment|'# necessary.'
nl|'\n'
dedent|''
name|'d'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'reactor'
op|'.'
name|'callLater'
op|'('
number|'0'
op|','
name|'d'
op|'.'
name|'callback'
op|','
name|'None'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|testIsInIOThread
dedent|''
name|'def'
name|'testIsInIOThread'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'foreignResult'
op|'='
op|'['
op|']'
newline|'\n'
name|'t'
op|'='
name|'threading'
op|'.'
name|'Thread'
op|'('
name|'target'
op|'='
name|'lambda'
op|':'
name|'foreignResult'
op|'.'
name|'append'
op|'('
name|'threadable'
op|'.'
name|'isInIOThread'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'t'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'t'
op|'.'
name|'join'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failIf'
op|'('
name|'foreignResult'
op|'['
number|'0'
op|']'
op|','
string|'"Non-IO thread reported as IO thread"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'threadable'
op|'.'
name|'isInIOThread'
op|'('
op|')'
op|','
string|'"IO thread reported as not IO thread"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|testThreadedSynchronization
dedent|''
name|'def'
name|'testThreadedSynchronization'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'o'
op|'='
name|'TestObject'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'errors'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|callMethodLots
name|'def'
name|'callMethodLots'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
number|'1000'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'o'
op|'.'
name|'aMethod'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'AssertionError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'errors'
op|'.'
name|'append'
op|'('
name|'str'
op|'('
name|'e'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'threads'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'range'
op|'('
number|'5'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'t'
op|'='
name|'threading'
op|'.'
name|'Thread'
op|'('
name|'target'
op|'='
name|'callMethodLots'
op|')'
newline|'\n'
name|'threads'
op|'.'
name|'append'
op|'('
name|'t'
op|')'
newline|'\n'
name|'t'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'t'
name|'in'
name|'threads'
op|':'
newline|'\n'
indent|'            '
name|'t'
op|'.'
name|'join'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'errors'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'unittest'
op|'.'
name|'FailTest'
op|'('
name|'errors'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testUnthreadedSynchronization
dedent|''
dedent|''
name|'def'
name|'testUnthreadedSynchronization'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'o'
op|'='
name|'TestObject'
op|'('
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
number|'1000'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'o'
op|'.'
name|'aMethod'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|class|SerializationTestCase
dedent|''
dedent|''
dedent|''
name|'class'
name|'SerializationTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|testPickling
indent|'    '
name|'def'
name|'testPickling'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'lock'
op|'='
name|'threadable'
op|'.'
name|'XLock'
op|'('
op|')'
newline|'\n'
name|'lockType'
op|'='
name|'type'
op|'('
name|'lock'
op|')'
newline|'\n'
name|'lockPickle'
op|'='
name|'pickle'
op|'.'
name|'dumps'
op|'('
name|'lock'
op|')'
newline|'\n'
name|'newLock'
op|'='
name|'pickle'
op|'.'
name|'loads'
op|'('
name|'lockPickle'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failUnless'
op|'('
name|'isinstance'
op|'('
name|'newLock'
op|','
name|'lockType'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testUnpickling
dedent|''
name|'def'
name|'testUnpickling'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'lockPickle'
op|'='
string|"'ctwisted.python.threadable\\nunpickle_lock\\np0\\n(tp1\\nRp2\\n.'"
newline|'\n'
name|'lock'
op|'='
name|'pickle'
op|'.'
name|'loads'
op|'('
name|'lockPickle'
op|')'
newline|'\n'
name|'newPickle'
op|'='
name|'pickle'
op|'.'
name|'dumps'
op|'('
name|'lock'
op|','
number|'2'
op|')'
newline|'\n'
name|'newLock'
op|'='
name|'pickle'
op|'.'
name|'loads'
op|'('
name|'newPickle'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'threading'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'    '
name|'SynchronizationTestCase'
op|'.'
name|'testThreadedSynchronization'
op|'.'
name|'skip'
op|'='
string|'"Platform lacks thread support"'
newline|'\n'
name|'SerializationTestCase'
op|'.'
name|'testPickling'
op|'.'
name|'skip'
op|'='
string|'"Platform lacks thread support"'
newline|'\n'
dedent|''
endmarker|''
end_unit
