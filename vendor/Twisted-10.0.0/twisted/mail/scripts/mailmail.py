begin_unit
comment|'# -*- test-case-name: twisted.mail.test.test_mailmail -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nImplementation module for the I{mailmail} command.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'rfc822'
newline|'\n'
name|'import'
name|'getpass'
newline|'\n'
name|'from'
name|'ConfigParser'
name|'import'
name|'ConfigParser'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'cStringIO'
name|'as'
name|'StringIO'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'StringIO'
newline|'\n'
nl|'\n'
dedent|''
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'mail'
name|'import'
name|'smtp'
newline|'\n'
nl|'\n'
DECL|variable|GLOBAL_CFG
name|'GLOBAL_CFG'
op|'='
string|'"/etc/mailmail"'
newline|'\n'
DECL|variable|LOCAL_CFG
name|'LOCAL_CFG'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'expanduser'
op|'('
string|'"~/.twisted/mailmail"'
op|')'
newline|'\n'
DECL|variable|SMARTHOST
name|'SMARTHOST'
op|'='
string|"'127.0.0.1'"
newline|'\n'
nl|'\n'
name|'ERROR_FMT'
op|'='
string|'"""\\\nSubject: Failed Message Delivery\n\n  Message delivery failed.  The following occurred:\n\n  %s\n--\nThe Twisted sendmail application.\n"""'
newline|'\n'
nl|'\n'
DECL|function|log
name|'def'
name|'log'
op|'('
name|'message'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'sys'
op|'.'
name|'stderr'
op|'.'
name|'write'
op|'('
name|'str'
op|'('
name|'message'
op|')'
op|'%'
name|'args'
op|'+'
string|"'\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|class|Options
dedent|''
name|'class'
name|'Options'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    @type to: C{list} of C{str}\n    @ivar to: The addresses to which to deliver this message.\n\n    @type sender: C{str}\n    @ivar sender: The address from which this message is being sent.\n\n    @type body: C{file}\n    @ivar body: The object from which the message is to be read.\n    """'
newline|'\n'
nl|'\n'
DECL|function|getlogin
dedent|''
name|'def'
name|'getlogin'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'os'
op|'.'
name|'getlogin'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'getpass'
op|'.'
name|'getuser'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|_unsupportedOption
dedent|''
dedent|''
name|'_unsupportedOption'
op|'='
name|'SystemExit'
op|'('
string|'"Unsupported option."'
op|')'
newline|'\n'
nl|'\n'
DECL|function|parseOptions
name|'def'
name|'parseOptions'
op|'('
name|'argv'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'o'
op|'='
name|'Options'
op|'('
op|')'
newline|'\n'
name|'o'
op|'.'
name|'to'
op|'='
op|'['
name|'e'
name|'for'
name|'e'
name|'in'
name|'argv'
name|'if'
name|'not'
name|'e'
op|'.'
name|'startswith'
op|'('
string|"'-'"
op|')'
op|']'
newline|'\n'
name|'o'
op|'.'
name|'sender'
op|'='
name|'getlogin'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Just be very stupid'
nl|'\n'
nl|'\n'
comment|'# Skip -bm -- it is the default'
nl|'\n'
nl|'\n'
comment|'# -bp lists queue information.  Screw that.'
nl|'\n'
name|'if'
string|"'-bp'"
name|'in'
name|'argv'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'_unsupportedOption'
newline|'\n'
nl|'\n'
comment|'# -bs makes sendmail use stdin/stdout as its transport.  Screw that.'
nl|'\n'
dedent|''
name|'if'
string|"'-bs'"
name|'in'
name|'argv'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'_unsupportedOption'
newline|'\n'
nl|'\n'
comment|'# -F sets who the mail is from, but is overridable by the From header'
nl|'\n'
dedent|''
name|'if'
string|"'-F'"
name|'in'
name|'argv'
op|':'
newline|'\n'
indent|'        '
name|'o'
op|'.'
name|'sender'
op|'='
name|'argv'
op|'['
name|'argv'
op|'.'
name|'index'
op|'('
string|"'-F'"
op|')'
op|'+'
number|'1'
op|']'
newline|'\n'
name|'o'
op|'.'
name|'to'
op|'.'
name|'remove'
op|'('
name|'o'
op|'.'
name|'sender'
op|')'
newline|'\n'
nl|'\n'
comment|'# -i and -oi makes us ignore lone "."'
nl|'\n'
dedent|''
name|'if'
op|'('
string|"'-i'"
name|'in'
name|'argv'
op|')'
name|'or'
op|'('
string|"'-oi'"
name|'in'
name|'argv'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'_unsupportedOption'
newline|'\n'
nl|'\n'
comment|'# -odb is background delivery'
nl|'\n'
dedent|''
name|'if'
string|"'-odb'"
name|'in'
name|'argv'
op|':'
newline|'\n'
indent|'        '
name|'o'
op|'.'
name|'background'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'o'
op|'.'
name|'background'
op|'='
name|'False'
newline|'\n'
nl|'\n'
comment|'# -odf is foreground delivery'
nl|'\n'
dedent|''
name|'if'
string|"'-odf'"
name|'in'
name|'argv'
op|':'
newline|'\n'
indent|'        '
name|'o'
op|'.'
name|'background'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'o'
op|'.'
name|'background'
op|'='
name|'True'
newline|'\n'
nl|'\n'
comment|'# -oem and -em cause errors to be mailed back to the sender.'
nl|'\n'
comment|'# It is also the default.'
nl|'\n'
nl|'\n'
comment|'# -oep and -ep cause errors to be printed to stderr'
nl|'\n'
dedent|''
name|'if'
op|'('
string|"'-oep'"
name|'in'
name|'argv'
op|')'
name|'or'
op|'('
string|"'-ep'"
name|'in'
name|'argv'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'o'
op|'.'
name|'printErrors'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'o'
op|'.'
name|'printErrors'
op|'='
name|'False'
newline|'\n'
nl|'\n'
comment|'# -om causes a copy of the message to be sent to the sender if the sender'
nl|'\n'
comment|'# appears in an alias expansion.  We do not support aliases.'
nl|'\n'
dedent|''
name|'if'
string|"'-om'"
name|'in'
name|'argv'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'_unsupportedOption'
newline|'\n'
nl|'\n'
comment|'# -t causes us to pick the recipients of the message from the To, Cc, and Bcc'
nl|'\n'
comment|'# headers, and to remove the Bcc header if present.'
nl|'\n'
dedent|''
name|'if'
string|"'-t'"
name|'in'
name|'argv'
op|':'
newline|'\n'
indent|'        '
name|'o'
op|'.'
name|'recipientsFromHeaders'
op|'='
name|'True'
newline|'\n'
name|'o'
op|'.'
name|'excludeAddresses'
op|'='
name|'o'
op|'.'
name|'to'
newline|'\n'
name|'o'
op|'.'
name|'to'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'o'
op|'.'
name|'recipientsFromHeaders'
op|'='
name|'False'
newline|'\n'
name|'o'
op|'.'
name|'exludeAddresses'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'requiredHeaders'
op|'='
op|'{'
nl|'\n'
string|"'from'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|"'to'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|"'cc'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|"'bcc'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
string|"'date'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'headers'
op|'='
op|'['
op|']'
newline|'\n'
name|'buffer'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
op|')'
newline|'\n'
name|'while'
number|'1'
op|':'
newline|'\n'
indent|'        '
name|'write'
op|'='
number|'1'
newline|'\n'
name|'line'
op|'='
name|'sys'
op|'.'
name|'stdin'
op|'.'
name|'readline'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'line'
op|'.'
name|'strip'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'break'
newline|'\n'
nl|'\n'
dedent|''
name|'hdrs'
op|'='
name|'line'
op|'.'
name|'split'
op|'('
string|"': '"
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'hdr'
op|'='
name|'hdrs'
op|'['
number|'0'
op|']'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'if'
name|'o'
op|'.'
name|'recipientsFromHeaders'
name|'and'
name|'hdr'
name|'in'
op|'('
string|"'to'"
op|','
string|"'cc'"
op|','
string|"'bcc'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'o'
op|'.'
name|'to'
op|'.'
name|'extend'
op|'('
op|'['
nl|'\n'
name|'a'
op|'['
number|'1'
op|']'
name|'for'
name|'a'
name|'in'
name|'rfc822'
op|'.'
name|'AddressList'
op|'('
name|'hdrs'
op|'['
number|'1'
op|']'
op|')'
op|'.'
name|'addresslist'
nl|'\n'
op|']'
op|')'
newline|'\n'
name|'if'
name|'hdr'
op|'=='
string|"'bcc'"
op|':'
newline|'\n'
indent|'                '
name|'write'
op|'='
number|'0'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'hdr'
op|'=='
string|"'from'"
op|':'
newline|'\n'
indent|'            '
name|'o'
op|'.'
name|'sender'
op|'='
name|'rfc822'
op|'.'
name|'parseaddr'
op|'('
name|'hdrs'
op|'['
number|'1'
op|']'
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'hdr'
name|'in'
name|'requiredHeaders'
op|':'
newline|'\n'
indent|'            '
name|'requiredHeaders'
op|'['
name|'hdr'
op|']'
op|'.'
name|'append'
op|'('
name|'hdrs'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'write'
op|':'
newline|'\n'
indent|'            '
name|'buffer'
op|'.'
name|'write'
op|'('
name|'line'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'requiredHeaders'
op|'['
string|"'from'"
op|']'
op|':'
newline|'\n'
indent|'        '
name|'buffer'
op|'.'
name|'write'
op|'('
string|"'From: %s\\r\\n'"
op|'%'
op|'('
name|'o'
op|'.'
name|'sender'
op|','
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'requiredHeaders'
op|'['
string|"'to'"
op|']'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'o'
op|'.'
name|'to'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'SystemExit'
op|'('
string|'"No recipients specified."'
op|')'
newline|'\n'
dedent|''
name|'buffer'
op|'.'
name|'write'
op|'('
string|"'To: %s\\r\\n'"
op|'%'
op|'('
string|"', '"
op|'.'
name|'join'
op|'('
name|'o'
op|'.'
name|'to'
op|')'
op|','
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'requiredHeaders'
op|'['
string|"'date'"
op|']'
op|':'
newline|'\n'
indent|'        '
name|'buffer'
op|'.'
name|'write'
op|'('
string|"'Date: %s\\r\\n'"
op|'%'
op|'('
name|'smtp'
op|'.'
name|'rfc822date'
op|'('
op|')'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'buffer'
op|'.'
name|'write'
op|'('
name|'line'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'o'
op|'.'
name|'recipientsFromHeaders'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'a'
name|'in'
name|'o'
op|'.'
name|'excludeAddresses'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'o'
op|'.'
name|'to'
op|'.'
name|'remove'
op|'('
name|'a'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'buffer'
op|'.'
name|'seek'
op|'('
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
name|'o'
op|'.'
name|'body'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
name|'buffer'
op|'.'
name|'getvalue'
op|'('
op|')'
op|'+'
name|'sys'
op|'.'
name|'stdin'
op|'.'
name|'read'
op|'('
op|')'
op|')'
newline|'\n'
name|'return'
name|'o'
newline|'\n'
nl|'\n'
DECL|class|Configuration
dedent|''
name|'class'
name|'Configuration'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    @ivar allowUIDs: A list of UIDs which are allowed to send mail.\n    @ivar allowGIDs: A list of GIDs which are allowed to send mail.\n    @ivar denyUIDs: A list of UIDs which are not allowed to send mail.\n    @ivar denyGIDs: A list of GIDs which are not allowed to send mail.\n\n    @type defaultAccess: C{bool}\n    @ivar defaultAccess: C{True} if access will be allowed when no other access\n    control rule matches or C{False} if it will be denied in that case.\n\n    @ivar useraccess: Either C{\'allow\'} to check C{allowUID} first\n    or C{\'deny\'} to check C{denyUID} first.\n\n    @ivar groupaccess: Either C{\'allow\'} to check C{allowGID} first or\n    C{\'deny\'} to check C{denyGID} first.\n\n    @ivar identities: A C{dict} mapping hostnames to credentials to use when\n    sending mail to that host.\n\n    @ivar smarthost: C{None} or a hostname through which all outgoing mail will\n    be sent.\n\n    @ivar domain: C{None} or the hostname with which to identify ourselves when\n    connecting to an MTA.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'allowUIDs'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'denyUIDs'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'allowGIDs'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'denyGIDs'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'useraccess'
op|'='
string|"'deny'"
newline|'\n'
name|'self'
op|'.'
name|'groupaccess'
op|'='
string|"'deny'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'identities'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'smarthost'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'domain'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'defaultAccess'
op|'='
name|'True'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|loadConfig
dedent|''
dedent|''
name|'def'
name|'loadConfig'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
comment|'# [useraccess]'
nl|'\n'
comment|'# allow=uid1,uid2,...'
nl|'\n'
comment|'# deny=uid1,uid2,...'
nl|'\n'
comment|'# order=allow,deny'
nl|'\n'
comment|'# [groupaccess]'
nl|'\n'
comment|'# allow=gid1,gid2,...'
nl|'\n'
comment|'# deny=gid1,gid2,...'
nl|'\n'
comment|'# order=deny,allow'
nl|'\n'
comment|'# [identity]'
nl|'\n'
comment|'# host1=username:password'
nl|'\n'
comment|'# host2=username:password'
nl|'\n'
comment|'# [addresses]'
nl|'\n'
comment|'# smarthost=a.b.c.d'
nl|'\n'
comment|'# default_domain=x.y.z'
nl|'\n'
nl|'\n'
indent|'    '
name|'c'
op|'='
name|'Configuration'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'access'
op|'('
name|'path'
op|','
name|'os'
op|'.'
name|'R_OK'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'c'
newline|'\n'
nl|'\n'
dedent|''
name|'p'
op|'='
name|'ConfigParser'
op|'('
op|')'
newline|'\n'
name|'p'
op|'.'
name|'read'
op|'('
name|'path'
op|')'
newline|'\n'
nl|'\n'
name|'au'
op|'='
name|'c'
op|'.'
name|'allowUIDs'
newline|'\n'
name|'du'
op|'='
name|'c'
op|'.'
name|'denyUIDs'
newline|'\n'
name|'ag'
op|'='
name|'c'
op|'.'
name|'allowGIDs'
newline|'\n'
name|'dg'
op|'='
name|'c'
op|'.'
name|'denyGIDs'
newline|'\n'
name|'for'
op|'('
name|'section'
op|','
name|'a'
op|','
name|'d'
op|')'
name|'in'
op|'('
op|'('
string|"'useraccess'"
op|','
name|'au'
op|','
name|'du'
op|')'
op|','
op|'('
string|"'groupaccess'"
op|','
name|'ag'
op|','
name|'dg'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'p'
op|'.'
name|'has_section'
op|'('
name|'section'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
op|'('
name|'mode'
op|','
name|'L'
op|')'
name|'in'
op|'('
op|'('
string|"'allow'"
op|','
name|'a'
op|')'
op|','
op|'('
string|"'deny'"
op|','
name|'d'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'p'
op|'.'
name|'has_option'
op|'('
name|'section'
op|','
name|'mode'
op|')'
name|'and'
name|'p'
op|'.'
name|'get'
op|'('
name|'section'
op|','
name|'mode'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'for'
name|'id'
name|'in'
name|'p'
op|'.'
name|'get'
op|'('
name|'section'
op|','
name|'mode'
op|')'
op|'.'
name|'split'
op|'('
string|"','"
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'try'
op|':'
newline|'\n'
indent|'                            '
name|'id'
op|'='
name|'int'
op|'('
name|'id'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                            '
name|'log'
op|'('
string|'"Illegal %sID in [%s] section: %s"'
op|','
name|'section'
op|'['
number|'0'
op|']'
op|'.'
name|'upper'
op|'('
op|')'
op|','
name|'section'
op|','
name|'id'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                            '
name|'L'
op|'.'
name|'append'
op|'('
name|'id'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'order'
op|'='
name|'p'
op|'.'
name|'get'
op|'('
name|'section'
op|','
string|"'order'"
op|')'
newline|'\n'
name|'order'
op|'='
name|'map'
op|'('
name|'str'
op|'.'
name|'split'
op|','
name|'map'
op|'('
name|'str'
op|'.'
name|'lower'
op|','
name|'order'
op|'.'
name|'split'
op|'('
string|"','"
op|')'
op|')'
op|')'
newline|'\n'
name|'if'
name|'order'
op|'['
number|'0'
op|']'
op|'=='
string|"'allow'"
op|':'
newline|'\n'
indent|'                '
name|'setattr'
op|'('
name|'c'
op|','
name|'section'
op|','
string|"'allow'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'setattr'
op|'('
name|'c'
op|','
name|'section'
op|','
string|"'deny'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'p'
op|'.'
name|'has_section'
op|'('
string|"'identity'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
op|'('
name|'host'
op|','
name|'up'
op|')'
name|'in'
name|'p'
op|'.'
name|'items'
op|'('
string|"'identity'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'parts'
op|'='
name|'up'
op|'.'
name|'split'
op|'('
string|"':'"
op|','
number|'1'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'parts'
op|')'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'('
string|'"Illegal entry in [identity] section: %s"'
op|','
name|'up'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'p'
op|'.'
name|'identities'
op|'['
name|'host'
op|']'
op|'='
name|'parts'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'p'
op|'.'
name|'has_section'
op|'('
string|"'addresses'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'p'
op|'.'
name|'has_option'
op|'('
string|"'addresses'"
op|','
string|"'smarthost'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'c'
op|'.'
name|'smarthost'
op|'='
name|'p'
op|'.'
name|'get'
op|'('
string|"'addresses'"
op|','
string|"'smarthost'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'p'
op|'.'
name|'has_option'
op|'('
string|"'addresses'"
op|','
string|"'default_domain'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'c'
op|'.'
name|'domain'
op|'='
name|'p'
op|'.'
name|'get'
op|'('
string|"'addresses'"
op|','
string|"'default_domain'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'c'
newline|'\n'
nl|'\n'
DECL|function|success
dedent|''
name|'def'
name|'success'
op|'('
name|'result'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'reactor'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|variable|failed
dedent|''
name|'failed'
op|'='
name|'None'
newline|'\n'
DECL|function|failure
name|'def'
name|'failure'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'global'
name|'failed'
newline|'\n'
name|'reactor'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
name|'failed'
op|'='
name|'f'
newline|'\n'
nl|'\n'
DECL|function|sendmail
dedent|''
name|'def'
name|'sendmail'
op|'('
name|'host'
op|','
name|'options'
op|','
name|'ident'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'d'
op|'='
name|'smtp'
op|'.'
name|'sendmail'
op|'('
name|'host'
op|','
name|'options'
op|'.'
name|'sender'
op|','
name|'options'
op|'.'
name|'to'
op|','
name|'options'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'success'
op|','
name|'failure'
op|')'
newline|'\n'
name|'reactor'
op|'.'
name|'run'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|senderror
dedent|''
name|'def'
name|'senderror'
op|'('
name|'failure'
op|','
name|'options'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'recipient'
op|'='
op|'['
name|'options'
op|'.'
name|'sender'
op|']'
newline|'\n'
name|'sender'
op|'='
string|'\'"Internally Generated Message (%s)"<postmaster@%s>\''
op|'%'
op|'('
name|'sys'
op|'.'
name|'argv'
op|'['
number|'0'
op|']'
op|','
name|'smtp'
op|'.'
name|'DNSNAME'
op|')'
newline|'\n'
name|'error'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
op|')'
newline|'\n'
name|'failure'
op|'.'
name|'printTraceback'
op|'('
name|'file'
op|'='
name|'error'
op|')'
newline|'\n'
name|'body'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
name|'ERROR_FMT'
op|'%'
name|'error'
op|'.'
name|'getvalue'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'d'
op|'='
name|'smtp'
op|'.'
name|'sendmail'
op|'('
string|"'localhost'"
op|','
name|'sender'
op|','
name|'recipient'
op|','
name|'body'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addBoth'
op|'('
name|'lambda'
name|'_'
op|':'
name|'reactor'
op|'.'
name|'stop'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|deny
dedent|''
name|'def'
name|'deny'
op|'('
name|'conf'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'uid'
op|'='
name|'os'
op|'.'
name|'getuid'
op|'('
op|')'
newline|'\n'
name|'gid'
op|'='
name|'os'
op|'.'
name|'getgid'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'conf'
op|'.'
name|'useraccess'
op|'=='
string|"'deny'"
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'uid'
name|'in'
name|'conf'
op|'.'
name|'denyUIDs'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'if'
name|'uid'
name|'in'
name|'conf'
op|'.'
name|'allowUIDs'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'uid'
name|'in'
name|'conf'
op|'.'
name|'allowUIDs'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'if'
name|'uid'
name|'in'
name|'conf'
op|'.'
name|'denyUIDs'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'conf'
op|'.'
name|'groupaccess'
op|'=='
string|"'deny'"
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'gid'
name|'in'
name|'conf'
op|'.'
name|'denyGIDs'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'if'
name|'gid'
name|'in'
name|'conf'
op|'.'
name|'allowGIDs'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'gid'
name|'in'
name|'conf'
op|'.'
name|'allowGIDs'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'if'
name|'gid'
name|'in'
name|'conf'
op|'.'
name|'denyGIDs'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'not'
name|'conf'
op|'.'
name|'defaultAccess'
newline|'\n'
nl|'\n'
DECL|function|run
dedent|''
name|'def'
name|'run'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'o'
op|'='
name|'parseOptions'
op|'('
name|'sys'
op|'.'
name|'argv'
op|'['
number|'1'
op|':'
op|']'
op|')'
newline|'\n'
name|'gConf'
op|'='
name|'loadConfig'
op|'('
name|'GLOBAL_CFG'
op|')'
newline|'\n'
name|'lConf'
op|'='
name|'loadConfig'
op|'('
name|'LOCAL_CFG'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'deny'
op|'('
name|'gConf'
op|')'
name|'or'
name|'deny'
op|'('
name|'lConf'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'('
string|'"Permission denied"'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'host'
op|'='
name|'lConf'
op|'.'
name|'smarthost'
name|'or'
name|'gConf'
op|'.'
name|'smarthost'
name|'or'
name|'SMARTHOST'
newline|'\n'
nl|'\n'
name|'ident'
op|'='
name|'gConf'
op|'.'
name|'identities'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'ident'
op|'.'
name|'update'
op|'('
name|'lConf'
op|'.'
name|'identities'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'lConf'
op|'.'
name|'domain'
op|':'
newline|'\n'
indent|'        '
name|'smtp'
op|'.'
name|'DNSNAME'
op|'='
name|'lConf'
op|'.'
name|'domain'
newline|'\n'
dedent|''
name|'elif'
name|'gConf'
op|'.'
name|'domain'
op|':'
newline|'\n'
indent|'        '
name|'smtp'
op|'.'
name|'DNSNAME'
op|'='
name|'gConf'
op|'.'
name|'domain'
newline|'\n'
nl|'\n'
dedent|''
name|'sendmail'
op|'('
name|'host'
op|','
name|'o'
op|','
name|'ident'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'failed'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'o'
op|'.'
name|'printErrors'
op|':'
newline|'\n'
indent|'            '
name|'failed'
op|'.'
name|'printTraceback'
op|'('
name|'file'
op|'='
name|'sys'
op|'.'
name|'stderr'
op|')'
newline|'\n'
name|'raise'
name|'SystemExit'
op|'('
number|'1'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'senderror'
op|'('
name|'failed'
op|','
name|'o'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
