begin_unit
comment|'# -*- test-case-name: twisted.mail.test.test_pop3client -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2004 Divmod Inc.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'directlyProvides'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'mail'
op|'.'
name|'pop3'
name|'import'
name|'AdvancedPOP3Client'
name|'as'
name|'POP3Client'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'mail'
op|'.'
name|'pop3'
name|'import'
name|'InsecureAuthenticationDisallowed'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'mail'
op|'.'
name|'pop3'
name|'import'
name|'ServerErrorResponse'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'protocols'
name|'import'
name|'loopback'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
op|','
name|'defer'
op|','
name|'error'
op|','
name|'protocol'
op|','
name|'interfaces'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'test'
op|'.'
name|'proto_helpers'
name|'import'
name|'StringTransport'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'protocols'
name|'import'
name|'basic'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'mail'
op|'.'
name|'test'
name|'import'
name|'pop3testserver'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'from'
name|'twisted'
op|'.'
name|'test'
op|'.'
name|'ssl_helpers'
name|'import'
name|'ClientTLSContext'
op|','
name|'ServerTLSContext'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'    '
name|'ClientTLSContext'
op|'='
name|'ServerTLSContext'
op|'='
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|StringTransportWithConnectionLosing
dedent|''
name|'class'
name|'StringTransportWithConnectionLosing'
op|'('
name|'StringTransport'
op|')'
op|':'
newline|'\n'
DECL|member|loseConnection
indent|'    '
name|'def'
name|'loseConnection'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'protocol'
op|'.'
name|'connectionLost'
op|'('
name|'error'
op|'.'
name|'ConnectionDone'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'capCache'
op|'='
op|'{'
string|'"TOP"'
op|':'
name|'None'
op|','
string|'"LOGIN-DELAY"'
op|':'
string|'"180"'
op|','
string|'"UIDL"'
op|':'
name|'None'
op|','
DECL|variable|capCache
string|'"STLS"'
op|':'
name|'None'
op|','
string|'"USER"'
op|':'
name|'None'
op|','
string|'"SASL"'
op|':'
string|'"LOGIN"'
op|'}'
newline|'\n'
DECL|function|setUp
name|'def'
name|'setUp'
op|'('
name|'greet'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'p'
op|'='
name|'POP3Client'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|"# Skip the CAPA login will issue if it doesn't already have a"
nl|'\n'
comment|'# capability cache'
nl|'\n'
name|'p'
op|'.'
name|'_capCache'
op|'='
name|'capCache'
newline|'\n'
nl|'\n'
name|'t'
op|'='
name|'StringTransportWithConnectionLosing'
op|'('
op|')'
newline|'\n'
name|'t'
op|'.'
name|'protocol'
op|'='
name|'p'
newline|'\n'
name|'p'
op|'.'
name|'makeConnection'
op|'('
name|'t'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'greet'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|"'+OK Hello!\\r\\n'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'p'
op|','
name|'t'
newline|'\n'
nl|'\n'
DECL|function|strip
dedent|''
name|'def'
name|'strip'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'lambda'
name|'result'
op|','
name|'f'
op|'='
name|'f'
op|':'
name|'f'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|class|POP3ClientLoginTestCase
dedent|''
name|'class'
name|'POP3ClientLoginTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|testNegativeGreeting
indent|'    '
name|'def'
name|'testNegativeGreeting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
name|'greet'
op|'='
name|'False'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'allowInsecureLogin'
op|'='
name|'True'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'login'
op|'('
string|'"username"'
op|','
string|'"password"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|"'-ERR Offline for maintenance\\r\\n'"
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'assertFailure'
op|'('
nl|'\n'
name|'d'
op|','
name|'ServerErrorResponse'
op|')'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'lambda'
name|'exc'
op|':'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'exc'
op|'.'
name|'args'
op|'['
number|'0'
op|']'
op|','
string|'"Offline for maintenance"'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|testOkUser
dedent|''
name|'def'
name|'testOkUser'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'user'
op|'('
string|'"username"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"USER username\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK send password\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'assertEqual'
op|','
string|'"send password"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testBadUser
dedent|''
name|'def'
name|'testBadUser'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'user'
op|'('
string|'"username"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"USER username\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"-ERR account suspended\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'assertFailure'
op|'('
nl|'\n'
name|'d'
op|','
name|'ServerErrorResponse'
op|')'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'lambda'
name|'exc'
op|':'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'exc'
op|'.'
name|'args'
op|'['
number|'0'
op|']'
op|','
string|'"account suspended"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testOkPass
dedent|''
name|'def'
name|'testOkPass'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'password'
op|'('
string|'"password"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"PASS password\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK you\'re in!\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'assertEqual'
op|','
string|'"you\'re in!"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testBadPass
dedent|''
name|'def'
name|'testBadPass'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'password'
op|'('
string|'"password"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"PASS password\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"-ERR go away\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'assertFailure'
op|'('
nl|'\n'
name|'d'
op|','
name|'ServerErrorResponse'
op|')'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'lambda'
name|'exc'
op|':'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'exc'
op|'.'
name|'args'
op|'['
number|'0'
op|']'
op|','
string|'"go away"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testOkLogin
dedent|''
name|'def'
name|'testOkLogin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'p'
op|'.'
name|'allowInsecureLogin'
op|'='
name|'True'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'login'
op|'('
string|'"username"'
op|','
string|'"password"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"USER username\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK go ahead\\r\\n"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"USER username\\r\\nPASS password\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK password accepted\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'assertEqual'
op|','
string|'"password accepted"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testBadPasswordLogin
dedent|''
name|'def'
name|'testBadPasswordLogin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'p'
op|'.'
name|'allowInsecureLogin'
op|'='
name|'True'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'login'
op|'('
string|'"username"'
op|','
string|'"password"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"USER username\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK waiting on you\\r\\n"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"USER username\\r\\nPASS password\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"-ERR bogus login\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'assertFailure'
op|'('
nl|'\n'
name|'d'
op|','
name|'ServerErrorResponse'
op|')'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'lambda'
name|'exc'
op|':'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'exc'
op|'.'
name|'args'
op|'['
number|'0'
op|']'
op|','
string|'"bogus login"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testBadUsernameLogin
dedent|''
name|'def'
name|'testBadUsernameLogin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'p'
op|'.'
name|'allowInsecureLogin'
op|'='
name|'True'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'login'
op|'('
string|'"username"'
op|','
string|'"password"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"USER username\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"-ERR bogus login\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'assertFailure'
op|'('
nl|'\n'
name|'d'
op|','
name|'ServerErrorResponse'
op|')'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'lambda'
name|'exc'
op|':'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'exc'
op|'.'
name|'args'
op|'['
number|'0'
op|']'
op|','
string|'"bogus login"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testServerGreeting
dedent|''
name|'def'
name|'testServerGreeting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
name|'greet'
op|'='
name|'False'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK lalala this has no challenge\\r\\n"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'p'
op|'.'
name|'serverChallenge'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testServerGreetingWithChallenge
dedent|''
name|'def'
name|'testServerGreetingWithChallenge'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
name|'greet'
op|'='
name|'False'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK <here is the challenge>\\r\\n"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'p'
op|'.'
name|'serverChallenge'
op|','
string|'"<here is the challenge>"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testAPOP
dedent|''
name|'def'
name|'testAPOP'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
name|'greet'
op|'='
name|'False'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK <challenge string goes here>\\r\\n"'
op|')'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'login'
op|'('
string|'"username"'
op|','
string|'"password"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"APOP username f34f1e464d0d7927607753129cabe39a\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK Welcome!\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'assertEqual'
op|','
string|'"Welcome!"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testInsecureLoginRaisesException
dedent|''
name|'def'
name|'testInsecureLoginRaisesException'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
name|'greet'
op|'='
name|'False'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK Howdy\\r\\n"'
op|')'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'login'
op|'('
string|'"username"'
op|','
string|'"password"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failIf'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'assertFailure'
op|'('
nl|'\n'
name|'d'
op|','
name|'InsecureAuthenticationDisallowed'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|testSSLTransportConsideredSecure
dedent|''
name|'def'
name|'testSSLTransportConsideredSecure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        If a server doesn\'t offer APOP but the transport is secured using\n        SSL or TLS, a plaintext login should be allowed, not rejected with\n        an InsecureAuthenticationDisallowed exception.\n        """'
newline|'\n'
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
name|'greet'
op|'='
name|'False'
op|')'
newline|'\n'
name|'directlyProvides'
op|'('
name|'t'
op|','
name|'interfaces'
op|'.'
name|'ISSLTransport'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK Howdy\\r\\n"'
op|')'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'login'
op|'('
string|'"username"'
op|','
string|'"password"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"USER username\\r\\n"'
op|')'
newline|'\n'
name|'t'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK\\r\\n"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"PASS password\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|ListConsumer
dedent|''
dedent|''
name|'class'
name|'ListConsumer'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'data'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|consume
dedent|''
name|'def'
name|'consume'
op|'('
name|'self'
op|','
op|'('
name|'item'
op|','
name|'value'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'data'
op|'.'
name|'setdefault'
op|'('
name|'item'
op|','
op|'['
op|']'
op|')'
op|'.'
name|'append'
op|'('
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|class|MessageConsumer
dedent|''
dedent|''
name|'class'
name|'MessageConsumer'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'data'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|consume
dedent|''
name|'def'
name|'consume'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'data'
op|'.'
name|'append'
op|'('
name|'line'
op|')'
newline|'\n'
nl|'\n'
DECL|class|POP3ClientListTestCase
dedent|''
dedent|''
name|'class'
name|'POP3ClientListTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|testListSize
indent|'    '
name|'def'
name|'testListSize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'listSize'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"LIST\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK Here it comes\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"1 3\\r\\n2 2\\r\\n3 1\\r\\n.\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'assertEqual'
op|','
op|'['
number|'3'
op|','
number|'2'
op|','
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testListSizeWithConsumer
dedent|''
name|'def'
name|'testListSizeWithConsumer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'c'
op|'='
name|'ListConsumer'
op|'('
op|')'
newline|'\n'
name|'f'
op|'='
name|'c'
op|'.'
name|'consume'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'listSize'
op|'('
name|'f'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"LIST\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK Here it comes\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"1 3\\r\\n2 2\\r\\n3 1\\r\\n"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'c'
op|'.'
name|'data'
op|','
op|'{'
number|'0'
op|':'
op|'['
number|'3'
op|']'
op|','
number|'1'
op|':'
op|'['
number|'2'
op|']'
op|','
number|'2'
op|':'
op|'['
number|'1'
op|']'
op|'}'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"5 3\\r\\n6 2\\r\\n7 1\\r\\n"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'c'
op|'.'
name|'data'
op|','
op|'{'
number|'0'
op|':'
op|'['
number|'3'
op|']'
op|','
number|'1'
op|':'
op|'['
number|'2'
op|']'
op|','
number|'2'
op|':'
op|'['
number|'1'
op|']'
op|','
number|'4'
op|':'
op|'['
number|'3'
op|']'
op|','
number|'5'
op|':'
op|'['
number|'2'
op|']'
op|','
number|'6'
op|':'
op|'['
number|'1'
op|']'
op|'}'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'".\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'assertIdentical'
op|','
name|'f'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testFailedListSize
dedent|''
name|'def'
name|'testFailedListSize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'listSize'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"LIST\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"-ERR Fatal doom server exploded\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'assertFailure'
op|'('
nl|'\n'
name|'d'
op|','
name|'ServerErrorResponse'
op|')'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'lambda'
name|'exc'
op|':'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'exc'
op|'.'
name|'args'
op|'['
number|'0'
op|']'
op|','
string|'"Fatal doom server exploded"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testListUID
dedent|''
name|'def'
name|'testListUID'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'listUID'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"UIDL\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK Here it comes\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"1 abc\\r\\n2 def\\r\\n3 ghi\\r\\n.\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'assertEqual'
op|','
op|'['
string|'"abc"'
op|','
string|'"def"'
op|','
string|'"ghi"'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testListUIDWithConsumer
dedent|''
name|'def'
name|'testListUIDWithConsumer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'c'
op|'='
name|'ListConsumer'
op|'('
op|')'
newline|'\n'
name|'f'
op|'='
name|'c'
op|'.'
name|'consume'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'listUID'
op|'('
name|'f'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"UIDL\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK Here it comes\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"1 xyz\\r\\n2 abc\\r\\n5 mno\\r\\n"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'c'
op|'.'
name|'data'
op|','
op|'{'
number|'0'
op|':'
op|'['
string|'"xyz"'
op|']'
op|','
number|'1'
op|':'
op|'['
string|'"abc"'
op|']'
op|','
number|'4'
op|':'
op|'['
string|'"mno"'
op|']'
op|'}'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'".\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'assertIdentical'
op|','
name|'f'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testFailedListUID
dedent|''
name|'def'
name|'testFailedListUID'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'listUID'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"UIDL\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"-ERR Fatal doom server exploded\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'assertFailure'
op|'('
nl|'\n'
name|'d'
op|','
name|'ServerErrorResponse'
op|')'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'lambda'
name|'exc'
op|':'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'exc'
op|'.'
name|'args'
op|'['
number|'0'
op|']'
op|','
string|'"Fatal doom server exploded"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|class|POP3ClientMessageTestCase
dedent|''
dedent|''
name|'class'
name|'POP3ClientMessageTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|testRetrieve
indent|'    '
name|'def'
name|'testRetrieve'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'retrieve'
op|'('
number|'7'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"RETR 8\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK Message incoming\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"La la la here is message text\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"..Further message text tra la la\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'".\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|','
nl|'\n'
op|'['
string|'"La la la here is message text"'
op|','
nl|'\n'
string|'".Further message text tra la la"'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testRetrieveWithConsumer
dedent|''
name|'def'
name|'testRetrieveWithConsumer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'c'
op|'='
name|'MessageConsumer'
op|'('
op|')'
newline|'\n'
name|'f'
op|'='
name|'c'
op|'.'
name|'consume'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'retrieve'
op|'('
number|'7'
op|','
name|'f'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"RETR 8\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK Message incoming\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"La la la here is message text\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"..Further message text\\r\\n.\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbTestRetrieveWithConsumer'
op|','
name|'f'
op|','
name|'c'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cbTestRetrieveWithConsumer
dedent|''
name|'def'
name|'_cbTestRetrieveWithConsumer'
op|'('
name|'self'
op|','
name|'result'
op|','
name|'f'
op|','
name|'c'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertIdentical'
op|'('
name|'result'
op|','
name|'f'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'c'
op|'.'
name|'data'
op|','
op|'['
string|'"La la la here is message text"'
op|','
nl|'\n'
string|'".Further message text"'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testPartialRetrieve
dedent|''
name|'def'
name|'testPartialRetrieve'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'retrieve'
op|'('
number|'7'
op|','
name|'lines'
op|'='
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"TOP 8 2\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK 2 lines on the way\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"Line the first!  Woop\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"Line the last!  Bye\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'".\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|','
nl|'\n'
op|'['
string|'"Line the first!  Woop"'
op|','
nl|'\n'
string|'"Line the last!  Bye"'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testPartialRetrieveWithConsumer
dedent|''
name|'def'
name|'testPartialRetrieveWithConsumer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'c'
op|'='
name|'MessageConsumer'
op|'('
op|')'
newline|'\n'
name|'f'
op|'='
name|'c'
op|'.'
name|'consume'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'retrieve'
op|'('
number|'7'
op|','
name|'f'
op|','
name|'lines'
op|'='
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"TOP 8 2\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK 2 lines on the way\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"Line the first!  Woop\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"Line the last!  Bye\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'".\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbTestPartialRetrieveWithConsumer'
op|','
name|'f'
op|','
name|'c'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cbTestPartialRetrieveWithConsumer
dedent|''
name|'def'
name|'_cbTestPartialRetrieveWithConsumer'
op|'('
name|'self'
op|','
name|'result'
op|','
name|'f'
op|','
name|'c'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertIdentical'
op|'('
name|'result'
op|','
name|'f'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'c'
op|'.'
name|'data'
op|','
op|'['
string|'"Line the first!  Woop"'
op|','
nl|'\n'
string|'"Line the last!  Bye"'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testFailedRetrieve
dedent|''
name|'def'
name|'testFailedRetrieve'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'retrieve'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"RETR 1\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"-ERR Fatal doom server exploded\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'assertFailure'
op|'('
nl|'\n'
name|'d'
op|','
name|'ServerErrorResponse'
op|')'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'lambda'
name|'exc'
op|':'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'exc'
op|'.'
name|'args'
op|'['
number|'0'
op|']'
op|','
string|'"Fatal doom server exploded"'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_concurrentRetrieves
dedent|''
name|'def'
name|'test_concurrentRetrieves'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Issue three retrieve calls immediately without waiting for any to\n        succeed and make sure they all do succeed eventually.\n        """'
newline|'\n'
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'messages'
op|'='
op|'['
nl|'\n'
name|'p'
op|'.'
name|'retrieve'
op|'('
name|'i'
op|')'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|','
nl|'\n'
op|'['
string|'"First line of %d."'
op|'%'
op|'('
name|'i'
op|'+'
number|'1'
op|','
op|')'
op|','
nl|'\n'
string|'"Second line of %d."'
op|'%'
op|'('
name|'i'
op|'+'
number|'1'
op|','
op|')'
op|']'
op|')'
nl|'\n'
name|'for'
name|'i'
nl|'\n'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'1'
op|','
number|'4'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"RETR %d\\r\\n"'
op|'%'
op|'('
name|'i'
op|','
op|')'
op|')'
newline|'\n'
name|'t'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK 2 lines on the way\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"First line of %d.\\r\\n"'
op|'%'
op|'('
name|'i'
op|','
op|')'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"Second line of %d.\\r\\n"'
op|'%'
op|'('
name|'i'
op|','
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'""'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'".\\r\\n"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'defer'
op|'.'
name|'DeferredList'
op|'('
name|'messages'
op|','
name|'fireOnOneErrback'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|POP3ClientMiscTestCase
dedent|''
dedent|''
name|'class'
name|'POP3ClientMiscTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|testCapability
indent|'    '
name|'def'
name|'testCapability'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'capabilities'
op|'('
name|'useCache'
op|'='
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"CAPA\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK Capabilities on the way\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"X\\r\\nY\\r\\nZ\\r\\nA 1 2 3\\r\\nB 1 2\\r\\nC 1\\r\\n.\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|','
nl|'\n'
op|'{'
string|'"X"'
op|':'
name|'None'
op|','
string|'"Y"'
op|':'
name|'None'
op|','
string|'"Z"'
op|':'
name|'None'
op|','
nl|'\n'
string|'"A"'
op|':'
op|'['
string|'"1"'
op|','
string|'"2"'
op|','
string|'"3"'
op|']'
op|','
nl|'\n'
string|'"B"'
op|':'
op|'['
string|'"1"'
op|','
string|'"2"'
op|']'
op|','
nl|'\n'
string|'"C"'
op|':'
op|'['
string|'"1"'
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testCapabilityError
dedent|''
name|'def'
name|'testCapabilityError'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'capabilities'
op|'('
name|'useCache'
op|'='
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"CAPA\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"-ERR This server is lame!\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'assertEquals'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testStat
dedent|''
name|'def'
name|'testStat'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'stat'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"STAT\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK 1 1212\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'assertEqual'
op|','
op|'('
number|'1'
op|','
number|'1212'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testStatError
dedent|''
name|'def'
name|'testStatError'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'stat'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"STAT\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"-ERR This server is lame!\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'assertFailure'
op|'('
nl|'\n'
name|'d'
op|','
name|'ServerErrorResponse'
op|')'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'lambda'
name|'exc'
op|':'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'exc'
op|'.'
name|'args'
op|'['
number|'0'
op|']'
op|','
string|'"This server is lame!"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testNoop
dedent|''
name|'def'
name|'testNoop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'noop'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"NOOP\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK No-op to you too!\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'assertEqual'
op|','
string|'"No-op to you too!"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testNoopError
dedent|''
name|'def'
name|'testNoopError'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'noop'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"NOOP\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"-ERR This server is lame!\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'assertFailure'
op|'('
nl|'\n'
name|'d'
op|','
name|'ServerErrorResponse'
op|')'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'lambda'
name|'exc'
op|':'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'exc'
op|'.'
name|'args'
op|'['
number|'0'
op|']'
op|','
string|'"This server is lame!"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testRset
dedent|''
name|'def'
name|'testRset'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"RSET\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK Reset state\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'assertEqual'
op|','
string|'"Reset state"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testRsetError
dedent|''
name|'def'
name|'testRsetError'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'reset'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"RSET\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"-ERR This server is lame!\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'assertFailure'
op|'('
nl|'\n'
name|'d'
op|','
name|'ServerErrorResponse'
op|')'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'lambda'
name|'exc'
op|':'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'exc'
op|'.'
name|'args'
op|'['
number|'0'
op|']'
op|','
string|'"This server is lame!"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testDelete
dedent|''
name|'def'
name|'testDelete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'delete'
op|'('
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"DELE 4\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"+OK Hasta la vista\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'assertEqual'
op|','
string|'"Hasta la vista"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testDeleteError
dedent|''
name|'def'
name|'testDeleteError'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|','
name|'t'
op|'='
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'p'
op|'.'
name|'delete'
op|'('
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'t'
op|'.'
name|'value'
op|'('
op|')'
op|','
string|'"DELE 4\\r\\n"'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'dataReceived'
op|'('
string|'"-ERR Winner is not you.\\r\\n"'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'assertFailure'
op|'('
nl|'\n'
name|'d'
op|','
name|'ServerErrorResponse'
op|')'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'lambda'
name|'exc'
op|':'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'exc'
op|'.'
name|'args'
op|'['
number|'0'
op|']'
op|','
string|'"Winner is not you."'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SimpleClient
dedent|''
dedent|''
name|'class'
name|'SimpleClient'
op|'('
name|'POP3Client'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'deferred'
op|','
name|'contextFactory'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'deferred'
op|'='
name|'deferred'
newline|'\n'
name|'self'
op|'.'
name|'allowInsecureLogin'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|serverGreeting
dedent|''
name|'def'
name|'serverGreeting'
op|'('
name|'self'
op|','
name|'challenge'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'deferred'
op|'.'
name|'callback'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|class|POP3HelperMixin
dedent|''
dedent|''
name|'class'
name|'POP3HelperMixin'
op|':'
newline|'\n'
DECL|variable|serverCTX
indent|'    '
name|'serverCTX'
op|'='
name|'None'
newline|'\n'
DECL|variable|clientCTX
name|'clientCTX'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'server'
op|'='
name|'pop3testserver'
op|'.'
name|'POP3TestServer'
op|'('
name|'contextFactory'
op|'='
name|'self'
op|'.'
name|'serverCTX'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'='
name|'SimpleClient'
op|'('
name|'d'
op|','
name|'contextFactory'
op|'='
name|'self'
op|'.'
name|'clientCTX'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'.'
name|'timeout'
op|'='
number|'30'
newline|'\n'
name|'self'
op|'.'
name|'connected'
op|'='
name|'d'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'del'
name|'self'
op|'.'
name|'server'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'client'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'connected'
newline|'\n'
nl|'\n'
DECL|member|_cbStopClient
dedent|''
name|'def'
name|'_cbStopClient'
op|'('
name|'self'
op|','
name|'ignore'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'client'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_ebGeneral
dedent|''
name|'def'
name|'_ebGeneral'
op|'('
name|'self'
op|','
name|'failure'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'client'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'server'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
name|'return'
name|'failure'
newline|'\n'
nl|'\n'
DECL|member|loopback
dedent|''
name|'def'
name|'loopback'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'loopback'
op|'.'
name|'loopbackTCP'
op|'('
name|'self'
op|'.'
name|'server'
op|','
name|'self'
op|'.'
name|'client'
op|','
name|'noisy'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TLSServerFactory
dedent|''
dedent|''
name|'class'
name|'TLSServerFactory'
op|'('
name|'protocol'
op|'.'
name|'ServerFactory'
op|')'
op|':'
newline|'\n'
DECL|class|protocol
indent|'    '
name|'class'
name|'protocol'
op|'('
name|'basic'
op|'.'
name|'LineReceiver'
op|')'
op|':'
newline|'\n'
DECL|variable|context
indent|'        '
name|'context'
op|'='
name|'None'
newline|'\n'
DECL|variable|output
name|'output'
op|'='
op|'['
op|']'
newline|'\n'
DECL|member|connectionMade
name|'def'
name|'connectionMade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'factory'
op|'.'
name|'input'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'output'
op|'='
name|'self'
op|'.'
name|'output'
op|'['
op|':'
op|']'
newline|'\n'
name|'map'
op|'('
name|'self'
op|'.'
name|'sendLine'
op|','
name|'self'
op|'.'
name|'output'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
op|')'
newline|'\n'
DECL|member|lineReceived
dedent|''
name|'def'
name|'lineReceived'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'factory'
op|'.'
name|'input'
op|'.'
name|'append'
op|'('
name|'line'
op|')'
newline|'\n'
name|'map'
op|'('
name|'self'
op|'.'
name|'sendLine'
op|','
name|'self'
op|'.'
name|'output'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
op|')'
newline|'\n'
name|'if'
name|'line'
op|'=='
string|"'STLS'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'startTLS'
op|'('
name|'self'
op|'.'
name|'context'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|POP3TLSTestCase
dedent|''
dedent|''
dedent|''
dedent|''
name|'class'
name|'POP3TLSTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|testStartTLS
indent|'    '
name|'def'
name|'testStartTLS'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sf'
op|'='
name|'TLSServerFactory'
op|'('
op|')'
newline|'\n'
name|'sf'
op|'.'
name|'protocol'
op|'.'
name|'output'
op|'='
op|'['
nl|'\n'
op|'['
string|"'+OK'"
op|']'
op|','
comment|'# Server greeting'
nl|'\n'
op|'['
string|"'+OK'"
op|','
string|"'STLS'"
op|','
string|"'.'"
op|']'
op|','
comment|'# CAPA response'
nl|'\n'
op|'['
string|"'+OK'"
op|']'
op|','
comment|'# STLS response'
nl|'\n'
op|'['
string|"'+OK'"
op|','
string|"'.'"
op|']'
op|','
comment|'# Second CAPA response'
nl|'\n'
op|'['
string|"'+OK'"
op|']'
comment|'# QUIT response'
nl|'\n'
op|']'
newline|'\n'
name|'sf'
op|'.'
name|'protocol'
op|'.'
name|'context'
op|'='
name|'ServerTLSContext'
op|'('
op|')'
newline|'\n'
name|'port'
op|'='
name|'reactor'
op|'.'
name|'listenTCP'
op|'('
number|'0'
op|','
name|'sf'
op|','
name|'interface'
op|'='
string|"'127.0.0.1'"
op|')'
newline|'\n'
name|'H'
op|'='
name|'port'
op|'.'
name|'getHost'
op|'('
op|')'
op|'.'
name|'host'
newline|'\n'
name|'P'
op|'='
name|'port'
op|'.'
name|'getHost'
op|'('
op|')'
op|'.'
name|'port'
newline|'\n'
nl|'\n'
name|'cp'
op|'='
name|'SimpleClient'
op|'('
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
op|','
name|'ClientTLSContext'
op|'('
op|')'
op|')'
newline|'\n'
name|'cf'
op|'='
name|'protocol'
op|'.'
name|'ClientFactory'
op|'('
op|')'
newline|'\n'
name|'cf'
op|'.'
name|'protocol'
op|'='
name|'lambda'
op|':'
name|'cp'
newline|'\n'
nl|'\n'
name|'conn'
op|'='
name|'reactor'
op|'.'
name|'connectTCP'
op|'('
name|'H'
op|','
name|'P'
op|','
name|'cf'
op|')'
newline|'\n'
nl|'\n'
DECL|function|cbConnected
name|'def'
name|'cbConnected'
op|'('
name|'ignored'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Connected to server; starting TLS"'
op|')'
newline|'\n'
name|'return'
name|'cp'
op|'.'
name|'startTLS'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|cbStartedTLS
dedent|''
name|'def'
name|'cbStartedTLS'
op|'('
name|'ignored'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Started TLS; disconnecting"'
op|')'
newline|'\n'
name|'return'
name|'cp'
op|'.'
name|'quit'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|cbDisconnected
dedent|''
name|'def'
name|'cbDisconnected'
op|'('
name|'ign'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Disconnected; asserting correct input received"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'sf'
op|'.'
name|'input'
op|','
nl|'\n'
op|'['
string|"'CAPA'"
op|','
string|"'STLS'"
op|','
string|"'CAPA'"
op|','
string|"'QUIT'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|cleanup
dedent|''
name|'def'
name|'cleanup'
op|'('
name|'result'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Asserted correct input; disconnecting client and shutting down server"'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'disconnect'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|cbShutdown
name|'def'
name|'cbShutdown'
op|'('
name|'ignored'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Shut down server"'
op|')'
newline|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'port'
op|'.'
name|'stopListening'
op|')'
op|'.'
name|'addCallback'
op|'('
name|'cbShutdown'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'cp'
op|'.'
name|'deferred'
op|'.'
name|'addCallback'
op|'('
name|'cbConnected'
op|')'
newline|'\n'
name|'cp'
op|'.'
name|'deferred'
op|'.'
name|'addCallback'
op|'('
name|'cbStartedTLS'
op|')'
newline|'\n'
name|'cp'
op|'.'
name|'deferred'
op|'.'
name|'addCallback'
op|'('
name|'cbDisconnected'
op|')'
newline|'\n'
name|'cp'
op|'.'
name|'deferred'
op|'.'
name|'addBoth'
op|'('
name|'cleanup'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'cp'
op|'.'
name|'deferred'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|POP3TimeoutTestCase
dedent|''
dedent|''
name|'class'
name|'POP3TimeoutTestCase'
op|'('
name|'POP3HelperMixin'
op|','
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|testTimeout
indent|'    '
name|'def'
name|'testTimeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|login
indent|'        '
name|'def'
name|'login'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'login'
op|'('
string|"'test'"
op|','
string|"'twisted'"
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'loggedIn'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'timedOut'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|function|loggedIn
dedent|''
name|'def'
name|'loggedIn'
op|'('
name|'result'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Successfully logged in!?  Impossible!"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|timedOut
dedent|''
name|'def'
name|'timedOut'
op|'('
name|'failure'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'failure'
op|'.'
name|'trap'
op|'('
name|'error'
op|'.'
name|'TimeoutError'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_cbStopClient'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|function|quit
dedent|''
name|'def'
name|'quit'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'client'
op|'.'
name|'quit'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'client'
op|'.'
name|'timeout'
op|'='
number|'0.01'
newline|'\n'
nl|'\n'
comment|'# Tell the server to not return a response to client.  This'
nl|'\n'
comment|'# will trigger a timeout.'
nl|'\n'
name|'pop3testserver'
op|'.'
name|'TIMEOUT_RESPONSE'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'methods'
op|'='
op|'['
name|'login'
op|','
name|'quit'
op|']'
newline|'\n'
name|'map'
op|'('
name|'self'
op|'.'
name|'connected'
op|'.'
name|'addCallback'
op|','
name|'map'
op|'('
name|'strip'
op|','
name|'methods'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connected'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbStopClient'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connected'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebGeneral'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'loopback'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'ClientTLSContext'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'    '
name|'for'
name|'case'
name|'in'
op|'('
name|'POP3TLSTestCase'
op|','
op|')'
op|':'
newline|'\n'
indent|'        '
name|'case'
op|'.'
name|'skip'
op|'='
string|'"OpenSSL not present"'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'interfaces'
op|'.'
name|'IReactorSSL'
op|'('
name|'reactor'
op|','
name|'None'
op|')'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'    '
name|'for'
name|'case'
name|'in'
op|'('
name|'POP3TLSTestCase'
op|','
op|')'
op|':'
newline|'\n'
indent|'        '
name|'case'
op|'.'
name|'skip'
op|'='
string|'"Reactor doesn\'t support SSL"'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
