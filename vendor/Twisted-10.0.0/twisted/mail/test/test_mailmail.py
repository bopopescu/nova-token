begin_unit
comment|'# Copyright (c) 2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nTests for L{twisted.mail.scripts.mailmail}, the implementation of the\ncommand line program I{mailmail}.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'from'
name|'StringIO'
name|'import'
name|'StringIO'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
op|'.'
name|'unittest'
name|'import'
name|'TestCase'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'mail'
op|'.'
name|'scripts'
op|'.'
name|'mailmail'
name|'import'
name|'parseOptions'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|OptionsTests
name|'class'
name|'OptionsTests'
op|'('
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Tests for L{parseOptions} which parses command line arguments and reads\n    message text from stdin to produce an L{Options} instance which can be\n    used to send a message.\n    """'
newline|'\n'
DECL|member|test_unspecifiedRecipients
name|'def'
name|'test_unspecifiedRecipients'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        If no recipients are given in the argument list and there is no\n        recipient header in the message text, L{parseOptions} raises\n        L{SystemExit} with a string describing the problem.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'setattr'
op|','
name|'sys'
op|','
string|"'stdin'"
op|','
name|'sys'
op|'.'
name|'stdin'
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'stdin'
op|'='
name|'StringIO'
op|'('
nl|'\n'
string|"'Subject: foo\\n'"
nl|'\n'
string|"'\\n'"
nl|'\n'
string|"'Hello, goodbye.\\n'"
op|')'
newline|'\n'
name|'exc'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'SystemExit'
op|','
name|'parseOptions'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'exc'
op|'.'
name|'args'
op|','
op|'('
string|"'No recipients specified.'"
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_listQueueInformation
dedent|''
name|'def'
name|'test_listQueueInformation'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        The I{-bp} option for listing queue information is unsupported and\n        if it is passed to L{parseOptions}, L{SystemExit} is raised.\n        """'
newline|'\n'
name|'exc'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'SystemExit'
op|','
name|'parseOptions'
op|','
op|'['
string|"'-bp'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'exc'
op|'.'
name|'args'
op|','
op|'('
string|'"Unsupported option."'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_stdioTransport
dedent|''
name|'def'
name|'test_stdioTransport'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        The I{-bs} option for using stdin and stdout as the SMTP transport\n        is unsupported and if it is passed to L{parseOptions}, L{SystemExit}\n        is raised.\n        """'
newline|'\n'
name|'exc'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'SystemExit'
op|','
name|'parseOptions'
op|','
op|'['
string|"'-bs'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'exc'
op|'.'
name|'args'
op|','
op|'('
string|'"Unsupported option."'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_ignoreFullStop
dedent|''
name|'def'
name|'test_ignoreFullStop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        The I{-i} and I{-oi} options for ignoring C{"."} by itself on a line\n        are unsupported and if either is passed to L{parseOptions},\n        L{SystemExit} is raised.\n        """'
newline|'\n'
name|'exc'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'SystemExit'
op|','
name|'parseOptions'
op|','
op|'['
string|"'-i'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'exc'
op|'.'
name|'args'
op|','
op|'('
string|'"Unsupported option."'
op|','
op|')'
op|')'
newline|'\n'
name|'exc'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'SystemExit'
op|','
name|'parseOptions'
op|','
op|'['
string|"'-oi'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'exc'
op|'.'
name|'args'
op|','
op|'('
string|'"Unsupported option."'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_copyAliasedSender
dedent|''
name|'def'
name|'test_copyAliasedSender'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        The I{-om} option for copying the sender if they appear in an alias\n        expansion is unsupported and if it is passed to L{parseOptions},\n        L{SystemExit} is raised.\n        """'
newline|'\n'
name|'exc'
op|'='
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'SystemExit'
op|','
name|'parseOptions'
op|','
op|'['
string|"'-om'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'exc'
op|'.'
name|'args'
op|','
op|'('
string|'"Unsupported option."'
op|','
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
