begin_unit
comment|'# -*- test-case-name: twisted.mail.test.test_pop3 -*-'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Copyright (c) 2001-2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""\nPost-office Protocol version 3\n\n@author: Glyph Lefkowitz\n@author: Jp Calderone\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'string'
newline|'\n'
name|'import'
name|'base64'
newline|'\n'
name|'import'
name|'binascii'
newline|'\n'
name|'import'
name|'warnings'
newline|'\n'
nl|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
op|','
name|'Interface'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'mail'
name|'import'
name|'smtp'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'protocols'
name|'import'
name|'basic'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'protocols'
name|'import'
name|'policies'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'task'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'defer'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'interfaces'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'hashlib'
name|'import'
name|'md5'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
name|'import'
name|'cred'
newline|'\n'
name|'import'
name|'twisted'
op|'.'
name|'cred'
op|'.'
name|'error'
newline|'\n'
name|'import'
name|'twisted'
op|'.'
name|'cred'
op|'.'
name|'credentials'
newline|'\n'
nl|'\n'
comment|'##'
nl|'\n'
comment|'## Authentication'
nl|'\n'
comment|'##'
nl|'\n'
DECL|class|APOPCredentials
name|'class'
name|'APOPCredentials'
op|':'
newline|'\n'
indent|'    '
name|'implements'
op|'('
name|'cred'
op|'.'
name|'credentials'
op|'.'
name|'IUsernamePassword'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'magic'
op|','
name|'username'
op|','
name|'digest'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'magic'
op|'='
name|'magic'
newline|'\n'
name|'self'
op|'.'
name|'username'
op|'='
name|'username'
newline|'\n'
name|'self'
op|'.'
name|'digest'
op|'='
name|'digest'
newline|'\n'
nl|'\n'
DECL|member|checkPassword
dedent|''
name|'def'
name|'checkPassword'
op|'('
name|'self'
op|','
name|'password'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'seed'
op|'='
name|'self'
op|'.'
name|'magic'
op|'+'
name|'password'
newline|'\n'
name|'myDigest'
op|'='
name|'md5'
op|'('
name|'seed'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
name|'return'
name|'myDigest'
op|'=='
name|'self'
op|'.'
name|'digest'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_HeadersPlusNLines
dedent|''
dedent|''
name|'class'
name|'_HeadersPlusNLines'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'f'
op|','
name|'n'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'f'
op|'='
name|'f'
newline|'\n'
name|'self'
op|'.'
name|'n'
op|'='
name|'n'
newline|'\n'
name|'self'
op|'.'
name|'linecount'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'headers'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'done'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'buf'
op|'='
string|"''"
newline|'\n'
nl|'\n'
DECL|member|read
dedent|''
name|'def'
name|'read'
op|'('
name|'self'
op|','
name|'bytes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'done'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"''"
newline|'\n'
dedent|''
name|'data'
op|'='
name|'self'
op|'.'
name|'f'
op|'.'
name|'read'
op|'('
name|'bytes'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'data'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'df'
op|','
name|'sz'
op|'='
name|'data'
op|'.'
name|'find'
op|'('
string|"'\\r\\n\\r\\n'"
op|')'
op|','
number|'4'
newline|'\n'
name|'if'
name|'df'
op|'=='
op|'-'
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'df'
op|','
name|'sz'
op|'='
name|'data'
op|'.'
name|'find'
op|'('
string|"'\\n\\n'"
op|')'
op|','
number|'2'
newline|'\n'
dedent|''
name|'if'
name|'df'
op|'!='
op|'-'
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'df'
op|'+='
name|'sz'
newline|'\n'
name|'val'
op|'='
name|'data'
op|'['
op|':'
name|'df'
op|']'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'['
name|'df'
op|':'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'linecount'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'headers'
op|'='
number|'0'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'val'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'linecount'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'dsplit'
op|'='
op|'('
name|'self'
op|'.'
name|'buf'
op|'+'
name|'data'
op|')'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'buf'
op|'='
name|'dsplit'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'for'
name|'ln'
name|'in'
name|'dsplit'
op|'['
op|':'
op|'-'
number|'1'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'linecount'
op|'>'
name|'self'
op|'.'
name|'n'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'done'
op|'='
number|'1'
newline|'\n'
name|'return'
name|'val'
newline|'\n'
dedent|''
name|'val'
op|'+='
op|'('
name|'ln'
op|'+'
string|"'\\n'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'linecount'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'return'
name|'val'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'data'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|_POP3MessageDeleted
dedent|''
dedent|''
dedent|''
name|'class'
name|'_POP3MessageDeleted'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Internal control-flow exception.  Indicates the file of a deleted message\n    was requested.\n    """'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|POP3Error
dedent|''
name|'class'
name|'POP3Error'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|_IteratorBuffer
dedent|''
name|'class'
name|'_IteratorBuffer'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|variable|bufSize
indent|'    '
name|'bufSize'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'write'
op|','
name|'iterable'
op|','
name|'memoryBufferSize'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create a _IteratorBuffer.\n\n        @param write: A one-argument callable which will be invoked with a list\n        of strings which have been buffered.\n\n        @param iterable: The source of input strings as any iterable.\n\n        @param memoryBufferSize: The upper limit on buffered string length,\n        beyond which the buffer will be flushed to the writer.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'lines'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'write'
op|'='
name|'write'
newline|'\n'
name|'self'
op|'.'
name|'iterator'
op|'='
name|'iter'
op|'('
name|'iterable'
op|')'
newline|'\n'
name|'if'
name|'memoryBufferSize'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'memoryBufferSize'
op|'='
number|'2'
op|'**'
number|'16'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'memoryBufferSize'
op|'='
name|'memoryBufferSize'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|next
dedent|''
name|'def'
name|'next'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'v'
op|'='
name|'self'
op|'.'
name|'iterator'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'lines'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'write'
op|'('
name|'self'
op|'.'
name|'lines'
op|')'
newline|'\n'
comment|"# Drop some references, in case they're edges in a cycle."
nl|'\n'
dedent|''
name|'del'
name|'self'
op|'.'
name|'iterator'
op|','
name|'self'
op|'.'
name|'lines'
op|','
name|'self'
op|'.'
name|'write'
newline|'\n'
name|'raise'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'v'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'lines'
op|'.'
name|'append'
op|'('
name|'v'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'bufSize'
op|'+='
name|'len'
op|'('
name|'v'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'bufSize'
op|'>'
name|'self'
op|'.'
name|'memoryBufferSize'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'write'
op|'('
name|'self'
op|'.'
name|'lines'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'lines'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'bufSize'
op|'='
number|'0'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|iterateLineGenerator
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'iterateLineGenerator'
op|'('
name|'proto'
op|','
name|'gen'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Hook the given protocol instance up to the given iterator with an\n    _IteratorBuffer and schedule the result to be exhausted via the protocol.\n\n    @type proto: L{POP3}\n    @type gen: iterator\n    @rtype: L{twisted.internet.defer.Deferred}\n    """'
newline|'\n'
name|'coll'
op|'='
name|'_IteratorBuffer'
op|'('
name|'proto'
op|'.'
name|'transport'
op|'.'
name|'writeSequence'
op|','
name|'gen'
op|')'
newline|'\n'
name|'return'
name|'proto'
op|'.'
name|'schedule'
op|'('
name|'coll'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|successResponse
dedent|''
name|'def'
name|'successResponse'
op|'('
name|'response'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Format the given object as a positive response.\n    """'
newline|'\n'
name|'response'
op|'='
name|'str'
op|'('
name|'response'
op|')'
newline|'\n'
name|'return'
string|"'+OK %s\\r\\n'"
op|'%'
op|'('
name|'response'
op|','
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|formatStatResponse
dedent|''
name|'def'
name|'formatStatResponse'
op|'('
name|'msgs'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Format the list of message sizes appropriately for a STAT response.\n\n    Yields None until it finishes computing a result, then yields a str\n    instance that is suitable for use as a response to the STAT command.\n    Intended to be used with a L{twisted.internet.task.Cooperator}.\n    """'
newline|'\n'
name|'i'
op|'='
number|'0'
newline|'\n'
name|'bytes'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'size'
name|'in'
name|'msgs'
op|':'
newline|'\n'
indent|'        '
name|'i'
op|'+='
number|'1'
newline|'\n'
name|'bytes'
op|'+='
name|'size'
newline|'\n'
name|'yield'
name|'None'
newline|'\n'
dedent|''
name|'yield'
name|'successResponse'
op|'('
string|"'%d %d'"
op|'%'
op|'('
name|'i'
op|','
name|'bytes'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|formatListLines
dedent|''
name|'def'
name|'formatListLines'
op|'('
name|'msgs'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Format a list of message sizes appropriately for the lines of a LIST\n    response.\n\n    Yields str instances formatted appropriately for use as lines in the\n    response to the LIST command.  Does not include the trailing \'.\'.\n    """'
newline|'\n'
name|'i'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'size'
name|'in'
name|'msgs'
op|':'
newline|'\n'
indent|'        '
name|'i'
op|'+='
number|'1'
newline|'\n'
name|'yield'
string|"'%d %d\\r\\n'"
op|'%'
op|'('
name|'i'
op|','
name|'size'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|formatListResponse
dedent|''
dedent|''
name|'def'
name|'formatListResponse'
op|'('
name|'msgs'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Format a list of message sizes appropriately for a complete LIST response.\n\n    Yields str instances formatted appropriately for use as a LIST command\n    response.\n    """'
newline|'\n'
name|'yield'
name|'successResponse'
op|'('
name|'len'
op|'('
name|'msgs'
op|')'
op|')'
newline|'\n'
name|'for'
name|'ele'
name|'in'
name|'formatListLines'
op|'('
name|'msgs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'yield'
name|'ele'
newline|'\n'
dedent|''
name|'yield'
string|"'.\\r\\n'"
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|formatUIDListLines
dedent|''
name|'def'
name|'formatUIDListLines'
op|'('
name|'msgs'
op|','
name|'getUidl'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Format the list of message sizes appropriately for the lines of a UIDL\n    response.\n\n    Yields str instances formatted appropriately for use as lines in the\n    response to the UIDL command.  Does not include the trailing \'.\'.\n    """'
newline|'\n'
name|'for'
name|'i'
op|','
name|'m'
name|'in'
name|'enumerate'
op|'('
name|'msgs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'m'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'uid'
op|'='
name|'getUidl'
op|'('
name|'i'
op|')'
newline|'\n'
name|'yield'
string|"'%d %s\\r\\n'"
op|'%'
op|'('
name|'i'
op|'+'
number|'1'
op|','
name|'uid'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|formatUIDListResponse
dedent|''
dedent|''
dedent|''
name|'def'
name|'formatUIDListResponse'
op|'('
name|'msgs'
op|','
name|'getUidl'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Format a list of message sizes appropriately for a complete UIDL response.\n\n    Yields str instances formatted appropriately for use as a UIDL command\n    response.\n    """'
newline|'\n'
name|'yield'
name|'successResponse'
op|'('
string|"''"
op|')'
newline|'\n'
name|'for'
name|'ele'
name|'in'
name|'formatUIDListLines'
op|'('
name|'msgs'
op|','
name|'getUidl'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'yield'
name|'ele'
newline|'\n'
dedent|''
name|'yield'
string|"'.\\r\\n'"
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|POP3
dedent|''
name|'class'
name|'POP3'
op|'('
name|'basic'
op|'.'
name|'LineOnlyReceiver'
op|','
name|'policies'
op|'.'
name|'TimeoutMixin'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    POP3 server protocol implementation.\n\n    @ivar portal: A reference to the L{twisted.cred.portal.Portal} instance we\n    will authenticate through.\n\n    @ivar factory: A L{twisted.mail.pop3.IServerFactory} which will be used to\n    determine some extended behavior of the server.\n\n    @ivar timeOut: An integer which defines the minimum amount of time which\n    may elapse without receiving any traffic after which the client will be\n    disconnected.\n\n    @ivar schedule: A one-argument callable which should behave like\n    L{twisted.internet.task.coiterate}.\n    """'
newline|'\n'
name|'implements'
op|'('
name|'interfaces'
op|'.'
name|'IProducer'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|magic
name|'magic'
op|'='
name|'None'
newline|'\n'
DECL|variable|_userIs
name|'_userIs'
op|'='
name|'None'
newline|'\n'
DECL|variable|_onLogout
name|'_onLogout'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|variable|AUTH_CMDS
name|'AUTH_CMDS'
op|'='
op|'['
string|"'CAPA'"
op|','
string|"'USER'"
op|','
string|"'PASS'"
op|','
string|"'APOP'"
op|','
string|"'AUTH'"
op|','
string|"'RPOP'"
op|','
string|"'QUIT'"
op|']'
newline|'\n'
nl|'\n'
DECL|variable|portal
name|'portal'
op|'='
name|'None'
newline|'\n'
DECL|variable|factory
name|'factory'
op|'='
name|'None'
newline|'\n'
nl|'\n'
comment|"# The mailbox we're serving"
nl|'\n'
DECL|variable|mbox
name|'mbox'
op|'='
name|'None'
newline|'\n'
nl|'\n'
comment|'# Set this pretty low -- POP3 clients are expected to log in, download'
nl|'\n'
comment|'# everything, and log out.'
nl|'\n'
DECL|variable|timeOut
name|'timeOut'
op|'='
number|'300'
newline|'\n'
nl|'\n'
comment|'# Current protocol state'
nl|'\n'
DECL|variable|state
name|'state'
op|'='
string|'"COMMAND"'
newline|'\n'
nl|'\n'
comment|'# PIPELINE'
nl|'\n'
DECL|variable|blocked
name|'blocked'
op|'='
name|'None'
newline|'\n'
nl|'\n'
comment|'# Cooperate and suchlike.'
nl|'\n'
DECL|variable|schedule
name|'schedule'
op|'='
name|'staticmethod'
op|'('
name|'task'
op|'.'
name|'coiterate'
op|')'
newline|'\n'
nl|'\n'
comment|'# Message index of the highest retrieved message.'
nl|'\n'
DECL|variable|_highest
name|'_highest'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|connectionMade
name|'def'
name|'connectionMade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'magic'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'magic'
op|'='
name|'self'
op|'.'
name|'generateMagic'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'successResponse'
op|'('
name|'self'
op|'.'
name|'magic'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'setTimeout'
op|'('
name|'self'
op|'.'
name|'timeOut'
op|')'
newline|'\n'
name|'if'
name|'getattr'
op|'('
name|'self'
op|'.'
name|'factory'
op|','
string|"'noisy'"
op|','
name|'True'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"New connection from "'
op|'+'
name|'str'
op|'('
name|'self'
op|'.'
name|'transport'
op|'.'
name|'getPeer'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|connectionLost
dedent|''
dedent|''
name|'def'
name|'connectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'_onLogout'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_onLogout'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_onLogout'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'setTimeout'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|generateMagic
dedent|''
name|'def'
name|'generateMagic'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'smtp'
op|'.'
name|'messageid'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|successResponse
dedent|''
name|'def'
name|'successResponse'
op|'('
name|'self'
op|','
name|'message'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
name|'successResponse'
op|'('
name|'message'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|failResponse
dedent|''
name|'def'
name|'failResponse'
op|'('
name|'self'
op|','
name|'message'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'-ERR '"
op|'+'
name|'str'
op|'('
name|'message'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'#    def sendLine(self, line):'
nl|'\n'
comment|"#        print 'S:', repr(line)"
nl|'\n'
comment|'#        basic.LineOnlyReceiver.sendLine(self, line)'
nl|'\n'
nl|'\n'
DECL|member|lineReceived
dedent|''
name|'def'
name|'lineReceived'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
comment|"#        print 'C:', repr(line)"
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'resetTimeout'
op|'('
op|')'
newline|'\n'
name|'getattr'
op|'('
name|'self'
op|','
string|"'state_'"
op|'+'
name|'self'
op|'.'
name|'state'
op|')'
op|'('
name|'line'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_unblock
dedent|''
name|'def'
name|'_unblock'
op|'('
name|'self'
op|','
name|'_'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'commands'
op|'='
name|'self'
op|'.'
name|'blocked'
newline|'\n'
name|'self'
op|'.'
name|'blocked'
op|'='
name|'None'
newline|'\n'
name|'while'
name|'commands'
name|'and'
name|'self'
op|'.'
name|'blocked'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'cmd'
op|','
name|'args'
op|'='
name|'commands'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'processCommand'
op|'('
name|'cmd'
op|','
op|'*'
name|'args'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'blocked'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'blocked'
op|'.'
name|'extend'
op|'('
name|'commands'
op|')'
newline|'\n'
nl|'\n'
DECL|member|state_COMMAND
dedent|''
dedent|''
name|'def'
name|'state_COMMAND'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'processCommand'
op|'('
op|'*'
name|'line'
op|'.'
name|'split'
op|'('
string|"' '"
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'ValueError'
op|','
name|'AttributeError'
op|','
name|'POP3Error'
op|','
name|'TypeError'
op|')'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'err'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failResponse'
op|'('
string|"'bad protocol or server: %s: %s'"
op|'%'
op|'('
name|'e'
op|'.'
name|'__class__'
op|'.'
name|'__name__'
op|','
name|'e'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|processCommand
dedent|''
dedent|''
name|'def'
name|'processCommand'
op|'('
name|'self'
op|','
name|'command'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'blocked'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'blocked'
op|'.'
name|'append'
op|'('
op|'('
name|'command'
op|','
name|'args'
op|')'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'command'
op|'='
name|'string'
op|'.'
name|'upper'
op|'('
name|'command'
op|')'
newline|'\n'
name|'authCmd'
op|'='
name|'command'
name|'in'
name|'self'
op|'.'
name|'AUTH_CMDS'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'mbox'
name|'and'
name|'not'
name|'authCmd'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'POP3Error'
op|'('
string|'"not authenticated yet: cannot do "'
op|'+'
name|'command'
op|')'
newline|'\n'
dedent|''
name|'f'
op|'='
name|'getattr'
op|'('
name|'self'
op|','
string|"'do_'"
op|'+'
name|'command'
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'f'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'f'
op|'('
op|'*'
name|'args'
op|')'
newline|'\n'
dedent|''
name|'raise'
name|'POP3Error'
op|'('
string|'"Unknown protocol command: "'
op|'+'
name|'command'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|listCapabilities
dedent|''
name|'def'
name|'listCapabilities'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'baseCaps'
op|'='
op|'['
nl|'\n'
string|'"TOP"'
op|','
nl|'\n'
string|'"USER"'
op|','
nl|'\n'
string|'"UIDL"'
op|','
nl|'\n'
string|'"PIPELINE"'
op|','
nl|'\n'
string|'"CELERITY"'
op|','
nl|'\n'
string|'"AUSPEX"'
op|','
nl|'\n'
string|'"POTENCE"'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'IServerFactory'
op|'.'
name|'providedBy'
op|'('
name|'self'
op|'.'
name|'factory'
op|')'
op|':'
newline|'\n'
comment|"# Oh my god.  We can't just loop over a list of these because"
nl|'\n'
comment|'# each has spectacularly different return value semantics!'
nl|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'v'
op|'='
name|'self'
op|'.'
name|'factory'
op|'.'
name|'cap_IMPLEMENTATION'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'NotImplementedError'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'err'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'baseCaps'
op|'.'
name|'append'
op|'('
string|'"IMPLEMENTATION "'
op|'+'
name|'str'
op|'('
name|'v'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'v'
op|'='
name|'self'
op|'.'
name|'factory'
op|'.'
name|'cap_EXPIRE'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'NotImplementedError'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'err'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'v'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'v'
op|'='
string|'"NEVER"'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'factory'
op|'.'
name|'perUserExpiration'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'self'
op|'.'
name|'mbox'
op|':'
newline|'\n'
indent|'                        '
name|'v'
op|'='
name|'str'
op|'('
name|'self'
op|'.'
name|'mbox'
op|'.'
name|'messageExpiration'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'v'
op|'='
name|'str'
op|'('
name|'v'
op|')'
op|'+'
string|'" USER"'
newline|'\n'
dedent|''
dedent|''
name|'v'
op|'='
name|'str'
op|'('
name|'v'
op|')'
newline|'\n'
name|'baseCaps'
op|'.'
name|'append'
op|'('
string|'"EXPIRE "'
op|'+'
name|'v'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'v'
op|'='
name|'self'
op|'.'
name|'factory'
op|'.'
name|'cap_LOGIN_DELAY'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'NotImplementedError'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'err'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'factory'
op|'.'
name|'perUserLoginDelay'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'self'
op|'.'
name|'mbox'
op|':'
newline|'\n'
indent|'                        '
name|'v'
op|'='
name|'str'
op|'('
name|'self'
op|'.'
name|'mbox'
op|'.'
name|'loginDelay'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'v'
op|'='
name|'str'
op|'('
name|'v'
op|')'
op|'+'
string|'" USER"'
newline|'\n'
dedent|''
dedent|''
name|'v'
op|'='
name|'str'
op|'('
name|'v'
op|')'
newline|'\n'
name|'baseCaps'
op|'.'
name|'append'
op|'('
string|'"LOGIN-DELAY "'
op|'+'
name|'v'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'v'
op|'='
name|'self'
op|'.'
name|'factory'
op|'.'
name|'challengers'
newline|'\n'
dedent|''
name|'except'
name|'AttributeError'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'err'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'baseCaps'
op|'.'
name|'append'
op|'('
string|'"SASL "'
op|'+'
string|"' '"
op|'.'
name|'join'
op|'('
name|'v'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'baseCaps'
newline|'\n'
nl|'\n'
DECL|member|do_CAPA
dedent|''
name|'def'
name|'do_CAPA'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'successResponse'
op|'('
string|'"I can do the following:"'
op|')'
newline|'\n'
name|'for'
name|'cap'
name|'in'
name|'self'
op|'.'
name|'listCapabilities'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendLine'
op|'('
name|'cap'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'sendLine'
op|'('
string|'"."'
op|')'
newline|'\n'
nl|'\n'
DECL|member|do_AUTH
dedent|''
name|'def'
name|'do_AUTH'
op|'('
name|'self'
op|','
name|'args'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'getattr'
op|'('
name|'self'
op|'.'
name|'factory'
op|','
string|"'challengers'"
op|','
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'failResponse'
op|'('
string|'"AUTH extension unsupported"'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'args'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'successResponse'
op|'('
string|'"Supported authentication methods:"'
op|')'
newline|'\n'
name|'for'
name|'a'
name|'in'
name|'self'
op|'.'
name|'factory'
op|'.'
name|'challengers'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'sendLine'
op|'('
name|'a'
op|'.'
name|'upper'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'sendLine'
op|'('
string|'"."'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'auth'
op|'='
name|'self'
op|'.'
name|'factory'
op|'.'
name|'challengers'
op|'.'
name|'get'
op|'('
name|'args'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'upper'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'portal'
name|'or'
name|'not'
name|'auth'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'failResponse'
op|'('
string|'"Unsupported SASL selected"'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_auth'
op|'='
name|'auth'
op|'('
op|')'
newline|'\n'
name|'chal'
op|'='
name|'self'
op|'.'
name|'_auth'
op|'.'
name|'getChallenge'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'+ '"
op|'+'
name|'base64'
op|'.'
name|'encodestring'
op|'('
name|'chal'
op|')'
op|'.'
name|'rstrip'
op|'('
string|"'\\n'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'state'
op|'='
string|"'AUTH'"
newline|'\n'
nl|'\n'
DECL|member|state_AUTH
dedent|''
name|'def'
name|'state_AUTH'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'state'
op|'='
string|'"COMMAND"'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'parts'
op|'='
name|'base64'
op|'.'
name|'decodestring'
op|'('
name|'line'
op|')'
op|'.'
name|'split'
op|'('
name|'None'
op|','
number|'1'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'binascii'
op|'.'
name|'Error'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'failResponse'
op|'('
string|'"Invalid BASE64 encoding"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'len'
op|'('
name|'parts'
op|')'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'failResponse'
op|'('
string|'"Invalid AUTH response"'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_auth'
op|'.'
name|'username'
op|'='
name|'parts'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_auth'
op|'.'
name|'response'
op|'='
name|'parts'
op|'['
number|'1'
op|']'
newline|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'portal'
op|'.'
name|'login'
op|'('
name|'self'
op|'.'
name|'_auth'
op|','
name|'None'
op|','
name|'IMailbox'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbMailbox'
op|','
name|'parts'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebMailbox'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebUnexpected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|do_APOP
dedent|''
dedent|''
name|'def'
name|'do_APOP'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'digest'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'authenticateUserAPOP'
op|','
name|'user'
op|','
name|'digest'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_cbMailbox'
op|','
name|'self'
op|'.'
name|'_ebMailbox'
op|','
name|'callbackArgs'
op|'='
op|'('
name|'user'
op|','
op|')'
nl|'\n'
op|')'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebUnexpected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cbMailbox
dedent|''
name|'def'
name|'_cbMailbox'
op|'('
name|'self'
op|','
op|'('
name|'interface'
op|','
name|'avatar'
op|','
name|'logout'
op|')'
op|','
name|'user'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'interface'
name|'is'
name|'not'
name|'IMailbox'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'failResponse'
op|'('
string|"'Authentication failed'"
op|')'
newline|'\n'
name|'log'
op|'.'
name|'err'
op|'('
string|'"_cbMailbox() called with an interface other than IMailbox"'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'mbox'
op|'='
name|'avatar'
newline|'\n'
name|'self'
op|'.'
name|'_onLogout'
op|'='
name|'logout'
newline|'\n'
name|'self'
op|'.'
name|'successResponse'
op|'('
string|"'Authentication succeeded'"
op|')'
newline|'\n'
name|'if'
name|'getattr'
op|'('
name|'self'
op|'.'
name|'factory'
op|','
string|"'noisy'"
op|','
name|'True'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Authenticated login for "'
op|'+'
name|'user'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_ebMailbox
dedent|''
dedent|''
name|'def'
name|'_ebMailbox'
op|'('
name|'self'
op|','
name|'failure'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'failure'
op|'='
name|'failure'
op|'.'
name|'trap'
op|'('
name|'cred'
op|'.'
name|'error'
op|'.'
name|'LoginDenied'
op|','
name|'cred'
op|'.'
name|'error'
op|'.'
name|'LoginFailed'
op|')'
newline|'\n'
name|'if'
name|'issubclass'
op|'('
name|'failure'
op|','
name|'cred'
op|'.'
name|'error'
op|'.'
name|'LoginDenied'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'failResponse'
op|'('
string|'"Access denied: "'
op|'+'
name|'str'
op|'('
name|'failure'
op|')'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'issubclass'
op|'('
name|'failure'
op|','
name|'cred'
op|'.'
name|'error'
op|'.'
name|'LoginFailed'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'failResponse'
op|'('
string|"'Authentication failed'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'getattr'
op|'('
name|'self'
op|'.'
name|'factory'
op|','
string|"'noisy'"
op|','
name|'True'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Denied login attempt from "'
op|'+'
name|'str'
op|'('
name|'self'
op|'.'
name|'transport'
op|'.'
name|'getPeer'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_ebUnexpected
dedent|''
dedent|''
name|'def'
name|'_ebUnexpected'
op|'('
name|'self'
op|','
name|'failure'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'failResponse'
op|'('
string|"'Server error: '"
op|'+'
name|'failure'
op|'.'
name|'getErrorMessage'
op|'('
op|')'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'err'
op|'('
name|'failure'
op|')'
newline|'\n'
nl|'\n'
DECL|member|do_USER
dedent|''
name|'def'
name|'do_USER'
op|'('
name|'self'
op|','
name|'user'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_userIs'
op|'='
name|'user'
newline|'\n'
name|'self'
op|'.'
name|'successResponse'
op|'('
string|"'USER accepted, send PASS'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|do_PASS
dedent|''
name|'def'
name|'do_PASS'
op|'('
name|'self'
op|','
name|'password'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'_userIs'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'failResponse'
op|'('
string|'"USER required before PASS"'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'user'
op|'='
name|'self'
op|'.'
name|'_userIs'
newline|'\n'
name|'self'
op|'.'
name|'_userIs'
op|'='
name|'None'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'authenticateUserPASS'
op|','
name|'user'
op|','
name|'password'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'self'
op|'.'
name|'_cbMailbox'
op|','
name|'self'
op|'.'
name|'_ebMailbox'
op|','
name|'callbackArgs'
op|'='
op|'('
name|'user'
op|','
op|')'
nl|'\n'
op|')'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebUnexpected'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_longOperation
dedent|''
name|'def'
name|'_longOperation'
op|'('
name|'self'
op|','
name|'d'
op|')'
op|':'
newline|'\n'
comment|'# Turn off timeouts and block further processing until the Deferred'
nl|'\n'
comment|'# fires, then reverse those changes.'
nl|'\n'
indent|'        '
name|'timeOut'
op|'='
name|'self'
op|'.'
name|'timeOut'
newline|'\n'
name|'self'
op|'.'
name|'setTimeout'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'blocked'
op|'='
op|'['
op|']'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_unblock'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'ign'
op|':'
name|'self'
op|'.'
name|'setTimeout'
op|'('
name|'timeOut'
op|')'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_coiterate
dedent|''
name|'def'
name|'_coiterate'
op|'('
name|'self'
op|','
name|'gen'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'schedule'
op|'('
name|'_IteratorBuffer'
op|'('
name|'self'
op|'.'
name|'transport'
op|'.'
name|'writeSequence'
op|','
name|'gen'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_STAT
dedent|''
name|'def'
name|'do_STAT'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'mbox'
op|'.'
name|'listMessages'
op|')'
newline|'\n'
DECL|function|cbMessages
name|'def'
name|'cbMessages'
op|'('
name|'msgs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_coiterate'
op|'('
name|'formatStatResponse'
op|'('
name|'msgs'
op|')'
op|')'
newline|'\n'
DECL|function|ebMessages
dedent|''
name|'def'
name|'ebMessages'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'failResponse'
op|'('
name|'err'
op|'.'
name|'getErrorMessage'
op|'('
op|')'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Unexpected do_STAT failure:"'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'err'
op|'('
name|'err'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_longOperation'
op|'('
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'cbMessages'
op|','
name|'ebMessages'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_LIST
dedent|''
name|'def'
name|'do_LIST'
op|'('
name|'self'
op|','
name|'i'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'i'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'mbox'
op|'.'
name|'listMessages'
op|')'
newline|'\n'
DECL|function|cbMessages
name|'def'
name|'cbMessages'
op|'('
name|'msgs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'_coiterate'
op|'('
name|'formatListResponse'
op|'('
name|'msgs'
op|')'
op|')'
newline|'\n'
DECL|function|ebMessages
dedent|''
name|'def'
name|'ebMessages'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'failResponse'
op|'('
name|'err'
op|'.'
name|'getErrorMessage'
op|'('
op|')'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Unexpected do_LIST failure:"'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'err'
op|'('
name|'err'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_longOperation'
op|'('
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'cbMessages'
op|','
name|'ebMessages'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'i'
op|'='
name|'int'
op|'('
name|'i'
op|')'
newline|'\n'
name|'if'
name|'i'
op|'<'
number|'1'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'ValueError'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'failResponse'
op|'('
string|'"Invalid message-number: %r"'
op|'%'
op|'('
name|'i'
op|','
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'mbox'
op|'.'
name|'listMessages'
op|','
name|'i'
op|'-'
number|'1'
op|')'
newline|'\n'
DECL|function|cbMessage
name|'def'
name|'cbMessage'
op|'('
name|'msg'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'successResponse'
op|'('
string|"'%d %d'"
op|'%'
op|'('
name|'i'
op|','
name|'msg'
op|')'
op|')'
newline|'\n'
DECL|function|ebMessage
dedent|''
name|'def'
name|'ebMessage'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'errcls'
op|'='
name|'err'
op|'.'
name|'check'
op|'('
name|'ValueError'
op|','
name|'IndexError'
op|')'
newline|'\n'
name|'if'
name|'errcls'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                        '
name|'if'
name|'errcls'
name|'is'
name|'IndexError'
op|':'
newline|'\n'
comment|'# IndexError was supported for a while, but really'
nl|'\n'
comment|"# shouldn't be.  One error condition, one exception"
nl|'\n'
comment|'# type.'
nl|'\n'
indent|'                            '
name|'warnings'
op|'.'
name|'warn'
op|'('
nl|'\n'
string|'"twisted.mail.pop3.IMailbox.listMessages may not "'
nl|'\n'
string|'"raise IndexError for out-of-bounds message numbers: "'
nl|'\n'
string|'"raise ValueError instead."'
op|','
nl|'\n'
name|'PendingDeprecationWarning'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'failResponse'
op|'('
string|'"Invalid message-number: %r"'
op|'%'
op|'('
name|'i'
op|','
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'failResponse'
op|'('
name|'err'
op|'.'
name|'getErrorMessage'
op|'('
op|')'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Unexpected do_LIST failure:"'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'err'
op|'('
name|'err'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'self'
op|'.'
name|'_longOperation'
op|'('
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'cbMessage'
op|','
name|'ebMessage'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_UIDL
dedent|''
dedent|''
dedent|''
name|'def'
name|'do_UIDL'
op|'('
name|'self'
op|','
name|'i'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'i'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'mbox'
op|'.'
name|'listMessages'
op|')'
newline|'\n'
DECL|function|cbMessages
name|'def'
name|'cbMessages'
op|'('
name|'msgs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'_coiterate'
op|'('
name|'formatUIDListResponse'
op|'('
name|'msgs'
op|','
name|'self'
op|'.'
name|'mbox'
op|'.'
name|'getUidl'
op|')'
op|')'
newline|'\n'
DECL|function|ebMessages
dedent|''
name|'def'
name|'ebMessages'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'failResponse'
op|'('
name|'err'
op|'.'
name|'getErrorMessage'
op|'('
op|')'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Unexpected do_UIDL failure:"'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'err'
op|'('
name|'err'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_longOperation'
op|'('
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'cbMessages'
op|','
name|'ebMessages'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'i'
op|'='
name|'int'
op|'('
name|'i'
op|')'
newline|'\n'
name|'if'
name|'i'
op|'<'
number|'1'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'ValueError'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'failResponse'
op|'('
string|'"Bad message number argument"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'msg'
op|'='
name|'self'
op|'.'
name|'mbox'
op|'.'
name|'getUidl'
op|'('
name|'i'
op|'-'
number|'1'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'IndexError'
op|':'
newline|'\n'
comment|'# XXX TODO See above comment regarding IndexError.'
nl|'\n'
indent|'                    '
name|'warnings'
op|'.'
name|'warn'
op|'('
nl|'\n'
string|'"twisted.mail.pop3.IMailbox.getUidl may not "'
nl|'\n'
string|'"raise IndexError for out-of-bounds message numbers: "'
nl|'\n'
string|'"raise ValueError instead."'
op|','
nl|'\n'
name|'PendingDeprecationWarning'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failResponse'
op|'('
string|'"Bad message number argument"'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'failResponse'
op|'('
string|'"Bad message number argument"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'successResponse'
op|'('
name|'str'
op|'('
name|'msg'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_getMessageFile
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'_getMessageFile'
op|'('
name|'self'
op|','
name|'i'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Retrieve the size and contents of a given message, as a two-tuple.\n\n        @param i: The number of the message to operate on.  This is a base-ten\n        string representation starting at 1.\n\n        @return: A Deferred which fires with a two-tuple of an integer and a\n        file-like object.\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'int'
op|'('
name|'i'
op|')'
op|'-'
number|'1'
newline|'\n'
name|'if'
name|'msg'
op|'<'
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'ValueError'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'failResponse'
op|'('
string|'"Bad message number argument"'
op|')'
newline|'\n'
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'sizeDeferred'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'mbox'
op|'.'
name|'listMessages'
op|','
name|'msg'
op|')'
newline|'\n'
DECL|function|cbMessageSize
name|'def'
name|'cbMessageSize'
op|'('
name|'size'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'size'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'defer'
op|'.'
name|'fail'
op|'('
name|'_POP3MessageDeleted'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'fileDeferred'
op|'='
name|'defer'
op|'.'
name|'maybeDeferred'
op|'('
name|'self'
op|'.'
name|'mbox'
op|'.'
name|'getMessage'
op|','
name|'msg'
op|')'
newline|'\n'
name|'fileDeferred'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'fObj'
op|':'
op|'('
name|'size'
op|','
name|'fObj'
op|')'
op|')'
newline|'\n'
name|'return'
name|'fileDeferred'
newline|'\n'
nl|'\n'
DECL|function|ebMessageSomething
dedent|''
name|'def'
name|'ebMessageSomething'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'errcls'
op|'='
name|'err'
op|'.'
name|'check'
op|'('
name|'_POP3MessageDeleted'
op|','
name|'ValueError'
op|','
name|'IndexError'
op|')'
newline|'\n'
name|'if'
name|'errcls'
name|'is'
name|'_POP3MessageDeleted'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'failResponse'
op|'('
string|'"message deleted"'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'errcls'
name|'in'
op|'('
name|'ValueError'
op|','
name|'IndexError'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'errcls'
name|'is'
name|'IndexError'
op|':'
newline|'\n'
comment|'# XXX TODO See above comment regarding IndexError.'
nl|'\n'
indent|'                    '
name|'warnings'
op|'.'
name|'warn'
op|'('
nl|'\n'
string|'"twisted.mail.pop3.IMailbox.listMessages may not "'
nl|'\n'
string|'"raise IndexError for out-of-bounds message numbers: "'
nl|'\n'
string|'"raise ValueError instead."'
op|','
nl|'\n'
name|'PendingDeprecationWarning'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'failResponse'
op|'('
string|'"Bad message number argument"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Unexpected _getMessageFile failure:"'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'err'
op|'('
name|'err'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'sizeDeferred'
op|'.'
name|'addCallback'
op|'('
name|'cbMessageSize'
op|')'
newline|'\n'
name|'sizeDeferred'
op|'.'
name|'addErrback'
op|'('
name|'ebMessageSomething'
op|')'
newline|'\n'
name|'return'
name|'sizeDeferred'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_sendMessageContent
dedent|''
name|'def'
name|'_sendMessageContent'
op|'('
name|'self'
op|','
name|'i'
op|','
name|'fpWrapper'
op|','
name|'successResponse'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'self'
op|'.'
name|'_getMessageFile'
op|'('
name|'i'
op|')'
newline|'\n'
DECL|function|cbMessageFile
name|'def'
name|'cbMessageFile'
op|'('
name|'info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'info'
name|'is'
name|'None'
op|':'
newline|'\n'
comment|'# Some error occurred - a failure response has been sent'
nl|'\n'
comment|'# already, just give up.'
nl|'\n'
indent|'                '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_highest'
op|'='
name|'max'
op|'('
name|'self'
op|'.'
name|'_highest'
op|','
name|'int'
op|'('
name|'i'
op|')'
op|')'
newline|'\n'
name|'resp'
op|','
name|'fp'
op|'='
name|'info'
newline|'\n'
name|'fp'
op|'='
name|'fpWrapper'
op|'('
name|'fp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'successResponse'
op|'('
name|'successResponse'
op|'('
name|'resp'
op|')'
op|')'
newline|'\n'
name|'s'
op|'='
name|'basic'
op|'.'
name|'FileSender'
op|'('
op|')'
newline|'\n'
name|'d'
op|'='
name|'s'
op|'.'
name|'beginFileTransfer'
op|'('
name|'fp'
op|','
name|'self'
op|'.'
name|'transport'
op|','
name|'self'
op|'.'
name|'transformChunk'
op|')'
newline|'\n'
nl|'\n'
DECL|function|cbFileTransfer
name|'def'
name|'cbFileTransfer'
op|'('
name|'lastsent'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'lastsent'
op|'!='
string|"'\\n'"
op|':'
newline|'\n'
indent|'                    '
name|'line'
op|'='
string|"'\\r\\n.'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'line'
op|'='
string|"'.'"
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'sendLine'
op|'('
name|'line'
op|')'
newline|'\n'
nl|'\n'
DECL|function|ebFileTransfer
dedent|''
name|'def'
name|'ebFileTransfer'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Unexpected error in _sendMessageContent:"'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'err'
op|'('
name|'err'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'cbFileTransfer'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'ebFileTransfer'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_longOperation'
op|'('
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'cbMessageFile'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_TOP
dedent|''
name|'def'
name|'do_TOP'
op|'('
name|'self'
op|','
name|'i'
op|','
name|'size'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'size'
op|'='
name|'int'
op|'('
name|'size'
op|')'
newline|'\n'
name|'if'
name|'size'
op|'<'
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'ValueError'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'failResponse'
op|'('
string|'"Bad line count argument"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'_sendMessageContent'
op|'('
nl|'\n'
name|'i'
op|','
nl|'\n'
name|'lambda'
name|'fp'
op|':'
name|'_HeadersPlusNLines'
op|'('
name|'fp'
op|','
name|'size'
op|')'
op|','
nl|'\n'
name|'lambda'
name|'size'
op|':'
string|'"Top of message follows"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_RETR
dedent|''
dedent|''
name|'def'
name|'do_RETR'
op|'('
name|'self'
op|','
name|'i'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_sendMessageContent'
op|'('
nl|'\n'
name|'i'
op|','
nl|'\n'
name|'lambda'
name|'fp'
op|':'
name|'fp'
op|','
nl|'\n'
name|'lambda'
name|'size'
op|':'
string|'"%d"'
op|'%'
op|'('
name|'size'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|transformChunk
dedent|''
name|'def'
name|'transformChunk'
op|'('
name|'self'
op|','
name|'chunk'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'chunk'
op|'.'
name|'replace'
op|'('
string|"'\\n'"
op|','
string|"'\\r\\n'"
op|')'
op|'.'
name|'replace'
op|'('
string|"'\\r\\n.'"
op|','
string|"'\\r\\n..'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|finishedFileTransfer
dedent|''
name|'def'
name|'finishedFileTransfer'
op|'('
name|'self'
op|','
name|'lastsent'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'lastsent'
op|'!='
string|"'\\n'"
op|':'
newline|'\n'
indent|'            '
name|'line'
op|'='
string|"'\\r\\n.'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'line'
op|'='
string|"'.'"
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'sendLine'
op|'('
name|'line'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_DELE
dedent|''
name|'def'
name|'do_DELE'
op|'('
name|'self'
op|','
name|'i'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'i'
op|'='
name|'int'
op|'('
name|'i'
op|')'
op|'-'
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'mbox'
op|'.'
name|'deleteMessage'
op|'('
name|'i'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'successResponse'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_NOOP
dedent|''
name|'def'
name|'do_NOOP'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Perform no operation.  Return a success code"""'
newline|'\n'
name|'self'
op|'.'
name|'successResponse'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_RSET
dedent|''
name|'def'
name|'do_RSET'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Unset all deleted message flags"""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'mbox'
op|'.'
name|'undeleteMessages'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'err'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'failResponse'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_highest'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'successResponse'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_LAST
dedent|''
dedent|''
name|'def'
name|'do_LAST'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Return the index of the highest message yet downloaded.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'successResponse'
op|'('
name|'self'
op|'.'
name|'_highest'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_RPOP
dedent|''
name|'def'
name|'do_RPOP'
op|'('
name|'self'
op|','
name|'user'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'failResponse'
op|'('
string|"'permission denied, sucker'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|do_QUIT
dedent|''
name|'def'
name|'do_QUIT'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'mbox'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'mbox'
op|'.'
name|'sync'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'successResponse'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|authenticateUserAPOP
dedent|''
name|'def'
name|'authenticateUserAPOP'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'digest'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Perform authentication of an APOP login.\n\n        @type user: C{str}\n        @param user: The name of the user attempting to log in.\n\n        @type digest: C{str}\n        @param digest: The response string with which the user replied.\n\n        @rtype: C{Deferred}\n        @return: A deferred whose callback is invoked if the login is\n        successful, and whose errback will be invoked otherwise.  The\n        callback will be passed a 3-tuple consisting of IMailbox,\n        an object implementing IMailbox, and a zero-argument callable\n        to be invoked when this session is terminated.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'portal'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'portal'
op|'.'
name|'login'
op|'('
nl|'\n'
name|'APOPCredentials'
op|'('
name|'self'
op|'.'
name|'magic'
op|','
name|'user'
op|','
name|'digest'
op|')'
op|','
nl|'\n'
name|'None'
op|','
nl|'\n'
name|'IMailbox'
nl|'\n'
op|')'
newline|'\n'
dedent|''
name|'raise'
name|'cred'
op|'.'
name|'error'
op|'.'
name|'UnauthorizedLogin'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|authenticateUserPASS
dedent|''
name|'def'
name|'authenticateUserPASS'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'password'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Perform authentication of a username/password login.\n\n        @type user: C{str}\n        @param user: The name of the user attempting to log in.\n\n        @type password: C{str}\n        @param password: The password to attempt to authenticate with.\n\n        @rtype: C{Deferred}\n        @return: A deferred whose callback is invoked if the login is\n        successful, and whose errback will be invoked otherwise.  The\n        callback will be passed a 3-tuple consisting of IMailbox,\n        an object implementing IMailbox, and a zero-argument callable\n        to be invoked when this session is terminated.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'portal'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'portal'
op|'.'
name|'login'
op|'('
nl|'\n'
name|'cred'
op|'.'
name|'credentials'
op|'.'
name|'UsernamePassword'
op|'('
name|'user'
op|','
name|'password'
op|')'
op|','
nl|'\n'
name|'None'
op|','
nl|'\n'
name|'IMailbox'
nl|'\n'
op|')'
newline|'\n'
dedent|''
name|'raise'
name|'cred'
op|'.'
name|'error'
op|'.'
name|'UnauthorizedLogin'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|IServerFactory
dedent|''
dedent|''
name|'class'
name|'IServerFactory'
op|'('
name|'Interface'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Interface for querying additional parameters of this POP3 server.\n\n    Any cap_* method may raise NotImplementedError if the particular\n    capability is not supported.  If cap_EXPIRE() does not raise\n    NotImplementedError, perUserExpiration() must be implemented, otherwise\n    they are optional.  If cap_LOGIN_DELAY() is implemented,\n    perUserLoginDelay() must be implemented, otherwise they are optional.\n\n    @ivar challengers: A dictionary mapping challenger names to classes\n    implementing C{IUsernameHashedPassword}.\n    """'
newline|'\n'
nl|'\n'
DECL|member|cap_IMPLEMENTATION
name|'def'
name|'cap_IMPLEMENTATION'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return a string describing this POP3 server implementation."""'
newline|'\n'
nl|'\n'
DECL|member|cap_EXPIRE
dedent|''
name|'def'
name|'cap_EXPIRE'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return the minimum number of days messages are retained."""'
newline|'\n'
nl|'\n'
DECL|member|perUserExpiration
dedent|''
name|'def'
name|'perUserExpiration'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Indicate whether message expiration is per-user.\n\n        @return: True if it is, false otherwise.\n        """'
newline|'\n'
nl|'\n'
DECL|member|cap_LOGIN_DELAY
dedent|''
name|'def'
name|'cap_LOGIN_DELAY'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return the minimum number of seconds between client logins."""'
newline|'\n'
nl|'\n'
DECL|member|perUserLoginDelay
dedent|''
name|'def'
name|'perUserLoginDelay'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Indicate whether the login delay period is per-user.\n\n        @return: True if it is, false otherwise.\n        """'
newline|'\n'
nl|'\n'
DECL|class|IMailbox
dedent|''
dedent|''
name|'class'
name|'IMailbox'
op|'('
name|'Interface'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    @type loginDelay: C{int}\n    @ivar loginDelay: The number of seconds between allowed logins for the\n    user associated with this mailbox.  None\n\n    @type messageExpiration: C{int}\n    @ivar messageExpiration: The number of days messages in this mailbox will\n    remain on the server before being deleted.\n    """'
newline|'\n'
nl|'\n'
DECL|member|listMessages
name|'def'
name|'listMessages'
op|'('
name|'index'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Retrieve the size of one or more messages.\n\n        @type index: C{int} or C{None}\n        @param index: The number of the message for which to retrieve the\n        size (starting at 0), or None to retrieve the size of all messages.\n\n        @rtype: C{int} or any iterable of C{int} or a L{Deferred} which fires\n        with one of these.\n\n        @return: The number of octets in the specified message, or an iterable\n        of integers representing the number of octets in all the messages.  Any\n        value which would have referred to a deleted message should be set to 0.\n\n        @raise ValueError: if C{index} is greater than the index of any message\n        in the mailbox.\n        """'
newline|'\n'
nl|'\n'
DECL|member|getMessage
dedent|''
name|'def'
name|'getMessage'
op|'('
name|'index'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Retrieve a file-like object for a particular message.\n\n        @type index: C{int}\n        @param index: The number of the message to retrieve\n\n        @rtype: A file-like object\n        @return: A file containing the message data with lines delimited by\n        C{\\\\n}.\n        """'
newline|'\n'
nl|'\n'
DECL|member|getUidl
dedent|''
name|'def'
name|'getUidl'
op|'('
name|'index'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get a unique identifier for a particular message.\n\n        @type index: C{int}\n        @param index: The number of the message for which to retrieve a UIDL\n\n        @rtype: C{str}\n        @return: A string of printable characters uniquely identifying for all\n        time the specified message.\n\n        @raise ValueError: if C{index} is greater than the index of any message\n        in the mailbox.\n        """'
newline|'\n'
nl|'\n'
DECL|member|deleteMessage
dedent|''
name|'def'
name|'deleteMessage'
op|'('
name|'index'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Delete a particular message.\n\n        This must not change the number of messages in this mailbox.  Further\n        requests for the size of deleted messages should return 0.  Further\n        requests for the message itself may raise an exception.\n\n        @type index: C{int}\n        @param index: The number of the message to delete.\n        """'
newline|'\n'
nl|'\n'
DECL|member|undeleteMessages
dedent|''
name|'def'
name|'undeleteMessages'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Undelete any messages which have been marked for deletion since the\n        most recent L{sync} call.\n\n        Any message which can be undeleted should be returned to its\n        original position in the message sequence and retain its original\n        UID.\n        """'
newline|'\n'
nl|'\n'
DECL|member|sync
dedent|''
name|'def'
name|'sync'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Perform checkpointing.\n\n        This method will be called to indicate the mailbox should attempt to\n        clean up any remaining deleted messages.\n        """'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|Mailbox
dedent|''
dedent|''
name|'class'
name|'Mailbox'
op|':'
newline|'\n'
indent|'    '
name|'implements'
op|'('
name|'IMailbox'
op|')'
newline|'\n'
nl|'\n'
DECL|member|listMessages
name|'def'
name|'listMessages'
op|'('
name|'self'
op|','
name|'i'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
op|']'
newline|'\n'
DECL|member|getMessage
dedent|''
name|'def'
name|'getMessage'
op|'('
name|'self'
op|','
name|'i'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
newline|'\n'
DECL|member|getUidl
dedent|''
name|'def'
name|'getUidl'
op|'('
name|'self'
op|','
name|'i'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
newline|'\n'
DECL|member|deleteMessage
dedent|''
name|'def'
name|'deleteMessage'
op|'('
name|'self'
op|','
name|'i'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
newline|'\n'
DECL|member|undeleteMessages
dedent|''
name|'def'
name|'undeleteMessages'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
DECL|member|sync
dedent|''
name|'def'
name|'sync'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'NONE'
op|','
name|'SHORT'
op|','
name|'FIRST_LONG'
op|','
name|'LONG'
op|'='
name|'range'
op|'('
number|'4'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|NEXT
name|'NEXT'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'NEXT'
op|'['
name|'NONE'
op|']'
op|'='
name|'NONE'
newline|'\n'
name|'NEXT'
op|'['
name|'SHORT'
op|']'
op|'='
name|'NONE'
newline|'\n'
name|'NEXT'
op|'['
name|'FIRST_LONG'
op|']'
op|'='
name|'LONG'
newline|'\n'
name|'NEXT'
op|'['
name|'LONG'
op|']'
op|'='
name|'NONE'
newline|'\n'
nl|'\n'
DECL|class|POP3Client
name|'class'
name|'POP3Client'
op|'('
name|'basic'
op|'.'
name|'LineOnlyReceiver'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|mode
indent|'    '
name|'mode'
op|'='
name|'SHORT'
newline|'\n'
DECL|variable|command
name|'command'
op|'='
string|"'WELCOME'"
newline|'\n'
name|'import'
name|'re'
newline|'\n'
DECL|variable|welcomeRe
name|'welcomeRe'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|"'<(.*)>'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'import'
name|'warnings'
newline|'\n'
name|'warnings'
op|'.'
name|'warn'
op|'('
string|'"twisted.mail.pop3.POP3Client is deprecated, "'
nl|'\n'
string|'"please use twisted.mail.pop3.AdvancedPOP3Client "'
nl|'\n'
string|'"instead."'
op|','
name|'DeprecationWarning'
op|','
nl|'\n'
name|'stacklevel'
op|'='
number|'3'
op|')'
newline|'\n'
nl|'\n'
DECL|member|sendShort
dedent|''
name|'def'
name|'sendShort'
op|'('
name|'self'
op|','
name|'command'
op|','
name|'params'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'params'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'%s %s'"
op|'%'
op|'('
name|'command'
op|','
name|'params'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendLine'
op|'('
name|'command'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'command'
op|'='
name|'command'
newline|'\n'
name|'self'
op|'.'
name|'mode'
op|'='
name|'SHORT'
newline|'\n'
nl|'\n'
DECL|member|sendLong
dedent|''
name|'def'
name|'sendLong'
op|'('
name|'self'
op|','
name|'command'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'params'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendLine'
op|'('
string|"'%s %s'"
op|'%'
op|'('
name|'command'
op|','
name|'params'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sendLine'
op|'('
name|'command'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'command'
op|'='
name|'command'
newline|'\n'
name|'self'
op|'.'
name|'mode'
op|'='
name|'FIRST_LONG'
newline|'\n'
nl|'\n'
DECL|member|handle_default
dedent|''
name|'def'
name|'handle_default'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'line'
op|'['
op|':'
op|'-'
number|'4'
op|']'
op|'=='
string|"'-ERR'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'mode'
op|'='
name|'NONE'
newline|'\n'
nl|'\n'
DECL|member|handle_WELCOME
dedent|''
dedent|''
name|'def'
name|'handle_WELCOME'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'code'
op|','
name|'data'
op|'='
name|'line'
op|'.'
name|'split'
op|'('
string|"' '"
op|','
number|'1'
op|')'
newline|'\n'
name|'if'
name|'code'
op|'!='
string|"'+OK'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'='
name|'self'
op|'.'
name|'welcomeRe'
op|'.'
name|'match'
op|'('
name|'line'
op|')'
newline|'\n'
name|'if'
name|'m'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'welcomeCode'
op|'='
name|'m'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_dispatch
dedent|''
dedent|''
dedent|''
name|'def'
name|'_dispatch'
op|'('
name|'self'
op|','
name|'command'
op|','
name|'default'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'method'
op|'='
name|'getattr'
op|'('
name|'self'
op|','
string|"'handle_'"
op|'+'
name|'command'
op|','
name|'default'
op|')'
newline|'\n'
name|'if'
name|'method'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'method'
op|'('
op|'*'
name|'args'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'err'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|lineReceived
dedent|''
dedent|''
name|'def'
name|'lineReceived'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'mode'
op|'=='
name|'SHORT'
name|'or'
name|'self'
op|'.'
name|'mode'
op|'=='
name|'FIRST_LONG'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'mode'
op|'='
name|'NEXT'
op|'['
name|'self'
op|'.'
name|'mode'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_dispatch'
op|'('
name|'self'
op|'.'
name|'command'
op|','
name|'self'
op|'.'
name|'handle_default'
op|','
name|'line'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'self'
op|'.'
name|'mode'
op|'=='
name|'LONG'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'line'
op|'=='
string|"'.'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'mode'
op|'='
name|'NEXT'
op|'['
name|'self'
op|'.'
name|'mode'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_dispatch'
op|'('
name|'self'
op|'.'
name|'command'
op|'+'
string|"'_end'"
op|','
name|'None'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'if'
name|'line'
op|'['
op|':'
number|'1'
op|']'
op|'=='
string|"'.'"
op|':'
newline|'\n'
indent|'                '
name|'line'
op|'='
name|'line'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_dispatch'
op|'('
name|'self'
op|'.'
name|'command'
op|'+'
string|'"_continue"'
op|','
name|'None'
op|','
name|'line'
op|')'
newline|'\n'
nl|'\n'
DECL|member|apopAuthenticate
dedent|''
dedent|''
name|'def'
name|'apopAuthenticate'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'password'
op|','
name|'magic'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'digest'
op|'='
name|'md5'
op|'('
name|'magic'
op|'+'
name|'password'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'apop'
op|'('
name|'user'
op|','
name|'digest'
op|')'
newline|'\n'
nl|'\n'
DECL|member|apop
dedent|''
name|'def'
name|'apop'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'digest'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendLong'
op|'('
string|"'APOP'"
op|','
string|"' '"
op|'.'
name|'join'
op|'('
op|'('
name|'user'
op|','
name|'digest'
op|')'
op|')'
op|')'
newline|'\n'
DECL|member|retr
dedent|''
name|'def'
name|'retr'
op|'('
name|'self'
op|','
name|'i'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendLong'
op|'('
string|"'RETR'"
op|','
name|'i'
op|')'
newline|'\n'
DECL|member|dele
dedent|''
name|'def'
name|'dele'
op|'('
name|'self'
op|','
name|'i'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendShort'
op|'('
string|"'DELE'"
op|','
name|'i'
op|')'
newline|'\n'
DECL|member|list
dedent|''
name|'def'
name|'list'
op|'('
name|'self'
op|','
name|'i'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendLong'
op|'('
string|"'LIST'"
op|','
name|'i'
op|')'
newline|'\n'
DECL|member|uidl
dedent|''
name|'def'
name|'uidl'
op|'('
name|'self'
op|','
name|'i'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendLong'
op|'('
string|"'UIDL'"
op|','
name|'i'
op|')'
newline|'\n'
DECL|member|user
dedent|''
name|'def'
name|'user'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendShort'
op|'('
string|"'USER'"
op|','
name|'name'
op|')'
newline|'\n'
DECL|member|pass_
dedent|''
name|'def'
name|'pass_'
op|'('
name|'self'
op|','
name|'pass_'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendShort'
op|'('
string|"'PASS'"
op|','
name|'pass_'
op|')'
newline|'\n'
DECL|member|quit
dedent|''
name|'def'
name|'quit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sendShort'
op|'('
string|"'QUIT'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'from'
name|'twisted'
op|'.'
name|'mail'
op|'.'
name|'pop3client'
name|'import'
name|'POP3Client'
name|'as'
name|'AdvancedPOP3Client'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'mail'
op|'.'
name|'pop3client'
name|'import'
name|'POP3ClientError'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'mail'
op|'.'
name|'pop3client'
name|'import'
name|'InsecureAuthenticationDisallowed'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'mail'
op|'.'
name|'pop3client'
name|'import'
name|'ServerErrorResponse'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'mail'
op|'.'
name|'pop3client'
name|'import'
name|'LineTooLong'
newline|'\n'
nl|'\n'
DECL|variable|__all__
name|'__all__'
op|'='
op|'['
nl|'\n'
comment|'# Interfaces'
nl|'\n'
string|"'IMailbox'"
op|','
string|"'IServerFactory'"
op|','
nl|'\n'
nl|'\n'
comment|'# Exceptions'
nl|'\n'
string|"'POP3Error'"
op|','
string|"'POP3ClientError'"
op|','
string|"'InsecureAuthenticationDisallowed'"
op|','
nl|'\n'
string|"'ServerErrorResponse'"
op|','
string|"'LineTooLong'"
op|','
nl|'\n'
nl|'\n'
comment|'# Protocol classes'
nl|'\n'
string|"'POP3'"
op|','
string|"'POP3Client'"
op|','
string|"'AdvancedPOP3Client'"
op|','
nl|'\n'
nl|'\n'
comment|'# Misc'
nl|'\n'
string|"'APOPCredentials'"
op|','
string|"'Mailbox'"
op|']'
newline|'\n'
endmarker|''
end_unit
