begin_unit
comment|'# -*- test-case-name: twisted.mail.test.test_mail -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2009 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""\nMaildir-style mailbox support\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'stat'
newline|'\n'
name|'import'
name|'socket'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'cStringIO'
name|'as'
name|'StringIO'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'StringIO'
newline|'\n'
nl|'\n'
dedent|''
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'compat'
name|'import'
name|'set'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'mail'
name|'import'
name|'pop3'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'mail'
name|'import'
name|'smtp'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'protocols'
name|'import'
name|'basic'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'persisted'
name|'import'
name|'dirdbm'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
op|','
name|'failure'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'hashlib'
name|'import'
name|'md5'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'mail'
name|'import'
name|'mail'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'interfaces'
op|','
name|'defer'
op|','
name|'reactor'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
name|'import'
name|'cred'
newline|'\n'
name|'import'
name|'twisted'
op|'.'
name|'cred'
op|'.'
name|'portal'
newline|'\n'
name|'import'
name|'twisted'
op|'.'
name|'cred'
op|'.'
name|'credentials'
newline|'\n'
name|'import'
name|'twisted'
op|'.'
name|'cred'
op|'.'
name|'checkers'
newline|'\n'
name|'import'
name|'twisted'
op|'.'
name|'cred'
op|'.'
name|'error'
newline|'\n'
nl|'\n'
name|'INTERNAL_ERROR'
op|'='
string|"'''\\\nFrom: Twisted.mail Internals\nSubject: An Error Occurred\n\n  An internal server error has occurred.  Please contact the\n  server administrator.\n'''"
newline|'\n'
nl|'\n'
DECL|class|_MaildirNameGenerator
name|'class'
name|'_MaildirNameGenerator'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Utility class to generate a unique maildir name\n\n    @ivar _clock: An L{IReactorTime} provider which will be used to learn\n        the current time to include in names returned by L{generate} so that\n        they sort properly.\n    """'
newline|'\n'
DECL|variable|n
name|'n'
op|'='
number|'0'
newline|'\n'
DECL|variable|p
name|'p'
op|'='
name|'os'
op|'.'
name|'getpid'
op|'('
op|')'
newline|'\n'
DECL|variable|s
name|'s'
op|'='
name|'socket'
op|'.'
name|'gethostname'
op|'('
op|')'
op|'.'
name|'replace'
op|'('
string|"'/'"
op|','
string|"r'\\057'"
op|')'
op|'.'
name|'replace'
op|'('
string|"':'"
op|','
string|"r'\\072'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'clock'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_clock'
op|'='
name|'clock'
newline|'\n'
nl|'\n'
DECL|member|generate
dedent|''
name|'def'
name|'generate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Return a string which is intended to unique across all calls to this\n        function (across all processes, reboots, etc).\n\n        Strings returned by earlier calls to this method will compare less\n        than strings returned by later calls as long as the clock provided\n        doesn\'t go backwards.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'n'
op|'='
name|'self'
op|'.'
name|'n'
op|'+'
number|'1'
newline|'\n'
name|'t'
op|'='
name|'self'
op|'.'
name|'_clock'
op|'.'
name|'seconds'
op|'('
op|')'
newline|'\n'
name|'seconds'
op|'='
name|'str'
op|'('
name|'int'
op|'('
name|'t'
op|')'
op|')'
newline|'\n'
name|'microseconds'
op|'='
string|"'%07d'"
op|'%'
op|'('
name|'int'
op|'('
op|'('
name|'t'
op|'-'
name|'int'
op|'('
name|'t'
op|')'
op|')'
op|'*'
number|'10e6'
op|')'
op|','
op|')'
newline|'\n'
name|'return'
string|"'%s.M%sP%sQ%s.%s'"
op|'%'
op|'('
name|'seconds'
op|','
name|'microseconds'
op|','
nl|'\n'
name|'self'
op|'.'
name|'p'
op|','
name|'self'
op|'.'
name|'n'
op|','
name|'self'
op|'.'
name|'s'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|_generateMaildirName
dedent|''
dedent|''
name|'_generateMaildirName'
op|'='
name|'_MaildirNameGenerator'
op|'('
name|'reactor'
op|')'
op|'.'
name|'generate'
newline|'\n'
nl|'\n'
DECL|function|initializeMaildir
name|'def'
name|'initializeMaildir'
op|'('
name|'dir'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'dir'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'dir'
op|','
number|'0700'
op|')'
newline|'\n'
name|'for'
name|'subdir'
name|'in'
op|'['
string|"'new'"
op|','
string|"'cur'"
op|','
string|"'tmp'"
op|','
string|"'.Trash'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'dir'
op|','
name|'subdir'
op|')'
op|','
number|'0700'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'subdir'
name|'in'
op|'['
string|"'new'"
op|','
string|"'cur'"
op|','
string|"'tmp'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'dir'
op|','
string|"'.Trash'"
op|','
name|'subdir'
op|')'
op|','
number|'0700'
op|')'
newline|'\n'
comment|'# touch'
nl|'\n'
dedent|''
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'dir'
op|','
string|"'.Trash'"
op|','
string|"'maildirfolder'"
op|')'
op|','
string|"'w'"
op|')'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MaildirMessage
dedent|''
dedent|''
name|'class'
name|'MaildirMessage'
op|'('
name|'mail'
op|'.'
name|'FileMessage'
op|')'
op|':'
newline|'\n'
DECL|variable|size
indent|'    '
name|'size'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'address'
op|','
name|'fp'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'header'
op|'='
string|'"Delivered-To: %s\\n"'
op|'%'
name|'address'
newline|'\n'
name|'fp'
op|'.'
name|'write'
op|'('
name|'header'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'size'
op|'='
name|'len'
op|'('
name|'header'
op|')'
newline|'\n'
name|'mail'
op|'.'
name|'FileMessage'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'fp'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
newline|'\n'
nl|'\n'
DECL|member|lineReceived
dedent|''
name|'def'
name|'lineReceived'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mail'
op|'.'
name|'FileMessage'
op|'.'
name|'lineReceived'
op|'('
name|'self'
op|','
name|'line'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'size'
op|'+='
name|'len'
op|'('
name|'line'
op|')'
op|'+'
number|'1'
newline|'\n'
nl|'\n'
DECL|member|eomReceived
dedent|''
name|'def'
name|'eomReceived'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'finalName'
op|'='
name|'self'
op|'.'
name|'finalName'
op|'+'
string|"',S=%d'"
op|'%'
name|'self'
op|'.'
name|'size'
newline|'\n'
name|'return'
name|'mail'
op|'.'
name|'FileMessage'
op|'.'
name|'eomReceived'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|class|AbstractMaildirDomain
dedent|''
dedent|''
name|'class'
name|'AbstractMaildirDomain'
op|':'
newline|'\n'
indent|'    '
string|'"""Abstract maildir-backed domain.\n    """'
newline|'\n'
DECL|variable|alias
name|'alias'
op|'='
name|'None'
newline|'\n'
DECL|variable|root
name|'root'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'service'
op|','
name|'root'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Initialize.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'root'
op|'='
name|'root'
newline|'\n'
nl|'\n'
DECL|member|userDirectory
dedent|''
name|'def'
name|'userDirectory'
op|'('
name|'self'
op|','
name|'user'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get the maildir directory for a given user\n\n        Override to specify where to save mails for users.\n        Return None for non-existing users.\n        """'
newline|'\n'
name|'return'
name|'None'
newline|'\n'
nl|'\n'
comment|'##'
nl|'\n'
comment|'## IAliasableDomain'
nl|'\n'
comment|'##'
nl|'\n'
nl|'\n'
DECL|member|setAliasGroup
dedent|''
name|'def'
name|'setAliasGroup'
op|'('
name|'self'
op|','
name|'alias'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'alias'
op|'='
name|'alias'
newline|'\n'
nl|'\n'
comment|'##'
nl|'\n'
comment|'## IDomain'
nl|'\n'
comment|'##'
nl|'\n'
DECL|member|exists
dedent|''
name|'def'
name|'exists'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'memo'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Check for existence of user in the domain\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'userDirectory'
op|'('
name|'user'
op|'.'
name|'dest'
op|'.'
name|'local'
op|')'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'lambda'
op|':'
name|'self'
op|'.'
name|'startMessage'
op|'('
name|'user'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'a'
op|'='
name|'self'
op|'.'
name|'alias'
op|'['
name|'user'
op|'.'
name|'dest'
op|'.'
name|'local'
op|']'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'smtp'
op|'.'
name|'SMTPBadRcpt'
op|'('
name|'user'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'aliases'
op|'='
name|'a'
op|'.'
name|'resolve'
op|'('
name|'self'
op|'.'
name|'alias'
op|','
name|'memo'
op|')'
newline|'\n'
name|'if'
name|'aliases'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'lambda'
op|':'
name|'aliases'
newline|'\n'
dedent|''
name|'log'
op|'.'
name|'err'
op|'('
string|'"Bad alias configuration: "'
op|'+'
name|'str'
op|'('
name|'user'
op|')'
op|')'
newline|'\n'
name|'raise'
name|'smtp'
op|'.'
name|'SMTPBadRcpt'
op|'('
name|'user'
op|')'
newline|'\n'
nl|'\n'
DECL|member|startMessage
dedent|''
dedent|''
name|'def'
name|'startMessage'
op|'('
name|'self'
op|','
name|'user'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Save a message for a given user\n        """'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'user'
op|','
name|'str'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'name'
op|','
name|'domain'
op|'='
name|'user'
op|'.'
name|'split'
op|'('
string|"'@'"
op|','
number|'1'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'name'
op|','
name|'domain'
op|'='
name|'user'
op|'.'
name|'dest'
op|'.'
name|'local'
op|','
name|'user'
op|'.'
name|'dest'
op|'.'
name|'domain'
newline|'\n'
dedent|''
name|'dir'
op|'='
name|'self'
op|'.'
name|'userDirectory'
op|'('
name|'name'
op|')'
newline|'\n'
name|'fname'
op|'='
name|'_generateMaildirName'
op|'('
op|')'
newline|'\n'
name|'filename'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'dir'
op|','
string|"'tmp'"
op|','
name|'fname'
op|')'
newline|'\n'
name|'fp'
op|'='
name|'open'
op|'('
name|'filename'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'return'
name|'MaildirMessage'
op|'('
string|"'%s@%s'"
op|'%'
op|'('
name|'name'
op|','
name|'domain'
op|')'
op|','
name|'fp'
op|','
name|'filename'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'dir'
op|','
string|"'new'"
op|','
name|'fname'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|willRelay
dedent|''
name|'def'
name|'willRelay'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'protocol'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|member|addUser
dedent|''
name|'def'
name|'addUser'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'password'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
newline|'\n'
nl|'\n'
DECL|member|getCredentialsCheckers
dedent|''
name|'def'
name|'getCredentialsCheckers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
newline|'\n'
comment|'##'
nl|'\n'
comment|'## end of IDomain'
nl|'\n'
comment|'##'
nl|'\n'
nl|'\n'
DECL|class|_MaildirMailboxAppendMessageTask
dedent|''
dedent|''
name|'class'
name|'_MaildirMailboxAppendMessageTask'
op|':'
newline|'\n'
indent|'    '
name|'implements'
op|'('
name|'interfaces'
op|'.'
name|'IConsumer'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|osopen
name|'osopen'
op|'='
name|'staticmethod'
op|'('
name|'os'
op|'.'
name|'open'
op|')'
newline|'\n'
DECL|variable|oswrite
name|'oswrite'
op|'='
name|'staticmethod'
op|'('
name|'os'
op|'.'
name|'write'
op|')'
newline|'\n'
DECL|variable|osclose
name|'osclose'
op|'='
name|'staticmethod'
op|'('
name|'os'
op|'.'
name|'close'
op|')'
newline|'\n'
DECL|variable|osrename
name|'osrename'
op|'='
name|'staticmethod'
op|'('
name|'os'
op|'.'
name|'rename'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'mbox'
op|','
name|'msg'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mbox'
op|'='
name|'mbox'
newline|'\n'
name|'self'
op|'.'
name|'defer'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'openCall'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'msg'
op|','
string|'"read"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'msg'
op|'='
name|'msg'
newline|'\n'
comment|'# This is needed, as this startup phase might call defer.errback and zero out self.defer'
nl|'\n'
comment|'# By doing it on the reactor iteration appendMessage is able to use .defer without problems.'
nl|'\n'
name|'reactor'
op|'.'
name|'callLater'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'startUp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|startUp
dedent|''
name|'def'
name|'startUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'createTempFile'
op|'('
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'fh'
op|'!='
op|'-'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'filesender'
op|'='
name|'basic'
op|'.'
name|'FileSender'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'filesender'
op|'.'
name|'beginFileTransfer'
op|'('
name|'self'
op|'.'
name|'msg'
op|','
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|registerProducer
dedent|''
dedent|''
name|'def'
name|'registerProducer'
op|'('
name|'self'
op|','
name|'producer'
op|','
name|'streaming'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'myproducer'
op|'='
name|'producer'
newline|'\n'
name|'self'
op|'.'
name|'streaming'
op|'='
name|'streaming'
newline|'\n'
name|'if'
name|'not'
name|'streaming'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'prodProducer'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|prodProducer
dedent|''
dedent|''
name|'def'
name|'prodProducer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'openCall'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'myproducer'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'openCall'
op|'='
name|'reactor'
op|'.'
name|'callLater'
op|'('
number|'0'
op|','
name|'self'
op|'.'
name|'prodProducer'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'myproducer'
op|'.'
name|'resumeProducing'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|unregisterProducer
dedent|''
dedent|''
name|'def'
name|'unregisterProducer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'myproducer'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'streaming'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'osclose'
op|'('
name|'self'
op|'.'
name|'fh'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'moveFileToNew'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|write
dedent|''
name|'def'
name|'write'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'oswrite'
op|'('
name|'self'
op|'.'
name|'fh'
op|','
name|'data'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|fail
dedent|''
dedent|''
name|'def'
name|'fail'
op|'('
name|'self'
op|','
name|'err'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'err'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'err'
op|'='
name|'failure'
op|'.'
name|'Failure'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'openCall'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'openCall'
op|'.'
name|'cancel'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'defer'
op|'.'
name|'errback'
op|'('
name|'err'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'defer'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|moveFileToNew
dedent|''
name|'def'
name|'moveFileToNew'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'newname'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'mbox'
op|'.'
name|'path'
op|','
string|'"new"'
op|','
name|'_generateMaildirName'
op|'('
op|')'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'osrename'
op|'('
name|'self'
op|'.'
name|'tmpname'
op|','
name|'newname'
op|')'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|','
op|'('
name|'err'
op|','
name|'estr'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'import'
name|'errno'
newline|'\n'
comment|'# if the newname exists, retry with a new newname.'
nl|'\n'
name|'if'
name|'err'
op|'!='
name|'errno'
op|'.'
name|'EEXIST'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'fail'
op|'('
op|')'
newline|'\n'
name|'newname'
op|'='
name|'None'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'newname'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'mbox'
op|'.'
name|'list'
op|'.'
name|'append'
op|'('
name|'newname'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'defer'
op|'.'
name|'callback'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'defer'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|createTempFile
dedent|''
dedent|''
name|'def'
name|'createTempFile'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'attr'
op|'='
op|'('
name|'os'
op|'.'
name|'O_RDWR'
op|'|'
name|'os'
op|'.'
name|'O_CREAT'
op|'|'
name|'os'
op|'.'
name|'O_EXCL'
nl|'\n'
op|'|'
name|'getattr'
op|'('
name|'os'
op|','
string|'"O_NOINHERIT"'
op|','
number|'0'
op|')'
nl|'\n'
op|'|'
name|'getattr'
op|'('
name|'os'
op|','
string|'"O_NOFOLLOW"'
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'tries'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'fh'
op|'='
op|'-'
number|'1'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'tmpname'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'mbox'
op|'.'
name|'path'
op|','
string|'"tmp"'
op|','
name|'_generateMaildirName'
op|'('
op|')'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fh'
op|'='
name|'self'
op|'.'
name|'osopen'
op|'('
name|'self'
op|'.'
name|'tmpname'
op|','
name|'attr'
op|','
number|'0600'
op|')'
newline|'\n'
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|':'
newline|'\n'
indent|'                '
name|'tries'
op|'+='
number|'1'
newline|'\n'
name|'if'
name|'tries'
op|'>'
number|'500'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'defer'
op|'.'
name|'errback'
op|'('
name|'RuntimeError'
op|'('
string|'"Could not create tmp file for %s"'
op|'%'
name|'self'
op|'.'
name|'mbox'
op|'.'
name|'path'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'defer'
op|'='
name|'None'
newline|'\n'
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|class|MaildirMailbox
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
name|'class'
name|'MaildirMailbox'
op|'('
name|'pop3'
op|'.'
name|'Mailbox'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Implement the POP3 mailbox semantics for a Maildir mailbox\n    """'
newline|'\n'
DECL|variable|AppendFactory
name|'AppendFactory'
op|'='
name|'_MaildirMailboxAppendMessageTask'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Initialize with name of the Maildir mailbox\n        """'
newline|'\n'
name|'self'
op|'.'
name|'path'
op|'='
name|'path'
newline|'\n'
name|'self'
op|'.'
name|'list'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'deleted'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'initializeMaildir'
op|'('
name|'path'
op|')'
newline|'\n'
name|'for'
name|'name'
name|'in'
op|'('
string|"'cur'"
op|','
string|"'new'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'file'
name|'in'
name|'os'
op|'.'
name|'listdir'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'path'
op|','
name|'name'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'list'
op|'.'
name|'append'
op|'('
op|'('
name|'file'
op|','
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'path'
op|','
name|'name'
op|','
name|'file'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'list'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'list'
op|'='
op|'['
name|'e'
op|'['
number|'1'
op|']'
name|'for'
name|'e'
name|'in'
name|'self'
op|'.'
name|'list'
op|']'
newline|'\n'
nl|'\n'
DECL|member|listMessages
dedent|''
name|'def'
name|'listMessages'
op|'('
name|'self'
op|','
name|'i'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return a list of lengths of all files in new/ and cur/\n        """'
newline|'\n'
name|'if'
name|'i'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'ret'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'mess'
name|'in'
name|'self'
op|'.'
name|'list'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'mess'
op|':'
newline|'\n'
indent|'                    '
name|'ret'
op|'.'
name|'append'
op|'('
name|'os'
op|'.'
name|'stat'
op|'('
name|'mess'
op|')'
op|'['
name|'stat'
op|'.'
name|'ST_SIZE'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'ret'
op|'.'
name|'append'
op|'('
number|'0'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'ret'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'list'
op|'['
name|'i'
op|']'
name|'and'
name|'os'
op|'.'
name|'stat'
op|'('
name|'self'
op|'.'
name|'list'
op|'['
name|'i'
op|']'
op|')'
op|'['
name|'stat'
op|'.'
name|'ST_SIZE'
op|']'
name|'or'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|getMessage
dedent|''
name|'def'
name|'getMessage'
op|'('
name|'self'
op|','
name|'i'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return an open file-pointer to a message\n        """'
newline|'\n'
name|'return'
name|'open'
op|'('
name|'self'
op|'.'
name|'list'
op|'['
name|'i'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getUidl
dedent|''
name|'def'
name|'getUidl'
op|'('
name|'self'
op|','
name|'i'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return a unique identifier for a message\n\n        This is done using the basename of the filename.\n        It is globally unique because this is how Maildirs are designed.\n        """'
newline|'\n'
comment|'# Returning the actual filename is a mistake.  Hash it.'
nl|'\n'
name|'base'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'self'
op|'.'
name|'list'
op|'['
name|'i'
op|']'
op|')'
newline|'\n'
name|'return'
name|'md5'
op|'('
name|'base'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|deleteMessage
dedent|''
name|'def'
name|'deleteMessage'
op|'('
name|'self'
op|','
name|'i'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Delete a message\n\n        This only moves a message to the .Trash/ subfolder,\n        so it can be undeleted by an administrator.\n        """'
newline|'\n'
name|'trashFile'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'path'
op|','
string|"'.Trash'"
op|','
string|"'cur'"
op|','
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'self'
op|'.'
name|'list'
op|'['
name|'i'
op|']'
op|')'
nl|'\n'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'rename'
op|'('
name|'self'
op|'.'
name|'list'
op|'['
name|'i'
op|']'
op|','
name|'trashFile'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'deleted'
op|'['
name|'self'
op|'.'
name|'list'
op|'['
name|'i'
op|']'
op|']'
op|'='
name|'trashFile'
newline|'\n'
name|'self'
op|'.'
name|'list'
op|'['
name|'i'
op|']'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|undeleteMessages
dedent|''
name|'def'
name|'undeleteMessages'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Undelete any deleted messages it is possible to undelete\n\n        This moves any messages from .Trash/ subfolder back to their\n        original position, and empties out the deleted dictionary.\n        """'
newline|'\n'
name|'for'
op|'('
name|'real'
op|','
name|'trash'
op|')'
name|'in'
name|'self'
op|'.'
name|'deleted'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'os'
op|'.'
name|'rename'
op|'('
name|'trash'
op|','
name|'real'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|','
op|'('
name|'err'
op|','
name|'estr'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'import'
name|'errno'
newline|'\n'
comment|'# If the file has been deleted from disk, oh well!'
nl|'\n'
name|'if'
name|'err'
op|'!='
name|'errno'
op|'.'
name|'ENOENT'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
newline|'\n'
comment|'# This is a pass'
nl|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'list'
op|'['
name|'self'
op|'.'
name|'list'
op|'.'
name|'index'
op|'('
number|'0'
op|')'
op|']'
op|'='
name|'real'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'list'
op|'.'
name|'append'
op|'('
name|'real'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'self'
op|'.'
name|'deleted'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|appendMessage
dedent|''
name|'def'
name|'appendMessage'
op|'('
name|'self'
op|','
name|'txt'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Appends a message into the mailbox."""'
newline|'\n'
name|'task'
op|'='
name|'self'
op|'.'
name|'AppendFactory'
op|'('
name|'self'
op|','
name|'txt'
op|')'
newline|'\n'
name|'return'
name|'task'
op|'.'
name|'defer'
newline|'\n'
nl|'\n'
DECL|class|StringListMailbox
dedent|''
dedent|''
name|'class'
name|'StringListMailbox'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    L{StringListMailbox} is an in-memory mailbox.\n\n    @ivar msgs: A C{list} of C{str} giving the contents of each message in the\n        mailbox.\n\n    @ivar _delete: A C{set} of the indexes of messages which have been deleted\n        since the last C{sync} call.\n    """'
newline|'\n'
name|'implements'
op|'('
name|'pop3'
op|'.'
name|'IMailbox'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'msgs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'msgs'
op|'='
name|'msgs'
newline|'\n'
name|'self'
op|'.'
name|'_delete'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|listMessages
dedent|''
name|'def'
name|'listMessages'
op|'('
name|'self'
op|','
name|'i'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Return the length of the message at the given offset, or a list of all\n        message lengths.\n        """'
newline|'\n'
name|'if'
name|'i'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
name|'self'
op|'.'
name|'listMessages'
op|'('
name|'i'
op|')'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'msgs'
op|')'
op|')'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'i'
name|'in'
name|'self'
op|'.'
name|'_delete'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'0'
newline|'\n'
dedent|''
name|'return'
name|'len'
op|'('
name|'self'
op|'.'
name|'msgs'
op|'['
name|'i'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getMessage
dedent|''
name|'def'
name|'getMessage'
op|'('
name|'self'
op|','
name|'i'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Return an in-memory file-like object for the message content at the\n        given offset.\n        """'
newline|'\n'
name|'return'
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
name|'self'
op|'.'
name|'msgs'
op|'['
name|'i'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getUidl
dedent|''
name|'def'
name|'getUidl'
op|'('
name|'self'
op|','
name|'i'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Return a hash of the contents of the message at the given offset.\n        """'
newline|'\n'
name|'return'
name|'md5'
op|'('
name|'self'
op|'.'
name|'msgs'
op|'['
name|'i'
op|']'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|deleteMessage
dedent|''
name|'def'
name|'deleteMessage'
op|'('
name|'self'
op|','
name|'i'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Mark the given message for deletion.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_delete'
op|'.'
name|'add'
op|'('
name|'i'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|undeleteMessages
dedent|''
name|'def'
name|'undeleteMessages'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Reset deletion tracking, undeleting any messages which have been\n        deleted since the last call to C{sync}.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_delete'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|sync
dedent|''
name|'def'
name|'sync'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Discard the contents of any message marked for deletion and reset\n        deletion tracking.\n        """'
newline|'\n'
name|'for'
name|'index'
name|'in'
name|'self'
op|'.'
name|'_delete'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'msgs'
op|'['
name|'index'
op|']'
op|'='
string|'""'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_delete'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|MaildirDirdbmDomain
dedent|''
dedent|''
name|'class'
name|'MaildirDirdbmDomain'
op|'('
name|'AbstractMaildirDomain'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""A Maildir Domain where membership is checked by a dirdbm file\n    """'
newline|'\n'
nl|'\n'
name|'implements'
op|'('
name|'cred'
op|'.'
name|'portal'
op|'.'
name|'IRealm'
op|','
name|'mail'
op|'.'
name|'IAliasableDomain'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|portal
name|'portal'
op|'='
name|'None'
newline|'\n'
DECL|variable|_credcheckers
name|'_credcheckers'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'service'
op|','
name|'root'
op|','
name|'postmaster'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Initialize\n\n        The first argument is where the Domain directory is rooted.\n        The second is whether non-existing addresses are simply\n        forwarded to postmaster instead of outright bounce\n\n        The directory structure of a MailddirDirdbmDomain is:\n\n        /passwd <-- a dirdbm file\n        /USER/{cur,new,del} <-- each user has these three directories\n        """'
newline|'\n'
name|'AbstractMaildirDomain'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'service'
op|','
name|'root'
op|')'
newline|'\n'
name|'dbm'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'root'
op|','
string|"'passwd'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'dbm'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'makedirs'
op|'('
name|'dbm'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'dbm'
op|'='
name|'dirdbm'
op|'.'
name|'open'
op|'('
name|'dbm'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'postmaster'
op|'='
name|'postmaster'
newline|'\n'
nl|'\n'
DECL|member|userDirectory
dedent|''
name|'def'
name|'userDirectory'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get the directory for a user\n\n        If the user exists in the dirdbm file, return the directory\n        os.path.join(root, name), creating it if necessary.\n        Otherwise, returns postmaster\'s mailbox instead if bounces\n        go to postmaster, otherwise return None\n        """'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'dbm'
op|'.'
name|'has_key'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'self'
op|'.'
name|'postmaster'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'name'
op|'='
string|"'postmaster'"
newline|'\n'
dedent|''
name|'dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'root'
op|','
name|'name'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'dir'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'initializeMaildir'
op|'('
name|'dir'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'dir'
newline|'\n'
nl|'\n'
comment|'##'
nl|'\n'
comment|'## IDomain'
nl|'\n'
comment|'##'
nl|'\n'
DECL|member|addUser
dedent|''
name|'def'
name|'addUser'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'password'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'dbm'
op|'['
name|'user'
op|']'
op|'='
name|'password'
newline|'\n'
comment|'# Ensure it is initialized'
nl|'\n'
name|'self'
op|'.'
name|'userDirectory'
op|'('
name|'user'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getCredentialsCheckers
dedent|''
name|'def'
name|'getCredentialsCheckers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'_credcheckers'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_credcheckers'
op|'='
op|'['
name|'DirdbmDatabase'
op|'('
name|'self'
op|'.'
name|'dbm'
op|')'
op|']'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_credcheckers'
newline|'\n'
nl|'\n'
comment|'##'
nl|'\n'
comment|'## IRealm'
nl|'\n'
comment|'##'
nl|'\n'
DECL|member|requestAvatar
dedent|''
name|'def'
name|'requestAvatar'
op|'('
name|'self'
op|','
name|'avatarId'
op|','
name|'mind'
op|','
op|'*'
name|'interfaces'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'pop3'
op|'.'
name|'IMailbox'
name|'not'
name|'in'
name|'interfaces'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'NotImplementedError'
op|'('
string|'"No interface"'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'avatarId'
op|'=='
name|'cred'
op|'.'
name|'checkers'
op|'.'
name|'ANONYMOUS'
op|':'
newline|'\n'
indent|'            '
name|'mbox'
op|'='
name|'StringListMailbox'
op|'('
op|'['
name|'INTERNAL_ERROR'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'mbox'
op|'='
name|'MaildirMailbox'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'root'
op|','
name|'avatarId'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
op|'('
nl|'\n'
name|'pop3'
op|'.'
name|'IMailbox'
op|','
nl|'\n'
name|'mbox'
op|','
nl|'\n'
name|'lambda'
op|':'
name|'None'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
DECL|class|DirdbmDatabase
dedent|''
dedent|''
name|'class'
name|'DirdbmDatabase'
op|':'
newline|'\n'
indent|'    '
name|'implements'
op|'('
name|'cred'
op|'.'
name|'checkers'
op|'.'
name|'ICredentialsChecker'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|credentialInterfaces
name|'credentialInterfaces'
op|'='
op|'('
nl|'\n'
name|'cred'
op|'.'
name|'credentials'
op|'.'
name|'IUsernamePassword'
op|','
nl|'\n'
name|'cred'
op|'.'
name|'credentials'
op|'.'
name|'IUsernameHashedPassword'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'dbm'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'dirdbm'
op|'='
name|'dbm'
newline|'\n'
nl|'\n'
DECL|member|requestAvatarId
dedent|''
name|'def'
name|'requestAvatarId'
op|'('
name|'self'
op|','
name|'c'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'c'
op|'.'
name|'username'
name|'in'
name|'self'
op|'.'
name|'dirdbm'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'c'
op|'.'
name|'checkPassword'
op|'('
name|'self'
op|'.'
name|'dirdbm'
op|'['
name|'c'
op|'.'
name|'username'
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'c'
op|'.'
name|'username'
newline|'\n'
dedent|''
dedent|''
name|'raise'
name|'cred'
op|'.'
name|'error'
op|'.'
name|'UnauthorizedLogin'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
