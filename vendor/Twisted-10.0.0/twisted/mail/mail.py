begin_unit
comment|'# -*- test-case-name: twisted.mail.test.test_mail -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2007 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""Mail support for twisted python.\n"""'
newline|'\n'
nl|'\n'
comment|'# Twisted imports'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'defer'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'application'
name|'import'
name|'service'
op|','
name|'internet'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'util'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
name|'import'
name|'cred'
newline|'\n'
name|'import'
name|'twisted'
op|'.'
name|'cred'
op|'.'
name|'portal'
newline|'\n'
nl|'\n'
comment|'# Sibling imports'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'mail'
name|'import'
name|'protocols'
op|','
name|'smtp'
newline|'\n'
nl|'\n'
comment|'# System imports'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'from'
name|'zope'
op|'.'
name|'interface'
name|'import'
name|'implements'
op|','
name|'Interface'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DomainWithDefaultDict
name|'class'
name|'DomainWithDefaultDict'
op|':'
newline|'\n'
indent|'    '
string|"'''Simulate a dictionary with a default value for non-existing keys.\n    '''"
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'domains'
op|','
name|'default'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'domains'
op|'='
name|'domains'
newline|'\n'
name|'self'
op|'.'
name|'default'
op|'='
name|'default'
newline|'\n'
nl|'\n'
DECL|member|setDefaultDomain
dedent|''
name|'def'
name|'setDefaultDomain'
op|'('
name|'self'
op|','
name|'domain'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'default'
op|'='
name|'domain'
newline|'\n'
nl|'\n'
DECL|member|has_key
dedent|''
name|'def'
name|'has_key'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
number|'1'
newline|'\n'
nl|'\n'
DECL|member|fromkeys
dedent|''
name|'def'
name|'fromkeys'
op|'('
name|'klass'
op|','
name|'keys'
op|','
name|'value'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'='
name|'klass'
op|'('
op|')'
newline|'\n'
name|'for'
name|'k'
name|'in'
name|'keys'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'['
name|'k'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'return'
name|'d'
newline|'\n'
DECL|variable|fromkeys
dedent|''
name|'fromkeys'
op|'='
name|'classmethod'
op|'('
name|'fromkeys'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__contains__
name|'def'
name|'__contains__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
number|'1'
newline|'\n'
nl|'\n'
DECL|member|__getitem__
dedent|''
name|'def'
name|'__getitem__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'domains'
op|'.'
name|'get'
op|'('
name|'name'
op|','
name|'self'
op|'.'
name|'default'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__setitem__
dedent|''
name|'def'
name|'__setitem__'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'domains'
op|'['
name|'name'
op|']'
op|'='
name|'value'
newline|'\n'
nl|'\n'
DECL|member|__delitem__
dedent|''
name|'def'
name|'__delitem__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'del'
name|'self'
op|'.'
name|'domains'
op|'['
name|'name'
op|']'
newline|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'iter'
op|'('
name|'self'
op|'.'
name|'domains'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__len__
dedent|''
name|'def'
name|'__len__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'len'
op|'('
name|'self'
op|'.'
name|'domains'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Return a string describing the underlying domain mapping of this\n        object.\n        """'
newline|'\n'
name|'return'
string|"'<DomainWithDefaultDict %s>'"
op|'%'
op|'('
name|'self'
op|'.'
name|'domains'
op|','
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Return a pseudo-executable string describing the underlying domain\n        mapping of this object.\n        """'
newline|'\n'
name|'return'
string|"'DomainWithDefaultDict(%s)'"
op|'%'
op|'('
name|'self'
op|'.'
name|'domains'
op|','
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|get
dedent|''
name|'def'
name|'get'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'default'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'domains'
op|'.'
name|'get'
op|'('
name|'key'
op|','
name|'default'
op|')'
newline|'\n'
nl|'\n'
DECL|member|copy
dedent|''
name|'def'
name|'copy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'DomainWithDefaultDict'
op|'('
name|'self'
op|'.'
name|'domains'
op|'.'
name|'copy'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'default'
op|')'
newline|'\n'
nl|'\n'
DECL|member|iteritems
dedent|''
name|'def'
name|'iteritems'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'domains'
op|'.'
name|'iteritems'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|iterkeys
dedent|''
name|'def'
name|'iterkeys'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'domains'
op|'.'
name|'iterkeys'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|itervalues
dedent|''
name|'def'
name|'itervalues'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'domains'
op|'.'
name|'itervalues'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|keys
dedent|''
name|'def'
name|'keys'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'domains'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|values
dedent|''
name|'def'
name|'values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'domains'
op|'.'
name|'values'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|items
dedent|''
name|'def'
name|'items'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'domains'
op|'.'
name|'items'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|popitem
dedent|''
name|'def'
name|'popitem'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'domains'
op|'.'
name|'popitem'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|update
dedent|''
name|'def'
name|'update'
op|'('
name|'self'
op|','
name|'other'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'domains'
op|'.'
name|'update'
op|'('
name|'other'
op|')'
newline|'\n'
nl|'\n'
DECL|member|clear
dedent|''
name|'def'
name|'clear'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'domains'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|setdefault
dedent|''
name|'def'
name|'setdefault'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'default'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'domains'
op|'.'
name|'setdefault'
op|'('
name|'key'
op|','
name|'default'
op|')'
newline|'\n'
nl|'\n'
DECL|class|IDomain
dedent|''
dedent|''
name|'class'
name|'IDomain'
op|'('
name|'Interface'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""An email domain."""'
newline|'\n'
nl|'\n'
DECL|member|exists
name|'def'
name|'exists'
op|'('
name|'user'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Check whether or not the specified user exists in this domain.\n\n        @type user: C{twisted.protocols.smtp.User}\n        @param user: The user to check\n\n        @rtype: No-argument callable\n        @return: A C{Deferred} which becomes, or a callable which\n        takes no arguments and returns an object implementing C{IMessage}.\n        This will be called and the returned object used to deliver the\n        message when it arrives.\n\n        @raise twisted.protocols.smtp.SMTPBadRcpt: Raised if the given\n        user does not exist in this domain.\n        """'
newline|'\n'
nl|'\n'
DECL|member|addUser
dedent|''
name|'def'
name|'addUser'
op|'('
name|'user'
op|','
name|'password'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Add a username/password to this domain."""'
newline|'\n'
nl|'\n'
DECL|member|startMessage
dedent|''
name|'def'
name|'startMessage'
op|'('
name|'user'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create and return a new message to be delivered to the given user.\n\n        DEPRECATED.  Implement validateTo() correctly instead.\n        """'
newline|'\n'
nl|'\n'
DECL|member|getCredentialsCheckers
dedent|''
name|'def'
name|'getCredentialsCheckers'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return a list of ICredentialsChecker implementors for this domain.\n        """'
newline|'\n'
nl|'\n'
DECL|class|IAliasableDomain
dedent|''
dedent|''
name|'class'
name|'IAliasableDomain'
op|'('
name|'IDomain'
op|')'
op|':'
newline|'\n'
DECL|member|setAliasGroup
indent|'    '
name|'def'
name|'setAliasGroup'
op|'('
name|'aliases'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Set the group of defined aliases for this domain\n\n        @type aliases: C{dict}\n        @param aliases: Mapping of domain names to objects implementing\n        C{IAlias}\n        """'
newline|'\n'
nl|'\n'
DECL|member|exists
dedent|''
name|'def'
name|'exists'
op|'('
name|'user'
op|','
name|'memo'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Check whether or not the specified user exists in this domain.\n\n        @type user: C{twisted.protocols.smtp.User}\n        @param user: The user to check\n\n        @type memo: C{dict}\n        @param memo: A record of the addresses already considered while\n        resolving aliases.  The default value should be used by all\n        external code.\n\n        @rtype: No-argument callable\n        @return: A C{Deferred} which becomes, or a callable which\n        takes no arguments and returns an object implementing C{IMessage}.\n        This will be called and the returned object used to deliver the\n        message when it arrives.\n\n        @raise twisted.protocols.smtp.SMTPBadRcpt: Raised if the given\n        user does not exist in this domain.\n        """'
newline|'\n'
nl|'\n'
DECL|class|BounceDomain
dedent|''
dedent|''
name|'class'
name|'BounceDomain'
op|':'
newline|'\n'
indent|'    '
string|'"""A domain in which no user exists.\n\n    This can be used to block off certain domains.\n    """'
newline|'\n'
nl|'\n'
name|'implements'
op|'('
name|'IDomain'
op|')'
newline|'\n'
nl|'\n'
DECL|member|exists
name|'def'
name|'exists'
op|'('
name|'self'
op|','
name|'user'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'smtp'
op|'.'
name|'SMTPBadRcpt'
op|'('
name|'user'
op|')'
newline|'\n'
nl|'\n'
DECL|member|willRelay
dedent|''
name|'def'
name|'willRelay'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'protocol'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|member|addUser
dedent|''
name|'def'
name|'addUser'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'password'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|startMessage
dedent|''
name|'def'
name|'startMessage'
op|'('
name|'self'
op|','
name|'user'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        No code should ever call this function.\n        """'
newline|'\n'
name|'raise'
name|'NotImplementedError'
op|'('
nl|'\n'
string|'"No code should ever call this method for any reason"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getCredentialsCheckers
dedent|''
name|'def'
name|'getCredentialsCheckers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FileMessage
dedent|''
dedent|''
name|'class'
name|'FileMessage'
op|':'
newline|'\n'
indent|'    '
string|'"""A file we can write an email too."""'
newline|'\n'
nl|'\n'
name|'implements'
op|'('
name|'smtp'
op|'.'
name|'IMessage'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'fp'
op|','
name|'name'
op|','
name|'finalName'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'fp'
op|'='
name|'fp'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'finalName'
op|'='
name|'finalName'
newline|'\n'
nl|'\n'
DECL|member|lineReceived
dedent|''
name|'def'
name|'lineReceived'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'fp'
op|'.'
name|'write'
op|'('
name|'line'
op|'+'
string|"'\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|eomReceived
dedent|''
name|'def'
name|'eomReceived'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'fp'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'os'
op|'.'
name|'rename'
op|'('
name|'self'
op|'.'
name|'name'
op|','
name|'self'
op|'.'
name|'finalName'
op|')'
newline|'\n'
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'self'
op|'.'
name|'finalName'
op|')'
newline|'\n'
nl|'\n'
DECL|member|connectionLost
dedent|''
name|'def'
name|'connectionLost'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'fp'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'os'
op|'.'
name|'remove'
op|'('
name|'self'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MailService
dedent|''
dedent|''
name|'class'
name|'MailService'
op|'('
name|'service'
op|'.'
name|'MultiService'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""An email service."""'
newline|'\n'
nl|'\n'
DECL|variable|queue
name|'queue'
op|'='
name|'None'
newline|'\n'
DECL|variable|domains
name|'domains'
op|'='
name|'None'
newline|'\n'
DECL|variable|portals
name|'portals'
op|'='
name|'None'
newline|'\n'
DECL|variable|aliases
name|'aliases'
op|'='
name|'None'
newline|'\n'
DECL|variable|smtpPortal
name|'smtpPortal'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service'
op|'.'
name|'MultiService'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
comment|'# Domains and portals for "client" protocols - POP3, IMAP4, etc'
nl|'\n'
name|'self'
op|'.'
name|'domains'
op|'='
name|'DomainWithDefaultDict'
op|'('
op|'{'
op|'}'
op|','
name|'BounceDomain'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'portals'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'monitor'
op|'='
name|'FileMonitoringService'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'monitor'
op|'.'
name|'setServiceParent'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'smtpPortal'
op|'='
name|'cred'
op|'.'
name|'portal'
op|'.'
name|'Portal'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getPOP3Factory
dedent|''
name|'def'
name|'getPOP3Factory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'protocols'
op|'.'
name|'POP3Factory'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getSMTPFactory
dedent|''
name|'def'
name|'getSMTPFactory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'protocols'
op|'.'
name|'SMTPFactory'
op|'('
name|'self'
op|','
name|'self'
op|'.'
name|'smtpPortal'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getESMTPFactory
dedent|''
name|'def'
name|'getESMTPFactory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'protocols'
op|'.'
name|'ESMTPFactory'
op|'('
name|'self'
op|','
name|'self'
op|'.'
name|'smtpPortal'
op|')'
newline|'\n'
nl|'\n'
DECL|member|addDomain
dedent|''
name|'def'
name|'addDomain'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'domain'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'portal'
op|'='
name|'cred'
op|'.'
name|'portal'
op|'.'
name|'Portal'
op|'('
name|'domain'
op|')'
newline|'\n'
name|'map'
op|'('
name|'portal'
op|'.'
name|'registerChecker'
op|','
name|'domain'
op|'.'
name|'getCredentialsCheckers'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'domains'
op|'['
name|'name'
op|']'
op|'='
name|'domain'
newline|'\n'
name|'self'
op|'.'
name|'portals'
op|'['
name|'name'
op|']'
op|'='
name|'portal'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'aliases'
name|'and'
name|'IAliasableDomain'
op|'.'
name|'providedBy'
op|'('
name|'domain'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'domain'
op|'.'
name|'setAliasGroup'
op|'('
name|'self'
op|'.'
name|'aliases'
op|')'
newline|'\n'
nl|'\n'
DECL|member|setQueue
dedent|''
dedent|''
name|'def'
name|'setQueue'
op|'('
name|'self'
op|','
name|'queue'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Set the queue for outgoing emails."""'
newline|'\n'
name|'self'
op|'.'
name|'queue'
op|'='
name|'queue'
newline|'\n'
nl|'\n'
DECL|member|requestAvatar
dedent|''
name|'def'
name|'requestAvatar'
op|'('
name|'self'
op|','
name|'avatarId'
op|','
name|'mind'
op|','
op|'*'
name|'interfaces'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'smtp'
op|'.'
name|'IMessageDelivery'
name|'in'
name|'interfaces'
op|':'
newline|'\n'
indent|'            '
name|'a'
op|'='
name|'protocols'
op|'.'
name|'ESMTPDomainDelivery'
op|'('
name|'self'
op|','
name|'avatarId'
op|')'
newline|'\n'
name|'return'
name|'smtp'
op|'.'
name|'IMessageDelivery'
op|','
name|'a'
op|','
name|'lambda'
op|':'
name|'None'
newline|'\n'
dedent|''
name|'raise'
name|'NotImplementedError'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|lookupPortal
dedent|''
name|'def'
name|'lookupPortal'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'portals'
op|'['
name|'name'
op|']'
newline|'\n'
nl|'\n'
DECL|member|defaultPortal
dedent|''
name|'def'
name|'defaultPortal'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'portals'
op|'['
string|"''"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FileMonitoringService
dedent|''
dedent|''
name|'class'
name|'FileMonitoringService'
op|'('
name|'internet'
op|'.'
name|'TimerService'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'files'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'intervals'
op|'='
name|'iter'
op|'('
name|'util'
op|'.'
name|'IntervalDifferential'
op|'('
op|'['
op|']'
op|','
number|'60'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|startService
dedent|''
name|'def'
name|'startService'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service'
op|'.'
name|'Service'
op|'.'
name|'startService'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_setupMonitor'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_setupMonitor
dedent|''
name|'def'
name|'_setupMonitor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
newline|'\n'
name|'t'
op|','
name|'self'
op|'.'
name|'index'
op|'='
name|'self'
op|'.'
name|'intervals'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_call'
op|'='
name|'reactor'
op|'.'
name|'callLater'
op|'('
name|'t'
op|','
name|'self'
op|'.'
name|'_monitor'
op|')'
newline|'\n'
nl|'\n'
DECL|member|stopService
dedent|''
name|'def'
name|'stopService'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'service'
op|'.'
name|'Service'
op|'.'
name|'stopService'
op|'('
name|'self'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_call'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_call'
op|'.'
name|'cancel'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_call'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|monitorFile
dedent|''
dedent|''
name|'def'
name|'monitorFile'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'callback'
op|','
name|'interval'
op|'='
number|'10'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'mtime'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'getmtime'
op|'('
name|'name'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'mtime'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'files'
op|'.'
name|'append'
op|'('
op|'['
name|'interval'
op|','
name|'name'
op|','
name|'callback'
op|','
name|'mtime'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'intervals'
op|'.'
name|'addInterval'
op|'('
name|'interval'
op|')'
newline|'\n'
nl|'\n'
DECL|member|unmonitorFile
dedent|''
name|'def'
name|'unmonitorFile'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'files'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'name'
op|'=='
name|'self'
op|'.'
name|'files'
op|'['
name|'i'
op|']'
op|'['
number|'1'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'intervals'
op|'.'
name|'removeInterval'
op|'('
name|'self'
op|'.'
name|'files'
op|'['
name|'i'
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'files'
op|'['
name|'i'
op|']'
newline|'\n'
name|'break'
newline|'\n'
nl|'\n'
DECL|member|_monitor
dedent|''
dedent|''
dedent|''
name|'def'
name|'_monitor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_call'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'index'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'name'
op|','
name|'callback'
op|','
name|'mtime'
op|'='
name|'self'
op|'.'
name|'files'
op|'['
name|'self'
op|'.'
name|'index'
op|']'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'now'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'getmtime'
op|'('
name|'name'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                '
name|'now'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'if'
name|'now'
op|'>'
name|'mtime'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"%s changed, notifying listener"'
op|'%'
op|'('
name|'name'
op|','
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'files'
op|'['
name|'self'
op|'.'
name|'index'
op|']'
op|'['
number|'3'
op|']'
op|'='
name|'now'
newline|'\n'
name|'callback'
op|'('
name|'name'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'_setupMonitor'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
