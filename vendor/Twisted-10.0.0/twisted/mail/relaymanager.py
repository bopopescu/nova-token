begin_unit
comment|'# -*- test-case-name: twisted.mail.test.test_mail -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nInfrastructure for relaying mail through smart host\n\nToday, internet e-mail has stopped being Peer-to-peer for many problems,\nspam (unsolicited bulk mail) among them. Instead, most nodes on the\ninternet send all e-mail to a single computer, usually the ISP\'s though\nsometimes other schemes, such as SMTP-after-POP, are used. This computer\nis supposedly permanently up and traceable, and will do the work of\nfiguring out MXs and connecting to them. This kind of configuration\nis usually termed "smart host", since the host we are connecting to\nis "smart" (and will find MXs and connect to them) rather then just\naccepting mail for a small set of domains.\n\nThe classes here are meant to facilitate support for such a configuration\nfor the twisted.mail SMTP server\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'rfc822'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'cPickle'
name|'as'
name|'pickle'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'pickle'
newline|'\n'
nl|'\n'
dedent|''
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'failure'
name|'import'
name|'Failure'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'compat'
name|'import'
name|'set'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'mail'
name|'import'
name|'relay'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'mail'
name|'import'
name|'bounce'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'protocol'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'defer'
name|'import'
name|'Deferred'
op|','
name|'DeferredList'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'error'
name|'import'
name|'DNSLookupError'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'mail'
name|'import'
name|'smtp'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'application'
name|'import'
name|'internet'
newline|'\n'
nl|'\n'
DECL|class|ManagedRelayerMixin
name|'class'
name|'ManagedRelayerMixin'
op|':'
newline|'\n'
indent|'    '
string|'"""SMTP Relayer which notifies a manager\n\n    Notify the manager about successful mail, failed mail\n    and broken connections\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'manager'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'manager'
op|'='
name|'manager'
newline|'\n'
nl|'\n'
DECL|member|sentMail
dedent|''
name|'def'
name|'sentMail'
op|'('
name|'self'
op|','
name|'code'
op|','
name|'resp'
op|','
name|'numOk'
op|','
name|'addresses'
op|','
name|'log'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""called when e-mail has been sent\n\n        we will always get 0 or 1 addresses.\n        """'
newline|'\n'
name|'message'
op|'='
name|'self'
op|'.'
name|'names'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'code'
name|'in'
name|'smtp'
op|'.'
name|'SUCCESS'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'manager'
op|'.'
name|'notifySuccess'
op|'('
name|'self'
op|'.'
name|'factory'
op|','
name|'message'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'manager'
op|'.'
name|'notifyFailure'
op|'('
name|'self'
op|'.'
name|'factory'
op|','
name|'message'
op|')'
newline|'\n'
dedent|''
name|'del'
name|'self'
op|'.'
name|'messages'
op|'['
number|'0'
op|']'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'names'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|member|connectionLost
dedent|''
name|'def'
name|'connectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""called when connection is broken\n\n        notify manager we will try to send no more e-mail\n        """'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'notifyDone'
op|'('
name|'self'
op|'.'
name|'factory'
op|')'
newline|'\n'
nl|'\n'
DECL|class|SMTPManagedRelayer
dedent|''
dedent|''
name|'class'
name|'SMTPManagedRelayer'
op|'('
name|'ManagedRelayerMixin'
op|','
name|'relay'
op|'.'
name|'SMTPRelayer'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'messages'
op|','
name|'manager'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        @type messages: C{list} of C{str}\n        @param messages: Filenames of messages to relay\n\n        manager should support .notifySuccess, .notifyFailure\n        and .notifyDone\n        """'
newline|'\n'
name|'ManagedRelayerMixin'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'manager'
op|')'
newline|'\n'
name|'relay'
op|'.'
name|'SMTPRelayer'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'messages'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kw'
op|')'
newline|'\n'
nl|'\n'
DECL|class|ESMTPManagedRelayer
dedent|''
dedent|''
name|'class'
name|'ESMTPManagedRelayer'
op|'('
name|'ManagedRelayerMixin'
op|','
name|'relay'
op|'.'
name|'ESMTPRelayer'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'messages'
op|','
name|'manager'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        @type messages: C{list} of C{str}\n        @param messages: Filenames of messages to relay\n\n        manager should support .notifySuccess, .notifyFailure\n        and .notifyDone\n        """'
newline|'\n'
name|'ManagedRelayerMixin'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'manager'
op|')'
newline|'\n'
name|'relay'
op|'.'
name|'ESMTPRelayer'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'messages'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kw'
op|')'
newline|'\n'
nl|'\n'
DECL|class|SMTPManagedRelayerFactory
dedent|''
dedent|''
name|'class'
name|'SMTPManagedRelayerFactory'
op|'('
name|'protocol'
op|'.'
name|'ClientFactory'
op|')'
op|':'
newline|'\n'
DECL|variable|protocol
indent|'    '
name|'protocol'
op|'='
name|'SMTPManagedRelayer'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'messages'
op|','
name|'manager'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'messages'
op|'='
name|'messages'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'='
name|'manager'
newline|'\n'
name|'self'
op|'.'
name|'pArgs'
op|'='
name|'args'
newline|'\n'
name|'self'
op|'.'
name|'pKwArgs'
op|'='
name|'kw'
newline|'\n'
nl|'\n'
DECL|member|buildProtocol
dedent|''
name|'def'
name|'buildProtocol'
op|'('
name|'self'
op|','
name|'addr'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'protocol'
op|'='
name|'self'
op|'.'
name|'protocol'
op|'('
name|'self'
op|'.'
name|'messages'
op|','
name|'self'
op|'.'
name|'manager'
op|','
op|'*'
name|'self'
op|'.'
name|'pArgs'
op|','
nl|'\n'
op|'**'
name|'self'
op|'.'
name|'pKwArgs'
op|')'
newline|'\n'
name|'protocol'
op|'.'
name|'factory'
op|'='
name|'self'
newline|'\n'
name|'return'
name|'protocol'
newline|'\n'
nl|'\n'
DECL|member|clientConnectionFailed
dedent|''
name|'def'
name|'clientConnectionFailed'
op|'('
name|'self'
op|','
name|'connector'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""called when connection could not be made\n\n        our manager should be notified that this happened,\n        it might prefer some other host in that case"""'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'notifyNoConnection'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'notifyDone'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|class|ESMTPManagedRelayerFactory
dedent|''
dedent|''
name|'class'
name|'ESMTPManagedRelayerFactory'
op|'('
name|'SMTPManagedRelayerFactory'
op|')'
op|':'
newline|'\n'
DECL|variable|protocol
indent|'    '
name|'protocol'
op|'='
name|'ESMTPManagedRelayer'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'messages'
op|','
name|'manager'
op|','
name|'secret'
op|','
name|'contextFactory'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'secret'
op|'='
name|'secret'
newline|'\n'
name|'self'
op|'.'
name|'contextFactory'
op|'='
name|'contextFactory'
newline|'\n'
name|'SMTPManagedRelayerFactory'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'messages'
op|','
name|'manager'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kw'
op|')'
newline|'\n'
nl|'\n'
DECL|member|buildProtocol
dedent|''
name|'def'
name|'buildProtocol'
op|'('
name|'self'
op|','
name|'addr'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'s'
op|'='
name|'self'
op|'.'
name|'secret'
name|'and'
name|'self'
op|'.'
name|'secret'
op|'('
name|'addr'
op|')'
newline|'\n'
name|'protocol'
op|'='
name|'self'
op|'.'
name|'protocol'
op|'('
name|'self'
op|'.'
name|'messages'
op|','
name|'self'
op|'.'
name|'manager'
op|','
name|'s'
op|','
nl|'\n'
name|'self'
op|'.'
name|'contextFactory'
op|','
op|'*'
name|'self'
op|'.'
name|'pArgs'
op|','
op|'**'
name|'self'
op|'.'
name|'pKwArgs'
op|')'
newline|'\n'
name|'protocol'
op|'.'
name|'factory'
op|'='
name|'self'
newline|'\n'
name|'return'
name|'protocol'
newline|'\n'
nl|'\n'
DECL|class|Queue
dedent|''
dedent|''
name|'class'
name|'Queue'
op|':'
newline|'\n'
indent|'    '
string|'"""A queue of ougoing emails."""'
newline|'\n'
nl|'\n'
DECL|variable|noisy
name|'noisy'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'directory'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'directory'
op|'='
name|'directory'
newline|'\n'
name|'self'
op|'.'
name|'_init'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_init
dedent|''
name|'def'
name|'_init'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'n'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'waiting'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'relayed'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'readDirectory'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|__getstate__
dedent|''
name|'def'
name|'__getstate__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""(internal) delete volatile state"""'
newline|'\n'
name|'return'
op|'{'
string|"'directory'"
op|':'
name|'self'
op|'.'
name|'directory'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|__setstate__
dedent|''
name|'def'
name|'__setstate__'
op|'('
name|'self'
op|','
name|'state'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""(internal) restore volatile state"""'
newline|'\n'
name|'self'
op|'.'
name|'__dict__'
op|'.'
name|'update'
op|'('
name|'state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_init'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|readDirectory
dedent|''
name|'def'
name|'readDirectory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Read the messages directory.\n\n        look for new messages.\n        """'
newline|'\n'
name|'for'
name|'message'
name|'in'
name|'os'
op|'.'
name|'listdir'
op|'('
name|'self'
op|'.'
name|'directory'
op|')'
op|':'
newline|'\n'
comment|'# Skip non data files'
nl|'\n'
indent|'            '
name|'if'
name|'message'
op|'['
op|'-'
number|'2'
op|':'
op|']'
op|'!='
string|"'-D'"
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'addMessage'
op|'('
name|'message'
op|'['
op|':'
op|'-'
number|'2'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getWaiting
dedent|''
dedent|''
name|'def'
name|'getWaiting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'waiting'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|hasWaiting
dedent|''
name|'def'
name|'hasWaiting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'len'
op|'('
name|'self'
op|'.'
name|'waiting'
op|')'
op|'>'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|getRelayed
dedent|''
name|'def'
name|'getRelayed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'relayed'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|setRelaying
dedent|''
name|'def'
name|'setRelaying'
op|'('
name|'self'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'del'
name|'self'
op|'.'
name|'waiting'
op|'['
name|'message'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'relayed'
op|'['
name|'message'
op|']'
op|'='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|setWaiting
dedent|''
name|'def'
name|'setWaiting'
op|'('
name|'self'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'del'
name|'self'
op|'.'
name|'relayed'
op|'['
name|'message'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'waiting'
op|'['
name|'message'
op|']'
op|'='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|addMessage
dedent|''
name|'def'
name|'addMessage'
op|'('
name|'self'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'message'
name|'not'
name|'in'
name|'self'
op|'.'
name|'relayed'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'waiting'
op|'['
name|'message'
op|']'
op|'='
number|'1'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'noisy'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'Set '"
op|'+'
name|'message'
op|'+'
string|"' waiting'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|done
dedent|''
dedent|''
dedent|''
name|'def'
name|'done'
op|'('
name|'self'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Remove message to from queue."""'
newline|'\n'
name|'message'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'message'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'remove'
op|'('
name|'self'
op|'.'
name|'getPath'
op|'('
name|'message'
op|')'
op|'+'
string|"'-D'"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'remove'
op|'('
name|'self'
op|'.'
name|'getPath'
op|'('
name|'message'
op|')'
op|'+'
string|"'-H'"
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'relayed'
op|'['
name|'message'
op|']'
newline|'\n'
nl|'\n'
DECL|member|getPath
dedent|''
name|'def'
name|'getPath'
op|'('
name|'self'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get the path in the filesystem of a message."""'
newline|'\n'
name|'return'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'directory'
op|','
name|'message'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getEnvelope
dedent|''
name|'def'
name|'getEnvelope'
op|'('
name|'self'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'pickle'
op|'.'
name|'load'
op|'('
name|'self'
op|'.'
name|'getEnvelopeFile'
op|'('
name|'message'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getEnvelopeFile
dedent|''
name|'def'
name|'getEnvelopeFile'
op|'('
name|'self'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'directory'
op|','
name|'message'
op|'+'
string|"'-H'"
op|')'
op|','
string|"'rb'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|createNewMessage
dedent|''
name|'def'
name|'createNewMessage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a new message in the queue.\n\n        Return a tuple - file-like object for headers, and ISMTPMessage.\n        """'
newline|'\n'
name|'fname'
op|'='
string|'"%s_%s_%s_%s"'
op|'%'
op|'('
name|'os'
op|'.'
name|'getpid'
op|'('
op|')'
op|','
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'n'
op|','
name|'id'
op|'('
name|'self'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'n'
op|'='
name|'self'
op|'.'
name|'n'
op|'+'
number|'1'
newline|'\n'
name|'headerFile'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'directory'
op|','
name|'fname'
op|'+'
string|"'-H'"
op|')'
op|','
string|"'wb'"
op|')'
newline|'\n'
name|'tempFilename'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'directory'
op|','
name|'fname'
op|'+'
string|"'-C'"
op|')'
newline|'\n'
name|'finalFilename'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'directory'
op|','
name|'fname'
op|'+'
string|"'-D'"
op|')'
newline|'\n'
name|'messageFile'
op|'='
name|'open'
op|'('
name|'tempFilename'
op|','
string|"'wb'"
op|')'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'mail'
op|'.'
name|'mail'
name|'import'
name|'FileMessage'
newline|'\n'
name|'return'
name|'headerFile'
op|','
name|'FileMessage'
op|'('
name|'messageFile'
op|','
name|'tempFilename'
op|','
name|'finalFilename'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_AttemptManager
dedent|''
dedent|''
name|'class'
name|'_AttemptManager'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Manage the state of a single attempt to flush the relay queue.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'manager'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'manager'
op|'='
name|'manager'
newline|'\n'
name|'self'
op|'.'
name|'_completionDeferreds'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getCompletionDeferred
dedent|''
name|'def'
name|'getCompletionDeferred'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_completionDeferreds'
op|'.'
name|'append'
op|'('
name|'Deferred'
op|'('
op|')'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_completionDeferreds'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_finish
dedent|''
name|'def'
name|'_finish'
op|'('
name|'self'
op|','
name|'relay'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'manager'
op|'.'
name|'managed'
op|'['
name|'relay'
op|']'
op|'.'
name|'remove'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'message'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'queue'
op|'.'
name|'done'
op|'('
name|'message'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|notifySuccess
dedent|''
name|'def'
name|'notifySuccess'
op|'('
name|'self'
op|','
name|'relay'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""a relay sent a message successfully\n\n        Mark it as sent in our lists\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'queue'
op|'.'
name|'noisy'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"success sending %s, removing from queue"'
op|'%'
name|'message'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_finish'
op|'('
name|'relay'
op|','
name|'message'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|notifyFailure
dedent|''
name|'def'
name|'notifyFailure'
op|'('
name|'self'
op|','
name|'relay'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Relaying the message has failed."""'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'queue'
op|'.'
name|'noisy'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"could not relay "'
op|'+'
name|'message'
op|')'
newline|'\n'
comment|'# Moshe - Bounce E-mail here'
nl|'\n'
comment|"# Be careful: if it's a bounced bounce, silently"
nl|'\n'
comment|'# discard it'
nl|'\n'
dedent|''
name|'message'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'message'
op|')'
newline|'\n'
name|'fp'
op|'='
name|'self'
op|'.'
name|'manager'
op|'.'
name|'queue'
op|'.'
name|'getEnvelopeFile'
op|'('
name|'message'
op|')'
newline|'\n'
name|'from_'
op|','
name|'to'
op|'='
name|'pickle'
op|'.'
name|'load'
op|'('
name|'fp'
op|')'
newline|'\n'
name|'fp'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'from_'
op|','
name|'to'
op|','
name|'bounceMessage'
op|'='
name|'bounce'
op|'.'
name|'generateBounce'
op|'('
name|'open'
op|'('
name|'self'
op|'.'
name|'manager'
op|'.'
name|'queue'
op|'.'
name|'getPath'
op|'('
name|'message'
op|')'
op|'+'
string|"'-D'"
op|')'
op|','
name|'from_'
op|','
name|'to'
op|')'
newline|'\n'
name|'fp'
op|','
name|'outgoingMessage'
op|'='
name|'self'
op|'.'
name|'manager'
op|'.'
name|'queue'
op|'.'
name|'createNewMessage'
op|'('
op|')'
newline|'\n'
name|'pickle'
op|'.'
name|'dump'
op|'('
op|'['
name|'from_'
op|','
name|'to'
op|']'
op|','
name|'fp'
op|')'
newline|'\n'
name|'fp'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'bounceMessage'
op|'.'
name|'splitlines'
op|'('
op|')'
op|':'
newline|'\n'
indent|'             '
name|'outgoingMessage'
op|'.'
name|'lineReceived'
op|'('
name|'line'
op|')'
newline|'\n'
dedent|''
name|'outgoingMessage'
op|'.'
name|'eomReceived'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_finish'
op|'('
name|'relay'
op|','
name|'self'
op|'.'
name|'manager'
op|'.'
name|'queue'
op|'.'
name|'getPath'
op|'('
name|'message'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|notifyDone
dedent|''
name|'def'
name|'notifyDone'
op|'('
name|'self'
op|','
name|'relay'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""A relaying SMTP client is disconnected.\n\n        unmark all pending messages under this relay\'s responsibility\n        as being relayed, and remove the relay.\n        """'
newline|'\n'
name|'for'
name|'message'
name|'in'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'managed'
op|'.'
name|'get'
op|'('
name|'relay'
op|','
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'queue'
op|'.'
name|'noisy'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Setting "'
op|'+'
name|'message'
op|'+'
string|'" waiting"'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'manager'
op|'.'
name|'queue'
op|'.'
name|'setWaiting'
op|'('
name|'message'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'managed'
op|'['
name|'relay'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'notifications'
op|'='
name|'self'
op|'.'
name|'_completionDeferreds'
newline|'\n'
name|'self'
op|'.'
name|'_completionDeferreds'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'d'
name|'in'
name|'notifications'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'.'
name|'callback'
op|'('
name|'None'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|notifyNoConnection
dedent|''
dedent|''
name|'def'
name|'notifyNoConnection'
op|'('
name|'self'
op|','
name|'relay'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Relaying SMTP client couldn\'t connect.\n\n        Useful because it tells us our upstream server is unavailable.\n        """'
newline|'\n'
comment|'# Back off a bit'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'msgs'
op|'='
name|'self'
op|'.'
name|'manager'
op|'.'
name|'managed'
op|'['
name|'relay'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"notifyNoConnection passed unknown relay!"'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'queue'
op|'.'
name|'noisy'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"Backing off on delivery of "'
op|'+'
name|'str'
op|'('
name|'msgs'
op|')'
op|')'
newline|'\n'
DECL|function|setWaiting
dedent|''
name|'def'
name|'setWaiting'
op|'('
name|'queue'
op|','
name|'messages'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'map'
op|'('
name|'queue'
op|'.'
name|'setWaiting'
op|','
name|'messages'
op|')'
newline|'\n'
dedent|''
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
newline|'\n'
name|'reactor'
op|'.'
name|'callLater'
op|'('
number|'30'
op|','
name|'setWaiting'
op|','
name|'self'
op|'.'
name|'manager'
op|'.'
name|'queue'
op|','
name|'msgs'
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'manager'
op|'.'
name|'managed'
op|'['
name|'relay'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|SmartHostSMTPRelayingManager
dedent|''
dedent|''
name|'class'
name|'SmartHostSMTPRelayingManager'
op|':'
newline|'\n'
indent|'    '
string|'"""Manage SMTP Relayers\n\n    Manage SMTP relayers, keeping track of the existing connections,\n    each connection\'s responsibility in term of messages. Create\n    more relayers if the need arises.\n\n    Someone should press .checkState periodically\n\n    @ivar fArgs: Additional positional arguments used to instantiate\n    C{factory}.\n\n    @ivar fKwArgs: Additional keyword arguments used to instantiate\n    C{factory}.\n\n    @ivar factory: A callable which returns a ClientFactory suitable for\n    making SMTP connections.\n    """'
newline|'\n'
nl|'\n'
DECL|variable|factory
name|'factory'
op|'='
name|'SMTPManagedRelayerFactory'
newline|'\n'
nl|'\n'
DECL|variable|PORT
name|'PORT'
op|'='
number|'25'
newline|'\n'
nl|'\n'
DECL|variable|mxcalc
name|'mxcalc'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'queue'
op|','
name|'maxConnections'
op|'='
number|'2'
op|','
name|'maxMessagesPerConnection'
op|'='
number|'10'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        @type queue: Any implementor of C{IQueue}\n        @param queue: The object used to queue messages on their way to\n        delivery.\n\n        @type maxConnections: C{int}\n        @param maxConnections: The maximum number of SMTP connections to\n        allow to be opened at any given time.\n\n        @type maxMessagesPerConnection: C{int}\n        @param maxMessagesPerConnection: The maximum number of messages a\n        relayer will be given responsibility for.\n\n        Default values are meant for a small box with 1-5 users.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'maxConnections'
op|'='
name|'maxConnections'
newline|'\n'
name|'self'
op|'.'
name|'maxMessagesPerConnection'
op|'='
name|'maxMessagesPerConnection'
newline|'\n'
name|'self'
op|'.'
name|'managed'
op|'='
op|'{'
op|'}'
comment|"# SMTP clients we're managing"
newline|'\n'
name|'self'
op|'.'
name|'queue'
op|'='
name|'queue'
newline|'\n'
name|'self'
op|'.'
name|'fArgs'
op|'='
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fKwArgs'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|__getstate__
dedent|''
name|'def'
name|'__getstate__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""(internal) delete volatile state"""'
newline|'\n'
name|'dct'
op|'='
name|'self'
op|'.'
name|'__dict__'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'del'
name|'dct'
op|'['
string|"'managed'"
op|']'
newline|'\n'
name|'return'
name|'dct'
newline|'\n'
nl|'\n'
DECL|member|__setstate__
dedent|''
name|'def'
name|'__setstate__'
op|'('
name|'self'
op|','
name|'state'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""(internal) restore volatile state"""'
newline|'\n'
name|'self'
op|'.'
name|'__dict__'
op|'.'
name|'update'
op|'('
name|'state'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'managed'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|checkState
dedent|''
name|'def'
name|'checkState'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Synchronize with the state of the world, and maybe launch a new\n        relay.\n\n        Call me periodically to check I am still up to date.\n\n        @return: None or a Deferred which fires when all of the SMTP clients\n        started by this call have disconnected.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'queue'
op|'.'
name|'readDirectory'
op|'('
op|')'
newline|'\n'
name|'if'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'managed'
op|')'
op|'>='
name|'self'
op|'.'
name|'maxConnections'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'queue'
op|'.'
name|'hasWaiting'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_checkStateMX'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_checkStateMX
dedent|''
name|'def'
name|'_checkStateMX'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'nextMessages'
op|'='
name|'self'
op|'.'
name|'queue'
op|'.'
name|'getWaiting'
op|'('
op|')'
newline|'\n'
name|'nextMessages'
op|'.'
name|'reverse'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'exchanges'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'msg'
name|'in'
name|'nextMessages'
op|':'
newline|'\n'
indent|'            '
name|'from_'
op|','
name|'to'
op|'='
name|'self'
op|'.'
name|'queue'
op|'.'
name|'getEnvelope'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'name'
op|','
name|'addr'
op|'='
name|'rfc822'
op|'.'
name|'parseaddr'
op|'('
name|'to'
op|')'
newline|'\n'
name|'parts'
op|'='
name|'addr'
op|'.'
name|'split'
op|'('
string|"'@'"
op|','
number|'1'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'parts'
op|')'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'err'
op|'('
string|'"Illegal message destination: "'
op|'+'
name|'to'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'domain'
op|'='
name|'parts'
op|'['
number|'1'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'queue'
op|'.'
name|'setRelaying'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'exchanges'
op|'.'
name|'setdefault'
op|'('
name|'domain'
op|','
op|'['
op|']'
op|')'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'queue'
op|'.'
name|'getPath'
op|'('
name|'msg'
op|')'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'exchanges'
op|')'
op|'>='
op|'('
name|'self'
op|'.'
name|'maxConnections'
op|'-'
name|'len'
op|'('
name|'self'
op|'.'
name|'managed'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'self'
op|'.'
name|'mxcalc'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'mxcalc'
op|'='
name|'MXCalculator'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'relays'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
op|'('
name|'domain'
op|','
name|'msgs'
op|')'
name|'in'
name|'exchanges'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'='
name|'_AttemptManager'
op|'('
name|'self'
op|')'
newline|'\n'
name|'factory'
op|'='
name|'self'
op|'.'
name|'factory'
op|'('
name|'msgs'
op|','
name|'manager'
op|','
op|'*'
name|'self'
op|'.'
name|'fArgs'
op|','
op|'**'
name|'self'
op|'.'
name|'fKwArgs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'managed'
op|'['
name|'factory'
op|']'
op|'='
name|'map'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|','
name|'msgs'
op|')'
newline|'\n'
name|'relayAttemptDeferred'
op|'='
name|'manager'
op|'.'
name|'getCompletionDeferred'
op|'('
op|')'
newline|'\n'
name|'connectSetupDeferred'
op|'='
name|'self'
op|'.'
name|'mxcalc'
op|'.'
name|'getMX'
op|'('
name|'domain'
op|')'
newline|'\n'
name|'connectSetupDeferred'
op|'.'
name|'addCallback'
op|'('
name|'lambda'
name|'mx'
op|':'
name|'str'
op|'('
name|'mx'
op|'.'
name|'name'
op|')'
op|')'
newline|'\n'
name|'connectSetupDeferred'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_cbExchange'
op|','
name|'self'
op|'.'
name|'PORT'
op|','
name|'factory'
op|')'
newline|'\n'
name|'connectSetupDeferred'
op|'.'
name|'addErrback'
op|'('
name|'lambda'
name|'err'
op|':'
op|'('
name|'relayAttemptDeferred'
op|'.'
name|'errback'
op|'('
name|'err'
op|')'
op|','
name|'err'
op|')'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'connectSetupDeferred'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebExchange'
op|','
name|'factory'
op|','
name|'domain'
op|')'
newline|'\n'
name|'relays'
op|'.'
name|'append'
op|'('
name|'relayAttemptDeferred'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'DeferredList'
op|'('
name|'relays'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_cbExchange
dedent|''
name|'def'
name|'_cbExchange'
op|'('
name|'self'
op|','
name|'address'
op|','
name|'port'
op|','
name|'factory'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
newline|'\n'
name|'reactor'
op|'.'
name|'connectTCP'
op|'('
name|'address'
op|','
name|'port'
op|','
name|'factory'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_ebExchange
dedent|''
name|'def'
name|'_ebExchange'
op|'('
name|'self'
op|','
name|'failure'
op|','
name|'factory'
op|','
name|'domain'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'err'
op|'('
string|"'Error setting up managed relay factory for '"
op|'+'
name|'domain'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'err'
op|'('
name|'failure'
op|')'
newline|'\n'
DECL|function|setWaiting
name|'def'
name|'setWaiting'
op|'('
name|'queue'
op|','
name|'messages'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'map'
op|'('
name|'queue'
op|'.'
name|'setWaiting'
op|','
name|'messages'
op|')'
newline|'\n'
dedent|''
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
newline|'\n'
name|'reactor'
op|'.'
name|'callLater'
op|'('
number|'30'
op|','
name|'setWaiting'
op|','
name|'self'
op|'.'
name|'queue'
op|','
name|'self'
op|'.'
name|'managed'
op|'['
name|'factory'
op|']'
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'managed'
op|'['
name|'factory'
op|']'
newline|'\n'
nl|'\n'
DECL|class|SmartHostESMTPRelayingManager
dedent|''
dedent|''
name|'class'
name|'SmartHostESMTPRelayingManager'
op|'('
name|'SmartHostSMTPRelayingManager'
op|')'
op|':'
newline|'\n'
DECL|variable|factory
indent|'    '
name|'factory'
op|'='
name|'ESMTPManagedRelayerFactory'
newline|'\n'
nl|'\n'
DECL|function|_checkState
dedent|''
name|'def'
name|'_checkState'
op|'('
name|'manager'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'manager'
op|'.'
name|'checkState'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|RelayStateHelper
dedent|''
name|'def'
name|'RelayStateHelper'
op|'('
name|'manager'
op|','
name|'delay'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'internet'
op|'.'
name|'TimerService'
op|'('
name|'delay'
op|','
name|'_checkState'
op|','
name|'manager'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|CanonicalNameLoop
dedent|''
name|'class'
name|'CanonicalNameLoop'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    When trying to look up the MX record for a host, a set of CNAME records was\n    found which form a cycle and resolution was abandoned.\n    """'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CanonicalNameChainTooLong
dedent|''
name|'class'
name|'CanonicalNameChainTooLong'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    When trying to look up the MX record for a host, too many CNAME records\n    which point to other CNAME records were encountered and resolution was\n    abandoned.\n    """'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MXCalculator
dedent|''
name|'class'
name|'MXCalculator'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A utility for looking up mail exchange hosts and tracking whether they are\n    working or not.\n\n    @ivar clock: L{IReactorTime} provider which will be used to decide when to\n        retry mail exchanges which have not been working.\n    """'
newline|'\n'
DECL|variable|timeOutBadMX
name|'timeOutBadMX'
op|'='
number|'60'
op|'*'
number|'60'
comment|'# One hour'
newline|'\n'
DECL|variable|fallbackToDomain
name|'fallbackToDomain'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'resolver'
op|'='
name|'None'
op|','
name|'clock'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'badMXs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'resolver'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'from'
name|'twisted'
op|'.'
name|'names'
op|'.'
name|'client'
name|'import'
name|'createResolver'
newline|'\n'
name|'resolver'
op|'='
name|'createResolver'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'resolver'
op|'='
name|'resolver'
newline|'\n'
name|'if'
name|'clock'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
name|'as'
name|'clock'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'clock'
op|'='
name|'clock'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|markBad
dedent|''
name|'def'
name|'markBad'
op|'('
name|'self'
op|','
name|'mx'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Indicate a given mx host is not currently functioning.\n\n        @type mx: C{str}\n        @param mx: The hostname of the host which is down.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'badMXs'
op|'['
name|'str'
op|'('
name|'mx'
op|')'
op|']'
op|'='
name|'self'
op|'.'
name|'clock'
op|'.'
name|'seconds'
op|'('
op|')'
op|'+'
name|'self'
op|'.'
name|'timeOutBadMX'
newline|'\n'
nl|'\n'
DECL|member|markGood
dedent|''
name|'def'
name|'markGood'
op|'('
name|'self'
op|','
name|'mx'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Indicate a given mx host is back online.\n\n        @type mx: C{str}\n        @param mx: The hostname of the host which is up.\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'self'
op|'.'
name|'badMXs'
op|'['
name|'mx'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|getMX
dedent|''
dedent|''
name|'def'
name|'getMX'
op|'('
name|'self'
op|','
name|'domain'
op|','
name|'maximumCanonicalChainLength'
op|'='
number|'3'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Find an MX record for the given domain.\n\n        @type domain: C{str}\n        @param domain: The domain name for which to look up an MX record.\n\n        @type maximumCanonicalChainLength: C{int}\n        @param maximumCanonicalChainLength: The maximum number of unique CNAME\n            records to follow while looking up the MX record.\n\n        @return: A L{Deferred} which is called back with a string giving the\n            name in the found MX record or which is errbacked if no MX record\n            can be found.\n        """'
newline|'\n'
name|'mailExchangeDeferred'
op|'='
name|'self'
op|'.'
name|'resolver'
op|'.'
name|'lookupMailExchange'
op|'('
name|'domain'
op|')'
newline|'\n'
name|'mailExchangeDeferred'
op|'.'
name|'addCallback'
op|'('
name|'self'
op|'.'
name|'_filterRecords'
op|')'
newline|'\n'
name|'mailExchangeDeferred'
op|'.'
name|'addCallback'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_cbMX'
op|','
name|'domain'
op|','
name|'maximumCanonicalChainLength'
op|')'
newline|'\n'
name|'mailExchangeDeferred'
op|'.'
name|'addErrback'
op|'('
name|'self'
op|'.'
name|'_ebMX'
op|','
name|'domain'
op|')'
newline|'\n'
name|'return'
name|'mailExchangeDeferred'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_filterRecords
dedent|''
name|'def'
name|'_filterRecords'
op|'('
name|'self'
op|','
name|'records'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Convert a DNS response (a three-tuple of lists of RRHeaders) into a\n        mapping from record names to lists of corresponding record payloads.\n        """'
newline|'\n'
name|'recordBag'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'answer'
name|'in'
name|'records'
op|'['
number|'0'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'recordBag'
op|'.'
name|'setdefault'
op|'('
name|'str'
op|'('
name|'answer'
op|'.'
name|'name'
op|')'
op|','
op|'['
op|']'
op|')'
op|'.'
name|'append'
op|'('
name|'answer'
op|'.'
name|'payload'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'recordBag'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_cbMX
dedent|''
name|'def'
name|'_cbMX'
op|'('
name|'self'
op|','
name|'answers'
op|','
name|'domain'
op|','
name|'cnamesLeft'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Try to find the MX host from the given DNS information.\n\n        This will attempt to resolve CNAME results.  It can recognize loops\n        and will give up on non-cyclic chains after a specified number of\n        lookups.\n        """'
newline|'\n'
comment|"# Do this import here so that relaymanager.py doesn't depend on"
nl|'\n'
comment|'# twisted.names, only MXCalculator will.'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'names'
name|'import'
name|'dns'
op|','
name|'error'
newline|'\n'
nl|'\n'
name|'seenAliases'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'exchanges'
op|'='
op|'['
op|']'
newline|'\n'
comment|'# Examine the answers for the domain we asked about'
nl|'\n'
name|'pertinentRecords'
op|'='
name|'answers'
op|'.'
name|'get'
op|'('
name|'domain'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'while'
name|'pertinentRecords'
op|':'
newline|'\n'
indent|'            '
name|'record'
op|'='
name|'pertinentRecords'
op|'.'
name|'pop'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|"# If it's a CNAME, we'll need to do some more processing"
nl|'\n'
name|'if'
name|'record'
op|'.'
name|'TYPE'
op|'=='
name|'dns'
op|'.'
name|'CNAME'
op|':'
newline|'\n'
nl|'\n'
comment|'# Remember that this name was an alias.'
nl|'\n'
indent|'                '
name|'seenAliases'
op|'.'
name|'add'
op|'('
name|'domain'
op|')'
newline|'\n'
nl|'\n'
name|'canonicalName'
op|'='
name|'str'
op|'('
name|'record'
op|'.'
name|'name'
op|')'
newline|'\n'
comment|'# See if we have some local records which might be relevant.'
nl|'\n'
name|'if'
name|'canonicalName'
name|'in'
name|'answers'
op|':'
newline|'\n'
nl|'\n'
comment|"# Make sure it isn't a loop contained entirely within the"
nl|'\n'
comment|'# results we have here.'
nl|'\n'
indent|'                    '
name|'if'
name|'canonicalName'
name|'in'
name|'seenAliases'
op|':'
newline|'\n'
indent|'                        '
name|'return'
name|'Failure'
op|'('
name|'CanonicalNameLoop'
op|'('
name|'record'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'pertinentRecords'
op|'='
name|'answers'
op|'['
name|'canonicalName'
op|']'
newline|'\n'
name|'exchanges'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'cnamesLeft'
op|':'
newline|'\n'
comment|'# Request more information from the server.'
nl|'\n'
indent|'                        '
name|'return'
name|'self'
op|'.'
name|'getMX'
op|'('
name|'canonicalName'
op|','
name|'cnamesLeft'
op|'-'
number|'1'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# Give up.'
nl|'\n'
indent|'                        '
name|'return'
name|'Failure'
op|'('
name|'CanonicalNameChainTooLong'
op|'('
name|'record'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# If it's an MX, collect it."
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'record'
op|'.'
name|'TYPE'
op|'=='
name|'dns'
op|'.'
name|'MX'
op|':'
newline|'\n'
indent|'                '
name|'exchanges'
op|'.'
name|'append'
op|'('
op|'('
name|'record'
op|'.'
name|'preference'
op|','
name|'record'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'exchanges'
op|':'
newline|'\n'
indent|'            '
name|'exchanges'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'for'
op|'('
name|'preference'
op|','
name|'record'
op|')'
name|'in'
name|'exchanges'
op|':'
newline|'\n'
indent|'                '
name|'host'
op|'='
name|'str'
op|'('
name|'record'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'if'
name|'host'
name|'not'
name|'in'
name|'self'
op|'.'
name|'badMXs'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'record'
newline|'\n'
dedent|''
name|'t'
op|'='
name|'self'
op|'.'
name|'clock'
op|'.'
name|'seconds'
op|'('
op|')'
op|'-'
name|'self'
op|'.'
name|'badMXs'
op|'['
name|'host'
op|']'
newline|'\n'
name|'if'
name|'t'
op|'>='
number|'0'
op|':'
newline|'\n'
indent|'                    '
name|'del'
name|'self'
op|'.'
name|'badMXs'
op|'['
name|'host'
op|']'
newline|'\n'
name|'return'
name|'record'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'exchanges'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# Treat no answers the same as an error - jump to the errback to try'
nl|'\n'
comment|'# to look up an A record.  This provides behavior described as a'
nl|'\n'
comment|'# special case in RFC 974 in the section headed I{Interpreting the'
nl|'\n'
comment|'# List of MX RRs}.'
nl|'\n'
indent|'            '
name|'return'
name|'Failure'
op|'('
nl|'\n'
name|'error'
op|'.'
name|'DNSNameError'
op|'('
string|'"No MX records for %r"'
op|'%'
op|'('
name|'domain'
op|','
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_ebMX
dedent|''
dedent|''
name|'def'
name|'_ebMX'
op|'('
name|'self'
op|','
name|'failure'
op|','
name|'domain'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'from'
name|'twisted'
op|'.'
name|'names'
name|'import'
name|'error'
op|','
name|'dns'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'fallbackToDomain'
op|':'
newline|'\n'
indent|'            '
name|'failure'
op|'.'
name|'trap'
op|'('
name|'error'
op|'.'
name|'DNSNameError'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'"MX lookup failed; attempting to use hostname (%s) directly"'
op|'%'
op|'('
name|'domain'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Alright, I admit, this is a bit icky.'
nl|'\n'
name|'d'
op|'='
name|'self'
op|'.'
name|'resolver'
op|'.'
name|'getHostByName'
op|'('
name|'domain'
op|')'
newline|'\n'
DECL|function|cbResolved
name|'def'
name|'cbResolved'
op|'('
name|'addr'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'dns'
op|'.'
name|'Record_MX'
op|'('
name|'name'
op|'='
name|'addr'
op|')'
newline|'\n'
DECL|function|ebResolved
dedent|''
name|'def'
name|'ebResolved'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'err'
op|'.'
name|'trap'
op|'('
name|'error'
op|'.'
name|'DNSNameError'
op|')'
newline|'\n'
name|'raise'
name|'DNSLookupError'
op|'('
op|')'
newline|'\n'
dedent|''
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'cbResolved'
op|','
name|'ebResolved'
op|')'
newline|'\n'
name|'return'
name|'d'
newline|'\n'
dedent|''
name|'elif'
name|'failure'
op|'.'
name|'check'
op|'('
name|'error'
op|'.'
name|'DNSNameError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'IOError'
op|'('
string|'"No MX found for %r"'
op|'%'
op|'('
name|'domain'
op|','
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'failure'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
