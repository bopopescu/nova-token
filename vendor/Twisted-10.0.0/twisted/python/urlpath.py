begin_unit
comment|'# -*- test-case-name: twisted.test.test_paths -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2004 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
comment|'#'
nl|'\n'
nl|'\n'
name|'import'
name|'urlparse'
newline|'\n'
name|'import'
name|'urllib'
newline|'\n'
nl|'\n'
DECL|class|URLPath
name|'class'
name|'URLPath'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'scheme'
op|'='
string|"''"
op|','
name|'netloc'
op|'='
string|"'localhost'"
op|','
name|'path'
op|'='
string|"''"
op|','
nl|'\n'
name|'query'
op|'='
string|"''"
op|','
name|'fragment'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'scheme'
op|'='
name|'scheme'
name|'or'
string|"'http'"
newline|'\n'
name|'self'
op|'.'
name|'netloc'
op|'='
name|'netloc'
newline|'\n'
name|'self'
op|'.'
name|'path'
op|'='
name|'path'
name|'or'
string|"'/'"
newline|'\n'
name|'self'
op|'.'
name|'query'
op|'='
name|'query'
newline|'\n'
name|'self'
op|'.'
name|'fragment'
op|'='
name|'fragment'
newline|'\n'
nl|'\n'
DECL|variable|_qpathlist
dedent|''
name|'_qpathlist'
op|'='
name|'None'
newline|'\n'
DECL|variable|_uqpathlist
name|'_uqpathlist'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|pathList
name|'def'
name|'pathList'
op|'('
name|'self'
op|','
name|'unquote'
op|'='
number|'0'
op|','
name|'copy'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'_qpathlist'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_qpathlist'
op|'='
name|'self'
op|'.'
name|'path'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_uqpathlist'
op|'='
name|'map'
op|'('
name|'urllib'
op|'.'
name|'unquote'
op|','
name|'self'
op|'.'
name|'_qpathlist'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'unquote'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'self'
op|'.'
name|'_uqpathlist'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'result'
op|'='
name|'self'
op|'.'
name|'_qpathlist'
newline|'\n'
dedent|''
name|'if'
name|'copy'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'result'
op|'['
op|':'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|member|fromString
dedent|''
dedent|''
name|'def'
name|'fromString'
op|'('
name|'klass'
op|','
name|'st'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'t'
op|'='
name|'urlparse'
op|'.'
name|'urlsplit'
op|'('
name|'st'
op|')'
newline|'\n'
name|'u'
op|'='
name|'klass'
op|'('
op|'*'
name|'t'
op|')'
newline|'\n'
name|'return'
name|'u'
newline|'\n'
nl|'\n'
DECL|variable|fromString
dedent|''
name|'fromString'
op|'='
name|'classmethod'
op|'('
name|'fromString'
op|')'
newline|'\n'
nl|'\n'
DECL|member|fromRequest
name|'def'
name|'fromRequest'
op|'('
name|'klass'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'klass'
op|'.'
name|'fromString'
op|'('
name|'request'
op|'.'
name|'prePathURL'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|fromRequest
dedent|''
name|'fromRequest'
op|'='
name|'classmethod'
op|'('
name|'fromRequest'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_pathMod
name|'def'
name|'_pathMod'
op|'('
name|'self'
op|','
name|'newpathsegs'
op|','
name|'keepQuery'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'keepQuery'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
name|'self'
op|'.'
name|'query'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'query'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'return'
name|'URLPath'
op|'('
name|'self'
op|'.'
name|'scheme'
op|','
nl|'\n'
name|'self'
op|'.'
name|'netloc'
op|','
nl|'\n'
string|"'/'"
op|'.'
name|'join'
op|'('
name|'newpathsegs'
op|')'
op|','
nl|'\n'
name|'query'
op|')'
newline|'\n'
nl|'\n'
DECL|member|sibling
dedent|''
name|'def'
name|'sibling'
op|'('
name|'self'
op|','
name|'path'
op|','
name|'keepQuery'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'l'
op|'='
name|'self'
op|'.'
name|'pathList'
op|'('
op|')'
newline|'\n'
name|'l'
op|'['
op|'-'
number|'1'
op|']'
op|'='
name|'path'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_pathMod'
op|'('
name|'l'
op|','
name|'keepQuery'
op|')'
newline|'\n'
nl|'\n'
DECL|member|child
dedent|''
name|'def'
name|'child'
op|'('
name|'self'
op|','
name|'path'
op|','
name|'keepQuery'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'l'
op|'='
name|'self'
op|'.'
name|'pathList'
op|'('
op|')'
newline|'\n'
name|'if'
name|'l'
op|'['
op|'-'
number|'1'
op|']'
op|'=='
string|"''"
op|':'
newline|'\n'
indent|'            '
name|'l'
op|'['
op|'-'
number|'1'
op|']'
op|'='
name|'path'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'l'
op|'.'
name|'append'
op|'('
name|'path'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_pathMod'
op|'('
name|'l'
op|','
name|'keepQuery'
op|')'
newline|'\n'
nl|'\n'
DECL|member|parent
dedent|''
name|'def'
name|'parent'
op|'('
name|'self'
op|','
name|'keepQuery'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'l'
op|'='
name|'self'
op|'.'
name|'pathList'
op|'('
op|')'
newline|'\n'
name|'if'
name|'l'
op|'['
op|'-'
number|'1'
op|']'
op|'=='
string|"''"
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'l'
op|'['
op|'-'
number|'2'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# We are a file, such as http://example.com/foo/bar'
nl|'\n'
comment|'# our parent directory is http://example.com/'
nl|'\n'
indent|'            '
name|'l'
op|'.'
name|'pop'
op|'('
op|')'
newline|'\n'
name|'l'
op|'['
op|'-'
number|'1'
op|']'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_pathMod'
op|'('
name|'l'
op|','
name|'keepQuery'
op|')'
newline|'\n'
nl|'\n'
DECL|member|here
dedent|''
name|'def'
name|'here'
op|'('
name|'self'
op|','
name|'keepQuery'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'l'
op|'='
name|'self'
op|'.'
name|'pathList'
op|'('
op|')'
newline|'\n'
name|'if'
name|'l'
op|'['
op|'-'
number|'1'
op|']'
op|'!='
string|"''"
op|':'
newline|'\n'
indent|'            '
name|'l'
op|'['
op|'-'
number|'1'
op|']'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_pathMod'
op|'('
name|'l'
op|','
name|'keepQuery'
op|')'
newline|'\n'
nl|'\n'
DECL|member|click
dedent|''
name|'def'
name|'click'
op|'('
name|'self'
op|','
name|'st'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return a path which is the URL where a browser would presumably take\n        you if you clicked on a link with an HREF as given.\n        """'
newline|'\n'
name|'scheme'
op|','
name|'netloc'
op|','
name|'path'
op|','
name|'query'
op|','
name|'fragment'
op|'='
name|'urlparse'
op|'.'
name|'urlsplit'
op|'('
name|'st'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'scheme'
op|':'
newline|'\n'
indent|'            '
name|'scheme'
op|'='
name|'self'
op|'.'
name|'scheme'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'netloc'
op|':'
newline|'\n'
indent|'            '
name|'netloc'
op|'='
name|'self'
op|'.'
name|'netloc'
newline|'\n'
name|'if'
name|'not'
name|'path'
op|':'
newline|'\n'
indent|'                '
name|'path'
op|'='
name|'self'
op|'.'
name|'path'
newline|'\n'
name|'if'
name|'not'
name|'query'
op|':'
newline|'\n'
indent|'                    '
name|'query'
op|'='
name|'self'
op|'.'
name|'query'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'path'
op|'['
number|'0'
op|']'
op|'!='
string|"'/'"
op|':'
newline|'\n'
indent|'                '
name|'l'
op|'='
name|'self'
op|'.'
name|'pathList'
op|'('
op|')'
newline|'\n'
name|'l'
op|'['
op|'-'
number|'1'
op|']'
op|'='
name|'path'
newline|'\n'
name|'path'
op|'='
string|"'/'"
op|'.'
name|'join'
op|'('
name|'l'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'URLPath'
op|'('
name|'scheme'
op|','
nl|'\n'
name|'netloc'
op|','
nl|'\n'
name|'path'
op|','
nl|'\n'
name|'query'
op|','
nl|'\n'
name|'fragment'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'x'
op|'='
name|'urlparse'
op|'.'
name|'urlunsplit'
op|'('
op|'('
nl|'\n'
name|'self'
op|'.'
name|'scheme'
op|','
name|'self'
op|'.'
name|'netloc'
op|','
name|'self'
op|'.'
name|'path'
op|','
nl|'\n'
name|'self'
op|'.'
name|'query'
op|','
name|'self'
op|'.'
name|'fragment'
op|')'
op|')'
newline|'\n'
name|'return'
name|'x'
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'('
string|"'URLPath(scheme=%r, netloc=%r, path=%r, query=%r, fragment=%r)'"
nl|'\n'
op|'%'
op|'('
name|'self'
op|'.'
name|'scheme'
op|','
name|'self'
op|'.'
name|'netloc'
op|','
name|'self'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'query'
op|','
name|'self'
op|'.'
name|'fragment'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
