begin_unit
comment|'# Copyright (c) 2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nTests for L{twisted.python.htmlizer}.\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'StringIO'
name|'import'
name|'StringIO'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
op|'.'
name|'unittest'
name|'import'
name|'TestCase'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'htmlizer'
name|'import'
name|'filter'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FilterTests
name|'class'
name|'FilterTests'
op|'('
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Tests for L{twisted.python.htmlizer.filter}.\n    """'
newline|'\n'
DECL|member|test_empty
name|'def'
name|'test_empty'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        If passed an empty input file, L{filter} writes a I{pre} tag containing\n        only an end marker to the output file.\n        """'
newline|'\n'
name|'input'
op|'='
name|'StringIO'
op|'('
string|'""'
op|')'
newline|'\n'
name|'output'
op|'='
name|'StringIO'
op|'('
op|')'
newline|'\n'
name|'filter'
op|'('
name|'input'
op|','
name|'output'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'output'
op|'.'
name|'getvalue'
op|'('
op|')'
op|','
string|'\'<pre><span class="py-src-endmarker"></span></pre>\\n\''
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_variable
dedent|''
name|'def'
name|'test_variable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        If passed an input file containing a variable access, L{filter} writes\n        a I{pre} tag containing a I{py-src-variable} span containing the\n        variable.\n        """'
newline|'\n'
name|'input'
op|'='
name|'StringIO'
op|'('
string|'"foo\\n"'
op|')'
newline|'\n'
name|'output'
op|'='
name|'StringIO'
op|'('
op|')'
newline|'\n'
name|'filter'
op|'('
name|'input'
op|','
name|'output'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'output'
op|'.'
name|'getvalue'
op|'('
op|')'
op|','
nl|'\n'
string|'\'<pre><span class="py-src-variable">foo</span><span class="py-src-newline">\\n\''
nl|'\n'
string|'\'</span><span class="py-src-endmarker"></span></pre>\\n\''
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
