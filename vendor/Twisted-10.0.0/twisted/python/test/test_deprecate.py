begin_unit
comment|'# Copyright (c) 2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nTests for Twisted\'s deprecation framework, L{twisted.python.deprecate}.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'sys'
op|','
name|'types'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
op|'.'
name|'unittest'
name|'import'
name|'TestCase'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'deprecate'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'deprecate'
name|'import'
name|'_appendToDocstring'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'deprecate'
name|'import'
name|'_getDeprecationDocstring'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'deprecate'
name|'import'
name|'deprecated'
op|','
name|'getDeprecationWarningString'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'deprecate'
name|'import'
name|'_getDeprecationWarningString'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'deprecate'
name|'import'
name|'DEPRECATION_WARNING_FORMAT'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'reflect'
name|'import'
name|'fullyQualifiedName'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'versions'
name|'import'
name|'Version'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'test'
name|'import'
name|'deprecatedattributes'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|dummyCallable
name|'def'
name|'dummyCallable'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Do nothing.\n\n    This is used to test the deprecation decorators.\n    """'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestDeprecationWarnings
dedent|''
name|'class'
name|'TestDeprecationWarnings'
op|'('
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_getDeprecationWarningString
indent|'    '
name|'def'
name|'test_getDeprecationWarningString'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        L{getDeprecationWarningString} returns a string that tells us that a\n        callable was deprecated at a certain released version of Twisted.\n        """'
newline|'\n'
name|'version'
op|'='
name|'Version'
op|'('
string|"'Twisted'"
op|','
number|'8'
op|','
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'getDeprecationWarningString'
op|'('
name|'self'
op|'.'
name|'test_getDeprecationWarningString'
op|','
nl|'\n'
name|'version'
op|')'
op|','
nl|'\n'
string|'"twisted.python.test.test_deprecate.TestDeprecationWarnings."'
nl|'\n'
string|'"test_getDeprecationWarningString was deprecated in "'
nl|'\n'
string|'"Twisted 8.0.0"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_getDeprecationWarningStringWithFormat
dedent|''
name|'def'
name|'test_getDeprecationWarningStringWithFormat'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        L{getDeprecationWarningString} returns a string that tells us that a\n        callable was deprecated at a certain released version of Twisted, with\n        a message containing additional information about the deprecation.\n        """'
newline|'\n'
name|'version'
op|'='
name|'Version'
op|'('
string|"'Twisted'"
op|','
number|'8'
op|','
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
name|'format'
op|'='
name|'deprecate'
op|'.'
name|'DEPRECATION_WARNING_FORMAT'
op|'+'
string|"': This is a message'"
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'getDeprecationWarningString'
op|'('
name|'self'
op|'.'
name|'test_getDeprecationWarningString'
op|','
nl|'\n'
name|'version'
op|','
name|'format'
op|')'
op|','
nl|'\n'
string|"'twisted.python.test.test_deprecate.TestDeprecationWarnings.'"
nl|'\n'
string|"'test_getDeprecationWarningString was deprecated in '"
nl|'\n'
string|"'Twisted 8.0.0: This is a message'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_deprecateEmitsWarning
dedent|''
name|'def'
name|'test_deprecateEmitsWarning'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Decorating a callable with L{deprecated} emits a warning.\n        """'
newline|'\n'
name|'version'
op|'='
name|'Version'
op|'('
string|"'Twisted'"
op|','
number|'8'
op|','
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
name|'dummy'
op|'='
name|'deprecated'
op|'('
name|'version'
op|')'
op|'('
name|'dummyCallable'
op|')'
newline|'\n'
DECL|function|addStackLevel
name|'def'
name|'addStackLevel'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'dummy'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertWarns'
op|'('
nl|'\n'
name|'DeprecationWarning'
op|','
nl|'\n'
name|'getDeprecationWarningString'
op|'('
name|'dummyCallable'
op|','
name|'version'
op|')'
op|','
nl|'\n'
name|'__file__'
op|','
nl|'\n'
name|'addStackLevel'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_deprecatedPreservesName
dedent|''
name|'def'
name|'test_deprecatedPreservesName'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        The decorated function has the same name as the original.\n        """'
newline|'\n'
name|'version'
op|'='
name|'Version'
op|'('
string|"'Twisted'"
op|','
number|'8'
op|','
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
name|'dummy'
op|'='
name|'deprecated'
op|'('
name|'version'
op|')'
op|'('
name|'dummyCallable'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dummyCallable'
op|'.'
name|'__name__'
op|','
name|'dummy'
op|'.'
name|'__name__'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fullyQualifiedName'
op|'('
name|'dummyCallable'
op|')'
op|','
nl|'\n'
name|'fullyQualifiedName'
op|'('
name|'dummy'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_getDeprecationDocstring
dedent|''
name|'def'
name|'test_getDeprecationDocstring'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        L{_getDeprecationDocstring} returns a note about the deprecation to go\n        into a docstring.\n        """'
newline|'\n'
name|'version'
op|'='
name|'Version'
op|'('
string|"'Twisted'"
op|','
number|'8'
op|','
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|'"Deprecated in Twisted 8.0.0."'
op|','
name|'_getDeprecationDocstring'
op|'('
name|'version'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_deprecatedUpdatesDocstring
dedent|''
name|'def'
name|'test_deprecatedUpdatesDocstring'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        The docstring of the deprecated function is appended with information\n        about the deprecation.\n        """'
newline|'\n'
nl|'\n'
name|'version'
op|'='
name|'Version'
op|'('
string|"'Twisted'"
op|','
number|'8'
op|','
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
name|'dummy'
op|'='
name|'deprecated'
op|'('
name|'version'
op|')'
op|'('
name|'dummyCallable'
op|')'
newline|'\n'
nl|'\n'
name|'_appendToDocstring'
op|'('
nl|'\n'
name|'dummyCallable'
op|','
nl|'\n'
name|'_getDeprecationDocstring'
op|'('
name|'version'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dummyCallable'
op|'.'
name|'__doc__'
op|','
name|'dummy'
op|'.'
name|'__doc__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_versionMetadata
dedent|''
name|'def'
name|'test_versionMetadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Deprecating a function adds version information to the decorated\n        version of that function.\n        """'
newline|'\n'
name|'version'
op|'='
name|'Version'
op|'('
string|"'Twisted'"
op|','
number|'8'
op|','
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
name|'dummy'
op|'='
name|'deprecated'
op|'('
name|'version'
op|')'
op|'('
name|'dummyCallable'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'version'
op|','
name|'dummy'
op|'.'
name|'deprecatedVersion'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestAppendToDocstring
dedent|''
dedent|''
name|'class'
name|'TestAppendToDocstring'
op|'('
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Test the _appendToDocstring function.\n\n    _appendToDocstring is used to add text to a docstring.\n    """'
newline|'\n'
nl|'\n'
DECL|member|test_appendToEmptyDocstring
name|'def'
name|'test_appendToEmptyDocstring'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Appending to an empty docstring simply replaces the docstring.\n        """'
newline|'\n'
nl|'\n'
DECL|function|noDocstring
name|'def'
name|'noDocstring'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'_appendToDocstring'
op|'('
name|'noDocstring'
op|','
string|'"Appended text."'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"Appended text."'
op|','
name|'noDocstring'
op|'.'
name|'__doc__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_appendToSingleLineDocstring
dedent|''
name|'def'
name|'test_appendToSingleLineDocstring'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Appending to a single line docstring places the message on a new line,\n        with a blank line separating it from the rest of the docstring.\n\n        The docstring ends with a newline, conforming to Twisted and PEP 8\n        standards. Unfortunately, the indentation is incorrect, since the\n        existing docstring doesn\'t have enough info to help us indent\n        properly.\n        """'
newline|'\n'
nl|'\n'
DECL|function|singleLineDocstring
name|'def'
name|'singleLineDocstring'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""This doesn\'t comply with standards, but is here for a test."""'
newline|'\n'
nl|'\n'
dedent|''
name|'_appendToDocstring'
op|'('
name|'singleLineDocstring'
op|','
string|'"Appended text."'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
op|'['
string|'"This doesn\'t comply with standards, but is here for a test."'
op|','
nl|'\n'
string|'""'
op|','
nl|'\n'
string|'"Appended text."'
op|']'
op|','
nl|'\n'
name|'singleLineDocstring'
op|'.'
name|'__doc__'
op|'.'
name|'splitlines'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'singleLineDocstring'
op|'.'
name|'__doc__'
op|'.'
name|'endswith'
op|'('
string|"'\\n'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_appendToMultilineDocstring
dedent|''
name|'def'
name|'test_appendToMultilineDocstring'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Appending to a multi-line docstring places the messade on a new line,\n        with a blank line separating it from the rest of the docstring.\n\n        Because we have multiple lines, we have enough information to do\n        indentation.\n        """'
newline|'\n'
nl|'\n'
DECL|function|multiLineDocstring
name|'def'
name|'multiLineDocstring'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""\n            This is a multi-line docstring.\n            """'
newline|'\n'
nl|'\n'
DECL|function|expectedDocstring
dedent|''
name|'def'
name|'expectedDocstring'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""\n            This is a multi-line docstring.\n\n            Appended text.\n            """'
newline|'\n'
nl|'\n'
dedent|''
name|'_appendToDocstring'
op|'('
name|'multiLineDocstring'
op|','
string|'"Appended text."'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'expectedDocstring'
op|'.'
name|'__doc__'
op|','
name|'multiLineDocstring'
op|'.'
name|'__doc__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|_MockDeprecatedAttribute
dedent|''
dedent|''
name|'class'
name|'_MockDeprecatedAttribute'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Mock of L{twisted.python.deprecate._DeprecatedAttribute}.\n\n    @ivar value: The value of the attribute.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'value'
op|'='
name|'value'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|get
dedent|''
name|'def'
name|'get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get a known value.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'value'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|ModuleProxyTests
dedent|''
dedent|''
name|'class'
name|'ModuleProxyTests'
op|'('
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Tests for L{twisted.python.deprecate._ModuleProxy}, which proxies\n    access to module-level attributes, intercepting access to deprecated\n    attributes and passing through access to normal attributes.\n    """'
newline|'\n'
DECL|member|_makeProxy
name|'def'
name|'_makeProxy'
op|'('
name|'self'
op|','
op|'**'
name|'attrs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create a temporary module proxy object.\n\n        @param **kw: Attributes to initialise on the temporary module object\n\n        @rtype: L{twistd.python.deprecate._ModuleProxy}\n        """'
newline|'\n'
name|'mod'
op|'='
name|'types'
op|'.'
name|'ModuleType'
op|'('
string|"'foo'"
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'attrs'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'setattr'
op|'('
name|'mod'
op|','
name|'key'
op|','
name|'value'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'deprecate'
op|'.'
name|'_ModuleProxy'
op|'('
name|'mod'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_getattrPassthrough
dedent|''
name|'def'
name|'test_getattrPassthrough'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Getting a normal attribute on a L{twisted.python.deprecate._ModuleProxy}\n        retrieves the underlying attribute\'s value, and raises C{AttributeError}\n        if a non-existant attribute is accessed.\n        """'
newline|'\n'
name|'proxy'
op|'='
name|'self'
op|'.'
name|'_makeProxy'
op|'('
name|'SOME_ATTRIBUTE'
op|'='
string|"'hello'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIdentical'
op|'('
name|'proxy'
op|'.'
name|'SOME_ATTRIBUTE'
op|','
string|"'hello'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AttributeError'
op|','
name|'getattr'
op|','
name|'proxy'
op|','
string|"'DOES_NOT_EXIST'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_getattrIntercept
dedent|''
name|'def'
name|'test_getattrIntercept'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Getting an attribute marked as being deprecated on\n        L{twisted.python.deprecate._ModuleProxy} results in calling the\n        deprecated wrapper\'s C{get} method.\n        """'
newline|'\n'
name|'proxy'
op|'='
name|'self'
op|'.'
name|'_makeProxy'
op|'('
op|')'
newline|'\n'
name|'_deprecatedAttributes'
op|'='
name|'object'
op|'.'
name|'__getattribute__'
op|'('
nl|'\n'
name|'proxy'
op|','
string|"'_deprecatedAttributes'"
op|')'
newline|'\n'
name|'_deprecatedAttributes'
op|'['
string|"'foo'"
op|']'
op|'='
name|'_MockDeprecatedAttribute'
op|'('
number|'42'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proxy'
op|'.'
name|'foo'
op|','
number|'42'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_privateAttributes
dedent|''
name|'def'
name|'test_privateAttributes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Private attributes of L{twisted.python.deprecate._ModuleProxy} are\n        inaccessible when regular attribute access is used.\n        """'
newline|'\n'
name|'proxy'
op|'='
name|'self'
op|'.'
name|'_makeProxy'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AttributeError'
op|','
name|'getattr'
op|','
name|'proxy'
op|','
string|"'_module'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'AttributeError'
op|','
name|'getattr'
op|','
name|'proxy'
op|','
string|"'_deprecatedAttributes'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_setattr
dedent|''
name|'def'
name|'test_setattr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Setting attributes on L{twisted.python.deprecate._ModuleProxy} proxies\n        them through to the wrapped module.\n        """'
newline|'\n'
name|'proxy'
op|'='
name|'self'
op|'.'
name|'_makeProxy'
op|'('
op|')'
newline|'\n'
name|'proxy'
op|'.'
name|'_module'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEquals'
op|'('
name|'object'
op|'.'
name|'__getattribute__'
op|'('
name|'proxy'
op|','
string|"'_module'"
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proxy'
op|'.'
name|'_module'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_repr
dedent|''
name|'def'
name|'test_repr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        L{twisted.python.deprecated._ModuleProxy.__repr__} produces a string\n        containing the proxy type and a representation of the wrapped module\n        object.\n        """'
newline|'\n'
name|'proxy'
op|'='
name|'self'
op|'.'
name|'_makeProxy'
op|'('
op|')'
newline|'\n'
name|'realModule'
op|'='
name|'object'
op|'.'
name|'__getattribute__'
op|'('
name|'proxy'
op|','
string|"'_module'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'repr'
op|'('
name|'proxy'
op|')'
op|','
string|"'<%s module=%r>'"
op|'%'
op|'('
name|'type'
op|'('
name|'proxy'
op|')'
op|'.'
name|'__name__'
op|','
name|'realModule'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|DeprecatedAttributeTests
dedent|''
dedent|''
name|'class'
name|'DeprecatedAttributeTests'
op|'('
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Tests for L{twisted.python.deprecate._DeprecatedAttribute} and\n    L{twisted.python.deprecate.deprecatedModuleAttribute}, which issue\n    warnings for deprecated module-level attributes.\n    """'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'version'
op|'='
name|'deprecatedattributes'
op|'.'
name|'version'
newline|'\n'
name|'self'
op|'.'
name|'message'
op|'='
name|'deprecatedattributes'
op|'.'
name|'message'
newline|'\n'
name|'self'
op|'.'
name|'_testModuleName'
op|'='
name|'__name__'
op|'+'
string|"'.foo'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_getWarningString
dedent|''
name|'def'
name|'_getWarningString'
op|'('
name|'self'
op|','
name|'attr'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create the warning string used by deprecated attributes.\n        """'
newline|'\n'
name|'return'
name|'_getDeprecationWarningString'
op|'('
nl|'\n'
name|'deprecatedattributes'
op|'.'
name|'__name__'
op|'+'
string|"'.'"
op|'+'
name|'attr'
op|','
nl|'\n'
name|'deprecatedattributes'
op|'.'
name|'version'
op|','
nl|'\n'
name|'DEPRECATION_WARNING_FORMAT'
op|'+'
string|"': '"
op|'+'
name|'deprecatedattributes'
op|'.'
name|'message'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_deprecatedAttributeHelper
dedent|''
name|'def'
name|'test_deprecatedAttributeHelper'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        L{twisted.python.deprecate._DeprecatedAttribute} correctly sets its\n        __name__ to match that of the deprecated attribute and emits a warning\n        when the original attribute value is accessed.\n        """'
newline|'\n'
name|'name'
op|'='
string|"'ANOTHER_DEPRECATED_ATTRIBUTE'"
newline|'\n'
name|'setattr'
op|'('
name|'deprecatedattributes'
op|','
name|'name'
op|','
number|'42'
op|')'
newline|'\n'
name|'attr'
op|'='
name|'deprecate'
op|'.'
name|'_DeprecatedAttribute'
op|'('
nl|'\n'
name|'deprecatedattributes'
op|','
name|'name'
op|','
name|'self'
op|'.'
name|'version'
op|','
name|'self'
op|'.'
name|'message'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'attr'
op|'.'
name|'__name__'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
comment|"# Since we're accessing the value getter directly, as opposed to via"
nl|'\n'
comment|"# the module proxy, we need to match the warning's stack level."
nl|'\n'
DECL|function|addStackLevel
name|'def'
name|'addStackLevel'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'attr'
op|'.'
name|'get'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Access the deprecated attribute.'
nl|'\n'
dedent|''
name|'addStackLevel'
op|'('
op|')'
newline|'\n'
name|'warningsShown'
op|'='
name|'self'
op|'.'
name|'flushWarnings'
op|'('
op|'['
nl|'\n'
name|'self'
op|'.'
name|'test_deprecatedAttributeHelper'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIdentical'
op|'('
name|'warningsShown'
op|'['
number|'0'
op|']'
op|'['
string|"'category'"
op|']'
op|','
name|'DeprecationWarning'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'warningsShown'
op|'['
number|'0'
op|']'
op|'['
string|"'message'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_getWarningString'
op|'('
name|'name'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'warningsShown'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_deprecatedAttribute
dedent|''
name|'def'
name|'test_deprecatedAttribute'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        L{twisted.python.deprecate.deprecatedModuleAttribute} wraps a\n        module-level attribute in an object that emits a deprecation warning\n        when it is accessed the first time only, while leaving other unrelated\n        attributes alone.\n        """'
newline|'\n'
comment|'# Accessing non-deprecated attributes does not issue a warning.'
nl|'\n'
name|'deprecatedattributes'
op|'.'
name|'ANOTHER_ATTRIBUTE'
newline|'\n'
name|'warningsShown'
op|'='
name|'self'
op|'.'
name|'flushWarnings'
op|'('
op|'['
name|'self'
op|'.'
name|'test_deprecatedAttribute'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'warningsShown'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'name'
op|'='
string|"'DEPRECATED_ATTRIBUTE'"
newline|'\n'
nl|'\n'
comment|'# Access the deprecated attribute. This uses getattr to avoid repeating'
nl|'\n'
comment|'# the attribute name.'
nl|'\n'
name|'getattr'
op|'('
name|'deprecatedattributes'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
name|'warningsShown'
op|'='
name|'self'
op|'.'
name|'flushWarnings'
op|'('
op|'['
name|'self'
op|'.'
name|'test_deprecatedAttribute'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'warningsShown'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIdentical'
op|'('
name|'warningsShown'
op|'['
number|'0'
op|']'
op|'['
string|"'category'"
op|']'
op|','
name|'DeprecationWarning'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'warningsShown'
op|'['
number|'0'
op|']'
op|'['
string|"'message'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_getWarningString'
op|'('
name|'name'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_wrappedModule
dedent|''
name|'def'
name|'test_wrappedModule'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Deprecating an attribute in a module replaces and wraps that module\n        instance, in C{sys.modules}, with a\n        L{twisted.python.deprecate._ModuleProxy} instance but only if it hasn\'t\n        already been wrapped.\n        """'
newline|'\n'
name|'sys'
op|'.'
name|'modules'
op|'['
name|'self'
op|'.'
name|'_testModuleName'
op|']'
op|'='
name|'mod'
op|'='
name|'types'
op|'.'
name|'ModuleType'
op|'('
string|"'foo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'sys'
op|'.'
name|'modules'
op|'.'
name|'pop'
op|','
name|'self'
op|'.'
name|'_testModuleName'
op|')'
newline|'\n'
nl|'\n'
name|'setattr'
op|'('
name|'mod'
op|','
string|"'first'"
op|','
number|'1'
op|')'
newline|'\n'
name|'setattr'
op|'('
name|'mod'
op|','
string|"'second'"
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
name|'deprecate'
op|'.'
name|'deprecatedModuleAttribute'
op|'('
nl|'\n'
name|'Version'
op|'('
string|"'Twisted'"
op|','
number|'8'
op|','
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
string|"'message'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_testModuleName'
op|','
nl|'\n'
string|"'first'"
op|')'
newline|'\n'
nl|'\n'
name|'proxy'
op|'='
name|'sys'
op|'.'
name|'modules'
op|'['
name|'self'
op|'.'
name|'_testModuleName'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'proxy'
op|','
name|'mod'
op|')'
newline|'\n'
nl|'\n'
name|'deprecate'
op|'.'
name|'deprecatedModuleAttribute'
op|'('
nl|'\n'
name|'Version'
op|'('
string|"'Twisted'"
op|','
number|'8'
op|','
number|'0'
op|','
number|'0'
op|')'
op|','
nl|'\n'
string|"'message'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'_testModuleName'
op|','
nl|'\n'
string|"'second'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertIdentical'
op|'('
name|'proxy'
op|','
name|'sys'
op|'.'
name|'modules'
op|'['
name|'self'
op|'.'
name|'_testModuleName'
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
