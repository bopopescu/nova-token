begin_unit
comment|'# -*- test-case-name: twisted.python.test.test_runtime -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
comment|'# System imports'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'imp'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|shortPythonVersion
name|'def'
name|'shortPythonVersion'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'hv'
op|'='
name|'sys'
op|'.'
name|'hexversion'
newline|'\n'
name|'major'
op|'='
op|'('
name|'hv'
op|'&'
number|'0xff000000L'
op|')'
op|'>>'
number|'24'
newline|'\n'
name|'minor'
op|'='
op|'('
name|'hv'
op|'&'
number|'0x00ff0000L'
op|')'
op|'>>'
number|'16'
newline|'\n'
name|'teeny'
op|'='
op|'('
name|'hv'
op|'&'
number|'0x0000ff00L'
op|')'
op|'>>'
number|'8'
newline|'\n'
name|'return'
string|'"%s.%s.%s"'
op|'%'
op|'('
name|'major'
op|','
name|'minor'
op|','
name|'teeny'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|knownPlatforms
dedent|''
name|'knownPlatforms'
op|'='
op|'{'
nl|'\n'
string|"'nt'"
op|':'
string|"'win32'"
op|','
nl|'\n'
string|"'ce'"
op|':'
string|"'win32'"
op|','
nl|'\n'
string|"'posix'"
op|':'
string|"'posix'"
op|','
nl|'\n'
string|"'java'"
op|':'
string|"'java'"
op|','
nl|'\n'
string|"'org.python.modules.os'"
op|':'
string|"'java'"
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|variable|_timeFunctions
name|'_timeFunctions'
op|'='
op|'{'
nl|'\n'
comment|"#'win32': time.clock,"
nl|'\n'
string|"'win32'"
op|':'
name|'time'
op|'.'
name|'time'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|class|Platform
name|'class'
name|'Platform'
op|':'
newline|'\n'
indent|'    '
string|'"""Gives us information about the platform we\'re running on"""'
newline|'\n'
nl|'\n'
DECL|variable|type
name|'type'
op|'='
name|'knownPlatforms'
op|'.'
name|'get'
op|'('
name|'os'
op|'.'
name|'name'
op|')'
newline|'\n'
DECL|variable|seconds
name|'seconds'
op|'='
name|'staticmethod'
op|'('
name|'_timeFunctions'
op|'.'
name|'get'
op|'('
name|'type'
op|','
name|'time'
op|'.'
name|'time'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'name'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'type'
op|'='
name|'knownPlatforms'
op|'.'
name|'get'
op|'('
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'seconds'
op|'='
name|'_timeFunctions'
op|'.'
name|'get'
op|'('
name|'self'
op|'.'
name|'type'
op|','
name|'time'
op|'.'
name|'time'
op|')'
newline|'\n'
nl|'\n'
DECL|member|isKnown
dedent|''
dedent|''
name|'def'
name|'isKnown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Do we know about this platform?"""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'type'
op|'!='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|getType
dedent|''
name|'def'
name|'getType'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return \'posix\', \'win32\' or \'java\'"""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'type'
newline|'\n'
nl|'\n'
DECL|member|isMacOSX
dedent|''
name|'def'
name|'isMacOSX'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return if we are runnng on Mac OS X."""'
newline|'\n'
name|'return'
name|'sys'
op|'.'
name|'platform'
op|'=='
string|'"darwin"'
newline|'\n'
nl|'\n'
DECL|member|isWinNT
dedent|''
name|'def'
name|'isWinNT'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Are we running in Windows NT?"""'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'getType'
op|'('
op|')'
op|'=='
string|"'win32'"
op|':'
newline|'\n'
indent|'            '
name|'import'
name|'_winreg'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'k'
op|'='
name|'_winreg'
op|'.'
name|'OpenKeyEx'
op|'('
name|'_winreg'
op|'.'
name|'HKEY_LOCAL_MACHINE'
op|','
nl|'\n'
string|"r'Software\\Microsoft\\Windows NT\\CurrentVersion'"
op|')'
newline|'\n'
name|'_winreg'
op|'.'
name|'QueryValueEx'
op|'('
name|'k'
op|','
string|"'SystemRoot'"
op|')'
newline|'\n'
name|'return'
number|'1'
newline|'\n'
dedent|''
name|'except'
name|'WindowsError'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'0'
newline|'\n'
comment|'# not windows NT'
nl|'\n'
dedent|''
dedent|''
name|'return'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|isWindows
dedent|''
name|'def'
name|'isWindows'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'getType'
op|'('
op|')'
op|'=='
string|"'win32'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|isVista
dedent|''
name|'def'
name|'isVista'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Check if current platform is Windows Vista or Windows Server 2008.\n\n        @return: C{True} if the current platform has been detected as Vista\n        @rtype: C{bool}\n        """'
newline|'\n'
name|'if'
name|'getattr'
op|'('
name|'sys'
op|','
string|'"getwindowsversion"'
op|','
name|'None'
op|')'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'sys'
op|'.'
name|'getwindowsversion'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|'=='
number|'6'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|supportsThreads
dedent|''
dedent|''
name|'def'
name|'supportsThreads'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Can threads be created?\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'imp'
op|'.'
name|'find_module'
op|'('
string|"'thread'"
op|')'
op|'['
number|'0'
op|']'
name|'is'
name|'None'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|variable|platform
dedent|''
dedent|''
dedent|''
name|'platform'
op|'='
name|'Platform'
op|'('
op|')'
newline|'\n'
DECL|variable|platformType
name|'platformType'
op|'='
name|'platform'
op|'.'
name|'getType'
op|'('
op|')'
newline|'\n'
DECL|variable|seconds
name|'seconds'
op|'='
name|'platform'
op|'.'
name|'seconds'
newline|'\n'
endmarker|''
end_unit
