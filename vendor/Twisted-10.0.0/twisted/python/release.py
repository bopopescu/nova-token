begin_unit
string|'"""\nA release-automation toolkit.\n\nDon\'t use this outside of Twisted.\n\nMaintainer: Christopher Armstrong\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# errors'
nl|'\n'
nl|'\n'
DECL|class|DirectoryExists
name|'class'
name|'DirectoryExists'
op|'('
name|'OSError'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Some directory exists when it shouldn\'t."""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|DirectoryDoesntExist
dedent|''
name|'class'
name|'DirectoryDoesntExist'
op|'('
name|'OSError'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Some directory doesn\'t exist when it should."""'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|CommandFailed
dedent|''
name|'class'
name|'CommandFailed'
op|'('
name|'OSError'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
comment|'# utilities'
nl|'\n'
nl|'\n'
DECL|function|sh
dedent|''
name|'def'
name|'sh'
op|'('
name|'command'
op|','
name|'null'
op|'='
name|'True'
op|','
name|'prompt'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    I\'ll try to execute `command\', and if `prompt\' is true, I\'ll\n    ask before running it.  If the command returns something other\n    than 0, I\'ll raise CommandFailed(command).\n    """'
newline|'\n'
name|'print'
string|'"--$"'
op|','
name|'command'
newline|'\n'
nl|'\n'
name|'if'
name|'prompt'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'raw_input'
op|'('
string|'"run ?? "'
op|')'
op|'.'
name|'startswith'
op|'('
string|"'n'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'null'
op|':'
newline|'\n'
indent|'        '
name|'command'
op|'='
string|'"%s > /dev/null"'
op|'%'
name|'command'
newline|'\n'
dedent|''
name|'if'
name|'os'
op|'.'
name|'system'
op|'('
name|'command'
op|')'
op|'!='
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'CommandFailed'
op|'('
name|'command'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|runChdirSafe
dedent|''
dedent|''
name|'def'
name|'runChdirSafe'
op|'('
name|'f'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'origdir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'abspath'
op|'('
string|"'.'"
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'f'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kw'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'        '
name|'os'
op|'.'
name|'chdir'
op|'('
name|'origdir'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
