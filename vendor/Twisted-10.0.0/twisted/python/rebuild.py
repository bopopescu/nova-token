begin_unit
comment|'# -*- test-case-name: twisted.test.test_rebuild -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2009 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""\n*Real* reloading support for Python.\n"""'
newline|'\n'
nl|'\n'
comment|'# System Imports'
nl|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'types'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'linecache'
newline|'\n'
nl|'\n'
comment|'# Sibling Imports'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
op|','
name|'reflect'
newline|'\n'
nl|'\n'
DECL|variable|lastRebuild
name|'lastRebuild'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Sensitive
name|'class'
name|'Sensitive'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A utility mixin that\'s sensitive to rebuilds.\n\n    This is a mixin for classes (usually those which represent collections of\n    callbacks) to make sure that their code is up-to-date before running.\n    """'
newline|'\n'
nl|'\n'
DECL|variable|lastRebuild
name|'lastRebuild'
op|'='
name|'lastRebuild'
newline|'\n'
nl|'\n'
DECL|member|needRebuildUpdate
name|'def'
name|'needRebuildUpdate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'yn'
op|'='
op|'('
name|'self'
op|'.'
name|'lastRebuild'
op|'<'
name|'lastRebuild'
op|')'
newline|'\n'
name|'return'
name|'yn'
newline|'\n'
nl|'\n'
DECL|member|rebuildUpToDate
dedent|''
name|'def'
name|'rebuildUpToDate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'lastRebuild'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|latestVersionOf
dedent|''
name|'def'
name|'latestVersionOf'
op|'('
name|'self'
op|','
name|'anObject'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get the latest version of an object.\n\n        This can handle just about anything callable; instances, functions,\n        methods, and classes.\n        """'
newline|'\n'
name|'t'
op|'='
name|'type'
op|'('
name|'anObject'
op|')'
newline|'\n'
name|'if'
name|'t'
op|'=='
name|'types'
op|'.'
name|'FunctionType'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'latestFunction'
op|'('
name|'anObject'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'t'
op|'=='
name|'types'
op|'.'
name|'MethodType'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'anObject'
op|'.'
name|'im_self'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'getattr'
op|'('
name|'anObject'
op|'.'
name|'im_class'
op|','
name|'anObject'
op|'.'
name|'__name__'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'getattr'
op|'('
name|'anObject'
op|'.'
name|'im_self'
op|','
name|'anObject'
op|'.'
name|'__name__'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'t'
op|'=='
name|'types'
op|'.'
name|'InstanceType'
op|':'
newline|'\n'
comment|"# Kick it, if it's out of date."
nl|'\n'
indent|'            '
name|'getattr'
op|'('
name|'anObject'
op|','
string|"'nothing'"
op|','
name|'None'
op|')'
newline|'\n'
name|'return'
name|'anObject'
newline|'\n'
dedent|''
name|'elif'
name|'t'
op|'=='
name|'types'
op|'.'
name|'ClassType'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'latestClass'
op|'('
name|'anObject'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'warning returning anObject!'"
op|')'
newline|'\n'
name|'return'
name|'anObject'
newline|'\n'
nl|'\n'
DECL|variable|_modDictIDMap
dedent|''
dedent|''
dedent|''
name|'_modDictIDMap'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|latestFunction
name|'def'
name|'latestFunction'
op|'('
name|'oldFunc'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Get the latest version of a function.\n    """'
newline|'\n'
comment|'# This may be CPython specific, since I believe jython instantiates a new'
nl|'\n'
comment|'# module upon reload.'
nl|'\n'
name|'dictID'
op|'='
name|'id'
op|'('
name|'oldFunc'
op|'.'
name|'func_globals'
op|')'
newline|'\n'
name|'module'
op|'='
name|'_modDictIDMap'
op|'.'
name|'get'
op|'('
name|'dictID'
op|')'
newline|'\n'
name|'if'
name|'module'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'oldFunc'
newline|'\n'
dedent|''
name|'return'
name|'getattr'
op|'('
name|'module'
op|','
name|'oldFunc'
op|'.'
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|latestClass
dedent|''
name|'def'
name|'latestClass'
op|'('
name|'oldClass'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Get the latest version of a class.\n    """'
newline|'\n'
name|'module'
op|'='
name|'reflect'
op|'.'
name|'namedModule'
op|'('
name|'oldClass'
op|'.'
name|'__module__'
op|')'
newline|'\n'
name|'newClass'
op|'='
name|'getattr'
op|'('
name|'module'
op|','
name|'oldClass'
op|'.'
name|'__name__'
op|')'
newline|'\n'
name|'newBases'
op|'='
op|'['
name|'latestClass'
op|'('
name|'base'
op|')'
name|'for'
name|'base'
name|'in'
name|'newClass'
op|'.'
name|'__bases__'
op|']'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
comment|'# This makes old-style stuff work'
nl|'\n'
indent|'        '
name|'newClass'
op|'.'
name|'__bases__'
op|'='
name|'tuple'
op|'('
name|'newBases'
op|')'
newline|'\n'
name|'return'
name|'newClass'
newline|'\n'
dedent|''
name|'except'
name|'TypeError'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'newClass'
op|'.'
name|'__module__'
op|'=='
string|'"__builtin__"'
op|':'
newline|'\n'
comment|"# __builtin__ members can't be reloaded sanely"
nl|'\n'
indent|'            '
name|'return'
name|'newClass'
newline|'\n'
dedent|''
name|'ctor'
op|'='
name|'getattr'
op|'('
name|'newClass'
op|','
string|"'__metaclass__'"
op|','
name|'type'
op|')'
newline|'\n'
name|'return'
name|'ctor'
op|'('
name|'newClass'
op|'.'
name|'__name__'
op|','
name|'tuple'
op|'('
name|'newBases'
op|')'
op|','
name|'dict'
op|'('
name|'newClass'
op|'.'
name|'__dict__'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RebuildError
dedent|''
dedent|''
name|'class'
name|'RebuildError'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Exception raised when trying to rebuild a class whereas it\'s not possible.\n    """'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|updateInstance
dedent|''
name|'def'
name|'updateInstance'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Updates an instance to be current.\n    """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'__class__'
op|'='
name|'latestClass'
op|'('
name|'self'
op|'.'
name|'__class__'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'TypeError'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'hasattr'
op|'('
name|'self'
op|'.'
name|'__class__'
op|','
string|"'__slots__'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'RebuildError'
op|'('
string|'"Can\'t rebuild class with __slots__ on Python < 2.6"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|__getattr__
dedent|''
dedent|''
dedent|''
name|'def'
name|'__getattr__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A getattr method to cause a class to be refreshed.\n    """'
newline|'\n'
name|'if'
name|'name'
op|'=='
string|"'__del__'"
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'AttributeError'
op|'('
string|'"Without this, Python segfaults."'
op|')'
newline|'\n'
dedent|''
name|'updateInstance'
op|'('
name|'self'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|'"(rebuilding stale %s instance (%s))"'
op|'%'
op|'('
name|'reflect'
op|'.'
name|'qual'
op|'('
name|'self'
op|'.'
name|'__class__'
op|')'
op|','
name|'name'
op|')'
op|')'
newline|'\n'
name|'result'
op|'='
name|'getattr'
op|'('
name|'self'
op|','
name|'name'
op|')'
newline|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|rebuild
dedent|''
name|'def'
name|'rebuild'
op|'('
name|'module'
op|','
name|'doLog'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Reload a module and do as much as possible to replace its references.\n    """'
newline|'\n'
name|'global'
name|'lastRebuild'
newline|'\n'
name|'lastRebuild'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'module'
op|','
string|"'ALLOW_TWISTED_REBUILD'"
op|')'
op|':'
newline|'\n'
comment|'# Is this module allowed to be rebuilt?'
nl|'\n'
indent|'        '
name|'if'
name|'not'
name|'module'
op|'.'
name|'ALLOW_TWISTED_REBUILD'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'RuntimeError'
op|'('
string|'"I am not allowed to be rebuilt."'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'doLog'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'Rebuilding %s...'"
op|'%'
name|'str'
op|'('
name|'module'
op|'.'
name|'__name__'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'## Safely handle adapter re-registration'
nl|'\n'
dedent|''
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'components'
newline|'\n'
name|'components'
op|'.'
name|'ALLOW_DUPLICATES'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'d'
op|'='
name|'module'
op|'.'
name|'__dict__'
newline|'\n'
name|'_modDictIDMap'
op|'['
name|'id'
op|'('
name|'d'
op|')'
op|']'
op|'='
name|'module'
newline|'\n'
name|'newclasses'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'classes'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'functions'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'values'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'doLog'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'  (scanning %s): '"
op|'%'
name|'str'
op|'('
name|'module'
op|'.'
name|'__name__'
op|')'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'d'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'type'
op|'('
name|'v'
op|')'
op|'=='
name|'types'
op|'.'
name|'ClassType'
op|':'
newline|'\n'
comment|'# Failure condition -- instances of classes with buggy'
nl|'\n'
comment|'# __hash__/__cmp__ methods referenced at the module level...'
nl|'\n'
indent|'            '
name|'if'
name|'v'
op|'.'
name|'__module__'
op|'=='
name|'module'
op|'.'
name|'__name__'
op|':'
newline|'\n'
indent|'                '
name|'classes'
op|'['
name|'v'
op|']'
op|'='
number|'1'
newline|'\n'
name|'if'
name|'doLog'
op|':'
newline|'\n'
indent|'                    '
name|'log'
op|'.'
name|'logfile'
op|'.'
name|'write'
op|'('
string|'"c"'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'logfile'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'elif'
name|'type'
op|'('
name|'v'
op|')'
op|'=='
name|'types'
op|'.'
name|'FunctionType'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'v'
op|'.'
name|'func_globals'
name|'is'
name|'module'
op|'.'
name|'__dict__'
op|':'
newline|'\n'
indent|'                '
name|'functions'
op|'['
name|'v'
op|']'
op|'='
number|'1'
newline|'\n'
name|'if'
name|'doLog'
op|':'
newline|'\n'
indent|'                    '
name|'log'
op|'.'
name|'logfile'
op|'.'
name|'write'
op|'('
string|'"f"'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'logfile'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'elif'
name|'isinstance'
op|'('
name|'v'
op|','
name|'type'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'v'
op|'.'
name|'__module__'
op|'=='
name|'module'
op|'.'
name|'__name__'
op|':'
newline|'\n'
indent|'                '
name|'newclasses'
op|'['
name|'v'
op|']'
op|'='
number|'1'
newline|'\n'
name|'if'
name|'doLog'
op|':'
newline|'\n'
indent|'                    '
name|'log'
op|'.'
name|'logfile'
op|'.'
name|'write'
op|'('
string|'"o"'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'logfile'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'values'
op|'.'
name|'update'
op|'('
name|'classes'
op|')'
newline|'\n'
name|'values'
op|'.'
name|'update'
op|'('
name|'functions'
op|')'
newline|'\n'
name|'fromOldModule'
op|'='
name|'values'
op|'.'
name|'has_key'
newline|'\n'
name|'newclasses'
op|'='
name|'newclasses'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'classes'
op|'='
name|'classes'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'functions'
op|'='
name|'functions'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'doLog'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
string|"''"
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|"'  (reload   %s)'"
op|'%'
name|'str'
op|'('
name|'module'
op|'.'
name|'__name__'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Boom.'
nl|'\n'
dedent|''
name|'reload'
op|'('
name|'module'
op|')'
newline|'\n'
comment|'# Make sure that my traceback printing will at least be recent...'
nl|'\n'
name|'linecache'
op|'.'
name|'clearcache'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'doLog'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'  (cleaning %s): '"
op|'%'
name|'str'
op|'('
name|'module'
op|'.'
name|'__name__'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'clazz'
name|'in'
name|'classes'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'getattr'
op|'('
name|'module'
op|','
name|'clazz'
op|'.'
name|'__name__'
op|')'
name|'is'
name|'clazz'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"WARNING: class %s not replaced by reload!"'
op|'%'
name|'reflect'
op|'.'
name|'qual'
op|'('
name|'clazz'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'doLog'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'logfile'
op|'.'
name|'write'
op|'('
string|'"x"'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'logfile'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
dedent|''
name|'clazz'
op|'.'
name|'__bases__'
op|'='
op|'('
op|')'
newline|'\n'
name|'clazz'
op|'.'
name|'__dict__'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
name|'clazz'
op|'.'
name|'__getattr__'
op|'='
name|'__getattr__'
newline|'\n'
name|'clazz'
op|'.'
name|'__module__'
op|'='
name|'module'
op|'.'
name|'__name__'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'newclasses'
op|':'
newline|'\n'
indent|'        '
name|'import'
name|'gc'
newline|'\n'
dedent|''
name|'for'
name|'nclass'
name|'in'
name|'newclasses'
op|':'
newline|'\n'
indent|'        '
name|'ga'
op|'='
name|'getattr'
op|'('
name|'module'
op|','
name|'nclass'
op|'.'
name|'__name__'
op|')'
newline|'\n'
name|'if'
name|'ga'
name|'is'
name|'nclass'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|'"WARNING: new-class %s not replaced by reload!"'
op|'%'
name|'reflect'
op|'.'
name|'qual'
op|'('
name|'nclass'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'r'
name|'in'
name|'gc'
op|'.'
name|'get_referrers'
op|'('
name|'nclass'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'getattr'
op|'('
name|'r'
op|','
string|"'__class__'"
op|','
name|'None'
op|')'
name|'is'
name|'nclass'
op|':'
newline|'\n'
indent|'                    '
name|'r'
op|'.'
name|'__class__'
op|'='
name|'ga'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'if'
name|'doLog'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
string|"''"
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|"'  (fixing   %s): '"
op|'%'
name|'str'
op|'('
name|'module'
op|'.'
name|'__name__'
op|')'
op|')'
newline|'\n'
dedent|''
name|'modcount'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'mk'
op|','
name|'mod'
name|'in'
name|'sys'
op|'.'
name|'modules'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'modcount'
op|'='
name|'modcount'
op|'+'
number|'1'
newline|'\n'
name|'if'
name|'mod'
op|'=='
name|'module'
name|'or'
name|'mod'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'mod'
op|','
string|"'__file__'"
op|')'
op|':'
newline|'\n'
comment|"# It's a builtin module; nothing to replace here."
nl|'\n'
indent|'            '
name|'continue'
newline|'\n'
dedent|''
name|'changed'
op|'='
number|'0'
newline|'\n'
nl|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'mod'
op|'.'
name|'__dict__'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'hash'
op|'('
name|'v'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'fromOldModule'
op|'('
name|'v'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'type'
op|'('
name|'v'
op|')'
op|'=='
name|'types'
op|'.'
name|'ClassType'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'doLog'
op|':'
newline|'\n'
indent|'                        '
name|'log'
op|'.'
name|'logfile'
op|'.'
name|'write'
op|'('
string|'"c"'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'logfile'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
dedent|''
name|'nv'
op|'='
name|'latestClass'
op|'('
name|'v'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'doLog'
op|':'
newline|'\n'
indent|'                        '
name|'log'
op|'.'
name|'logfile'
op|'.'
name|'write'
op|'('
string|'"f"'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'logfile'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
dedent|''
name|'nv'
op|'='
name|'latestFunction'
op|'('
name|'v'
op|')'
newline|'\n'
dedent|''
name|'changed'
op|'='
number|'1'
newline|'\n'
name|'setattr'
op|'('
name|'mod'
op|','
name|'k'
op|','
name|'nv'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# Replace bases of non-module classes just to be sure.'
nl|'\n'
indent|'                '
name|'if'
name|'type'
op|'('
name|'v'
op|')'
op|'=='
name|'types'
op|'.'
name|'ClassType'
op|':'
newline|'\n'
indent|'                    '
name|'for'
name|'base'
name|'in'
name|'v'
op|'.'
name|'__bases__'
op|':'
newline|'\n'
indent|'                        '
name|'if'
name|'fromOldModule'
op|'('
name|'base'
op|')'
op|':'
newline|'\n'
indent|'                            '
name|'latestClass'
op|'('
name|'v'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
name|'if'
name|'doLog'
name|'and'
name|'not'
name|'changed'
name|'and'
op|'('
op|'('
name|'modcount'
op|'%'
number|'10'
op|')'
op|'=='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'logfile'
op|'.'
name|'write'
op|'('
string|'"."'
op|')'
newline|'\n'
name|'log'
op|'.'
name|'logfile'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'components'
op|'.'
name|'ALLOW_DUPLICATES'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'doLog'
op|':'
newline|'\n'
indent|'        '
name|'log'
op|'.'
name|'msg'
op|'('
string|"''"
op|')'
newline|'\n'
name|'log'
op|'.'
name|'msg'
op|'('
string|"'   Rebuilt %s.'"
op|'%'
name|'str'
op|'('
name|'module'
op|'.'
name|'__name__'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'module'
newline|'\n'
nl|'\n'
dedent|''
endmarker|''
end_unit
