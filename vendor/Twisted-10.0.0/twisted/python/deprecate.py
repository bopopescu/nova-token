begin_unit
comment|'# -*- test-case-name: twisted.python.test.test_deprecate -*-'
nl|'\n'
comment|'# Copyright (c) 2008-2010 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nDeprecation framework for Twisted.\n\nTo mark a method or function as being deprecated do this::\n\n    def badAPI(self, first, second):\n        \'\'\'\n        Docstring for badAPI.\n        \'\'\'\n        ...\n    badAPI = deprecate(Version("Twisted", 8, 0, 0))(badAPI)\n\nThe newly-decorated badAPI will issue a warning when called. It will also have\na deprecation notice appended to its docstring.\n\nTo mark module-level attributes as being deprecated you can use::\n\n    badAttribute = "someValue"\n\n    ...\n\n    deprecatedModuleAttribute(\n        Version("Twisted", 8, 0, 0),\n        "Use goodAttribute instead.",\n        "your.full.module.name",\n        "badAttribute")\n\nThe deprecated attributes will issue a warning whenever they are accessed. If\nthe attributes being deprecated are in the same module as the\nL{deprecatedModuleAttribute} call is being made from, the C{__name__} global\ncan be used as the C{moduleName} parameter.\n\nSee also L{Version}.\n\n@type DEPRECATION_WARNING_FORMAT: C{str}\n@var DEPRECATION_WARNING_FORMAT: The default deprecation warning string format\n    to use when one is not provided by the user.\n"""'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|__all__
name|'__all__'
op|'='
op|'['
nl|'\n'
string|"'deprecated'"
op|','
nl|'\n'
string|"'getDeprecationWarningString'"
op|','
nl|'\n'
string|"'getWarningMethod'"
op|','
nl|'\n'
string|"'setWarningMethod'"
op|','
nl|'\n'
string|"'deprecatedModuleAttribute'"
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
name|'import'
name|'sys'
op|','
name|'inspect'
newline|'\n'
name|'from'
name|'warnings'
name|'import'
name|'warn'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'versions'
name|'import'
name|'getVersionString'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
op|'.'
name|'util'
name|'import'
name|'mergeFunctionMetadata'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|variable|DEPRECATION_WARNING_FORMAT
name|'DEPRECATION_WARNING_FORMAT'
op|'='
string|"'%(fqpn)s was deprecated in %(version)s'"
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# Notionally, part of twisted.python.reflect, but defining it there causes a'
nl|'\n'
comment|'# cyclic dependency between this module and that module.  Define it here,'
nl|'\n'
comment|'# instead, and let reflect import it to re-expose to the public.'
nl|'\n'
DECL|function|_fullyQualifiedName
name|'def'
name|'_fullyQualifiedName'
op|'('
name|'obj'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Return the fully qualified name of a module, class, method or function.\n    Classes and functions need to be module level ones to be correctly\n    qualified.\n\n    @rtype: C{str}.\n    """'
newline|'\n'
name|'name'
op|'='
name|'obj'
op|'.'
name|'__name__'
newline|'\n'
name|'if'
name|'inspect'
op|'.'
name|'isclass'
op|'('
name|'obj'
op|')'
name|'or'
name|'inspect'
op|'.'
name|'isfunction'
op|'('
name|'obj'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'moduleName'
op|'='
name|'obj'
op|'.'
name|'__module__'
newline|'\n'
name|'return'
string|'"%s.%s"'
op|'%'
op|'('
name|'moduleName'
op|','
name|'name'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'inspect'
op|'.'
name|'ismethod'
op|'('
name|'obj'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'className'
op|'='
name|'_fullyQualifiedName'
op|'('
name|'obj'
op|'.'
name|'im_class'
op|')'
newline|'\n'
name|'return'
string|'"%s.%s"'
op|'%'
op|'('
name|'className'
op|','
name|'name'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'name'
newline|'\n'
comment|'# Try to keep it looking like something in twisted.python.reflect.'
nl|'\n'
dedent|''
name|'_fullyQualifiedName'
op|'.'
name|'__module__'
op|'='
string|"'twisted.python.reflect'"
newline|'\n'
name|'_fullyQualifiedName'
op|'.'
name|'__name__'
op|'='
string|"'fullyQualifiedName'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|getWarningMethod
name|'def'
name|'getWarningMethod'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Return the warning method currently used to record deprecation warnings.\n    """'
newline|'\n'
name|'return'
name|'warn'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|setWarningMethod
dedent|''
name|'def'
name|'setWarningMethod'
op|'('
name|'newMethod'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Set the warning method to use to record deprecation warnings.\n\n    The callable should take message, category and stacklevel. The return\n    value is ignored.\n    """'
newline|'\n'
name|'global'
name|'warn'
newline|'\n'
name|'warn'
op|'='
name|'newMethod'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|_getDeprecationDocstring
dedent|''
name|'def'
name|'_getDeprecationDocstring'
op|'('
name|'version'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
string|'"Deprecated in %s."'
op|'%'
name|'getVersionString'
op|'('
name|'version'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|_getDeprecationWarningString
dedent|''
name|'def'
name|'_getDeprecationWarningString'
op|'('
name|'fqpn'
op|','
name|'version'
op|','
name|'format'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Return a string indicating that the Python name was deprecated in the given\n    version.\n\n    @type fqpn: C{str}\n    @param fqpn: Fully qualified Python name of the thing being deprecated\n\n    @type version: L{twisted.python.versions.Version}\n    @param version: Version that C{fqpn} was deprecated in\n\n    @type format: C{str}\n    @param format: A user-provided format to interpolate warning values into,\n        or L{DEPRECATION_WARNING_FORMAT} if C{None} is given\n\n    @rtype: C{str}\n    @return: A textual description of the deprecation\n    """'
newline|'\n'
name|'if'
name|'format'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'format'
op|'='
name|'DEPRECATION_WARNING_FORMAT'
newline|'\n'
dedent|''
name|'return'
name|'format'
op|'%'
op|'{'
nl|'\n'
string|"'fqpn'"
op|':'
name|'fqpn'
op|','
nl|'\n'
string|"'version'"
op|':'
name|'getVersionString'
op|'('
name|'version'
op|')'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|getDeprecationWarningString
dedent|''
name|'def'
name|'getDeprecationWarningString'
op|'('
name|'callableThing'
op|','
name|'version'
op|','
name|'format'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Return a string indicating that the callable was deprecated in the given\n    version.\n\n    @type callableThing: C{callable}\n    @param callableThing: Callable object to be deprecated\n\n    @type version: L{twisted.python.versions.Version}\n    @param version: Version that C{fqpn} was deprecated in\n\n    @type format: C{str}\n    @param format: A user-provided format to interpolate warning values into,\n        or L{DEPRECATION_WARNING_FORMAT} if C{None} is given\n\n    @rtype: C{str}\n    @return: A textual description of the deprecation\n    """'
newline|'\n'
name|'return'
name|'_getDeprecationWarningString'
op|'('
nl|'\n'
name|'_fullyQualifiedName'
op|'('
name|'callableThing'
op|')'
op|','
name|'version'
op|','
name|'format'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|deprecated
dedent|''
name|'def'
name|'deprecated'
op|'('
name|'version'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Return a decorator that marks callables as deprecated.\n\n    @type version: L{twisted.python.versions.Version}\n    @param version: The version in which the callable will be marked as\n        having been deprecated.  The decorated function will be annotated\n        with this version, having it set as its C{deprecatedVersion}\n        attribute.\n    """'
newline|'\n'
DECL|function|deprecationDecorator
name|'def'
name|'deprecationDecorator'
op|'('
name|'function'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Decorator that marks C{function} as deprecated.\n        """'
newline|'\n'
name|'warningString'
op|'='
name|'getDeprecationWarningString'
op|'('
name|'function'
op|','
name|'version'
op|')'
newline|'\n'
nl|'\n'
DECL|function|deprecatedFunction
name|'def'
name|'deprecatedFunction'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'warn'
op|'('
nl|'\n'
name|'warningString'
op|','
nl|'\n'
name|'DeprecationWarning'
op|','
nl|'\n'
name|'stacklevel'
op|'='
number|'2'
op|')'
newline|'\n'
name|'return'
name|'function'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'deprecatedFunction'
op|'='
name|'mergeFunctionMetadata'
op|'('
nl|'\n'
name|'function'
op|','
name|'deprecatedFunction'
op|')'
newline|'\n'
name|'_appendToDocstring'
op|'('
name|'deprecatedFunction'
op|','
nl|'\n'
name|'_getDeprecationDocstring'
op|'('
name|'version'
op|')'
op|')'
newline|'\n'
name|'deprecatedFunction'
op|'.'
name|'deprecatedVersion'
op|'='
name|'version'
newline|'\n'
name|'return'
name|'deprecatedFunction'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'deprecationDecorator'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|_appendToDocstring
dedent|''
name|'def'
name|'_appendToDocstring'
op|'('
name|'thingWithDoc'
op|','
name|'textToAppend'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Append the given text to the docstring of C{thingWithDoc}.\n\n    If C{thingWithDoc} has no docstring, then the text just replaces the\n    docstring. If it has a single-line docstring then it appends a blank line\n    and the message text. If it has a multi-line docstring, then in appends a\n    blank line a the message text, and also does the indentation correctly.\n    """'
newline|'\n'
name|'if'
name|'thingWithDoc'
op|'.'
name|'__doc__'
op|':'
newline|'\n'
indent|'        '
name|'docstringLines'
op|'='
name|'thingWithDoc'
op|'.'
name|'__doc__'
op|'.'
name|'splitlines'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'docstringLines'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'docstringLines'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'docstringLines'
op|'.'
name|'append'
op|'('
name|'textToAppend'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'len'
op|'('
name|'docstringLines'
op|')'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'        '
name|'docstringLines'
op|'.'
name|'extend'
op|'('
op|'['
string|"''"
op|','
name|'textToAppend'
op|','
string|"''"
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'spaces'
op|'='
name|'docstringLines'
op|'.'
name|'pop'
op|'('
op|')'
newline|'\n'
name|'docstringLines'
op|'.'
name|'extend'
op|'('
op|'['
string|"''"
op|','
nl|'\n'
name|'spaces'
op|'+'
name|'textToAppend'
op|','
nl|'\n'
name|'spaces'
op|']'
op|')'
newline|'\n'
dedent|''
name|'thingWithDoc'
op|'.'
name|'__doc__'
op|'='
string|"'\\n'"
op|'.'
name|'join'
op|'('
name|'docstringLines'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|_ModuleProxy
dedent|''
name|'class'
name|'_ModuleProxy'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Python module wrapper to hook module-level attribute access.\n\n    Access to deprecated attributes first checks L{_deprecatedAttributes}, if\n    the attribute does not appear there then access falls through to L{_module},\n    the wrapped module object.\n\n    @type _module: C{module}\n    @ivar _module: Module on which to hook attribute access.\n\n    @type _deprecatedAttributes: C{dict} mapping C{str} to\n        L{_DeprecatedAttribute}\n    @ivar _deprecatedAttributes: Mapping of attribute names to objects that\n        retrieve the module attribute\'s original value.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'module'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'object'
op|'.'
name|'__setattr__'
op|'('
name|'self'
op|','
string|"'_module'"
op|','
name|'module'
op|')'
newline|'\n'
name|'object'
op|'.'
name|'__setattr__'
op|'('
name|'self'
op|','
string|"'_deprecatedAttributes'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get a string containing the type of the module proxy and a\n        representation of the wrapped module object.\n        """'
newline|'\n'
name|'_module'
op|'='
name|'object'
op|'.'
name|'__getattribute__'
op|'('
name|'self'
op|','
string|"'_module'"
op|')'
newline|'\n'
name|'return'
string|"'<%s module=%r>'"
op|'%'
op|'('
nl|'\n'
name|'type'
op|'('
name|'self'
op|')'
op|'.'
name|'__name__'
op|','
nl|'\n'
name|'_module'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|__setattr__
dedent|''
name|'def'
name|'__setattr__'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Set an attribute on the wrapped module object.\n        """'
newline|'\n'
name|'_module'
op|'='
name|'object'
op|'.'
name|'__getattribute__'
op|'('
name|'self'
op|','
string|"'_module'"
op|')'
newline|'\n'
name|'setattr'
op|'('
name|'_module'
op|','
name|'name'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|__getattribute__
dedent|''
name|'def'
name|'__getattribute__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get an attribute on the wrapped module object.\n\n        If the specified name has been deprecated then a warning is issued.\n        """'
newline|'\n'
name|'_module'
op|'='
name|'object'
op|'.'
name|'__getattribute__'
op|'('
name|'self'
op|','
string|"'_module'"
op|')'
newline|'\n'
name|'_deprecatedAttributes'
op|'='
name|'object'
op|'.'
name|'__getattribute__'
op|'('
nl|'\n'
name|'self'
op|','
string|"'_deprecatedAttributes'"
op|')'
newline|'\n'
nl|'\n'
name|'getter'
op|'='
name|'_deprecatedAttributes'
op|'.'
name|'get'
op|'('
name|'name'
op|')'
newline|'\n'
name|'if'
name|'getter'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'value'
op|'='
name|'getter'
op|'.'
name|'get'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'value'
op|'='
name|'getattr'
op|'('
name|'_module'
op|','
name|'name'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'value'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|_DeprecatedAttribute
dedent|''
dedent|''
name|'class'
name|'_DeprecatedAttribute'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Wrapper for deprecated attributes.\n\n    This is intended to be used by L{_ModuleProxy}. Calling\n    L{_DeprecatedAttribute.get} will issue a warning and retrieve the\n    underlying attribute\'s value.\n\n    @type module: C{module}\n    @ivar module: The original module instance containing this attribute\n\n    @type fqpn: C{str}\n    @ivar fqpn: Fully qualified Python name for the deprecated attribute\n\n    @type version: L{twisted.python.versions.Version}\n    @ivar version: Version that the attribute was deprecated in\n\n    @type message: C{str}\n    @ivar message: Deprecation message\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'module'
op|','
name|'name'
op|','
name|'version'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Initialise a deprecated name wrapper.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'module'
op|'='
name|'module'
newline|'\n'
name|'self'
op|'.'
name|'__name__'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'fqpn'
op|'='
name|'module'
op|'.'
name|'__name__'
op|'+'
string|"'.'"
op|'+'
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'version'
op|'='
name|'version'
newline|'\n'
name|'self'
op|'.'
name|'message'
op|'='
name|'message'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|get
dedent|''
name|'def'
name|'get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get the underlying attribute value and issue a deprecation warning.\n        """'
newline|'\n'
name|'message'
op|'='
name|'_getDeprecationWarningString'
op|'('
name|'self'
op|'.'
name|'fqpn'
op|','
name|'self'
op|'.'
name|'version'
op|','
nl|'\n'
name|'DEPRECATION_WARNING_FORMAT'
op|'+'
string|"': '"
op|'+'
name|'self'
op|'.'
name|'message'
op|')'
newline|'\n'
name|'warn'
op|'('
name|'message'
op|','
name|'DeprecationWarning'
op|','
name|'stacklevel'
op|'='
number|'3'
op|')'
newline|'\n'
name|'return'
name|'getattr'
op|'('
name|'self'
op|'.'
name|'module'
op|','
name|'self'
op|'.'
name|'__name__'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|_deprecateAttribute
dedent|''
dedent|''
name|'def'
name|'_deprecateAttribute'
op|'('
name|'proxy'
op|','
name|'name'
op|','
name|'version'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Mark a module-level attribute as being deprecated.\n\n    @type proxy: L{_ModuleProxy}\n    @param proxy: The module proxy instance proxying the deprecated attributes\n\n    @type name: C{str}\n    @param name: Attribute name\n\n    @type version: L{twisted.python.versions.Version}\n    @param version: Version that the attribute was deprecated in\n\n    @type message: C{str}\n    @param message: Deprecation message\n    """'
newline|'\n'
name|'_module'
op|'='
name|'object'
op|'.'
name|'__getattribute__'
op|'('
name|'proxy'
op|','
string|"'_module'"
op|')'
newline|'\n'
name|'attr'
op|'='
name|'_DeprecatedAttribute'
op|'('
name|'_module'
op|','
name|'name'
op|','
name|'version'
op|','
name|'message'
op|')'
newline|'\n'
comment|"# Add a deprecated attribute marker for this module's attribute. When this"
nl|'\n'
comment|'# attribute is accessed via _ModuleProxy a warning is emitted.'
nl|'\n'
name|'_deprecatedAttributes'
op|'='
name|'object'
op|'.'
name|'__getattribute__'
op|'('
nl|'\n'
name|'proxy'
op|','
string|"'_deprecatedAttributes'"
op|')'
newline|'\n'
name|'_deprecatedAttributes'
op|'['
name|'name'
op|']'
op|'='
name|'attr'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|function|deprecatedModuleAttribute
dedent|''
name|'def'
name|'deprecatedModuleAttribute'
op|'('
name|'version'
op|','
name|'message'
op|','
name|'moduleName'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Declare a module-level attribute as being deprecated.\n\n    @type version: L{twisted.python.versions.Version}\n    @param version: Version that the attribute was deprecated in\n\n    @type message: C{str}\n    @param message: Deprecation message\n\n    @type moduleName: C{str}\n    @param moduleName: Fully-qualified Python name of the module containing\n        the deprecated attribute; if called from the same module as the\n        attributes are being deprecated in, using the C{__name__} global can\n        be helpful\n\n    @type name: C{str}\n    @param name: Attribute name to deprecate\n    """'
newline|'\n'
name|'module'
op|'='
name|'sys'
op|'.'
name|'modules'
op|'['
name|'moduleName'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'module'
op|','
name|'_ModuleProxy'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'module'
op|'='
name|'_ModuleProxy'
op|'('
name|'module'
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'modules'
op|'['
name|'moduleName'
op|']'
op|'='
name|'module'
newline|'\n'
nl|'\n'
dedent|''
name|'_deprecateAttribute'
op|'('
name|'module'
op|','
name|'name'
op|','
name|'version'
op|','
name|'message'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
