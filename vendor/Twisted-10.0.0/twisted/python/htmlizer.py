begin_unit
comment|'# -*- test-case-name: twisted.python.test.test_htmlizer -*-'
nl|'\n'
comment|'# Copyright (c) 2001-2008 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nHTML rendering of Python source.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'tokenize'
op|','
name|'cgi'
op|','
name|'keyword'
newline|'\n'
name|'import'
name|'reflect'
newline|'\n'
nl|'\n'
DECL|class|TokenPrinter
name|'class'
name|'TokenPrinter'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'currentCol'
op|','
name|'currentLine'
op|'='
number|'0'
op|','
number|'1'
newline|'\n'
name|'lastIdentifier'
op|'='
name|'parameters'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'writer'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'writer'
op|'='
name|'writer'
newline|'\n'
nl|'\n'
DECL|member|printtoken
dedent|''
name|'def'
name|'printtoken'
op|'('
name|'self'
op|','
name|'type'
op|','
name|'token'
op|','
op|'('
name|'srow'
op|','
name|'scol'
op|')'
op|','
op|'('
name|'erow'
op|','
name|'ecol'
op|')'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
comment|'#print "printtoken(%r,%r,%r,(%r,%r),(%r,%r),%r), row=%r,col=%r" % ('
nl|'\n'
comment|'#    self, type, token, srow,scol, erow,ecol, line,'
nl|'\n'
comment|'#    self.currentLine, self.currentCol)'
nl|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'currentLine'
op|'<'
name|'srow'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'writer'
op|'('
string|"'\\n'"
op|'*'
op|'('
name|'srow'
op|'-'
name|'self'
op|'.'
name|'currentLine'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'currentLine'
op|','
name|'self'
op|'.'
name|'currentCol'
op|'='
name|'srow'
op|','
number|'0'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'writer'
op|'('
string|"' '"
op|'*'
op|'('
name|'scol'
op|'-'
name|'self'
op|'.'
name|'currentCol'
op|')'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'lastIdentifier'
op|':'
newline|'\n'
indent|'            '
name|'type'
op|'='
string|'"identifier"'
newline|'\n'
name|'self'
op|'.'
name|'parameters'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'elif'
name|'type'
op|'=='
name|'tokenize'
op|'.'
name|'NAME'
op|':'
newline|'\n'
indent|'             '
name|'if'
name|'keyword'
op|'.'
name|'iskeyword'
op|'('
name|'token'
op|')'
op|':'
newline|'\n'
indent|'                 '
name|'type'
op|'='
string|"'keyword'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                 '
name|'if'
name|'self'
op|'.'
name|'parameters'
op|':'
newline|'\n'
indent|'                     '
name|'type'
op|'='
string|"'parameter'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                     '
name|'type'
op|'='
string|"'variable'"
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'type'
op|'='
name|'tokenize'
op|'.'
name|'tok_name'
op|'.'
name|'get'
op|'('
name|'type'
op|')'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'writer'
op|'('
name|'token'
op|','
name|'type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'currentCol'
op|'='
name|'ecol'
newline|'\n'
name|'self'
op|'.'
name|'currentLine'
op|'+='
name|'token'
op|'.'
name|'count'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'currentLine'
op|'!='
name|'erow'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'currentCol'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'lastIdentifier'
op|'='
name|'token'
name|'in'
op|'('
string|"'def'"
op|','
string|"'class'"
op|')'
newline|'\n'
name|'if'
name|'token'
op|'=='
string|"':'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'parameters'
op|'='
number|'0'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HTMLWriter
dedent|''
dedent|''
dedent|''
name|'class'
name|'HTMLWriter'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|noSpan
indent|'    '
name|'noSpan'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'writer'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'writer'
op|'='
name|'writer'
newline|'\n'
name|'noSpan'
op|'='
op|'['
op|']'
newline|'\n'
name|'reflect'
op|'.'
name|'accumulateClassList'
op|'('
name|'self'
op|'.'
name|'__class__'
op|','
string|'"noSpan"'
op|','
name|'noSpan'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'noSpan'
op|'='
name|'noSpan'
newline|'\n'
nl|'\n'
DECL|member|write
dedent|''
name|'def'
name|'write'
op|'('
name|'self'
op|','
name|'token'
op|','
name|'type'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'token'
op|'='
name|'cgi'
op|'.'
name|'escape'
op|'('
name|'token'
op|')'
newline|'\n'
name|'if'
op|'('
name|'type'
name|'is'
name|'None'
op|')'
name|'or'
op|'('
name|'type'
name|'in'
name|'self'
op|'.'
name|'noSpan'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'writer'
op|'('
name|'token'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'writer'
op|'('
string|'\'<span class="py-src-%s">%s</span>\''
op|'%'
nl|'\n'
op|'('
name|'type'
op|','
name|'token'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SmallerHTMLWriter
dedent|''
dedent|''
dedent|''
name|'class'
name|'SmallerHTMLWriter'
op|'('
name|'HTMLWriter'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""HTMLWriter that doesn\'t generate spans for some junk.\n\n    Results in much smaller HTML output.\n    """'
newline|'\n'
DECL|variable|noSpan
name|'noSpan'
op|'='
op|'['
string|'"endmarker"'
op|','
string|'"indent"'
op|','
string|'"dedent"'
op|','
string|'"op"'
op|','
string|'"newline"'
op|','
string|'"nl"'
op|']'
newline|'\n'
nl|'\n'
DECL|function|filter
dedent|''
name|'def'
name|'filter'
op|'('
name|'inp'
op|','
name|'out'
op|','
name|'writer'
op|'='
name|'HTMLWriter'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'out'
op|'.'
name|'write'
op|'('
string|"'<pre>'"
op|')'
newline|'\n'
name|'printer'
op|'='
name|'TokenPrinter'
op|'('
name|'writer'
op|'('
name|'out'
op|'.'
name|'write'
op|')'
op|'.'
name|'write'
op|')'
op|'.'
name|'printtoken'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'tokenize'
op|'.'
name|'tokenize'
op|'('
name|'inp'
op|'.'
name|'readline'
op|','
name|'printer'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'tokenize'
op|'.'
name|'TokenError'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
dedent|''
name|'out'
op|'.'
name|'write'
op|'('
string|"'</pre>\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|main
dedent|''
name|'def'
name|'main'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'sys'
newline|'\n'
name|'filter'
op|'('
name|'open'
op|'('
name|'sys'
op|'.'
name|'argv'
op|'['
number|'1'
op|']'
op|')'
op|','
name|'sys'
op|'.'
name|'stdout'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'   '
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
