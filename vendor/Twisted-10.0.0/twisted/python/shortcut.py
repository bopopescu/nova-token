begin_unit
comment|'# Copyright (c) 2001-2004 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""Creation of  Windows shortcuts.\n\nRequires win32all.\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'win32com'
op|'.'
name|'shell'
name|'import'
name|'shell'
newline|'\n'
name|'import'
name|'pythoncom'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|open
name|'def'
name|'open'
op|'('
name|'filename'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Open an existing shortcut for reading.\n\n    @return: The shortcut object\n    @rtype: Shortcut\n    """'
newline|'\n'
name|'sc'
op|'='
name|'Shortcut'
op|'('
op|')'
newline|'\n'
name|'sc'
op|'.'
name|'load'
op|'('
name|'filename'
op|')'
newline|'\n'
name|'return'
name|'sc'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Shortcut
dedent|''
name|'class'
name|'Shortcut'
op|':'
newline|'\n'
indent|'    '
string|'"""A shortcut on Win32.\n    >>> sc=Shortcut(path, arguments, description, workingdir, iconpath, iconidx)\n    @param path: Location of the target\n    @param arguments: If path points to an executable, optional arguments to\n                      pass\n    @param description: Human-readable decription of target\n    @param workingdir: Directory from which target is launched\n    @param iconpath: Filename that contains an icon for the shortcut\n    @param iconidx: If iconpath is set, optional index of the icon desired\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
nl|'\n'
name|'path'
op|'='
name|'None'
op|','
nl|'\n'
name|'arguments'
op|'='
name|'None'
op|','
nl|'\n'
name|'description'
op|'='
name|'None'
op|','
nl|'\n'
name|'workingdir'
op|'='
name|'None'
op|','
nl|'\n'
name|'iconpath'
op|'='
name|'None'
op|','
nl|'\n'
name|'iconidx'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_base'
op|'='
name|'pythoncom'
op|'.'
name|'CoCreateInstance'
op|'('
nl|'\n'
name|'shell'
op|'.'
name|'CLSID_ShellLink'
op|','
name|'None'
op|','
nl|'\n'
name|'pythoncom'
op|'.'
name|'CLSCTX_INPROC_SERVER'
op|','
name|'shell'
op|'.'
name|'IID_IShellLink'
nl|'\n'
op|')'
newline|'\n'
name|'data'
op|'='
name|'map'
op|'('
name|'None'
op|','
nl|'\n'
op|'['
string|'\'"%s"\''
op|'%'
name|'os'
op|'.'
name|'path'
op|'.'
name|'abspath'
op|'('
name|'path'
op|')'
op|','
name|'arguments'
op|','
name|'description'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'abspath'
op|'('
name|'workingdir'
op|')'
op|','
name|'os'
op|'.'
name|'path'
op|'.'
name|'abspath'
op|'('
name|'iconpath'
op|')'
op|']'
op|','
nl|'\n'
op|'('
string|'"SetPath"'
op|','
string|'"SetArguments"'
op|','
string|'"SetDescription"'
op|','
nl|'\n'
string|'"SetWorkingDirectory"'
op|')'
op|')'
newline|'\n'
name|'for'
name|'value'
op|','
name|'function'
name|'in'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'value'
name|'and'
name|'function'
op|':'
newline|'\n'
comment|'# call function on each non-null value'
nl|'\n'
indent|'                '
name|'getattr'
op|'('
name|'self'
op|','
name|'function'
op|')'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'iconpath'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'SetIconLocation'
op|'('
name|'iconpath'
op|','
name|'iconidx'
op|')'
newline|'\n'
nl|'\n'
DECL|member|load
dedent|''
dedent|''
name|'def'
name|'load'
op|'('
name|'self'
op|','
name|'filename'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Read a shortcut file from disk."""'
newline|'\n'
name|'self'
op|'.'
name|'_base'
op|'.'
name|'QueryInterface'
op|'('
name|'pythoncom'
op|'.'
name|'IID_IPersistFile'
op|')'
op|'.'
name|'Load'
op|'('
name|'filename'
op|')'
newline|'\n'
nl|'\n'
DECL|member|save
dedent|''
name|'def'
name|'save'
op|'('
name|'self'
op|','
name|'filename'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Write the shortcut to disk.\n\n        The file should be named something.lnk.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_base'
op|'.'
name|'QueryInterface'
op|'('
name|'pythoncom'
op|'.'
name|'IID_IPersistFile'
op|')'
op|'.'
name|'Save'
op|'('
name|'filename'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__getattr__
dedent|''
name|'def'
name|'__getattr__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'name'
op|'!='
string|'"_base"'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'getattr'
op|'('
name|'self'
op|'.'
name|'_base'
op|','
name|'name'
op|')'
newline|'\n'
dedent|''
name|'raise'
name|'AttributeError'
op|','
string|'"%s instance has no attribute %s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'__class__'
op|'.'
name|'__name__'
op|','
name|'name'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
