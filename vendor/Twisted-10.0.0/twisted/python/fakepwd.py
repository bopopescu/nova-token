begin_unit
comment|'# -*- test-case-name: twisted.python.test.test_fakepwd -*-'
nl|'\n'
comment|'# Copyright (c) 2009 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nL{twisted.python.fakepwd} provides a fake implementation of the L{pwd} API.\n"""'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|__all__
name|'__all__'
op|'='
op|'['
string|"'UserDatabase'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_UserRecord
name|'class'
name|'_UserRecord'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    L{_UserRecord} holds the user data for a single user in L{UserDatabase}.\n    It corresponds to L{pwd.struct_passwd}.  See that class for attribute\n    documentation.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'password'
op|','
name|'uid'
op|','
name|'gid'
op|','
name|'gecos'
op|','
name|'home'
op|','
name|'shell'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'pw_name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'pw_passwd'
op|'='
name|'password'
newline|'\n'
name|'self'
op|'.'
name|'pw_uid'
op|'='
name|'uid'
newline|'\n'
name|'self'
op|'.'
name|'pw_gid'
op|'='
name|'gid'
newline|'\n'
name|'self'
op|'.'
name|'pw_gecos'
op|'='
name|'gecos'
newline|'\n'
name|'self'
op|'.'
name|'pw_dir'
op|'='
name|'home'
newline|'\n'
name|'self'
op|'.'
name|'pw_shell'
op|'='
name|'shell'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|__len__
dedent|''
name|'def'
name|'__len__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
number|'7'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|__getitem__
dedent|''
name|'def'
name|'__getitem__'
op|'('
name|'self'
op|','
name|'index'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'pw_name'
op|','
name|'self'
op|'.'
name|'pw_passwd'
op|','
name|'self'
op|'.'
name|'pw_uid'
op|','
nl|'\n'
name|'self'
op|'.'
name|'pw_gid'
op|','
name|'self'
op|'.'
name|'pw_gecos'
op|','
name|'self'
op|'.'
name|'pw_dir'
op|','
name|'self'
op|'.'
name|'pw_shell'
op|')'
op|'['
name|'index'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|UserDatabase
dedent|''
dedent|''
name|'class'
name|'UserDatabase'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    L{UserDatabase} holds a traditional POSIX user data in memory and makes it\n    available via the same API as L{pwd}.\n\n    @ivar _users: A C{list} of L{_UserRecord} instances holding all user data\n        added to this database.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_users'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|addUser
dedent|''
name|'def'
name|'addUser'
op|'('
name|'self'
op|','
name|'username'
op|','
name|'password'
op|','
name|'uid'
op|','
name|'gid'
op|','
name|'gecos'
op|','
name|'home'
op|','
name|'shell'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Add a new user record to this database.\n\n        @param username: The value for the C{pw_name} field of the user\n            record to add.\n        @type username: C{str}\n\n        @param password: The value for the C{pw_passwd} field of the user\n            record to add.\n        @type password: C{str}\n\n        @param uid: The value for the C{pw_uid} field of the user record to\n            add.\n        @type uid: C{int}\n\n        @param gid: The value for the C{pw_gid} field of the user record to\n            add.\n        @type gid: C{int}\n\n        @param gecos: The value for the C{pw_gecos} field of the user record\n            to add.\n        @type gecos: C{str}\n\n        @param home: The value for the C{pw_dir} field of the user record to\n            add.\n        @type home: C{str}\n\n        @param shell: The value for the C{pw_shell} field of the user record to\n            add.\n        @type shell: C{str}\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_users'
op|'.'
name|'append'
op|'('
name|'_UserRecord'
op|'('
nl|'\n'
name|'username'
op|','
name|'password'
op|','
name|'uid'
op|','
name|'gid'
op|','
name|'gecos'
op|','
name|'home'
op|','
name|'shell'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getpwuid
dedent|''
name|'def'
name|'getpwuid'
op|'('
name|'self'
op|','
name|'uid'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Return the user record corresponding to the given uid.\n        """'
newline|'\n'
name|'for'
name|'entry'
name|'in'
name|'self'
op|'.'
name|'_users'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'entry'
op|'.'
name|'pw_uid'
op|'=='
name|'uid'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'entry'
newline|'\n'
dedent|''
dedent|''
name|'raise'
name|'KeyError'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getpwnam
dedent|''
name|'def'
name|'getpwnam'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Return the user record corresponding to the given username.\n        """'
newline|'\n'
name|'for'
name|'entry'
name|'in'
name|'self'
op|'.'
name|'_users'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'entry'
op|'.'
name|'pw_name'
op|'=='
name|'name'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'entry'
newline|'\n'
dedent|''
dedent|''
name|'raise'
name|'KeyError'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|getpwall
dedent|''
name|'def'
name|'getpwall'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Return a list of all user records.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_users'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
