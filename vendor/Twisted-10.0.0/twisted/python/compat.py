begin_unit
comment|'# -*- test-case-name: twisted.test.test_compat -*-'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Copyright (c) 2001-2007 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""\nCompatibility module to provide backwards compatibility for useful Python\nfeatures.\n\nThis is mainly for use of internal Twisted code. We encourage you to use\nthe latest version of Python directly from your code, if possible.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'sys'
op|','
name|'string'
op|','
name|'socket'
op|','
name|'struct'
newline|'\n'
nl|'\n'
DECL|function|inet_pton
name|'def'
name|'inet_pton'
op|'('
name|'af'
op|','
name|'addr'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'af'
op|'=='
name|'socket'
op|'.'
name|'AF_INET'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'socket'
op|'.'
name|'inet_aton'
op|'('
name|'addr'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'af'
op|'=='
name|'getattr'
op|'('
name|'socket'
op|','
string|"'AF_INET6'"
op|','
string|"'AF_INET6'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'addr'
name|'if'
name|'x'
name|'not'
name|'in'
name|'string'
op|'.'
name|'hexdigits'
op|'+'
string|"':.'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|'('
string|'"Illegal characters: %r"'
op|'%'
op|'('
string|"''"
op|'.'
name|'join'
op|'('
name|'x'
op|')'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'parts'
op|'='
name|'addr'
op|'.'
name|'split'
op|'('
string|"':'"
op|')'
newline|'\n'
name|'elided'
op|'='
name|'parts'
op|'.'
name|'count'
op|'('
string|"''"
op|')'
newline|'\n'
name|'ipv4Component'
op|'='
string|"'.'"
name|'in'
name|'parts'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'len'
op|'('
name|'parts'
op|')'
op|'>'
op|'('
number|'8'
op|'-'
name|'ipv4Component'
op|')'
name|'or'
name|'elided'
op|'>'
number|'3'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|'('
string|'"Syntactically invalid address"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'elided'
op|'=='
number|'3'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'\\x00'"
op|'*'
number|'16'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'elided'
op|':'
newline|'\n'
indent|'            '
name|'zeros'
op|'='
op|'['
string|"'0'"
op|']'
op|'*'
op|'('
number|'8'
op|'-'
name|'len'
op|'('
name|'parts'
op|')'
op|'-'
name|'ipv4Component'
op|'+'
name|'elided'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'addr'
op|'.'
name|'startswith'
op|'('
string|"'::'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'parts'
op|'['
op|':'
number|'2'
op|']'
op|'='
name|'zeros'
newline|'\n'
dedent|''
name|'elif'
name|'addr'
op|'.'
name|'endswith'
op|'('
string|"'::'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'parts'
op|'['
op|'-'
number|'2'
op|':'
op|']'
op|'='
name|'zeros'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'idx'
op|'='
name|'parts'
op|'.'
name|'index'
op|'('
string|"''"
op|')'
newline|'\n'
name|'parts'
op|'['
name|'idx'
op|':'
name|'idx'
op|'+'
number|'1'
op|']'
op|'='
name|'zeros'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'parts'
op|')'
op|'!='
number|'8'
op|'-'
name|'ipv4Component'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'ValueError'
op|'('
string|'"Syntactically invalid address"'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'len'
op|'('
name|'parts'
op|')'
op|'!='
op|'('
number|'8'
op|'-'
name|'ipv4Component'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'ValueError'
op|'('
string|'"Syntactically invalid address"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'ipv4Component'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'parts'
op|'['
op|'-'
number|'1'
op|']'
op|'.'
name|'count'
op|'('
string|"'.'"
op|')'
op|'!='
number|'3'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'ValueError'
op|'('
string|'"Syntactically invalid address"'
op|')'
newline|'\n'
dedent|''
name|'rawipv4'
op|'='
name|'socket'
op|'.'
name|'inet_aton'
op|'('
name|'parts'
op|'['
op|'-'
number|'1'
op|']'
op|')'
newline|'\n'
name|'unpackedipv4'
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'!HH'"
op|','
name|'rawipv4'
op|')'
newline|'\n'
name|'parts'
op|'['
op|'-'
number|'1'
op|':'
op|']'
op|'='
op|'['
name|'hex'
op|'('
name|'x'
op|')'
op|'['
number|'2'
op|':'
op|']'
name|'for'
name|'x'
name|'in'
name|'unpackedipv4'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'parts'
op|'='
op|'['
name|'int'
op|'('
name|'x'
op|','
number|'16'
op|')'
name|'for'
name|'x'
name|'in'
name|'parts'
op|']'
newline|'\n'
name|'return'
name|'struct'
op|'.'
name|'pack'
op|'('
string|"'!8H'"
op|','
op|'*'
name|'parts'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'socket'
op|'.'
name|'error'
op|'('
number|'97'
op|','
string|"'Address family not supported by protocol'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|inet_ntop
dedent|''
dedent|''
name|'def'
name|'inet_ntop'
op|'('
name|'af'
op|','
name|'addr'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'af'
op|'=='
name|'socket'
op|'.'
name|'AF_INET'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'socket'
op|'.'
name|'inet_ntoa'
op|'('
name|'addr'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'af'
op|'=='
name|'socket'
op|'.'
name|'AF_INET6'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'len'
op|'('
name|'addr'
op|')'
op|'!='
number|'16'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|'('
string|'"address length incorrect"'
op|')'
newline|'\n'
dedent|''
name|'parts'
op|'='
name|'struct'
op|'.'
name|'unpack'
op|'('
string|"'!8H'"
op|','
name|'addr'
op|')'
newline|'\n'
name|'curBase'
op|'='
name|'bestBase'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'8'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'parts'
op|'['
name|'i'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'curBase'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'curBase'
op|'='
name|'i'
newline|'\n'
name|'curLen'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'curLen'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'curBase'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'bestBase'
name|'is'
name|'None'
name|'or'
name|'curLen'
op|'>'
name|'bestLen'
op|':'
newline|'\n'
indent|'                        '
name|'bestBase'
op|'='
name|'curBase'
newline|'\n'
name|'bestLen'
op|'='
name|'curLen'
newline|'\n'
dedent|''
name|'curBase'
op|'='
name|'None'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'curBase'
name|'is'
name|'not'
name|'None'
name|'and'
op|'('
name|'bestBase'
name|'is'
name|'None'
name|'or'
name|'curLen'
op|'>'
name|'bestLen'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'bestBase'
op|'='
name|'curBase'
newline|'\n'
name|'bestLen'
op|'='
name|'curLen'
newline|'\n'
dedent|''
name|'parts'
op|'='
op|'['
name|'hex'
op|'('
name|'x'
op|')'
op|'['
number|'2'
op|':'
op|']'
name|'for'
name|'x'
name|'in'
name|'parts'
op|']'
newline|'\n'
name|'if'
name|'bestBase'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'parts'
op|'['
name|'bestBase'
op|':'
name|'bestBase'
op|'+'
name|'bestLen'
op|']'
op|'='
op|'['
string|"''"
op|']'
newline|'\n'
dedent|''
name|'if'
name|'parts'
op|'['
number|'0'
op|']'
op|'=='
string|"''"
op|':'
newline|'\n'
indent|'            '
name|'parts'
op|'.'
name|'insert'
op|'('
number|'0'
op|','
string|"''"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'parts'
op|'['
op|'-'
number|'1'
op|']'
op|'=='
string|"''"
op|':'
newline|'\n'
indent|'            '
name|'parts'
op|'.'
name|'insert'
op|'('
name|'len'
op|'('
name|'parts'
op|')'
op|'-'
number|'1'
op|','
string|"''"
op|')'
newline|'\n'
dedent|''
name|'return'
string|"':'"
op|'.'
name|'join'
op|'('
name|'parts'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'socket'
op|'.'
name|'error'
op|'('
number|'97'
op|','
string|"'Address family not supported by protocol'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'socket'
op|'.'
name|'inet_pton'
op|'('
name|'socket'
op|'.'
name|'AF_INET6'
op|','
string|'"::"'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'AttributeError'
op|','
name|'NameError'
op|','
name|'socket'
op|'.'
name|'error'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'socket'
op|'.'
name|'inet_pton'
op|'='
name|'inet_pton'
newline|'\n'
name|'socket'
op|'.'
name|'inet_ntop'
op|'='
name|'inet_ntop'
newline|'\n'
name|'socket'
op|'.'
name|'AF_INET6'
op|'='
string|"'AF_INET6'"
newline|'\n'
nl|'\n'
DECL|variable|adict
dedent|''
name|'adict'
op|'='
name|'dict'
newline|'\n'
nl|'\n'
comment|'# OpenSSL/__init__.py imports OpenSSL.tsafe.  OpenSSL/tsafe.py imports'
nl|'\n'
comment|'# threading.  threading imports thread.  All to make this stupid threadsafe'
nl|'\n'
comment|"# version of its Connection class.  We don't even care about threadsafe"
nl|'\n'
comment|'# Connections.  In the interest of not screwing over some crazy person'
nl|'\n'
comment|"# calling into OpenSSL from another thread and trying to use Twisted's SSL"
nl|'\n'
comment|"# support, we don't totally destroy OpenSSL.tsafe, but we will replace it"
nl|'\n'
comment|'# with our own version which imports threading as late as possible.'
nl|'\n'
nl|'\n'
DECL|class|tsafe
name|'class'
name|'tsafe'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|class|Connection
indent|'    '
name|'class'
name|'Connection'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        OpenSSL.tsafe.Connection, defined in such a way as to not blow.\n        """'
newline|'\n'
DECL|variable|__module__
name|'__module__'
op|'='
string|"'OpenSSL.tsafe'"
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'from'
name|'OpenSSL'
name|'import'
name|'SSL'
name|'as'
name|'_ssl'
newline|'\n'
name|'self'
op|'.'
name|'_ssl_conn'
op|'='
name|'apply'
op|'('
name|'_ssl'
op|'.'
name|'Connection'
op|','
name|'args'
op|')'
newline|'\n'
name|'from'
name|'threading'
name|'import'
name|'_RLock'
newline|'\n'
name|'self'
op|'.'
name|'_lock'
op|'='
name|'_RLock'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'f'
name|'in'
op|'('
string|"'get_context'"
op|','
string|"'pending'"
op|','
string|"'send'"
op|','
string|"'write'"
op|','
string|"'recv'"
op|','
nl|'\n'
string|"'read'"
op|','
string|"'renegotiate'"
op|','
string|"'bind'"
op|','
string|"'listen'"
op|','
string|"'connect'"
op|','
nl|'\n'
string|"'accept'"
op|','
string|"'setblocking'"
op|','
string|"'fileno'"
op|','
string|"'shutdown'"
op|','
nl|'\n'
string|"'close'"
op|','
string|"'get_cipher_list'"
op|','
string|"'getpeername'"
op|','
nl|'\n'
string|"'getsockname'"
op|','
string|"'getsockopt'"
op|','
string|"'setsockopt'"
op|','
nl|'\n'
string|"'makefile'"
op|','
string|"'get_app_data'"
op|','
string|"'set_app_data'"
op|','
nl|'\n'
string|"'state_string'"
op|','
string|"'sock_shutdown'"
op|','
nl|'\n'
string|"'get_peer_certificate'"
op|','
string|"'want_read'"
op|','
string|"'want_write'"
op|','
nl|'\n'
string|"'set_connect_state'"
op|','
string|"'set_accept_state'"
op|','
nl|'\n'
string|"'connect_ex'"
op|','
string|"'sendall'"
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'exec'
string|'"""def %s(self, *args):\n                self._lock.acquire()\n                try:\n                    return apply(self._ssl_conn.%s, args)\n                finally:\n                    self._lock.release()\\n"""'
op|'%'
op|'('
name|'f'
op|','
name|'f'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'sys'
op|'.'
name|'modules'
op|'['
string|"'OpenSSL.tsafe'"
op|']'
op|'='
name|'tsafe'
newline|'\n'
nl|'\n'
name|'import'
name|'operator'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'operator'
op|'.'
name|'attrgetter'
newline|'\n'
dedent|''
name|'except'
name|'AttributeError'
op|':'
newline|'\n'
DECL|class|attrgetter
indent|'    '
name|'class'
name|'attrgetter'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'        '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'obj'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'getattr'
op|'('
name|'obj'
op|','
name|'self'
op|'.'
name|'name'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'operator'
op|'.'
name|'attrgetter'
op|'='
name|'attrgetter'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
DECL|variable|set
indent|'    '
name|'set'
op|'='
name|'set'
newline|'\n'
dedent|''
name|'except'
name|'NameError'
op|':'
newline|'\n'
indent|'    '
name|'from'
name|'sets'
name|'import'
name|'Set'
name|'as'
name|'set'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
DECL|variable|frozenset
indent|'    '
name|'frozenset'
op|'='
name|'frozenset'
newline|'\n'
dedent|''
name|'except'
name|'NameError'
op|':'
newline|'\n'
indent|'    '
name|'from'
name|'sets'
name|'import'
name|'ImmutableSet'
name|'as'
name|'frozenset'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'from'
name|'functools'
name|'import'
name|'reduce'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
DECL|variable|reduce
indent|'    '
name|'reduce'
op|'='
name|'reduce'
newline|'\n'
dedent|''
endmarker|''
end_unit
