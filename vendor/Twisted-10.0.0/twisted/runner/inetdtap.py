begin_unit
comment|'# Copyright (c) 2001-2004 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
comment|'# '
nl|'\n'
nl|'\n'
string|'"""\nTwisted inetd TAP support\n\nMaintainer: Andrew Bennetts\n\nFuture Plans: more configurability.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
op|','
name|'pwd'
op|','
name|'grp'
op|','
name|'socket'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'runner'
name|'import'
name|'inetd'
op|','
name|'inetdconf'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
op|','
name|'usage'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'protocol'
name|'import'
name|'ServerFactory'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'application'
name|'import'
name|'internet'
op|','
name|'service'
name|'as'
name|'appservice'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'portmap'
newline|'\n'
DECL|variable|rpcOk
name|'rpcOk'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
DECL|variable|rpcOk
indent|'    '
name|'rpcOk'
op|'='
number|'0'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# Protocol map'
nl|'\n'
DECL|variable|protocolDict
dedent|''
name|'protocolDict'
op|'='
op|'{'
string|"'tcp'"
op|':'
name|'socket'
op|'.'
name|'IPPROTO_TCP'
op|','
string|"'udp'"
op|':'
name|'socket'
op|'.'
name|'IPPROTO_UDP'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Options
name|'class'
name|'Options'
op|'('
name|'usage'
op|'.'
name|'Options'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|optParameters
indent|'    '
name|'optParameters'
op|'='
op|'['
nl|'\n'
op|'['
string|"'rpc'"
op|','
string|"'r'"
op|','
string|"'/etc/rpc'"
op|','
string|"'RPC procedure table file'"
op|']'
op|','
nl|'\n'
op|'['
string|"'file'"
op|','
string|"'f'"
op|','
string|"'/etc/inetd.conf'"
op|','
string|"'Service configuration file'"
op|']'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|optFlags
name|'optFlags'
op|'='
op|'['
op|'['
string|"'nointernal'"
op|','
string|"'i'"
op|','
string|'"Don\'t run internal services"'
op|']'
op|']'
newline|'\n'
DECL|variable|zsh_actions
name|'zsh_actions'
op|'='
op|'{'
string|'"file"'
op|':'
string|'"_files -g \'*.conf\'"'
op|'}'
newline|'\n'
nl|'\n'
DECL|class|RPCServer
dedent|''
name|'class'
name|'RPCServer'
op|'('
name|'internet'
op|'.'
name|'TCPServer'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'rpcVersions'
op|','
name|'rpcConf'
op|','
name|'proto'
op|','
name|'service'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'internet'
op|'.'
name|'TCPServer'
op|'.'
name|'__init__'
op|'('
number|'0'
op|','
name|'ServerFactory'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'rpcConf'
op|'='
name|'rpcConf'
newline|'\n'
name|'self'
op|'.'
name|'proto'
op|'='
name|'proto'
newline|'\n'
name|'self'
op|'.'
name|'service'
op|'='
name|'service'
newline|'\n'
nl|'\n'
DECL|member|startService
dedent|''
name|'def'
name|'startService'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'internet'
op|'.'
name|'TCPServer'
op|'.'
name|'startService'
op|'('
name|'self'
op|')'
newline|'\n'
name|'import'
name|'portmap'
newline|'\n'
name|'portNo'
op|'='
name|'self'
op|'.'
name|'_port'
op|'.'
name|'getHost'
op|'('
op|')'
op|'['
number|'2'
op|']'
newline|'\n'
name|'service'
op|'='
name|'self'
op|'.'
name|'service'
newline|'\n'
name|'for'
name|'version'
name|'in'
name|'rpcVersions'
op|':'
newline|'\n'
indent|'            '
name|'portmap'
op|'.'
name|'set'
op|'('
name|'self'
op|'.'
name|'rpcConf'
op|'.'
name|'services'
op|'['
name|'name'
op|']'
op|','
name|'version'
op|','
name|'self'
op|'.'
name|'proto'
op|','
nl|'\n'
name|'portNo'
op|')'
newline|'\n'
name|'inetd'
op|'.'
name|'forkPassingFD'
op|'('
name|'service'
op|'.'
name|'program'
op|','
name|'service'
op|'.'
name|'programArgs'
op|','
nl|'\n'
name|'os'
op|'.'
name|'environ'
op|','
name|'service'
op|'.'
name|'user'
op|','
name|'service'
op|'.'
name|'group'
op|','
name|'p'
op|')'
newline|'\n'
nl|'\n'
DECL|function|makeService
dedent|''
dedent|''
dedent|''
name|'def'
name|'makeService'
op|'('
name|'config'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'s'
op|'='
name|'appservice'
op|'.'
name|'MultiService'
op|'('
op|')'
newline|'\n'
name|'conf'
op|'='
name|'inetdconf'
op|'.'
name|'InetdConf'
op|'('
op|')'
newline|'\n'
name|'conf'
op|'.'
name|'parseFile'
op|'('
name|'open'
op|'('
name|'config'
op|'['
string|"'file'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'rpcConf'
op|'='
name|'inetdconf'
op|'.'
name|'RPCServicesConf'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'rpcConf'
op|'.'
name|'parseFile'
op|'('
name|'open'
op|'('
name|'config'
op|'['
string|"'rpc'"
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
comment|"# We'll survive even if we can't read /etc/rpc"
nl|'\n'
indent|'        '
name|'log'
op|'.'
name|'deferr'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'service'
name|'in'
name|'conf'
op|'.'
name|'services'
op|':'
newline|'\n'
indent|'        '
name|'rpc'
op|'='
name|'service'
op|'.'
name|'protocol'
op|'.'
name|'startswith'
op|'('
string|"'rpc/'"
op|')'
newline|'\n'
name|'protocol'
op|'='
name|'service'
op|'.'
name|'protocol'
newline|'\n'
nl|'\n'
name|'if'
name|'rpc'
name|'and'
name|'not'
name|'rpcOk'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'Skipping rpc service due to lack of rpc support'"
op|')'
newline|'\n'
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'rpc'
op|':'
newline|'\n'
comment|'# RPC has extra options, so extract that'
nl|'\n'
indent|'            '
name|'protocol'
op|'='
name|'protocol'
op|'['
number|'4'
op|':'
op|']'
comment|"# trim 'rpc/'"
newline|'\n'
name|'if'
name|'not'
name|'protocolDict'
op|'.'
name|'has_key'
op|'('
name|'protocol'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'Bad protocol: '"
op|'+'
name|'protocol'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'name'
op|','
name|'rpcVersions'
op|'='
name|'service'
op|'.'
name|'name'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'Bad RPC service/version: '"
op|'+'
name|'service'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'rpcConf'
op|'.'
name|'services'
op|'.'
name|'has_key'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'Unknown RPC service: '"
op|'+'
name|'repr'
op|'('
name|'service'
op|'.'
name|'name'
op|')'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'if'
string|"'-'"
name|'in'
name|'rpcVersions'
op|':'
newline|'\n'
indent|'                    '
name|'start'
op|','
name|'end'
op|'='
name|'map'
op|'('
name|'int'
op|','
name|'rpcVersions'
op|'.'
name|'split'
op|'('
string|"'-'"
op|')'
op|')'
newline|'\n'
name|'rpcVersions'
op|'='
name|'range'
op|'('
name|'start'
op|','
name|'end'
op|'+'
number|'1'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'rpcVersions'
op|'='
op|'['
name|'int'
op|'('
name|'rpcVersions'
op|')'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'Bad RPC versions: '"
op|'+'
name|'str'
op|'('
name|'rpcVersions'
op|')'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
op|'('
name|'protocol'
op|','
name|'service'
op|'.'
name|'socketType'
op|')'
name|'not'
name|'in'
op|'['
op|'('
string|"'tcp'"
op|','
string|"'stream'"
op|')'
op|','
nl|'\n'
op|'('
string|"'udp'"
op|','
string|"'dgram'"
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'Skipping unsupported type/protocol: %s/%s'"
nl|'\n'
op|'%'
op|'('
name|'service'
op|'.'
name|'socketType'
op|','
name|'service'
op|'.'
name|'protocol'
op|')'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
nl|'\n'
comment|'# Convert the username into a uid (if necessary)'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'service'
op|'.'
name|'user'
op|'='
name|'int'
op|'('
name|'service'
op|'.'
name|'user'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'service'
op|'.'
name|'user'
op|'='
name|'pwd'
op|'.'
name|'getpwnam'
op|'('
name|'service'
op|'.'
name|'user'
op|')'
op|'['
number|'2'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'Unknown user: '"
op|'+'
name|'service'
op|'.'
name|'user'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
nl|'\n'
comment|'# Convert the group name into a gid (if necessary)'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'service'
op|'.'
name|'group'
name|'is'
name|'None'
op|':'
newline|'\n'
comment|"# If no group was specified, use the user's primary group"
nl|'\n'
indent|'            '
name|'service'
op|'.'
name|'group'
op|'='
name|'pwd'
op|'.'
name|'getpwuid'
op|'('
name|'service'
op|'.'
name|'user'
op|')'
op|'['
number|'3'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'service'
op|'.'
name|'group'
op|'='
name|'int'
op|'('
name|'service'
op|'.'
name|'group'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'service'
op|'.'
name|'group'
op|'='
name|'grp'
op|'.'
name|'getgrnam'
op|'('
name|'service'
op|'.'
name|'group'
op|')'
op|'['
number|'2'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'                    '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'Unknown group: '"
op|'+'
name|'service'
op|'.'
name|'group'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'service'
op|'.'
name|'program'
op|'=='
string|"'internal'"
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'config'
op|'['
string|"'nointernal'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
nl|'\n'
comment|'# Internal services can use a standard ServerFactory'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'inetd'
op|'.'
name|'internalProtocols'
op|'.'
name|'has_key'
op|'('
name|'service'
op|'.'
name|'name'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'.'
name|'msg'
op|'('
string|"'Unknown internal service: '"
op|'+'
name|'service'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'factory'
op|'='
name|'ServerFactory'
op|'('
op|')'
newline|'\n'
name|'factory'
op|'.'
name|'protocol'
op|'='
name|'inetd'
op|'.'
name|'internalProtocols'
op|'['
name|'service'
op|'.'
name|'name'
op|']'
newline|'\n'
dedent|''
name|'elif'
name|'rpc'
op|':'
newline|'\n'
indent|'            '
name|'i'
op|'='
name|'RPCServer'
op|'('
name|'rpcVersions'
op|','
name|'rpcConf'
op|','
name|'proto'
op|','
name|'service'
op|')'
newline|'\n'
name|'i'
op|'.'
name|'setServiceParent'
op|'('
name|'s'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# Non-internal non-rpc services use InetdFactory'
nl|'\n'
indent|'            '
name|'factory'
op|'='
name|'inetd'
op|'.'
name|'InetdFactory'
op|'('
name|'service'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'protocol'
op|'=='
string|"'tcp'"
op|':'
newline|'\n'
indent|'            '
name|'internet'
op|'.'
name|'TCPServer'
op|'('
name|'service'
op|'.'
name|'port'
op|','
name|'factory'
op|')'
op|'.'
name|'setServiceParent'
op|'('
name|'s'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'protocol'
op|'=='
string|"'udp'"
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'RuntimeError'
op|'('
string|'"not supporting UDP"'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'s'
newline|'\n'
dedent|''
endmarker|''
end_unit
