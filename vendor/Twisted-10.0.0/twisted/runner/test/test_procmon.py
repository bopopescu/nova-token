begin_unit
comment|'# Copyright (c) 2009 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nTests for L{twisted.runner.procmon}.\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'trial'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'runner'
op|'.'
name|'procmon'
name|'import'
name|'ProcessMonitor'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ProcmonTests
name|'class'
name|'ProcmonTests'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Tests for L{ProcessMonitor}.\n    """'
newline|'\n'
DECL|member|test_addProcess
name|'def'
name|'test_addProcess'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        L{ProcessMonitor.addProcess} starts the named program and tracks the\n        resulting process, a protocol for collecting its stdout, and the time\n        it was started.\n        """'
newline|'\n'
name|'spawnedProcesses'
op|'='
op|'['
op|']'
newline|'\n'
DECL|function|fakeSpawnProcess
name|'def'
name|'fakeSpawnProcess'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'spawnedProcesses'
op|'.'
name|'append'
op|'('
op|'('
name|'args'
op|','
name|'kwargs'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'patch'
op|'('
name|'reactor'
op|','
string|'"spawnProcess"'
op|','
name|'fakeSpawnProcess'
op|')'
newline|'\n'
name|'pm'
op|'='
name|'ProcessMonitor'
op|'('
op|')'
newline|'\n'
name|'pm'
op|'.'
name|'active'
op|'='
name|'True'
newline|'\n'
name|'pm'
op|'.'
name|'addProcess'
op|'('
string|'"foo"'
op|','
op|'['
string|'"arg1"'
op|','
string|'"arg2"'
op|']'
op|','
name|'uid'
op|'='
number|'1'
op|','
name|'gid'
op|'='
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pm'
op|'.'
name|'processes'
op|','
op|'{'
string|'"foo"'
op|':'
op|'('
op|'['
string|'"arg1"'
op|','
string|'"arg2"'
op|']'
op|','
number|'1'
op|','
number|'2'
op|','
op|'{'
op|'}'
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pm'
op|'.'
name|'protocols'
op|'.'
name|'keys'
op|'('
op|')'
op|','
op|'['
string|'"foo"'
op|']'
op|')'
newline|'\n'
name|'lp'
op|'='
name|'pm'
op|'.'
name|'protocols'
op|'['
string|'"foo"'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'spawnedProcesses'
op|','
nl|'\n'
op|'['
op|'('
op|'('
name|'lp'
op|','
string|'"arg1"'
op|','
op|'['
string|'"arg1"'
op|','
string|'"arg2"'
op|']'
op|')'
op|','
nl|'\n'
op|'{'
string|'"uid"'
op|':'
number|'1'
op|','
string|'"gid"'
op|':'
number|'2'
op|','
string|'"env"'
op|':'
op|'{'
op|'}'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_addProcessEnv
dedent|''
name|'def'
name|'test_addProcessEnv'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        L{ProcessMonitor.addProcess} takes an C{env} parameter that is passed\n        to C{spawnProcess}.\n        """'
newline|'\n'
name|'spawnedProcesses'
op|'='
op|'['
op|']'
newline|'\n'
DECL|function|fakeSpawnProcess
name|'def'
name|'fakeSpawnProcess'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'spawnedProcesses'
op|'.'
name|'append'
op|'('
op|'('
name|'args'
op|','
name|'kwargs'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'patch'
op|'('
name|'reactor'
op|','
string|'"spawnProcess"'
op|','
name|'fakeSpawnProcess'
op|')'
newline|'\n'
name|'pm'
op|'='
name|'ProcessMonitor'
op|'('
op|')'
newline|'\n'
name|'pm'
op|'.'
name|'active'
op|'='
name|'True'
newline|'\n'
name|'fakeEnv'
op|'='
op|'{'
string|'"KEY"'
op|':'
string|'"value"'
op|'}'
newline|'\n'
name|'pm'
op|'.'
name|'addProcess'
op|'('
string|'"foo"'
op|','
op|'['
string|'"foo"'
op|']'
op|','
name|'uid'
op|'='
number|'1'
op|','
name|'gid'
op|'='
number|'2'
op|','
name|'env'
op|'='
name|'fakeEnv'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'spawnedProcesses'
op|','
nl|'\n'
op|'['
op|'('
op|'('
name|'pm'
op|'.'
name|'protocols'
op|'['
string|'"foo"'
op|']'
op|','
string|'"foo"'
op|','
op|'['
string|'"foo"'
op|']'
op|')'
op|','
nl|'\n'
op|'{'
string|'"uid"'
op|':'
number|'1'
op|','
string|'"gid"'
op|':'
number|'2'
op|','
string|'"env"'
op|':'
name|'fakeEnv'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
