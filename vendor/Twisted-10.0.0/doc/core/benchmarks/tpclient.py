begin_unit
string|'"""Throughput test."""'
newline|'\n'
nl|'\n'
name|'import'
name|'time'
op|','
name|'sys'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
op|','
name|'protocol'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
newline|'\n'
nl|'\n'
DECL|variable|TIMES
name|'TIMES'
op|'='
number|'10000'
newline|'\n'
DECL|variable|S
name|'S'
op|'='
string|'"0123456789"'
op|'*'
number|'1240'
newline|'\n'
nl|'\n'
DECL|variable|toReceive
name|'toReceive'
op|'='
name|'len'
op|'('
name|'S'
op|')'
op|'*'
name|'TIMES'
newline|'\n'
nl|'\n'
DECL|class|Sender
name|'class'
name|'Sender'
op|'('
name|'protocol'
op|'.'
name|'Protocol'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|connectionMade
indent|'    '
name|'def'
name|'connectionMade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'numSent'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'received'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'registerProducer'
op|'('
name|'self'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|stopProducing
dedent|''
name|'def'
name|'stopProducing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|pauseProducing
dedent|''
name|'def'
name|'pauseProducing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|resumeProducing
dedent|''
name|'def'
name|'resumeProducing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'numSent'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'write'
op|'('
name|'S'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'numSent'
op|'=='
name|'TIMES'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'transport'
op|'.'
name|'unregisterProducer'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'transport'
op|'.'
name|'loseConnection'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|connectionLost
dedent|''
dedent|''
name|'def'
name|'connectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'shutdown'
op|'('
name|'self'
op|'.'
name|'numSent'
op|'=='
name|'TIMES'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|started
dedent|''
dedent|''
name|'started'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|function|start
name|'def'
name|'start'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'global'
name|'started'
newline|'\n'
name|'started'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|shutdown
dedent|''
name|'def'
name|'shutdown'
op|'('
name|'success'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'success'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'SystemExit'
op|','
string|'"failure or something"'
newline|'\n'
dedent|''
name|'passed'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'started'
newline|'\n'
name|'print'
string|'"Throughput (send): %s kbytes/sec"'
op|'%'
op|'('
op|'('
name|'toReceive'
op|'/'
name|'passed'
op|')'
op|'/'
number|'1024'
op|')'
newline|'\n'
name|'reactor'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|main
dedent|''
name|'def'
name|'main'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'f'
op|'='
name|'protocol'
op|'.'
name|'ClientFactory'
op|'('
op|')'
newline|'\n'
name|'f'
op|'.'
name|'protocol'
op|'='
name|'Sender'
newline|'\n'
name|'reactor'
op|'.'
name|'connectTCP'
op|'('
name|'sys'
op|'.'
name|'argv'
op|'['
number|'1'
op|']'
op|','
name|'int'
op|'('
name|'sys'
op|'.'
name|'argv'
op|'['
number|'2'
op|']'
op|')'
op|','
name|'f'
op|')'
newline|'\n'
name|'reactor'
op|'.'
name|'run'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
comment|'#log.startLogging(sys.stdout)'
nl|'\n'
indent|'    '
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
