begin_unit
nl|'\n'
string|'"""See how slow failure creation is"""'
newline|'\n'
nl|'\n'
name|'import'
name|'random'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'failure'
newline|'\n'
nl|'\n'
name|'random'
op|'.'
name|'seed'
op|'('
number|'10050'
op|')'
newline|'\n'
DECL|variable|O
name|'O'
op|'='
op|'['
number|'0'
op|','
number|'20'
op|','
number|'40'
op|','
number|'60'
op|','
number|'80'
op|','
number|'10'
op|','
number|'30'
op|','
number|'50'
op|','
number|'70'
op|','
number|'90'
op|']'
newline|'\n'
DECL|variable|DEPTH
name|'DEPTH'
op|'='
number|'30'
newline|'\n'
nl|'\n'
DECL|function|pickVal
name|'def'
name|'pickVal'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'random'
op|'.'
name|'choice'
op|'('
op|'['
name|'None'
op|','
number|'1'
op|','
string|"'Hello'"
op|','
op|'['
op|']'
op|','
op|'{'
number|'1'
op|':'
number|'1'
op|'}'
op|','
op|'('
number|'1'
op|','
number|'2'
op|','
number|'3'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|makeLocals
dedent|''
name|'def'
name|'makeLocals'
op|'('
name|'n'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
string|"';'"
op|'.'
name|'join'
op|'('
op|'['
string|"'x%d = %s'"
op|'%'
op|'('
name|'i'
op|','
name|'pickVal'
op|'('
op|')'
op|')'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'n'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'nLocals'
name|'in'
name|'O'
op|':'
newline|'\n'
indent|'    '
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'DEPTH'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'s'
op|'='
string|'"""\ndef deepFailure%d_%d():\n    %s\n    deepFailure%d_%d()\n"""'
op|'%'
op|'('
name|'nLocals'
op|','
name|'i'
op|','
name|'makeLocals'
op|'('
name|'nLocals'
op|')'
op|','
name|'nLocals'
op|','
name|'i'
op|'+'
number|'1'
op|')'
newline|'\n'
dedent|''
name|'exec'
name|'s'
newline|'\n'
nl|'\n'
name|'exec'
string|'"""\ndef deepFailure%d_%d():\n    1 / 0\n"""'
op|'%'
op|'('
name|'nLocals'
op|','
name|'DEPTH'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|R
dedent|''
name|'R'
op|'='
name|'range'
op|'('
number|'5000'
op|')'
newline|'\n'
DECL|function|fail
name|'def'
name|'fail'
op|'('
name|'n'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'for'
name|'i'
name|'in'
name|'R'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'eval'
op|'('
string|"'deepFailure%d_0'"
op|'%'
name|'n'
op|')'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'failure'
op|'.'
name|'Failure'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fail_str
dedent|''
dedent|''
dedent|''
name|'def'
name|'fail_str'
op|'('
name|'n'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'for'
name|'i'
name|'in'
name|'R'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'eval'
op|'('
string|"'deepFailure%d_0'"
op|'%'
name|'n'
op|')'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'str'
op|'('
name|'failure'
op|'.'
name|'Failure'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|class|PythonException
dedent|''
dedent|''
dedent|''
name|'class'
name|'PythonException'
op|'('
name|'Exception'
op|')'
op|':'
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|fail_easy
name|'def'
name|'fail_easy'
op|'('
name|'n'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'for'
name|'i'
name|'in'
name|'R'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'failure'
op|'.'
name|'Failure'
op|'('
name|'PythonException'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'from'
name|'timer'
name|'import'
name|'timeit'
newline|'\n'
comment|'# for i in O:'
nl|'\n'
comment|'#     timeit(fail, 1, i)'
nl|'\n'
nl|'\n'
comment|'# for i in O:'
nl|'\n'
comment|"#     print 'easy failing', i, timeit(fail_easy, 1, i)"
nl|'\n'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'O'
op|':'
newline|'\n'
indent|'    '
name|'print'
string|"'failing'"
op|','
name|'i'
op|','
name|'timeit'
op|'('
name|'fail'
op|','
number|'1'
op|','
name|'i'
op|')'
newline|'\n'
nl|'\n'
comment|'# for i in O:'
nl|'\n'
comment|"#     print 'string failing', i, timeit(fail_str, 1, i)"
nl|'\n'
dedent|''
endmarker|''
end_unit
