begin_unit
comment|'# Copyright (c) 2007-2009 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""\nSee how fast deferreds are.\n\nThis is mainly useful to compare cdefer.Deferred to defer.Deferred\n"""'
newline|'\n'
nl|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'defer'
newline|'\n'
name|'from'
name|'timer'
name|'import'
name|'timeit'
newline|'\n'
nl|'\n'
DECL|variable|benchmarkFuncs
name|'benchmarkFuncs'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|benchmarkFunc
name|'def'
name|'benchmarkFunc'
op|'('
name|'iter'
op|','
name|'args'
op|'='
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A decorator for benchmark functions that measure a single iteration\n    count. Registers the function with the given iteration count to the global\n    benchmarkFuncs list\n    """'
newline|'\n'
DECL|function|decorator
name|'def'
name|'decorator'
op|'('
name|'func'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'benchmarkFuncs'
op|'.'
name|'append'
op|'('
op|'('
name|'func'
op|','
name|'args'
op|','
name|'iter'
op|')'
op|')'
newline|'\n'
name|'return'
name|'func'
newline|'\n'
dedent|''
name|'return'
name|'decorator'
newline|'\n'
nl|'\n'
DECL|function|benchmarkNFunc
dedent|''
name|'def'
name|'benchmarkNFunc'
op|'('
name|'iter'
op|','
name|'ns'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A decorator for benchmark functions that measure multiple iteration\n    counts. Registers the function with the given iteration count to the global\n    benchmarkFuncs list.\n    """'
newline|'\n'
DECL|function|decorator
name|'def'
name|'decorator'
op|'('
name|'func'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'n'
name|'in'
name|'ns'
op|':'
newline|'\n'
indent|'            '
name|'benchmarkFuncs'
op|'.'
name|'append'
op|'('
op|'('
name|'func'
op|','
op|'('
name|'n'
op|','
op|')'
op|','
name|'iter'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'func'
newline|'\n'
dedent|''
name|'return'
name|'decorator'
newline|'\n'
nl|'\n'
DECL|function|instantiate
dedent|''
name|'def'
name|'instantiate'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Only create a deferred\n    """'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
DECL|variable|instantiate
dedent|''
name|'instantiate'
op|'='
name|'benchmarkFunc'
op|'('
number|'100000'
op|')'
op|'('
name|'instantiate'
op|')'
newline|'\n'
nl|'\n'
DECL|function|instantiateShootCallback
name|'def'
name|'instantiateShootCallback'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Create a deferred and give it a normal result\n    """'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'d'
op|'.'
name|'callback'
op|'('
number|'1'
op|')'
newline|'\n'
DECL|variable|instantiateShootCallback
dedent|''
name|'instantiateShootCallback'
op|'='
name|'benchmarkFunc'
op|'('
number|'100000'
op|')'
op|'('
name|'instantiateShootCallback'
op|')'
newline|'\n'
nl|'\n'
DECL|function|instantiateShootErrback
name|'def'
name|'instantiateShootErrback'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Create a deferred and give it an exception result. To avoid Unhandled\n    Errors, also register an errback that eats the error\n    """'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
number|'1'
op|'/'
number|'0'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'.'
name|'errback'
op|'('
op|')'
newline|'\n'
dedent|''
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'lambda'
name|'x'
op|':'
name|'None'
op|')'
newline|'\n'
DECL|variable|instantiateShootErrback
dedent|''
name|'instantiateShootErrback'
op|'='
name|'benchmarkFunc'
op|'('
number|'200'
op|')'
op|'('
name|'instantiateShootErrback'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|ns
name|'ns'
op|'='
op|'['
number|'10'
op|','
number|'1000'
op|','
number|'10000'
op|']'
newline|'\n'
nl|'\n'
DECL|function|instantiateAddCallbacksNoResult
name|'def'
name|'instantiateAddCallbacksNoResult'
op|'('
name|'n'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Creates a deferred and adds a trivial callback/errback/both to it the given\n    number of times.\n    """'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
DECL|function|f
name|'def'
name|'f'
op|'('
name|'result'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'result'
newline|'\n'
dedent|''
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
name|'n'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'f'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'f'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addBoth'
op|'('
name|'f'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'f'
op|','
name|'f'
op|')'
newline|'\n'
DECL|variable|instantiateAddCallbacksNoResult
dedent|''
dedent|''
name|'instantiateAddCallbacksNoResult'
op|'='
name|'benchmarkNFunc'
op|'('
number|'20'
op|','
name|'ns'
op|')'
op|'('
name|'instantiateAddCallbacksNoResult'
op|')'
newline|'\n'
nl|'\n'
DECL|function|instantiateAddCallbacksBeforeResult
name|'def'
name|'instantiateAddCallbacksBeforeResult'
op|'('
name|'n'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Create a deferred and adds a trivial callback/errback/both to it the given\n    number of times, and then shoots a result through all of the callbacks.\n    """'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
DECL|function|f
name|'def'
name|'f'
op|'('
name|'result'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'result'
newline|'\n'
dedent|''
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
name|'n'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'f'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'f'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addBoth'
op|'('
name|'f'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'f'
op|')'
newline|'\n'
dedent|''
name|'d'
op|'.'
name|'callback'
op|'('
number|'1'
op|')'
newline|'\n'
DECL|variable|instantiateAddCallbacksBeforeResult
dedent|''
name|'instantiateAddCallbacksBeforeResult'
op|'='
name|'benchmarkNFunc'
op|'('
number|'20'
op|','
name|'ns'
op|')'
op|'('
name|'instantiateAddCallbacksBeforeResult'
op|')'
newline|'\n'
nl|'\n'
DECL|function|instantiateAddCallbacksAfterResult
name|'def'
name|'instantiateAddCallbacksAfterResult'
op|'('
name|'n'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Create a deferred, shoots it and then adds a trivial callback/errback/both\n    to it the given number of times. The result is processed through the\n    callbacks as they are added.\n    """'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
DECL|function|f
name|'def'
name|'f'
op|'('
name|'result'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'result'
newline|'\n'
dedent|''
name|'d'
op|'.'
name|'callback'
op|'('
number|'1'
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
name|'n'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'f'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'f'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addBoth'
op|'('
name|'f'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'f'
op|')'
newline|'\n'
DECL|variable|instantiateAddCallbacksAfterResult
dedent|''
dedent|''
name|'instantiateAddCallbacksAfterResult'
op|'='
name|'benchmarkNFunc'
op|'('
number|'20'
op|','
name|'ns'
op|')'
op|'('
name|'instantiateAddCallbacksAfterResult'
op|')'
newline|'\n'
nl|'\n'
DECL|function|pauseUnpause
name|'def'
name|'pauseUnpause'
op|'('
name|'n'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Adds the given number of callbacks/errbacks/both to a deferred while it is\n    paused, and unpauses it, trigerring the processing of the value through the\n    callbacks.\n    """'
newline|'\n'
name|'d'
op|'='
name|'defer'
op|'.'
name|'Deferred'
op|'('
op|')'
newline|'\n'
DECL|function|f
name|'def'
name|'f'
op|'('
name|'result'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'result'
newline|'\n'
dedent|''
name|'d'
op|'.'
name|'callback'
op|'('
number|'1'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'pause'
op|'('
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
name|'n'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'d'
op|'.'
name|'addCallback'
op|'('
name|'f'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addErrback'
op|'('
name|'f'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addBoth'
op|'('
name|'f'
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'f'
op|')'
newline|'\n'
dedent|''
name|'d'
op|'.'
name|'unpause'
op|'('
op|')'
newline|'\n'
DECL|variable|pauseUnpause
dedent|''
name|'pauseUnpause'
op|'='
name|'benchmarkNFunc'
op|'('
number|'20'
op|','
name|'ns'
op|')'
op|'('
name|'pauseUnpause'
op|')'
newline|'\n'
nl|'\n'
DECL|function|benchmark
name|'def'
name|'benchmark'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Run all of the benchmarks registered in the benchmarkFuncs list\n    """'
newline|'\n'
name|'print'
name|'defer'
op|'.'
name|'Deferred'
op|'.'
name|'__module__'
newline|'\n'
name|'for'
name|'func'
op|','
name|'args'
op|','
name|'iter'
name|'in'
name|'benchmarkFuncs'
op|':'
newline|'\n'
indent|'        '
name|'print'
name|'func'
op|'.'
name|'__name__'
op|','
name|'args'
op|','
name|'timeit'
op|'('
name|'func'
op|','
name|'iter'
op|','
op|'*'
name|'args'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'benchmark'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
