begin_unit
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'protocol'
op|','
name|'reactor'
op|','
name|'defer'
op|','
name|'utils'
newline|'\n'
name|'import'
name|'pwd'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# Yet another back-end'
nl|'\n'
nl|'\n'
DECL|class|LocalFingerService
name|'class'
name|'LocalFingerService'
op|'('
name|'service'
op|'.'
name|'Service'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'implements'
op|'('
name|'IFingerService'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getUser
name|'def'
name|'getUser'
op|'('
name|'self'
op|','
name|'user'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'user'
op|'='
name|'user'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'entry'
op|'='
name|'pwd'
op|'.'
name|'getpwnam'
op|'('
name|'user'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
string|'"No such user"'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'='
name|'file'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'entry'
op|'['
number|'5'
op|']'
op|','
string|"'.plan'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'IOError'
op|','
name|'OSError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
string|'"No such user"'
op|')'
newline|'\n'
dedent|''
name|'data'
op|'='
name|'f'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'data'
op|'='
name|'data'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getUsers
dedent|''
name|'def'
name|'getUsers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'defer'
op|'.'
name|'succeed'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|variable|f
dedent|''
dedent|''
name|'f'
op|'='
name|'LocalFingerService'
op|'('
op|')'
newline|'\n'
endmarker|''
end_unit
