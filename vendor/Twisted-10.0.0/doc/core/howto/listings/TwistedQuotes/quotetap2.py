begin_unit
name|'from'
name|'TwistedQuotes'
name|'import'
name|'quoteproto'
comment|'# Protocol and Factory'
newline|'\n'
name|'from'
name|'TwistedQuotes'
name|'import'
name|'quoters'
comment|'# "give me a quote" code'
newline|'\n'
name|'from'
name|'TwistedQuotes'
name|'import'
name|'pbquote'
comment|'# perspective broker binding'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'application'
name|'import'
name|'service'
op|','
name|'internet'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'usage'
comment|'# twisted command-line processing'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'spread'
name|'import'
name|'pb'
comment|'# Perspective Broker'
newline|'\n'
nl|'\n'
DECL|class|Options
name|'class'
name|'Options'
op|'('
name|'usage'
op|'.'
name|'Options'
op|')'
op|':'
newline|'\n'
DECL|variable|optParameters
indent|'    '
name|'optParameters'
op|'='
op|'['
op|'['
string|'"port"'
op|','
string|'"p"'
op|','
number|'8007'
op|','
nl|'\n'
string|'"Port number to listen on for QOTD protocol."'
op|']'
op|','
nl|'\n'
op|'['
string|'"static"'
op|','
string|'"s"'
op|','
string|'"An apple a day keeps the doctor away."'
op|','
nl|'\n'
string|'"A static quote to display."'
op|']'
op|','
nl|'\n'
op|'['
string|'"file"'
op|','
string|'"f"'
op|','
name|'None'
op|','
nl|'\n'
string|'"A fortune-format text file to read quotes from."'
op|']'
op|','
nl|'\n'
op|'['
string|'"pb"'
op|','
string|'"b"'
op|','
name|'None'
op|','
nl|'\n'
string|'"Port to listen with PB server"'
op|']'
op|']'
newline|'\n'
nl|'\n'
DECL|function|makeService
dedent|''
name|'def'
name|'makeService'
op|'('
name|'config'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'svc'
op|'='
name|'service'
op|'.'
name|'MultiService'
op|'('
op|')'
newline|'\n'
name|'if'
name|'config'
op|'['
string|'"file"'
op|']'
op|':'
comment|'# If I was given a "file" option...'
newline|'\n'
comment|'# Read quotes from a file, selecting a random one each time,'
nl|'\n'
indent|'        '
name|'quoter'
op|'='
name|'quoters'
op|'.'
name|'FortuneQuoter'
op|'('
op|'['
name|'config'
op|'['
string|"'file'"
op|']'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
comment|'# otherwise,'
newline|'\n'
comment|'# read a single quote from the command line (or use the default).'
nl|'\n'
indent|'        '
name|'quoter'
op|'='
name|'quoters'
op|'.'
name|'StaticQuoter'
op|'('
name|'config'
op|'['
string|"'static'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'port'
op|'='
name|'int'
op|'('
name|'config'
op|'['
string|'"port"'
op|']'
op|')'
comment|'# TCP port to listen on'
newline|'\n'
name|'factory'
op|'='
name|'quoteproto'
op|'.'
name|'QOTDFactory'
op|'('
name|'quoter'
op|')'
comment|'# here we create a QOTDFactory'
newline|'\n'
comment|'# Finally, set up our factory, with its custom quoter, to create QOTD'
nl|'\n'
comment|'# protocol instances when events arrive on the specified port.'
nl|'\n'
name|'pbport'
op|'='
name|'config'
op|'['
string|"'pb'"
op|']'
comment|'# TCP PB port to listen on'
newline|'\n'
name|'if'
name|'pbport'
op|':'
newline|'\n'
indent|'        '
name|'pbfact'
op|'='
name|'pb'
op|'.'
name|'PBServerFactory'
op|'('
name|'pbquote'
op|'.'
name|'QuoteReader'
op|'('
name|'quoter'
op|')'
op|')'
newline|'\n'
name|'svc'
op|'.'
name|'addService'
op|'('
name|'internet'
op|'.'
name|'TCPServer'
op|'('
name|'int'
op|'('
name|'pbport'
op|')'
op|','
name|'pbfact'
op|')'
op|')'
newline|'\n'
dedent|''
name|'svc'
op|'.'
name|'addService'
op|'('
name|'internet'
op|'.'
name|'TCPServer'
op|'('
name|'port'
op|','
name|'factory'
op|')'
op|')'
newline|'\n'
name|'return'
name|'svc'
newline|'\n'
dedent|''
endmarker|''
end_unit
