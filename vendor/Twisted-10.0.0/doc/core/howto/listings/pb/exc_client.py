begin_unit
comment|'#!/usr/bin/env python'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2009 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'spread'
name|'import'
name|'pb'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
newline|'\n'
nl|'\n'
DECL|function|main
name|'def'
name|'main'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'factory'
op|'='
name|'pb'
op|'.'
name|'PBClientFactory'
op|'('
op|')'
newline|'\n'
name|'reactor'
op|'.'
name|'connectTCP'
op|'('
string|'"localhost"'
op|','
number|'8800'
op|','
name|'factory'
op|')'
newline|'\n'
name|'d'
op|'='
name|'factory'
op|'.'
name|'getRootObject'
op|'('
op|')'
newline|'\n'
name|'d'
op|'.'
name|'addCallbacks'
op|'('
name|'got_obj'
op|')'
newline|'\n'
name|'reactor'
op|'.'
name|'run'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|got_obj
dedent|''
name|'def'
name|'got_obj'
op|'('
name|'obj'
op|')'
op|':'
newline|'\n'
comment|'# change "broken" into "broken2" to demonstrate an unhandled exception'
nl|'\n'
indent|'    '
name|'d2'
op|'='
name|'obj'
op|'.'
name|'callRemote'
op|'('
string|'"broken"'
op|')'
newline|'\n'
name|'d2'
op|'.'
name|'addCallback'
op|'('
name|'working'
op|')'
newline|'\n'
name|'d2'
op|'.'
name|'addErrback'
op|'('
name|'broken'
op|')'
newline|'\n'
nl|'\n'
DECL|function|working
dedent|''
name|'def'
name|'working'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'print'
string|'"erm, it wasn\'t *supposed* to work.."'
newline|'\n'
nl|'\n'
DECL|function|broken
dedent|''
name|'def'
name|'broken'
op|'('
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'print'
string|'"got remote Exception"'
newline|'\n'
comment|'# reason should be a Failure (or subclass) holding the MyError exception'
nl|'\n'
name|'print'
string|'" .__class__ ="'
op|','
name|'reason'
op|'.'
name|'__class__'
newline|'\n'
name|'print'
string|'" .getErrorMessage() ="'
op|','
name|'reason'
op|'.'
name|'getErrorMessage'
op|'('
op|')'
newline|'\n'
name|'print'
string|'" .type ="'
op|','
name|'reason'
op|'.'
name|'type'
newline|'\n'
name|'reactor'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'main'
op|'('
op|')'
newline|'\n'
endmarker|''
end_unit
