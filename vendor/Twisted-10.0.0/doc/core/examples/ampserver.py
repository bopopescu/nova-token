begin_unit
name|'from'
name|'twisted'
op|'.'
name|'protocols'
name|'import'
name|'amp'
newline|'\n'
nl|'\n'
DECL|class|Sum
name|'class'
name|'Sum'
op|'('
name|'amp'
op|'.'
name|'Command'
op|')'
op|':'
newline|'\n'
DECL|variable|arguments
indent|'    '
name|'arguments'
op|'='
op|'['
op|'('
string|"'a'"
op|','
name|'amp'
op|'.'
name|'Integer'
op|'('
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'b'"
op|','
name|'amp'
op|'.'
name|'Integer'
op|'('
op|')'
op|')'
op|']'
newline|'\n'
DECL|variable|response
name|'response'
op|'='
op|'['
op|'('
string|"'total'"
op|','
name|'amp'
op|'.'
name|'Integer'
op|'('
op|')'
op|')'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Divide
dedent|''
name|'class'
name|'Divide'
op|'('
name|'amp'
op|'.'
name|'Command'
op|')'
op|':'
newline|'\n'
DECL|variable|arguments
indent|'    '
name|'arguments'
op|'='
op|'['
op|'('
string|"'numerator'"
op|','
name|'amp'
op|'.'
name|'Integer'
op|'('
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'denominator'"
op|','
name|'amp'
op|'.'
name|'Integer'
op|'('
op|')'
op|')'
op|']'
newline|'\n'
DECL|variable|response
name|'response'
op|'='
op|'['
op|'('
string|"'result'"
op|','
name|'amp'
op|'.'
name|'Float'
op|'('
op|')'
op|')'
op|']'
newline|'\n'
DECL|variable|errors
name|'errors'
op|'='
op|'{'
name|'ZeroDivisionError'
op|':'
string|"'ZERO_DIVISION'"
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Math
dedent|''
name|'class'
name|'Math'
op|'('
name|'amp'
op|'.'
name|'AMP'
op|')'
op|':'
newline|'\n'
DECL|member|sum
indent|'    '
name|'def'
name|'sum'
op|'('
name|'self'
op|','
name|'a'
op|','
name|'b'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'total'
op|'='
name|'a'
op|'+'
name|'b'
newline|'\n'
name|'print'
string|"'Did a sum: %d + %d = %d'"
op|'%'
op|'('
name|'a'
op|','
name|'b'
op|','
name|'total'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'total'"
op|':'
name|'total'
op|'}'
newline|'\n'
dedent|''
name|'Sum'
op|'.'
name|'responder'
op|'('
name|'sum'
op|')'
newline|'\n'
nl|'\n'
DECL|member|divide
name|'def'
name|'divide'
op|'('
name|'self'
op|','
name|'numerator'
op|','
name|'denominator'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'result'
op|'='
name|'float'
op|'('
name|'numerator'
op|')'
op|'/'
name|'denominator'
newline|'\n'
name|'print'
string|"'Divided: %d / %d = %f'"
op|'%'
op|'('
name|'numerator'
op|','
name|'denominator'
op|','
name|'result'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'result'"
op|':'
name|'result'
op|'}'
newline|'\n'
dedent|''
name|'Divide'
op|'.'
name|'responder'
op|'('
name|'divide'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|main
dedent|''
name|'def'
name|'main'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
op|'.'
name|'protocol'
name|'import'
name|'Factory'
newline|'\n'
name|'pf'
op|'='
name|'Factory'
op|'('
op|')'
newline|'\n'
name|'pf'
op|'.'
name|'protocol'
op|'='
name|'Math'
newline|'\n'
name|'reactor'
op|'.'
name|'listenTCP'
op|'('
number|'1234'
op|','
name|'pf'
op|')'
newline|'\n'
name|'print'
string|"'started'"
newline|'\n'
name|'reactor'
op|'.'
name|'run'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
