begin_unit
comment|'# Copyright (c) 2001-2006 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
string|'"""Demo of wxPython integration with Twisted."""'
newline|'\n'
nl|'\n'
name|'import'
name|'sys'
newline|'\n'
nl|'\n'
name|'from'
name|'wx'
name|'import'
name|'Frame'
op|','
name|'DefaultPosition'
op|','
name|'Size'
op|','
name|'Menu'
op|','
name|'MenuBar'
op|','
name|'App'
newline|'\n'
name|'from'
name|'wx'
name|'import'
name|'EVT_MENU'
op|','
name|'EVT_CLOSE'
newline|'\n'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'wxreactor'
newline|'\n'
name|'wxreactor'
op|'.'
name|'install'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# import t.i.reactor only after installing wxreactor:'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|ID_EXIT
name|'ID_EXIT'
op|'='
number|'101'
newline|'\n'
nl|'\n'
DECL|class|MyFrame
name|'class'
name|'MyFrame'
op|'('
name|'Frame'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'parent'
op|','
name|'ID'
op|','
name|'title'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'Frame'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'parent'
op|','
name|'ID'
op|','
name|'title'
op|','
name|'DefaultPosition'
op|','
name|'Size'
op|'('
number|'300'
op|','
number|'200'
op|')'
op|')'
newline|'\n'
name|'menu'
op|'='
name|'Menu'
op|'('
op|')'
newline|'\n'
name|'menu'
op|'.'
name|'Append'
op|'('
name|'ID_EXIT'
op|','
string|'"E&xit"'
op|','
string|'"Terminate the program"'
op|')'
newline|'\n'
name|'menuBar'
op|'='
name|'MenuBar'
op|'('
op|')'
newline|'\n'
name|'menuBar'
op|'.'
name|'Append'
op|'('
name|'menu'
op|','
string|'"&File"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'SetMenuBar'
op|'('
name|'menuBar'
op|')'
newline|'\n'
name|'EVT_MENU'
op|'('
name|'self'
op|','
name|'ID_EXIT'
op|','
name|'self'
op|'.'
name|'DoExit'
op|')'
newline|'\n'
nl|'\n'
comment|'# make sure reactor.stop() is used to stop event loop:'
nl|'\n'
name|'EVT_CLOSE'
op|'('
name|'self'
op|','
name|'lambda'
name|'evt'
op|':'
name|'reactor'
op|'.'
name|'stop'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|DoExit
dedent|''
name|'def'
name|'DoExit'
op|'('
name|'self'
op|','
name|'event'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'reactor'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MyApp
dedent|''
dedent|''
name|'class'
name|'MyApp'
op|'('
name|'App'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|twoSecondsPassed
indent|'    '
name|'def'
name|'twoSecondsPassed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|'"two seconds passed"'
newline|'\n'
nl|'\n'
DECL|member|OnInit
dedent|''
name|'def'
name|'OnInit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'frame'
op|'='
name|'MyFrame'
op|'('
name|'None'
op|','
op|'-'
number|'1'
op|','
string|'"Hello, world"'
op|')'
newline|'\n'
name|'frame'
op|'.'
name|'Show'
op|'('
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'SetTopWindow'
op|'('
name|'frame'
op|')'
newline|'\n'
comment|'# look, we can use twisted calls!'
nl|'\n'
name|'reactor'
op|'.'
name|'callLater'
op|'('
number|'2'
op|','
name|'self'
op|'.'
name|'twoSecondsPassed'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|demo
dedent|''
dedent|''
name|'def'
name|'demo'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'log'
op|'.'
name|'startLogging'
op|'('
name|'sys'
op|'.'
name|'stdout'
op|')'
newline|'\n'
nl|'\n'
comment|'# register the App instance with Twisted:'
nl|'\n'
name|'app'
op|'='
name|'MyApp'
op|'('
number|'0'
op|')'
newline|'\n'
name|'reactor'
op|'.'
name|'registerWxApp'
op|'('
name|'app'
op|')'
newline|'\n'
nl|'\n'
comment|'# start the event loop:'
nl|'\n'
name|'reactor'
op|'.'
name|'run'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'demo'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
