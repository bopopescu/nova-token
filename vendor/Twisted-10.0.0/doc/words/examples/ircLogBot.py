begin_unit
comment|'# Copyright (c) 2001-2009 Twisted Matrix Laboratories.'
nl|'\n'
comment|'# See LICENSE for details.'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""\nAn example IRC log bot - logs a channel\'s events to a file.\n\nIf someone says the bot\'s name in the channel followed by a \':\',\ne.g.\n\n  <foo> logbot: hello!\n\nthe bot will reply:\n\n  <logbot> foo: I am a log bot\n\nRun this script with two arguments, the channel name the bot should\nconnect to, and file to log to, e.g.:\n\n  $ python ircLogBot.py test test.log\n\nwill log channel #test to the file \'test.log\'.\n"""'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# twisted imports'
nl|'\n'
name|'from'
name|'twisted'
op|'.'
name|'words'
op|'.'
name|'protocols'
name|'import'
name|'irc'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'internet'
name|'import'
name|'reactor'
op|','
name|'protocol'
newline|'\n'
name|'from'
name|'twisted'
op|'.'
name|'python'
name|'import'
name|'log'
newline|'\n'
nl|'\n'
comment|'# system imports'
nl|'\n'
name|'import'
name|'time'
op|','
name|'sys'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MessageLogger
name|'class'
name|'MessageLogger'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    An independent logger class (because separation of application\n    and protocol logic is a good thing).\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'file'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'file'
op|'='
name|'file'
newline|'\n'
nl|'\n'
DECL|member|log
dedent|''
name|'def'
name|'log'
op|'('
name|'self'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Write a message to the file."""'
newline|'\n'
name|'timestamp'
op|'='
name|'time'
op|'.'
name|'strftime'
op|'('
string|'"[%H:%M:%S]"'
op|','
name|'time'
op|'.'
name|'localtime'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'file'
op|'.'
name|'write'
op|'('
string|"'%s %s\\n'"
op|'%'
op|'('
name|'timestamp'
op|','
name|'message'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'file'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|close
dedent|''
name|'def'
name|'close'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'file'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|LogBot
dedent|''
dedent|''
name|'class'
name|'LogBot'
op|'('
name|'irc'
op|'.'
name|'IRCClient'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""A logging IRC bot."""'
newline|'\n'
nl|'\n'
DECL|variable|nickname
name|'nickname'
op|'='
string|'"twistedbot"'
newline|'\n'
nl|'\n'
DECL|member|connectionMade
name|'def'
name|'connectionMade'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'irc'
op|'.'
name|'IRCClient'
op|'.'
name|'connectionMade'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'='
name|'MessageLogger'
op|'('
name|'open'
op|'('
name|'self'
op|'.'
name|'factory'
op|'.'
name|'filename'
op|','
string|'"a"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'log'
op|'('
string|'"[connected at %s]"'
op|'%'
nl|'\n'
name|'time'
op|'.'
name|'asctime'
op|'('
name|'time'
op|'.'
name|'localtime'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|connectionLost
dedent|''
name|'def'
name|'connectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'irc'
op|'.'
name|'IRCClient'
op|'.'
name|'connectionLost'
op|'('
name|'self'
op|','
name|'reason'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'log'
op|'('
string|'"[disconnected at %s]"'
op|'%'
nl|'\n'
name|'time'
op|'.'
name|'asctime'
op|'('
name|'time'
op|'.'
name|'localtime'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# callbacks for events'
nl|'\n'
nl|'\n'
DECL|member|signedOn
dedent|''
name|'def'
name|'signedOn'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Called when bot has succesfully signed on to server."""'
newline|'\n'
name|'self'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'factory'
op|'.'
name|'channel'
op|')'
newline|'\n'
nl|'\n'
DECL|member|joined
dedent|''
name|'def'
name|'joined'
op|'('
name|'self'
op|','
name|'channel'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""This will get called when the bot joins the channel."""'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'log'
op|'('
string|'"[I have joined %s]"'
op|'%'
name|'channel'
op|')'
newline|'\n'
nl|'\n'
DECL|member|privmsg
dedent|''
name|'def'
name|'privmsg'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'channel'
op|','
name|'msg'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""This will get called when the bot receives a message."""'
newline|'\n'
name|'user'
op|'='
name|'user'
op|'.'
name|'split'
op|'('
string|"'!'"
op|','
number|'1'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'log'
op|'('
string|'"<%s> %s"'
op|'%'
op|'('
name|'user'
op|','
name|'msg'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# Check to see if they're sending me a private message"
nl|'\n'
name|'if'
name|'channel'
op|'=='
name|'self'
op|'.'
name|'nickname'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
string|'"It isn\'t nice to whisper!  Play nice with the group."'
newline|'\n'
name|'self'
op|'.'
name|'msg'
op|'('
name|'user'
op|','
name|'msg'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
comment|'# Otherwise check to see if it is a message directed at me'
nl|'\n'
dedent|''
name|'if'
name|'msg'
op|'.'
name|'startswith'
op|'('
name|'self'
op|'.'
name|'nickname'
op|'+'
string|'":"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
string|'"%s: I am a log bot"'
op|'%'
name|'user'
newline|'\n'
name|'self'
op|'.'
name|'msg'
op|'('
name|'channel'
op|','
name|'msg'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'log'
op|'('
string|'"<%s> %s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'nickname'
op|','
name|'msg'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|action
dedent|''
dedent|''
name|'def'
name|'action'
op|'('
name|'self'
op|','
name|'user'
op|','
name|'channel'
op|','
name|'msg'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""This will get called when the bot sees someone do an action."""'
newline|'\n'
name|'user'
op|'='
name|'user'
op|'.'
name|'split'
op|'('
string|"'!'"
op|','
number|'1'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'log'
op|'('
string|'"* %s %s"'
op|'%'
op|'('
name|'user'
op|','
name|'msg'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# irc callbacks'
nl|'\n'
nl|'\n'
DECL|member|irc_NICK
dedent|''
name|'def'
name|'irc_NICK'
op|'('
name|'self'
op|','
name|'prefix'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Called when an IRC user changes their nickname."""'
newline|'\n'
name|'old_nick'
op|'='
name|'prefix'
op|'.'
name|'split'
op|'('
string|"'!'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'new_nick'
op|'='
name|'params'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'log'
op|'('
string|'"%s is now known as %s"'
op|'%'
op|'('
name|'old_nick'
op|','
name|'new_nick'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# For fun, override the method that determines how a nickname is changed on'
nl|'\n'
comment|'# collisions. The default method appends an underscore.'
nl|'\n'
DECL|member|alterCollidedNick
dedent|''
name|'def'
name|'alterCollidedNick'
op|'('
name|'self'
op|','
name|'nickname'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Generate an altered version of a nickname that caused a collision in an\n        effort to create an unused related name for subsequent registration.\n        """'
newline|'\n'
name|'return'
name|'nickname'
op|'+'
string|"'^'"
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|LogBotFactory
dedent|''
dedent|''
name|'class'
name|'LogBotFactory'
op|'('
name|'protocol'
op|'.'
name|'ClientFactory'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""A factory for LogBots.\n\n    A new protocol instance will be created each time we connect to the server.\n    """'
newline|'\n'
nl|'\n'
comment|'# the class of the protocol to build when new connection is made'
nl|'\n'
DECL|variable|protocol
name|'protocol'
op|'='
name|'LogBot'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'channel'
op|','
name|'filename'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'channel'
op|'='
name|'channel'
newline|'\n'
name|'self'
op|'.'
name|'filename'
op|'='
name|'filename'
newline|'\n'
nl|'\n'
DECL|member|clientConnectionLost
dedent|''
name|'def'
name|'clientConnectionLost'
op|'('
name|'self'
op|','
name|'connector'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""If we get disconnected, reconnect to server."""'
newline|'\n'
name|'connector'
op|'.'
name|'connect'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|clientConnectionFailed
dedent|''
name|'def'
name|'clientConnectionFailed'
op|'('
name|'self'
op|','
name|'connector'
op|','
name|'reason'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|'"connection failed:"'
op|','
name|'reason'
newline|'\n'
name|'reactor'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
comment|'# initialize logging'
nl|'\n'
indent|'    '
name|'log'
op|'.'
name|'startLogging'
op|'('
name|'sys'
op|'.'
name|'stdout'
op|')'
newline|'\n'
nl|'\n'
comment|'# create factory protocol and application'
nl|'\n'
DECL|variable|f
name|'f'
op|'='
name|'LogBotFactory'
op|'('
name|'sys'
op|'.'
name|'argv'
op|'['
number|'1'
op|']'
op|','
name|'sys'
op|'.'
name|'argv'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# connect factory to this host and port'
nl|'\n'
name|'reactor'
op|'.'
name|'connectTCP'
op|'('
string|'"irc.freenode.net"'
op|','
number|'6667'
op|','
name|'f'
op|')'
newline|'\n'
nl|'\n'
comment|'# run bot'
nl|'\n'
name|'reactor'
op|'.'
name|'run'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
