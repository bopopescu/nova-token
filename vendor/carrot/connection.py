begin_unit
string|'"""\n\nGetting a connection to the AMQP server.\n\n"""'
newline|'\n'
name|'from'
name|'amqplib'
op|'.'
name|'client_0_8'
op|'.'
name|'connection'
name|'import'
name|'AMQPConnectionException'
newline|'\n'
name|'from'
name|'carrot'
op|'.'
name|'backends'
name|'import'
name|'get_backend_cls'
newline|'\n'
name|'import'
name|'warnings'
newline|'\n'
name|'import'
name|'socket'
newline|'\n'
nl|'\n'
DECL|variable|DEFAULT_CONNECT_TIMEOUT
name|'DEFAULT_CONNECT_TIMEOUT'
op|'='
number|'5'
comment|'# seconds'
newline|'\n'
DECL|variable|SETTING_PREFIX
name|'SETTING_PREFIX'
op|'='
string|'"BROKER"'
newline|'\n'
DECL|variable|COMPAT_SETTING_PREFIX
name|'COMPAT_SETTING_PREFIX'
op|'='
string|'"AMQP"'
newline|'\n'
DECL|variable|ARG_TO_DJANGO_SETTING
name|'ARG_TO_DJANGO_SETTING'
op|'='
op|'{'
nl|'\n'
string|'"hostname"'
op|':'
string|'"HOST"'
op|','
nl|'\n'
string|'"userid"'
op|':'
string|'"USER"'
op|','
nl|'\n'
string|'"password"'
op|':'
string|'"PASSWORD"'
op|','
nl|'\n'
string|'"virtual_host"'
op|':'
string|'"VHOST"'
op|','
nl|'\n'
string|'"port"'
op|':'
string|'"PORT"'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'SETTING_DEPRECATED_FMT'
op|'='
string|'"Setting %s has been renamed to %s and is "'
DECL|variable|SETTING_DEPRECATED_FMT
string|'"scheduled for removal in version 1.0."'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BrokerConnection
name|'class'
name|'BrokerConnection'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""A network/socket connection to an AMQP message broker.\n\n    :param hostname: see :attr:`hostname`.\n    :param userid: see :attr:`userid`.\n    :param password: see :attr:`password`.\n\n    :keyword virtual_host: see :attr:`virtual_host`.\n    :keyword port: see :attr:`port`.\n    :keyword insist: see :attr:`insist`.\n    :keyword connect_timeout: see :attr:`connect_timeout`.\n    :keyword ssl: see :attr:`ssl`.\n\n    .. attribute:: hostname\n\n        The hostname to the AMQP server\n\n    .. attribute:: userid\n\n        A valid username used to authenticate to the server.\n\n    .. attribute:: password\n\n        The password used to authenticate to the server.\n\n    .. attribute:: virtual_host\n\n        The name of the virtual host to work with. This virtual host must\n        exist on the server, and the user must have access to it. Consult\n        your brokers manual for help with creating, and mapping\n        users to virtual hosts.\n        Default is ``"/"``.\n\n    .. attribute:: port\n\n        The port of the AMQP server.  Default is ``5672`` (amqp).\n\n    .. attribute:: insist\n\n        Insist on connecting to a server. In a configuration with multiple\n        load-sharing servers, the insist option tells the server that the\n        client is insisting on a connection to the specified server.\n        Default is ``False``.\n\n    .. attribute:: connect_timeout\n\n        The timeout in seconds before we give up connecting to the server.\n        The default is no timeout.\n\n    .. attribute:: ssl\n\n        Use SSL to connect to the server.\n        The default is ``False``.\n\n    .. attribute:: backend_cls\n\n        The messaging backend class used. Defaults to the ``pyamqplib``\n        backend.\n\n    """'
newline|'\n'
DECL|variable|virtual_host
name|'virtual_host'
op|'='
string|'"/"'
newline|'\n'
DECL|variable|port
name|'port'
op|'='
name|'None'
newline|'\n'
DECL|variable|insist
name|'insist'
op|'='
name|'False'
newline|'\n'
DECL|variable|connect_timeout
name|'connect_timeout'
op|'='
name|'DEFAULT_CONNECT_TIMEOUT'
newline|'\n'
DECL|variable|ssl
name|'ssl'
op|'='
name|'False'
newline|'\n'
DECL|variable|_closed
name|'_closed'
op|'='
name|'True'
newline|'\n'
DECL|variable|backend_cls
name|'backend_cls'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|variable|ConnectionException
name|'ConnectionException'
op|'='
name|'AMQPConnectionException'
newline|'\n'
nl|'\n'
op|'@'
name|'property'
newline|'\n'
DECL|member|host
name|'def'
name|'host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""The host as a hostname/port pair separated by colon."""'
newline|'\n'
name|'return'
string|'":"'
op|'.'
name|'join'
op|'('
op|'['
name|'self'
op|'.'
name|'hostname'
op|','
name|'str'
op|'('
name|'self'
op|'.'
name|'port'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
dedent|''
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'hostname'
op|'='
name|'None'
op|','
name|'userid'
op|'='
name|'None'
op|','
name|'password'
op|'='
name|'None'
op|','
nl|'\n'
name|'virtual_host'
op|'='
name|'None'
op|','
name|'port'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'hostname'
op|'='
name|'hostname'
newline|'\n'
name|'self'
op|'.'
name|'userid'
op|'='
name|'userid'
newline|'\n'
name|'self'
op|'.'
name|'password'
op|'='
name|'password'
newline|'\n'
name|'self'
op|'.'
name|'virtual_host'
op|'='
name|'virtual_host'
name|'or'
name|'self'
op|'.'
name|'virtual_host'
newline|'\n'
name|'self'
op|'.'
name|'port'
op|'='
name|'port'
name|'or'
name|'self'
op|'.'
name|'port'
newline|'\n'
name|'self'
op|'.'
name|'insist'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"insist"'
op|','
name|'self'
op|'.'
name|'insist'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connect_timeout'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"connect_timeout"'
op|','
nl|'\n'
name|'self'
op|'.'
name|'connect_timeout'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ssl'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"ssl"'
op|','
name|'self'
op|'.'
name|'ssl'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'backend_cls'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|'"backend_cls"'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_closed'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_connection'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|connection
name|'def'
name|'connection'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'_closed'
op|'=='
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'_connection'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_connection'
op|'='
name|'self'
op|'.'
name|'_establish_connection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_closed'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_connection'
newline|'\n'
nl|'\n'
DECL|member|__enter__
dedent|''
name|'def'
name|'__enter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|__exit__
dedent|''
name|'def'
name|'__exit__'
op|'('
name|'self'
op|','
name|'e_type'
op|','
name|'e_value'
op|','
name|'e_trace'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'e_type'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'e_type'
op|'('
name|'e_value'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_establish_connection
dedent|''
name|'def'
name|'_establish_connection'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'create_backend'
op|'('
op|')'
op|'.'
name|'establish_connection'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_backend_cls
dedent|''
name|'def'
name|'get_backend_cls'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get the currently used backend class."""'
newline|'\n'
name|'backend_cls'
op|'='
name|'self'
op|'.'
name|'backend_cls'
newline|'\n'
name|'if'
name|'not'
name|'backend_cls'
name|'or'
name|'isinstance'
op|'('
name|'backend_cls'
op|','
name|'basestring'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'backend_cls'
op|'='
name|'get_backend_cls'
op|'('
name|'backend_cls'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'backend_cls'
newline|'\n'
nl|'\n'
DECL|member|create_backend
dedent|''
name|'def'
name|'create_backend'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Create a new instance of the current backend in\n        :attr:`backend_cls`."""'
newline|'\n'
name|'backend_cls'
op|'='
name|'self'
op|'.'
name|'get_backend_cls'
op|'('
op|')'
newline|'\n'
name|'return'
name|'backend_cls'
op|'('
name|'connection'
op|'='
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_channel
dedent|''
name|'def'
name|'get_channel'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Request a new AMQP channel."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'channel'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|connect
dedent|''
name|'def'
name|'connect'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Establish a connection to the AMQP server."""'
newline|'\n'
name|'self'
op|'.'
name|'_closed'
op|'='
name|'False'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'connection'
newline|'\n'
nl|'\n'
DECL|member|close
dedent|''
name|'def'
name|'close'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Close the currently open connection."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'_connection'
op|':'
newline|'\n'
indent|'                '
name|'backend'
op|'='
name|'self'
op|'.'
name|'create_backend'
op|'('
op|')'
newline|'\n'
name|'backend'
op|'.'
name|'close_connection'
op|'('
name|'self'
op|'.'
name|'_connection'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'socket'
op|'.'
name|'error'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_closed'
op|'='
name|'True'
newline|'\n'
nl|'\n'
comment|'# For backwards compatability.'
nl|'\n'
DECL|variable|AMQPConnection
dedent|''
dedent|''
name|'AMQPConnection'
op|'='
name|'BrokerConnection'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_django_conninfo
name|'def'
name|'get_django_conninfo'
op|'('
op|')'
op|':'
newline|'\n'
comment|"# FIXME can't wait to remove this mess in 1.0 [askh]"
nl|'\n'
indent|'    '
name|'ci'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'from'
name|'django'
op|'.'
name|'conf'
name|'import'
name|'settings'
name|'as'
name|'django_settings'
newline|'\n'
nl|'\n'
name|'ci'
op|'['
string|'"backend_cls"'
op|']'
op|'='
name|'getattr'
op|'('
name|'django_settings'
op|','
string|'"CARROT_BACKEND"'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'arg_name'
op|','
name|'setting_name'
name|'in'
name|'ARG_TO_DJANGO_SETTING'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'setting'
op|'='
string|'"%s_%s"'
op|'%'
op|'('
name|'SETTING_PREFIX'
op|','
name|'setting_name'
op|')'
newline|'\n'
name|'compat_setting'
op|'='
string|'"%s_%s"'
op|'%'
op|'('
name|'COMPAT_SETTING_PREFIX'
op|','
name|'setting_name'
op|')'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'django_settings'
op|','
name|'setting'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ci'
op|'['
name|'arg_name'
op|']'
op|'='
name|'getattr'
op|'('
name|'django_settings'
op|','
name|'setting'
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'hasattr'
op|'('
name|'django_settings'
op|','
name|'compat_setting'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ci'
op|'['
name|'arg_name'
op|']'
op|'='
name|'getattr'
op|'('
name|'django_settings'
op|','
name|'compat_setting'
op|','
name|'None'
op|')'
newline|'\n'
name|'warnings'
op|'.'
name|'warn'
op|'('
name|'DeprecationWarning'
op|'('
name|'SETTING_DEPRECATED_FMT'
op|'%'
op|'('
nl|'\n'
name|'compat_setting'
op|','
name|'setting'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
string|'"hostname"'
name|'not'
name|'in'
name|'ci'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'hasattr'
op|'('
name|'django_settings'
op|','
string|'"AMQP_SERVER"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ci'
op|'['
string|'"hostname"'
op|']'
op|'='
name|'django_settings'
op|'.'
name|'AMQP_SERVER'
newline|'\n'
name|'warnings'
op|'.'
name|'warn'
op|'('
name|'DeprecationWarning'
op|'('
nl|'\n'
string|'"AMQP_SERVER has been renamed to BROKER_HOST and is"'
nl|'\n'
string|'"scheduled for removal in version 1.0."'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'ci'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DjangoBrokerConnection
dedent|''
name|'class'
name|'DjangoBrokerConnection'
op|'('
name|'BrokerConnection'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""A version of :class:`BrokerConnection` that takes configuration\n    from the Django ``settings.py`` module.\n\n    :keyword hostname: The hostname of the AMQP server to connect to,\n        if not provided this is taken from ``settings.BROKER_HOST``.\n\n    :keyword userid: The username of the user to authenticate to the server\n        as. If not provided this is taken from ``settings.BROKER_USER``.\n\n    :keyword password: The users password. If not provided this is taken\n        from ``settings.BROKER_PASSWORD``.\n\n    :keyword virtual_host: The name of the virtual host to work with.\n        This virtual host must exist on the server, and the user must\n        have access to it. Consult your brokers manual for help with\n        creating, and mapping users to virtual hosts. If not provided\n        this is taken from ``settings.BROKER_VHOST``.\n\n    :keyword port: The port the AMQP server is running on. If not provided\n        this is taken from ``settings.BROKER_PORT``, or if that is not set,\n        the default is ``5672`` (amqp).\n\n    """'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'kwargs'
op|'='
name|'dict'
op|'('
name|'get_django_conninfo'
op|'('
op|')'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'super'
op|'('
name|'DjangoBrokerConnection'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
comment|'# For backwards compatability.'
nl|'\n'
DECL|variable|DjangoAMQPConnection
dedent|''
dedent|''
name|'DjangoAMQPConnection'
op|'='
name|'DjangoBrokerConnection'
newline|'\n'
endmarker|''
end_unit
