begin_unit
name|'import'
name|'redis'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
nl|'\n'
DECL|class|PipelineTestCase
name|'class'
name|'PipelineTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'client'
op|'='
name|'redis'
op|'.'
name|'Redis'
op|'('
name|'host'
op|'='
string|"'localhost'"
op|','
name|'port'
op|'='
number|'6379'
op|','
name|'db'
op|'='
number|'9'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'.'
name|'flushdb'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'client'
op|'.'
name|'flushdb'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pipeline
dedent|''
name|'def'
name|'test_pipeline'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pipe'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'pipeline'
op|'('
op|')'
newline|'\n'
name|'pipe'
op|'.'
name|'set'
op|'('
string|"'a'"
op|','
string|"'a1'"
op|')'
op|'.'
name|'get'
op|'('
string|"'a'"
op|')'
op|'.'
name|'zadd'
op|'('
string|"'z'"
op|','
string|"'z1'"
op|','
number|'1'
op|')'
op|'.'
name|'zadd'
op|'('
string|"'z'"
op|','
string|"'z2'"
op|','
number|'4'
op|')'
newline|'\n'
name|'pipe'
op|'.'
name|'zincrby'
op|'('
string|"'z'"
op|','
string|"'z1'"
op|')'
op|'.'
name|'zrange'
op|'('
string|"'z'"
op|','
number|'0'
op|','
number|'5'
op|','
name|'withscores'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pipe'
op|'.'
name|'execute'
op|'('
op|')'
op|','
nl|'\n'
op|'['
nl|'\n'
name|'True'
op|','
nl|'\n'
string|"'a1'"
op|','
nl|'\n'
name|'True'
op|','
nl|'\n'
name|'True'
op|','
nl|'\n'
number|'2.0'
op|','
nl|'\n'
op|'['
op|'('
string|"'z1'"
op|','
number|'2.0'
op|')'
op|','
op|'('
string|"'z2'"
op|','
number|'4'
op|')'
op|']'
op|','
nl|'\n'
op|']'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_invalid_command_in_pipeline
dedent|''
name|'def'
name|'test_invalid_command_in_pipeline'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# all commands but the invalid one should be excuted correctly'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'client'
op|'['
string|"'c'"
op|']'
op|'='
string|"'a'"
newline|'\n'
name|'pipe'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'pipeline'
op|'('
op|')'
newline|'\n'
name|'pipe'
op|'.'
name|'set'
op|'('
string|"'a'"
op|','
number|'1'
op|')'
op|'.'
name|'set'
op|'('
string|"'b'"
op|','
number|'2'
op|')'
op|'.'
name|'lpush'
op|'('
string|"'c'"
op|','
number|'3'
op|')'
op|'.'
name|'set'
op|'('
string|"'d'"
op|','
number|'4'
op|')'
newline|'\n'
name|'result'
op|'='
name|'pipe'
op|'.'
name|'execute'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'result'
op|'['
number|'0'
op|']'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'client'
op|'['
string|"'a'"
op|']'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'result'
op|'['
number|'1'
op|']'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'client'
op|'['
string|"'b'"
op|']'
op|','
string|"'2'"
op|')'
newline|'\n'
comment|"# we can't lpush to a key that's a string value, so this should"
nl|'\n'
comment|'# be a ResponseError exception'
nl|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'isinstance'
op|'('
name|'result'
op|'['
number|'2'
op|']'
op|','
name|'redis'
op|'.'
name|'ResponseError'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'client'
op|'['
string|"'c'"
op|']'
op|','
string|"'a'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'result'
op|'['
number|'3'
op|']'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'client'
op|'['
string|"'d'"
op|']'
op|','
string|"'4'"
op|')'
newline|'\n'
nl|'\n'
comment|'# make sure the pipe was restored to a working state'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pipe'
op|'.'
name|'set'
op|'('
string|"'z'"
op|','
string|"'zzz'"
op|')'
op|'.'
name|'execute'
op|'('
op|')'
op|','
op|'['
name|'True'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'client'
op|'['
string|"'z'"
op|']'
op|','
string|"'zzz'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pipeline_cannot_select
dedent|''
name|'def'
name|'test_pipeline_cannot_select'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pipe'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'pipeline'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'redis'
op|'.'
name|'RedisError'
op|','
nl|'\n'
name|'pipe'
op|'.'
name|'select'
op|','
string|"'localhost'"
op|','
number|'6379'
op|','
name|'db'
op|'='
number|'9'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pipeline_no_transaction
dedent|''
name|'def'
name|'test_pipeline_no_transaction'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pipe'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'pipeline'
op|'('
name|'transaction'
op|'='
name|'False'
op|')'
newline|'\n'
name|'pipe'
op|'.'
name|'set'
op|'('
string|"'a'"
op|','
string|"'a1'"
op|')'
op|'.'
name|'set'
op|'('
string|"'b'"
op|','
string|"'b1'"
op|')'
op|'.'
name|'set'
op|'('
string|"'c'"
op|','
string|"'c1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pipe'
op|'.'
name|'execute'
op|'('
op|')'
op|','
op|'['
name|'True'
op|','
name|'True'
op|','
name|'True'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'client'
op|'['
string|"'a'"
op|']'
op|','
string|"'a1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'client'
op|'['
string|"'b'"
op|']'
op|','
string|"'b1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'client'
op|'['
string|"'c'"
op|']'
op|','
string|"'c1'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
