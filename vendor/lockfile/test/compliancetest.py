begin_unit
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'threading'
newline|'\n'
name|'import'
name|'shutil'
newline|'\n'
nl|'\n'
name|'import'
name|'lockfile'
newline|'\n'
nl|'\n'
DECL|class|ComplianceTest
name|'class'
name|'ComplianceTest'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'saved_class'
op|'='
name|'lockfile'
op|'.'
name|'LockFile'
newline|'\n'
nl|'\n'
DECL|member|_testfile
dedent|''
name|'def'
name|'_testfile'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Return platform-appropriate file.  Helper for tests."""'
newline|'\n'
name|'import'
name|'tempfile'
newline|'\n'
name|'return'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tempfile'
op|'.'
name|'gettempdir'
op|'('
op|')'
op|','
string|"'trash-%s'"
op|'%'
name|'os'
op|'.'
name|'getpid'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|setup
dedent|''
name|'def'
name|'setup'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'lockfile'
op|'.'
name|'LockFile'
op|'='
name|'self'
op|'.'
name|'class_to_test'
newline|'\n'
nl|'\n'
DECL|member|teardown
dedent|''
name|'def'
name|'teardown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'tf'
op|'='
name|'self'
op|'.'
name|'_testfile'
op|'('
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'tf'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'tf'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isfile'
op|'('
name|'tf'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'tf'
op|')'
newline|'\n'
dedent|''
name|'lockfile'
op|'.'
name|'LockFile'
op|'='
name|'self'
op|'.'
name|'saved_class'
newline|'\n'
nl|'\n'
DECL|member|_test_acquire_helper
dedent|''
name|'def'
name|'_test_acquire_helper'
op|'('
name|'self'
op|','
name|'tbool'
op|')'
op|':'
newline|'\n'
comment|'# As simple as it gets.'
nl|'\n'
indent|'        '
name|'lock'
op|'='
name|'lockfile'
op|'.'
name|'LockFile'
op|'('
name|'self'
op|'.'
name|'_testfile'
op|'('
op|')'
op|','
name|'threaded'
op|'='
name|'tbool'
op|')'
newline|'\n'
name|'lock'
op|'.'
name|'acquire'
op|'('
op|')'
newline|'\n'
name|'assert'
name|'lock'
op|'.'
name|'is_locked'
op|'('
op|')'
newline|'\n'
name|'lock'
op|'.'
name|'release'
op|'('
op|')'
newline|'\n'
name|'assert'
name|'not'
name|'lock'
op|'.'
name|'is_locked'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_acquire_basic_threaded
dedent|''
name|'def'
name|'test_acquire_basic_threaded'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_acquire_helper'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_acquire_basic_unthreaded
dedent|''
name|'def'
name|'test_acquire_basic_unthreaded'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_acquire_helper'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_acquire_no_timeout_helper
dedent|''
name|'def'
name|'_test_acquire_no_timeout_helper'
op|'('
name|'self'
op|','
name|'tbool'
op|')'
op|':'
newline|'\n'
comment|'# No timeout test'
nl|'\n'
indent|'        '
name|'e1'
op|','
name|'e2'
op|'='
name|'threading'
op|'.'
name|'Event'
op|'('
op|')'
op|','
name|'threading'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'t'
op|'='
name|'_in_thread'
op|'('
name|'self'
op|'.'
name|'_lock_wait_unlock'
op|','
name|'e1'
op|','
name|'e2'
op|')'
newline|'\n'
name|'e1'
op|'.'
name|'wait'
op|'('
op|')'
comment|'# wait for thread t to acquire lock'
newline|'\n'
name|'lock2'
op|'='
name|'lockfile'
op|'.'
name|'LockFile'
op|'('
name|'self'
op|'.'
name|'_testfile'
op|'('
op|')'
op|','
name|'threaded'
op|'='
name|'tbool'
op|')'
newline|'\n'
name|'assert'
name|'lock2'
op|'.'
name|'is_locked'
op|'('
op|')'
newline|'\n'
name|'assert'
name|'not'
name|'lock2'
op|'.'
name|'i_am_locking'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'lock2'
op|'.'
name|'acquire'
op|'('
name|'timeout'
op|'='
op|'-'
number|'1'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'lockfile'
op|'.'
name|'AlreadyLocked'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'lock2'
op|'.'
name|'release'
op|'('
op|')'
newline|'\n'
name|'raise'
name|'AssertionError'
op|'('
string|'"did not raise AlreadyLocked in"'
nl|'\n'
string|'" thread %s"'
op|'%'
nl|'\n'
name|'threading'
op|'.'
name|'current_thread'
op|'('
op|')'
op|'.'
name|'get_name'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'e2'
op|'.'
name|'set'
op|'('
op|')'
comment|'# tell thread t to release lock'
newline|'\n'
name|'t'
op|'.'
name|'join'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_acquire_no_timeout_threaded
dedent|''
name|'def'
name|'test_acquire_no_timeout_threaded'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_acquire_no_timeout_helper'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_acquire_no_timeout_unthreaded
dedent|''
name|'def'
name|'test_acquire_no_timeout_unthreaded'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_acquire_no_timeout_helper'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_acquire_timeout_helper
dedent|''
name|'def'
name|'_test_acquire_timeout_helper'
op|'('
name|'self'
op|','
name|'tbool'
op|')'
op|':'
newline|'\n'
comment|'# Timeout test'
nl|'\n'
indent|'        '
name|'e1'
op|','
name|'e2'
op|'='
name|'threading'
op|'.'
name|'Event'
op|'('
op|')'
op|','
name|'threading'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'t'
op|'='
name|'_in_thread'
op|'('
name|'self'
op|'.'
name|'_lock_wait_unlock'
op|','
name|'e1'
op|','
name|'e2'
op|')'
newline|'\n'
name|'e1'
op|'.'
name|'wait'
op|'('
op|')'
comment|'# wait for thread t to acquire lock'
newline|'\n'
name|'lock2'
op|'='
name|'lockfile'
op|'.'
name|'LockFile'
op|'('
name|'self'
op|'.'
name|'_testfile'
op|'('
op|')'
op|','
name|'threaded'
op|'='
name|'tbool'
op|')'
newline|'\n'
name|'assert'
name|'lock2'
op|'.'
name|'is_locked'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'lock2'
op|'.'
name|'acquire'
op|'('
name|'timeout'
op|'='
number|'0.1'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'lockfile'
op|'.'
name|'LockTimeout'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'lock2'
op|'.'
name|'release'
op|'('
op|')'
newline|'\n'
name|'raise'
name|'AssertionError'
op|'('
string|'"did not raise LockTimeout in thread %s"'
op|'%'
nl|'\n'
name|'threading'
op|'.'
name|'current_thread'
op|'('
op|')'
op|'.'
name|'get_name'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'e2'
op|'.'
name|'set'
op|'('
op|')'
newline|'\n'
name|'t'
op|'.'
name|'join'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_acquire_timeout_threaded
dedent|''
name|'def'
name|'test_acquire_timeout_threaded'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_acquire_timeout_helper'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_acquire_timeout_unthreaded
dedent|''
name|'def'
name|'test_acquire_timeout_unthreaded'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_acquire_timeout_helper'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_release_basic_helper
dedent|''
name|'def'
name|'_test_release_basic_helper'
op|'('
name|'self'
op|','
name|'tbool'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'lock'
op|'='
name|'lockfile'
op|'.'
name|'LockFile'
op|'('
name|'self'
op|'.'
name|'_testfile'
op|'('
op|')'
op|','
name|'threaded'
op|'='
name|'tbool'
op|')'
newline|'\n'
name|'lock'
op|'.'
name|'acquire'
op|'('
op|')'
newline|'\n'
name|'assert'
name|'lock'
op|'.'
name|'is_locked'
op|'('
op|')'
newline|'\n'
name|'lock'
op|'.'
name|'release'
op|'('
op|')'
newline|'\n'
name|'assert'
name|'not'
name|'lock'
op|'.'
name|'is_locked'
op|'('
op|')'
newline|'\n'
name|'assert'
name|'not'
name|'lock'
op|'.'
name|'i_am_locking'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'lock'
op|'.'
name|'release'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'lockfile'
op|'.'
name|'NotLocked'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'except'
name|'lockfile'
op|'.'
name|'NotMyLock'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'AssertionError'
op|'('
string|"'unexpected exception: %s'"
op|'%'
nl|'\n'
name|'lockfile'
op|'.'
name|'NotMyLock'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'AssertionError'
op|'('
string|"'erroneously unlocked file'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_release_basic_threaded
dedent|''
dedent|''
name|'def'
name|'test_release_basic_threaded'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_release_basic_helper'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_release_basic_unthreaded
dedent|''
name|'def'
name|'test_release_basic_unthreaded'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_release_basic_helper'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_release_from_thread_helper
dedent|''
name|'def'
name|'_test_release_from_thread_helper'
op|'('
name|'self'
op|','
name|'tbool'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'e1'
op|','
name|'e2'
op|'='
name|'threading'
op|'.'
name|'Event'
op|'('
op|')'
op|','
name|'threading'
op|'.'
name|'Event'
op|'('
op|')'
newline|'\n'
name|'t'
op|'='
name|'_in_thread'
op|'('
name|'self'
op|'.'
name|'_lock_wait_unlock'
op|','
name|'e1'
op|','
name|'e2'
op|')'
newline|'\n'
name|'e1'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'lock2'
op|'='
name|'lockfile'
op|'.'
name|'LockFile'
op|'('
name|'self'
op|'.'
name|'_testfile'
op|'('
op|')'
op|','
name|'threaded'
op|'='
name|'tbool'
op|')'
newline|'\n'
name|'assert'
name|'lock2'
op|'.'
name|'is_locked'
op|'('
op|')'
newline|'\n'
name|'assert'
name|'not'
name|'lock2'
op|'.'
name|'i_am_locking'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'lock2'
op|'.'
name|'release'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'lockfile'
op|'.'
name|'NotMyLock'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'AssertionError'
op|'('
string|"'erroneously unlocked a file locked'"
nl|'\n'
string|"' by another thread.'"
op|')'
newline|'\n'
dedent|''
name|'e2'
op|'.'
name|'set'
op|'('
op|')'
newline|'\n'
name|'t'
op|'.'
name|'join'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_release_from_thread_threaded
dedent|''
name|'def'
name|'test_release_from_thread_threaded'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_release_from_thread_helper'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_release_from_thread_unthreaded
dedent|''
name|'def'
name|'test_release_from_thread_unthreaded'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_release_from_thread_helper'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_is_locked_helper
dedent|''
name|'def'
name|'_test_is_locked_helper'
op|'('
name|'self'
op|','
name|'tbool'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'lock'
op|'='
name|'lockfile'
op|'.'
name|'LockFile'
op|'('
name|'self'
op|'.'
name|'_testfile'
op|'('
op|')'
op|','
name|'threaded'
op|'='
name|'tbool'
op|')'
newline|'\n'
name|'lock'
op|'.'
name|'acquire'
op|'('
op|')'
newline|'\n'
name|'assert'
name|'lock'
op|'.'
name|'is_locked'
op|'('
op|')'
newline|'\n'
name|'lock'
op|'.'
name|'release'
op|'('
op|')'
newline|'\n'
name|'assert'
name|'not'
name|'lock'
op|'.'
name|'is_locked'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_is_locked_threaded
dedent|''
name|'def'
name|'test_is_locked_threaded'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_is_locked_helper'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_is_locked_unthreaded
dedent|''
name|'def'
name|'test_is_locked_unthreaded'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_is_locked_helper'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_i_am_locking
dedent|''
name|'def'
name|'test_i_am_locking'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'lock1'
op|'='
name|'lockfile'
op|'.'
name|'LockFile'
op|'('
name|'self'
op|'.'
name|'_testfile'
op|'('
op|')'
op|','
name|'threaded'
op|'='
name|'False'
op|')'
newline|'\n'
name|'lock1'
op|'.'
name|'acquire'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'assert'
name|'lock1'
op|'.'
name|'is_locked'
op|'('
op|')'
newline|'\n'
name|'lock2'
op|'='
name|'lockfile'
op|'.'
name|'LockFile'
op|'('
name|'self'
op|'.'
name|'_testfile'
op|'('
op|')'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'assert'
name|'lock1'
op|'.'
name|'i_am_locking'
op|'('
op|')'
newline|'\n'
name|'assert'
name|'not'
name|'lock2'
op|'.'
name|'i_am_locking'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'lock2'
op|'.'
name|'acquire'
op|'('
name|'timeout'
op|'='
number|'2'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'lockfile'
op|'.'
name|'LockTimeout'
op|':'
newline|'\n'
indent|'                    '
name|'lock2'
op|'.'
name|'break_lock'
op|'('
op|')'
newline|'\n'
name|'assert'
name|'not'
name|'lock2'
op|'.'
name|'is_locked'
op|'('
op|')'
newline|'\n'
name|'assert'
name|'not'
name|'lock1'
op|'.'
name|'is_locked'
op|'('
op|')'
newline|'\n'
name|'lock2'
op|'.'
name|'acquire'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'AssertionError'
op|'('
string|"'expected LockTimeout...'"
op|')'
newline|'\n'
dedent|''
name|'assert'
name|'not'
name|'lock1'
op|'.'
name|'i_am_locking'
op|'('
op|')'
newline|'\n'
name|'assert'
name|'lock2'
op|'.'
name|'i_am_locking'
op|'('
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'lock2'
op|'.'
name|'i_am_locking'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'lock2'
op|'.'
name|'release'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'lock1'
op|'.'
name|'i_am_locking'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'lock1'
op|'.'
name|'release'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_test_break_lock_helper
dedent|''
dedent|''
dedent|''
name|'def'
name|'_test_break_lock_helper'
op|'('
name|'self'
op|','
name|'tbool'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'lock'
op|'='
name|'lockfile'
op|'.'
name|'LockFile'
op|'('
name|'self'
op|'.'
name|'_testfile'
op|'('
op|')'
op|','
name|'threaded'
op|'='
name|'tbool'
op|')'
newline|'\n'
name|'lock'
op|'.'
name|'acquire'
op|'('
op|')'
newline|'\n'
name|'assert'
name|'lock'
op|'.'
name|'is_locked'
op|'('
op|')'
newline|'\n'
name|'lock2'
op|'='
name|'lockfile'
op|'.'
name|'LockFile'
op|'('
name|'self'
op|'.'
name|'_testfile'
op|'('
op|')'
op|','
name|'threaded'
op|'='
name|'tbool'
op|')'
newline|'\n'
name|'assert'
name|'lock2'
op|'.'
name|'is_locked'
op|'('
op|')'
newline|'\n'
name|'lock2'
op|'.'
name|'break_lock'
op|'('
op|')'
newline|'\n'
name|'assert'
name|'not'
name|'lock2'
op|'.'
name|'is_locked'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'lock'
op|'.'
name|'release'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'lockfile'
op|'.'
name|'NotLocked'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'AssertionError'
op|'('
string|"'break lock failed'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_break_lock_threaded
dedent|''
dedent|''
name|'def'
name|'test_break_lock_threaded'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_break_lock_helper'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_break_lock_unthreaded
dedent|''
name|'def'
name|'test_break_lock_unthreaded'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_test_break_lock_helper'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_lock_wait_unlock
dedent|''
name|'def'
name|'_lock_wait_unlock'
op|'('
name|'self'
op|','
name|'event1'
op|','
name|'event2'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Lock from another thread.  Helper for tests."""'
newline|'\n'
name|'l'
op|'='
name|'lockfile'
op|'.'
name|'LockFile'
op|'('
name|'self'
op|'.'
name|'_testfile'
op|'('
op|')'
op|')'
newline|'\n'
name|'l'
op|'.'
name|'acquire'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'event1'
op|'.'
name|'set'
op|'('
op|')'
comment|"# we're in,"
newline|'\n'
name|'event2'
op|'.'
name|'wait'
op|'('
op|')'
comment|"# wait for boss's permission to leave"
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'l'
op|'.'
name|'release'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_enter
dedent|''
dedent|''
name|'def'
name|'test_enter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'lock'
op|'='
name|'lockfile'
op|'.'
name|'LockFile'
op|'('
name|'self'
op|'.'
name|'_testfile'
op|'('
op|')'
op|')'
newline|'\n'
name|'lock'
op|'.'
name|'acquire'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'assert'
name|'lock'
op|'.'
name|'is_locked'
op|'('
op|')'
op|','
string|'"Not locked after acquire!"'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'lock'
op|'.'
name|'release'
op|'('
op|')'
newline|'\n'
dedent|''
name|'assert'
name|'not'
name|'lock'
op|'.'
name|'is_locked'
op|'('
op|')'
op|','
string|'"still locked after release!"'
newline|'\n'
nl|'\n'
DECL|function|_in_thread
dedent|''
dedent|''
name|'def'
name|'_in_thread'
op|'('
name|'func'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Execute func(*args, **kwargs) after dt seconds. Helper for tests."""'
newline|'\n'
DECL|function|_f
name|'def'
name|'_f'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'func'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'t'
op|'='
name|'threading'
op|'.'
name|'Thread'
op|'('
name|'target'
op|'='
name|'_f'
op|','
name|'name'
op|'='
string|"'/*/*'"
op|')'
newline|'\n'
name|'t'
op|'.'
name|'setDaemon'
op|'('
name|'True'
op|')'
newline|'\n'
name|'t'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'return'
name|'t'
newline|'\n'
nl|'\n'
dedent|''
endmarker|''
end_unit
