begin_unit
name|'from'
name|'__future__'
name|'import'
name|'absolute_import'
newline|'\n'
nl|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
nl|'\n'
name|'from'
op|'.'
name|'import'
op|'('
name|'LockBase'
op|','
name|'LockFailed'
op|','
name|'NotLocked'
op|','
name|'NotMyLock'
op|','
name|'LockTimeout'
op|','
nl|'\n'
name|'AlreadyLocked'
op|')'
newline|'\n'
nl|'\n'
DECL|class|LinkLockFile
name|'class'
name|'LinkLockFile'
op|'('
name|'LockBase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Lock access to a file using atomic property of link(2).\n\n    >>> lock = LinkLockFile(\'somefile\')\n    >>> lock = LinkLockFile(\'somefile\', threaded=False)\n    """'
newline|'\n'
nl|'\n'
DECL|member|acquire
name|'def'
name|'acquire'
op|'('
name|'self'
op|','
name|'timeout'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'open'
op|'('
name|'self'
op|'.'
name|'unique_name'
op|','
string|'"wb"'
op|')'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'IOError'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'LockFailed'
op|'('
string|'"failed to create %s"'
op|'%'
name|'self'
op|'.'
name|'unique_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'end_time'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'if'
name|'timeout'
name|'is'
name|'not'
name|'None'
name|'and'
name|'timeout'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'end_time'
op|'+='
name|'timeout'
newline|'\n'
nl|'\n'
dedent|''
name|'while'
name|'True'
op|':'
newline|'\n'
comment|'# Try and create a hard link to it.'
nl|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|"'making a hard link %s to %s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'unique_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'lock_file'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'link'
op|'('
name|'self'
op|'.'
name|'unique_name'
op|','
name|'self'
op|'.'
name|'lock_file'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|':'
newline|'\n'
comment|"# Link creation failed.  Maybe we've double-locked?"
nl|'\n'
indent|'                '
name|'nlinks'
op|'='
name|'os'
op|'.'
name|'stat'
op|'('
name|'self'
op|'.'
name|'unique_name'
op|')'
op|'.'
name|'st_nlink'
newline|'\n'
name|'if'
name|'nlinks'
op|'=='
number|'2'
op|':'
newline|'\n'
comment|"# The original link plus the one I created == 2.  We're"
nl|'\n'
comment|'# good to go.'
nl|'\n'
indent|'                    '
name|'return'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# Otherwise the lock creation failed.'
nl|'\n'
indent|'                    '
name|'if'
name|'timeout'
name|'is'
name|'not'
name|'None'
name|'and'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'>'
name|'end_time'
op|':'
newline|'\n'
indent|'                        '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'self'
op|'.'
name|'unique_name'
op|')'
newline|'\n'
name|'if'
name|'timeout'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'                            '
name|'raise'
name|'LockTimeout'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                            '
name|'raise'
name|'AlreadyLocked'
newline|'\n'
dedent|''
dedent|''
name|'time'
op|'.'
name|'sleep'
op|'('
name|'timeout'
name|'is'
name|'not'
name|'None'
name|'and'
name|'timeout'
op|'/'
number|'10'
name|'or'
number|'0.1'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
comment|"# Link creation succeeded.  We're good to go."
nl|'\n'
indent|'                '
name|'return'
newline|'\n'
nl|'\n'
DECL|member|release
dedent|''
dedent|''
dedent|''
name|'def'
name|'release'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'is_locked'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'NotLocked'
newline|'\n'
dedent|''
name|'elif'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'unique_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'NotMyLock'
newline|'\n'
dedent|''
name|'os'
op|'.'
name|'unlink'
op|'('
name|'self'
op|'.'
name|'unique_name'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'unlink'
op|'('
name|'self'
op|'.'
name|'lock_file'
op|')'
newline|'\n'
nl|'\n'
DECL|member|is_locked
dedent|''
name|'def'
name|'is_locked'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'lock_file'
op|')'
newline|'\n'
nl|'\n'
DECL|member|i_am_locking
dedent|''
name|'def'
name|'i_am_locking'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'('
name|'self'
op|'.'
name|'is_locked'
op|'('
op|')'
name|'and'
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'unique_name'
op|')'
name|'and'
nl|'\n'
name|'os'
op|'.'
name|'stat'
op|'('
name|'self'
op|'.'
name|'unique_name'
op|')'
op|'.'
name|'st_nlink'
op|'=='
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|break_lock
dedent|''
name|'def'
name|'break_lock'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'lock_file'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'self'
op|'.'
name|'lock_file'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
