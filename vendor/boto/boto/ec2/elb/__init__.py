begin_unit
comment|'# Copyright (c) 2006-2009 Mitch Garnaat http://garnaat.org/'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Permission is hereby granted, free of charge, to any person obtaining a'
nl|'\n'
comment|'# copy of this software and associated documentation files (the'
nl|'\n'
comment|'# "Software"), to deal in the Software without restriction, including'
nl|'\n'
comment|'# without limitation the rights to use, copy, modify, merge, publish, dis-'
nl|'\n'
comment|'# tribute, sublicense, and/or sell copies of the Software, and to permit'
nl|'\n'
comment|'# persons to whom the Software is furnished to do so, subject to the fol-'
nl|'\n'
comment|'# lowing conditions:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# The above copyright notice and this permission notice shall be included'
nl|'\n'
comment|'# in all copies or substantial portions of the Software.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS'
nl|'\n'
comment|'# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABIL-'
nl|'\n'
comment|'# ITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT'
nl|'\n'
comment|'# SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,'
nl|'\n'
comment|'# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,'
nl|'\n'
comment|'# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS'
nl|'\n'
comment|'# IN THE SOFTWARE.'
nl|'\n'
comment|'#'
nl|'\n'
string|'"""\nThis module provides an interface to the Elastic Compute Cloud (EC2)\nload balancing service from AWS.\n"""'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'connection'
name|'import'
name|'AWSQueryConnection'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'ec2'
op|'.'
name|'instanceinfo'
name|'import'
name|'InstanceInfo'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'ec2'
op|'.'
name|'elb'
op|'.'
name|'loadbalancer'
name|'import'
name|'LoadBalancer'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'ec2'
op|'.'
name|'elb'
op|'.'
name|'instancestate'
name|'import'
name|'InstanceState'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'ec2'
op|'.'
name|'elb'
op|'.'
name|'healthcheck'
name|'import'
name|'HealthCheck'
newline|'\n'
name|'import'
name|'boto'
newline|'\n'
nl|'\n'
DECL|class|ELBConnection
name|'class'
name|'ELBConnection'
op|'('
name|'AWSQueryConnection'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|APIVersion
indent|'    '
name|'APIVersion'
op|'='
name|'boto'
op|'.'
name|'config'
op|'.'
name|'get'
op|'('
string|"'Boto'"
op|','
string|"'elb_version'"
op|','
string|"'2009-05-15'"
op|')'
newline|'\n'
DECL|variable|Endpoint
name|'Endpoint'
op|'='
name|'boto'
op|'.'
name|'config'
op|'.'
name|'get'
op|'('
string|"'Boto'"
op|','
string|"'elb_endpoint'"
op|','
string|"'elasticloadbalancing.amazonaws.com'"
op|')'
newline|'\n'
DECL|variable|SignatureVersion
name|'SignatureVersion'
op|'='
string|"'1'"
newline|'\n'
comment|'#ResponseError = EC2ResponseError'
nl|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'aws_access_key_id'
op|'='
name|'None'
op|','
name|'aws_secret_access_key'
op|'='
name|'None'
op|','
nl|'\n'
name|'is_secure'
op|'='
name|'False'
op|','
name|'port'
op|'='
name|'None'
op|','
name|'proxy'
op|'='
name|'None'
op|','
name|'proxy_port'
op|'='
name|'None'
op|','
nl|'\n'
name|'proxy_user'
op|'='
name|'None'
op|','
name|'proxy_pass'
op|'='
name|'None'
op|','
name|'host'
op|'='
name|'Endpoint'
op|','
name|'debug'
op|'='
number|'0'
op|','
nl|'\n'
name|'https_connection_factory'
op|'='
name|'None'
op|','
name|'path'
op|'='
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Init method to create a new connection to EC2 Load Balancing Service.\n\n        B{Note:} The host argument is overridden by the host specified in the boto configuration file.\n        """'
newline|'\n'
name|'AWSQueryConnection'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'aws_access_key_id'
op|','
name|'aws_secret_access_key'
op|','
nl|'\n'
name|'is_secure'
op|','
name|'port'
op|','
name|'proxy'
op|','
name|'proxy_port'
op|','
name|'proxy_user'
op|','
name|'proxy_pass'
op|','
nl|'\n'
name|'host'
op|','
name|'debug'
op|','
name|'https_connection_factory'
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|build_list_params
dedent|''
name|'def'
name|'build_list_params'
op|'('
name|'self'
op|','
name|'params'
op|','
name|'items'
op|','
name|'label'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'items'
op|','
name|'str'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'items'
op|'='
op|'['
name|'items'
op|']'
newline|'\n'
dedent|''
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'items'
op|')'
op|'+'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
name|'label'
op|'%'
name|'i'
op|']'
op|'='
name|'items'
op|'['
name|'i'
op|'-'
number|'1'
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_all_load_balancers
dedent|''
dedent|''
name|'def'
name|'get_all_load_balancers'
op|'('
name|'self'
op|','
name|'load_balancer_name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Retrieve all load balancers associated with your account.\n\n        :type load_balancer_names: str\n        :param load_balancer_names: An optional filter string to get only one ELB\n\n        :rtype: list\n        :return: A list of :class:`boto.ec2.elb.loadbalancer.LoadBalancer`\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'load_balancer_name'
op|':'
newline|'\n'
comment|"#self.build_list_params(params, load_balancer_names, 'LoadBalancerName.%d')"
nl|'\n'
indent|'            '
name|'params'
op|'['
string|"'LoadBalancerName'"
op|']'
op|'='
name|'load_balancer_name'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'get_list'
op|'('
string|"'DescribeLoadBalancers'"
op|','
name|'params'
op|','
op|'['
op|'('
string|"'member'"
op|','
name|'LoadBalancer'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|create_load_balancer
dedent|''
name|'def'
name|'create_load_balancer'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'zones'
op|','
name|'listeners'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create a new load balancer for your account.\n\n        :type name: string\n        :param name: The mnemonic name associated with the new load balancer\n\n        :type zones: List of strings\n        :param zones: The names of the availability zone(s) to add.\n\n        :type listeners: List of tuples\n        :param listeners: Each tuple contains three values.\n                          (LoadBalancerPortNumber, InstancePortNumber, Protocol)\n                          where LoadBalancerPortNumber and InstancePortNumber are\n                          integer values between 1 and 65535 and Protocol is a\n                          string containing either \'TCP\' or \'HTTP\'.\n\n        :rtype: :class:`boto.ec2.elb.loadbalancer.LoadBalancer`\n        :return: The newly created :class:`boto.ec2.elb.loadbalancer.LoadBalancer`\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'LoadBalancerName'"
op|':'
name|'name'
op|'}'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'listeners'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'Listeners.member.%d.LoadBalancerPort'"
op|'%'
op|'('
name|'i'
op|'+'
number|'1'
op|')'
op|']'
op|'='
name|'listeners'
op|'['
name|'i'
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'params'
op|'['
string|"'Listeners.member.%d.InstancePort'"
op|'%'
op|'('
name|'i'
op|'+'
number|'1'
op|')'
op|']'
op|'='
name|'listeners'
op|'['
name|'i'
op|']'
op|'['
number|'1'
op|']'
newline|'\n'
name|'params'
op|'['
string|"'Listeners.member.%d.Protocol'"
op|'%'
op|'('
name|'i'
op|'+'
number|'1'
op|')'
op|']'
op|'='
name|'listeners'
op|'['
name|'i'
op|']'
op|'['
number|'2'
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'build_list_params'
op|'('
name|'params'
op|','
name|'zones'
op|','
string|"'AvailabilityZones.member.%d'"
op|')'
newline|'\n'
name|'load_balancer'
op|'='
name|'self'
op|'.'
name|'get_object'
op|'('
string|"'CreateLoadBalancer'"
op|','
name|'params'
op|','
name|'LoadBalancer'
op|')'
newline|'\n'
name|'load_balancer'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'load_balancer'
op|'.'
name|'listeners'
op|'='
name|'listeners'
newline|'\n'
name|'load_balancer'
op|'.'
name|'availability_zones'
op|'='
name|'zones'
newline|'\n'
name|'return'
name|'load_balancer'
newline|'\n'
nl|'\n'
DECL|member|delete_load_balancer
dedent|''
name|'def'
name|'delete_load_balancer'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Delete a Load Balancer from your account.\n\n        :type name: string\n        :param name: The name of the Load Balancer to delete\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'LoadBalancerName'"
op|':'
name|'name'
op|'}'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'get_status'
op|'('
string|"'DeleteLoadBalancer'"
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|enable_availability_zones
dedent|''
name|'def'
name|'enable_availability_zones'
op|'('
name|'self'
op|','
name|'load_balancer_name'
op|','
name|'zones_to_add'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Add availability zones to an existing Load Balancer\n        All zones must be in the same region as the Load Balancer\n        Adding zones that are already registered with the Load Balancer\n        has no effect.\n\n        :type load_balancer_name: string\n        :param load_balancer_name: The name of the Load Balancer\n\n        :type zones: List of strings\n        :param zones: The name of the zone(s) to add.\n\n        :rtype: List of strings\n        :return: An updated list of zones for this Load Balancer.\n\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'LoadBalancerName'"
op|':'
name|'load_balancer_name'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'build_list_params'
op|'('
name|'params'
op|','
name|'zones_to_add'
op|','
string|"'AvailabilityZones.member.%d'"
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'get_list'
op|'('
string|"'EnableAvailabilityZonesForLoadBalancer'"
op|','
name|'params'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|disable_availability_zones
dedent|''
name|'def'
name|'disable_availability_zones'
op|'('
name|'self'
op|','
name|'load_balancer_name'
op|','
name|'zones_to_remove'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Remove availability zones from an existing Load Balancer.\n        All zones must be in the same region as the Load Balancer.\n        Removing zones that are not registered with the Load Balancer\n        has no effect.\n        You cannot remove all zones from an Load Balancer.\n\n        :type load_balancer_name: string\n        :param load_balancer_name: The name of the Load Balancer\n\n        :type zones: List of strings\n        :param zones: The name of the zone(s) to remove.\n\n        :rtype: List of strings\n        :return: An updated list of zones for this Load Balancer.\n\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'LoadBalancerName'"
op|':'
name|'load_balancer_name'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'build_list_params'
op|'('
name|'params'
op|','
name|'zones_to_remove'
op|','
string|"'AvailabilityZones.member.%d'"
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'get_list'
op|'('
string|"'DisableAvailabilityZonesForLoadBalancer'"
op|','
name|'params'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|register_instances
dedent|''
name|'def'
name|'register_instances'
op|'('
name|'self'
op|','
name|'load_balancer_name'
op|','
name|'instances'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Add new Instances to an existing Load Balancer.\n\n        :type load_balancer_name: string\n        :param load_balancer_name: The name of the Load Balancer\n\n        :type instances: List of strings\n        :param instances: The instance ID\'s of the EC2 instances to add.\n\n        :rtype: List of strings\n        :return: An updated list of instances for this Load Balancer.\n\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'LoadBalancerName'"
op|':'
name|'load_balancer_name'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'build_list_params'
op|'('
name|'params'
op|','
name|'instances'
op|','
string|"'Instances.member.%d.InstanceId'"
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'get_list'
op|'('
string|"'RegisterInstancesWithLoadBalancer'"
op|','
name|'params'
op|','
op|'['
op|'('
string|"'member'"
op|','
name|'InstanceInfo'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|deregister_instances
dedent|''
name|'def'
name|'deregister_instances'
op|'('
name|'self'
op|','
name|'load_balancer_name'
op|','
name|'instances'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Remove Instances from an existing Load Balancer.\n\n        :type load_balancer_name: string\n        :param load_balancer_name: The name of the Load Balancer\n\n        :type instances: List of strings\n        :param instances: The instance ID\'s of the EC2 instances to remove.\n\n        :rtype: List of strings\n        :return: An updated list of instances for this Load Balancer.\n\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'LoadBalancerName'"
op|':'
name|'load_balancer_name'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'build_list_params'
op|'('
name|'params'
op|','
name|'instances'
op|','
string|"'Instances.member.%d.InstanceId'"
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'get_list'
op|'('
string|"'DeregisterInstancesFromLoadBalancer'"
op|','
name|'params'
op|','
op|'['
op|'('
string|"'member'"
op|','
name|'InstanceInfo'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|describe_instance_health
dedent|''
name|'def'
name|'describe_instance_health'
op|'('
name|'self'
op|','
name|'load_balancer_name'
op|','
name|'instances'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get current state of all Instances registered to an Load Balancer.\n\n        :type load_balancer_name: string\n        :param load_balancer_name: The name of the Load Balancer\n\n        :type instances: List of strings\n        :param instances: The instance ID\'s of the EC2 instances\n                          to return status for.  If not provided,\n                          the state of all instances will be returned.\n\n        :rtype: List of :class:`boto.ec2.elb.instancestate.InstanceState`\n        :return: list of state info for instances in this Load Balancer.\n\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'LoadBalancerName'"
op|':'
name|'load_balancer_name'
op|'}'
newline|'\n'
name|'if'
name|'instances'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'build_list_params'
op|'('
name|'params'
op|','
name|'instances'
op|','
string|"'instances.member.%d'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'get_list'
op|'('
string|"'DescribeInstanceHealth'"
op|','
name|'params'
op|','
op|'['
op|'('
string|"'member'"
op|','
name|'InstanceState'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|configure_health_check
dedent|''
name|'def'
name|'configure_health_check'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'health_check'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Define a health check for the EndPoints.\n\n        :type name: string\n        :param name: The mnemonic name associated with the new access point\n\n        :type health_check: :class:`boto.ec2.elb.healthcheck.HealthCheck`\n        :param health_check: A HealthCheck object populated with the desired\n                             values.\n\n        :rtype: :class:`boto.ec2.elb.healthcheck.HealthCheck`\n        :return: The updated :class:`boto.ec2.elb.healthcheck.HealthCheck`\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'LoadBalancerName'"
op|':'
name|'name'
op|','
nl|'\n'
string|"'HealthCheck.Timeout'"
op|':'
name|'health_check'
op|'.'
name|'timeout'
op|','
nl|'\n'
string|"'HealthCheck.Target'"
op|':'
name|'health_check'
op|'.'
name|'target'
op|','
nl|'\n'
string|"'HealthCheck.Interval'"
op|':'
name|'health_check'
op|'.'
name|'interval'
op|','
nl|'\n'
string|"'HealthCheck.UnhealthyThreshold'"
op|':'
name|'health_check'
op|'.'
name|'unhealthy_threshold'
op|','
nl|'\n'
string|"'HealthCheck.HealthyThreshold'"
op|':'
name|'health_check'
op|'.'
name|'healthy_threshold'
op|'}'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'get_object'
op|'('
string|"'ConfigureHealthCheck'"
op|','
name|'params'
op|','
name|'HealthCheck'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
