begin_unit
comment|'# Copyright (c) 2006,2007 Mitch Garnaat http://garnaat.org/'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Permission is hereby granted, free of charge, to any person obtaining a'
nl|'\n'
comment|'# copy of this software and associated documentation files (the'
nl|'\n'
comment|'# "Software"), to deal in the Software without restriction, including'
nl|'\n'
comment|'# without limitation the rights to use, copy, modify, merge, publish, dis-'
nl|'\n'
comment|'# tribute, sublicense, and/or sell copies of the Software, and to permit'
nl|'\n'
comment|'# persons to whom the Software is furnished to do so, subject to the fol-'
nl|'\n'
comment|'# lowing conditions:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# The above copyright notice and this permission notice shall be included'
nl|'\n'
comment|'# in all copies or substantial portions of the Software.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS'
nl|'\n'
comment|'# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABIL-'
nl|'\n'
comment|'# ITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT'
nl|'\n'
comment|'# SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, '
nl|'\n'
comment|'# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,'
nl|'\n'
comment|'# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS'
nl|'\n'
comment|'# IN THE SOFTWARE.'
nl|'\n'
nl|'\n'
name|'from'
name|'boto'
op|'.'
name|'ec2'
op|'.'
name|'ec2object'
name|'import'
name|'EC2Object'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'ec2'
op|'.'
name|'blockdevicemapping'
name|'import'
name|'BlockDeviceMapping'
newline|'\n'
nl|'\n'
DECL|class|ProductCodes
name|'class'
name|'ProductCodes'
op|'('
name|'list'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|startElement
indent|'    '
name|'def'
name|'startElement'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'attrs'
op|','
name|'connection'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|endElement
dedent|''
name|'def'
name|'endElement'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'value'
op|','
name|'connection'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'name'
op|'=='
string|"'productCode'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'append'
op|'('
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|class|Image
dedent|''
dedent|''
dedent|''
name|'class'
name|'Image'
op|'('
name|'EC2Object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Represents an EC2 Image\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'connection'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'EC2Object'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'connection'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'id'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'location'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'state'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'ownerId'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'owner_alias'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'is_public'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'architecture'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'platform'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'type'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'kernel_id'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'ramdisk_id'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'description'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'product_codes'
op|'='
name|'ProductCodes'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'block_device_mapping'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'root_device_type'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'root_device_name'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'Image:%s'"
op|'%'
name|'self'
op|'.'
name|'id'
newline|'\n'
nl|'\n'
DECL|member|startElement
dedent|''
name|'def'
name|'startElement'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'attrs'
op|','
name|'connection'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'name'
op|'=='
string|"'blockDeviceMapping'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'block_device_mapping'
op|'='
name|'BlockDeviceMapping'
op|'('
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'block_device_mapping'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'productCodes'"
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'product_codes'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|endElement
dedent|''
dedent|''
name|'def'
name|'endElement'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'value'
op|','
name|'connection'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'name'
op|'=='
string|"'imageId'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'id'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'imageLocation'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'location'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'imageState'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'state'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'imageOwnerId'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'ownerId'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'isPublic'"
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'value'
op|'=='
string|"'false'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'is_public'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'elif'
name|'value'
op|'=='
string|"'true'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'is_public'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
nl|'\n'
string|"'Unexpected value of isPublic %s for image %s'"
op|'%'
op|'('
nl|'\n'
name|'value'
op|','
nl|'\n'
name|'self'
op|'.'
name|'id'
nl|'\n'
op|')'
nl|'\n'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'architecture'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'architecture'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'imageType'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'type'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'kernelId'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'kernel_id'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'ramdiskId'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'ramdisk_id'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'imageOwnerAlias'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'owner_alias'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'platform'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'platform'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'name'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'name'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'description'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'description'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'rootDeviceType'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'root_device_type'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'rootDeviceName'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'root_device_name'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'setattr'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|run
dedent|''
dedent|''
name|'def'
name|'run'
op|'('
name|'self'
op|','
name|'min_count'
op|'='
number|'1'
op|','
name|'max_count'
op|'='
number|'1'
op|','
name|'key_name'
op|'='
name|'None'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'None'
op|','
name|'user_data'
op|'='
name|'None'
op|','
nl|'\n'
name|'addressing_type'
op|'='
name|'None'
op|','
name|'instance_type'
op|'='
string|"'m1.small'"
op|','
name|'placement'
op|'='
name|'None'
op|','
nl|'\n'
name|'kernel_id'
op|'='
name|'None'
op|','
name|'ramdisk_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'monitoring_enabled'
op|'='
name|'False'
op|','
name|'subnet_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'block_device_map'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Runs this instance.\n        \n        :type min_count: int\n        :param min_count: The minimum number of instances to start\n        \n        :type max_count: int\n        :param max_count: The maximum number of instances to start\n        \n        :type key_name: string\n        :param key_name: The keypair to run this instance with.\n        \n        :type security_groups: \n        :param security_groups:\n        \n        :type user_data: \n        :param user_data:\n        \n        :type addressing_type: \n        :param daddressing_type:\n        \n        :type instance_type: string\n        :param instance_type: The type of instance to run (m1.small, m1.large, m1.xlarge)\n        \n        :type placement: \n        :param placement:\n\n        :type kernel_id: string\n        :param kernel_id: The ID of the kernel with which to launch the instances\n        \n        :type ramdisk_id: string\n        :param ramdisk_id: The ID of the RAM disk with which to launch the instances\n        \n        :type monitoring_enabled: bool\n        :param monitoring_enabled: Enable CloudWatch monitoring on the instance.\n        \n        :type subnet_id: string\n        :param subnet_id: The subnet ID within which to launch the instances for VPC.\n        \n        :type block_device_map: :class:`boto.ec2.blockdevicemapping.BlockDeviceMapping`\n        :param block_device_map: A BlockDeviceMapping data structure\n                                 describing the EBS volumes associated\n                                 with the Image.\n\n        :rtype: Reservation\n        :return: The :class:`boto.ec2.instance.Reservation` associated with the request for machines\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'run_instances'
op|'('
name|'self'
op|'.'
name|'id'
op|','
name|'min_count'
op|','
name|'max_count'
op|','
nl|'\n'
name|'key_name'
op|','
name|'security_groups'
op|','
nl|'\n'
name|'user_data'
op|','
name|'addressing_type'
op|','
nl|'\n'
name|'instance_type'
op|','
name|'placement'
op|','
nl|'\n'
name|'kernel_id'
op|','
name|'ramdisk_id'
op|','
nl|'\n'
name|'monitoring_enabled'
op|','
name|'subnet_id'
op|','
nl|'\n'
name|'block_device_map'
op|')'
newline|'\n'
nl|'\n'
DECL|member|deregister
dedent|''
name|'def'
name|'deregister'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'deregister_image'
op|'('
name|'self'
op|'.'
name|'id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_launch_permissions
dedent|''
name|'def'
name|'get_launch_permissions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'img_attrs'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'get_image_attribute'
op|'('
name|'self'
op|'.'
name|'id'
op|','
nl|'\n'
string|"'launchPermission'"
op|')'
newline|'\n'
name|'return'
name|'img_attrs'
op|'.'
name|'attrs'
newline|'\n'
nl|'\n'
DECL|member|set_launch_permissions
dedent|''
name|'def'
name|'set_launch_permissions'
op|'('
name|'self'
op|','
name|'user_ids'
op|'='
name|'None'
op|','
name|'group_names'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'modify_image_attribute'
op|'('
name|'self'
op|'.'
name|'id'
op|','
nl|'\n'
string|"'launchPermission'"
op|','
nl|'\n'
string|"'add'"
op|','
nl|'\n'
name|'user_ids'
op|','
nl|'\n'
name|'group_names'
op|')'
newline|'\n'
nl|'\n'
DECL|member|remove_launch_permissions
dedent|''
name|'def'
name|'remove_launch_permissions'
op|'('
name|'self'
op|','
name|'user_ids'
op|'='
name|'None'
op|','
name|'group_names'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'modify_image_attribute'
op|'('
name|'self'
op|'.'
name|'id'
op|','
nl|'\n'
string|"'launchPermission'"
op|','
nl|'\n'
string|"'remove'"
op|','
nl|'\n'
name|'user_ids'
op|','
nl|'\n'
name|'group_names'
op|')'
newline|'\n'
nl|'\n'
DECL|member|reset_launch_attributes
dedent|''
name|'def'
name|'reset_launch_attributes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'reset_image_attribute'
op|'('
name|'self'
op|'.'
name|'id'
op|','
nl|'\n'
string|"'launchPermission'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_kernel
dedent|''
name|'def'
name|'get_kernel'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'img_attrs'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'get_image_attribute'
op|'('
name|'self'
op|'.'
name|'id'
op|','
string|"'kernel'"
op|')'
newline|'\n'
name|'return'
name|'img_attrs'
op|'.'
name|'kernel'
newline|'\n'
nl|'\n'
DECL|member|get_ramdisk
dedent|''
name|'def'
name|'get_ramdisk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'img_attrs'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'get_image_attribute'
op|'('
name|'self'
op|'.'
name|'id'
op|','
string|"'ramdisk'"
op|')'
newline|'\n'
name|'return'
name|'img_attrs'
op|'.'
name|'ramdisk'
newline|'\n'
nl|'\n'
DECL|class|ImageAttribute
dedent|''
dedent|''
name|'class'
name|'ImageAttribute'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'parent'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'name'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'kernel'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'ramdisk'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'attrs'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|startElement
dedent|''
name|'def'
name|'startElement'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'attrs'
op|','
name|'connection'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'name'
op|'=='
string|"'blockDeviceMapping'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'attrs'
op|'['
string|"'block_device_mapping'"
op|']'
op|'='
name|'BlockDeviceMapping'
op|'('
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'attrs'
op|'['
string|"'block_device_mapping'"
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|endElement
dedent|''
dedent|''
name|'def'
name|'endElement'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'value'
op|','
name|'connection'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'name'
op|'=='
string|"'launchPermission'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'name'
op|'='
string|"'launch_permission'"
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'group'"
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'attrs'
op|'.'
name|'has_key'
op|'('
string|"'groups'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'attrs'
op|'['
string|"'groups'"
op|']'
op|'.'
name|'append'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'attrs'
op|'['
string|"'groups'"
op|']'
op|'='
op|'['
name|'value'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'userId'"
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'attrs'
op|'.'
name|'has_key'
op|'('
string|"'user_ids'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'attrs'
op|'['
string|"'user_ids'"
op|']'
op|'.'
name|'append'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'attrs'
op|'['
string|"'user_ids'"
op|']'
op|'='
op|'['
name|'value'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'productCode'"
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'attrs'
op|'.'
name|'has_key'
op|'('
string|"'product_codes'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'attrs'
op|'['
string|"'product_codes'"
op|']'
op|'.'
name|'append'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'attrs'
op|'['
string|"'product_codes'"
op|']'
op|'='
op|'['
name|'value'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'imageId'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'image_id'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'kernel'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'kernel'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'ramdisk'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'ramdisk'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'setattr'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'value'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
