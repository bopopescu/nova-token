begin_unit
comment|'# Copyright (c) 2006-2009 Mitch Garnaat http://garnaat.org/'
nl|'\n'
comment|'# Copyright (c) 2008 rPath, Inc.'
nl|'\n'
comment|'# Copyright (c) 2009 The Echo Nest Corporation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Permission is hereby granted, free of charge, to any person obtaining a'
nl|'\n'
comment|'# copy of this software and associated documentation files (the'
nl|'\n'
comment|'# "Software"), to deal in the Software without restriction, including'
nl|'\n'
comment|'# without limitation the rights to use, copy, modify, merge, publish, dis-'
nl|'\n'
comment|'# tribute, sublicense, and/or sell copies of the Software, and to permit'
nl|'\n'
comment|'# persons to whom the Software is furnished to do so, subject to the fol-'
nl|'\n'
comment|'# lowing conditions:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# The above copyright notice and this permission notice shall be included'
nl|'\n'
comment|'# in all copies or substantial portions of the Software.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS'
nl|'\n'
comment|'# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABIL-'
nl|'\n'
comment|'# ITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT'
nl|'\n'
comment|'# SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,'
nl|'\n'
comment|'# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,'
nl|'\n'
comment|'# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS'
nl|'\n'
comment|'# IN THE SOFTWARE.'
nl|'\n'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Parts of this code were copied or derived from sample code supplied by AWS.'
nl|'\n'
comment|'# The following notice applies to that code.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#  This software code is made available "AS IS" without warranties of any'
nl|'\n'
comment|'#  kind.  You may copy, display, modify and redistribute the software'
nl|'\n'
comment|'#  code either by itself or as incorporated into your code; provided that'
nl|'\n'
comment|'#  you do not remove any proprietary notices.  Your use of this software'
nl|'\n'
comment|'#  code is at your own risk and you waive any claim against Amazon'
nl|'\n'
comment|'#  Digital Services, Inc. or its affiliates with respect to your use of'
nl|'\n'
comment|'#  this software code. (c) 2006 Amazon Digital Services, Inc. or its'
nl|'\n'
comment|'#  affiliates.'
nl|'\n'
nl|'\n'
string|'"""\nHandles basic connections to AWS\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'base64'
newline|'\n'
name|'import'
name|'hmac'
newline|'\n'
name|'import'
name|'httplib'
newline|'\n'
name|'import'
name|'socket'
op|','
name|'errno'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'urllib'
op|','
name|'urlparse'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'xml'
op|'.'
name|'sax'
newline|'\n'
name|'import'
name|'Queue'
newline|'\n'
name|'import'
name|'boto'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'exception'
name|'import'
name|'BotoClientError'
op|','
name|'BotoServerError'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'resultset'
name|'import'
name|'ResultSet'
newline|'\n'
name|'import'
name|'boto'
op|'.'
name|'utils'
newline|'\n'
name|'from'
name|'boto'
name|'import'
name|'config'
op|','
name|'UserAgent'
op|','
name|'handler'
newline|'\n'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# the following is necessary because of the incompatibilities'
nl|'\n'
comment|'# between Python 2.4, 2.5, and 2.6 as well as the fact that some'
nl|'\n'
comment|'# people running 2.4 have installed hashlib as a separate module'
nl|'\n'
comment|'# this fix was provided by boto user mccormix.'
nl|'\n'
comment|'# see: http://code.google.com/p/boto/issues/detail?id=172'
nl|'\n'
comment|'# for more details.'
nl|'\n'
comment|'#'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'from'
name|'hashlib'
name|'import'
name|'sha1'
name|'as'
name|'sha'
newline|'\n'
name|'from'
name|'hashlib'
name|'import'
name|'sha256'
name|'as'
name|'sha256'
newline|'\n'
nl|'\n'
name|'if'
name|'sys'
op|'.'
name|'version'
op|'['
op|':'
number|'3'
op|']'
op|'=='
string|'"2.4"'
op|':'
newline|'\n'
comment|'# we are using an hmac that expects a .new() method.'
nl|'\n'
DECL|class|Faker
indent|'        '
name|'class'
name|'Faker'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'which'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'which'
op|'='
name|'which'
newline|'\n'
name|'self'
op|'.'
name|'digest_size'
op|'='
name|'self'
op|'.'
name|'which'
op|'('
op|')'
op|'.'
name|'digest_size'
newline|'\n'
nl|'\n'
DECL|member|new
dedent|''
name|'def'
name|'new'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'which'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|sha
dedent|''
dedent|''
name|'sha'
op|'='
name|'Faker'
op|'('
name|'sha'
op|')'
newline|'\n'
DECL|variable|sha256
name|'sha256'
op|'='
name|'Faker'
op|'('
name|'sha256'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'sha'
newline|'\n'
DECL|variable|sha256
name|'sha256'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|variable|PORTS_BY_SECURITY
dedent|''
name|'PORTS_BY_SECURITY'
op|'='
op|'{'
name|'True'
op|':'
number|'443'
op|','
name|'False'
op|':'
number|'80'
op|'}'
newline|'\n'
nl|'\n'
DECL|class|ConnectionPool
name|'class'
name|'ConnectionPool'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'hosts'
op|','
name|'connections_per_host'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_hosts'
op|'='
name|'boto'
op|'.'
name|'utils'
op|'.'
name|'LRUCache'
op|'('
name|'hosts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connections_per_host'
op|'='
name|'connections_per_host'
newline|'\n'
nl|'\n'
DECL|member|__getitem__
dedent|''
name|'def'
name|'__getitem__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'key'
name|'not'
name|'in'
name|'self'
op|'.'
name|'_hosts'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_hosts'
op|'['
name|'key'
op|']'
op|'='
name|'Queue'
op|'.'
name|'Queue'
op|'('
name|'self'
op|'.'
name|'connections_per_host'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_hosts'
op|'['
name|'key'
op|']'
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'ConnectionPool:%s'"
op|'%'
string|"','"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'_hosts'
op|'.'
name|'_dict'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|class|AWSAuthConnection
dedent|''
dedent|''
name|'class'
name|'AWSAuthConnection'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'aws_access_key_id'
op|'='
name|'None'
op|','
name|'aws_secret_access_key'
op|'='
name|'None'
op|','
nl|'\n'
name|'is_secure'
op|'='
name|'True'
op|','
name|'port'
op|'='
name|'None'
op|','
name|'proxy'
op|'='
name|'None'
op|','
name|'proxy_port'
op|'='
name|'None'
op|','
nl|'\n'
name|'proxy_user'
op|'='
name|'None'
op|','
name|'proxy_pass'
op|'='
name|'None'
op|','
name|'debug'
op|'='
number|'0'
op|','
nl|'\n'
name|'https_connection_factory'
op|'='
name|'None'
op|','
name|'path'
op|'='
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        :type host: string\n        :param host: The host to make the connection to\n\n        :type aws_access_key_id: string\n        :param aws_access_key_id: AWS Access Key ID (provided by Amazon)\n\n        :type aws_secret_access_key: string\n        :param aws_secret_access_key: Secret Access Key (provided by Amazon)\n\n        :type is_secure: boolean\n        :param is_secure: Whether the connection is over SSL\n\n        :type https_connection_factory: list or tuple\n        :param https_connection_factory: A pair of an HTTP connection\n                                         factory and the exceptions to catch.\n                                         The factory should have a similar\n                                         interface to L{httplib.HTTPSConnection}.\n\n        :type proxy:\n        :param proxy:\n\n        :type proxy_port: int\n        :param proxy_port: The port to use when connecting over a proxy\n\n        :type proxy_user: string\n        :param proxy_user: The username to connect with on the proxy\n\n        :type proxy_pass: string\n        :param proxy_pass: The password to use when connection over a proxy.\n\n        :type port: integer\n        :param port: The port to use to connect\n        """'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'num_retries'
op|'='
number|'5'
newline|'\n'
name|'self'
op|'.'
name|'is_secure'
op|'='
name|'is_secure'
newline|'\n'
name|'self'
op|'.'
name|'handle_proxy'
op|'('
name|'proxy'
op|','
name|'proxy_port'
op|','
name|'proxy_user'
op|','
name|'proxy_pass'
op|')'
newline|'\n'
comment|'# define exceptions from httplib that we want to catch and retry'
nl|'\n'
name|'self'
op|'.'
name|'http_exceptions'
op|'='
op|'('
name|'httplib'
op|'.'
name|'HTTPException'
op|','
name|'socket'
op|'.'
name|'error'
op|','
name|'socket'
op|'.'
name|'gaierror'
op|')'
newline|'\n'
comment|"# define values in socket exceptions we don't want to catch"
nl|'\n'
name|'self'
op|'.'
name|'socket_exception_values'
op|'='
op|'('
name|'errno'
op|'.'
name|'EINTR'
op|','
op|')'
newline|'\n'
name|'if'
name|'https_connection_factory'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'https_connection_factory'
op|'='
name|'https_connection_factory'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'http_exceptions'
op|'+='
name|'https_connection_factory'
op|'['
number|'1'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'https_connection_factory'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'if'
op|'('
name|'is_secure'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'protocol'
op|'='
string|"'https'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'protocol'
op|'='
string|"'http'"
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'host'
op|'='
name|'host'
newline|'\n'
name|'self'
op|'.'
name|'path'
op|'='
name|'path'
newline|'\n'
name|'if'
name|'debug'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'debug'
op|'='
name|'debug'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'debug'
op|'='
name|'config'
op|'.'
name|'getint'
op|'('
string|"'Boto'"
op|','
string|"'debug'"
op|','
name|'debug'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'port'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'port'
op|'='
name|'port'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'port'
op|'='
name|'PORTS_BY_SECURITY'
op|'['
name|'is_secure'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'aws_access_key_id'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'aws_access_key_id'
op|'='
name|'aws_access_key_id'
newline|'\n'
dedent|''
name|'elif'
name|'os'
op|'.'
name|'environ'
op|'.'
name|'has_key'
op|'('
string|"'AWS_ACCESS_KEY_ID'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'aws_access_key_id'
op|'='
name|'os'
op|'.'
name|'environ'
op|'['
string|"'AWS_ACCESS_KEY_ID'"
op|']'
newline|'\n'
dedent|''
name|'elif'
name|'config'
op|'.'
name|'has_option'
op|'('
string|"'Credentials'"
op|','
string|"'aws_access_key_id'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'aws_access_key_id'
op|'='
name|'config'
op|'.'
name|'get'
op|'('
string|"'Credentials'"
op|','
string|"'aws_access_key_id'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'aws_secret_access_key'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'aws_secret_access_key'
op|'='
name|'aws_secret_access_key'
newline|'\n'
dedent|''
name|'elif'
name|'os'
op|'.'
name|'environ'
op|'.'
name|'has_key'
op|'('
string|"'AWS_SECRET_ACCESS_KEY'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'aws_secret_access_key'
op|'='
name|'os'
op|'.'
name|'environ'
op|'['
string|"'AWS_SECRET_ACCESS_KEY'"
op|']'
newline|'\n'
dedent|''
name|'elif'
name|'config'
op|'.'
name|'has_option'
op|'('
string|"'Credentials'"
op|','
string|"'aws_secret_access_key'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'aws_secret_access_key'
op|'='
name|'config'
op|'.'
name|'get'
op|'('
string|"'Credentials'"
op|','
string|"'aws_secret_access_key'"
op|')'
newline|'\n'
nl|'\n'
comment|'# initialize an HMAC for signatures, make copies with each request'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'hmac'
op|'='
name|'hmac'
op|'.'
name|'new'
op|'('
name|'self'
op|'.'
name|'aws_secret_access_key'
op|','
name|'digestmod'
op|'='
name|'sha'
op|')'
newline|'\n'
name|'if'
name|'sha256'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'hmac_256'
op|'='
name|'hmac'
op|'.'
name|'new'
op|'('
name|'self'
op|'.'
name|'aws_secret_access_key'
op|','
name|'digestmod'
op|'='
name|'sha256'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'hmac_256'
op|'='
name|'None'
newline|'\n'
nl|'\n'
comment|'# cache up to 20 connections per host, up to 20 hosts'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_pool'
op|'='
name|'ConnectionPool'
op|'('
number|'20'
op|','
number|'20'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_connection'
op|'='
op|'('
name|'self'
op|'.'
name|'server_name'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'is_secure'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_last_rs'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'%s:%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'__class__'
op|'.'
name|'__name__'
op|','
name|'self'
op|'.'
name|'host'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_cached_name
dedent|''
name|'def'
name|'_cached_name'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'is_secure'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'host'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'host'
op|'='
name|'self'
op|'.'
name|'server_name'
op|'('
op|')'
newline|'\n'
dedent|''
name|'cached_name'
op|'='
name|'is_secure'
name|'and'
string|"'https://'"
name|'or'
string|"'http://'"
newline|'\n'
name|'cached_name'
op|'+='
name|'host'
newline|'\n'
name|'return'
name|'cached_name'
newline|'\n'
nl|'\n'
DECL|member|connection
dedent|''
name|'def'
name|'connection'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'get_http_connection'
op|'('
op|'*'
name|'self'
op|'.'
name|'_connection'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|connection
dedent|''
name|'connection'
op|'='
name|'property'
op|'('
name|'connection'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_path
name|'def'
name|'get_path'
op|'('
name|'self'
op|','
name|'path'
op|'='
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pos'
op|'='
name|'path'
op|'.'
name|'find'
op|'('
string|"'?'"
op|')'
newline|'\n'
name|'if'
name|'pos'
op|'>='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'='
name|'path'
op|'['
name|'pos'
op|':'
op|']'
newline|'\n'
name|'path'
op|'='
name|'path'
op|'['
op|':'
name|'pos'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'path'
op|'['
op|'-'
number|'1'
op|']'
op|'=='
string|"'/'"
op|':'
newline|'\n'
indent|'            '
name|'need_trailing'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'need_trailing'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'path_elements'
op|'='
name|'self'
op|'.'
name|'path'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'path_elements'
op|'.'
name|'extend'
op|'('
name|'path'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
op|')'
newline|'\n'
name|'path_elements'
op|'='
op|'['
name|'p'
name|'for'
name|'p'
name|'in'
name|'path_elements'
name|'if'
name|'p'
op|']'
newline|'\n'
name|'path'
op|'='
string|"'/'"
op|'+'
string|"'/'"
op|'.'
name|'join'
op|'('
name|'path_elements'
op|')'
newline|'\n'
name|'if'
name|'path'
op|'['
op|'-'
number|'1'
op|']'
op|'!='
string|"'/'"
name|'and'
name|'need_trailing'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'+='
string|"'/'"
newline|'\n'
dedent|''
name|'if'
name|'params'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
name|'path'
op|'+'
name|'params'
newline|'\n'
dedent|''
name|'return'
name|'path'
newline|'\n'
nl|'\n'
DECL|member|server_name
dedent|''
name|'def'
name|'server_name'
op|'('
name|'self'
op|','
name|'port'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'port'
op|':'
newline|'\n'
indent|'            '
name|'port'
op|'='
name|'self'
op|'.'
name|'port'
newline|'\n'
dedent|''
name|'if'
name|'port'
op|'=='
number|'80'
op|':'
newline|'\n'
indent|'            '
name|'signature_host'
op|'='
name|'self'
op|'.'
name|'host'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# This unfortunate little hack can be attributed to'
nl|'\n'
comment|'# a difference in the 2.6 version of httplib.  In old'
nl|'\n'
comment|'# versions, it would append ":443" to the hostname sent'
nl|'\n'
comment|'# in the Host header and so we needed to make sure we'
nl|'\n'
comment|'# did the same when calculating the V2 signature.  In 2.6'
nl|'\n'
comment|'# it no longer does that.  Hence, this kludge.'
nl|'\n'
indent|'            '
name|'if'
name|'sys'
op|'.'
name|'version'
op|'['
op|':'
number|'3'
op|']'
op|'=='
string|'"2.6"'
name|'and'
name|'port'
op|'=='
number|'443'
op|':'
newline|'\n'
indent|'                '
name|'signature_host'
op|'='
name|'self'
op|'.'
name|'host'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'signature_host'
op|'='
string|"'%s:%d'"
op|'%'
op|'('
name|'self'
op|'.'
name|'host'
op|','
name|'port'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'signature_host'
newline|'\n'
nl|'\n'
DECL|member|handle_proxy
dedent|''
name|'def'
name|'handle_proxy'
op|'('
name|'self'
op|','
name|'proxy'
op|','
name|'proxy_port'
op|','
name|'proxy_user'
op|','
name|'proxy_pass'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'proxy'
op|'='
name|'proxy'
newline|'\n'
name|'self'
op|'.'
name|'proxy_port'
op|'='
name|'proxy_port'
newline|'\n'
name|'self'
op|'.'
name|'proxy_user'
op|'='
name|'proxy_user'
newline|'\n'
name|'self'
op|'.'
name|'proxy_pass'
op|'='
name|'proxy_pass'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'environ'
op|'.'
name|'has_key'
op|'('
string|"'http_proxy'"
op|')'
name|'and'
name|'not'
name|'self'
op|'.'
name|'proxy'
op|':'
newline|'\n'
indent|'            '
name|'pattern'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
nl|'\n'
string|"'(?:http://)?'"
string|"'(?:(?P<user>\\w+):(?P<pass>.*)@)?'"
string|"'(?P<host>[\\w\\-\\.]+)'"
string|"'(?::(?P<port>\\d+))?'"
nl|'\n'
op|')'
newline|'\n'
name|'match'
op|'='
name|'pattern'
op|'.'
name|'match'
op|'('
name|'os'
op|'.'
name|'environ'
op|'['
string|"'http_proxy'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'match'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'proxy'
op|'='
name|'match'
op|'.'
name|'group'
op|'('
string|"'host'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy_port'
op|'='
name|'match'
op|'.'
name|'group'
op|'('
string|"'port'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy_user'
op|'='
name|'match'
op|'.'
name|'group'
op|'('
string|"'user'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'proxy_pass'
op|'='
name|'match'
op|'.'
name|'group'
op|'('
string|"'pass'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'self'
op|'.'
name|'proxy'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'proxy'
op|'='
name|'config'
op|'.'
name|'get_value'
op|'('
string|"'Boto'"
op|','
string|"'proxy'"
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'proxy_port'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'proxy_port'
op|'='
name|'config'
op|'.'
name|'get_value'
op|'('
string|"'Boto'"
op|','
string|"'proxy_port'"
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'proxy_user'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'proxy_user'
op|'='
name|'config'
op|'.'
name|'get_value'
op|'('
string|"'Boto'"
op|','
string|"'proxy_user'"
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'proxy_pass'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'proxy_pass'
op|'='
name|'config'
op|'.'
name|'get_value'
op|'('
string|"'Boto'"
op|','
string|"'proxy_pass'"
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'proxy_port'
name|'and'
name|'self'
op|'.'
name|'proxy'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|'"http_proxy environment variable does not specify "'
string|'"a port, using default"'
newline|'\n'
name|'self'
op|'.'
name|'proxy_port'
op|'='
name|'self'
op|'.'
name|'port'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'use_proxy'
op|'='
op|'('
name|'self'
op|'.'
name|'proxy'
op|'!='
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_http_connection
dedent|''
name|'def'
name|'get_http_connection'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'is_secure'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'queue'
op|'='
name|'self'
op|'.'
name|'_pool'
op|'['
name|'self'
op|'.'
name|'_cached_name'
op|'('
name|'host'
op|','
name|'is_secure'
op|')'
op|']'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'queue'
op|'.'
name|'get_nowait'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Queue'
op|'.'
name|'Empty'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'new_http_connection'
op|'('
name|'host'
op|','
name|'is_secure'
op|')'
newline|'\n'
nl|'\n'
DECL|member|new_http_connection
dedent|''
dedent|''
name|'def'
name|'new_http_connection'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'is_secure'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'use_proxy'
op|':'
newline|'\n'
indent|'            '
name|'host'
op|'='
string|"'%s:%d'"
op|'%'
op|'('
name|'self'
op|'.'
name|'proxy'
op|','
name|'int'
op|'('
name|'self'
op|'.'
name|'proxy_port'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'host'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'host'
op|'='
name|'self'
op|'.'
name|'server_name'
op|'('
op|')'
newline|'\n'
dedent|''
name|'boto'
op|'.'
name|'log'
op|'.'
name|'debug'
op|'('
string|"'establishing HTTP connection'"
op|')'
newline|'\n'
name|'if'
name|'is_secure'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'use_proxy'
op|':'
newline|'\n'
indent|'                '
name|'connection'
op|'='
name|'self'
op|'.'
name|'proxy_ssl'
op|'('
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'self'
op|'.'
name|'https_connection_factory'
op|':'
newline|'\n'
indent|'                '
name|'connection'
op|'='
name|'self'
op|'.'
name|'https_connection_factory'
op|'('
name|'host'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'connection'
op|'='
name|'httplib'
op|'.'
name|'HTTPSConnection'
op|'('
name|'host'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'connection'
op|'='
name|'httplib'
op|'.'
name|'HTTPConnection'
op|'('
name|'host'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'debug'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'connection'
op|'.'
name|'set_debuglevel'
op|'('
name|'self'
op|'.'
name|'debug'
op|')'
newline|'\n'
comment|'# self.connection must be maintained for backwards-compatibility'
nl|'\n'
comment|'# however, it must be dynamically pulled from the connection pool'
nl|'\n'
comment|'# set a private variable which will enable that'
nl|'\n'
dedent|''
name|'if'
name|'host'
op|'.'
name|'split'
op|'('
string|"':'"
op|')'
op|'['
number|'0'
op|']'
op|'=='
name|'self'
op|'.'
name|'host'
name|'and'
name|'is_secure'
op|'=='
name|'self'
op|'.'
name|'is_secure'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_connection'
op|'='
op|'('
name|'host'
op|','
name|'is_secure'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'connection'
newline|'\n'
nl|'\n'
DECL|member|put_http_connection
dedent|''
name|'def'
name|'put_http_connection'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'is_secure'
op|','
name|'connection'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_pool'
op|'['
name|'self'
op|'.'
name|'_cached_name'
op|'('
name|'host'
op|','
name|'is_secure'
op|')'
op|']'
op|'.'
name|'put_nowait'
op|'('
name|'connection'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Queue'
op|'.'
name|'Full'
op|':'
newline|'\n'
comment|'# gracefully fail in case of pool overflow'
nl|'\n'
indent|'            '
name|'connection'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|proxy_ssl
dedent|''
dedent|''
name|'def'
name|'proxy_ssl'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'host'
op|'='
string|"'%s:%d'"
op|'%'
op|'('
name|'self'
op|'.'
name|'host'
op|','
name|'self'
op|'.'
name|'port'
op|')'
newline|'\n'
name|'sock'
op|'='
name|'socket'
op|'.'
name|'socket'
op|'('
name|'socket'
op|'.'
name|'AF_INET'
op|','
name|'socket'
op|'.'
name|'SOCK_STREAM'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'sock'
op|'.'
name|'connect'
op|'('
op|'('
name|'self'
op|'.'
name|'proxy'
op|','
name|'int'
op|'('
name|'self'
op|'.'
name|'proxy_port'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'raise'
newline|'\n'
dedent|''
name|'sock'
op|'.'
name|'sendall'
op|'('
string|'"CONNECT %s HTTP/1.0\\r\\n"'
op|'%'
name|'host'
op|')'
newline|'\n'
name|'sock'
op|'.'
name|'sendall'
op|'('
string|'"User-Agent: %s\\r\\n"'
op|'%'
name|'UserAgent'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'proxy_user'
name|'and'
name|'self'
op|'.'
name|'proxy_pass'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'self'
op|'.'
name|'get_proxy_auth_header'
op|'('
op|')'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'sock'
op|'.'
name|'sendall'
op|'('
string|'"%s: %s\\r\\n"'
op|'%'
op|'('
name|'k'
op|','
name|'v'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'sock'
op|'.'
name|'sendall'
op|'('
string|'"\\r\\n"'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'httplib'
op|'.'
name|'HTTPResponse'
op|'('
name|'sock'
op|','
name|'strict'
op|'='
name|'True'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'begin'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'resp'
op|'.'
name|'status'
op|'!='
number|'200'
op|':'
newline|'\n'
comment|"# Fake a socket error, use a code that make it obvious it hasn't"
nl|'\n'
comment|'# been generated by the socket library'
nl|'\n'
indent|'            '
name|'raise'
name|'socket'
op|'.'
name|'error'
op|'('
op|'-'
number|'71'
op|','
nl|'\n'
string|'"Error talking to HTTP proxy %s:%s: %s (%s)"'
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'proxy'
op|','
name|'self'
op|'.'
name|'proxy_port'
op|','
name|'resp'
op|'.'
name|'status'
op|','
name|'resp'
op|'.'
name|'reason'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# We can safely close the response, it duped the original socket'
nl|'\n'
dedent|''
name|'resp'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'h'
op|'='
name|'httplib'
op|'.'
name|'HTTPConnection'
op|'('
name|'host'
op|')'
newline|'\n'
nl|'\n'
comment|'# Wrap the socket in an SSL socket'
nl|'\n'
name|'if'
name|'hasattr'
op|'('
name|'httplib'
op|','
string|"'ssl'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sslSock'
op|'='
name|'httplib'
op|'.'
name|'ssl'
op|'.'
name|'SSLSocket'
op|'('
name|'sock'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
comment|'# Old Python, no ssl module'
newline|'\n'
indent|'            '
name|'sslSock'
op|'='
name|'socket'
op|'.'
name|'ssl'
op|'('
name|'sock'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
name|'sslSock'
op|'='
name|'httplib'
op|'.'
name|'FakeSocket'
op|'('
name|'sock'
op|','
name|'sslSock'
op|')'
newline|'\n'
comment|'# This is a bit unclean'
nl|'\n'
dedent|''
name|'h'
op|'.'
name|'sock'
op|'='
name|'sslSock'
newline|'\n'
name|'return'
name|'h'
newline|'\n'
nl|'\n'
DECL|member|prefix_proxy_to_path
dedent|''
name|'def'
name|'prefix_proxy_to_path'
op|'('
name|'self'
op|','
name|'path'
op|','
name|'host'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
name|'self'
op|'.'
name|'protocol'
op|'+'
string|"'://'"
op|'+'
op|'('
name|'host'
name|'or'
name|'self'
op|'.'
name|'server_name'
op|'('
op|')'
op|')'
op|'+'
name|'path'
newline|'\n'
name|'return'
name|'path'
newline|'\n'
nl|'\n'
DECL|member|get_proxy_auth_header
dedent|''
name|'def'
name|'get_proxy_auth_header'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'auth'
op|'='
name|'base64'
op|'.'
name|'encodestring'
op|'('
name|'self'
op|'.'
name|'proxy_user'
op|'+'
string|"':'"
op|'+'
name|'self'
op|'.'
name|'proxy_pass'
op|')'
newline|'\n'
name|'return'
op|'{'
string|"'Proxy-Authorization'"
op|':'
string|"'Basic %s'"
op|'%'
name|'auth'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_mexe
dedent|''
name|'def'
name|'_mexe'
op|'('
name|'self'
op|','
name|'method'
op|','
name|'path'
op|','
name|'data'
op|','
name|'headers'
op|','
name|'host'
op|'='
name|'None'
op|','
name|'sender'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        mexe - Multi-execute inside a loop, retrying multiple times to handle\n               transient Internet errors by simply trying again.\n               Also handles redirects.\n\n        This code was inspired by the S3Utils classes posted to the boto-users\n        Google group by Larry Bates.  Thanks!\n        """'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'debug'
op|'('
string|"'Method: %s'"
op|'%'
name|'method'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'debug'
op|'('
string|"'Path: %s'"
op|'%'
name|'path'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'debug'
op|'('
string|"'Data: %s'"
op|'%'
name|'data'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'debug'
op|'('
string|"'Headers: %s'"
op|'%'
name|'headers'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'debug'
op|'('
string|"'Host: %s'"
op|'%'
name|'host'
op|')'
newline|'\n'
name|'response'
op|'='
name|'None'
newline|'\n'
name|'body'
op|'='
name|'None'
newline|'\n'
name|'e'
op|'='
name|'None'
newline|'\n'
name|'num_retries'
op|'='
name|'config'
op|'.'
name|'getint'
op|'('
string|"'Boto'"
op|','
string|"'num_retries'"
op|','
name|'self'
op|'.'
name|'num_retries'
op|')'
newline|'\n'
name|'i'
op|'='
number|'0'
newline|'\n'
name|'connection'
op|'='
name|'self'
op|'.'
name|'get_http_connection'
op|'('
name|'host'
op|','
name|'self'
op|'.'
name|'is_secure'
op|')'
newline|'\n'
name|'while'
name|'i'
op|'<='
name|'num_retries'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'callable'
op|'('
name|'sender'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'response'
op|'='
name|'sender'
op|'('
name|'connection'
op|','
name|'method'
op|','
name|'path'
op|','
name|'data'
op|','
name|'headers'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'connection'
op|'.'
name|'request'
op|'('
name|'method'
op|','
name|'path'
op|','
name|'data'
op|','
name|'headers'
op|')'
newline|'\n'
name|'response'
op|'='
name|'connection'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
dedent|''
name|'location'
op|'='
name|'response'
op|'.'
name|'getheader'
op|'('
string|"'location'"
op|')'
newline|'\n'
comment|'# -- gross hack --'
nl|'\n'
comment|'# httplib gets confused with chunked responses to HEAD requests'
nl|'\n'
comment|'# so I have to fake it out'
nl|'\n'
name|'if'
name|'method'
op|'=='
string|"'HEAD'"
name|'and'
name|'getattr'
op|'('
name|'response'
op|','
string|"'chunked'"
op|','
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'response'
op|'.'
name|'chunked'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'500'
name|'or'
name|'response'
op|'.'
name|'status'
op|'=='
number|'503'
op|':'
newline|'\n'
indent|'                    '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'debug'
op|'('
string|"'received %d response, retrying in %d seconds'"
op|'%'
op|'('
name|'response'
op|'.'
name|'status'
op|','
number|'2'
op|'**'
name|'i'
op|')'
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'response'
op|'.'
name|'status'
op|'=='
number|'408'
op|':'
newline|'\n'
indent|'                    '
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'print'
string|"'-------------------------'"
newline|'\n'
name|'print'
string|"'         4 0 8           '"
newline|'\n'
name|'print'
string|"'path=%s'"
op|'%'
name|'path'
newline|'\n'
name|'print'
name|'body'
newline|'\n'
name|'print'
string|"'-------------------------'"
newline|'\n'
dedent|''
name|'elif'
name|'response'
op|'.'
name|'status'
op|'<'
number|'300'
name|'or'
name|'response'
op|'.'
name|'status'
op|'>='
number|'400'
name|'or'
name|'not'
name|'location'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'put_http_connection'
op|'('
name|'host'
op|','
name|'self'
op|'.'
name|'is_secure'
op|','
name|'connection'
op|')'
newline|'\n'
name|'return'
name|'response'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'scheme'
op|','
name|'host'
op|','
name|'path'
op|','
name|'params'
op|','
name|'query'
op|','
name|'fragment'
op|'='
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'location'
op|')'
newline|'\n'
name|'if'
name|'query'
op|':'
newline|'\n'
indent|'                        '
name|'path'
op|'+='
string|"'?'"
op|'+'
name|'query'
newline|'\n'
dedent|''
name|'boto'
op|'.'
name|'log'
op|'.'
name|'debug'
op|'('
string|"'Redirecting: %s'"
op|'%'
name|'scheme'
op|'+'
string|"'://'"
op|'+'
name|'host'
op|'+'
name|'path'
op|')'
newline|'\n'
name|'connection'
op|'='
name|'self'
op|'.'
name|'get_http_connection'
op|'('
name|'host'
op|','
nl|'\n'
name|'scheme'
op|'=='
string|"'https'"
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'KeyboardInterrupt'
op|':'
newline|'\n'
indent|'                '
name|'sys'
op|'.'
name|'exit'
op|'('
string|"'Keyboard Interrupt'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'self'
op|'.'
name|'http_exceptions'
op|','
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'debug'
op|'('
string|"'encountered %s exception, reconnecting'"
op|'%'
name|'e'
op|'.'
name|'__class__'
op|'.'
name|'__name__'
op|')'
newline|'\n'
name|'connection'
op|'='
name|'self'
op|'.'
name|'new_http_connection'
op|'('
name|'host'
op|','
name|'self'
op|'.'
name|'is_secure'
op|')'
newline|'\n'
dedent|''
name|'time'
op|'.'
name|'sleep'
op|'('
number|'2'
op|'**'
name|'i'
op|')'
newline|'\n'
name|'i'
op|'+='
number|'1'
newline|'\n'
comment|"# If we made it here, it's because we have exhausted our retries and stil haven't"
nl|'\n'
comment|'# succeeded.  So, if we have a response object, use it to raise an exception.'
nl|'\n'
comment|'# Otherwise, raise the exception that must have already happened.'
nl|'\n'
dedent|''
name|'if'
name|'response'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'BotoServerError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'e'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'BotoClientError'
op|'('
string|"'Please report this exception as a Boto Issue!'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|make_request
dedent|''
dedent|''
name|'def'
name|'make_request'
op|'('
name|'self'
op|','
name|'method'
op|','
name|'path'
op|','
name|'headers'
op|'='
name|'None'
op|','
name|'data'
op|'='
string|"''"
op|','
name|'host'
op|'='
name|'None'
op|','
nl|'\n'
name|'auth_path'
op|'='
name|'None'
op|','
name|'sender'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
name|'self'
op|'.'
name|'get_path'
op|'('
name|'path'
op|')'
newline|'\n'
name|'if'
name|'headers'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'='
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'='
name|'headers'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
dedent|''
name|'headers'
op|'['
string|"'User-Agent'"
op|']'
op|'='
name|'UserAgent'
newline|'\n'
name|'if'
name|'not'
name|'headers'
op|'.'
name|'has_key'
op|'('
string|"'Content-Length'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|'='
name|'str'
op|'('
name|'len'
op|'('
name|'data'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'use_proxy'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
name|'self'
op|'.'
name|'prefix_proxy_to_path'
op|'('
name|'path'
op|','
name|'host'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'proxy_user'
name|'and'
name|'self'
op|'.'
name|'proxy_pass'
name|'and'
name|'not'
name|'self'
op|'.'
name|'is_secure'
op|':'
newline|'\n'
comment|"# If is_secure, we don't have to set the proxy authentication"
nl|'\n'
comment|'# header here, we did that in the CONNECT to the proxy.'
nl|'\n'
indent|'                '
name|'headers'
op|'.'
name|'update'
op|'('
name|'self'
op|'.'
name|'get_proxy_auth_header'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'request_string'
op|'='
name|'auth_path'
name|'or'
name|'path'
newline|'\n'
name|'self'
op|'.'
name|'add_aws_auth_header'
op|'('
name|'headers'
op|','
name|'method'
op|','
name|'request_string'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_mexe'
op|'('
name|'method'
op|','
name|'path'
op|','
name|'data'
op|','
name|'headers'
op|','
name|'host'
op|','
name|'sender'
op|')'
newline|'\n'
nl|'\n'
DECL|member|add_aws_auth_header
dedent|''
name|'def'
name|'add_aws_auth_header'
op|'('
name|'self'
op|','
name|'headers'
op|','
name|'method'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
name|'self'
op|'.'
name|'get_path'
op|'('
name|'path'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'headers'
op|'.'
name|'has_key'
op|'('
string|"'Date'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'['
string|"'Date'"
op|']'
op|'='
name|'time'
op|'.'
name|'strftime'
op|'('
string|'"%a, %d %b %Y %H:%M:%S GMT"'
op|','
nl|'\n'
name|'time'
op|'.'
name|'gmtime'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'c_string'
op|'='
name|'boto'
op|'.'
name|'utils'
op|'.'
name|'canonical_string'
op|'('
name|'method'
op|','
name|'path'
op|','
name|'headers'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'debug'
op|'('
string|"'Canonical: %s'"
op|'%'
name|'c_string'
op|')'
newline|'\n'
name|'hmac'
op|'='
name|'self'
op|'.'
name|'hmac'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'hmac'
op|'.'
name|'update'
op|'('
name|'c_string'
op|')'
newline|'\n'
name|'b64_hmac'
op|'='
name|'base64'
op|'.'
name|'encodestring'
op|'('
name|'hmac'
op|'.'
name|'digest'
op|'('
op|')'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'['
string|"'Authorization'"
op|']'
op|'='
string|'"AWS %s:%s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'aws_access_key_id'
op|','
name|'b64_hmac'
op|')'
newline|'\n'
nl|'\n'
DECL|member|close
dedent|''
name|'def'
name|'close'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""(Optional) Close any open HTTP connections.  This is non-destructive,\n        and making a new request will open a connection again."""'
newline|'\n'
nl|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'debug'
op|'('
string|"'closing all HTTP connections'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'='
name|'None'
comment|'# compat field'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AWSQueryConnection
dedent|''
dedent|''
name|'class'
name|'AWSQueryConnection'
op|'('
name|'AWSAuthConnection'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|APIVersion
indent|'    '
name|'APIVersion'
op|'='
string|"''"
newline|'\n'
DECL|variable|SignatureVersion
name|'SignatureVersion'
op|'='
string|"'1'"
newline|'\n'
DECL|variable|ResponseError
name|'ResponseError'
op|'='
name|'BotoServerError'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'aws_access_key_id'
op|'='
name|'None'
op|','
name|'aws_secret_access_key'
op|'='
name|'None'
op|','
nl|'\n'
name|'is_secure'
op|'='
name|'True'
op|','
name|'port'
op|'='
name|'None'
op|','
name|'proxy'
op|'='
name|'None'
op|','
name|'proxy_port'
op|'='
name|'None'
op|','
nl|'\n'
name|'proxy_user'
op|'='
name|'None'
op|','
name|'proxy_pass'
op|'='
name|'None'
op|','
name|'host'
op|'='
name|'None'
op|','
name|'debug'
op|'='
number|'0'
op|','
nl|'\n'
name|'https_connection_factory'
op|'='
name|'None'
op|','
name|'path'
op|'='
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'AWSAuthConnection'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'host'
op|','
name|'aws_access_key_id'
op|','
name|'aws_secret_access_key'
op|','
nl|'\n'
name|'is_secure'
op|','
name|'port'
op|','
name|'proxy'
op|','
name|'proxy_port'
op|','
name|'proxy_user'
op|','
name|'proxy_pass'
op|','
nl|'\n'
name|'debug'
op|','
name|'https_connection_factory'
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_utf8_value
dedent|''
name|'def'
name|'get_utf8_value'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'value'
op|','
name|'str'
op|')'
name|'and'
name|'not'
name|'isinstance'
op|'('
name|'value'
op|','
name|'unicode'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'value'
op|'='
name|'str'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'isinstance'
op|'('
name|'value'
op|','
name|'unicode'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'value'
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'value'
newline|'\n'
nl|'\n'
DECL|member|calc_signature_0
dedent|''
dedent|''
name|'def'
name|'calc_signature_0'
op|'('
name|'self'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'debug'
op|'('
string|"'using calc_signature_0'"
op|')'
newline|'\n'
name|'hmac'
op|'='
name|'self'
op|'.'
name|'hmac'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'s'
op|'='
name|'params'
op|'['
string|"'Action'"
op|']'
op|'+'
name|'params'
op|'['
string|"'Timestamp'"
op|']'
newline|'\n'
name|'hmac'
op|'.'
name|'update'
op|'('
name|'s'
op|')'
newline|'\n'
name|'keys'
op|'='
name|'params'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'keys'
op|'.'
name|'sort'
op|'('
name|'cmp'
op|'='
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'cmp'
op|'('
name|'x'
op|'.'
name|'lower'
op|'('
op|')'
op|','
name|'y'
op|'.'
name|'lower'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'pairs'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'keys'
op|':'
newline|'\n'
indent|'            '
name|'val'
op|'='
name|'self'
op|'.'
name|'get_utf8_value'
op|'('
name|'params'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
name|'pairs'
op|'.'
name|'append'
op|'('
name|'key'
op|'+'
string|"'='"
op|'+'
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'val'
op|')'
op|')'
newline|'\n'
dedent|''
name|'qs'
op|'='
string|"'&'"
op|'.'
name|'join'
op|'('
name|'pairs'
op|')'
newline|'\n'
name|'return'
op|'('
name|'qs'
op|','
name|'base64'
op|'.'
name|'b64encode'
op|'('
name|'hmac'
op|'.'
name|'digest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|calc_signature_1
dedent|''
name|'def'
name|'calc_signature_1'
op|'('
name|'self'
op|','
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'debug'
op|'('
string|"'using calc_signature_1'"
op|')'
newline|'\n'
name|'hmac'
op|'='
name|'self'
op|'.'
name|'hmac'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'keys'
op|'='
name|'params'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'keys'
op|'.'
name|'sort'
op|'('
name|'cmp'
op|'='
name|'lambda'
name|'x'
op|','
name|'y'
op|':'
name|'cmp'
op|'('
name|'x'
op|'.'
name|'lower'
op|'('
op|')'
op|','
name|'y'
op|'.'
name|'lower'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'pairs'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'keys'
op|':'
newline|'\n'
indent|'            '
name|'hmac'
op|'.'
name|'update'
op|'('
name|'key'
op|')'
newline|'\n'
name|'val'
op|'='
name|'self'
op|'.'
name|'get_utf8_value'
op|'('
name|'params'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
name|'hmac'
op|'.'
name|'update'
op|'('
name|'val'
op|')'
newline|'\n'
name|'pairs'
op|'.'
name|'append'
op|'('
name|'key'
op|'+'
string|"'='"
op|'+'
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'val'
op|')'
op|')'
newline|'\n'
dedent|''
name|'qs'
op|'='
string|"'&'"
op|'.'
name|'join'
op|'('
name|'pairs'
op|')'
newline|'\n'
name|'return'
op|'('
name|'qs'
op|','
name|'base64'
op|'.'
name|'b64encode'
op|'('
name|'hmac'
op|'.'
name|'digest'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|calc_signature_2
dedent|''
name|'def'
name|'calc_signature_2'
op|'('
name|'self'
op|','
name|'params'
op|','
name|'verb'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'debug'
op|'('
string|"'using calc_signature_2'"
op|')'
newline|'\n'
name|'string_to_sign'
op|'='
string|"'%s\\n%s\\n%s\\n'"
op|'%'
op|'('
name|'verb'
op|','
name|'self'
op|'.'
name|'server_name'
op|'('
op|')'
op|'.'
name|'lower'
op|'('
op|')'
op|','
name|'path'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'hmac_256'
op|':'
newline|'\n'
indent|'            '
name|'hmac'
op|'='
name|'self'
op|'.'
name|'hmac_256'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'params'
op|'['
string|"'SignatureMethod'"
op|']'
op|'='
string|"'HmacSHA256'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'hmac'
op|'='
name|'self'
op|'.'
name|'hmac'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'params'
op|'['
string|"'SignatureMethod'"
op|']'
op|'='
string|"'HmacSHA1'"
newline|'\n'
dedent|''
name|'keys'
op|'='
name|'params'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'keys'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'pairs'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'keys'
op|':'
newline|'\n'
indent|'            '
name|'val'
op|'='
name|'self'
op|'.'
name|'get_utf8_value'
op|'('
name|'params'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
name|'pairs'
op|'.'
name|'append'
op|'('
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'key'
op|','
name|'safe'
op|'='
string|"''"
op|')'
op|'+'
string|"'='"
op|'+'
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'val'
op|','
name|'safe'
op|'='
string|"'-_~'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'qs'
op|'='
string|"'&'"
op|'.'
name|'join'
op|'('
name|'pairs'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'debug'
op|'('
string|"'query string: %s'"
op|'%'
name|'qs'
op|')'
newline|'\n'
name|'string_to_sign'
op|'+='
name|'qs'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'debug'
op|'('
string|"'string_to_sign: %s'"
op|'%'
name|'string_to_sign'
op|')'
newline|'\n'
name|'hmac'
op|'.'
name|'update'
op|'('
name|'string_to_sign'
op|')'
newline|'\n'
name|'b64'
op|'='
name|'base64'
op|'.'
name|'b64encode'
op|'('
name|'hmac'
op|'.'
name|'digest'
op|'('
op|')'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'debug'
op|'('
string|"'len(b64)=%d'"
op|'%'
name|'len'
op|'('
name|'b64'
op|')'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'debug'
op|'('
string|"'base64 encoded digest: %s'"
op|'%'
name|'b64'
op|')'
newline|'\n'
name|'return'
op|'('
name|'qs'
op|','
name|'b64'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_signature
dedent|''
name|'def'
name|'get_signature'
op|'('
name|'self'
op|','
name|'params'
op|','
name|'verb'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'SignatureVersion'
op|'=='
string|"'0'"
op|':'
newline|'\n'
indent|'            '
name|'t'
op|'='
name|'self'
op|'.'
name|'calc_signature_0'
op|'('
name|'params'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'self'
op|'.'
name|'SignatureVersion'
op|'=='
string|"'1'"
op|':'
newline|'\n'
indent|'            '
name|'t'
op|'='
name|'self'
op|'.'
name|'calc_signature_1'
op|'('
name|'params'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'self'
op|'.'
name|'SignatureVersion'
op|'=='
string|"'2'"
op|':'
newline|'\n'
indent|'            '
name|'t'
op|'='
name|'self'
op|'.'
name|'calc_signature_2'
op|'('
name|'params'
op|','
name|'verb'
op|','
name|'path'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'BotoClientError'
op|'('
string|"'Unknown Signature Version: %s'"
op|'%'
name|'self'
op|'.'
name|'SignatureVersion'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'t'
newline|'\n'
nl|'\n'
DECL|member|make_request
dedent|''
name|'def'
name|'make_request'
op|'('
name|'self'
op|','
name|'action'
op|','
name|'params'
op|'='
name|'None'
op|','
name|'path'
op|'='
string|"'/'"
op|','
name|'verb'
op|'='
string|"'GET'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'params'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'params'
op|'['
string|"'Action'"
op|']'
op|'='
name|'action'
newline|'\n'
name|'params'
op|'['
string|"'Version'"
op|']'
op|'='
name|'self'
op|'.'
name|'APIVersion'
newline|'\n'
name|'params'
op|'['
string|"'AWSAccessKeyId'"
op|']'
op|'='
name|'self'
op|'.'
name|'aws_access_key_id'
newline|'\n'
name|'params'
op|'['
string|"'SignatureVersion'"
op|']'
op|'='
name|'self'
op|'.'
name|'SignatureVersion'
newline|'\n'
name|'params'
op|'['
string|"'Timestamp'"
op|']'
op|'='
name|'time'
op|'.'
name|'strftime'
op|'('
string|'"%Y-%m-%dT%H:%M:%S"'
op|','
name|'time'
op|'.'
name|'gmtime'
op|'('
op|')'
op|')'
newline|'\n'
name|'qs'
op|','
name|'signature'
op|'='
name|'self'
op|'.'
name|'get_signature'
op|'('
name|'params'
op|','
name|'verb'
op|','
name|'self'
op|'.'
name|'get_path'
op|'('
name|'path'
op|')'
op|')'
newline|'\n'
name|'if'
name|'verb'
op|'=='
string|"'POST'"
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|'='
string|"'application/x-www-form-urlencoded; charset=UTF-8'"
newline|'\n'
name|'request_body'
op|'='
name|'qs'
op|'+'
string|"'&Signature='"
op|'+'
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'signature'
op|')'
newline|'\n'
name|'qs'
op|'='
name|'path'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'request_body'
op|'='
string|"''"
newline|'\n'
name|'qs'
op|'='
name|'path'
op|'+'
string|"'?'"
op|'+'
name|'qs'
op|'+'
string|"'&Signature='"
op|'+'
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'signature'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'AWSAuthConnection'
op|'.'
name|'make_request'
op|'('
name|'self'
op|','
name|'verb'
op|','
name|'qs'
op|','
nl|'\n'
name|'data'
op|'='
name|'request_body'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|build_list_params
dedent|''
name|'def'
name|'build_list_params'
op|'('
name|'self'
op|','
name|'params'
op|','
name|'items'
op|','
name|'label'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'items'
op|','
name|'str'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'items'
op|'='
op|'['
name|'items'
op|']'
newline|'\n'
dedent|''
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'items'
op|')'
op|'+'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'%s.%d'"
op|'%'
op|'('
name|'label'
op|','
name|'i'
op|')'
op|']'
op|'='
name|'items'
op|'['
name|'i'
op|'-'
number|'1'
op|']'
newline|'\n'
nl|'\n'
comment|'# generics'
nl|'\n'
nl|'\n'
DECL|member|get_list
dedent|''
dedent|''
name|'def'
name|'get_list'
op|'('
name|'self'
op|','
name|'action'
op|','
name|'params'
op|','
name|'markers'
op|','
name|'path'
op|'='
string|"'/'"
op|','
name|'parent'
op|'='
name|'None'
op|','
name|'verb'
op|'='
string|"'GET'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'parent'
op|':'
newline|'\n'
indent|'            '
name|'parent'
op|'='
name|'self'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'action'
op|','
name|'params'
op|','
name|'path'
op|','
name|'verb'
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'debug'
op|'('
name|'body'
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'rs'
op|'='
name|'ResultSet'
op|'('
name|'markers'
op|')'
newline|'\n'
name|'h'
op|'='
name|'handler'
op|'.'
name|'XmlHandler'
op|'('
name|'rs'
op|','
name|'parent'
op|')'
newline|'\n'
name|'xml'
op|'.'
name|'sax'
op|'.'
name|'parseString'
op|'('
name|'body'
op|','
name|'h'
op|')'
newline|'\n'
name|'return'
name|'rs'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s %s'"
op|'%'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|')'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s'"
op|'%'
name|'body'
op|')'
newline|'\n'
name|'raise'
name|'self'
op|'.'
name|'ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_object
dedent|''
dedent|''
name|'def'
name|'get_object'
op|'('
name|'self'
op|','
name|'action'
op|','
name|'params'
op|','
name|'cls'
op|','
name|'path'
op|'='
string|"'/'"
op|','
name|'parent'
op|'='
name|'None'
op|','
name|'verb'
op|'='
string|"'GET'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'parent'
op|':'
newline|'\n'
indent|'            '
name|'parent'
op|'='
name|'self'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'action'
op|','
name|'params'
op|','
name|'path'
op|','
name|'verb'
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'debug'
op|'('
name|'body'
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'obj'
op|'='
name|'cls'
op|'('
name|'parent'
op|')'
newline|'\n'
name|'h'
op|'='
name|'handler'
op|'.'
name|'XmlHandler'
op|'('
name|'obj'
op|','
name|'parent'
op|')'
newline|'\n'
name|'xml'
op|'.'
name|'sax'
op|'.'
name|'parseString'
op|'('
name|'body'
op|','
name|'h'
op|')'
newline|'\n'
name|'return'
name|'obj'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s %s'"
op|'%'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|')'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s'"
op|'%'
name|'body'
op|')'
newline|'\n'
name|'raise'
name|'self'
op|'.'
name|'ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_status
dedent|''
dedent|''
name|'def'
name|'get_status'
op|'('
name|'self'
op|','
name|'action'
op|','
name|'params'
op|','
name|'path'
op|'='
string|"'/'"
op|','
name|'parent'
op|'='
name|'None'
op|','
name|'verb'
op|'='
string|"'GET'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'parent'
op|':'
newline|'\n'
indent|'            '
name|'parent'
op|'='
name|'self'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'action'
op|','
name|'params'
op|','
name|'path'
op|','
name|'verb'
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'debug'
op|'('
name|'body'
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'rs'
op|'='
name|'ResultSet'
op|'('
op|')'
newline|'\n'
name|'h'
op|'='
name|'handler'
op|'.'
name|'XmlHandler'
op|'('
name|'rs'
op|','
name|'parent'
op|')'
newline|'\n'
name|'xml'
op|'.'
name|'sax'
op|'.'
name|'parseString'
op|'('
name|'body'
op|','
name|'h'
op|')'
newline|'\n'
name|'return'
name|'rs'
op|'.'
name|'status'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s %s'"
op|'%'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|')'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s'"
op|'%'
name|'body'
op|')'
newline|'\n'
name|'raise'
name|'self'
op|'.'
name|'ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
