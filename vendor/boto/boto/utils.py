begin_unit
comment|'# Copyright (c) 2006,2007 Mitch Garnaat http://garnaat.org/'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Permission is hereby granted, free of charge, to any person obtaining a'
nl|'\n'
comment|'# copy of this software and associated documentation files (the'
nl|'\n'
comment|'# "Software"), to deal in the Software without restriction, including'
nl|'\n'
comment|'# without limitation the rights to use, copy, modify, merge, publish, dis-'
nl|'\n'
comment|'# tribute, sublicense, and/or sell copies of the Software, and to permit'
nl|'\n'
comment|'# persons to whom the Software is furnished to do so, subject to the fol-'
nl|'\n'
comment|'# lowing conditions:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# The above copyright notice and this permission notice shall be included'
nl|'\n'
comment|'# in all copies or substantial portions of the Software.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS'
nl|'\n'
comment|'# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABIL-'
nl|'\n'
comment|'# ITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT'
nl|'\n'
comment|'# SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, '
nl|'\n'
comment|'# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,'
nl|'\n'
comment|'# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS'
nl|'\n'
comment|'# IN THE SOFTWARE.'
nl|'\n'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Parts of this code were copied or derived from sample code supplied by AWS.'
nl|'\n'
comment|'# The following notice applies to that code.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#  This software code is made available "AS IS" without warranties of any'
nl|'\n'
comment|'#  kind.  You may copy, display, modify and redistribute the software'
nl|'\n'
comment|'#  code either by itself or as incorporated into your code; provided that'
nl|'\n'
comment|'#  you do not remove any proprietary notices.  Your use of this software'
nl|'\n'
comment|'#  code is at your own risk and you waive any claim against Amazon'
nl|'\n'
comment|'#  Digital Services, Inc. or its affiliates with respect to your use of'
nl|'\n'
comment|'#  this software code. (c) 2006 Amazon Digital Services, Inc. or its'
nl|'\n'
comment|'#  affiliates.'
nl|'\n'
nl|'\n'
string|'"""\nSome handy utility functions used by several classes.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'re'
newline|'\n'
name|'import'
name|'urllib'
newline|'\n'
name|'import'
name|'urllib2'
newline|'\n'
name|'import'
name|'subprocess'
newline|'\n'
name|'import'
name|'StringIO'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'logging'
op|'.'
name|'handlers'
newline|'\n'
name|'import'
name|'boto'
newline|'\n'
name|'import'
name|'tempfile'
newline|'\n'
name|'import'
name|'smtplib'
newline|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'from'
name|'email'
op|'.'
name|'MIMEMultipart'
name|'import'
name|'MIMEMultipart'
newline|'\n'
name|'from'
name|'email'
op|'.'
name|'MIMEBase'
name|'import'
name|'MIMEBase'
newline|'\n'
name|'from'
name|'email'
op|'.'
name|'MIMEText'
name|'import'
name|'MIMEText'
newline|'\n'
name|'from'
name|'email'
op|'.'
name|'Utils'
name|'import'
name|'formatdate'
newline|'\n'
name|'from'
name|'email'
name|'import'
name|'Encoders'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'hashlib'
newline|'\n'
DECL|variable|_hashfn
name|'_hashfn'
op|'='
name|'hashlib'
op|'.'
name|'sha512'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'md5'
newline|'\n'
DECL|variable|_hashfn
name|'_hashfn'
op|'='
name|'md5'
op|'.'
name|'md5'
newline|'\n'
nl|'\n'
DECL|variable|METADATA_PREFIX
dedent|''
name|'METADATA_PREFIX'
op|'='
string|"'x-amz-meta-'"
newline|'\n'
DECL|variable|AMAZON_HEADER_PREFIX
name|'AMAZON_HEADER_PREFIX'
op|'='
string|"'x-amz-'"
newline|'\n'
nl|'\n'
comment|'# generates the aws canonical string for the given parameters'
nl|'\n'
DECL|function|canonical_string
name|'def'
name|'canonical_string'
op|'('
name|'method'
op|','
name|'path'
op|','
name|'headers'
op|','
name|'expires'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'interesting_headers'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'headers'
op|':'
newline|'\n'
indent|'        '
name|'lk'
op|'='
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'if'
name|'lk'
name|'in'
op|'['
string|"'content-md5'"
op|','
string|"'content-type'"
op|','
string|"'date'"
op|']'
name|'or'
name|'lk'
op|'.'
name|'startswith'
op|'('
name|'AMAZON_HEADER_PREFIX'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'interesting_headers'
op|'['
name|'lk'
op|']'
op|'='
name|'headers'
op|'['
name|'key'
op|']'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|"# these keys get empty strings if they don't exist"
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'interesting_headers'
op|'.'
name|'has_key'
op|'('
string|"'content-type'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'interesting_headers'
op|'['
string|"'content-type'"
op|']'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'interesting_headers'
op|'.'
name|'has_key'
op|'('
string|"'content-md5'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'interesting_headers'
op|'['
string|"'content-md5'"
op|']'
op|'='
string|"''"
newline|'\n'
nl|'\n'
comment|"# just in case someone used this.  it's not necessary in this lib."
nl|'\n'
dedent|''
name|'if'
name|'interesting_headers'
op|'.'
name|'has_key'
op|'('
string|"'x-amz-date'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'interesting_headers'
op|'['
string|"'date'"
op|']'
op|'='
string|"''"
newline|'\n'
nl|'\n'
comment|"# if you're using expires for query string auth, then it trumps date"
nl|'\n'
comment|'# (and x-amz-date)'
nl|'\n'
dedent|''
name|'if'
name|'expires'
op|':'
newline|'\n'
indent|'        '
name|'interesting_headers'
op|'['
string|"'date'"
op|']'
op|'='
name|'str'
op|'('
name|'expires'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'sorted_header_keys'
op|'='
name|'interesting_headers'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
name|'sorted_header_keys'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'buf'
op|'='
string|'"%s\\n"'
op|'%'
name|'method'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'sorted_header_keys'
op|':'
newline|'\n'
indent|'        '
name|'val'
op|'='
name|'interesting_headers'
op|'['
name|'key'
op|']'
newline|'\n'
name|'if'
name|'key'
op|'.'
name|'startswith'
op|'('
name|'AMAZON_HEADER_PREFIX'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'buf'
op|'+='
string|'"%s:%s\\n"'
op|'%'
op|'('
name|'key'
op|','
name|'val'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'buf'
op|'+='
string|'"%s\\n"'
op|'%'
name|'val'
newline|'\n'
nl|'\n'
comment|"# don't include anything after the first ? in the resource..."
nl|'\n'
dedent|''
dedent|''
name|'buf'
op|'+='
string|'"%s"'
op|'%'
name|'path'
op|'.'
name|'split'
op|'('
string|"'?'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
comment|'# ...unless there is an acl or torrent parameter'
nl|'\n'
name|'if'
name|'re'
op|'.'
name|'search'
op|'('
string|'"[&?]acl($|=|&)"'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'buf'
op|'+='
string|'"?acl"'
newline|'\n'
dedent|''
name|'elif'
name|'re'
op|'.'
name|'search'
op|'('
string|'"[&?]logging($|=|&)"'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'buf'
op|'+='
string|'"?logging"'
newline|'\n'
dedent|''
name|'elif'
name|'re'
op|'.'
name|'search'
op|'('
string|'"[&?]torrent($|=|&)"'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'buf'
op|'+='
string|'"?torrent"'
newline|'\n'
dedent|''
name|'elif'
name|'re'
op|'.'
name|'search'
op|'('
string|'"[&?]location($|=|&)"'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'buf'
op|'+='
string|'"?location"'
newline|'\n'
dedent|''
name|'elif'
name|'re'
op|'.'
name|'search'
op|'('
string|'"[&?]requestPayment($|=|&)"'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'buf'
op|'+='
string|'"?requestPayment"'
newline|'\n'
dedent|''
name|'elif'
name|'re'
op|'.'
name|'search'
op|'('
string|'"[&?]versions($|=|&)"'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'buf'
op|'+='
string|'"?versions"'
newline|'\n'
dedent|''
name|'elif'
name|'re'
op|'.'
name|'search'
op|'('
string|'"[&?]versioning($|=|&)"'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'buf'
op|'+='
string|'"?versioning"'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'m'
op|'='
name|'re'
op|'.'
name|'search'
op|'('
string|'"[&?]versionId=([^&]+)($|=|&)"'
op|','
name|'path'
op|')'
newline|'\n'
name|'if'
name|'m'
op|':'
newline|'\n'
indent|'            '
name|'buf'
op|'+='
string|"'?versionId='"
op|'+'
name|'m'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'buf'
newline|'\n'
nl|'\n'
DECL|function|merge_meta
dedent|''
name|'def'
name|'merge_meta'
op|'('
name|'headers'
op|','
name|'metadata'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'final_headers'
op|'='
name|'headers'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'for'
name|'k'
name|'in'
name|'metadata'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'k'
op|'.'
name|'lower'
op|'('
op|')'
name|'in'
op|'['
string|"'cache-control'"
op|','
string|"'content-md5'"
op|','
string|"'content-type'"
op|','
nl|'\n'
string|"'content-encoding'"
op|','
string|"'content-disposition'"
op|','
nl|'\n'
string|"'date'"
op|','
string|"'expires'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'final_headers'
op|'['
name|'k'
op|']'
op|'='
name|'metadata'
op|'['
name|'k'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'final_headers'
op|'['
name|'METADATA_PREFIX'
op|'+'
name|'k'
op|']'
op|'='
name|'metadata'
op|'['
name|'k'
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'final_headers'
newline|'\n'
nl|'\n'
DECL|function|get_aws_metadata
dedent|''
name|'def'
name|'get_aws_metadata'
op|'('
name|'headers'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'metadata'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'hkey'
name|'in'
name|'headers'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'hkey'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
name|'METADATA_PREFIX'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'val'
op|'='
name|'urllib'
op|'.'
name|'unquote_plus'
op|'('
name|'headers'
op|'['
name|'hkey'
op|']'
op|')'
newline|'\n'
name|'metadata'
op|'['
name|'hkey'
op|'['
name|'len'
op|'('
name|'METADATA_PREFIX'
op|')'
op|':'
op|']'
op|']'
op|'='
name|'unicode'
op|'('
name|'val'
op|','
string|"'utf-8'"
op|')'
newline|'\n'
name|'del'
name|'headers'
op|'['
name|'hkey'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'metadata'
newline|'\n'
nl|'\n'
DECL|function|retry_url
dedent|''
name|'def'
name|'retry_url'
op|'('
name|'url'
op|','
name|'retry_on_404'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
number|'10'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'urllib2'
op|'.'
name|'Request'
op|'('
name|'url'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'urllib2'
op|'.'
name|'urlopen'
op|'('
name|'req'
op|')'
newline|'\n'
name|'return'
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'urllib2'
op|'.'
name|'HTTPError'
op|','
name|'e'
op|':'
newline|'\n'
comment|'# in 2.6 you use getcode(), in 2.5 and earlier you use code'
nl|'\n'
indent|'            '
name|'if'
name|'hasattr'
op|'('
name|'e'
op|','
string|"'getcode'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'code'
op|'='
name|'e'
op|'.'
name|'getcode'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'code'
op|'='
name|'e'
op|'.'
name|'code'
newline|'\n'
dedent|''
name|'if'
name|'code'
op|'=='
number|'404'
name|'and'
name|'not'
name|'retry_on_404'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|"''"
newline|'\n'
dedent|''
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'boto'
op|'.'
name|'log'
op|'.'
name|'exception'
op|'('
string|"'Caught exception reading instance data'"
op|')'
newline|'\n'
name|'time'
op|'.'
name|'sleep'
op|'('
number|'2'
op|'**'
name|'i'
op|')'
newline|'\n'
dedent|''
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'Unable to read instance data, giving up'"
op|')'
newline|'\n'
name|'return'
string|"''"
newline|'\n'
nl|'\n'
DECL|function|_get_instance_metadata
dedent|''
name|'def'
name|'_get_instance_metadata'
op|'('
name|'url'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'d'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'data'
op|'='
name|'retry_url'
op|'('
name|'url'
op|')'
newline|'\n'
name|'if'
name|'data'
op|':'
newline|'\n'
indent|'        '
name|'fields'
op|'='
name|'data'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
name|'for'
name|'field'
name|'in'
name|'fields'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'field'
op|'.'
name|'endswith'
op|'('
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'d'
op|'['
name|'field'
op|'['
number|'0'
op|':'
op|'-'
number|'1'
op|']'
op|']'
op|'='
name|'_get_instance_metadata'
op|'('
name|'url'
op|'+'
name|'field'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'p'
op|'='
name|'field'
op|'.'
name|'find'
op|'('
string|"'='"
op|')'
newline|'\n'
name|'if'
name|'p'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'                    '
name|'key'
op|'='
name|'field'
op|'['
name|'p'
op|'+'
number|'1'
op|':'
op|']'
newline|'\n'
name|'resource'
op|'='
name|'field'
op|'['
number|'0'
op|':'
name|'p'
op|']'
op|'+'
string|"'/openssh-key'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'key'
op|'='
name|'resource'
op|'='
name|'field'
newline|'\n'
dedent|''
name|'val'
op|'='
name|'retry_url'
op|'('
name|'url'
op|'+'
name|'resource'
op|')'
newline|'\n'
name|'p'
op|'='
name|'val'
op|'.'
name|'find'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
name|'if'
name|'p'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'                    '
name|'val'
op|'='
name|'val'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
dedent|''
name|'d'
op|'['
name|'key'
op|']'
op|'='
name|'val'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'d'
newline|'\n'
nl|'\n'
DECL|function|get_instance_metadata
dedent|''
name|'def'
name|'get_instance_metadata'
op|'('
name|'version'
op|'='
string|"'latest'"
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Returns the instance metadata as a nested Python dictionary.\n    Simple values (e.g. local_hostname, hostname, etc.) will be\n    stored as string values.  Values such as ancestor-ami-ids will\n    be stored in the dict as a list of string values.  More complex\n    fields such as public-keys and will be stored as nested dicts.\n    """'
newline|'\n'
name|'url'
op|'='
string|"'http://169.254.169.254/%s/meta-data/'"
op|'%'
name|'version'
newline|'\n'
name|'return'
name|'_get_instance_metadata'
op|'('
name|'url'
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_instance_userdata
dedent|''
name|'def'
name|'get_instance_userdata'
op|'('
name|'version'
op|'='
string|"'latest'"
op|','
name|'sep'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'url'
op|'='
string|"'http://169.254.169.254/%s/user-data'"
op|'%'
name|'version'
newline|'\n'
name|'user_data'
op|'='
name|'retry_url'
op|'('
name|'url'
op|','
name|'retry_on_404'
op|'='
name|'False'
op|')'
newline|'\n'
name|'if'
name|'user_data'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'sep'
op|':'
newline|'\n'
indent|'            '
name|'l'
op|'='
name|'user_data'
op|'.'
name|'split'
op|'('
name|'sep'
op|')'
newline|'\n'
name|'user_data'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'nvpair'
name|'in'
name|'l'
op|':'
newline|'\n'
indent|'                '
name|'t'
op|'='
name|'nvpair'
op|'.'
name|'split'
op|'('
string|"'='"
op|')'
newline|'\n'
name|'user_data'
op|'['
name|'t'
op|'['
number|'0'
op|']'
op|'.'
name|'strip'
op|'('
op|')'
op|']'
op|'='
name|'t'
op|'['
number|'1'
op|']'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'user_data'
newline|'\n'
nl|'\n'
DECL|variable|ISO8601
dedent|''
name|'ISO8601'
op|'='
string|"'%Y-%m-%dT%H:%M:%SZ'"
newline|'\n'
nl|'\n'
DECL|function|get_ts
name|'def'
name|'get_ts'
op|'('
name|'ts'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'ts'
op|':'
newline|'\n'
indent|'        '
name|'ts'
op|'='
name|'time'
op|'.'
name|'gmtime'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'time'
op|'.'
name|'strftime'
op|'('
name|'ISO8601'
op|','
name|'ts'
op|')'
newline|'\n'
nl|'\n'
DECL|function|parse_ts
dedent|''
name|'def'
name|'parse_ts'
op|'('
name|'ts'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'datetime'
op|'.'
name|'datetime'
op|'.'
name|'strptime'
op|'('
name|'ts'
op|','
name|'ISO8601'
op|')'
newline|'\n'
nl|'\n'
DECL|function|find_class
dedent|''
name|'def'
name|'find_class'
op|'('
name|'module_name'
op|','
name|'class_name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'class_name'
op|':'
newline|'\n'
indent|'        '
name|'module_name'
op|'='
string|'"%s.%s"'
op|'%'
op|'('
name|'module_name'
op|','
name|'class_name'
op|')'
newline|'\n'
dedent|''
name|'modules'
op|'='
name|'module_name'
op|'.'
name|'split'
op|'('
string|"'.'"
op|')'
newline|'\n'
name|'c'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'m'
name|'in'
name|'modules'
op|'['
number|'1'
op|':'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'c'
op|':'
newline|'\n'
indent|'                '
name|'c'
op|'='
name|'getattr'
op|'('
name|'c'
op|','
name|'m'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'c'
op|'='
name|'getattr'
op|'('
name|'__import__'
op|'('
string|'"."'
op|'.'
name|'join'
op|'('
name|'modules'
op|'['
number|'0'
op|':'
op|'-'
number|'1'
op|']'
op|')'
op|')'
op|','
name|'m'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'c'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|function|update_dme
dedent|''
dedent|''
name|'def'
name|'update_dme'
op|'('
name|'username'
op|','
name|'password'
op|','
name|'dme_id'
op|','
name|'ip_address'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Update your Dynamic DNS record with DNSMadeEasy.com\n    """'
newline|'\n'
name|'dme_url'
op|'='
string|"'https://www.dnsmadeeasy.com/servlet/updateip'"
newline|'\n'
name|'dme_url'
op|'+='
string|"'?username=%s&password=%s&id=%s&ip=%s'"
newline|'\n'
name|'s'
op|'='
name|'urllib2'
op|'.'
name|'urlopen'
op|'('
name|'dme_url'
op|'%'
op|'('
name|'username'
op|','
name|'password'
op|','
name|'dme_id'
op|','
name|'ip_address'
op|')'
op|')'
newline|'\n'
name|'return'
name|'s'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|function|fetch_file
dedent|''
name|'def'
name|'fetch_file'
op|'('
name|'uri'
op|','
name|'file'
op|'='
name|'None'
op|','
name|'username'
op|'='
name|'None'
op|','
name|'password'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Fetch a file based on the URI provided. If you do not pass in a file pointer\n    a tempfile.NamedTemporaryFile, or None if the file could not be \n    retrieved is returned.\n    The URI can be either an HTTP url, or "s3://bucket_name/key_name"\n    """'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'info'
op|'('
string|"'Fetching %s'"
op|'%'
name|'uri'
op|')'
newline|'\n'
name|'if'
name|'file'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'file'
op|'='
name|'tempfile'
op|'.'
name|'NamedTemporaryFile'
op|'('
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'uri'
op|'.'
name|'startswith'
op|'('
string|"'s3://'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'bucket_name'
op|','
name|'key_name'
op|'='
name|'uri'
op|'['
name|'len'
op|'('
string|"'s3://'"
op|')'
op|':'
op|']'
op|'.'
name|'split'
op|'('
string|"'/'"
op|','
number|'1'
op|')'
newline|'\n'
name|'c'
op|'='
name|'boto'
op|'.'
name|'connect_s3'
op|'('
op|')'
newline|'\n'
name|'bucket'
op|'='
name|'c'
op|'.'
name|'get_bucket'
op|'('
name|'bucket_name'
op|')'
newline|'\n'
name|'key'
op|'='
name|'bucket'
op|'.'
name|'get_key'
op|'('
name|'key_name'
op|')'
newline|'\n'
name|'key'
op|'.'
name|'get_contents_to_file'
op|'('
name|'file'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'username'
name|'and'
name|'password'
op|':'
newline|'\n'
indent|'                '
name|'passman'
op|'='
name|'urllib2'
op|'.'
name|'HTTPPasswordMgrWithDefaultRealm'
op|'('
op|')'
newline|'\n'
name|'passman'
op|'.'
name|'add_password'
op|'('
name|'None'
op|','
name|'uri'
op|','
name|'username'
op|','
name|'password'
op|')'
newline|'\n'
name|'authhandler'
op|'='
name|'urllib2'
op|'.'
name|'HTTPBasicAuthHandler'
op|'('
name|'passman'
op|')'
newline|'\n'
name|'opener'
op|'='
name|'urllib2'
op|'.'
name|'build_opener'
op|'('
name|'authhandler'
op|')'
newline|'\n'
name|'urllib2'
op|'.'
name|'install_opener'
op|'('
name|'opener'
op|')'
newline|'\n'
dedent|''
name|'s'
op|'='
name|'urllib2'
op|'.'
name|'urlopen'
op|'('
name|'uri'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'write'
op|'('
name|'s'
op|'.'
name|'read'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'file'
op|'.'
name|'seek'
op|'('
number|'0'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'        '
name|'raise'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'exception'
op|'('
string|"'Problem Retrieving file: %s'"
op|'%'
name|'uri'
op|')'
newline|'\n'
name|'file'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'file'
newline|'\n'
nl|'\n'
DECL|class|ShellCommand
dedent|''
name|'class'
name|'ShellCommand'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'command'
op|','
name|'wait'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'exit_code'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'command'
op|'='
name|'command'
newline|'\n'
name|'self'
op|'.'
name|'log_fp'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'wait'
op|'='
name|'wait'
newline|'\n'
name|'self'
op|'.'
name|'run'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|run
dedent|''
name|'def'
name|'run'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'info'
op|'('
string|"'running:%s'"
op|'%'
name|'self'
op|'.'
name|'command'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'process'
op|'='
name|'subprocess'
op|'.'
name|'Popen'
op|'('
name|'self'
op|'.'
name|'command'
op|','
name|'shell'
op|'='
name|'True'
op|','
name|'stdin'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
op|','
nl|'\n'
name|'stdout'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
op|','
name|'stderr'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
op|')'
newline|'\n'
name|'if'
op|'('
name|'self'
op|'.'
name|'wait'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'while'
name|'self'
op|'.'
name|'process'
op|'.'
name|'poll'
op|'('
op|')'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'time'
op|'.'
name|'sleep'
op|'('
number|'1'
op|')'
newline|'\n'
name|'t'
op|'='
name|'self'
op|'.'
name|'process'
op|'.'
name|'communicate'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'log_fp'
op|'.'
name|'write'
op|'('
name|'t'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'log_fp'
op|'.'
name|'write'
op|'('
name|'t'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
dedent|''
name|'boto'
op|'.'
name|'log'
op|'.'
name|'info'
op|'('
name|'self'
op|'.'
name|'log_fp'
op|'.'
name|'getvalue'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'exit_code'
op|'='
name|'self'
op|'.'
name|'process'
op|'.'
name|'returncode'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'exit_code'
newline|'\n'
nl|'\n'
DECL|member|setReadOnly
dedent|''
dedent|''
name|'def'
name|'setReadOnly'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'AttributeError'
newline|'\n'
nl|'\n'
DECL|member|getStatus
dedent|''
name|'def'
name|'getStatus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'exit_code'
newline|'\n'
nl|'\n'
DECL|variable|status
dedent|''
name|'status'
op|'='
name|'property'
op|'('
name|'getStatus'
op|','
name|'setReadOnly'
op|','
name|'None'
op|','
string|"'The exit code for the command'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|getOutput
name|'def'
name|'getOutput'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'log_fp'
op|'.'
name|'getvalue'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|variable|output
dedent|''
name|'output'
op|'='
name|'property'
op|'('
name|'getOutput'
op|','
name|'setReadOnly'
op|','
name|'None'
op|','
string|"'The STDIN and STDERR output of the command'"
op|')'
newline|'\n'
nl|'\n'
DECL|class|AuthSMTPHandler
dedent|''
name|'class'
name|'AuthSMTPHandler'
op|'('
name|'logging'
op|'.'
name|'handlers'
op|'.'
name|'SMTPHandler'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    This class extends the SMTPHandler in the standard Python logging module\n    to accept a username and password on the constructor and to then use those\n    credentials to authenticate with the SMTP server.  To use this, you could\n    add something like this in your boto config file:\n    \n    [handler_hand07]\n    class=boto.utils.AuthSMTPHandler\n    level=WARN\n    formatter=form07\n    args=(\'localhost\', \'username\', \'password\', \'from@abc\', [\'user1@abc\', \'user2@xyz\'], \'Logger Subject\')\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'mailhost'
op|','
name|'username'
op|','
name|'password'
op|','
name|'fromaddr'
op|','
name|'toaddrs'
op|','
name|'subject'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Initialize the handler.\n\n        We have extended the constructor to accept a username/password\n        for SMTP authentication.\n        """'
newline|'\n'
name|'logging'
op|'.'
name|'handlers'
op|'.'
name|'SMTPHandler'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'mailhost'
op|','
name|'fromaddr'
op|','
name|'toaddrs'
op|','
name|'subject'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'username'
op|'='
name|'username'
newline|'\n'
name|'self'
op|'.'
name|'password'
op|'='
name|'password'
newline|'\n'
nl|'\n'
DECL|member|emit
dedent|''
name|'def'
name|'emit'
op|'('
name|'self'
op|','
name|'record'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Emit a record.\n\n        Format the record and send it to the specified addressees.\n        It would be really nice if I could add authorization to this class\n        without having to resort to cut and paste inheritance but, no.\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'port'
op|'='
name|'self'
op|'.'
name|'mailport'
newline|'\n'
name|'if'
name|'not'
name|'port'
op|':'
newline|'\n'
indent|'                '
name|'port'
op|'='
name|'smtplib'
op|'.'
name|'SMTP_PORT'
newline|'\n'
dedent|''
name|'smtp'
op|'='
name|'smtplib'
op|'.'
name|'SMTP'
op|'('
name|'self'
op|'.'
name|'mailhost'
op|','
name|'port'
op|')'
newline|'\n'
name|'smtp'
op|'.'
name|'login'
op|'('
name|'self'
op|'.'
name|'username'
op|','
name|'self'
op|'.'
name|'password'
op|')'
newline|'\n'
name|'msg'
op|'='
name|'self'
op|'.'
name|'format'
op|'('
name|'record'
op|')'
newline|'\n'
name|'msg'
op|'='
string|'"From: %s\\r\\nTo: %s\\r\\nSubject: %s\\r\\nDate: %s\\r\\n\\r\\n%s"'
op|'%'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'fromaddr'
op|','
nl|'\n'
string|"','"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'toaddrs'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'getSubject'
op|'('
name|'record'
op|')'
op|','
nl|'\n'
name|'formatdate'
op|'('
op|')'
op|','
name|'msg'
op|')'
newline|'\n'
name|'smtp'
op|'.'
name|'sendmail'
op|'('
name|'self'
op|'.'
name|'fromaddr'
op|','
name|'self'
op|'.'
name|'toaddrs'
op|','
name|'msg'
op|')'
newline|'\n'
name|'smtp'
op|'.'
name|'quit'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'KeyboardInterrupt'
op|','
name|'SystemExit'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'handleError'
op|'('
name|'record'
op|')'
newline|'\n'
nl|'\n'
DECL|class|LRUCache
dedent|''
dedent|''
dedent|''
name|'class'
name|'LRUCache'
op|'('
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""A dictionary-like object that stores only a certain number of items, and\n    discards its least recently used item when full.\n    \n    >>> cache = LRUCache(3)\n    >>> cache[\'A\'] = 0\n    >>> cache[\'B\'] = 1\n    >>> cache[\'C\'] = 2\n    >>> len(cache)\n    3\n    \n    >>> cache[\'A\']\n    0\n    \n    Adding new items to the cache does not increase its size. Instead, the least\n    recently used item is dropped:\n    \n    >>> cache[\'D\'] = 3\n    >>> len(cache)\n    3\n    >>> \'B\' in cache\n    False\n    \n    Iterating over the cache returns the keys, starting with the most recently\n    used:\n    \n    >>> for key in cache:\n    ...     print key\n    D\n    A\n    C\n\n    This code is based on the LRUCache class from Genshi which is based on\n    Mighty\'s LRUCache from ``myghtyutils.util``, written\n    by Mike Bayer and released under the MIT license (Genshi uses the\n    BSD License). See:\n\n      http://svn.myghty.org/myghtyutils/trunk/lib/myghtyutils/util.py\n    """'
newline|'\n'
nl|'\n'
DECL|class|_Item
name|'class'
name|'_Item'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'        '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'previous'
op|'='
name|'self'
op|'.'
name|'next'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'key'
op|'='
name|'key'
newline|'\n'
name|'self'
op|'.'
name|'value'
op|'='
name|'value'
newline|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'repr'
op|'('
name|'self'
op|'.'
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
dedent|''
dedent|''
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'capacity'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_dict'
op|'='
name|'dict'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'capacity'
op|'='
name|'capacity'
newline|'\n'
name|'self'
op|'.'
name|'head'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'tail'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__contains__
dedent|''
name|'def'
name|'__contains__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'key'
name|'in'
name|'self'
op|'.'
name|'_dict'
newline|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cur'
op|'='
name|'self'
op|'.'
name|'head'
newline|'\n'
name|'while'
name|'cur'
op|':'
newline|'\n'
indent|'            '
name|'yield'
name|'cur'
op|'.'
name|'key'
newline|'\n'
name|'cur'
op|'='
name|'cur'
op|'.'
name|'next'
newline|'\n'
nl|'\n'
DECL|member|__len__
dedent|''
dedent|''
name|'def'
name|'__len__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'len'
op|'('
name|'self'
op|'.'
name|'_dict'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__getitem__
dedent|''
name|'def'
name|'__getitem__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'item'
op|'='
name|'self'
op|'.'
name|'_dict'
op|'['
name|'key'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_update_item'
op|'('
name|'item'
op|')'
newline|'\n'
name|'return'
name|'item'
op|'.'
name|'value'
newline|'\n'
nl|'\n'
DECL|member|__setitem__
dedent|''
name|'def'
name|'__setitem__'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'item'
op|'='
name|'self'
op|'.'
name|'_dict'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
newline|'\n'
name|'if'
name|'item'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'item'
op|'='
name|'self'
op|'.'
name|'_Item'
op|'('
name|'key'
op|','
name|'value'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_dict'
op|'['
name|'key'
op|']'
op|'='
name|'item'
newline|'\n'
name|'self'
op|'.'
name|'_insert_item'
op|'('
name|'item'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'item'
op|'.'
name|'value'
op|'='
name|'value'
newline|'\n'
name|'self'
op|'.'
name|'_update_item'
op|'('
name|'item'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_manage_size'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'repr'
op|'('
name|'self'
op|'.'
name|'_dict'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_insert_item
dedent|''
name|'def'
name|'_insert_item'
op|'('
name|'self'
op|','
name|'item'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'item'
op|'.'
name|'previous'
op|'='
name|'None'
newline|'\n'
name|'item'
op|'.'
name|'next'
op|'='
name|'self'
op|'.'
name|'head'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'head'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'head'
op|'.'
name|'previous'
op|'='
name|'item'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'tail'
op|'='
name|'item'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'head'
op|'='
name|'item'
newline|'\n'
name|'self'
op|'.'
name|'_manage_size'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_manage_size
dedent|''
name|'def'
name|'_manage_size'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'while'
name|'len'
op|'('
name|'self'
op|'.'
name|'_dict'
op|')'
op|'>'
name|'self'
op|'.'
name|'capacity'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'self'
op|'.'
name|'_dict'
op|'['
name|'self'
op|'.'
name|'tail'
op|'.'
name|'key'
op|']'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'tail'
op|'!='
name|'self'
op|'.'
name|'head'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'tail'
op|'='
name|'self'
op|'.'
name|'tail'
op|'.'
name|'previous'
newline|'\n'
name|'self'
op|'.'
name|'tail'
op|'.'
name|'next'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'head'
op|'='
name|'self'
op|'.'
name|'tail'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_update_item
dedent|''
dedent|''
dedent|''
name|'def'
name|'_update_item'
op|'('
name|'self'
op|','
name|'item'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'head'
op|'=='
name|'item'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'previous'
op|'='
name|'item'
op|'.'
name|'previous'
newline|'\n'
name|'previous'
op|'.'
name|'next'
op|'='
name|'item'
op|'.'
name|'next'
newline|'\n'
name|'if'
name|'item'
op|'.'
name|'next'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'item'
op|'.'
name|'next'
op|'.'
name|'previous'
op|'='
name|'previous'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'tail'
op|'='
name|'previous'
newline|'\n'
nl|'\n'
dedent|''
name|'item'
op|'.'
name|'previous'
op|'='
name|'None'
newline|'\n'
name|'item'
op|'.'
name|'next'
op|'='
name|'self'
op|'.'
name|'head'
newline|'\n'
name|'self'
op|'.'
name|'head'
op|'.'
name|'previous'
op|'='
name|'self'
op|'.'
name|'head'
op|'='
name|'item'
newline|'\n'
nl|'\n'
DECL|class|Password
dedent|''
dedent|''
name|'class'
name|'Password'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Password object that stores itself as SHA512 hashed.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'str'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Load the string from an initial value, this should be the raw SHA512 hashed password\n        """'
newline|'\n'
name|'self'
op|'.'
name|'str'
op|'='
name|'str'
newline|'\n'
nl|'\n'
DECL|member|set
dedent|''
name|'def'
name|'set'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'str'
op|'='
name|'_hashfn'
op|'('
name|'value'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'str'
op|'('
name|'self'
op|'.'
name|'str'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__eq__
dedent|''
name|'def'
name|'__eq__'
op|'('
name|'self'
op|','
name|'other'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'other'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'return'
name|'str'
op|'('
name|'_hashfn'
op|'('
name|'other'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|')'
op|'=='
name|'str'
op|'('
name|'self'
op|'.'
name|'str'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__len__
dedent|''
name|'def'
name|'__len__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'str'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'len'
op|'('
name|'self'
op|'.'
name|'str'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
DECL|function|notify
dedent|''
dedent|''
dedent|''
name|'def'
name|'notify'
op|'('
name|'subject'
op|','
name|'body'
op|'='
name|'None'
op|','
name|'html_body'
op|'='
name|'None'
op|','
name|'to_string'
op|'='
name|'None'
op|','
name|'attachments'
op|'='
op|'['
op|']'
op|','
name|'append_instance_id'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'append_instance_id'
op|':'
newline|'\n'
indent|'        '
name|'subject'
op|'='
string|'"[%s] %s"'
op|'%'
op|'('
name|'boto'
op|'.'
name|'config'
op|'.'
name|'get_value'
op|'('
string|'"Instance"'
op|','
string|'"instance-id"'
op|')'
op|','
name|'subject'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'to_string'
op|':'
newline|'\n'
indent|'        '
name|'to_string'
op|'='
name|'boto'
op|'.'
name|'config'
op|'.'
name|'get_value'
op|'('
string|"'Notification'"
op|','
string|"'smtp_to'"
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'to_string'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'from_string'
op|'='
name|'boto'
op|'.'
name|'config'
op|'.'
name|'get_value'
op|'('
string|"'Notification'"
op|','
string|"'smtp_from'"
op|','
string|"'boto'"
op|')'
newline|'\n'
name|'msg'
op|'='
name|'MIMEMultipart'
op|'('
op|')'
newline|'\n'
name|'msg'
op|'['
string|"'From'"
op|']'
op|'='
name|'from_string'
newline|'\n'
name|'msg'
op|'['
string|"'To'"
op|']'
op|'='
name|'to_string'
newline|'\n'
name|'msg'
op|'['
string|"'Date'"
op|']'
op|'='
name|'formatdate'
op|'('
name|'localtime'
op|'='
name|'True'
op|')'
newline|'\n'
name|'msg'
op|'['
string|"'Subject'"
op|']'
op|'='
name|'subject'
newline|'\n'
nl|'\n'
name|'if'
name|'body'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'.'
name|'attach'
op|'('
name|'MIMEText'
op|'('
name|'body'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'html_body'
op|':'
newline|'\n'
indent|'                '
name|'part'
op|'='
name|'MIMEBase'
op|'('
string|"'text'"
op|','
string|"'html'"
op|')'
newline|'\n'
name|'part'
op|'.'
name|'set_payload'
op|'('
name|'html_body'
op|')'
newline|'\n'
name|'Encoders'
op|'.'
name|'encode_base64'
op|'('
name|'part'
op|')'
newline|'\n'
name|'msg'
op|'.'
name|'attach'
op|'('
name|'part'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'part'
name|'in'
name|'attachments'
op|':'
newline|'\n'
indent|'                '
name|'msg'
op|'.'
name|'attach'
op|'('
name|'part'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'smtp_host'
op|'='
name|'boto'
op|'.'
name|'config'
op|'.'
name|'get_value'
op|'('
string|"'Notification'"
op|','
string|"'smtp_host'"
op|','
string|"'localhost'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Alternate port support'
nl|'\n'
name|'if'
name|'boto'
op|'.'
name|'config'
op|'.'
name|'get_value'
op|'('
string|'"Notification"'
op|','
string|'"smtp_port"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'server'
op|'='
name|'smtplib'
op|'.'
name|'SMTP'
op|'('
name|'smtp_host'
op|','
name|'int'
op|'('
name|'boto'
op|'.'
name|'config'
op|'.'
name|'get_value'
op|'('
string|'"Notification"'
op|','
string|'"smtp_port"'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'server'
op|'='
name|'smtplib'
op|'.'
name|'SMTP'
op|'('
name|'smtp_host'
op|')'
newline|'\n'
nl|'\n'
comment|'# TLS support'
nl|'\n'
dedent|''
name|'if'
name|'boto'
op|'.'
name|'config'
op|'.'
name|'getbool'
op|'('
string|'"Notification"'
op|','
string|'"smtp_tls"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'server'
op|'.'
name|'ehlo'
op|'('
op|')'
newline|'\n'
name|'server'
op|'.'
name|'starttls'
op|'('
op|')'
newline|'\n'
name|'server'
op|'.'
name|'ehlo'
op|'('
op|')'
newline|'\n'
dedent|''
name|'smtp_user'
op|'='
name|'boto'
op|'.'
name|'config'
op|'.'
name|'get_value'
op|'('
string|"'Notification'"
op|','
string|"'smtp_user'"
op|','
string|"''"
op|')'
newline|'\n'
name|'smtp_pass'
op|'='
name|'boto'
op|'.'
name|'config'
op|'.'
name|'get_value'
op|'('
string|"'Notification'"
op|','
string|"'smtp_pass'"
op|','
string|"''"
op|')'
newline|'\n'
name|'if'
name|'smtp_user'
op|':'
newline|'\n'
indent|'                '
name|'server'
op|'.'
name|'login'
op|'('
name|'smtp_user'
op|','
name|'smtp_pass'
op|')'
newline|'\n'
dedent|''
name|'server'
op|'.'
name|'sendmail'
op|'('
name|'from_string'
op|','
name|'to_string'
op|','
name|'msg'
op|'.'
name|'as_string'
op|'('
op|')'
op|')'
newline|'\n'
name|'server'
op|'.'
name|'quit'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'exception'
op|'('
string|"'notify failed'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
