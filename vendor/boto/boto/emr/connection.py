begin_unit
comment|'# Copyright (c) 2010 Spotify AB'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Permission is hereby granted, free of charge, to any person obtaining a'
nl|'\n'
comment|'# copy of this software and associated documentation files (the'
nl|'\n'
comment|'# "Software"), to deal in the Software without restriction, including'
nl|'\n'
comment|'# without limitation the rights to use, copy, modify, merge, publish, dis-'
nl|'\n'
comment|'# tribute, sublicense, and/or sell copies of the Software, and to permit'
nl|'\n'
comment|'# persons to whom the Software is furnished to do so, subject to the fol-'
nl|'\n'
comment|'# lowing conditions:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# The above copyright notice and this permission notice shall be included'
nl|'\n'
comment|'# in all copies or substantial portions of the Software.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS'
nl|'\n'
comment|'# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABIL-'
nl|'\n'
comment|'# ITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT'
nl|'\n'
comment|'# SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,'
nl|'\n'
comment|'# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,'
nl|'\n'
comment|'# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS'
nl|'\n'
comment|'# IN THE SOFTWARE.'
nl|'\n'
nl|'\n'
string|'"""\nRepresents a connection to the EMR service\n"""'
newline|'\n'
name|'import'
name|'types'
newline|'\n'
nl|'\n'
name|'import'
name|'boto'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'ec2'
op|'.'
name|'regioninfo'
name|'import'
name|'RegionInfo'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'emr'
op|'.'
name|'jobflow'
name|'import'
name|'JobFlow'
op|','
name|'RunJobFlowResponse'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'emr'
op|'.'
name|'step'
name|'import'
name|'JarStep'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'connection'
name|'import'
name|'AWSQueryConnection'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'exception'
name|'import'
name|'EmrResponseError'
newline|'\n'
nl|'\n'
DECL|class|EmrConnection
name|'class'
name|'EmrConnection'
op|'('
name|'AWSQueryConnection'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|APIVersion
indent|'    '
name|'APIVersion'
op|'='
name|'boto'
op|'.'
name|'config'
op|'.'
name|'get'
op|'('
string|"'Boto'"
op|','
string|"'emr_version'"
op|','
string|"'2009-03-31'"
op|')'
newline|'\n'
DECL|variable|DefaultRegionName
name|'DefaultRegionName'
op|'='
name|'boto'
op|'.'
name|'config'
op|'.'
name|'get'
op|'('
string|"'Boto'"
op|','
string|"'emr_region_name'"
op|','
string|"'us-east-1'"
op|')'
newline|'\n'
DECL|variable|DefaultRegionEndpoint
name|'DefaultRegionEndpoint'
op|'='
name|'boto'
op|'.'
name|'config'
op|'.'
name|'get'
op|'('
string|"'Boto'"
op|','
string|"'emr_region_endpoint'"
op|','
nl|'\n'
string|"'elasticmapreduce.amazonaws.com'"
op|')'
newline|'\n'
DECL|variable|ResponseError
name|'ResponseError'
op|'='
name|'EmrResponseError'
newline|'\n'
nl|'\n'
comment|'# Constants for AWS Console debugging'
nl|'\n'
DECL|variable|DebuggingJar
name|'DebuggingJar'
op|'='
string|"'s3n://us-east-1.elasticmapreduce/libs/script-runner/script-runner.jar'"
newline|'\n'
DECL|variable|DebuggingArgs
name|'DebuggingArgs'
op|'='
string|"'s3n://us-east-1.elasticmapreduce/libs/state-pusher/0.1/fetch'"
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'aws_access_key_id'
op|'='
name|'None'
op|','
name|'aws_secret_access_key'
op|'='
name|'None'
op|','
nl|'\n'
name|'is_secure'
op|'='
name|'True'
op|','
name|'host'
op|'='
name|'None'
op|','
name|'port'
op|'='
name|'None'
op|','
name|'proxy'
op|'='
name|'None'
op|','
name|'proxy_port'
op|'='
name|'None'
op|','
nl|'\n'
name|'proxy_user'
op|'='
name|'None'
op|','
name|'proxy_pass'
op|'='
name|'None'
op|','
name|'debug'
op|'='
number|'0'
op|','
nl|'\n'
name|'https_connection_factory'
op|'='
name|'None'
op|','
name|'region'
op|'='
name|'None'
op|','
name|'path'
op|'='
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'region'
op|':'
newline|'\n'
indent|'            '
name|'region'
op|'='
name|'RegionInfo'
op|'('
name|'self'
op|','
name|'self'
op|'.'
name|'DefaultRegionName'
op|','
name|'self'
op|'.'
name|'DefaultRegionEndpoint'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'region'
op|'='
name|'region'
newline|'\n'
name|'AWSQueryConnection'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'aws_access_key_id'
op|','
nl|'\n'
name|'aws_secret_access_key'
op|','
nl|'\n'
name|'is_secure'
op|','
name|'port'
op|','
name|'proxy'
op|','
name|'proxy_port'
op|','
nl|'\n'
name|'proxy_user'
op|','
name|'proxy_pass'
op|','
nl|'\n'
name|'self'
op|'.'
name|'region'
op|'.'
name|'endpoint'
op|','
name|'debug'
op|','
nl|'\n'
name|'https_connection_factory'
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|describe_jobflow
dedent|''
name|'def'
name|'describe_jobflow'
op|'('
name|'self'
op|','
name|'jobflow_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Describes a single Elastic MapReduce job flow\n\n        :type jobflow_id: str\n        :param jobflow_id: The job flow id of interest\n        """'
newline|'\n'
name|'jobflows'
op|'='
name|'self'
op|'.'
name|'describe_jobflows'
op|'('
name|'jobflow_ids'
op|'='
op|'['
name|'jobflow_id'
op|']'
op|')'
newline|'\n'
name|'if'
name|'jobflows'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'jobflows'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|member|describe_jobflows
dedent|''
dedent|''
name|'def'
name|'describe_jobflows'
op|'('
name|'self'
op|','
name|'states'
op|'='
name|'None'
op|','
name|'jobflow_ids'
op|'='
name|'None'
op|','
nl|'\n'
name|'created_after'
op|'='
name|'None'
op|','
name|'created_before'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Retrieve all the Elastic MapReduce job flows on your account\n\n        :type states: list\n        :param states: A list of strings with job flow states wanted\n\n        :type jobflow_ids: list\n        :param jobflow_ids: A list of job flow IDs\n        :type created_after: datetime\n        :param created_after: Bound on job flow creation time\n\n        :type created_before: datetime\n        :param created_before: Bound on job flow creation time\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'if'
name|'states'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'build_list_params'
op|'('
name|'params'
op|','
name|'states'
op|','
string|"'JobFlowStates.member'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'jobflow_ids'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'build_list_params'
op|'('
name|'params'
op|','
name|'jobflow_ids'
op|','
string|"'JobFlowIds.member'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'created_after'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'CreatedAfter'"
op|']'
op|'='
name|'created_after'
op|'.'
name|'strftime'
op|'('
string|"'%Y-%m-%dT%H:%M:%S'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'created_before'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'CreatedBefore'"
op|']'
op|'='
name|'created_before'
op|'.'
name|'strftime'
op|'('
string|"'%Y-%m-%dT%H:%M:%S'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'get_list'
op|'('
string|"'DescribeJobFlows'"
op|','
name|'params'
op|','
op|'['
op|'('
string|"'member'"
op|','
name|'JobFlow'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|terminate_jobflows
dedent|''
name|'def'
name|'terminate_jobflows'
op|'('
name|'self'
op|','
name|'jobflow_ids'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Terminate an Elastic MapReduce job flow\n\n        :type jobflow_ids: list\n        :param jobflow_ids: A list of job flow IDs\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'build_list_params'
op|'('
name|'params'
op|','
name|'jobflow_ids'
op|','
string|"'JobFlowIds.member'"
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'get_status'
op|'('
string|"'TerminateJobFlows'"
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|add_jobflow_steps
dedent|''
name|'def'
name|'add_jobflow_steps'
op|'('
name|'self'
op|','
name|'jobflow_id'
op|','
name|'steps'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Adds steps to a jobflow\n\n        :type jobflow_id: str\n        :param jobflow_id: The job flow id\n        :type steps: list(boto.emr.Step)\n        :param steps: A list of steps to add to the job\n        """'
newline|'\n'
name|'if'
name|'type'
op|'('
name|'steps'
op|')'
op|'!='
name|'types'
op|'.'
name|'ListType'
op|':'
newline|'\n'
indent|'            '
name|'steps'
op|'='
op|'['
name|'steps'
op|']'
newline|'\n'
dedent|''
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'params'
op|'['
string|"'JobFlowId'"
op|']'
op|'='
name|'jobflow_id'
newline|'\n'
nl|'\n'
comment|'# Step args'
nl|'\n'
name|'step_args'
op|'='
op|'['
name|'self'
op|'.'
name|'_build_step_args'
op|'('
name|'step'
op|')'
name|'for'
name|'step'
name|'in'
name|'steps'
op|']'
newline|'\n'
name|'params'
op|'.'
name|'update'
op|'('
name|'self'
op|'.'
name|'_build_step_list'
op|'('
name|'step_args'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'get_object'
op|'('
string|"'AddJobFlowSteps'"
op|','
name|'params'
op|','
name|'RunJobFlowResponse'
op|')'
newline|'\n'
nl|'\n'
DECL|member|run_jobflow
dedent|''
name|'def'
name|'run_jobflow'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'log_uri'
op|','
name|'ec2_keyname'
op|'='
name|'None'
op|','
name|'availability_zone'
op|'='
name|'None'
op|','
nl|'\n'
name|'master_instance_type'
op|'='
string|"'m1.small'"
op|','
nl|'\n'
name|'slave_instance_type'
op|'='
string|"'m1.small'"
op|','
name|'num_instances'
op|'='
number|'1'
op|','
nl|'\n'
name|'action_on_failure'
op|'='
string|"'TERMINATE_JOB_FLOW'"
op|','
name|'keep_alive'
op|'='
name|'False'
op|','
nl|'\n'
name|'enable_debugging'
op|'='
name|'False'
op|','
nl|'\n'
name|'steps'
op|'='
op|'['
op|']'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Runs a job flow\n\n        :type name: str\n        :param name: Name of the job flow\n        :type log_uri: str\n        :param log_uri: URI of the S3 bucket to place logs\n        :type ec2_keyname: str\n        :param ec2_keyname: EC2 key used for the instances\n        :type availability_zone: str\n        :param availability_zone: EC2 availability zone of the cluster\n        :type master_instance_type: str\n        :param master_instance_type: EC2 instance type of the master\n        :type slave_instance_type: str\n        :param slave_instance_type: EC2 instance type of the slave nodes\n        :type num_instances: int\n        :param num_instances: Number of instances in the Hadoop cluster\n        :type action_on_failure: str\n        :param action_on_failure: Action to take if a step terminates\n        :type keep_alive: bool\n        :param keep_alive: Denotes whether the cluster should stay alive upon completion\n        :type enable_debugging: bool\n        :param enable_debugging: Denotes whether AWS console debugging should be enabled.\n        :type steps: list(boto.emr.Step)\n        :param steps: List of steps to add with the job\n\n        :rtype: str\n        :return: The jobflow id\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'action_on_failure'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'ActionOnFailure'"
op|']'
op|'='
name|'action_on_failure'
newline|'\n'
dedent|''
name|'params'
op|'['
string|"'Name'"
op|']'
op|'='
name|'name'
newline|'\n'
name|'params'
op|'['
string|"'LogUri'"
op|']'
op|'='
name|'log_uri'
newline|'\n'
nl|'\n'
comment|'# Instance args'
nl|'\n'
name|'instance_params'
op|'='
name|'self'
op|'.'
name|'_build_instance_args'
op|'('
name|'ec2_keyname'
op|','
name|'availability_zone'
op|','
nl|'\n'
name|'master_instance_type'
op|','
name|'slave_instance_type'
op|','
nl|'\n'
name|'num_instances'
op|','
name|'keep_alive'
op|')'
newline|'\n'
name|'params'
op|'.'
name|'update'
op|'('
name|'instance_params'
op|')'
newline|'\n'
nl|'\n'
comment|'# Debugging step from EMR API docs'
nl|'\n'
name|'if'
name|'enable_debugging'
op|':'
newline|'\n'
indent|'            '
name|'debugging_step'
op|'='
name|'JarStep'
op|'('
name|'name'
op|'='
string|"'Setup Hadoop Debugging'"
op|','
nl|'\n'
name|'action_on_failure'
op|'='
string|"'TERMINATE_JOB_FLOW'"
op|','
nl|'\n'
name|'main_class'
op|'='
name|'None'
op|','
nl|'\n'
name|'jar'
op|'='
name|'self'
op|'.'
name|'DebuggingJar'
op|','
nl|'\n'
name|'step_args'
op|'='
name|'self'
op|'.'
name|'DebuggingArgs'
op|')'
newline|'\n'
name|'steps'
op|'.'
name|'insert'
op|'('
number|'0'
op|','
name|'debugging_step'
op|')'
newline|'\n'
nl|'\n'
comment|'# Step args'
nl|'\n'
dedent|''
name|'if'
name|'steps'
op|':'
newline|'\n'
indent|'            '
name|'step_args'
op|'='
op|'['
name|'self'
op|'.'
name|'_build_step_args'
op|'('
name|'step'
op|')'
name|'for'
name|'step'
name|'in'
name|'steps'
op|']'
newline|'\n'
name|'params'
op|'.'
name|'update'
op|'('
name|'self'
op|'.'
name|'_build_step_list'
op|'('
name|'step_args'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'response'
op|'='
name|'self'
op|'.'
name|'get_object'
op|'('
string|"'RunJobFlow'"
op|','
name|'params'
op|','
name|'RunJobFlowResponse'
op|')'
newline|'\n'
name|'return'
name|'response'
op|'.'
name|'jobflowid'
newline|'\n'
nl|'\n'
DECL|member|_build_step_args
dedent|''
name|'def'
name|'_build_step_args'
op|'('
name|'self'
op|','
name|'step'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'step_params'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'step_params'
op|'['
string|"'ActionOnFailure'"
op|']'
op|'='
name|'step'
op|'.'
name|'action_on_failure'
newline|'\n'
name|'step_params'
op|'['
string|"'HadoopJarStep.Jar'"
op|']'
op|'='
name|'step'
op|'.'
name|'jar'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'main_class'
op|'='
name|'step'
op|'.'
name|'main_class'
op|'('
op|')'
newline|'\n'
name|'if'
name|'main_class'
op|':'
newline|'\n'
indent|'            '
name|'step_params'
op|'['
string|"'HadoopJarStep.MainClass'"
op|']'
op|'='
name|'main_class'
newline|'\n'
nl|'\n'
dedent|''
name|'args'
op|'='
name|'step'
op|'.'
name|'args'
op|'('
op|')'
newline|'\n'
name|'if'
name|'args'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'build_list_params'
op|'('
name|'step_params'
op|','
name|'args'
op|','
string|"'HadoopJarStep.Args.member'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'step_params'
op|'['
string|"'Name'"
op|']'
op|'='
name|'step'
op|'.'
name|'name'
newline|'\n'
name|'return'
name|'step_params'
newline|'\n'
nl|'\n'
DECL|member|_build_step_list
dedent|''
name|'def'
name|'_build_step_list'
op|'('
name|'self'
op|','
name|'steps'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'type'
op|'('
name|'steps'
op|')'
op|'!='
name|'types'
op|'.'
name|'ListType'
op|':'
newline|'\n'
indent|'            '
name|'steps'
op|'='
op|'['
name|'steps'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'i'
op|','
name|'step'
name|'in'
name|'enumerate'
op|'('
name|'steps'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'step'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'params'
op|'['
string|"'Steps.memeber.%s.%s'"
op|'%'
op|'('
name|'i'
op|'+'
number|'1'
op|','
name|'key'
op|')'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'params'
newline|'\n'
nl|'\n'
DECL|member|_build_instance_args
dedent|''
name|'def'
name|'_build_instance_args'
op|'('
name|'self'
op|','
name|'ec2_keyname'
op|','
name|'availability_zone'
op|','
name|'master_instance_type'
op|','
nl|'\n'
name|'slave_instance_type'
op|','
name|'num_instances'
op|','
name|'keep_alive'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'params'
op|'='
op|'{'
nl|'\n'
string|"'Instances.MasterInstanceType'"
op|':'
name|'master_instance_type'
op|','
nl|'\n'
string|"'Instances.SlaveInstanceType'"
op|':'
name|'slave_instance_type'
op|','
nl|'\n'
string|"'Instances.InstanceCount'"
op|':'
name|'num_instances'
op|','
nl|'\n'
string|"'Instances.KeepJobFlowAliveWhenNoSteps'"
op|':'
name|'str'
op|'('
name|'keep_alive'
op|')'
op|'.'
name|'lower'
op|'('
op|')'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'if'
name|'ec2_keyname'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'Instances.Ec2KeyName'"
op|']'
op|'='
name|'ec2_keyname'
newline|'\n'
dedent|''
name|'if'
name|'availability_zone'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'Placement'"
op|']'
op|'='
name|'availability_zone'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'params'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
