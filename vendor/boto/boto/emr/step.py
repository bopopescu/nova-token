begin_unit
comment|'# Copyright (c) 2010 Spotify AB'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Permission is hereby granted, free of charge, to any person obtaining a'
nl|'\n'
comment|'# copy of this software and associated documentation files (the'
nl|'\n'
comment|'# "Software"), to deal in the Software without restriction, including'
nl|'\n'
comment|'# without limitation the rights to use, copy, modify, merge, publish, dis-'
nl|'\n'
comment|'# tribute, sublicense, and/or sell copies of the Software, and to permit'
nl|'\n'
comment|'# persons to whom the Software is furnished to do so, subject to the fol-'
nl|'\n'
comment|'# lowing conditions:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# The above copyright notice and this permission notice shall be included'
nl|'\n'
comment|'# in all copies or substantial portions of the Software.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS'
nl|'\n'
comment|'# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABIL-'
nl|'\n'
comment|'# ITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT'
nl|'\n'
comment|'# SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,'
nl|'\n'
comment|'# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,'
nl|'\n'
comment|'# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS'
nl|'\n'
comment|'# IN THE SOFTWARE.'
nl|'\n'
nl|'\n'
DECL|class|Step
name|'class'
name|'Step'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Jobflow Step base class\n    """'
newline|'\n'
DECL|member|jar
name|'def'
name|'jar'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        :rtype: str\n        :return: URI to the jar\n        """'
newline|'\n'
name|'raise'
name|'NotImplemented'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|args
dedent|''
name|'def'
name|'args'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        :rtype: list(str)\n        :return: List of arguments for the step\n        """'
newline|'\n'
name|'raise'
name|'NotImplemented'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|main_class
dedent|''
name|'def'
name|'main_class'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        :rtype: str\n        :return: The main class name\n        """'
newline|'\n'
name|'raise'
name|'NotImplemented'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|JarStep
dedent|''
dedent|''
name|'class'
name|'JarStep'
op|'('
name|'Step'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Custom jar step\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'jar'
op|','
name|'main_class'
op|','
nl|'\n'
name|'action_on_failure'
op|'='
string|"'TERMINATE_JOB_FLOW'"
op|','
name|'step_args'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A elastic mapreduce step that executes a jar\n\n        :type name: str\n        :param name: The name of the step\n        :type jar: str\n        :param jar: S3 URI to the Jar file\n        :type main_class: str\n        :param main_class: The class to execute in the jar\n        :type action_on_failure: str\n        :param action_on_failure: An action, defined in the EMR docs to take on failure.\n        :type step_args: list(str)\n        :param step_args: A list of arguments to pass to the step\n        """'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'_jar'
op|'='
name|'jar'
newline|'\n'
name|'self'
op|'.'
name|'_main_class'
op|'='
name|'main_class'
newline|'\n'
name|'self'
op|'.'
name|'action_on_failure'
op|'='
name|'action_on_failure'
newline|'\n'
nl|'\n'
name|'if'
name|'isinstance'
op|'('
name|'step_args'
op|','
name|'basestring'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'step_args'
op|'='
op|'['
name|'step_args'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'step_args'
op|'='
name|'step_args'
newline|'\n'
nl|'\n'
DECL|member|jar
dedent|''
name|'def'
name|'jar'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_jar'
newline|'\n'
nl|'\n'
DECL|member|args
dedent|''
name|'def'
name|'args'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'args'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'step_args'
op|':'
newline|'\n'
indent|'            '
name|'args'
op|'.'
name|'extend'
op|'('
name|'self'
op|'.'
name|'step_args'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'args'
newline|'\n'
nl|'\n'
DECL|member|main_class
dedent|''
name|'def'
name|'main_class'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_main_class'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|StreamingStep
dedent|''
dedent|''
name|'class'
name|'StreamingStep'
op|'('
name|'Step'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Hadoop streaming step\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'mapper'
op|','
name|'reducer'
op|','
nl|'\n'
name|'action_on_failure'
op|'='
string|"'TERMINATE_JOB_FLOW'"
op|','
nl|'\n'
name|'cache_files'
op|'='
name|'None'
op|','
name|'cache_archives'
op|'='
name|'None'
op|','
nl|'\n'
name|'step_args'
op|'='
name|'None'
op|','
name|'input'
op|'='
name|'None'
op|','
name|'output'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A hadoop streaming elastic mapreduce step\n\n        :type name: str\n        :param name: The name of the step\n        :type mapper: str\n        :param mapper: The mapper URI\n        :type reducer: str\n        :param reducer: The reducer URI\n        :type action_on_failure: str\n        :param action_on_failure: An action, defined in the EMR docs to take on failure.\n        :type cache_files: list(str)\n        :param cache_files: A list of cache files to be bundled with the job\n        :type cache_archives: list(str)\n        :param cache_archives: A list of jar archives to be bundled with the job\n        :type step_args: list(str)\n        :param step_args: A list of arguments to pass to the step\n        :type input: str\n        :param input: The input uri\n        :type output: str\n        :param output: The output uri\n        """'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'mapper'
op|'='
name|'mapper'
newline|'\n'
name|'self'
op|'.'
name|'reducer'
op|'='
name|'reducer'
newline|'\n'
name|'self'
op|'.'
name|'action_on_failure'
op|'='
name|'action_on_failure'
newline|'\n'
name|'self'
op|'.'
name|'cache_files'
op|'='
name|'cache_files'
newline|'\n'
name|'self'
op|'.'
name|'cache_archives'
op|'='
name|'cache_archives'
newline|'\n'
name|'self'
op|'.'
name|'input'
op|'='
name|'input'
newline|'\n'
name|'self'
op|'.'
name|'output'
op|'='
name|'output'
newline|'\n'
nl|'\n'
name|'if'
name|'isinstance'
op|'('
name|'step_args'
op|','
name|'basestring'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'step_args'
op|'='
op|'['
name|'step_args'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'step_args'
op|'='
name|'step_args'
newline|'\n'
nl|'\n'
DECL|member|jar
dedent|''
name|'def'
name|'jar'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'/home/hadoop/contrib/streaming/hadoop-0.18-streaming.jar'"
newline|'\n'
nl|'\n'
DECL|member|main_class
dedent|''
name|'def'
name|'main_class'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|args
dedent|''
name|'def'
name|'args'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'args'
op|'='
op|'['
string|"'-mapper'"
op|','
name|'self'
op|'.'
name|'mapper'
op|','
nl|'\n'
string|"'-reducer'"
op|','
name|'self'
op|'.'
name|'reducer'
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'input'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'isinstance'
op|'('
name|'self'
op|'.'
name|'input'
op|','
name|'list'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'input'
name|'in'
name|'self'
op|'.'
name|'input'
op|':'
newline|'\n'
indent|'                    '
name|'args'
op|'.'
name|'extend'
op|'('
op|'('
string|"'-input'"
op|','
name|'input'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'args'
op|'.'
name|'extend'
op|'('
op|'('
string|"'-input'"
op|','
name|'self'
op|'.'
name|'input'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'self'
op|'.'
name|'output'
op|':'
newline|'\n'
indent|'            '
name|'args'
op|'.'
name|'extend'
op|'('
op|'('
string|"'-output'"
op|','
name|'self'
op|'.'
name|'output'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'cache_files'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'cache_file'
name|'in'
name|'self'
op|'.'
name|'cache_files'
op|':'
newline|'\n'
indent|'                '
name|'args'
op|'.'
name|'extend'
op|'('
op|'('
string|"'-cacheFile'"
op|','
name|'cache_file'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'self'
op|'.'
name|'cache_archives'
op|':'
newline|'\n'
indent|'           '
name|'for'
name|'cache_archive'
name|'in'
name|'self'
op|'.'
name|'cache_archives'
op|':'
newline|'\n'
indent|'                '
name|'args'
op|'.'
name|'extend'
op|'('
op|'('
string|"'-cacheArchive'"
op|','
name|'cache_archive'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'self'
op|'.'
name|'step_args'
op|':'
newline|'\n'
indent|'            '
name|'args'
op|'.'
name|'extend'
op|'('
name|'self'
op|'.'
name|'step_args'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'args'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
