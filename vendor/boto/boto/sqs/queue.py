begin_unit
comment|'# Copyright (c) 2006-2009 Mitch Garnaat http://garnaat.org/'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Permission is hereby granted, free of charge, to any person obtaining a'
nl|'\n'
comment|'# copy of this software and associated documentation files (the'
nl|'\n'
comment|'# "Software"), to deal in the Software without restriction, including'
nl|'\n'
comment|'# without limitation the rights to use, copy, modify, merge, publish, dis-'
nl|'\n'
comment|'# tribute, sublicense, and/or sell copies of the Software, and to permit'
nl|'\n'
comment|'# persons to whom the Software is furnished to do so, subject to the fol-'
nl|'\n'
comment|'# lowing conditions:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# The above copyright notice and this permission notice shall be included'
nl|'\n'
comment|'# in all copies or substantial portions of the Software.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS'
nl|'\n'
comment|'# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABIL-'
nl|'\n'
comment|'# ITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT'
nl|'\n'
comment|'# SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, '
nl|'\n'
comment|'# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,'
nl|'\n'
comment|'# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS'
nl|'\n'
comment|'# IN THE SOFTWARE.'
nl|'\n'
nl|'\n'
string|'"""\nRepresents an SQS Queue\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'urlparse'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'sqs'
op|'.'
name|'message'
name|'import'
name|'Message'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Queue
name|'class'
name|'Queue'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'connection'
op|'='
name|'None'
op|','
name|'url'
op|'='
name|'None'
op|','
name|'message_class'
op|'='
name|'Message'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'connection'
op|'='
name|'connection'
newline|'\n'
name|'self'
op|'.'
name|'url'
op|'='
name|'url'
newline|'\n'
name|'self'
op|'.'
name|'message_class'
op|'='
name|'message_class'
newline|'\n'
name|'self'
op|'.'
name|'visibility_timeout'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_id
dedent|''
name|'def'
name|'_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'url'
op|':'
newline|'\n'
indent|'            '
name|'val'
op|'='
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'self'
op|'.'
name|'url'
op|')'
op|'['
number|'2'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'val'
op|'='
name|'self'
op|'.'
name|'url'
newline|'\n'
dedent|''
name|'return'
name|'val'
newline|'\n'
DECL|variable|id
dedent|''
name|'id'
op|'='
name|'property'
op|'('
name|'_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_name
name|'def'
name|'_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'url'
op|':'
newline|'\n'
indent|'            '
name|'val'
op|'='
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'self'
op|'.'
name|'url'
op|')'
op|'['
number|'2'
op|']'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
op|'['
number|'2'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'val'
op|'='
name|'self'
op|'.'
name|'url'
newline|'\n'
dedent|''
name|'return'
name|'val'
newline|'\n'
DECL|variable|name
dedent|''
name|'name'
op|'='
name|'property'
op|'('
name|'_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|startElement
name|'def'
name|'startElement'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'attrs'
op|','
name|'connection'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|endElement
dedent|''
name|'def'
name|'endElement'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'value'
op|','
name|'connection'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'name'
op|'=='
string|"'QueueUrl'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'url'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'VisibilityTimeout'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'visibility_timeout'
op|'='
name|'int'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'setattr'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|set_message_class
dedent|''
dedent|''
name|'def'
name|'set_message_class'
op|'('
name|'self'
op|','
name|'message_class'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Set the message class that should be used when instantiating messages read\n        from the queue.  By default, the class boto.sqs.message.Message is used but\n        this can be overriden with any class that behaves like a message.\n\n        :type message_class: Message-like class\n        :param message_class:  The new Message class\n        """'
newline|'\n'
name|'self'
op|'.'
name|'message_class'
op|'='
name|'message_class'
newline|'\n'
nl|'\n'
DECL|member|get_attributes
dedent|''
name|'def'
name|'get_attributes'
op|'('
name|'self'
op|','
name|'attributes'
op|'='
string|"'All'"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Retrieves attributes about this queue object and returns\n        them in an Attribute instance (subclass of a Dictionary).\n\n        :type attributes: string\n        :param attributes: String containing one of:\n                           ApproximateNumberOfMessages,\n                           ApproximateNumberOfMessagesNotVisible,\n                           VisibilityTimeout,\n                           CreatedTimestamp,\n                           LastModifiedTimestamp,\n                           Policy\n        :rtype: Attribute object\n        :return: An Attribute object which is a mapping type holding the\n                 requested name/value pairs\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'get_queue_attributes'
op|'('
name|'self'
op|','
name|'attributes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|set_attribute
dedent|''
name|'def'
name|'set_attribute'
op|'('
name|'self'
op|','
name|'attribute'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Set a new value for an attribute of the Queue.\n        \n        :type attribute: String\n        :param attribute: The name of the attribute you want to set.  The\n                           only valid value at this time is: VisibilityTimeout\n        :type value: int\n        :param value: The new value for the attribute.\n                      For VisibilityTimeout the value must be an\n                      integer number of seconds from 0 to 86400.\n\n        :rtype: bool\n        :return: True if successful, otherwise False.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'set_queue_attribute'
op|'('
name|'self'
op|','
name|'attribute'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_timeout
dedent|''
name|'def'
name|'get_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get the visibility timeout for the queue.\n        \n        :rtype: int\n        :return: The number of seconds as an integer.\n        """'
newline|'\n'
name|'a'
op|'='
name|'self'
op|'.'
name|'get_attributes'
op|'('
string|"'VisibilityTimeout'"
op|')'
newline|'\n'
name|'return'
name|'int'
op|'('
name|'a'
op|'['
string|"'VisibilityTimeout'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|set_timeout
dedent|''
name|'def'
name|'set_timeout'
op|'('
name|'self'
op|','
name|'visibility_timeout'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Set the visibility timeout for the queue.\n\n        :type visibility_timeout: int\n        :param visibility_timeout: The desired timeout in seconds\n        """'
newline|'\n'
name|'retval'
op|'='
name|'self'
op|'.'
name|'set_attribute'
op|'('
string|"'VisibilityTimeout'"
op|','
name|'visibility_timeout'
op|')'
newline|'\n'
name|'if'
name|'retval'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'visibility_timeout'
op|'='
name|'visibility_timeout'
newline|'\n'
dedent|''
name|'return'
name|'retval'
newline|'\n'
nl|'\n'
DECL|member|add_permission
dedent|''
name|'def'
name|'add_permission'
op|'('
name|'self'
op|','
name|'label'
op|','
name|'aws_account_id'
op|','
name|'action_name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Add a permission to a queue.\n\n        :type label: str or unicode\n        :param label: A unique identification of the permission you are setting.\n                      Maximum of 80 characters ``[0-9a-zA-Z_-]``\n                      Example, AliceSendMessage\n\n        :type aws_account_id: str or unicode\n        :param principal_id: The AWS account number of the principal who will be given\n                             permission.  The principal must have an AWS account, but\n                             does not need to be signed up for Amazon SQS. For information\n                             about locating the AWS account identification.\n\n        :type action_name: str or unicode\n        :param action_name: The action.  Valid choices are:\n                            \\*|SendMessage|ReceiveMessage|DeleteMessage|\n                            ChangeMessageVisibility|GetQueueAttributes\n\n        :rtype: bool\n        :return: True if successful, False otherwise.\n\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'add_permission'
op|'('
name|'self'
op|','
name|'label'
op|','
name|'aws_account_id'
op|','
name|'action_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|remove_permission
dedent|''
name|'def'
name|'remove_permission'
op|'('
name|'self'
op|','
name|'label'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Remove a permission from a queue.\n\n        :type label: str or unicode\n        :param label: The unique label associated with the permission being removed.\n\n        :rtype: bool\n        :return: True if successful, False otherwise.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'remove_permission'
op|'('
name|'self'
op|','
name|'label'
op|')'
newline|'\n'
nl|'\n'
DECL|member|read
dedent|''
name|'def'
name|'read'
op|'('
name|'self'
op|','
name|'visibility_timeout'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Read a single message from the queue.\n        \n        :type visibility_timeout: int\n        :param visibility_timeout: The timeout for this message in seconds\n\n        :rtype: :class:`boto.sqs.message.Message`\n        :return: A single message or None if queue is empty\n        """'
newline|'\n'
name|'rs'
op|'='
name|'self'
op|'.'
name|'get_messages'
op|'('
number|'1'
op|','
name|'visibility_timeout'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'rs'
op|')'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'rs'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|write
dedent|''
dedent|''
name|'def'
name|'write'
op|'('
name|'self'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Add a single message to the queue.\n\n        :type message: Message\n        :param message: The message to be written to the queue\n\n        :rtype: :class:`boto.sqs.message.Message`\n        :return: The :class:`boto.sqs.message.Message` object that was written.\n        """'
newline|'\n'
name|'new_msg'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'send_message'
op|'('
name|'self'
op|','
name|'message'
op|'.'
name|'get_body_encoded'
op|'('
op|')'
op|')'
newline|'\n'
name|'message'
op|'.'
name|'id'
op|'='
name|'new_msg'
op|'.'
name|'id'
newline|'\n'
name|'message'
op|'.'
name|'md5'
op|'='
name|'new_msg'
op|'.'
name|'md5'
newline|'\n'
name|'return'
name|'message'
newline|'\n'
nl|'\n'
DECL|member|new_message
dedent|''
name|'def'
name|'new_message'
op|'('
name|'self'
op|','
name|'body'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create new message of appropriate class.\n\n        :type body: message body\n        :param body: The body of the newly created message (optional).\n\n        :rtype: :class:`boto.sqs.message.Message`\n        :return: A new Message object\n        """'
newline|'\n'
name|'m'
op|'='
name|'self'
op|'.'
name|'message_class'
op|'('
name|'self'
op|','
name|'body'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'queue'
op|'='
name|'self'
newline|'\n'
name|'return'
name|'m'
newline|'\n'
nl|'\n'
comment|'# get a variable number of messages, returns a list of messages'
nl|'\n'
DECL|member|get_messages
dedent|''
name|'def'
name|'get_messages'
op|'('
name|'self'
op|','
name|'num_messages'
op|'='
number|'1'
op|','
name|'visibility_timeout'
op|'='
name|'None'
op|','
nl|'\n'
name|'attributes'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get a variable number of messages.\n\n        :type num_messages: int\n        :param num_messages: The maximum number of messages to read from the queue.\n        \n        :type visibility_timeout: int\n        :param visibility_timeout: The VisibilityTimeout for the messages read.\n\n        :type attributes: str\n        :param attributes: The name of additional attribute to return with response\n                           or All if you want all attributes.  The default is to\n                           return no additional attributes.  Valid values:\n                           All\n                           SenderId\n                           SentTimestamp\n                           ApproximateReceiveCount\n                           ApproximateFirstReceiveTimestamp\n                           \n        :rtype: list\n        :return: A list of :class:`boto.sqs.message.Message` objects.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'receive_message'
op|'('
name|'self'
op|','
name|'number_messages'
op|'='
name|'num_messages'
op|','
nl|'\n'
name|'visibility_timeout'
op|'='
name|'visibility_timeout'
op|','
nl|'\n'
name|'attributes'
op|'='
name|'attributes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_message
dedent|''
name|'def'
name|'delete_message'
op|'('
name|'self'
op|','
name|'message'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Delete a message from the queue.\n\n        :type message: :class:`boto.sqs.message.Message`\n        :param message: The :class:`boto.sqs.message.Message` object to delete.\n\n        :rtype: bool\n        :return: True if successful, False otherwise\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'delete_message'
op|'('
name|'self'
op|','
name|'message'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete
dedent|''
name|'def'
name|'delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Delete the queue.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'delete_queue'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|clear
dedent|''
name|'def'
name|'clear'
op|'('
name|'self'
op|','
name|'page_size'
op|'='
number|'10'
op|','
name|'vtimeout'
op|'='
number|'10'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Utility function to remove all messages from a queue"""'
newline|'\n'
name|'n'
op|'='
number|'0'
newline|'\n'
name|'l'
op|'='
name|'self'
op|'.'
name|'get_messages'
op|'('
name|'page_size'
op|','
name|'vtimeout'
op|')'
newline|'\n'
name|'while'
name|'l'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'m'
name|'in'
name|'l'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'delete_message'
op|'('
name|'m'
op|')'
newline|'\n'
name|'n'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'l'
op|'='
name|'self'
op|'.'
name|'get_messages'
op|'('
name|'page_size'
op|','
name|'vtimeout'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'n'
newline|'\n'
nl|'\n'
DECL|member|count
dedent|''
name|'def'
name|'count'
op|'('
name|'self'
op|','
name|'page_size'
op|'='
number|'10'
op|','
name|'vtimeout'
op|'='
number|'10'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Utility function to count the number of messages in a queue.\n        Note: This function now calls GetQueueAttributes to obtain\n        an \'approximate\' count of the number of messages in a queue.\n        """'
newline|'\n'
name|'a'
op|'='
name|'self'
op|'.'
name|'get_attributes'
op|'('
string|"'ApproximateNumberOfMessages'"
op|')'
newline|'\n'
name|'return'
name|'int'
op|'('
name|'a'
op|'['
string|"'ApproximateNumberOfMessages'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|count_slow
dedent|''
name|'def'
name|'count_slow'
op|'('
name|'self'
op|','
name|'page_size'
op|'='
number|'10'
op|','
name|'vtimeout'
op|'='
number|'10'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Deprecated.  This is the old \'count\' method that actually counts\n        the messages by reading them all.  This gives an accurate count but\n        is very slow for queues with non-trivial number of messasges.\n        Instead, use get_attribute(\'ApproximateNumberOfMessages\') to take\n        advantage of the new SQS capability.  This is retained only for\n        the unit tests.\n        """'
newline|'\n'
name|'n'
op|'='
number|'0'
newline|'\n'
name|'l'
op|'='
name|'self'
op|'.'
name|'get_messages'
op|'('
name|'page_size'
op|','
name|'vtimeout'
op|')'
newline|'\n'
name|'while'
name|'l'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'m'
name|'in'
name|'l'
op|':'
newline|'\n'
indent|'                '
name|'n'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'l'
op|'='
name|'self'
op|'.'
name|'get_messages'
op|'('
name|'page_size'
op|','
name|'vtimeout'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'n'
newline|'\n'
nl|'\n'
DECL|member|dump_
dedent|''
name|'def'
name|'dump_'
op|'('
name|'self'
op|','
name|'file_name'
op|','
name|'page_size'
op|'='
number|'10'
op|','
name|'vtimeout'
op|'='
number|'10'
op|','
name|'sep'
op|'='
string|"'\\n'"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Utility function to dump the messages in a queue to a file\n        NOTE: Page size must be < 10 else SQS errors"""'
newline|'\n'
name|'fp'
op|'='
name|'open'
op|'('
name|'file_name'
op|','
string|"'wb'"
op|')'
newline|'\n'
name|'n'
op|'='
number|'0'
newline|'\n'
name|'l'
op|'='
name|'self'
op|'.'
name|'get_messages'
op|'('
name|'page_size'
op|','
name|'vtimeout'
op|')'
newline|'\n'
name|'while'
name|'l'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'m'
name|'in'
name|'l'
op|':'
newline|'\n'
indent|'                '
name|'fp'
op|'.'
name|'write'
op|'('
name|'m'
op|'.'
name|'get_body'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'sep'
op|':'
newline|'\n'
indent|'                    '
name|'fp'
op|'.'
name|'write'
op|'('
name|'sep'
op|')'
newline|'\n'
dedent|''
name|'n'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'l'
op|'='
name|'self'
op|'.'
name|'get_messages'
op|'('
name|'page_size'
op|','
name|'vtimeout'
op|')'
newline|'\n'
dedent|''
name|'fp'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'return'
name|'n'
newline|'\n'
nl|'\n'
DECL|member|save_to_file
dedent|''
name|'def'
name|'save_to_file'
op|'('
name|'self'
op|','
name|'fp'
op|','
name|'sep'
op|'='
string|"'\\n'"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Read all messages from the queue and persist them to file-like object.\n        Messages are written to the file and the \'sep\' string is written\n        in between messages.  Messages are deleted from the queue after\n        being written to the file.\n        Returns the number of messages saved.\n        """'
newline|'\n'
name|'n'
op|'='
number|'0'
newline|'\n'
name|'m'
op|'='
name|'self'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'while'
name|'m'
op|':'
newline|'\n'
indent|'            '
name|'n'
op|'+='
number|'1'
newline|'\n'
name|'fp'
op|'.'
name|'write'
op|'('
name|'m'
op|'.'
name|'get_body'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'sep'
op|':'
newline|'\n'
indent|'                '
name|'fp'
op|'.'
name|'write'
op|'('
name|'sep'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'delete_message'
op|'('
name|'m'
op|')'
newline|'\n'
name|'m'
op|'='
name|'self'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'n'
newline|'\n'
nl|'\n'
DECL|member|save_to_filename
dedent|''
name|'def'
name|'save_to_filename'
op|'('
name|'self'
op|','
name|'file_name'
op|','
name|'sep'
op|'='
string|"'\\n'"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Read all messages from the queue and persist them to local file.\n        Messages are written to the file and the \'sep\' string is written\n        in between messages.  Messages are deleted from the queue after\n        being written to the file.\n        Returns the number of messages saved.\n        """'
newline|'\n'
name|'fp'
op|'='
name|'open'
op|'('
name|'file_name'
op|','
string|"'wb'"
op|')'
newline|'\n'
name|'n'
op|'='
name|'self'
op|'.'
name|'save_to_file'
op|'('
name|'fp'
op|','
name|'sep'
op|')'
newline|'\n'
name|'fp'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'return'
name|'n'
newline|'\n'
nl|'\n'
comment|'# for backwards compatibility'
nl|'\n'
DECL|variable|save
dedent|''
name|'save'
op|'='
name|'save_to_filename'
newline|'\n'
nl|'\n'
DECL|member|save_to_s3
name|'def'
name|'save_to_s3'
op|'('
name|'self'
op|','
name|'bucket'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Read all messages from the queue and persist them to S3.\n        Messages are stored in the S3 bucket using a naming scheme of::\n        \n            <queue_id>/<message_id>\n        \n        Messages are deleted from the queue after being saved to S3.\n        Returns the number of messages saved.\n        """'
newline|'\n'
name|'n'
op|'='
number|'0'
newline|'\n'
name|'m'
op|'='
name|'self'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'while'
name|'m'
op|':'
newline|'\n'
indent|'            '
name|'n'
op|'+='
number|'1'
newline|'\n'
name|'key'
op|'='
name|'bucket'
op|'.'
name|'new_key'
op|'('
string|"'%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'id'
op|','
name|'m'
op|'.'
name|'id'
op|')'
op|')'
newline|'\n'
name|'key'
op|'.'
name|'set_contents_from_string'
op|'('
name|'m'
op|'.'
name|'get_body'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'delete_message'
op|'('
name|'m'
op|')'
newline|'\n'
name|'m'
op|'='
name|'self'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'n'
newline|'\n'
nl|'\n'
DECL|member|load_from_s3
dedent|''
name|'def'
name|'load_from_s3'
op|'('
name|'self'
op|','
name|'bucket'
op|','
name|'prefix'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Load messages previously saved to S3.\n        """'
newline|'\n'
name|'n'
op|'='
number|'0'
newline|'\n'
name|'if'
name|'prefix'
op|':'
newline|'\n'
indent|'            '
name|'prefix'
op|'='
string|"'%s/'"
op|'%'
name|'prefix'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'prefix'
op|'='
string|"'%s/'"
op|'%'
name|'self'
op|'.'
name|'id'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
dedent|''
name|'rs'
op|'='
name|'bucket'
op|'.'
name|'list'
op|'('
name|'prefix'
op|'='
name|'prefix'
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'rs'
op|':'
newline|'\n'
indent|'            '
name|'n'
op|'+='
number|'1'
newline|'\n'
name|'m'
op|'='
name|'self'
op|'.'
name|'new_message'
op|'('
name|'key'
op|'.'
name|'get_contents_as_string'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'write'
op|'('
name|'m'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'n'
newline|'\n'
nl|'\n'
DECL|member|load_from_file
dedent|''
name|'def'
name|'load_from_file'
op|'('
name|'self'
op|','
name|'fp'
op|','
name|'sep'
op|'='
string|"'\\n'"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Utility function to load messages from a file-like object to a queue"""'
newline|'\n'
name|'n'
op|'='
number|'0'
newline|'\n'
name|'body'
op|'='
string|"''"
newline|'\n'
name|'l'
op|'='
name|'fp'
op|'.'
name|'readline'
op|'('
op|')'
newline|'\n'
name|'while'
name|'l'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'l'
op|'=='
name|'sep'
op|':'
newline|'\n'
indent|'                '
name|'m'
op|'='
name|'Message'
op|'('
name|'self'
op|','
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'write'
op|'('
name|'m'
op|')'
newline|'\n'
name|'n'
op|'+='
number|'1'
newline|'\n'
name|'print'
string|"'writing message %d'"
op|'%'
name|'n'
newline|'\n'
name|'body'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'body'
op|'='
name|'body'
op|'+'
name|'l'
newline|'\n'
dedent|''
name|'l'
op|'='
name|'fp'
op|'.'
name|'readline'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'n'
newline|'\n'
nl|'\n'
DECL|member|load_from_filename
dedent|''
name|'def'
name|'load_from_filename'
op|'('
name|'self'
op|','
name|'file_name'
op|','
name|'sep'
op|'='
string|"'\\n'"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Utility function to load messages from a local filename to a queue"""'
newline|'\n'
name|'fp'
op|'='
name|'open'
op|'('
name|'file_name'
op|','
string|"'rb'"
op|')'
newline|'\n'
name|'n'
op|'='
name|'self'
op|'.'
name|'load_file_file'
op|'('
name|'fp'
op|','
name|'sep'
op|')'
newline|'\n'
name|'fp'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'return'
name|'n'
newline|'\n'
nl|'\n'
comment|'# for backward compatibility'
nl|'\n'
DECL|variable|load
dedent|''
name|'load'
op|'='
name|'load_from_filename'
newline|'\n'
nl|'\n'
dedent|''
endmarker|''
end_unit
