begin_unit
comment|'#!/usr/bin/env python'
nl|'\n'
nl|'\n'
comment|'# Copyright (c) 2006,2007 Mitch Garnaat http://garnaat.org/'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Permission is hereby granted, free of charge, to any person obtaining a'
nl|'\n'
comment|'# copy of this software and associated documentation files (the'
nl|'\n'
comment|'# "Software"), to deal in the Software without restriction, including'
nl|'\n'
comment|'# without limitation the rights to use, copy, modify, merge, publish, dis-'
nl|'\n'
comment|'# tribute, sublicense, and/or sell copies of the Software, and to permit'
nl|'\n'
comment|'# persons to whom the Software is furnished to do so, subject to the fol-'
nl|'\n'
comment|'# lowing conditions:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# The above copyright notice and this permission notice shall be included'
nl|'\n'
comment|'# in all copies or substantial portions of the Software.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS'
nl|'\n'
comment|'# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABIL-'
nl|'\n'
comment|'# ITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT'
nl|'\n'
comment|'# SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, '
nl|'\n'
comment|'# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,'
nl|'\n'
comment|'# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS'
nl|'\n'
comment|'# IN THE SOFTWARE.'
nl|'\n'
nl|'\n'
string|'"""\nSome unit tests for the S3Connection\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'urllib'
newline|'\n'
nl|'\n'
name|'from'
name|'boto'
op|'.'
name|'s3'
op|'.'
name|'connection'
name|'import'
name|'S3Connection'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'exception'
name|'import'
name|'S3PermissionsError'
newline|'\n'
nl|'\n'
comment|'# this test requires a devpay product and user token to run:'
nl|'\n'
nl|'\n'
DECL|variable|AMAZON_USER_TOKEN
name|'AMAZON_USER_TOKEN'
op|'='
string|"'{UserToken}...your token here...'"
newline|'\n'
DECL|variable|DEVPAY_HEADERS
name|'DEVPAY_HEADERS'
op|'='
op|'{'
string|"'x-amz-security-token'"
op|':'
name|'AMAZON_USER_TOKEN'
op|'}'
newline|'\n'
nl|'\n'
name|'print'
string|"'--- running S3Connection tests (DevPay) ---'"
newline|'\n'
DECL|variable|c
name|'c'
op|'='
name|'S3Connection'
op|'('
op|')'
newline|'\n'
comment|'# create a new, empty bucket'
nl|'\n'
DECL|variable|bucket_name
name|'bucket_name'
op|'='
string|"'test-%d'"
op|'%'
name|'int'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
DECL|variable|bucket
name|'bucket'
op|'='
name|'c'
op|'.'
name|'create_bucket'
op|'('
name|'bucket_name'
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
comment|"# now try a get_bucket call and see if it's really there"
nl|'\n'
DECL|variable|bucket
name|'bucket'
op|'='
name|'c'
op|'.'
name|'get_bucket'
op|'('
name|'bucket_name'
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
comment|'# test logging'
nl|'\n'
DECL|variable|logging_bucket
name|'logging_bucket'
op|'='
name|'c'
op|'.'
name|'create_bucket'
op|'('
name|'bucket_name'
op|'+'
string|"'-log'"
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'logging_bucket'
op|'.'
name|'set_as_logging_target'
op|'('
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'bucket'
op|'.'
name|'enable_logging'
op|'('
name|'target_bucket'
op|'='
name|'logging_bucket'
op|','
name|'target_prefix'
op|'='
name|'bucket'
op|'.'
name|'name'
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'bucket'
op|'.'
name|'disable_logging'
op|'('
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'c'
op|'.'
name|'delete_bucket'
op|'('
name|'logging_bucket'
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
comment|"# create a new key and store it's content from a string"
nl|'\n'
DECL|variable|k
name|'k'
op|'='
name|'bucket'
op|'.'
name|'new_key'
op|'('
op|')'
newline|'\n'
name|'k'
op|'.'
name|'name'
op|'='
string|"'foobar'"
newline|'\n'
DECL|variable|s1
name|'s1'
op|'='
string|"'This is a test of file upload and download'"
newline|'\n'
DECL|variable|s2
name|'s2'
op|'='
string|"'This is a second string to test file upload and download'"
newline|'\n'
name|'k'
op|'.'
name|'set_contents_from_string'
op|'('
name|'s1'
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
DECL|variable|fp
name|'fp'
op|'='
name|'open'
op|'('
string|"'foobar'"
op|','
string|"'wb'"
op|')'
newline|'\n'
comment|'# now get the contents from s3 to a local file'
nl|'\n'
name|'k'
op|'.'
name|'get_contents_to_file'
op|'('
name|'fp'
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'fp'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
DECL|variable|fp
name|'fp'
op|'='
name|'open'
op|'('
string|"'foobar'"
op|')'
newline|'\n'
comment|'# check to make sure content read from s3 is identical to original'
nl|'\n'
name|'assert'
name|'s1'
op|'=='
name|'fp'
op|'.'
name|'read'
op|'('
op|')'
op|','
string|"'corrupted file'"
newline|'\n'
name|'fp'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
comment|'# test generated URLs'
nl|'\n'
DECL|variable|url
name|'url'
op|'='
name|'k'
op|'.'
name|'generate_url'
op|'('
number|'3600'
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
DECL|variable|file
name|'file'
op|'='
name|'urllib'
op|'.'
name|'urlopen'
op|'('
name|'url'
op|')'
newline|'\n'
name|'assert'
name|'s1'
op|'=='
name|'file'
op|'.'
name|'read'
op|'('
op|')'
op|','
string|"'invalid URL %s'"
op|'%'
name|'url'
newline|'\n'
DECL|variable|url
name|'url'
op|'='
name|'k'
op|'.'
name|'generate_url'
op|'('
number|'3600'
op|','
name|'force_http'
op|'='
name|'True'
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
DECL|variable|file
name|'file'
op|'='
name|'urllib'
op|'.'
name|'urlopen'
op|'('
name|'url'
op|')'
newline|'\n'
name|'assert'
name|'s1'
op|'=='
name|'file'
op|'.'
name|'read'
op|'('
op|')'
op|','
string|"'invalid URL %s'"
op|'%'
name|'url'
newline|'\n'
name|'bucket'
op|'.'
name|'delete_key'
op|'('
name|'k'
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
comment|'# test a few variations on get_all_keys - first load some data'
nl|'\n'
comment|"# for the first one, let's override the content type"
nl|'\n'
DECL|variable|phony_mimetype
name|'phony_mimetype'
op|'='
string|"'application/x-boto-test'"
newline|'\n'
DECL|variable|headers
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
name|'phony_mimetype'
op|'}'
newline|'\n'
name|'headers'
op|'.'
name|'update'
op|'('
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'k'
op|'.'
name|'name'
op|'='
string|"'foo/bar'"
newline|'\n'
name|'k'
op|'.'
name|'set_contents_from_string'
op|'('
name|'s1'
op|','
name|'headers'
op|')'
newline|'\n'
name|'k'
op|'.'
name|'name'
op|'='
string|"'foo/bas'"
newline|'\n'
name|'k'
op|'.'
name|'set_contents_from_filename'
op|'('
string|"'foobar'"
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'k'
op|'.'
name|'name'
op|'='
string|"'foo/bat'"
newline|'\n'
name|'k'
op|'.'
name|'set_contents_from_string'
op|'('
name|'s1'
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'k'
op|'.'
name|'name'
op|'='
string|"'fie/bar'"
newline|'\n'
name|'k'
op|'.'
name|'set_contents_from_string'
op|'('
name|'s1'
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'k'
op|'.'
name|'name'
op|'='
string|"'fie/bas'"
newline|'\n'
name|'k'
op|'.'
name|'set_contents_from_string'
op|'('
name|'s1'
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'k'
op|'.'
name|'name'
op|'='
string|"'fie/bat'"
newline|'\n'
name|'k'
op|'.'
name|'set_contents_from_string'
op|'('
name|'s1'
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
comment|'# try resetting the contents to another value'
nl|'\n'
DECL|variable|md5
name|'md5'
op|'='
name|'k'
op|'.'
name|'md5'
newline|'\n'
name|'k'
op|'.'
name|'set_contents_from_string'
op|'('
name|'s2'
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'assert'
name|'k'
op|'.'
name|'md5'
op|'!='
name|'md5'
newline|'\n'
name|'os'
op|'.'
name|'unlink'
op|'('
string|"'foobar'"
op|')'
newline|'\n'
DECL|variable|all
name|'all'
op|'='
name|'bucket'
op|'.'
name|'get_all_keys'
op|'('
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'assert'
name|'len'
op|'('
name|'all'
op|')'
op|'=='
number|'6'
newline|'\n'
DECL|variable|rs
name|'rs'
op|'='
name|'bucket'
op|'.'
name|'get_all_keys'
op|'('
name|'prefix'
op|'='
string|"'foo'"
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'assert'
name|'len'
op|'('
name|'rs'
op|')'
op|'=='
number|'3'
newline|'\n'
DECL|variable|rs
name|'rs'
op|'='
name|'bucket'
op|'.'
name|'get_all_keys'
op|'('
name|'prefix'
op|'='
string|"''"
op|','
name|'delimiter'
op|'='
string|"'/'"
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'assert'
name|'len'
op|'('
name|'rs'
op|')'
op|'=='
number|'2'
newline|'\n'
DECL|variable|rs
name|'rs'
op|'='
name|'bucket'
op|'.'
name|'get_all_keys'
op|'('
name|'maxkeys'
op|'='
number|'5'
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'assert'
name|'len'
op|'('
name|'rs'
op|')'
op|'=='
number|'5'
newline|'\n'
comment|'# test the lookup method'
nl|'\n'
DECL|variable|k
name|'k'
op|'='
name|'bucket'
op|'.'
name|'lookup'
op|'('
string|"'foo/bar'"
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'assert'
name|'isinstance'
op|'('
name|'k'
op|','
name|'bucket'
op|'.'
name|'key_class'
op|')'
newline|'\n'
name|'assert'
name|'k'
op|'.'
name|'content_type'
op|'=='
name|'phony_mimetype'
newline|'\n'
DECL|variable|k
name|'k'
op|'='
name|'bucket'
op|'.'
name|'lookup'
op|'('
string|"'notthere'"
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'assert'
name|'k'
op|'=='
name|'None'
newline|'\n'
comment|'# try some metadata stuff'
nl|'\n'
DECL|variable|k
name|'k'
op|'='
name|'bucket'
op|'.'
name|'new_key'
op|'('
op|')'
newline|'\n'
name|'k'
op|'.'
name|'name'
op|'='
string|"'has_metadata'"
newline|'\n'
DECL|variable|mdkey1
name|'mdkey1'
op|'='
string|"'meta1'"
newline|'\n'
DECL|variable|mdval1
name|'mdval1'
op|'='
string|"'This is the first metadata value'"
newline|'\n'
name|'k'
op|'.'
name|'set_metadata'
op|'('
name|'mdkey1'
op|','
name|'mdval1'
op|')'
newline|'\n'
DECL|variable|mdkey2
name|'mdkey2'
op|'='
string|"'meta2'"
newline|'\n'
DECL|variable|mdval2
name|'mdval2'
op|'='
string|"'This is the second metadata value'"
newline|'\n'
name|'k'
op|'.'
name|'set_metadata'
op|'('
name|'mdkey2'
op|','
name|'mdval2'
op|')'
newline|'\n'
name|'k'
op|'.'
name|'set_contents_from_string'
op|'('
name|'s1'
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
DECL|variable|k
name|'k'
op|'='
name|'bucket'
op|'.'
name|'lookup'
op|'('
string|"'has_metadata'"
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'assert'
name|'k'
op|'.'
name|'get_metadata'
op|'('
name|'mdkey1'
op|')'
op|'=='
name|'mdval1'
newline|'\n'
name|'assert'
name|'k'
op|'.'
name|'get_metadata'
op|'('
name|'mdkey2'
op|')'
op|'=='
name|'mdval2'
newline|'\n'
DECL|variable|k
name|'k'
op|'='
name|'bucket'
op|'.'
name|'new_key'
op|'('
op|')'
newline|'\n'
name|'k'
op|'.'
name|'name'
op|'='
string|"'has_metadata'"
newline|'\n'
name|'k'
op|'.'
name|'get_contents_as_string'
op|'('
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'assert'
name|'k'
op|'.'
name|'get_metadata'
op|'('
name|'mdkey1'
op|')'
op|'=='
name|'mdval1'
newline|'\n'
name|'assert'
name|'k'
op|'.'
name|'get_metadata'
op|'('
name|'mdkey2'
op|')'
op|'=='
name|'mdval2'
newline|'\n'
name|'bucket'
op|'.'
name|'delete_key'
op|'('
name|'k'
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
comment|'# test list and iterator'
nl|'\n'
DECL|variable|rs1
name|'rs1'
op|'='
name|'bucket'
op|'.'
name|'list'
op|'('
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
DECL|variable|num_iter
name|'num_iter'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'r'
name|'in'
name|'rs1'
op|':'
newline|'\n'
DECL|variable|num_iter
indent|'    '
name|'num_iter'
op|'='
name|'num_iter'
op|'+'
number|'1'
newline|'\n'
DECL|variable|rs
dedent|''
name|'rs'
op|'='
name|'bucket'
op|'.'
name|'get_all_keys'
op|'('
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
DECL|variable|num_keys
name|'num_keys'
op|'='
name|'len'
op|'('
name|'rs'
op|')'
newline|'\n'
name|'assert'
name|'num_iter'
op|'=='
name|'num_keys'
newline|'\n'
comment|'# try a key with a funny character'
nl|'\n'
DECL|variable|k
name|'k'
op|'='
name|'bucket'
op|'.'
name|'new_key'
op|'('
op|')'
newline|'\n'
name|'k'
op|'.'
name|'name'
op|'='
string|"'testnewline\\n'"
newline|'\n'
name|'k'
op|'.'
name|'set_contents_from_string'
op|'('
string|"'This is a test'"
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
DECL|variable|rs
name|'rs'
op|'='
name|'bucket'
op|'.'
name|'get_all_keys'
op|'('
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'assert'
name|'len'
op|'('
name|'rs'
op|')'
op|'=='
name|'num_keys'
op|'+'
number|'1'
newline|'\n'
name|'bucket'
op|'.'
name|'delete_key'
op|'('
name|'k'
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
DECL|variable|rs
name|'rs'
op|'='
name|'bucket'
op|'.'
name|'get_all_keys'
op|'('
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'assert'
name|'len'
op|'('
name|'rs'
op|')'
op|'=='
name|'num_keys'
newline|'\n'
comment|'# try some acl stuff'
nl|'\n'
name|'bucket'
op|'.'
name|'set_acl'
op|'('
string|"'public-read'"
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
DECL|variable|policy
name|'policy'
op|'='
name|'bucket'
op|'.'
name|'get_acl'
op|'('
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'assert'
name|'len'
op|'('
name|'policy'
op|'.'
name|'acl'
op|'.'
name|'grants'
op|')'
op|'=='
number|'2'
newline|'\n'
name|'bucket'
op|'.'
name|'set_acl'
op|'('
string|"'private'"
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
DECL|variable|policy
name|'policy'
op|'='
name|'bucket'
op|'.'
name|'get_acl'
op|'('
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'assert'
name|'len'
op|'('
name|'policy'
op|'.'
name|'acl'
op|'.'
name|'grants'
op|')'
op|'=='
number|'1'
newline|'\n'
DECL|variable|k
name|'k'
op|'='
name|'bucket'
op|'.'
name|'lookup'
op|'('
string|"'foo/bar'"
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'k'
op|'.'
name|'set_acl'
op|'('
string|"'public-read'"
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
DECL|variable|policy
name|'policy'
op|'='
name|'k'
op|'.'
name|'get_acl'
op|'('
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'assert'
name|'len'
op|'('
name|'policy'
op|'.'
name|'acl'
op|'.'
name|'grants'
op|')'
op|'=='
number|'2'
newline|'\n'
name|'k'
op|'.'
name|'set_acl'
op|'('
string|"'private'"
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
DECL|variable|policy
name|'policy'
op|'='
name|'k'
op|'.'
name|'get_acl'
op|'('
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
name|'assert'
name|'len'
op|'('
name|'policy'
op|'.'
name|'acl'
op|'.'
name|'grants'
op|')'
op|'=='
number|'1'
newline|'\n'
comment|'# try the convenience methods for grants'
nl|'\n'
comment|"# this doesn't work with devpay"
nl|'\n'
comment|"#bucket.add_user_grant('FULL_CONTROL',"
nl|'\n'
comment|"#                      'c1e724fbfa0979a4448393c59a8c055011f739b6d102fb37a65f26414653cd67',"
nl|'\n'
comment|'#                      headers=DEVPAY_HEADERS)'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'bucket'
op|'.'
name|'add_email_grant'
op|'('
string|"'foobar'"
op|','
string|"'foo@bar.com'"
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'S3PermissionsError'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
comment|'# now delete all keys in bucket'
nl|'\n'
dedent|''
name|'for'
name|'k'
name|'in'
name|'all'
op|':'
newline|'\n'
indent|'    '
name|'bucket'
op|'.'
name|'delete_key'
op|'('
name|'k'
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
comment|'# now delete bucket'
nl|'\n'
nl|'\n'
dedent|''
name|'c'
op|'.'
name|'delete_bucket'
op|'('
name|'bucket'
op|','
name|'headers'
op|'='
name|'DEVPAY_HEADERS'
op|')'
newline|'\n'
nl|'\n'
name|'print'
string|"'--- tests completed ---'"
newline|'\n'
endmarker|''
end_unit
