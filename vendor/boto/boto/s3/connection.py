begin_unit
comment|'# Copyright (c) 2006,2007 Mitch Garnaat http://garnaat.org/'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Permission is hereby granted, free of charge, to any person obtaining a'
nl|'\n'
comment|'# copy of this software and associated documentation files (the'
nl|'\n'
comment|'# "Software"), to deal in the Software without restriction, including'
nl|'\n'
comment|'# without limitation the rights to use, copy, modify, merge, publish, dis-'
nl|'\n'
comment|'# tribute, sublicense, and/or sell copies of the Software, and to permit'
nl|'\n'
comment|'# persons to whom the Software is furnished to do so, subject to the fol-'
nl|'\n'
comment|'# lowing conditions:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# The above copyright notice and this permission notice shall be included'
nl|'\n'
comment|'# in all copies or substantial portions of the Software.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS'
nl|'\n'
comment|'# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABIL-'
nl|'\n'
comment|'# ITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT'
nl|'\n'
comment|'# SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, '
nl|'\n'
comment|'# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,'
nl|'\n'
comment|'# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS'
nl|'\n'
comment|'# IN THE SOFTWARE.'
nl|'\n'
nl|'\n'
name|'import'
name|'xml'
op|'.'
name|'sax'
newline|'\n'
name|'import'
name|'urllib'
op|','
name|'base64'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'boto'
op|'.'
name|'utils'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'connection'
name|'import'
name|'AWSAuthConnection'
newline|'\n'
name|'from'
name|'boto'
name|'import'
name|'handler'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'s3'
op|'.'
name|'bucket'
name|'import'
name|'Bucket'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'s3'
op|'.'
name|'key'
name|'import'
name|'Key'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'resultset'
name|'import'
name|'ResultSet'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'exception'
name|'import'
name|'S3ResponseError'
op|','
name|'S3CreateError'
op|','
name|'BotoClientError'
newline|'\n'
nl|'\n'
DECL|function|assert_case_insensitive
name|'def'
name|'assert_case_insensitive'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
DECL|function|wrapper
indent|'    '
name|'def'
name|'wrapper'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'len'
op|'('
name|'args'
op|')'
op|'=='
number|'3'
name|'and'
name|'not'
op|'('
name|'args'
op|'['
number|'2'
op|']'
op|'.'
name|'islower'
op|'('
op|')'
name|'or'
name|'args'
op|'['
number|'2'
op|']'
op|'.'
name|'isalnum'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'BotoClientError'
op|'('
string|'"Bucket names cannot contain upper-case "'
string|'"characters when using either the sub-domain or virtual "'
string|'"hosting calling format."'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'f'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'wrapper'
newline|'\n'
nl|'\n'
DECL|class|_CallingFormat
dedent|''
name|'class'
name|'_CallingFormat'
op|':'
newline|'\n'
DECL|member|build_url_base
indent|'    '
name|'def'
name|'build_url_base'
op|'('
name|'self'
op|','
name|'protocol'
op|','
name|'server'
op|','
name|'bucket'
op|','
name|'key'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'url_base'
op|'='
string|"'%s://'"
op|'%'
name|'protocol'
newline|'\n'
name|'url_base'
op|'+='
name|'self'
op|'.'
name|'build_host'
op|'('
name|'server'
op|','
name|'bucket'
op|')'
newline|'\n'
name|'url_base'
op|'+='
name|'self'
op|'.'
name|'build_path_base'
op|'('
name|'bucket'
op|','
name|'key'
op|')'
newline|'\n'
name|'return'
name|'url_base'
newline|'\n'
nl|'\n'
DECL|member|build_host
dedent|''
name|'def'
name|'build_host'
op|'('
name|'self'
op|','
name|'server'
op|','
name|'bucket'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'bucket'
op|'=='
string|"''"
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'server'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'get_bucket_server'
op|'('
name|'server'
op|','
name|'bucket'
op|')'
newline|'\n'
nl|'\n'
DECL|member|build_auth_path
dedent|''
dedent|''
name|'def'
name|'build_auth_path'
op|'('
name|'self'
op|','
name|'bucket'
op|','
name|'key'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
string|"''"
newline|'\n'
name|'if'
name|'bucket'
op|'!='
string|"''"
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
string|"'/'"
op|'+'
name|'bucket'
newline|'\n'
dedent|''
name|'return'
name|'path'
op|'+'
string|"'/%s'"
op|'%'
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'key'
op|')'
newline|'\n'
nl|'\n'
DECL|member|build_path_base
dedent|''
name|'def'
name|'build_path_base'
op|'('
name|'self'
op|','
name|'bucket'
op|','
name|'key'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'/%s'"
op|'%'
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'key'
op|')'
newline|'\n'
nl|'\n'
DECL|class|SubdomainCallingFormat
dedent|''
dedent|''
name|'class'
name|'SubdomainCallingFormat'
op|'('
name|'_CallingFormat'
op|')'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'assert_case_insensitive'
newline|'\n'
DECL|member|get_bucket_server
name|'def'
name|'get_bucket_server'
op|'('
name|'self'
op|','
name|'server'
op|','
name|'bucket'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'%s.%s'"
op|'%'
op|'('
name|'bucket'
op|','
name|'server'
op|')'
newline|'\n'
nl|'\n'
DECL|class|VHostCallingFormat
dedent|''
dedent|''
name|'class'
name|'VHostCallingFormat'
op|'('
name|'_CallingFormat'
op|')'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'assert_case_insensitive'
newline|'\n'
DECL|member|get_bucket_server
name|'def'
name|'get_bucket_server'
op|'('
name|'self'
op|','
name|'server'
op|','
name|'bucket'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'bucket'
newline|'\n'
nl|'\n'
DECL|class|OrdinaryCallingFormat
dedent|''
dedent|''
name|'class'
name|'OrdinaryCallingFormat'
op|'('
name|'_CallingFormat'
op|')'
op|':'
newline|'\n'
DECL|member|get_bucket_server
indent|'    '
name|'def'
name|'get_bucket_server'
op|'('
name|'self'
op|','
name|'server'
op|','
name|'bucket'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'server'
newline|'\n'
nl|'\n'
DECL|member|build_path_base
dedent|''
name|'def'
name|'build_path_base'
op|'('
name|'self'
op|','
name|'bucket'
op|','
name|'key'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path_base'
op|'='
string|"'/'"
newline|'\n'
name|'if'
name|'bucket'
op|':'
newline|'\n'
indent|'            '
name|'path_base'
op|'+='
string|'"%s/"'
op|'%'
name|'bucket'
newline|'\n'
dedent|''
name|'return'
name|'path_base'
op|'+'
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'key'
op|')'
newline|'\n'
nl|'\n'
DECL|class|Location
dedent|''
dedent|''
name|'class'
name|'Location'
op|':'
newline|'\n'
DECL|variable|DEFAULT
indent|'    '
name|'DEFAULT'
op|'='
string|"''"
newline|'\n'
DECL|variable|EU
name|'EU'
op|'='
string|"'EU'"
newline|'\n'
DECL|variable|USWest
name|'USWest'
op|'='
string|"'us-west-1'"
newline|'\n'
nl|'\n'
comment|"#boto.set_stream_logger('s3')"
nl|'\n'
nl|'\n'
DECL|class|S3Connection
dedent|''
name|'class'
name|'S3Connection'
op|'('
name|'AWSAuthConnection'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|DefaultHost
indent|'    '
name|'DefaultHost'
op|'='
string|"'s3.amazonaws.com'"
newline|'\n'
name|'QueryString'
op|'='
string|"'Signature=%s&Expires=%d&AWSAccessKeyId=%s'"
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'aws_access_key_id'
op|'='
name|'None'
op|','
name|'aws_secret_access_key'
op|'='
name|'None'
op|','
nl|'\n'
name|'is_secure'
op|'='
name|'True'
op|','
name|'port'
op|'='
name|'None'
op|','
name|'proxy'
op|'='
name|'None'
op|','
name|'proxy_port'
op|'='
name|'None'
op|','
nl|'\n'
name|'proxy_user'
op|'='
name|'None'
op|','
name|'proxy_pass'
op|'='
name|'None'
op|','
nl|'\n'
name|'host'
op|'='
name|'DefaultHost'
op|','
name|'debug'
op|'='
number|'0'
op|','
name|'https_connection_factory'
op|'='
name|'None'
op|','
nl|'\n'
name|'calling_format'
op|'='
name|'SubdomainCallingFormat'
op|'('
op|')'
op|','
name|'path'
op|'='
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'calling_format'
op|'='
name|'calling_format'
newline|'\n'
name|'AWSAuthConnection'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'host'
op|','
nl|'\n'
name|'aws_access_key_id'
op|','
name|'aws_secret_access_key'
op|','
nl|'\n'
name|'is_secure'
op|','
name|'port'
op|','
name|'proxy'
op|','
name|'proxy_port'
op|','
name|'proxy_user'
op|','
name|'proxy_pass'
op|','
nl|'\n'
name|'debug'
op|'='
name|'debug'
op|','
name|'https_connection_factory'
op|'='
name|'https_connection_factory'
op|','
nl|'\n'
name|'path'
op|'='
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'get_all_buckets'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|__contains__
dedent|''
name|'def'
name|'__contains__'
op|'('
name|'self'
op|','
name|'bucket_name'
op|')'
op|':'
newline|'\n'
indent|'       '
name|'return'
name|'not'
op|'('
name|'self'
op|'.'
name|'lookup'
op|'('
name|'bucket_name'
op|')'
name|'is'
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|build_post_policy
dedent|''
name|'def'
name|'build_post_policy'
op|'('
name|'self'
op|','
name|'expiration_time'
op|','
name|'conditions'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Taken from the AWS book Python examples and modified for use with boto\n        """'
newline|'\n'
name|'if'
name|'type'
op|'('
name|'expiration_time'
op|')'
op|'!='
name|'time'
op|'.'
name|'struct_time'
op|':'
newline|'\n'
indent|'            '
name|'raise'
string|"'Policy document must include a valid expiration Time object'"
newline|'\n'
nl|'\n'
comment|'# Convert conditions object mappings to condition statements'
nl|'\n'
nl|'\n'
dedent|''
name|'return'
string|'\'{"expiration": "%s",\\n"conditions": [%s]}\''
op|'%'
op|'('
name|'time'
op|'.'
name|'strftime'
op|'('
name|'boto'
op|'.'
name|'utils'
op|'.'
name|'ISO8601'
op|','
name|'expiration_time'
op|')'
op|','
string|'","'
op|'.'
name|'join'
op|'('
name|'conditions'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|build_post_form_args
dedent|''
name|'def'
name|'build_post_form_args'
op|'('
name|'self'
op|','
name|'bucket_name'
op|','
name|'key'
op|','
name|'expires_in'
op|'='
number|'6000'
op|','
nl|'\n'
name|'acl'
op|'='
name|'None'
op|','
name|'success_action_redirect'
op|'='
name|'None'
op|','
name|'max_content_length'
op|'='
name|'None'
op|','
nl|'\n'
name|'http_method'
op|'='
string|'"http"'
op|','
name|'fields'
op|'='
name|'None'
op|','
name|'conditions'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Taken from the AWS book Python examples and modified for use with boto\n        This only returns the arguments required for the post form, not the actual form\n        This does not return the file input field which also needs to be added\n        \n        :param bucket_name: Bucket to submit to\n        :type bucket_name: string \n        \n        :param key:  Key name, optionally add ${filename} to the end to attach the submitted filename\n        :type key: string\n        \n        :param expires_in: Time (in seconds) before this expires, defaults to 6000\n        :type expires_in: integer\n        \n        :param acl: ACL rule to use, if any\n        :type acl: :class:`boto.s3.acl.ACL`\n        \n        :param success_action_redirect: URL to redirect to on success\n        :type success_action_redirect: string \n        \n        :param max_content_length: Maximum size for this file\n        :type max_content_length: integer \n        \n        :type http_method: string\n        :param http_method:  HTTP Method to use, "http" or "https"\n        \n        \n        :rtype: dict\n        :return: A dictionary containing field names/values as well as a url to POST to\n        \n            .. code-block:: python\n            \n                {\n                    "action": action_url_to_post_to, \n                    "fields": [ \n                        {\n                            "name": field_name, \n                            "value":  field_value\n                        }, \n                        {\n                            "name": field_name2, \n                            "value": field_value2\n                        } \n                    ] \n                }\n            \n        """'
newline|'\n'
name|'if'
name|'fields'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'fields'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'if'
name|'conditions'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'conditions'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'expiration'
op|'='
name|'time'
op|'.'
name|'gmtime'
op|'('
name|'int'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'+'
name|'expires_in'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Generate policy document'
nl|'\n'
name|'conditions'
op|'.'
name|'append'
op|'('
string|'\'{"bucket": "%s"}\''
op|'%'
name|'bucket_name'
op|')'
newline|'\n'
name|'if'
name|'key'
op|'.'
name|'endswith'
op|'('
string|'"${filename}"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'conditions'
op|'.'
name|'append'
op|'('
string|'\'["starts-with", "$key", "%s"]\''
op|'%'
name|'key'
op|'['
op|':'
op|'-'
name|'len'
op|'('
string|'"${filename}"'
op|')'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'conditions'
op|'.'
name|'append'
op|'('
string|'\'{"key": "%s"}\''
op|'%'
name|'key'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'acl'
op|':'
newline|'\n'
indent|'            '
name|'conditions'
op|'.'
name|'append'
op|'('
string|'\'{"acl": "%s"}\''
op|'%'
name|'acl'
op|')'
newline|'\n'
name|'fields'
op|'.'
name|'append'
op|'('
op|'{'
string|'"name"'
op|':'
string|'"acl"'
op|','
string|'"value"'
op|':'
name|'acl'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'success_action_redirect'
op|':'
newline|'\n'
indent|'            '
name|'conditions'
op|'.'
name|'append'
op|'('
string|'\'{"success_action_redirect": "%s"}\''
op|'%'
name|'success_action_redirect'
op|')'
newline|'\n'
name|'fields'
op|'.'
name|'append'
op|'('
op|'{'
string|'"name"'
op|':'
string|'"success_action_redirect"'
op|','
string|'"value"'
op|':'
name|'success_action_redirect'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'max_content_length'
op|':'
newline|'\n'
indent|'            '
name|'conditions'
op|'.'
name|'append'
op|'('
string|'\'["content-length-range", 0, %i]\''
op|'%'
name|'max_content_length'
op|')'
newline|'\n'
name|'fields'
op|'.'
name|'append'
op|'('
op|'{'
string|'"name"'
op|':'
string|"'content-length-range'"
op|','
string|'"value"'
op|':'
string|'"0,%i"'
op|'%'
name|'max_content_length'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'policy'
op|'='
name|'self'
op|'.'
name|'build_post_policy'
op|'('
name|'expiration'
op|','
name|'conditions'
op|')'
newline|'\n'
nl|'\n'
comment|"# Add the base64-encoded policy document as the 'policy' field"
nl|'\n'
name|'policy_b64'
op|'='
name|'base64'
op|'.'
name|'b64encode'
op|'('
name|'policy'
op|')'
newline|'\n'
name|'fields'
op|'.'
name|'append'
op|'('
op|'{'
string|'"name"'
op|':'
string|'"policy"'
op|','
string|'"value"'
op|':'
name|'policy_b64'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|"# Add the AWS access key as the 'AWSAccessKeyId' field"
nl|'\n'
name|'fields'
op|'.'
name|'append'
op|'('
op|'{'
string|'"name"'
op|':'
string|'"AWSAccessKeyId"'
op|','
string|'"value"'
op|':'
name|'self'
op|'.'
name|'aws_access_key_id'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|"# Add signature for encoded policy document as the 'AWSAccessKeyId' field"
nl|'\n'
name|'hmac_copy'
op|'='
name|'self'
op|'.'
name|'hmac'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'hmac_copy'
op|'.'
name|'update'
op|'('
name|'policy_b64'
op|')'
newline|'\n'
name|'signature'
op|'='
name|'base64'
op|'.'
name|'encodestring'
op|'('
name|'hmac_copy'
op|'.'
name|'digest'
op|'('
op|')'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'fields'
op|'.'
name|'append'
op|'('
op|'{'
string|'"name"'
op|':'
string|'"signature"'
op|','
string|'"value"'
op|':'
name|'signature'
op|'}'
op|')'
newline|'\n'
name|'fields'
op|'.'
name|'append'
op|'('
op|'{'
string|'"name"'
op|':'
string|'"key"'
op|','
string|'"value"'
op|':'
name|'key'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# HTTPS protocol will be used if the secure HTTP option is enabled.'
nl|'\n'
name|'url'
op|'='
string|"'%s://%s.s3.amazonaws.com/'"
op|'%'
op|'('
name|'http_method'
op|','
name|'bucket_name'
op|')'
newline|'\n'
nl|'\n'
name|'return'
op|'{'
string|'"action"'
op|':'
name|'url'
op|','
string|'"fields"'
op|':'
name|'fields'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|generate_url
dedent|''
name|'def'
name|'generate_url'
op|'('
name|'self'
op|','
name|'expires_in'
op|','
name|'method'
op|','
name|'bucket'
op|'='
string|"''"
op|','
name|'key'
op|'='
string|"''"
op|','
nl|'\n'
name|'headers'
op|'='
name|'None'
op|','
name|'query_auth'
op|'='
name|'True'
op|','
name|'force_http'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'='
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'expires'
op|'='
name|'int'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'+'
name|'expires_in'
op|')'
newline|'\n'
name|'auth_path'
op|'='
name|'self'
op|'.'
name|'calling_format'
op|'.'
name|'build_auth_path'
op|'('
name|'bucket'
op|','
name|'key'
op|')'
newline|'\n'
name|'canonical_str'
op|'='
name|'boto'
op|'.'
name|'utils'
op|'.'
name|'canonical_string'
op|'('
name|'method'
op|','
name|'auth_path'
op|','
nl|'\n'
name|'headers'
op|','
name|'expires'
op|')'
newline|'\n'
name|'hmac_copy'
op|'='
name|'self'
op|'.'
name|'hmac'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'hmac_copy'
op|'.'
name|'update'
op|'('
name|'canonical_str'
op|')'
newline|'\n'
name|'b64_hmac'
op|'='
name|'base64'
op|'.'
name|'encodestring'
op|'('
name|'hmac_copy'
op|'.'
name|'digest'
op|'('
op|')'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'encoded_canonical'
op|'='
name|'urllib'
op|'.'
name|'quote_plus'
op|'('
name|'b64_hmac'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'calling_format'
op|'.'
name|'build_path_base'
op|'('
name|'bucket'
op|','
name|'key'
op|')'
newline|'\n'
name|'if'
name|'query_auth'
op|':'
newline|'\n'
indent|'            '
name|'query_part'
op|'='
string|"'?'"
op|'+'
name|'self'
op|'.'
name|'QueryString'
op|'%'
op|'('
name|'encoded_canonical'
op|','
name|'expires'
op|','
nl|'\n'
name|'self'
op|'.'
name|'aws_access_key_id'
op|')'
newline|'\n'
name|'if'
string|"'x-amz-security-token'"
name|'in'
name|'headers'
op|':'
newline|'\n'
indent|'                '
name|'query_part'
op|'+='
string|"'&x-amz-security-token=%s'"
op|'%'
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'headers'
op|'['
string|"'x-amz-security-token'"
op|']'
op|')'
op|';'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'query_part'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'if'
name|'force_http'
op|':'
newline|'\n'
indent|'            '
name|'protocol'
op|'='
string|"'http'"
newline|'\n'
name|'port'
op|'='
number|'80'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'protocol'
op|'='
name|'self'
op|'.'
name|'protocol'
newline|'\n'
name|'port'
op|'='
name|'self'
op|'.'
name|'port'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'calling_format'
op|'.'
name|'build_url_base'
op|'('
name|'protocol'
op|','
name|'self'
op|'.'
name|'server_name'
op|'('
name|'port'
op|')'
op|','
nl|'\n'
name|'bucket'
op|','
name|'key'
op|')'
op|'+'
name|'query_part'
newline|'\n'
nl|'\n'
DECL|member|get_all_buckets
dedent|''
name|'def'
name|'get_all_buckets'
op|'('
name|'self'
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
string|"'GET'"
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'>'
number|'300'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'S3ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
dedent|''
name|'rs'
op|'='
name|'ResultSet'
op|'('
op|'['
op|'('
string|"'Bucket'"
op|','
name|'Bucket'
op|')'
op|']'
op|')'
newline|'\n'
name|'h'
op|'='
name|'handler'
op|'.'
name|'XmlHandler'
op|'('
name|'rs'
op|','
name|'self'
op|')'
newline|'\n'
name|'xml'
op|'.'
name|'sax'
op|'.'
name|'parseString'
op|'('
name|'body'
op|','
name|'h'
op|')'
newline|'\n'
name|'return'
name|'rs'
newline|'\n'
nl|'\n'
DECL|member|get_canonical_user_id
dedent|''
name|'def'
name|'get_canonical_user_id'
op|'('
name|'self'
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Convenience method that returns the "CanonicalUserID" of the user who\'s credentials\n        are associated with the connection.  The only way to get this value is to do a GET\n        request on the service which returns all buckets associated with the account.  As part\n        of that response, the canonical userid is returned.  This method simply does all of\n        that and then returns just the user id.\n\n        :rtype: string\n        :return: A string containing the canonical user id.\n        """'
newline|'\n'
name|'rs'
op|'='
name|'self'
op|'.'
name|'get_all_buckets'
op|'('
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'return'
name|'rs'
op|'.'
name|'ID'
newline|'\n'
nl|'\n'
DECL|member|get_bucket
dedent|''
name|'def'
name|'get_bucket'
op|'('
name|'self'
op|','
name|'bucket_name'
op|','
name|'validate'
op|'='
name|'True'
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bucket'
op|'='
name|'Bucket'
op|'('
name|'self'
op|','
name|'bucket_name'
op|')'
newline|'\n'
name|'if'
name|'validate'
op|':'
newline|'\n'
indent|'            '
name|'bucket'
op|'.'
name|'get_all_keys'
op|'('
name|'headers'
op|','
name|'maxkeys'
op|'='
number|'0'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'bucket'
newline|'\n'
nl|'\n'
DECL|member|lookup
dedent|''
name|'def'
name|'lookup'
op|'('
name|'self'
op|','
name|'bucket_name'
op|','
name|'validate'
op|'='
name|'True'
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'bucket'
op|'='
name|'self'
op|'.'
name|'get_bucket'
op|'('
name|'bucket_name'
op|','
name|'validate'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'bucket'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'bucket'
newline|'\n'
nl|'\n'
DECL|member|create_bucket
dedent|''
name|'def'
name|'create_bucket'
op|'('
name|'self'
op|','
name|'bucket_name'
op|','
name|'headers'
op|'='
name|'None'
op|','
nl|'\n'
name|'location'
op|'='
name|'Location'
op|'.'
name|'DEFAULT'
op|','
name|'policy'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Creates a new located bucket. By default it\'s in the USA. You can pass\n        Location.EU to create an European bucket.\n\n        :type bucket_name: string\n        :param bucket_name: The name of the new bucket\n        \n        :type headers: dict\n        :param headers: Additional headers to pass along with the request to AWS.\n\n        :type location: :class:`boto.s3.connection.Location`\n        :param location: The location of the new bucket\n        \n        :type policy: :class:`boto.s3.acl.CannedACLStrings`\n        :param policy: A canned ACL policy that will be applied to the new key in S3.\n             \n        """'
newline|'\n'
comment|'# TODO: Not sure what Exception Type from boto.exception to use.'
nl|'\n'
name|'if'
name|'not'
name|'bucket_name'
op|'.'
name|'islower'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|'"Bucket names must be lower case."'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'policy'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'headers'
op|':'
newline|'\n'
indent|'                '
name|'headers'
op|'['
string|"'x-amz-acl'"
op|']'
op|'='
name|'policy'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'headers'
op|'='
op|'{'
string|"'x-amz-acl'"
op|':'
name|'policy'
op|'}'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'location'
op|'=='
name|'Location'
op|'.'
name|'DEFAULT'
op|':'
newline|'\n'
indent|'            '
name|'data'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'data'
op|'='
string|"'<CreateBucketConstraint><LocationConstraint>'"
op|'+'
name|'location'
op|'+'
string|"'</LocationConstraint></CreateBucketConstraint>'"
newline|'\n'
dedent|''
name|'response'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
string|"'PUT'"
op|','
name|'bucket_name'
op|','
name|'headers'
op|'='
name|'headers'
op|','
nl|'\n'
name|'data'
op|'='
name|'data'
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'409'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'S3CreateError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'Bucket'
op|'('
name|'self'
op|','
name|'bucket_name'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'S3ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_bucket
dedent|''
dedent|''
name|'def'
name|'delete_bucket'
op|'('
name|'self'
op|','
name|'bucket'
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
string|"'DELETE'"
op|','
name|'bucket'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'!='
number|'204'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'S3ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|make_request
dedent|''
dedent|''
name|'def'
name|'make_request'
op|'('
name|'self'
op|','
name|'method'
op|','
name|'bucket'
op|'='
string|"''"
op|','
name|'key'
op|'='
string|"''"
op|','
name|'headers'
op|'='
name|'None'
op|','
name|'data'
op|'='
string|"''"
op|','
nl|'\n'
name|'query_args'
op|'='
name|'None'
op|','
name|'sender'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'bucket'
op|','
name|'Bucket'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'bucket'
op|'='
name|'bucket'
op|'.'
name|'name'
newline|'\n'
dedent|''
name|'if'
name|'isinstance'
op|'('
name|'key'
op|','
name|'Key'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'key'
op|'='
name|'key'
op|'.'
name|'name'
newline|'\n'
dedent|''
name|'path'
op|'='
name|'self'
op|'.'
name|'calling_format'
op|'.'
name|'build_path_base'
op|'('
name|'bucket'
op|','
name|'key'
op|')'
newline|'\n'
name|'auth_path'
op|'='
name|'self'
op|'.'
name|'calling_format'
op|'.'
name|'build_auth_path'
op|'('
name|'bucket'
op|','
name|'key'
op|')'
newline|'\n'
name|'host'
op|'='
name|'self'
op|'.'
name|'calling_format'
op|'.'
name|'build_host'
op|'('
name|'self'
op|'.'
name|'server_name'
op|'('
op|')'
op|','
name|'bucket'
op|')'
newline|'\n'
name|'if'
name|'query_args'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'+='
string|"'?'"
op|'+'
name|'query_args'
newline|'\n'
name|'auth_path'
op|'+='
string|"'?'"
op|'+'
name|'query_args'
newline|'\n'
dedent|''
name|'return'
name|'AWSAuthConnection'
op|'.'
name|'make_request'
op|'('
name|'self'
op|','
name|'method'
op|','
name|'path'
op|','
name|'headers'
op|','
nl|'\n'
name|'data'
op|','
name|'host'
op|','
name|'auth_path'
op|','
name|'sender'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
