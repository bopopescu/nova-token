begin_unit
comment|'# Copyright (c) 2006,2007 Mitch Garnaat http://garnaat.org/'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Permission is hereby granted, free of charge, to any person obtaining a'
nl|'\n'
comment|'# copy of this software and associated documentation files (the'
nl|'\n'
comment|'# "Software"), to deal in the Software without restriction, including'
nl|'\n'
comment|'# without limitation the rights to use, copy, modify, merge, publish, dis-'
nl|'\n'
comment|'# tribute, sublicense, and/or sell copies of the Software, and to permit'
nl|'\n'
comment|'# persons to whom the Software is furnished to do so, subject to the fol-'
nl|'\n'
comment|'# lowing conditions:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# The above copyright notice and this permission notice shall be included'
nl|'\n'
comment|'# in all copies or substantial portions of the Software.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS'
nl|'\n'
comment|'# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABIL-'
nl|'\n'
comment|'# ITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT'
nl|'\n'
comment|'# SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, '
nl|'\n'
comment|'# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,'
nl|'\n'
comment|'# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS'
nl|'\n'
comment|'# IN THE SOFTWARE.'
nl|'\n'
nl|'\n'
name|'import'
name|'boto'
newline|'\n'
name|'from'
name|'boto'
name|'import'
name|'handler'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'resultset'
name|'import'
name|'ResultSet'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'s3'
op|'.'
name|'acl'
name|'import'
name|'Policy'
op|','
name|'CannedACLStrings'
op|','
name|'Grant'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'s3'
op|'.'
name|'key'
name|'import'
name|'Key'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'s3'
op|'.'
name|'prefix'
name|'import'
name|'Prefix'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'s3'
op|'.'
name|'deletemarker'
name|'import'
name|'DeleteMarker'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'exception'
name|'import'
name|'S3ResponseError'
op|','
name|'S3PermissionsError'
op|','
name|'S3CopyError'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'s3'
op|'.'
name|'bucketlistresultset'
name|'import'
name|'BucketListResultSet'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'s3'
op|'.'
name|'bucketlistresultset'
name|'import'
name|'VersionedBucketListResultSet'
newline|'\n'
name|'import'
name|'boto'
op|'.'
name|'utils'
newline|'\n'
name|'import'
name|'xml'
op|'.'
name|'sax'
newline|'\n'
name|'import'
name|'urllib'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
nl|'\n'
DECL|variable|S3Permissions
name|'S3Permissions'
op|'='
op|'['
string|"'READ'"
op|','
string|"'WRITE'"
op|','
string|"'READ_ACP'"
op|','
string|"'WRITE_ACP'"
op|','
string|"'FULL_CONTROL'"
op|']'
newline|'\n'
nl|'\n'
DECL|class|Bucket
name|'class'
name|'Bucket'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'BucketLoggingBody'
op|'='
string|'"""<?xml version="1.0" encoding="UTF-8"?>\n       <BucketLoggingStatus xmlns="http://s3.amazonaws.com/doc/2006-03-01/">\n         <LoggingEnabled>\n           <TargetBucket>%s</TargetBucket>\n           <TargetPrefix>%s</TargetPrefix>\n         </LoggingEnabled>\n       </BucketLoggingStatus>"""'
newline|'\n'
nl|'\n'
name|'EmptyBucketLoggingBody'
op|'='
string|'"""<?xml version="1.0" encoding="UTF-8"?>\n       <BucketLoggingStatus xmlns="http://s3.amazonaws.com/doc/2006-03-01/">\n       </BucketLoggingStatus>"""'
newline|'\n'
nl|'\n'
DECL|variable|LoggingGroup
name|'LoggingGroup'
op|'='
string|"'http://acs.amazonaws.com/groups/s3/LogDelivery'"
newline|'\n'
nl|'\n'
name|'BucketPaymentBody'
op|'='
string|'"""<?xml version="1.0" encoding="UTF-8"?>\n       <RequestPaymentConfiguration xmlns="http://s3.amazonaws.com/doc/2006-03-01/">\n         <Payer>%s</Payer>\n       </RequestPaymentConfiguration>"""'
newline|'\n'
nl|'\n'
name|'VersioningBody'
op|'='
string|'"""<?xml version="1.0" encoding="UTF-8"?>\n       <VersioningConfiguration xmlns="http://s3.amazonaws.com/doc/2006-03-01/">\n         <Status>%s</Status>\n         <MfaDelete>%s</MfaDelete>\n       </VersioningConfiguration>"""'
newline|'\n'
nl|'\n'
DECL|variable|VersionRE
name|'VersionRE'
op|'='
string|"'<Status>([A-Za-z]+)</Status>'"
newline|'\n'
DECL|variable|MFADeleteRE
name|'MFADeleteRE'
op|'='
string|"'<MfaDelete>([A-Za-z]+)</MfaDelete>'"
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'connection'
op|'='
name|'None'
op|','
name|'name'
op|'='
name|'None'
op|','
name|'key_class'
op|'='
name|'Key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'connection'
op|'='
name|'connection'
newline|'\n'
name|'self'
op|'.'
name|'key_class'
op|'='
name|'key_class'
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'<Bucket: %s>'"
op|'%'
name|'self'
op|'.'
name|'name'
newline|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'iter'
op|'('
name|'BucketListResultSet'
op|'('
name|'self'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__contains__
dedent|''
name|'def'
name|'__contains__'
op|'('
name|'self'
op|','
name|'key_name'
op|')'
op|':'
newline|'\n'
indent|'       '
name|'return'
name|'not'
op|'('
name|'self'
op|'.'
name|'get_key'
op|'('
name|'key_name'
op|')'
name|'is'
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|startElement
dedent|''
name|'def'
name|'startElement'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'attrs'
op|','
name|'connection'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|endElement
dedent|''
name|'def'
name|'endElement'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'value'
op|','
name|'connection'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'name'
op|'=='
string|"'Name'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'name'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'CreationDate'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'creation_date'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'setattr'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|set_key_class
dedent|''
dedent|''
name|'def'
name|'set_key_class'
op|'('
name|'self'
op|','
name|'key_class'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Set the Key class associated with this bucket.  By default, this\n        would be the boto.s3.key.Key class but if you want to subclass that\n        for some reason this allows you to associate your new class with a\n        bucket so that when you call bucket.new_key() or when you get a listing\n        of keys in the bucket you will get an instances of your key class\n        rather than the default.\n        \n        :type key_class: class\n        :param key_class: A subclass of Key that can be more specific\n        """'
newline|'\n'
name|'self'
op|'.'
name|'key_class'
op|'='
name|'key_class'
newline|'\n'
nl|'\n'
DECL|member|lookup
dedent|''
name|'def'
name|'lookup'
op|'('
name|'self'
op|','
name|'key_name'
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Deprecated: Please use get_key method.\n        \n        :type key_name: string\n        :param key_name: The name of the key to retrieve\n        \n        :rtype: :class:`boto.s3.key.Key`\n        :returns: A Key object from this bucket.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'get_key'
op|'('
name|'key_name'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_key
dedent|''
name|'def'
name|'get_key'
op|'('
name|'self'
op|','
name|'key_name'
op|','
name|'headers'
op|'='
name|'None'
op|','
name|'version_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Check to see if a particular key exists within the bucket.  This\n        method uses a HEAD request to check for the existance of the key.\n        Returns: An instance of a Key object or None\n        \n        :type key_name: string\n        :param key_name: The name of the key to retrieve\n        \n        :rtype: :class:`boto.s3.key.Key`\n        :returns: A Key object from this bucket.\n        """'
newline|'\n'
name|'if'
name|'version_id'
op|':'
newline|'\n'
indent|'            '
name|'query_args'
op|'='
string|"'versionId=%s'"
op|'%'
name|'version_id'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'query_args'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'make_request'
op|'('
string|"'HEAD'"
op|','
name|'self'
op|'.'
name|'name'
op|','
name|'key_name'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|','
nl|'\n'
name|'query_args'
op|'='
name|'query_args'
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'k'
op|'='
name|'self'
op|'.'
name|'key_class'
op|'('
name|'self'
op|')'
newline|'\n'
name|'k'
op|'.'
name|'metadata'
op|'='
name|'boto'
op|'.'
name|'utils'
op|'.'
name|'get_aws_metadata'
op|'('
name|'response'
op|'.'
name|'msg'
op|')'
newline|'\n'
name|'k'
op|'.'
name|'etag'
op|'='
name|'response'
op|'.'
name|'getheader'
op|'('
string|"'etag'"
op|')'
newline|'\n'
name|'k'
op|'.'
name|'content_type'
op|'='
name|'response'
op|'.'
name|'getheader'
op|'('
string|"'content-type'"
op|')'
newline|'\n'
name|'k'
op|'.'
name|'content_encoding'
op|'='
name|'response'
op|'.'
name|'getheader'
op|'('
string|"'content-encoding'"
op|')'
newline|'\n'
name|'k'
op|'.'
name|'last_modified'
op|'='
name|'response'
op|'.'
name|'getheader'
op|'('
string|"'last-modified'"
op|')'
newline|'\n'
name|'k'
op|'.'
name|'size'
op|'='
name|'int'
op|'('
name|'response'
op|'.'
name|'getheader'
op|'('
string|"'content-length'"
op|')'
op|')'
newline|'\n'
name|'k'
op|'.'
name|'name'
op|'='
name|'key_name'
newline|'\n'
name|'k'
op|'.'
name|'handle_version_headers'
op|'('
name|'response'
op|')'
newline|'\n'
name|'return'
name|'k'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'404'
op|':'
newline|'\n'
indent|'                '
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'S3ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|list
dedent|''
dedent|''
dedent|''
name|'def'
name|'list'
op|'('
name|'self'
op|','
name|'prefix'
op|'='
string|"''"
op|','
name|'delimiter'
op|'='
string|"''"
op|','
name|'marker'
op|'='
string|"''"
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        List key objects within a bucket.  This returns an instance of an\n        BucketListResultSet that automatically handles all of the result\n        paging, etc. from S3.  You just need to keep iterating until\n        there are no more results.\n        Called with no arguments, this will return an iterator object across\n        all keys within the bucket.\n        \n        :type prefix: string\n        :param prefix: allows you to limit the listing to a particular\n                        prefix.  For example, if you call the method with\n                        prefix=\'/foo/\' then the iterator will only cycle\n                        through the keys that begin with the string \'/foo/\'.\n                        \n        :type delimiter: string\n        :param delimiter: can be used in conjunction with the prefix\n                        to allow you to organize and browse your keys\n                        hierarchically. See:\n                        http://docs.amazonwebservices.com/AmazonS3/2006-03-01/\n                        for more details.\n                        \n        :type marker: string\n        :param marker: The "marker" of where you are in the result set\n        \n        :rtype: :class:`boto.s3.bucketlistresultset.BucketListResultSet`\n        :return: an instance of a BucketListResultSet that handles paging, etc\n        """'
newline|'\n'
name|'return'
name|'BucketListResultSet'
op|'('
name|'self'
op|','
name|'prefix'
op|','
name|'delimiter'
op|','
name|'marker'
op|','
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|list_versions
dedent|''
name|'def'
name|'list_versions'
op|'('
name|'self'
op|','
name|'prefix'
op|'='
string|"''"
op|','
name|'delimiter'
op|'='
string|"''"
op|','
name|'key_marker'
op|'='
string|"''"
op|','
nl|'\n'
name|'version_id_marker'
op|'='
string|"''"
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        List key objects within a bucket.  This returns an instance of an\n        BucketListResultSet that automatically handles all of the result\n        paging, etc. from S3.  You just need to keep iterating until\n        there are no more results.\n        Called with no arguments, this will return an iterator object across\n        all keys within the bucket.\n        \n        :type prefix: string\n        :param prefix: allows you to limit the listing to a particular\n                        prefix.  For example, if you call the method with\n                        prefix=\'/foo/\' then the iterator will only cycle\n                        through the keys that begin with the string \'/foo/\'.\n                        \n        :type delimiter: string\n        :param delimiter: can be used in conjunction with the prefix\n                        to allow you to organize and browse your keys\n                        hierarchically. See:\n                        http://docs.amazonwebservices.com/AmazonS3/2006-03-01/\n                        for more details.\n                        \n        :type marker: string\n        :param marker: The "marker" of where you are in the result set\n        \n        :rtype: :class:`boto.s3.bucketlistresultset.BucketListResultSet`\n        :return: an instance of a BucketListResultSet that handles paging, etc\n        """'
newline|'\n'
name|'return'
name|'VersionedBucketListResultSet'
op|'('
name|'self'
op|','
name|'prefix'
op|','
name|'delimiter'
op|','
name|'key_marker'
op|','
nl|'\n'
name|'version_id_marker'
op|','
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_all
dedent|''
name|'def'
name|'_get_all'
op|'('
name|'self'
op|','
name|'element_map'
op|','
name|'initial_query_string'
op|'='
string|"''"
op|','
nl|'\n'
name|'headers'
op|'='
name|'None'
op|','
op|'**'
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'l'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'params'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'k'
op|'='
name|'k'
op|'.'
name|'replace'
op|'('
string|"'_'"
op|','
string|"'-'"
op|')'
newline|'\n'
name|'if'
name|'k'
op|'=='
string|"'maxkeys'"
op|':'
newline|'\n'
indent|'                '
name|'k'
op|'='
string|"'max-keys'"
newline|'\n'
dedent|''
name|'if'
name|'isinstance'
op|'('
name|'v'
op|','
name|'unicode'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'v'
op|'='
name|'v'
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'v'
name|'is'
name|'not'
name|'None'
name|'and'
name|'v'
op|'!='
string|"''"
op|':'
newline|'\n'
indent|'                '
name|'l'
op|'.'
name|'append'
op|'('
string|"'%s=%s'"
op|'%'
op|'('
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'k'
op|')'
op|','
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'str'
op|'('
name|'v'
op|')'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'len'
op|'('
name|'l'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'s'
op|'='
name|'initial_query_string'
op|'+'
string|"'&'"
op|'+'
string|"'&'"
op|'.'
name|'join'
op|'('
name|'l'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'s'
op|'='
name|'initial_query_string'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'make_request'
op|'('
string|"'GET'"
op|','
name|'self'
op|'.'
name|'name'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|','
name|'query_args'
op|'='
name|'s'
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'debug'
op|'('
name|'body'
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'rs'
op|'='
name|'ResultSet'
op|'('
name|'element_map'
op|')'
newline|'\n'
name|'h'
op|'='
name|'handler'
op|'.'
name|'XmlHandler'
op|'('
name|'rs'
op|','
name|'self'
op|')'
newline|'\n'
name|'xml'
op|'.'
name|'sax'
op|'.'
name|'parseString'
op|'('
name|'body'
op|','
name|'h'
op|')'
newline|'\n'
name|'return'
name|'rs'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'S3ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_all_keys
dedent|''
dedent|''
name|'def'
name|'get_all_keys'
op|'('
name|'self'
op|','
name|'headers'
op|'='
name|'None'
op|','
op|'**'
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A lower-level method for listing contents of a bucket.\n        This closely models the actual S3 API and requires you to manually\n        handle the paging of results.  For a higher-level method\n        that handles the details of paging for you, you can use the list method.\n        \n        :type max_keys: int\n        :param max_keys: The maximum number of keys to retrieve\n        \n        :type prefix: string\n        :param prefix: The prefix of the keys you want to retrieve\n        \n        :type marker: string\n        :param marker: The "marker" of where you are in the result set\n        \n        :type delimiter: string \n        :param delimiter: If this optional, Unicode string parameter\n                          is included with your request, then keys that\n                          contain the same string between the prefix and\n                          the first occurrence of the delimiter will be\n                          rolled up into a single result element in the\n                          CommonPrefixes collection. These rolled-up keys\n                          are not returned elsewhere in the response.\n\n        :rtype: ResultSet\n        :return: The result from S3 listing the keys requested\n        \n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_get_all'
op|'('
op|'['
op|'('
string|"'Contents'"
op|','
name|'self'
op|'.'
name|'key_class'
op|')'
op|','
nl|'\n'
op|'('
string|"'CommonPrefixes'"
op|','
name|'Prefix'
op|')'
op|']'
op|','
nl|'\n'
string|"''"
op|','
name|'headers'
op|','
op|'**'
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_all_versions
dedent|''
name|'def'
name|'get_all_versions'
op|'('
name|'self'
op|','
name|'headers'
op|'='
name|'None'
op|','
op|'**'
name|'params'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        A lower-level, version-aware method for listing contents of a bucket.\n        This closely models the actual S3 API and requires you to manually\n        handle the paging of results.  For a higher-level method\n        that handles the details of paging for you, you can use the list method.\n        \n        :type max_keys: int\n        :param max_keys: The maximum number of keys to retrieve\n        \n        :type prefix: string\n        :param prefix: The prefix of the keys you want to retrieve\n        \n        :type key_marker: string\n        :param key_marker: The "marker" of where you are in the result set\n                           with respect to keys.\n        \n        :type version_id_marker: string\n        :param version_id_marker: The "marker" of where you are in the result\n                                  set with respect to version-id\'s.\n        \n        :type delimiter: string \n        :param delimiter: If this optional, Unicode string parameter\n                          is included with your request, then keys that\n                          contain the same string between the prefix and\n                          the first occurrence of the delimiter will be\n                          rolled up into a single result element in the\n                          CommonPrefixes collection. These rolled-up keys\n                          are not returned elsewhere in the response.\n\n        :rtype: ResultSet\n        :return: The result from S3 listing the keys requested\n        \n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_get_all'
op|'('
op|'['
op|'('
string|"'Version'"
op|','
name|'self'
op|'.'
name|'key_class'
op|')'
op|','
nl|'\n'
op|'('
string|"'CommonPrefixes'"
op|','
name|'Prefix'
op|')'
op|','
nl|'\n'
op|'('
string|"'DeleteMarker'"
op|','
name|'DeleteMarker'
op|')'
op|']'
op|','
nl|'\n'
string|"'versions'"
op|','
name|'headers'
op|','
op|'**'
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|new_key
dedent|''
name|'def'
name|'new_key'
op|'('
name|'self'
op|','
name|'key_name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Creates a new key\n        \n        :type key_name: string\n        :param key_name: The name of the key to create\n        \n        :rtype: :class:`boto.s3.key.Key` or subclass\n        :returns: An instance of the newly created key object\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'key_class'
op|'('
name|'self'
op|','
name|'key_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|generate_url
dedent|''
name|'def'
name|'generate_url'
op|'('
name|'self'
op|','
name|'expires_in'
op|','
name|'method'
op|'='
string|"'GET'"
op|','
nl|'\n'
name|'headers'
op|'='
name|'None'
op|','
name|'force_http'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'generate_url'
op|'('
name|'expires_in'
op|','
name|'method'
op|','
name|'self'
op|'.'
name|'name'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|','
nl|'\n'
name|'force_http'
op|'='
name|'force_http'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_key
dedent|''
name|'def'
name|'delete_key'
op|'('
name|'self'
op|','
name|'key_name'
op|','
name|'headers'
op|'='
name|'None'
op|','
nl|'\n'
name|'version_id'
op|'='
name|'None'
op|','
name|'mfa_token'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Deletes a key from the bucket.  If a version_id is provided,\n        only that version of the key will be deleted.\n        \n        :type key_name: string\n        :param key_name: The key name to delete\n\n        :type version_id: string\n        :param version_id: The version ID (optional)\n        \n        :type mfa_token: tuple or list of strings\n        :param mfa_token: A tuple or list consisting of the serial number\n                          from the MFA device and the current value of\n                          the six-digit token associated with the device.\n                          This value is required anytime you are\n                          deleting versioned objects from a bucket\n                          that has the MFADelete option on the bucket.\n        """'
newline|'\n'
name|'if'
name|'version_id'
op|':'
newline|'\n'
indent|'            '
name|'query_args'
op|'='
string|"'versionId=%s'"
op|'%'
name|'version_id'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'query_args'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'mfa_token'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'headers'
op|':'
newline|'\n'
indent|'                '
name|'headers'
op|'='
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'headers'
op|'['
string|"'x-amz-mfa'"
op|']'
op|'='
string|"' '"
op|'.'
name|'join'
op|'('
name|'mfa_token'
op|')'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'make_request'
op|'('
string|"'DELETE'"
op|','
name|'self'
op|'.'
name|'name'
op|','
name|'key_name'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|','
nl|'\n'
name|'query_args'
op|'='
name|'query_args'
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'!='
number|'204'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'S3ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|copy_key
dedent|''
dedent|''
name|'def'
name|'copy_key'
op|'('
name|'self'
op|','
name|'new_key_name'
op|','
name|'src_bucket_name'
op|','
nl|'\n'
name|'src_key_name'
op|','
name|'metadata'
op|'='
name|'None'
op|','
name|'src_version_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create a new key in the bucket by copying another existing key.\n\n        :type new_key_name: string\n        :param new_key_name: The name of the new key\n\n        :type src_bucket_name: string\n        :param src_bucket_name: The name of the source bucket\n\n        :type src_key_name: string\n        :param src_key_name: The name of the source key\n\n        :type src_version_id: string\n        :param src_version_id: The version id for the key.  This param\n                               is optional.  If not specified, the newest\n                               version of the key will be copied.\n\n        :type metadata: dict\n        :param metadata: Metadata to be associated with new key.\n                         If metadata is supplied, it will replace the\n                         metadata of the source key being copied.\n                         If no metadata is supplied, the source key\'s\n                         metadata will be copied to the new key.\n\n        :rtype: :class:`boto.s3.key.Key` or subclass\n        :returns: An instance of the newly created key object\n        """'
newline|'\n'
name|'src'
op|'='
string|"'%s/%s'"
op|'%'
op|'('
name|'src_bucket_name'
op|','
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'src_key_name'
op|')'
op|')'
newline|'\n'
name|'if'
name|'src_version_id'
op|':'
newline|'\n'
indent|'            '
name|'src'
op|'+='
string|"'?version_id=%s'"
op|'%'
name|'src_version_id'
newline|'\n'
dedent|''
name|'if'
name|'metadata'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'='
op|'{'
string|"'x-amz-copy-source'"
op|':'
name|'src'
op|','
nl|'\n'
string|"'x-amz-metadata-directive'"
op|':'
string|"'REPLACE'"
op|'}'
newline|'\n'
name|'headers'
op|'='
name|'boto'
op|'.'
name|'utils'
op|'.'
name|'merge_meta'
op|'('
name|'headers'
op|','
name|'metadata'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'='
op|'{'
string|"'x-amz-copy-source'"
op|':'
name|'src'
op|','
nl|'\n'
string|"'x-amz-metadata-directive'"
op|':'
string|"'COPY'"
op|'}'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'make_request'
op|'('
string|"'PUT'"
op|','
name|'self'
op|'.'
name|'name'
op|','
name|'new_key_name'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'key'
op|'='
name|'self'
op|'.'
name|'new_key'
op|'('
name|'new_key_name'
op|')'
newline|'\n'
name|'h'
op|'='
name|'handler'
op|'.'
name|'XmlHandler'
op|'('
name|'key'
op|','
name|'self'
op|')'
newline|'\n'
name|'xml'
op|'.'
name|'sax'
op|'.'
name|'parseString'
op|'('
name|'body'
op|','
name|'h'
op|')'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'key'
op|','
string|"'Error'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'S3CopyError'
op|'('
name|'key'
op|'.'
name|'Code'
op|','
name|'key'
op|'.'
name|'Message'
op|','
name|'body'
op|')'
newline|'\n'
dedent|''
name|'key'
op|'.'
name|'handle_version_headers'
op|'('
name|'response'
op|')'
newline|'\n'
name|'return'
name|'key'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'S3ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|set_canned_acl
dedent|''
dedent|''
name|'def'
name|'set_canned_acl'
op|'('
name|'self'
op|','
name|'acl_str'
op|','
name|'key_name'
op|'='
string|"''"
op|','
name|'headers'
op|'='
name|'None'
op|','
nl|'\n'
name|'version_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'assert'
name|'acl_str'
name|'in'
name|'CannedACLStrings'
newline|'\n'
nl|'\n'
name|'if'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'['
string|"'x-amz-acl'"
op|']'
op|'='
name|'acl_str'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'='
op|'{'
string|"'x-amz-acl'"
op|':'
name|'acl_str'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'query_args'
op|'='
string|"'acl'"
newline|'\n'
name|'if'
name|'version_id'
op|':'
newline|'\n'
indent|'            '
name|'query_args'
op|'+='
string|"'&versionId=%s'"
op|'%'
name|'version_id'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'make_request'
op|'('
string|"'PUT'"
op|','
name|'self'
op|'.'
name|'name'
op|','
name|'key_name'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|','
name|'query_args'
op|'='
name|'query_args'
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'!='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'S3ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_xml_acl
dedent|''
dedent|''
name|'def'
name|'get_xml_acl'
op|'('
name|'self'
op|','
name|'key_name'
op|'='
string|"''"
op|','
name|'headers'
op|'='
name|'None'
op|','
name|'version_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'query_args'
op|'='
string|"'acl'"
newline|'\n'
name|'if'
name|'version_id'
op|':'
newline|'\n'
indent|'            '
name|'query_args'
op|'+='
string|"'&versionId=%s'"
op|'%'
name|'version_id'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'make_request'
op|'('
string|"'GET'"
op|','
name|'self'
op|'.'
name|'name'
op|','
name|'key_name'
op|','
nl|'\n'
name|'query_args'
op|'='
name|'query_args'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'!='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'S3ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'body'
newline|'\n'
nl|'\n'
DECL|member|set_xml_acl
dedent|''
name|'def'
name|'set_xml_acl'
op|'('
name|'self'
op|','
name|'acl_str'
op|','
name|'key_name'
op|'='
string|"''"
op|','
name|'headers'
op|'='
name|'None'
op|','
name|'version_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'query_args'
op|'='
string|"'acl'"
newline|'\n'
name|'if'
name|'version_id'
op|':'
newline|'\n'
indent|'            '
name|'query_args'
op|'+='
string|"'&versionId=%s'"
op|'%'
name|'version_id'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'make_request'
op|'('
string|"'PUT'"
op|','
name|'self'
op|'.'
name|'name'
op|','
name|'key_name'
op|','
nl|'\n'
name|'data'
op|'='
name|'acl_str'
op|','
nl|'\n'
name|'query_args'
op|'='
name|'query_args'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'!='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'S3ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|set_acl
dedent|''
dedent|''
name|'def'
name|'set_acl'
op|'('
name|'self'
op|','
name|'acl_or_str'
op|','
name|'key_name'
op|'='
string|"''"
op|','
name|'headers'
op|'='
name|'None'
op|','
name|'version_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'acl_or_str'
op|','
name|'Policy'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'set_xml_acl'
op|'('
name|'acl_or_str'
op|'.'
name|'to_xml'
op|'('
op|')'
op|','
name|'key_name'
op|','
nl|'\n'
name|'headers'
op|','
name|'version_id'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'set_canned_acl'
op|'('
name|'acl_or_str'
op|','
name|'key_name'
op|','
nl|'\n'
name|'headers'
op|','
name|'version_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_acl
dedent|''
dedent|''
name|'def'
name|'get_acl'
op|'('
name|'self'
op|','
name|'key_name'
op|'='
string|"''"
op|','
name|'headers'
op|'='
name|'None'
op|','
name|'version_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'query_args'
op|'='
string|"'acl'"
newline|'\n'
name|'if'
name|'version_id'
op|':'
newline|'\n'
indent|'            '
name|'query_args'
op|'+='
string|"'&versionId=%s'"
op|'%'
name|'version_id'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'make_request'
op|'('
string|"'GET'"
op|','
name|'self'
op|'.'
name|'name'
op|','
name|'key_name'
op|','
nl|'\n'
name|'query_args'
op|'='
name|'query_args'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'policy'
op|'='
name|'Policy'
op|'('
name|'self'
op|')'
newline|'\n'
name|'h'
op|'='
name|'handler'
op|'.'
name|'XmlHandler'
op|'('
name|'policy'
op|','
name|'self'
op|')'
newline|'\n'
name|'xml'
op|'.'
name|'sax'
op|'.'
name|'parseString'
op|'('
name|'body'
op|','
name|'h'
op|')'
newline|'\n'
name|'return'
name|'policy'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'S3ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|make_public
dedent|''
dedent|''
name|'def'
name|'make_public'
op|'('
name|'self'
op|','
name|'recursive'
op|'='
name|'False'
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'set_canned_acl'
op|'('
string|"'public-read'"
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'if'
name|'recursive'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
name|'in'
name|'self'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'set_canned_acl'
op|'('
string|"'public-read'"
op|','
name|'key'
op|'.'
name|'name'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|add_email_grant
dedent|''
dedent|''
dedent|''
name|'def'
name|'add_email_grant'
op|'('
name|'self'
op|','
name|'permission'
op|','
name|'email_address'
op|','
nl|'\n'
name|'recursive'
op|'='
name|'False'
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Convenience method that provides a quick way to add an email grant\n        to a bucket. This method retrieves the current ACL, creates a new\n        grant based on the parameters passed in, adds that grant to the ACL\n        and then PUT\'s the new ACL back to S3.\n        \n        :type permission: string\n        :param permission: The permission being granted. Should be one of:\n                           (READ, WRITE, READ_ACP, WRITE_ACP, FULL_CONTROL).\n        \n        :type email_address: string\n        :param email_address: The email address associated with the AWS\n                              account your are granting the permission to.\n        \n        :type recursive: boolean\n        :param recursive: A boolean value to controls whether the command\n                          will apply the grant to all keys within the bucket\n                          or not.  The default value is False.  By passing a\n                          True value, the call will iterate through all keys\n                          in the bucket and apply the same grant to each key.\n                          CAUTION: If you have a lot of keys, this could take\n                          a long time!\n        """'
newline|'\n'
name|'if'
name|'permission'
name|'not'
name|'in'
name|'S3Permissions'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'S3PermissionsError'
op|'('
string|"'Unknown Permission: %s'"
op|'%'
name|'permission'
op|')'
newline|'\n'
dedent|''
name|'policy'
op|'='
name|'self'
op|'.'
name|'get_acl'
op|'('
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'policy'
op|'.'
name|'acl'
op|'.'
name|'add_email_grant'
op|'('
name|'permission'
op|','
name|'email_address'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'set_acl'
op|'('
name|'policy'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'if'
name|'recursive'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
name|'in'
name|'self'
op|':'
newline|'\n'
indent|'                '
name|'key'
op|'.'
name|'add_email_grant'
op|'('
name|'permission'
op|','
name|'email_address'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|add_user_grant
dedent|''
dedent|''
dedent|''
name|'def'
name|'add_user_grant'
op|'('
name|'self'
op|','
name|'permission'
op|','
name|'user_id'
op|','
name|'recursive'
op|'='
name|'False'
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Convenience method that provides a quick way to add a canonical user grant to a bucket.\n        This method retrieves the current ACL, creates a new grant based on the parameters\n        passed in, adds that grant to the ACL and then PUT\'s the new ACL back to S3.\n        \n        :type permission: string\n        :param permission: The permission being granted. Should be one of:\n                           (READ, WRITE, READ_ACP, WRITE_ACP, FULL_CONTROL).\n        \n        :type user_id: string\n        :param user_id:     The canonical user id associated with the AWS account your are granting\n                            the permission to.\n                            \n        :type recursive: boolean\n        :param recursive: A boolean value to controls whether the command\n                          will apply the grant to all keys within the bucket\n                          or not.  The default value is False.  By passing a\n                          True value, the call will iterate through all keys\n                          in the bucket and apply the same grant to each key.\n                          CAUTION: If you have a lot of keys, this could take\n                          a long time!\n        """'
newline|'\n'
name|'if'
name|'permission'
name|'not'
name|'in'
name|'S3Permissions'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'S3PermissionsError'
op|'('
string|"'Unknown Permission: %s'"
op|'%'
name|'permission'
op|')'
newline|'\n'
dedent|''
name|'policy'
op|'='
name|'self'
op|'.'
name|'get_acl'
op|'('
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'policy'
op|'.'
name|'acl'
op|'.'
name|'add_user_grant'
op|'('
name|'permission'
op|','
name|'user_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'set_acl'
op|'('
name|'policy'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'if'
name|'recursive'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
name|'in'
name|'self'
op|':'
newline|'\n'
indent|'                '
name|'key'
op|'.'
name|'add_user_grant'
op|'('
name|'permission'
op|','
name|'user_id'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|list_grants
dedent|''
dedent|''
dedent|''
name|'def'
name|'list_grants'
op|'('
name|'self'
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'policy'
op|'='
name|'self'
op|'.'
name|'get_acl'
op|'('
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'return'
name|'policy'
op|'.'
name|'acl'
op|'.'
name|'grants'
newline|'\n'
nl|'\n'
DECL|member|get_location
dedent|''
name|'def'
name|'get_location'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns the LocationConstraint for the bucket.\n\n        :rtype: str\n        :return: The LocationConstraint for the bucket or the empty string if\n                 no constraint was specified when bucket was created.\n        """'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'make_request'
op|'('
string|"'GET'"
op|','
name|'self'
op|'.'
name|'name'
op|','
nl|'\n'
name|'query_args'
op|'='
string|"'location'"
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'rs'
op|'='
name|'ResultSet'
op|'('
name|'self'
op|')'
newline|'\n'
name|'h'
op|'='
name|'handler'
op|'.'
name|'XmlHandler'
op|'('
name|'rs'
op|','
name|'self'
op|')'
newline|'\n'
name|'xml'
op|'.'
name|'sax'
op|'.'
name|'parseString'
op|'('
name|'body'
op|','
name|'h'
op|')'
newline|'\n'
name|'return'
name|'rs'
op|'.'
name|'LocationConstraint'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'S3ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|enable_logging
dedent|''
dedent|''
name|'def'
name|'enable_logging'
op|'('
name|'self'
op|','
name|'target_bucket'
op|','
name|'target_prefix'
op|'='
string|"''"
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'target_bucket'
op|','
name|'Bucket'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'target_bucket'
op|'='
name|'target_bucket'
op|'.'
name|'name'
newline|'\n'
dedent|''
name|'body'
op|'='
name|'self'
op|'.'
name|'BucketLoggingBody'
op|'%'
op|'('
name|'target_bucket'
op|','
name|'target_prefix'
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'make_request'
op|'('
string|"'PUT'"
op|','
name|'self'
op|'.'
name|'name'
op|','
name|'data'
op|'='
name|'body'
op|','
nl|'\n'
name|'query_args'
op|'='
string|"'logging'"
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'S3ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|disable_logging
dedent|''
dedent|''
name|'def'
name|'disable_logging'
op|'('
name|'self'
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
name|'self'
op|'.'
name|'EmptyBucketLoggingBody'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'make_request'
op|'('
string|"'PUT'"
op|','
name|'self'
op|'.'
name|'name'
op|','
name|'data'
op|'='
name|'body'
op|','
nl|'\n'
name|'query_args'
op|'='
string|"'logging'"
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'S3ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_logging_status
dedent|''
dedent|''
name|'def'
name|'get_logging_status'
op|'('
name|'self'
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'make_request'
op|'('
string|"'GET'"
op|','
name|'self'
op|'.'
name|'name'
op|','
nl|'\n'
name|'query_args'
op|'='
string|"'logging'"
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'body'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'S3ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|set_as_logging_target
dedent|''
dedent|''
name|'def'
name|'set_as_logging_target'
op|'('
name|'self'
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'policy'
op|'='
name|'self'
op|'.'
name|'get_acl'
op|'('
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'g1'
op|'='
name|'Grant'
op|'('
name|'permission'
op|'='
string|"'WRITE'"
op|','
name|'type'
op|'='
string|"'Group'"
op|','
name|'uri'
op|'='
name|'self'
op|'.'
name|'LoggingGroup'
op|')'
newline|'\n'
name|'g2'
op|'='
name|'Grant'
op|'('
name|'permission'
op|'='
string|"'READ_ACP'"
op|','
name|'type'
op|'='
string|"'Group'"
op|','
name|'uri'
op|'='
name|'self'
op|'.'
name|'LoggingGroup'
op|')'
newline|'\n'
name|'policy'
op|'.'
name|'acl'
op|'.'
name|'add_grant'
op|'('
name|'g1'
op|')'
newline|'\n'
name|'policy'
op|'.'
name|'acl'
op|'.'
name|'add_grant'
op|'('
name|'g2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'set_acl'
op|'('
name|'policy'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_request_payment
dedent|''
name|'def'
name|'get_request_payment'
op|'('
name|'self'
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'make_request'
op|'('
string|"'GET'"
op|','
name|'self'
op|'.'
name|'name'
op|','
nl|'\n'
name|'query_args'
op|'='
string|"'requestPayment'"
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'body'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'S3ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|set_request_payment
dedent|''
dedent|''
name|'def'
name|'set_request_payment'
op|'('
name|'self'
op|','
name|'payer'
op|'='
string|"'BucketOwner'"
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
name|'self'
op|'.'
name|'BucketPaymentBody'
op|'%'
name|'payer'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'make_request'
op|'('
string|"'PUT'"
op|','
name|'self'
op|'.'
name|'name'
op|','
name|'data'
op|'='
name|'body'
op|','
nl|'\n'
name|'query_args'
op|'='
string|"'requestPayment'"
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'S3ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|configure_versioning
dedent|''
dedent|''
name|'def'
name|'configure_versioning'
op|'('
name|'self'
op|','
name|'versioning'
op|','
name|'mfa_delete'
op|'='
name|'False'
op|','
nl|'\n'
name|'mfa_token'
op|'='
name|'None'
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Configure versioning for this bucket.\n        Note: This feature is currently in beta release and is available\n              only in the Northern California region.\n\n        :type versioning: bool\n        :param versioning: A boolean indicating whether version is\n                           enabled (True) or disabled (False).\n\n        :type mfa_delete: bool\n        :param mfa_delete: A boolean indicating whether the Multi-Factor\n                           Authentication Delete feature is enabled (True)\n                           or disabled (False).  If mfa_delete is enabled\n                           then all Delete operations will require the\n                           token from your MFA device to be passed in\n                           the request.\n\n        :type mfa_token: tuple or list of strings\n        :param mfa_token: A tuple or list consisting of the serial number\n                          from the MFA device and the current value of\n                          the six-digit token associated with the device.\n                          This value is required when you are changing\n                          the status of the MfaDelete property of\n                          the bucket.\n        """'
newline|'\n'
name|'if'
name|'versioning'
op|':'
newline|'\n'
indent|'            '
name|'ver'
op|'='
string|"'Enabled'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'ver'
op|'='
string|"'Suspended'"
newline|'\n'
dedent|''
name|'if'
name|'mfa_delete'
op|':'
newline|'\n'
indent|'            '
name|'mfa'
op|'='
string|"'Enabled'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'mfa'
op|'='
string|"'Disabled'"
newline|'\n'
dedent|''
name|'body'
op|'='
name|'self'
op|'.'
name|'VersioningBody'
op|'%'
op|'('
name|'ver'
op|','
name|'mfa'
op|')'
newline|'\n'
name|'if'
name|'mfa_token'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'headers'
op|':'
newline|'\n'
indent|'                '
name|'headers'
op|'='
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'headers'
op|'['
string|"'x-amz-mfa'"
op|']'
op|'='
string|"' '"
op|'.'
name|'join'
op|'('
name|'mfa_token'
op|')'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'make_request'
op|'('
string|"'PUT'"
op|','
name|'self'
op|'.'
name|'name'
op|','
name|'data'
op|'='
name|'body'
op|','
nl|'\n'
name|'query_args'
op|'='
string|"'versioning'"
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'S3ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_versioning_status
dedent|''
dedent|''
name|'def'
name|'get_versioning_status'
op|'('
name|'self'
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns the current status of versioning on the bucket.\n\n        :rtype: dict\n        :returns: A dictionary containing a key named \'Versioning\'\n                  that can have a value of either Enabled, Disabled,\n                  or Suspended. Also, if MFADelete has ever been enabled\n                  on the bucket, the dictionary will contain a key\n                  named \'MFADelete\' which will have a value of either\n                  Enabled or Suspended.\n        """'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'connection'
op|'.'
name|'make_request'
op|'('
string|"'GET'"
op|','
name|'self'
op|'.'
name|'name'
op|','
nl|'\n'
name|'query_args'
op|'='
string|"'versioning'"
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'debug'
op|'('
name|'body'
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'ver'
op|'='
name|'re'
op|'.'
name|'search'
op|'('
name|'self'
op|'.'
name|'VersionRE'
op|','
name|'body'
op|')'
newline|'\n'
name|'if'
name|'ver'
op|':'
newline|'\n'
indent|'                '
name|'d'
op|'['
string|"'Versioning'"
op|']'
op|'='
name|'ver'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
newline|'\n'
dedent|''
name|'mfa'
op|'='
name|'re'
op|'.'
name|'search'
op|'('
name|'self'
op|'.'
name|'MFADeleteRE'
op|','
name|'body'
op|')'
newline|'\n'
name|'if'
name|'mfa'
op|':'
newline|'\n'
indent|'                '
name|'d'
op|'['
string|"'MfaDelete'"
op|']'
op|'='
name|'mfa'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'d'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'S3ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete
dedent|''
dedent|''
name|'def'
name|'delete'
op|'('
name|'self'
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'delete_bucket'
op|'('
name|'self'
op|'.'
name|'name'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
