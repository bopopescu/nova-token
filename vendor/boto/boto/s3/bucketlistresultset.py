begin_unit
comment|'# Copyright (c) 2006,2007 Mitch Garnaat http://garnaat.org/'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Permission is hereby granted, free of charge, to any person obtaining a'
nl|'\n'
comment|'# copy of this software and associated documentation files (the'
nl|'\n'
comment|'# "Software"), to deal in the Software without restriction, including'
nl|'\n'
comment|'# without limitation the rights to use, copy, modify, merge, publish, dis-'
nl|'\n'
comment|'# tribute, sublicense, and/or sell copies of the Software, and to permit'
nl|'\n'
comment|'# persons to whom the Software is furnished to do so, subject to the fol-'
nl|'\n'
comment|'# lowing conditions:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# The above copyright notice and this permission notice shall be included'
nl|'\n'
comment|'# in all copies or substantial portions of the Software.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS'
nl|'\n'
comment|'# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABIL-'
nl|'\n'
comment|'# ITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT'
nl|'\n'
comment|'# SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, '
nl|'\n'
comment|'# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,'
nl|'\n'
comment|'# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS'
nl|'\n'
comment|'# IN THE SOFTWARE.'
nl|'\n'
nl|'\n'
DECL|function|bucket_lister
name|'def'
name|'bucket_lister'
op|'('
name|'bucket'
op|','
name|'prefix'
op|'='
string|"''"
op|','
name|'delimiter'
op|'='
string|"''"
op|','
name|'marker'
op|'='
string|"''"
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A generator function for listing keys in a bucket.\n    """'
newline|'\n'
name|'more_results'
op|'='
name|'True'
newline|'\n'
name|'k'
op|'='
name|'None'
newline|'\n'
name|'while'
name|'more_results'
op|':'
newline|'\n'
indent|'        '
name|'rs'
op|'='
name|'bucket'
op|'.'
name|'get_all_keys'
op|'('
name|'prefix'
op|'='
name|'prefix'
op|','
name|'marker'
op|'='
name|'marker'
op|','
nl|'\n'
name|'delimiter'
op|'='
name|'delimiter'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'for'
name|'k'
name|'in'
name|'rs'
op|':'
newline|'\n'
indent|'            '
name|'yield'
name|'k'
newline|'\n'
dedent|''
name|'if'
name|'k'
op|':'
newline|'\n'
indent|'            '
name|'marker'
op|'='
name|'k'
op|'.'
name|'name'
newline|'\n'
dedent|''
name|'more_results'
op|'='
name|'rs'
op|'.'
name|'is_truncated'
newline|'\n'
nl|'\n'
DECL|class|BucketListResultSet
dedent|''
dedent|''
name|'class'
name|'BucketListResultSet'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A resultset for listing keys within a bucket.  Uses the bucket_lister\n    generator function and implements the iterator interface.  This\n    transparently handles the results paging from S3 so even if you have\n    many thousands of keys within the bucket you can iterate over all\n    keys in a reasonably efficient manner.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'bucket'
op|'='
name|'None'
op|','
name|'prefix'
op|'='
string|"''"
op|','
name|'delimiter'
op|'='
string|"''"
op|','
name|'marker'
op|'='
string|"''"
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'bucket'
op|'='
name|'bucket'
newline|'\n'
name|'self'
op|'.'
name|'prefix'
op|'='
name|'prefix'
newline|'\n'
name|'self'
op|'.'
name|'delimiter'
op|'='
name|'delimiter'
newline|'\n'
name|'self'
op|'.'
name|'marker'
op|'='
name|'marker'
newline|'\n'
name|'self'
op|'.'
name|'headers'
op|'='
name|'headers'
newline|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'bucket_lister'
op|'('
name|'self'
op|'.'
name|'bucket'
op|','
name|'prefix'
op|'='
name|'self'
op|'.'
name|'prefix'
op|','
nl|'\n'
name|'delimiter'
op|'='
name|'self'
op|'.'
name|'delimiter'
op|','
name|'marker'
op|'='
name|'self'
op|'.'
name|'marker'
op|','
name|'headers'
op|'='
name|'self'
op|'.'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|function|versioned_bucket_lister
dedent|''
dedent|''
name|'def'
name|'versioned_bucket_lister'
op|'('
name|'bucket'
op|','
name|'prefix'
op|'='
string|"''"
op|','
name|'delimiter'
op|'='
string|"''"
op|','
nl|'\n'
name|'key_marker'
op|'='
string|"''"
op|','
name|'version_id_marker'
op|'='
string|"''"
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A generator function for listing versions in a bucket.\n    """'
newline|'\n'
name|'more_results'
op|'='
name|'True'
newline|'\n'
name|'k'
op|'='
name|'None'
newline|'\n'
name|'while'
name|'more_results'
op|':'
newline|'\n'
indent|'        '
name|'rs'
op|'='
name|'bucket'
op|'.'
name|'get_all_versions'
op|'('
name|'prefix'
op|'='
name|'prefix'
op|','
name|'key_marker'
op|'='
name|'key_marker'
op|','
nl|'\n'
name|'version_id_marker'
op|'='
name|'version_id_marker'
op|','
nl|'\n'
name|'delimiter'
op|'='
name|'delimiter'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'for'
name|'k'
name|'in'
name|'rs'
op|':'
newline|'\n'
indent|'            '
name|'yield'
name|'k'
newline|'\n'
dedent|''
name|'key_marker'
op|'='
name|'rs'
op|'.'
name|'key_marker'
newline|'\n'
name|'version_id_marker'
op|'='
name|'rs'
op|'.'
name|'version_id_marker'
newline|'\n'
name|'more_results'
op|'='
name|'rs'
op|'.'
name|'is_truncated'
newline|'\n'
nl|'\n'
DECL|class|VersionedBucketListResultSet
dedent|''
dedent|''
name|'class'
name|'VersionedBucketListResultSet'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A resultset for listing versions within a bucket.  Uses the bucket_lister\n    generator function and implements the iterator interface.  This\n    transparently handles the results paging from S3 so even if you have\n    many thousands of keys within the bucket you can iterate over all\n    keys in a reasonably efficient manner.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'bucket'
op|'='
name|'None'
op|','
name|'prefix'
op|'='
string|"''"
op|','
name|'delimiter'
op|'='
string|"''"
op|','
name|'key_marker'
op|'='
string|"''"
op|','
nl|'\n'
name|'version_id_marker'
op|'='
string|"''"
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'bucket'
op|'='
name|'bucket'
newline|'\n'
name|'self'
op|'.'
name|'prefix'
op|'='
name|'prefix'
newline|'\n'
name|'self'
op|'.'
name|'delimiter'
op|'='
name|'delimiter'
newline|'\n'
name|'self'
op|'.'
name|'key_marker'
op|'='
name|'key_marker'
newline|'\n'
name|'self'
op|'.'
name|'version_id_marker'
op|'='
name|'version_id_marker'
newline|'\n'
name|'self'
op|'.'
name|'headers'
op|'='
name|'headers'
newline|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'versioned_bucket_lister'
op|'('
name|'self'
op|'.'
name|'bucket'
op|','
name|'prefix'
op|'='
name|'self'
op|'.'
name|'prefix'
op|','
nl|'\n'
name|'delimiter'
op|'='
name|'self'
op|'.'
name|'delimiter'
op|','
nl|'\n'
name|'key_marker'
op|'='
name|'self'
op|'.'
name|'key_marker'
op|','
nl|'\n'
name|'version_id_marker'
op|'='
name|'self'
op|'.'
name|'version_id_marker'
op|','
nl|'\n'
name|'headers'
op|'='
name|'self'
op|'.'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
