begin_unit
comment|'# Copyright (c) 2006,2007,2008 Mitch Garnaat http://garnaat.org/'
nl|'\n'
comment|'# Copyright (c) 2010 Chris Moyer http://coredumped.org/'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Permission is hereby granted, free of charge, to any person obtaining a'
nl|'\n'
comment|'# copy of this software and associated documentation files (the'
nl|'\n'
comment|'# "Software"), to deal in the Software without restriction, including'
nl|'\n'
comment|'# without limitation the rights to use, copy, modify, merge, publish, dis-'
nl|'\n'
comment|'# tribute, sublicense, and/or sell copies of the Software, and to permit'
nl|'\n'
comment|'# persons to whom the Software is furnished to do so, subject to the fol-'
nl|'\n'
comment|'# lowing conditions:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# The above copyright notice and this permission notice shall be included'
nl|'\n'
comment|'# in all copies or substantial portions of the Software.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS'
nl|'\n'
comment|'# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABIL-'
nl|'\n'
comment|'# ITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT'
nl|'\n'
comment|'# SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, '
nl|'\n'
comment|'# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,'
nl|'\n'
comment|'# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS'
nl|'\n'
comment|'# IN THE SOFTWARE.'
nl|'\n'
name|'import'
name|'boto'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'utils'
name|'import'
name|'find_class'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'sdb'
op|'.'
name|'db'
op|'.'
name|'key'
name|'import'
name|'Key'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'sdb'
op|'.'
name|'db'
op|'.'
name|'model'
name|'import'
name|'Model'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'sdb'
op|'.'
name|'db'
op|'.'
name|'blob'
name|'import'
name|'Blob'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'sdb'
op|'.'
name|'db'
op|'.'
name|'property'
name|'import'
name|'ListProperty'
op|','
name|'MapProperty'
newline|'\n'
name|'from'
name|'datetime'
name|'import'
name|'datetime'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'exception'
name|'import'
name|'SDBPersistenceError'
newline|'\n'
nl|'\n'
DECL|variable|ISO8601
name|'ISO8601'
op|'='
string|"'%Y-%m-%dT%H:%M:%SZ'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SDBConverter
name|'class'
name|'SDBConverter'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Responsible for converting base Python types to format compatible with underlying\n    database.  For SimpleDB, that means everything needs to be converted to a string\n    when stored in SimpleDB and from a string when retrieved.\n\n    To convert a value, pass it to the encode or decode method.  The encode method\n    will take a Python native value and convert to DB format.  The decode method will\n    take a DB format value and convert it to Python native format.  To find the appropriate\n    method to call, the generic encode/decode methods will look for the type-specific\n    method by searching for a method called "encode_<type name>" or "decode_<type name>".\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'manager'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'manager'
op|'='
name|'manager'
newline|'\n'
name|'self'
op|'.'
name|'type_map'
op|'='
op|'{'
name|'bool'
op|':'
op|'('
name|'self'
op|'.'
name|'encode_bool'
op|','
name|'self'
op|'.'
name|'decode_bool'
op|')'
op|','
nl|'\n'
name|'int'
op|':'
op|'('
name|'self'
op|'.'
name|'encode_int'
op|','
name|'self'
op|'.'
name|'decode_int'
op|')'
op|','
nl|'\n'
name|'long'
op|':'
op|'('
name|'self'
op|'.'
name|'encode_long'
op|','
name|'self'
op|'.'
name|'decode_long'
op|')'
op|','
nl|'\n'
name|'float'
op|':'
op|'('
name|'self'
op|'.'
name|'encode_float'
op|','
name|'self'
op|'.'
name|'decode_float'
op|')'
op|','
nl|'\n'
name|'Model'
op|':'
op|'('
name|'self'
op|'.'
name|'encode_reference'
op|','
name|'self'
op|'.'
name|'decode_reference'
op|')'
op|','
nl|'\n'
name|'Key'
op|':'
op|'('
name|'self'
op|'.'
name|'encode_reference'
op|','
name|'self'
op|'.'
name|'decode_reference'
op|')'
op|','
nl|'\n'
name|'datetime'
op|':'
op|'('
name|'self'
op|'.'
name|'encode_datetime'
op|','
name|'self'
op|'.'
name|'decode_datetime'
op|')'
op|','
nl|'\n'
name|'Blob'
op|':'
op|'('
name|'self'
op|'.'
name|'encode_blob'
op|','
name|'self'
op|'.'
name|'decode_blob'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|encode
dedent|''
name|'def'
name|'encode'
op|'('
name|'self'
op|','
name|'item_type'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'Model'
name|'in'
name|'item_type'
op|'.'
name|'mro'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'item_type'
op|'='
name|'Model'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'if'
name|'item_type'
name|'in'
name|'self'
op|'.'
name|'type_map'
op|':'
newline|'\n'
indent|'            '
name|'encode'
op|'='
name|'self'
op|'.'
name|'type_map'
op|'['
name|'item_type'
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'return'
name|'encode'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'value'
newline|'\n'
nl|'\n'
DECL|member|decode
dedent|''
name|'def'
name|'decode'
op|'('
name|'self'
op|','
name|'item_type'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'item_type'
name|'in'
name|'self'
op|'.'
name|'type_map'
op|':'
newline|'\n'
indent|'            '
name|'decode'
op|'='
name|'self'
op|'.'
name|'type_map'
op|'['
name|'item_type'
op|']'
op|'['
number|'1'
op|']'
newline|'\n'
name|'return'
name|'decode'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'value'
newline|'\n'
nl|'\n'
DECL|member|encode_list
dedent|''
name|'def'
name|'encode_list'
op|'('
name|'self'
op|','
name|'prop'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'value'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'value'
op|','
name|'list'
op|')'
op|':'
newline|'\n'
comment|"# This is a little trick to avoid encoding when it's just a single value,"
nl|'\n'
comment|"# since that most likely means it's from a query"
nl|'\n'
indent|'            '
name|'item_type'
op|'='
name|'getattr'
op|'('
name|'prop'
op|','
string|'"item_type"'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'encode'
op|'('
name|'item_type'
op|','
name|'value'
op|')'
newline|'\n'
comment|"# Just enumerate(value) won't work here because"
nl|'\n'
comment|'# we need to add in some zero padding'
nl|'\n'
comment|'# We support lists up to 1,000 attributes, since'
nl|'\n'
comment|'# SDB technically only supports 1024 attributes anyway'
nl|'\n'
dedent|''
name|'values'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'enumerate'
op|'('
name|'value'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'['
string|'"%03d"'
op|'%'
name|'k'
op|']'
op|'='
name|'v'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'encode_map'
op|'('
name|'prop'
op|','
name|'values'
op|')'
newline|'\n'
nl|'\n'
DECL|member|encode_map
dedent|''
name|'def'
name|'encode_map'
op|'('
name|'self'
op|','
name|'prop'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'value'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'value'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|','
string|"'Expected a dict value, got %s'"
op|'%'
name|'type'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
name|'new_value'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'value'
op|':'
newline|'\n'
indent|'            '
name|'item_type'
op|'='
name|'getattr'
op|'('
name|'prop'
op|','
string|'"item_type"'
op|')'
newline|'\n'
name|'if'
name|'Model'
name|'in'
name|'item_type'
op|'.'
name|'mro'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'item_type'
op|'='
name|'Model'
newline|'\n'
dedent|''
name|'encoded_value'
op|'='
name|'self'
op|'.'
name|'encode'
op|'('
name|'item_type'
op|','
name|'value'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
name|'if'
name|'encoded_value'
op|'!='
name|'None'
name|'and'
name|'encoded_value'
op|'!='
string|'"None"'
op|':'
newline|'\n'
indent|'                '
name|'new_value'
op|'.'
name|'append'
op|'('
string|"'%s:%s'"
op|'%'
op|'('
name|'key'
op|','
name|'encoded_value'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'new_value'
newline|'\n'
nl|'\n'
DECL|member|encode_prop
dedent|''
name|'def'
name|'encode_prop'
op|'('
name|'self'
op|','
name|'prop'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'prop'
op|','
name|'ListProperty'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'encode_list'
op|'('
name|'prop'
op|','
name|'value'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'isinstance'
op|'('
name|'prop'
op|','
name|'MapProperty'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'encode_map'
op|'('
name|'prop'
op|','
name|'value'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'encode'
op|'('
name|'prop'
op|'.'
name|'data_type'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|decode_list
dedent|''
dedent|''
name|'def'
name|'decode_list'
op|'('
name|'self'
op|','
name|'prop'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'value'
op|','
name|'list'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'value'
op|'='
op|'['
name|'value'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'hasattr'
op|'('
name|'prop'
op|','
string|"'item_type'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'item_type'
op|'='
name|'getattr'
op|'('
name|'prop'
op|','
string|'"item_type"'
op|')'
newline|'\n'
name|'dec_val'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'val'
name|'in'
name|'value'
op|':'
newline|'\n'
indent|'                '
name|'k'
op|','
name|'v'
op|'='
name|'self'
op|'.'
name|'decode_map_element'
op|'('
name|'item_type'
op|','
name|'val'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'k'
op|'='
name|'int'
op|'('
name|'k'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                    '
name|'k'
op|'='
name|'v'
newline|'\n'
dedent|''
name|'dec_val'
op|'['
name|'k'
op|']'
op|'='
name|'v'
newline|'\n'
dedent|''
name|'value'
op|'='
name|'dec_val'
op|'.'
name|'values'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'value'
newline|'\n'
nl|'\n'
DECL|member|decode_map
dedent|''
name|'def'
name|'decode_map'
op|'('
name|'self'
op|','
name|'prop'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'value'
op|','
name|'list'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'value'
op|'='
op|'['
name|'value'
op|']'
newline|'\n'
dedent|''
name|'ret_value'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'item_type'
op|'='
name|'getattr'
op|'('
name|'prop'
op|','
string|'"item_type"'
op|')'
newline|'\n'
name|'for'
name|'val'
name|'in'
name|'value'
op|':'
newline|'\n'
indent|'            '
name|'k'
op|','
name|'v'
op|'='
name|'self'
op|'.'
name|'decode_map_element'
op|'('
name|'item_type'
op|','
name|'val'
op|')'
newline|'\n'
name|'ret_value'
op|'['
name|'k'
op|']'
op|'='
name|'v'
newline|'\n'
dedent|''
name|'return'
name|'ret_value'
newline|'\n'
nl|'\n'
DECL|member|decode_map_element
dedent|''
name|'def'
name|'decode_map_element'
op|'('
name|'self'
op|','
name|'item_type'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Decode a single element for a map"""'
newline|'\n'
name|'key'
op|'='
name|'value'
newline|'\n'
name|'if'
string|'":"'
name|'in'
name|'value'
op|':'
newline|'\n'
indent|'            '
name|'key'
op|','
name|'value'
op|'='
name|'value'
op|'.'
name|'split'
op|'('
string|"':'"
op|','
number|'1'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'Model'
name|'in'
name|'item_type'
op|'.'
name|'mro'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'value'
op|'='
name|'item_type'
op|'('
name|'id'
op|'='
name|'value'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'value'
op|'='
name|'self'
op|'.'
name|'decode'
op|'('
name|'item_type'
op|','
name|'value'
op|')'
newline|'\n'
dedent|''
name|'return'
op|'('
name|'key'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|decode_prop
dedent|''
name|'def'
name|'decode_prop'
op|'('
name|'self'
op|','
name|'prop'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'prop'
op|','
name|'ListProperty'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'decode_list'
op|'('
name|'prop'
op|','
name|'value'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'isinstance'
op|'('
name|'prop'
op|','
name|'MapProperty'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'decode_map'
op|'('
name|'prop'
op|','
name|'value'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'decode'
op|'('
name|'prop'
op|'.'
name|'data_type'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|encode_int
dedent|''
dedent|''
name|'def'
name|'encode_int'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'value'
op|'='
name|'int'
op|'('
name|'value'
op|')'
newline|'\n'
name|'value'
op|'+='
number|'2147483648'
newline|'\n'
name|'return'
string|"'%010d'"
op|'%'
name|'value'
newline|'\n'
nl|'\n'
DECL|member|decode_int
dedent|''
name|'def'
name|'decode_int'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'value'
op|'='
name|'int'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|'"Error, %s is not an integer"'
op|'%'
name|'value'
op|')'
newline|'\n'
name|'value'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'value'
op|'='
name|'int'
op|'('
name|'value'
op|')'
newline|'\n'
name|'value'
op|'-='
number|'2147483648'
newline|'\n'
name|'return'
name|'int'
op|'('
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|encode_long
dedent|''
name|'def'
name|'encode_long'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'value'
op|'='
name|'long'
op|'('
name|'value'
op|')'
newline|'\n'
name|'value'
op|'+='
number|'9223372036854775808'
newline|'\n'
name|'return'
string|"'%020d'"
op|'%'
name|'value'
newline|'\n'
nl|'\n'
DECL|member|decode_long
dedent|''
name|'def'
name|'decode_long'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'value'
op|'='
name|'long'
op|'('
name|'value'
op|')'
newline|'\n'
name|'value'
op|'-='
number|'9223372036854775808'
newline|'\n'
name|'return'
name|'value'
newline|'\n'
nl|'\n'
DECL|member|encode_bool
dedent|''
name|'def'
name|'encode_bool'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'value'
op|'=='
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'true'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'false'"
newline|'\n'
nl|'\n'
DECL|member|decode_bool
dedent|''
dedent|''
name|'def'
name|'decode_bool'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'value'
op|'.'
name|'lower'
op|'('
op|')'
op|'=='
string|"'true'"
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|member|encode_float
dedent|''
dedent|''
name|'def'
name|'encode_float'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        See http://tools.ietf.org/html/draft-wood-ldapext-float-00.\n        """'
newline|'\n'
name|'s'
op|'='
string|"'%e'"
op|'%'
name|'value'
newline|'\n'
name|'l'
op|'='
name|'s'
op|'.'
name|'split'
op|'('
string|"'e'"
op|')'
newline|'\n'
name|'mantissa'
op|'='
name|'l'
op|'['
number|'0'
op|']'
op|'.'
name|'ljust'
op|'('
number|'18'
op|','
string|"'0'"
op|')'
newline|'\n'
name|'exponent'
op|'='
name|'l'
op|'['
number|'1'
op|']'
newline|'\n'
name|'if'
name|'value'
op|'=='
number|'0.0'
op|':'
newline|'\n'
indent|'            '
name|'case'
op|'='
string|"'3'"
newline|'\n'
name|'exponent'
op|'='
string|"'000'"
newline|'\n'
dedent|''
name|'elif'
name|'mantissa'
op|'['
number|'0'
op|']'
op|'!='
string|"'-'"
name|'and'
name|'exponent'
op|'['
number|'0'
op|']'
op|'=='
string|"'+'"
op|':'
newline|'\n'
indent|'            '
name|'case'
op|'='
string|"'5'"
newline|'\n'
name|'exponent'
op|'='
name|'exponent'
op|'['
number|'1'
op|':'
op|']'
op|'.'
name|'rjust'
op|'('
number|'3'
op|','
string|"'0'"
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'mantissa'
op|'['
number|'0'
op|']'
op|'!='
string|"'-'"
name|'and'
name|'exponent'
op|'['
number|'0'
op|']'
op|'=='
string|"'-'"
op|':'
newline|'\n'
indent|'            '
name|'case'
op|'='
string|"'4'"
newline|'\n'
name|'exponent'
op|'='
number|'999'
op|'+'
name|'int'
op|'('
name|'exponent'
op|')'
newline|'\n'
name|'exponent'
op|'='
string|"'%03d'"
op|'%'
name|'exponent'
newline|'\n'
dedent|''
name|'elif'
name|'mantissa'
op|'['
number|'0'
op|']'
op|'=='
string|"'-'"
name|'and'
name|'exponent'
op|'['
number|'0'
op|']'
op|'=='
string|"'-'"
op|':'
newline|'\n'
indent|'            '
name|'case'
op|'='
string|"'2'"
newline|'\n'
name|'mantissa'
op|'='
string|"'%f'"
op|'%'
op|'('
number|'10'
op|'+'
name|'float'
op|'('
name|'mantissa'
op|')'
op|')'
newline|'\n'
name|'mantissa'
op|'='
name|'mantissa'
op|'.'
name|'ljust'
op|'('
number|'18'
op|','
string|"'0'"
op|')'
newline|'\n'
name|'exponent'
op|'='
name|'exponent'
op|'['
number|'1'
op|':'
op|']'
op|'.'
name|'rjust'
op|'('
number|'3'
op|','
string|"'0'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'case'
op|'='
string|"'1'"
newline|'\n'
name|'mantissa'
op|'='
string|"'%f'"
op|'%'
op|'('
number|'10'
op|'+'
name|'float'
op|'('
name|'mantissa'
op|')'
op|')'
newline|'\n'
name|'mantissa'
op|'='
name|'mantissa'
op|'.'
name|'ljust'
op|'('
number|'18'
op|','
string|"'0'"
op|')'
newline|'\n'
name|'exponent'
op|'='
number|'999'
op|'-'
name|'int'
op|'('
name|'exponent'
op|')'
newline|'\n'
name|'exponent'
op|'='
string|"'%03d'"
op|'%'
name|'exponent'
newline|'\n'
dedent|''
name|'return'
string|"'%s %s %s'"
op|'%'
op|'('
name|'case'
op|','
name|'exponent'
op|','
name|'mantissa'
op|')'
newline|'\n'
nl|'\n'
DECL|member|decode_float
dedent|''
name|'def'
name|'decode_float'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'case'
op|'='
name|'value'
op|'['
number|'0'
op|']'
newline|'\n'
name|'exponent'
op|'='
name|'value'
op|'['
number|'2'
op|':'
number|'5'
op|']'
newline|'\n'
name|'mantissa'
op|'='
name|'value'
op|'['
number|'6'
op|':'
op|']'
newline|'\n'
name|'if'
name|'case'
op|'=='
string|"'3'"
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'0.0'
newline|'\n'
dedent|''
name|'elif'
name|'case'
op|'=='
string|"'5'"
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'elif'
name|'case'
op|'=='
string|"'4'"
op|':'
newline|'\n'
indent|'            '
name|'exponent'
op|'='
string|"'%03d'"
op|'%'
op|'('
name|'int'
op|'('
name|'exponent'
op|')'
op|'-'
number|'999'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'case'
op|'=='
string|"'2'"
op|':'
newline|'\n'
indent|'            '
name|'mantissa'
op|'='
string|"'%f'"
op|'%'
op|'('
name|'float'
op|'('
name|'mantissa'
op|')'
op|'-'
number|'10'
op|')'
newline|'\n'
name|'exponent'
op|'='
string|"'-'"
op|'+'
name|'exponent'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'mantissa'
op|'='
string|"'%f'"
op|'%'
op|'('
name|'float'
op|'('
name|'mantissa'
op|')'
op|'-'
number|'10'
op|')'
newline|'\n'
name|'exponent'
op|'='
string|"'%03d'"
op|'%'
name|'abs'
op|'('
op|'('
name|'int'
op|'('
name|'exponent'
op|')'
op|'-'
number|'999'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'float'
op|'('
name|'mantissa'
op|'+'
string|"'e'"
op|'+'
name|'exponent'
op|')'
newline|'\n'
nl|'\n'
DECL|member|encode_datetime
dedent|''
name|'def'
name|'encode_datetime'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'value'
op|','
name|'str'
op|')'
name|'or'
name|'isinstance'
op|'('
name|'value'
op|','
name|'unicode'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'value'
newline|'\n'
dedent|''
name|'return'
name|'value'
op|'.'
name|'strftime'
op|'('
name|'ISO8601'
op|')'
newline|'\n'
nl|'\n'
DECL|member|decode_datetime
dedent|''
name|'def'
name|'decode_datetime'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'datetime'
op|'.'
name|'strptime'
op|'('
name|'value'
op|','
name|'ISO8601'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|encode_reference
dedent|''
dedent|''
name|'def'
name|'encode_reference'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'value'
op|','
name|'str'
op|')'
name|'or'
name|'isinstance'
op|'('
name|'value'
op|','
name|'unicode'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'value'
newline|'\n'
dedent|''
name|'if'
name|'value'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"''"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'value'
op|'.'
name|'id'
newline|'\n'
nl|'\n'
DECL|member|decode_reference
dedent|''
dedent|''
name|'def'
name|'decode_reference'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'value'
name|'or'
name|'value'
op|'=='
string|'"None"'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'value'
newline|'\n'
nl|'\n'
DECL|member|encode_blob
dedent|''
name|'def'
name|'encode_blob'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'value'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'value'
op|'.'
name|'id'
op|':'
newline|'\n'
indent|'            '
name|'bucket'
op|'='
name|'self'
op|'.'
name|'manager'
op|'.'
name|'get_blob_bucket'
op|'('
op|')'
newline|'\n'
name|'key'
op|'='
name|'bucket'
op|'.'
name|'new_key'
op|'('
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'value'
op|'.'
name|'id'
op|'='
string|'"s3://%s/%s"'
op|'%'
op|'('
name|'key'
op|'.'
name|'bucket'
op|'.'
name|'name'
op|','
name|'key'
op|'.'
name|'name'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'match'
op|'='
name|'re'
op|'.'
name|'match'
op|'('
string|'"^s3:\\/\\/([^\\/]*)\\/(.*)$"'
op|','
name|'value'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'if'
name|'match'
op|':'
newline|'\n'
indent|'                '
name|'s3'
op|'='
name|'self'
op|'.'
name|'manager'
op|'.'
name|'get_s3_connection'
op|'('
op|')'
newline|'\n'
name|'bucket'
op|'='
name|'s3'
op|'.'
name|'get_bucket'
op|'('
name|'match'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
op|','
name|'validate'
op|'='
name|'False'
op|')'
newline|'\n'
name|'key'
op|'='
name|'bucket'
op|'.'
name|'get_key'
op|'('
name|'match'
op|'.'
name|'group'
op|'('
number|'2'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'SDBPersistenceError'
op|'('
string|'"Invalid Blob ID: %s"'
op|'%'
name|'value'
op|'.'
name|'id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'value'
op|'.'
name|'value'
op|'!='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'key'
op|'.'
name|'set_contents_from_string'
op|'('
name|'value'
op|'.'
name|'value'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'value'
op|'.'
name|'id'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|decode_blob
dedent|''
name|'def'
name|'decode_blob'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'value'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'match'
op|'='
name|'re'
op|'.'
name|'match'
op|'('
string|'"^s3:\\/\\/([^\\/]*)\\/(.*)$"'
op|','
name|'value'
op|')'
newline|'\n'
name|'if'
name|'match'
op|':'
newline|'\n'
indent|'            '
name|'s3'
op|'='
name|'self'
op|'.'
name|'manager'
op|'.'
name|'get_s3_connection'
op|'('
op|')'
newline|'\n'
name|'bucket'
op|'='
name|'s3'
op|'.'
name|'get_bucket'
op|'('
name|'match'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
op|','
name|'validate'
op|'='
name|'False'
op|')'
newline|'\n'
name|'key'
op|'='
name|'bucket'
op|'.'
name|'get_key'
op|'('
name|'match'
op|'.'
name|'group'
op|'('
number|'2'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'key'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'Blob'
op|'('
name|'file'
op|'='
name|'key'
op|','
name|'id'
op|'='
string|'"s3://%s/%s"'
op|'%'
op|'('
name|'key'
op|'.'
name|'bucket'
op|'.'
name|'name'
op|','
name|'key'
op|'.'
name|'name'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|class|SDBManager
dedent|''
dedent|''
dedent|''
name|'class'
name|'SDBManager'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'cls'
op|','
name|'db_name'
op|','
name|'db_user'
op|','
name|'db_passwd'
op|','
nl|'\n'
name|'db_host'
op|','
name|'db_port'
op|','
name|'db_table'
op|','
name|'ddl_dir'
op|','
name|'enable_ssl'
op|','
name|'consistent'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'cls'
op|'='
name|'cls'
newline|'\n'
name|'self'
op|'.'
name|'db_name'
op|'='
name|'db_name'
newline|'\n'
name|'self'
op|'.'
name|'db_user'
op|'='
name|'db_user'
newline|'\n'
name|'self'
op|'.'
name|'db_passwd'
op|'='
name|'db_passwd'
newline|'\n'
name|'self'
op|'.'
name|'db_host'
op|'='
name|'db_host'
newline|'\n'
name|'self'
op|'.'
name|'db_port'
op|'='
name|'db_port'
newline|'\n'
name|'self'
op|'.'
name|'db_table'
op|'='
name|'db_table'
newline|'\n'
name|'self'
op|'.'
name|'ddl_dir'
op|'='
name|'ddl_dir'
newline|'\n'
name|'self'
op|'.'
name|'enable_ssl'
op|'='
name|'enable_ssl'
newline|'\n'
name|'self'
op|'.'
name|'s3'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'bucket'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'converter'
op|'='
name|'SDBConverter'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_sdb'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_domain'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'consistent'
op|'=='
name|'None'
name|'and'
name|'hasattr'
op|'('
name|'cls'
op|','
string|'"__consistent"'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'consistent'
op|'='
name|'cls'
op|'.'
name|'__consistent__'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'consistent'
op|'='
name|'consistent'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|sdb
name|'def'
name|'sdb'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'_sdb'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_connect'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_sdb'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|domain
name|'def'
name|'domain'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'_domain'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_connect'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_domain'
newline|'\n'
nl|'\n'
DECL|member|_connect
dedent|''
name|'def'
name|'_connect'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_sdb'
op|'='
name|'boto'
op|'.'
name|'connect_sdb'
op|'('
name|'aws_access_key_id'
op|'='
name|'self'
op|'.'
name|'db_user'
op|','
nl|'\n'
name|'aws_secret_access_key'
op|'='
name|'self'
op|'.'
name|'db_passwd'
op|','
nl|'\n'
name|'is_secure'
op|'='
name|'self'
op|'.'
name|'enable_ssl'
op|')'
newline|'\n'
comment|'# This assumes that the domain has already been created'
nl|'\n'
comment|"# It's much more efficient to do it this way rather than"
nl|'\n'
comment|'# having this make a roundtrip each time to validate.'
nl|'\n'
comment|"# The downside is that if the domain doesn't exist, it breaks"
nl|'\n'
name|'self'
op|'.'
name|'_domain'
op|'='
name|'self'
op|'.'
name|'_sdb'
op|'.'
name|'lookup'
op|'('
name|'self'
op|'.'
name|'db_name'
op|','
name|'validate'
op|'='
name|'False'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'_domain'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_domain'
op|'='
name|'self'
op|'.'
name|'_sdb'
op|'.'
name|'create_domain'
op|'('
name|'self'
op|'.'
name|'db_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_object_lister
dedent|''
dedent|''
name|'def'
name|'_object_lister'
op|'('
name|'self'
op|','
name|'cls'
op|','
name|'query_lister'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'item'
name|'in'
name|'query_lister'
op|':'
newline|'\n'
indent|'            '
name|'obj'
op|'='
name|'self'
op|'.'
name|'get_object'
op|'('
name|'cls'
op|','
name|'item'
op|'.'
name|'name'
op|','
name|'item'
op|')'
newline|'\n'
name|'if'
name|'obj'
op|':'
newline|'\n'
indent|'                '
name|'yield'
name|'obj'
newline|'\n'
nl|'\n'
DECL|member|encode_value
dedent|''
dedent|''
dedent|''
name|'def'
name|'encode_value'
op|'('
name|'self'
op|','
name|'prop'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'value'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'prop'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'str'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'converter'
op|'.'
name|'encode_prop'
op|'('
name|'prop'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|decode_value
dedent|''
name|'def'
name|'decode_value'
op|'('
name|'self'
op|','
name|'prop'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'converter'
op|'.'
name|'decode_prop'
op|'('
name|'prop'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_s3_connection
dedent|''
name|'def'
name|'get_s3_connection'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'s3'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'s3'
op|'='
name|'boto'
op|'.'
name|'connect_s3'
op|'('
name|'self'
op|'.'
name|'db_user'
op|','
name|'self'
op|'.'
name|'db_passwd'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'s3'
newline|'\n'
nl|'\n'
DECL|member|get_blob_bucket
dedent|''
name|'def'
name|'get_blob_bucket'
op|'('
name|'self'
op|','
name|'bucket_name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'s3'
op|'='
name|'self'
op|'.'
name|'get_s3_connection'
op|'('
op|')'
newline|'\n'
name|'bucket_name'
op|'='
string|'"%s-%s"'
op|'%'
op|'('
name|'s3'
op|'.'
name|'aws_access_key_id'
op|','
name|'self'
op|'.'
name|'domain'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'bucket_name'
op|'='
name|'bucket_name'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'bucket'
op|'='
name|'s3'
op|'.'
name|'get_bucket'
op|'('
name|'bucket_name'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'bucket'
op|'='
name|'s3'
op|'.'
name|'create_bucket'
op|'('
name|'bucket_name'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'bucket'
newline|'\n'
nl|'\n'
DECL|member|load_object
dedent|''
name|'def'
name|'load_object'
op|'('
name|'self'
op|','
name|'obj'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'obj'
op|'.'
name|'_loaded'
op|':'
newline|'\n'
indent|'            '
name|'a'
op|'='
name|'self'
op|'.'
name|'domain'
op|'.'
name|'get_attributes'
op|'('
name|'obj'
op|'.'
name|'id'
op|','
name|'consistent_read'
op|'='
name|'self'
op|'.'
name|'consistent'
op|')'
newline|'\n'
name|'if'
name|'a'
op|'.'
name|'has_key'
op|'('
string|"'__type__'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'prop'
name|'in'
name|'obj'
op|'.'
name|'properties'
op|'('
name|'hidden'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'a'
op|'.'
name|'has_key'
op|'('
name|'prop'
op|'.'
name|'name'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'value'
op|'='
name|'self'
op|'.'
name|'decode_value'
op|'('
name|'prop'
op|','
name|'a'
op|'['
name|'prop'
op|'.'
name|'name'
op|']'
op|')'
newline|'\n'
name|'value'
op|'='
name|'prop'
op|'.'
name|'make_value_from_datastore'
op|'('
name|'value'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                            '
name|'setattr'
op|'('
name|'obj'
op|','
name|'prop'
op|'.'
name|'name'
op|','
name|'value'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'e'
op|':'
newline|'\n'
indent|'                            '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'exception'
op|'('
name|'e'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'obj'
op|'.'
name|'_loaded'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|get_object
dedent|''
dedent|''
name|'def'
name|'get_object'
op|'('
name|'self'
op|','
name|'cls'
op|','
name|'id'
op|','
name|'a'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'obj'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'not'
name|'a'
op|':'
newline|'\n'
indent|'            '
name|'a'
op|'='
name|'self'
op|'.'
name|'domain'
op|'.'
name|'get_attributes'
op|'('
name|'id'
op|','
name|'consistent_read'
op|'='
name|'self'
op|'.'
name|'consistent'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'a'
op|'.'
name|'has_key'
op|'('
string|"'__type__'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'cls'
name|'or'
name|'a'
op|'['
string|"'__type__'"
op|']'
op|'!='
name|'cls'
op|'.'
name|'__name__'
op|':'
newline|'\n'
indent|'                '
name|'cls'
op|'='
name|'find_class'
op|'('
name|'a'
op|'['
string|"'__module__'"
op|']'
op|','
name|'a'
op|'['
string|"'__type__'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'cls'
op|':'
newline|'\n'
indent|'                '
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'prop'
name|'in'
name|'cls'
op|'.'
name|'properties'
op|'('
name|'hidden'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'a'
op|'.'
name|'has_key'
op|'('
name|'prop'
op|'.'
name|'name'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'value'
op|'='
name|'self'
op|'.'
name|'decode_value'
op|'('
name|'prop'
op|','
name|'a'
op|'['
name|'prop'
op|'.'
name|'name'
op|']'
op|')'
newline|'\n'
name|'value'
op|'='
name|'prop'
op|'.'
name|'make_value_from_datastore'
op|'('
name|'value'
op|')'
newline|'\n'
name|'params'
op|'['
name|'prop'
op|'.'
name|'name'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
dedent|''
name|'obj'
op|'='
name|'cls'
op|'('
name|'id'
op|','
op|'**'
name|'params'
op|')'
newline|'\n'
name|'obj'
op|'.'
name|'_loaded'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'s'
op|'='
string|"'(%s) class %s.%s not found'"
op|'%'
op|'('
name|'id'
op|','
name|'a'
op|'['
string|"'__module__'"
op|']'
op|','
name|'a'
op|'['
string|"'__type__'"
op|']'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'info'
op|'('
string|"'sdbmanager: %s'"
op|'%'
name|'s'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'obj'
newline|'\n'
nl|'\n'
DECL|member|get_object_from_id
dedent|''
name|'def'
name|'get_object_from_id'
op|'('
name|'self'
op|','
name|'id'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'get_object'
op|'('
name|'None'
op|','
name|'id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|query
dedent|''
name|'def'
name|'query'
op|'('
name|'self'
op|','
name|'query'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'query_str'
op|'='
string|'"select * from `%s` %s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'domain'
op|'.'
name|'name'
op|','
name|'self'
op|'.'
name|'_build_filter_part'
op|'('
name|'query'
op|'.'
name|'model_class'
op|','
name|'query'
op|'.'
name|'filters'
op|','
name|'query'
op|'.'
name|'sort_by'
op|')'
op|')'
newline|'\n'
name|'if'
name|'query'
op|'.'
name|'limit'
op|':'
newline|'\n'
indent|'            '
name|'query_str'
op|'+='
string|'" limit %s"'
op|'%'
name|'query'
op|'.'
name|'limit'
newline|'\n'
dedent|''
name|'rs'
op|'='
name|'self'
op|'.'
name|'domain'
op|'.'
name|'select'
op|'('
name|'query_str'
op|','
name|'max_items'
op|'='
name|'query'
op|'.'
name|'limit'
op|','
name|'next_token'
op|'='
name|'query'
op|'.'
name|'next_token'
op|')'
newline|'\n'
name|'query'
op|'.'
name|'rs'
op|'='
name|'rs'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_object_lister'
op|'('
name|'query'
op|'.'
name|'model_class'
op|','
name|'rs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|count
dedent|''
name|'def'
name|'count'
op|'('
name|'self'
op|','
name|'cls'
op|','
name|'filters'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get the number of results that would\n        be returned in this query\n        """'
newline|'\n'
name|'query'
op|'='
string|'"select count(*) from `%s` %s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'domain'
op|'.'
name|'name'
op|','
name|'self'
op|'.'
name|'_build_filter_part'
op|'('
name|'cls'
op|','
name|'filters'
op|')'
op|')'
newline|'\n'
name|'count'
op|'='
name|'int'
op|'('
name|'self'
op|'.'
name|'domain'
op|'.'
name|'select'
op|'('
name|'query'
op|')'
op|'.'
name|'next'
op|'('
op|')'
op|'['
string|'"Count"'
op|']'
op|')'
newline|'\n'
name|'return'
name|'count'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_build_filter
dedent|''
name|'def'
name|'_build_filter'
op|'('
name|'self'
op|','
name|'property'
op|','
name|'name'
op|','
name|'op'
op|','
name|'val'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'val'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'op'
name|'in'
op|'('
string|"'is'"
op|','
string|"'='"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|'"`%s` is null"'
op|'%'
name|'name'
newline|'\n'
dedent|''
name|'elif'
name|'op'
name|'in'
op|'('
string|"'is not'"
op|','
string|"'!='"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|'"`%s` is not null"'
op|'%'
name|'name'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'val'
op|'='
string|'""'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'property'
op|'.'
name|'__class__'
op|'=='
name|'ListProperty'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'op'
name|'in'
op|'('
string|'"is"'
op|','
string|'"="'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'op'
op|'='
string|'"like"'
newline|'\n'
dedent|''
name|'elif'
name|'op'
name|'in'
op|'('
string|'"!="'
op|','
string|'"not"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'op'
op|'='
string|'"not like"'
newline|'\n'
dedent|''
name|'if'
name|'not'
op|'('
name|'op'
op|'=='
string|'"like"'
name|'and'
name|'val'
op|'.'
name|'startswith'
op|'('
string|'"%"'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'val'
op|'='
string|'"%%:%s"'
op|'%'
name|'val'
newline|'\n'
dedent|''
dedent|''
name|'return'
string|'"`%s` %s \'%s\'"'
op|'%'
op|'('
name|'name'
op|','
name|'op'
op|','
name|'val'
op|'.'
name|'replace'
op|'('
string|'"\'"'
op|','
string|'"\'\'"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_build_filter_part
dedent|''
name|'def'
name|'_build_filter_part'
op|'('
name|'self'
op|','
name|'cls'
op|','
name|'filters'
op|','
name|'order_by'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Build the filter part\n        """'
newline|'\n'
name|'import'
name|'types'
newline|'\n'
name|'query_parts'
op|'='
op|'['
op|']'
newline|'\n'
name|'order_by_filtered'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'order_by'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'order_by'
op|'['
number|'0'
op|']'
op|'=='
string|'"-"'
op|':'
newline|'\n'
indent|'                '
name|'order_by_method'
op|'='
string|'"desc"'
op|';'
newline|'\n'
name|'order_by'
op|'='
name|'order_by'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'order_by_method'
op|'='
string|'"asc"'
op|';'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'filter'
name|'in'
name|'filters'
op|':'
newline|'\n'
indent|'            '
name|'filter_parts'
op|'='
op|'['
op|']'
newline|'\n'
name|'filter_props'
op|'='
name|'filter'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'type'
op|'('
name|'filter_props'
op|')'
op|'!='
name|'list'
op|':'
newline|'\n'
indent|'                '
name|'filter_props'
op|'='
op|'['
name|'filter_props'
op|']'
newline|'\n'
dedent|''
name|'for'
name|'filter_prop'
name|'in'
name|'filter_props'
op|':'
newline|'\n'
indent|'                '
op|'('
name|'name'
op|','
name|'op'
op|')'
op|'='
name|'filter_prop'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'split'
op|'('
string|'" "'
op|','
number|'1'
op|')'
newline|'\n'
name|'value'
op|'='
name|'filter'
op|'['
number|'1'
op|']'
newline|'\n'
name|'property'
op|'='
name|'cls'
op|'.'
name|'find_property'
op|'('
name|'name'
op|')'
newline|'\n'
name|'if'
name|'name'
op|'=='
name|'order_by'
op|':'
newline|'\n'
indent|'                    '
name|'order_by_filtered'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'if'
name|'types'
op|'.'
name|'TypeType'
op|'('
name|'value'
op|')'
op|'=='
name|'types'
op|'.'
name|'ListType'
op|':'
newline|'\n'
indent|'                    '
name|'filter_parts_sub'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'val'
name|'in'
name|'value'
op|':'
newline|'\n'
indent|'                        '
name|'val'
op|'='
name|'self'
op|'.'
name|'encode_value'
op|'('
name|'property'
op|','
name|'val'
op|')'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'val'
op|','
name|'list'
op|')'
op|':'
newline|'\n'
indent|'                            '
name|'for'
name|'v'
name|'in'
name|'val'
op|':'
newline|'\n'
indent|'                                '
name|'filter_parts_sub'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'_build_filter'
op|'('
name|'property'
op|','
name|'name'
op|','
name|'op'
op|','
name|'v'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                            '
name|'filter_parts_sub'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'_build_filter'
op|'('
name|'property'
op|','
name|'name'
op|','
name|'op'
op|','
name|'val'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'filter_parts'
op|'.'
name|'append'
op|'('
string|'"(%s)"'
op|'%'
op|'('
string|'" or "'
op|'.'
name|'join'
op|'('
name|'filter_parts_sub'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'val'
op|'='
name|'self'
op|'.'
name|'encode_value'
op|'('
name|'property'
op|','
name|'value'
op|')'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'val'
op|','
name|'list'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'for'
name|'v'
name|'in'
name|'val'
op|':'
newline|'\n'
indent|'                            '
name|'filter_parts'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'_build_filter'
op|'('
name|'property'
op|','
name|'name'
op|','
name|'op'
op|','
name|'v'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'filter_parts'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'_build_filter'
op|'('
name|'property'
op|','
name|'name'
op|','
name|'op'
op|','
name|'val'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'query_parts'
op|'.'
name|'append'
op|'('
string|'"(%s)"'
op|'%'
op|'('
string|'" or "'
op|'.'
name|'join'
op|'('
name|'filter_parts'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'type_query'
op|'='
string|'"(`__type__` = \'%s\'"'
op|'%'
name|'cls'
op|'.'
name|'__name__'
newline|'\n'
name|'for'
name|'subclass'
name|'in'
name|'self'
op|'.'
name|'_get_all_decendents'
op|'('
name|'cls'
op|')'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'type_query'
op|'+='
string|'" or `__type__` = \'%s\'"'
op|'%'
name|'subclass'
newline|'\n'
dedent|''
name|'type_query'
op|'+='
string|'")"'
newline|'\n'
name|'query_parts'
op|'.'
name|'append'
op|'('
name|'type_query'
op|')'
newline|'\n'
nl|'\n'
name|'order_by_query'
op|'='
string|'""'
newline|'\n'
name|'if'
name|'order_by'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'order_by_filtered'
op|':'
newline|'\n'
indent|'                '
name|'query_parts'
op|'.'
name|'append'
op|'('
string|'"`%s` like \'%%\'"'
op|'%'
name|'order_by'
op|')'
newline|'\n'
dedent|''
name|'order_by_query'
op|'='
string|'" order by `%s` %s"'
op|'%'
op|'('
name|'order_by'
op|','
name|'order_by_method'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'query_parts'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|'"where %s %s"'
op|'%'
op|'('
string|'" and "'
op|'.'
name|'join'
op|'('
name|'query_parts'
op|')'
op|','
name|'order_by_query'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|'""'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|_get_all_decendents
dedent|''
dedent|''
name|'def'
name|'_get_all_decendents'
op|'('
name|'self'
op|','
name|'cls'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Get all decendents for a given class"""'
newline|'\n'
name|'decendents'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'sc'
name|'in'
name|'cls'
op|'.'
name|'__sub_classes__'
op|':'
newline|'\n'
indent|'            '
name|'decendents'
op|'['
name|'sc'
op|'.'
name|'__name__'
op|']'
op|'='
name|'sc'
newline|'\n'
name|'decendents'
op|'.'
name|'update'
op|'('
name|'self'
op|'.'
name|'_get_all_decendents'
op|'('
name|'sc'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'decendents'
newline|'\n'
nl|'\n'
DECL|member|query_gql
dedent|''
name|'def'
name|'query_gql'
op|'('
name|'self'
op|','
name|'query_string'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwds'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'NotImplementedError'
op|','
string|'"GQL queries not supported in SimpleDB"'
newline|'\n'
nl|'\n'
DECL|member|save_object
dedent|''
name|'def'
name|'save_object'
op|'('
name|'self'
op|','
name|'obj'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'obj'
op|'.'
name|'id'
op|':'
newline|'\n'
indent|'            '
name|'obj'
op|'.'
name|'id'
op|'='
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'attrs'
op|'='
op|'{'
string|"'__type__'"
op|':'
name|'obj'
op|'.'
name|'__class__'
op|'.'
name|'__name__'
op|','
nl|'\n'
string|"'__module__'"
op|':'
name|'obj'
op|'.'
name|'__class__'
op|'.'
name|'__module__'
op|','
nl|'\n'
string|"'__lineage__'"
op|':'
name|'obj'
op|'.'
name|'get_lineage'
op|'('
op|')'
op|'}'
newline|'\n'
name|'for'
name|'property'
name|'in'
name|'obj'
op|'.'
name|'properties'
op|'('
name|'hidden'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'value'
op|'='
name|'property'
op|'.'
name|'get_value_for_datastore'
op|'('
name|'obj'
op|')'
newline|'\n'
name|'if'
name|'value'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'value'
op|'='
name|'self'
op|'.'
name|'encode_value'
op|'('
name|'property'
op|','
name|'value'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'value'
op|'=='
op|'['
op|']'
op|':'
newline|'\n'
indent|'                '
name|'value'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'attrs'
op|'['
name|'property'
op|'.'
name|'name'
op|']'
op|'='
name|'value'
newline|'\n'
name|'if'
name|'property'
op|'.'
name|'unique'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'args'
op|'='
op|'{'
name|'property'
op|'.'
name|'name'
op|':'
name|'value'
op|'}'
newline|'\n'
name|'obj2'
op|'='
name|'obj'
op|'.'
name|'find'
op|'('
op|'**'
name|'args'
op|')'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'if'
name|'obj2'
op|'.'
name|'id'
op|'!='
name|'obj'
op|'.'
name|'id'
op|':'
newline|'\n'
indent|'                        '
name|'raise'
name|'SDBPersistenceError'
op|'('
string|'"Error: %s must be unique!"'
op|'%'
name|'property'
op|'.'
name|'name'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|'('
name|'StopIteration'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'self'
op|'.'
name|'domain'
op|'.'
name|'put_attributes'
op|'('
name|'obj'
op|'.'
name|'id'
op|','
name|'attrs'
op|','
name|'replace'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_object
dedent|''
name|'def'
name|'delete_object'
op|'('
name|'self'
op|','
name|'obj'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'domain'
op|'.'
name|'delete_attributes'
op|'('
name|'obj'
op|'.'
name|'id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|set_property
dedent|''
name|'def'
name|'set_property'
op|'('
name|'self'
op|','
name|'prop'
op|','
name|'obj'
op|','
name|'name'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'value'
op|'='
name|'prop'
op|'.'
name|'get_value_for_datastore'
op|'('
name|'obj'
op|')'
newline|'\n'
name|'value'
op|'='
name|'self'
op|'.'
name|'encode_value'
op|'('
name|'prop'
op|','
name|'value'
op|')'
newline|'\n'
name|'if'
name|'prop'
op|'.'
name|'unique'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'args'
op|'='
op|'{'
name|'prop'
op|'.'
name|'name'
op|':'
name|'value'
op|'}'
newline|'\n'
name|'obj2'
op|'='
name|'obj'
op|'.'
name|'find'
op|'('
op|'**'
name|'args'
op|')'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'if'
name|'obj2'
op|'.'
name|'id'
op|'!='
name|'obj'
op|'.'
name|'id'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'SDBPersistenceError'
op|'('
string|'"Error: %s must be unique!"'
op|'%'
name|'prop'
op|'.'
name|'name'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|'('
name|'StopIteration'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'domain'
op|'.'
name|'put_attributes'
op|'('
name|'obj'
op|'.'
name|'id'
op|','
op|'{'
name|'name'
op|':'
name|'value'
op|'}'
op|','
name|'replace'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_property
dedent|''
name|'def'
name|'get_property'
op|'('
name|'self'
op|','
name|'prop'
op|','
name|'obj'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'a'
op|'='
name|'self'
op|'.'
name|'domain'
op|'.'
name|'get_attributes'
op|'('
name|'obj'
op|'.'
name|'id'
op|','
name|'consistent_read'
op|'='
name|'self'
op|'.'
name|'consistent'
op|')'
newline|'\n'
nl|'\n'
comment|'# try to get the attribute value from SDB'
nl|'\n'
name|'if'
name|'name'
name|'in'
name|'a'
op|':'
newline|'\n'
indent|'            '
name|'value'
op|'='
name|'self'
op|'.'
name|'decode_value'
op|'('
name|'prop'
op|','
name|'a'
op|'['
name|'name'
op|']'
op|')'
newline|'\n'
name|'value'
op|'='
name|'prop'
op|'.'
name|'make_value_from_datastore'
op|'('
name|'value'
op|')'
newline|'\n'
name|'setattr'
op|'('
name|'obj'
op|','
name|'prop'
op|'.'
name|'name'
op|','
name|'value'
op|')'
newline|'\n'
name|'return'
name|'value'
newline|'\n'
dedent|''
name|'raise'
name|'AttributeError'
op|','
string|"'%s not found'"
op|'%'
name|'name'
newline|'\n'
nl|'\n'
DECL|member|set_key_value
dedent|''
name|'def'
name|'set_key_value'
op|'('
name|'self'
op|','
name|'obj'
op|','
name|'name'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'domain'
op|'.'
name|'put_attributes'
op|'('
name|'obj'
op|'.'
name|'id'
op|','
op|'{'
name|'name'
op|':'
name|'value'
op|'}'
op|','
name|'replace'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_key_value
dedent|''
name|'def'
name|'delete_key_value'
op|'('
name|'self'
op|','
name|'obj'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'domain'
op|'.'
name|'delete_attributes'
op|'('
name|'obj'
op|'.'
name|'id'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_key_value
dedent|''
name|'def'
name|'get_key_value'
op|'('
name|'self'
op|','
name|'obj'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'a'
op|'='
name|'self'
op|'.'
name|'domain'
op|'.'
name|'get_attributes'
op|'('
name|'obj'
op|'.'
name|'id'
op|','
name|'name'
op|','
name|'consistent_read'
op|'='
name|'self'
op|'.'
name|'consistent'
op|')'
newline|'\n'
name|'if'
name|'a'
op|'.'
name|'has_key'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'a'
op|'['
name|'name'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|get_raw_item
dedent|''
dedent|''
name|'def'
name|'get_raw_item'
op|'('
name|'self'
op|','
name|'obj'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'domain'
op|'.'
name|'get_item'
op|'('
name|'obj'
op|'.'
name|'id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
