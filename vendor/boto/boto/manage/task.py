begin_unit
comment|'# Copyright (c) 2006-2009 Mitch Garnaat http://garnaat.org/'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Permission is hereby granted, free of charge, to any person obtaining a'
nl|'\n'
comment|'# copy of this software and associated documentation files (the'
nl|'\n'
comment|'# "Software"), to deal in the Software without restriction, including'
nl|'\n'
comment|'# without limitation the rights to use, copy, modify, merge, publish, dis-'
nl|'\n'
comment|'# tribute, sublicense, and/or sell copies of the Software, and to permit'
nl|'\n'
comment|'# persons to whom the Software is furnished to do so, subject to the fol-'
nl|'\n'
comment|'# lowing conditions:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# The above copyright notice and this permission notice shall be included'
nl|'\n'
comment|'# in all copies or substantial portions of the Software.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS'
nl|'\n'
comment|'# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABIL-'
nl|'\n'
comment|'# ITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT'
nl|'\n'
comment|'# SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, '
nl|'\n'
comment|'# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,'
nl|'\n'
comment|'# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS'
nl|'\n'
comment|'# IN THE SOFTWARE.'
nl|'\n'
comment|'#'
nl|'\n'
nl|'\n'
name|'import'
name|'boto'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'sdb'
op|'.'
name|'db'
op|'.'
name|'property'
name|'import'
name|'StringProperty'
op|','
name|'DateTimeProperty'
op|','
name|'IntegerProperty'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'sdb'
op|'.'
name|'db'
op|'.'
name|'model'
name|'import'
name|'Model'
newline|'\n'
name|'import'
name|'datetime'
op|','
name|'subprocess'
op|','
name|'StringIO'
op|','
name|'time'
newline|'\n'
nl|'\n'
DECL|function|check_hour
name|'def'
name|'check_hour'
op|'('
name|'val'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'val'
op|'=='
string|"'*'"
op|':'
newline|'\n'
indent|'        '
name|'return'
newline|'\n'
dedent|''
name|'if'
name|'int'
op|'('
name|'val'
op|')'
op|'<'
number|'0'
name|'or'
name|'int'
op|'('
name|'val'
op|')'
op|'>'
number|'23'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
newline|'\n'
nl|'\n'
DECL|class|Task
dedent|''
dedent|''
name|'class'
name|'Task'
op|'('
name|'Model'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
string|'"""\n    A scheduled, repeating task that can be executed by any participating servers.\n    The scheduling is similar to cron jobs.  Each task has an hour attribute.\n    The allowable values for hour are [0-23|*].\n\n    To keep the operation reasonably efficient and not cause excessive polling,\n    the minimum granularity of a Task is hourly.  Some examples:\n    \n         hour=\'*\' - the task would be executed each hour\n         hour=\'3\' - the task would be executed at 3AM GMT each day.\n         \n    """'
newline|'\n'
DECL|variable|name
name|'name'
op|'='
name|'StringProperty'
op|'('
op|')'
newline|'\n'
DECL|variable|hour
name|'hour'
op|'='
name|'StringProperty'
op|'('
name|'required'
op|'='
name|'True'
op|','
name|'validator'
op|'='
name|'check_hour'
op|','
name|'default'
op|'='
string|"'*'"
op|')'
newline|'\n'
DECL|variable|command
name|'command'
op|'='
name|'StringProperty'
op|'('
name|'required'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|last_executed
name|'last_executed'
op|'='
name|'DateTimeProperty'
op|'('
op|')'
newline|'\n'
DECL|variable|last_status
name|'last_status'
op|'='
name|'IntegerProperty'
op|'('
op|')'
newline|'\n'
DECL|variable|last_output
name|'last_output'
op|'='
name|'StringProperty'
op|'('
op|')'
newline|'\n'
DECL|variable|message_id
name|'message_id'
op|'='
name|'StringProperty'
op|'('
op|')'
newline|'\n'
nl|'\n'
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|start_all
name|'def'
name|'start_all'
op|'('
name|'cls'
op|','
name|'queue_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'task'
name|'in'
name|'cls'
op|'.'
name|'all'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'task'
op|'.'
name|'start'
op|'('
name|'queue_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
dedent|''
dedent|''
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'id'
op|'='
name|'None'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'Model'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'id'
op|','
op|'**'
name|'kw'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'hourly'
op|'='
name|'self'
op|'.'
name|'hour'
op|'=='
string|"'*'"
newline|'\n'
name|'self'
op|'.'
name|'daily'
op|'='
name|'self'
op|'.'
name|'hour'
op|'!='
string|"'*'"
newline|'\n'
name|'self'
op|'.'
name|'now'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'.'
name|'utcnow'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|check
dedent|''
name|'def'
name|'check'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Determine how long until the next scheduled time for a Task.\n        Returns the number of seconds until the next scheduled time or zero\n        if the task needs to be run immediately.\n        If it\'s an hourly task and it\'s never been run, run it now.\n        If it\'s a daily task and it\'s never been run and the hour is right, run it now.\n        """'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'info'
op|'('
string|"'checking Task[%s]-now=%s, last=%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'name'
op|','
name|'self'
op|'.'
name|'now'
op|','
name|'self'
op|'.'
name|'last_executed'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'hourly'
name|'and'
name|'not'
name|'self'
op|'.'
name|'last_executed'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'daily'
name|'and'
name|'not'
name|'self'
op|'.'
name|'last_executed'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'int'
op|'('
name|'self'
op|'.'
name|'hour'
op|')'
op|'=='
name|'self'
op|'.'
name|'now'
op|'.'
name|'hour'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'0'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'max'
op|'('
op|'('
name|'int'
op|'('
name|'self'
op|'.'
name|'hour'
op|')'
op|'-'
name|'self'
op|'.'
name|'now'
op|'.'
name|'hour'
op|')'
op|','
op|'('
name|'self'
op|'.'
name|'now'
op|'.'
name|'hour'
op|'-'
name|'int'
op|'('
name|'self'
op|'.'
name|'hour'
op|')'
op|')'
op|')'
op|'*'
number|'60'
op|'*'
number|'60'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'delta'
op|'='
name|'self'
op|'.'
name|'now'
op|'-'
name|'self'
op|'.'
name|'last_executed'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'hourly'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'delta'
op|'.'
name|'seconds'
op|'>='
number|'60'
op|'*'
number|'60'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'0'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
number|'60'
op|'*'
number|'60'
op|'-'
name|'delta'
op|'.'
name|'seconds'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'int'
op|'('
name|'self'
op|'.'
name|'hour'
op|')'
op|'=='
name|'self'
op|'.'
name|'now'
op|'.'
name|'hour'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'delta'
op|'.'
name|'days'
op|'>='
number|'1'
op|':'
newline|'\n'
indent|'                    '
name|'return'
number|'0'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'return'
number|'82800'
comment|'# 23 hours, just to be safe'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'max'
op|'('
op|'('
name|'int'
op|'('
name|'self'
op|'.'
name|'hour'
op|')'
op|'-'
name|'self'
op|'.'
name|'now'
op|'.'
name|'hour'
op|')'
op|','
op|'('
name|'self'
op|'.'
name|'now'
op|'.'
name|'hour'
op|'-'
name|'int'
op|'('
name|'self'
op|'.'
name|'hour'
op|')'
op|')'
op|')'
op|'*'
number|'60'
op|'*'
number|'60'
newline|'\n'
nl|'\n'
DECL|member|_run
dedent|''
dedent|''
dedent|''
name|'def'
name|'_run'
op|'('
name|'self'
op|','
name|'msg'
op|','
name|'vtimeout'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'info'
op|'('
string|"'Task[%s] - running:%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'name'
op|','
name|'self'
op|'.'
name|'command'
op|')'
op|')'
newline|'\n'
name|'log_fp'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
op|')'
newline|'\n'
name|'process'
op|'='
name|'subprocess'
op|'.'
name|'Popen'
op|'('
name|'self'
op|'.'
name|'command'
op|','
name|'shell'
op|'='
name|'True'
op|','
name|'stdin'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
op|','
nl|'\n'
name|'stdout'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
op|','
name|'stderr'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
op|')'
newline|'\n'
name|'nsecs'
op|'='
number|'5'
newline|'\n'
name|'current_timeout'
op|'='
name|'vtimeout'
newline|'\n'
name|'while'
name|'process'
op|'.'
name|'poll'
op|'('
op|')'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'info'
op|'('
string|"'nsecs=%s, timeout=%s'"
op|'%'
op|'('
name|'nsecs'
op|','
name|'current_timeout'
op|')'
op|')'
newline|'\n'
name|'if'
name|'nsecs'
op|'>='
name|'current_timeout'
op|':'
newline|'\n'
indent|'                '
name|'current_timeout'
op|'+='
name|'vtimeout'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'info'
op|'('
string|"'Task[%s] - setting timeout to %d seconds'"
op|'%'
op|'('
name|'self'
op|'.'
name|'name'
op|','
name|'current_timeout'
op|')'
op|')'
newline|'\n'
name|'if'
name|'msg'
op|':'
newline|'\n'
indent|'                    '
name|'msg'
op|'.'
name|'change_visibility'
op|'('
name|'current_timeout'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'time'
op|'.'
name|'sleep'
op|'('
number|'5'
op|')'
newline|'\n'
name|'nsecs'
op|'+='
number|'5'
newline|'\n'
dedent|''
name|'t'
op|'='
name|'process'
op|'.'
name|'communicate'
op|'('
op|')'
newline|'\n'
name|'log_fp'
op|'.'
name|'write'
op|'('
name|'t'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'log_fp'
op|'.'
name|'write'
op|'('
name|'t'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'info'
op|'('
string|"'Task[%s] - output: %s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'name'
op|','
name|'log_fp'
op|'.'
name|'getvalue'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'last_executed'
op|'='
name|'self'
op|'.'
name|'now'
newline|'\n'
name|'self'
op|'.'
name|'last_status'
op|'='
name|'process'
op|'.'
name|'returncode'
newline|'\n'
name|'self'
op|'.'
name|'last_output'
op|'='
name|'log_fp'
op|'.'
name|'getvalue'
op|'('
op|')'
op|'['
number|'0'
op|':'
number|'1023'
op|']'
newline|'\n'
nl|'\n'
DECL|member|run
dedent|''
name|'def'
name|'run'
op|'('
name|'self'
op|','
name|'msg'
op|','
name|'vtimeout'
op|'='
number|'60'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'delay'
op|'='
name|'self'
op|'.'
name|'check'
op|'('
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'info'
op|'('
string|"'Task[%s] - delay=%s seconds'"
op|'%'
op|'('
name|'self'
op|'.'
name|'name'
op|','
name|'delay'
op|')'
op|')'
newline|'\n'
name|'if'
name|'delay'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_run'
op|'('
name|'msg'
op|','
name|'vtimeout'
op|')'
newline|'\n'
name|'queue'
op|'='
name|'msg'
op|'.'
name|'queue'
newline|'\n'
name|'new_msg'
op|'='
name|'queue'
op|'.'
name|'new_message'
op|'('
name|'self'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'new_msg'
op|'='
name|'queue'
op|'.'
name|'write'
op|'('
name|'new_msg'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'message_id'
op|'='
name|'new_msg'
op|'.'
name|'id'
newline|'\n'
name|'self'
op|'.'
name|'put'
op|'('
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'info'
op|'('
string|"'Task[%s] - new message id=%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'name'
op|','
name|'new_msg'
op|'.'
name|'id'
op|')'
op|')'
newline|'\n'
name|'msg'
op|'.'
name|'delete'
op|'('
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'info'
op|'('
string|"'Task[%s] - deleted message %s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'name'
op|','
name|'msg'
op|'.'
name|'id'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'info'
op|'('
string|"'new_vtimeout: %d'"
op|'%'
name|'delay'
op|')'
newline|'\n'
name|'msg'
op|'.'
name|'change_visibility'
op|'('
name|'delay'
op|')'
newline|'\n'
nl|'\n'
DECL|member|start
dedent|''
dedent|''
name|'def'
name|'start'
op|'('
name|'self'
op|','
name|'queue_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'info'
op|'('
string|"'Task[%s] - starting with queue: %s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'name'
op|','
name|'queue_name'
op|')'
op|')'
newline|'\n'
name|'queue'
op|'='
name|'boto'
op|'.'
name|'lookup'
op|'('
string|"'sqs'"
op|','
name|'queue_name'
op|')'
newline|'\n'
name|'msg'
op|'='
name|'queue'
op|'.'
name|'new_message'
op|'('
name|'self'
op|'.'
name|'id'
op|')'
newline|'\n'
name|'msg'
op|'='
name|'queue'
op|'.'
name|'write'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'message_id'
op|'='
name|'msg'
op|'.'
name|'id'
newline|'\n'
name|'self'
op|'.'
name|'put'
op|'('
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'info'
op|'('
string|"'Task[%s] - start successful'"
op|'%'
name|'self'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|class|TaskPoller
dedent|''
dedent|''
name|'class'
name|'TaskPoller'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'queue_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sqs'
op|'='
name|'boto'
op|'.'
name|'connect_sqs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'queue'
op|'='
name|'self'
op|'.'
name|'sqs'
op|'.'
name|'lookup'
op|'('
name|'queue_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|poll
dedent|''
name|'def'
name|'poll'
op|'('
name|'self'
op|','
name|'wait'
op|'='
number|'60'
op|','
name|'vtimeout'
op|'='
number|'60'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'while'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'='
name|'self'
op|'.'
name|'queue'
op|'.'
name|'read'
op|'('
name|'vtimeout'
op|')'
newline|'\n'
name|'if'
name|'m'
op|':'
newline|'\n'
indent|'                '
name|'task'
op|'='
name|'Task'
op|'.'
name|'get_by_id'
op|'('
name|'m'
op|'.'
name|'get_body'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'task'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'not'
name|'task'
op|'.'
name|'message_id'
name|'or'
name|'m'
op|'.'
name|'id'
op|'=='
name|'task'
op|'.'
name|'message_id'
op|':'
newline|'\n'
indent|'                        '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'info'
op|'('
string|"'Task[%s] - read message %s'"
op|'%'
op|'('
name|'task'
op|'.'
name|'name'
op|','
name|'m'
op|'.'
name|'id'
op|')'
op|')'
newline|'\n'
name|'task'
op|'.'
name|'run'
op|'('
name|'m'
op|','
name|'vtimeout'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'info'
op|'('
string|"'Task[%s] - found extraneous message, ignoring'"
op|'%'
name|'task'
op|'.'
name|'name'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'time'
op|'.'
name|'sleep'
op|'('
name|'wait'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
