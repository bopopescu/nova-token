begin_unit
comment|'# Copyright (c) 2006,2007 Mitch Garnaat http://garnaat.org/'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Permission is hereby granted, free of charge, to any person obtaining a'
nl|'\n'
comment|'# copy of this software and associated documentation files (the'
nl|'\n'
comment|'# "Software"), to deal in the Software without restriction, including'
nl|'\n'
comment|'# without limitation the rights to use, copy, modify, merge, publish, dis-'
nl|'\n'
comment|'# tribute, sublicense, and/or sell copies of the Software, and to permit'
nl|'\n'
comment|'# persons to whom the Software is furnished to do so, subject to the fol-'
nl|'\n'
comment|'# lowing conditions:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# The above copyright notice and this permission notice shall be included'
nl|'\n'
comment|'# in all copies or substantial portions of the Software.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS'
nl|'\n'
comment|'# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABIL-'
nl|'\n'
comment|'# ITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT'
nl|'\n'
comment|'# SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,'
nl|'\n'
comment|'# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,'
nl|'\n'
comment|'# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS'
nl|'\n'
comment|'# IN THE SOFTWARE.'
nl|'\n'
nl|'\n'
string|'"""\nProvides NotificationMessage and Event classes, with utility methods, for\nimplementations of the Mechanical Turk Notification API.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'hmac'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'from'
name|'hashlib'
name|'import'
name|'sha1'
name|'as'
name|'sha'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'sha'
newline|'\n'
dedent|''
name|'import'
name|'base64'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
nl|'\n'
DECL|class|NotificationMessage
name|'class'
name|'NotificationMessage'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|NOTIFICATION_WSDL
indent|'    '
name|'NOTIFICATION_WSDL'
op|'='
string|'"http://mechanicalturk.amazonaws.com/AWSMechanicalTurk/2006-05-05/AWSMechanicalTurkRequesterNotification.wsdl"'
newline|'\n'
DECL|variable|NOTIFICATION_VERSION
name|'NOTIFICATION_VERSION'
op|'='
string|"'2006-05-05'"
newline|'\n'
nl|'\n'
DECL|variable|SERVICE_NAME
name|'SERVICE_NAME'
op|'='
string|'"AWSMechanicalTurkRequesterNotification"'
newline|'\n'
DECL|variable|OPERATION_NAME
name|'OPERATION_NAME'
op|'='
string|'"Notify"'
newline|'\n'
nl|'\n'
DECL|variable|EVENT_PATTERN
name|'EVENT_PATTERN'
op|'='
string|'r"Event\\.(?P<n>\\d+)\\.(?P<param>\\w+)"'
newline|'\n'
DECL|variable|EVENT_RE
name|'EVENT_RE'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
name|'EVENT_PATTERN'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'d'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Constructor; expects parameter d to be a dict of string parameters from a REST transport notification message\n        """'
newline|'\n'
name|'self'
op|'.'
name|'signature'
op|'='
name|'d'
op|'['
string|"'Signature'"
op|']'
comment|'# vH6ZbE0NhkF/hfNyxz2OgmzXYKs='
newline|'\n'
name|'self'
op|'.'
name|'timestamp'
op|'='
name|'d'
op|'['
string|"'Timestamp'"
op|']'
comment|'# 2006-05-23T23:22:30Z'
newline|'\n'
name|'self'
op|'.'
name|'version'
op|'='
name|'d'
op|'['
string|"'Version'"
op|']'
comment|'# 2006-05-05'
newline|'\n'
name|'assert'
name|'d'
op|'['
string|"'method'"
op|']'
op|'=='
name|'NotificationMessage'
op|'.'
name|'OPERATION_NAME'
op|','
string|'"Method should be \'%s\'"'
op|'%'
name|'NotificationMessage'
op|'.'
name|'OPERATION_NAME'
newline|'\n'
nl|'\n'
comment|'# Build Events'
nl|'\n'
name|'self'
op|'.'
name|'events'
op|'='
op|'['
op|']'
newline|'\n'
name|'events_dict'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
string|"'Event'"
name|'in'
name|'d'
op|':'
newline|'\n'
comment|"# TurboGears surprised me by 'doing the right thing' and making { 'Event': { '1': { 'EventType': ... } } } etc."
nl|'\n'
indent|'            '
name|'events_dict'
op|'='
name|'d'
op|'['
string|"'Event'"
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'k'
name|'in'
name|'d'
op|':'
newline|'\n'
indent|'                '
name|'v'
op|'='
name|'d'
op|'['
name|'k'
op|']'
newline|'\n'
name|'if'
name|'k'
op|'.'
name|'startswith'
op|'('
string|"'Event.'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'ed'
op|'='
name|'NotificationMessage'
op|'.'
name|'EVENT_RE'
op|'.'
name|'search'
op|'('
name|'k'
op|')'
op|'.'
name|'groupdict'
op|'('
op|')'
newline|'\n'
name|'n'
op|'='
name|'int'
op|'('
name|'ed'
op|'['
string|"'n'"
op|']'
op|')'
newline|'\n'
name|'param'
op|'='
name|'str'
op|'('
name|'ed'
op|'['
string|"'param'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'n'
name|'not'
name|'in'
name|'events_dict'
op|':'
newline|'\n'
indent|'                        '
name|'events_dict'
op|'['
name|'n'
op|']'
op|'='
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'events_dict'
op|'['
name|'n'
op|']'
op|'['
name|'param'
op|']'
op|'='
name|'v'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'for'
name|'n'
name|'in'
name|'events_dict'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'events'
op|'.'
name|'append'
op|'('
name|'Event'
op|'('
name|'events_dict'
op|'['
name|'n'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|verify
dedent|''
dedent|''
name|'def'
name|'verify'
op|'('
name|'self'
op|','
name|'secret_key'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Verifies the authenticity of a notification message.\n        """'
newline|'\n'
name|'verification_input'
op|'='
name|'NotificationMessage'
op|'.'
name|'SERVICE_NAME'
op|'+'
name|'NotificationMessage'
op|'.'
name|'OPERATION_NAME'
op|'+'
name|'self'
op|'.'
name|'timestamp'
newline|'\n'
name|'h'
op|'='
name|'hmac'
op|'.'
name|'new'
op|'('
name|'key'
op|'='
name|'secret_key'
op|','
name|'digestmod'
op|'='
name|'sha'
op|')'
newline|'\n'
name|'h'
op|'.'
name|'update'
op|'('
name|'verification_input'
op|')'
newline|'\n'
name|'signature_calc'
op|'='
name|'base64'
op|'.'
name|'b64encode'
op|'('
name|'h'
op|'.'
name|'digest'
op|'('
op|')'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'signature'
op|'=='
name|'signature_calc'
newline|'\n'
nl|'\n'
DECL|class|Event
dedent|''
dedent|''
name|'class'
name|'Event'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'d'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'event_type'
op|'='
name|'d'
op|'['
string|"'EventType'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'event_time_str'
op|'='
name|'d'
op|'['
string|"'EventTime'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'hit_type'
op|'='
name|'d'
op|'['
string|"'HITTypeId'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'hit_id'
op|'='
name|'d'
op|'['
string|"'HITId'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assignment_id'
op|'='
name|'d'
op|'['
string|"'AssignmentId'"
op|']'
newline|'\n'
nl|'\n'
comment|'#TODO: build self.event_time datetime from string self.event_time_str'
nl|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|'"<boto.mturk.notification.Event: %s for HIT # %s>"'
op|'%'
op|'('
name|'self'
op|'.'
name|'event_type'
op|','
name|'self'
op|'.'
name|'hit_id'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
