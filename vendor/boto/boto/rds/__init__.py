begin_unit
comment|'# Copyright (c) 2009 Mitch Garnaat http://garnaat.org/'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Permission is hereby granted, free of charge, to any person obtaining a'
nl|'\n'
comment|'# copy of this software and associated documentation files (the'
nl|'\n'
comment|'# "Software"), to deal in the Software without restriction, including'
nl|'\n'
comment|'# without limitation the rights to use, copy, modify, merge, publish, dis-'
nl|'\n'
comment|'# tribute, sublicense, and/or sell copies of the Software, and to permit'
nl|'\n'
comment|'# persons to whom the Software is furnished to do so, subject to the fol-'
nl|'\n'
comment|'# lowing conditions:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# The above copyright notice and this permission notice shall be included'
nl|'\n'
comment|'# in all copies or substantial portions of the Software.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS'
nl|'\n'
comment|'# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABIL-'
nl|'\n'
comment|'# ITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT'
nl|'\n'
comment|'# SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,'
nl|'\n'
comment|'# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,'
nl|'\n'
comment|'# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS'
nl|'\n'
comment|'# IN THE SOFTWARE.'
nl|'\n'
comment|'#'
nl|'\n'
nl|'\n'
name|'import'
name|'boto'
op|'.'
name|'utils'
newline|'\n'
name|'import'
name|'urllib'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'connection'
name|'import'
name|'AWSQueryConnection'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'rds'
op|'.'
name|'dbinstance'
name|'import'
name|'DBInstance'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'rds'
op|'.'
name|'dbsecuritygroup'
name|'import'
name|'DBSecurityGroup'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'rds'
op|'.'
name|'parametergroup'
name|'import'
name|'ParameterGroup'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'rds'
op|'.'
name|'dbsnapshot'
name|'import'
name|'DBSnapshot'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'rds'
op|'.'
name|'event'
name|'import'
name|'Event'
newline|'\n'
nl|'\n'
comment|"#boto.set_stream_logger('rds')"
nl|'\n'
nl|'\n'
DECL|class|RDSConnection
name|'class'
name|'RDSConnection'
op|'('
name|'AWSQueryConnection'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|DefaultHost
indent|'    '
name|'DefaultHost'
op|'='
string|"'rds.amazonaws.com'"
newline|'\n'
DECL|variable|APIVersion
name|'APIVersion'
op|'='
string|"'2009-10-16'"
newline|'\n'
DECL|variable|SignatureVersion
name|'SignatureVersion'
op|'='
string|"'2'"
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'aws_access_key_id'
op|'='
name|'None'
op|','
name|'aws_secret_access_key'
op|'='
name|'None'
op|','
nl|'\n'
name|'is_secure'
op|'='
name|'True'
op|','
name|'port'
op|'='
name|'None'
op|','
name|'proxy'
op|'='
name|'None'
op|','
name|'proxy_port'
op|'='
name|'None'
op|','
nl|'\n'
name|'proxy_user'
op|'='
name|'None'
op|','
name|'proxy_pass'
op|'='
name|'None'
op|','
name|'host'
op|'='
name|'DefaultHost'
op|','
name|'debug'
op|'='
number|'0'
op|','
nl|'\n'
name|'https_connection_factory'
op|'='
name|'None'
op|','
name|'path'
op|'='
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'AWSQueryConnection'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'aws_access_key_id'
op|','
name|'aws_secret_access_key'
op|','
nl|'\n'
name|'is_secure'
op|','
name|'port'
op|','
name|'proxy'
op|','
name|'proxy_port'
op|','
name|'proxy_user'
op|','
nl|'\n'
name|'proxy_pass'
op|','
name|'self'
op|'.'
name|'DefaultHost'
op|','
name|'debug'
op|','
nl|'\n'
name|'https_connection_factory'
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
comment|'# DB Instance methods'
nl|'\n'
nl|'\n'
DECL|member|get_all_dbinstances
dedent|''
name|'def'
name|'get_all_dbinstances'
op|'('
name|'self'
op|','
name|'instance_id'
op|'='
name|'None'
op|','
name|'max_records'
op|'='
name|'None'
op|','
nl|'\n'
name|'marker'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Retrieve all the DBInstances in your account.\n\n        :type instance_id: str\n        :param instance_id: DB Instance identifier.  If supplied, only information\n                            this instance will be returned.  Otherwise, info\n                            about all DB Instances will be returned.\n\n        :type max_records: int\n        :param max_records: The maximum number of records to be returned.\n                            If more results are available, a MoreToken will\n                            be returned in the response that can be used to\n                            retrieve additional records.  Default is 100.\n\n        :type marker: str\n        :param marker: The marker provided by a previous request.\n\n        :rtype: list\n        :return: A list of :class:`boto.rds.dbinstance.DBInstance`\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'instance_id'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'DBInstanceIdentifier'"
op|']'
op|'='
name|'instance_id'
newline|'\n'
dedent|''
name|'if'
name|'max_records'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'MaxRecords'"
op|']'
op|'='
name|'max_records'
newline|'\n'
dedent|''
name|'if'
name|'marker'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'Marker'"
op|']'
op|'='
name|'marker'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'get_list'
op|'('
string|"'DescribeDBInstances'"
op|','
name|'params'
op|','
op|'['
op|'('
string|"'DBInstance'"
op|','
name|'DBInstance'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_dbinstance
dedent|''
name|'def'
name|'create_dbinstance'
op|'('
name|'self'
op|','
name|'id'
op|','
name|'allocated_storage'
op|','
name|'instance_class'
op|','
nl|'\n'
name|'master_username'
op|','
name|'master_password'
op|','
name|'port'
op|'='
number|'3306'
op|','
nl|'\n'
name|'engine'
op|'='
string|"'MySQL5.1'"
op|','
name|'db_name'
op|'='
name|'None'
op|','
name|'param_group'
op|'='
name|'None'
op|','
nl|'\n'
name|'security_groups'
op|'='
name|'None'
op|','
name|'availability_zone'
op|'='
name|'None'
op|','
nl|'\n'
name|'preferred_maintenance_window'
op|'='
name|'None'
op|','
nl|'\n'
name|'backup_retention_period'
op|'='
name|'None'
op|','
nl|'\n'
name|'preferred_backup_window'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create a new DBInstance.\n\n        :type id: str\n        :param id: Unique identifier for the new instance.\n                   Must contain 1-63 alphanumeric characters.\n                   First character must be a letter.\n                   May not end with a hyphen or contain two consecutive hyphens\n\n        :type allocated_storage: int\n        :param allocated_storage: Initially allocated storage size, in GBs.\n                                  Valid values are [5-1024]\n\n        :type instance_class: str\n        :param instance_class: The compute and memory capacity of the DBInstance.\n                               Valid values are:\n                               db.m1.small | db.m1.large | db.m1.xlarge |\n                               db.m2.2xlarge | db.m2.4xlarge\n\n        :type engine: str\n        :param engine: Name of database engine. Must be MySQL5.1 for now.\n\n        :type master_username: str\n        :param master_username: Name of master user for the DBInstance.\n                                Must be 1-15 alphanumeric characters, first must be\n                                a letter.\n\n        :type master_password: str\n        :param master_password: Password of master user for the DBInstance.\n                                Must be 4-16 alphanumeric characters.\n\n        :type port: int\n        :param port: Port number on which database accepts connections.\n                     Valid values [1115-65535].  Defaults to 3306.\n\n        :type db_name: str\n        :param db_name: Name of a database to create when the DBInstance\n                        is created.  Default is to create no databases.\n\n        :type param_group: str\n        :param param_group: Name of DBParameterGroup to associate with\n                            this DBInstance.  If no groups are specified\n                            no parameter groups will be used.\n\n        :type security_groups: list of str or list of DBSecurityGroup objects\n        :param security_groups: List of names of DBSecurityGroup to authorize on\n                                this DBInstance.\n\n        :type availability_zone: str\n        :param availability_zone: Name of the availability zone to place\n                                  DBInstance into.\n\n        :type preferred_maintenance_window: str\n        :param preferred_maintenance_window: The weekly time range (in UTC) during\n                                             which maintenance can occur.\n                                             Default is Sun:05:00-Sun:09:00\n\n        :type backup_retention_period: int\n        :param backup_retention_period: The number of days for which automated\n                                        backups are retained.  Setting this to\n                                        zero disables automated backups.\n\n        :type preferred_backup_window: str\n        :param preferred_backup_window: The daily time range during which\n                                        automated backups are created (if\n                                        enabled).  Must be in h24:mi-hh24:mi\n                                        format (UTC).\n\n        :rtype: :class:`boto.rds.dbinstance.DBInstance`\n        :return: The new db instance.\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'DBInstanceIdentifier'"
op|':'
name|'id'
op|','
nl|'\n'
string|"'AllocatedStorage'"
op|':'
name|'allocated_storage'
op|','
nl|'\n'
string|"'DBInstanceClass'"
op|':'
name|'instance_class'
op|','
nl|'\n'
string|"'Engine'"
op|':'
name|'engine'
op|','
nl|'\n'
string|"'MasterUsername'"
op|':'
name|'master_username'
op|','
nl|'\n'
string|"'MasterUserPassword'"
op|':'
name|'master_password'
op|'}'
newline|'\n'
name|'if'
name|'port'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'Port'"
op|']'
op|'='
name|'port'
newline|'\n'
dedent|''
name|'if'
name|'db_name'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'DBName'"
op|']'
op|'='
name|'db_name'
newline|'\n'
dedent|''
name|'if'
name|'param_group'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'DBParameterGroup'"
op|']'
op|'='
name|'param_group'
newline|'\n'
dedent|''
name|'if'
name|'security_groups'
op|':'
newline|'\n'
indent|'            '
name|'l'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'group'
name|'in'
name|'security_groups'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'isinstance'
op|'('
name|'group'
op|','
name|'DBSecurityGroup'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'l'
op|'.'
name|'append'
op|'('
name|'group'
op|'.'
name|'name'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'l'
op|'.'
name|'append'
op|'('
name|'group'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'build_list_params'
op|'('
name|'params'
op|','
name|'l'
op|','
string|"'DBSecurityGroups.member'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'availability_zone'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'AvailabilityZone'"
op|']'
op|'='
name|'availability_zone'
newline|'\n'
dedent|''
name|'if'
name|'preferred_maintenance_window'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'PreferredMaintenanceWindow'"
op|']'
op|'='
name|'preferred_maintenance_window'
newline|'\n'
dedent|''
name|'if'
name|'backup_retention_period'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'BackupRetentionPeriod'"
op|']'
op|'='
name|'backup_retention_period'
newline|'\n'
dedent|''
name|'if'
name|'preferred_backup_window'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'PreferredBackupWindow'"
op|']'
op|'='
name|'preferred_backup_window'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'get_object'
op|'('
string|"'CreateDBInstance'"
op|','
name|'params'
op|','
name|'DBInstance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|modify_dbinstance
dedent|''
name|'def'
name|'modify_dbinstance'
op|'('
name|'self'
op|','
name|'id'
op|','
name|'param_group'
op|'='
name|'None'
op|','
name|'security_groups'
op|'='
name|'None'
op|','
nl|'\n'
name|'preferred_maintenance_window'
op|'='
name|'None'
op|','
nl|'\n'
name|'master_password'
op|'='
name|'None'
op|','
name|'allocated_storage'
op|'='
name|'None'
op|','
nl|'\n'
name|'instance_class'
op|'='
name|'None'
op|','
nl|'\n'
name|'backup_retention_period'
op|'='
name|'None'
op|','
nl|'\n'
name|'preferred_backup_window'
op|'='
name|'None'
op|','
nl|'\n'
name|'apply_immediately'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Modify an existing DBInstance.\n\n        :type id: str\n        :param id: Unique identifier for the new instance.\n\n        :type security_groups: list of str or list of DBSecurityGroup objects\n        :param security_groups: List of names of DBSecurityGroup to authorize on\n                                this DBInstance.\n\n        :type preferred_maintenance_window: str\n        :param preferred_maintenance_window: The weekly time range (in UTC) during\n                                             which maintenance can occur.\n                                             Default is Sun:05:00-Sun:09:00\n\n        :type master_password: str\n        :param master_password: Password of master user for the DBInstance.\n                                Must be 4-15 alphanumeric characters.\n\n        :type allocated_storage: int\n        :param allocated_storage: The new allocated storage size, in GBs.\n                                  Valid values are [5-1024]\n\n        :type instance_class: str\n        :param instance_class: The compute and memory capacity of the DBInstance.\n                               Changes will be applied at next maintenance\n                               window unless apply_immediately is True.\n                               Valid values are:\n                               db.m1.small | db.m1.large | db.m1.xlarge |\n                               db.m2.2xlarge | db.m2.4xlarge\n\n        :type apply_immediately: bool\n        :param apply_immediately: If true, the modifications will be applied\n                                  as soon as possible rather than waiting for\n                                  the next preferred maintenance window.\n\n        :type backup_retention_period: int\n        :param backup_retention_period: The number of days for which automated\n                                        backups are retained.  Setting this to\n                                        zero disables automated backups.\n\n        :type preferred_backup_window: str\n        :param preferred_backup_window: The daily time range during which\n                                        automated backups are created (if\n                                        enabled).  Must be in h24:mi-hh24:mi\n                                        format (UTC).\n\n        :rtype: :class:`boto.rds.dbinstance.DBInstance`\n        :return: The modified db instance.\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'DBInstanceIdentifier'"
op|':'
name|'id'
op|'}'
newline|'\n'
name|'if'
name|'param_group'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'DBParameterGroupName'"
op|']'
op|'='
name|'param_group'
newline|'\n'
dedent|''
name|'if'
name|'security_groups'
op|':'
newline|'\n'
indent|'            '
name|'l'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'group'
name|'in'
name|'security_groups'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'isinstance'
op|'('
name|'group'
op|','
name|'DBSecurityGroup'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'l'
op|'.'
name|'append'
op|'('
name|'group'
op|'.'
name|'name'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'l'
op|'.'
name|'append'
op|'('
name|'group'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'build_list_params'
op|'('
name|'params'
op|','
name|'l'
op|','
string|"'DBSecurityGroups.member'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'preferred_maintenance_window'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'PreferredMaintenanceWindow'"
op|']'
op|'='
name|'preferred_maintenance_window'
newline|'\n'
dedent|''
name|'if'
name|'master_password'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'MasterUserPassword'"
op|']'
op|'='
name|'master_password'
newline|'\n'
dedent|''
name|'if'
name|'allocated_storage'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'AllocatedStorage'"
op|']'
op|'='
name|'allocated_storage'
newline|'\n'
dedent|''
name|'if'
name|'instance_class'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'DBInstanceClass'"
op|']'
op|'='
name|'instance_class'
newline|'\n'
dedent|''
name|'if'
name|'backup_retention_period'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'BackupRetentionPeriod'"
op|']'
op|'='
name|'backup_retention_period'
newline|'\n'
dedent|''
name|'if'
name|'preferred_backup_window'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'PreferredBackupWindow'"
op|']'
op|'='
name|'preferred_backup_window'
newline|'\n'
dedent|''
name|'if'
name|'apply_immediately'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'ApplyImmediately'"
op|']'
op|'='
string|"'true'"
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'get_object'
op|'('
string|"'ModifyDBInstance'"
op|','
name|'params'
op|','
name|'DBInstance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_dbinstance
dedent|''
name|'def'
name|'delete_dbinstance'
op|'('
name|'self'
op|','
name|'id'
op|','
name|'skip_final_snapshot'
op|'='
name|'False'
op|','
nl|'\n'
name|'final_snapshot_id'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Delete an existing DBInstance.\n\n        :type id: str\n        :param id: Unique identifier for the new instance.\n\n        :type skip_final_snapshot: bool\n        :param skip_final_snapshot: This parameter determines whether a final\n                                    db snapshot is created before the instance\n                                    is deleted.  If True, no snapshot is created.\n                                    If False, a snapshot is created before\n                                    deleting the instance.\n\n        :type final_snapshot_id: str\n        :param final_snapshot_id: If a final snapshot is requested, this\n                                  is the identifier used for that snapshot.\n\n        :rtype: :class:`boto.rds.dbinstance.DBInstance`\n        :return: The deleted db instance.\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'DBInstanceIdentifier'"
op|':'
name|'id'
op|'}'
newline|'\n'
name|'if'
name|'skip_final_snapshot'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'SkipFinalSnapshot'"
op|']'
op|'='
string|"'true'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'SkipFinalSnapshot'"
op|']'
op|'='
string|"'false'"
newline|'\n'
name|'params'
op|'['
string|"'FinalDBSnapshotIdentifier'"
op|']'
op|'='
name|'final_snapshot_id'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'get_object'
op|'('
string|"'DeleteDBInstance'"
op|','
name|'params'
op|','
name|'DBInstance'
op|')'
newline|'\n'
nl|'\n'
comment|'# DBParameterGroup methods'
nl|'\n'
nl|'\n'
DECL|member|get_all_dbparameter_groups
dedent|''
name|'def'
name|'get_all_dbparameter_groups'
op|'('
name|'self'
op|','
name|'groupname'
op|'='
name|'None'
op|','
name|'max_records'
op|'='
name|'None'
op|','
nl|'\n'
name|'marker'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get all parameter groups associated with your account in a region.\n\n        :type groupname: str\n        :param groupname: The name of the DBParameter group to retrieve.\n                          If not provided, all DBParameter groups will be returned.\n\n        :type max_records: int\n        :param max_records: The maximum number of records to be returned.\n                            If more results are available, a MoreToken will\n                            be returned in the response that can be used to\n                            retrieve additional records.  Default is 100.\n\n        :type marker: str\n        :param marker: The marker provided by a previous request.\n\n        :rtype: list\n        :return: A list of :class:`boto.ec2.parametergroup.ParameterGroup`\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'groupname'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'DBParameterGroupName'"
op|']'
op|'='
name|'groupname'
newline|'\n'
dedent|''
name|'if'
name|'max_records'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'MaxRecords'"
op|']'
op|'='
name|'max_records'
newline|'\n'
dedent|''
name|'if'
name|'marker'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'Marker'"
op|']'
op|'='
name|'marker'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'get_list'
op|'('
string|"'DescribeDBParameterGroups'"
op|','
name|'params'
op|','
nl|'\n'
op|'['
op|'('
string|"'DBParameterGroup'"
op|','
name|'ParameterGroup'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_all_dbparameters
dedent|''
name|'def'
name|'get_all_dbparameters'
op|'('
name|'self'
op|','
name|'groupname'
op|','
name|'source'
op|'='
name|'None'
op|','
nl|'\n'
name|'max_records'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get all parameters associated with a ParameterGroup\n\n        :type groupname: str\n        :param groupname: The name of the DBParameter group to retrieve.\n\n        :type source: str\n        :param source: Specifies which parameters to return.\n                       If not specified, all parameters will be returned.\n                       Valid values are: user|system|engine-default\n\n        :type max_records: int\n        :param max_records: The maximum number of records to be returned.\n                            If more results are available, a MoreToken will\n                            be returned in the response that can be used to\n                            retrieve additional records.  Default is 100.\n\n        :type marker: str\n        :param marker: The marker provided by a previous request.\n\n        :rtype: :class:`boto.ec2.parametergroup.ParameterGroup`\n        :return: The ParameterGroup\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'DBParameterGroupName'"
op|':'
name|'groupname'
op|'}'
newline|'\n'
name|'if'
name|'source'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'Source'"
op|']'
op|'='
name|'source'
newline|'\n'
dedent|''
name|'if'
name|'max_records'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'MaxRecords'"
op|']'
op|'='
name|'max_records'
newline|'\n'
dedent|''
name|'if'
name|'marker'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'Marker'"
op|']'
op|'='
name|'marker'
newline|'\n'
dedent|''
name|'pg'
op|'='
name|'self'
op|'.'
name|'get_object'
op|'('
string|"'DescribeDBParameters'"
op|','
name|'params'
op|','
name|'ParameterGroup'
op|')'
newline|'\n'
name|'pg'
op|'.'
name|'name'
op|'='
name|'groupname'
newline|'\n'
name|'return'
name|'pg'
newline|'\n'
nl|'\n'
DECL|member|create_parameter_group
dedent|''
name|'def'
name|'create_parameter_group'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'engine'
op|'='
string|"'MySQL5.1'"
op|','
name|'description'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create a new dbparameter group for your account.\n\n        :type name: string\n        :param name: The name of the new dbparameter group\n\n        :type engine: str\n        :param engine: Name of database engine.  Must be MySQL5.1 for now.\n\n        :type description: string\n        :param description: The description of the new security group\n\n        :rtype: :class:`boto.rds.dbsecuritygroup.DBSecurityGroup`\n        :return: The newly created DBSecurityGroup\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'DBParameterGroupName'"
op|':'
name|'name'
op|','
nl|'\n'
string|"'Engine'"
op|':'
name|'engine'
op|','
nl|'\n'
string|"'Description'"
op|':'
name|'description'
op|'}'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'get_object'
op|'('
string|"'CreateDBParameterGroup'"
op|','
name|'params'
op|','
name|'ParameterGroup'
op|')'
newline|'\n'
nl|'\n'
DECL|member|modify_parameter_group
dedent|''
name|'def'
name|'modify_parameter_group'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'parameters'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Modify a parameter group for your account.\n\n        :type name: string\n        :param name: The name of the new parameter group\n\n        :type parameters: list of :class:`boto.rds.parametergroup.Parameter`\n        :param parameters: The new parameters\n\n        :rtype: :class:`boto.rds.parametergroup.ParameterGroup`\n        :return: The newly created ParameterGroup\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'DBParameterGroupName'"
op|':'
name|'name'
op|'}'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'parameters'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'parameter'
op|'='
name|'parameters'
op|'['
name|'i'
op|']'
newline|'\n'
name|'parameter'
op|'.'
name|'merge'
op|'('
name|'params'
op|','
name|'i'
op|'+'
number|'1'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'get_list'
op|'('
string|"'ModifyDBParameterGroup'"
op|','
name|'params'
op|','
name|'ParameterGroup'
op|')'
newline|'\n'
nl|'\n'
DECL|member|reset_parameter_group
dedent|''
name|'def'
name|'reset_parameter_group'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'reset_all_params'
op|'='
name|'False'
op|','
name|'parameters'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Resets some or all of the parameters of a ParameterGroup to the\n        default value\n\n        :type key_name: string\n        :param key_name: The name of the ParameterGroup to reset\n\n        :type parameters: list of :class:`boto.rds.parametergroup.Parameter`\n        :param parameters: The parameters to reset.  If not supplied, all parameters\n                           will be reset.\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'DBParameterGroupName'"
op|':'
name|'name'
op|'}'
newline|'\n'
name|'if'
name|'reset_all_params'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'ResetAllParameters'"
op|']'
op|'='
string|"'true'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'ResetAllParameters'"
op|']'
op|'='
string|"'false'"
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'parameters'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'parameter'
op|'='
name|'parameters'
op|'['
name|'i'
op|']'
newline|'\n'
name|'parameter'
op|'.'
name|'merge'
op|'('
name|'params'
op|','
name|'i'
op|'+'
number|'1'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'self'
op|'.'
name|'get_status'
op|'('
string|"'ResetDBParameterGroup'"
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_parameter_group
dedent|''
name|'def'
name|'delete_parameter_group'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Delete a DBSecurityGroup from your account.\n\n        :type key_name: string\n        :param key_name: The name of the DBSecurityGroup to delete\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'DBParameterGroupName'"
op|':'
name|'name'
op|'}'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'get_status'
op|'('
string|"'DeleteDBParameterGroup'"
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
comment|'# DBSecurityGroup methods'
nl|'\n'
nl|'\n'
DECL|member|get_all_dbsecurity_groups
dedent|''
name|'def'
name|'get_all_dbsecurity_groups'
op|'('
name|'self'
op|','
name|'groupname'
op|'='
name|'None'
op|','
name|'max_records'
op|'='
name|'None'
op|','
nl|'\n'
name|'marker'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get all security groups associated with your account in a region.\n\n        :type groupnames: list\n        :param groupnames: A list of the names of security groups to retrieve.\n                           If not provided, all security groups will be returned.\n\n        :type max_records: int\n        :param max_records: The maximum number of records to be returned.\n                            If more results are available, a MoreToken will\n                            be returned in the response that can be used to\n                            retrieve additional records.  Default is 100.\n\n        :type marker: str\n        :param marker: The marker provided by a previous request.\n\n        :rtype: list\n        :return: A list of :class:`boto.rds.dbsecuritygroup.DBSecurityGroup`\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'groupname'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'DBSecurityGroupName'"
op|']'
op|'='
name|'groupname'
newline|'\n'
dedent|''
name|'if'
name|'max_records'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'MaxRecords'"
op|']'
op|'='
name|'max_records'
newline|'\n'
dedent|''
name|'if'
name|'marker'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'Marker'"
op|']'
op|'='
name|'marker'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'get_list'
op|'('
string|"'DescribeDBSecurityGroups'"
op|','
name|'params'
op|','
nl|'\n'
op|'['
op|'('
string|"'DBSecurityGroup'"
op|','
name|'DBSecurityGroup'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_dbsecurity_group
dedent|''
name|'def'
name|'create_dbsecurity_group'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'description'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create a new security group for your account.\n        This will create the security group within the region you\n        are currently connected to.\n\n        :type name: string\n        :param name: The name of the new security group\n\n        :type description: string\n        :param description: The description of the new security group\n\n        :rtype: :class:`boto.rds.dbsecuritygroup.DBSecurityGroup`\n        :return: The newly created DBSecurityGroup\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'DBSecurityGroupName'"
op|':'
name|'name'
op|'}'
newline|'\n'
name|'if'
name|'description'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'DBSecurityGroupDescription'"
op|']'
op|'='
name|'description'
newline|'\n'
dedent|''
name|'group'
op|'='
name|'self'
op|'.'
name|'get_object'
op|'('
string|"'CreateDBSecurityGroup'"
op|','
name|'params'
op|','
name|'DBSecurityGroup'
op|')'
newline|'\n'
name|'group'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'group'
op|'.'
name|'description'
op|'='
name|'description'
newline|'\n'
name|'return'
name|'group'
newline|'\n'
nl|'\n'
DECL|member|delete_dbsecurity_group
dedent|''
name|'def'
name|'delete_dbsecurity_group'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Delete a DBSecurityGroup from your account.\n\n        :type key_name: string\n        :param key_name: The name of the DBSecurityGroup to delete\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'DBSecurityGroupName'"
op|':'
name|'name'
op|'}'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'get_status'
op|'('
string|"'DeleteDBSecurityGroup'"
op|','
name|'params'
op|')'
newline|'\n'
nl|'\n'
DECL|member|authorize_dbsecurity_group
dedent|''
name|'def'
name|'authorize_dbsecurity_group'
op|'('
name|'self'
op|','
name|'group_name'
op|','
name|'cidr_ip'
op|'='
name|'None'
op|','
nl|'\n'
name|'ec2_security_group_name'
op|'='
name|'None'
op|','
nl|'\n'
name|'ec2_security_group_owner_id'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Add a new rule to an existing security group.\n        You need to pass in either src_security_group_name and\n        src_security_group_owner_id OR a CIDR block but not both.\n\n        :type group_name: string\n        :param group_name: The name of the security group you are adding\n                           the rule to.\n\n        :type ec2_security_group_name: string\n        :param ec2_security_group_name: The name of the EC2 security group you are\n                                        granting access to.\n\n        :type ec2_security_group_owner_id: string\n        :param ec2_security_group_owner_id: The ID of the owner of the EC2 security\n                                            group you are granting access to.\n\n        :type cidr_ip: string\n        :param cidr_ip: The CIDR block you are providing access to.\n                        See http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\n\n        :rtype: bool\n        :return: True if successful.\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'DBSecurityGroupName'"
op|':'
name|'group_name'
op|'}'
newline|'\n'
name|'if'
name|'ec2_security_group_name'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'EC2SecurityGroupName'"
op|']'
op|'='
name|'ec2_security_group_name'
newline|'\n'
dedent|''
name|'if'
name|'ec2_security_group_owner_id'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'EC2SecurityGroupOwnerId'"
op|']'
op|'='
name|'ec2_security_group_owner_id'
newline|'\n'
dedent|''
name|'if'
name|'cidr_ip'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'CIDRIP'"
op|']'
op|'='
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'cidr_ip'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'get_object'
op|'('
string|"'AuthorizeDBSecurityGroupIngress'"
op|','
name|'params'
op|','
name|'DBSecurityGroup'
op|')'
newline|'\n'
nl|'\n'
DECL|member|revoke_security_group
dedent|''
name|'def'
name|'revoke_security_group'
op|'('
name|'self'
op|','
name|'group_name'
op|','
name|'ec2_security_group_name'
op|'='
name|'None'
op|','
nl|'\n'
name|'ec2_security_group_owner_id'
op|'='
name|'None'
op|','
name|'cidr_ip'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Remove an existing rule from an existing security group.\n        You need to pass in either ec2_security_group_name and\n        ec2_security_group_owner_id OR a CIDR block.\n\n        :type group_name: string\n        :param group_name: The name of the security group you are removing\n                           the rule from.\n\n        :type ec2_security_group_name: string\n        :param ec2_security_group_name: The name of the EC2 security group you are\n                                        granting access to.\n\n        :type ec2_security_group_owner_id: string\n        :param ec2_security_group_owner_id: The ID of the owner of the EC2 security\n                                            group you are granting access to.\n\n        :type cidr_ip: string\n        :param cidr_ip: The CIDR block you are providing access to.\n                        See http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\n\n        :rtype: bool\n        :return: True if successful.\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'DBSecurityGroupName'"
op|':'
name|'group_name'
op|'}'
newline|'\n'
name|'if'
name|'ec2_security_group_name'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'EC2SecurityGroupName'"
op|']'
op|'='
name|'ec2_security_group_name'
newline|'\n'
dedent|''
name|'if'
name|'ec2_security_group_owner_id'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'EC2SecurityGroupOwnerId'"
op|']'
op|'='
name|'ec2_security_group_owner_id'
newline|'\n'
dedent|''
name|'if'
name|'cidr_ip'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'CIDRIP'"
op|']'
op|'='
name|'cidr_ip'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'get_object'
op|'('
string|"'RevokeDBSecurityGroupIngress'"
op|','
name|'params'
op|','
name|'DBSecurityGroup'
op|')'
newline|'\n'
nl|'\n'
comment|'# DBSnapshot methods'
nl|'\n'
nl|'\n'
DECL|member|get_all_dbsnapshots
dedent|''
name|'def'
name|'get_all_dbsnapshots'
op|'('
name|'self'
op|','
name|'snapshot_id'
op|'='
name|'None'
op|','
name|'instance_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'max_records'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get information about DB Snapshots.\n\n        :type snapshot_id: str\n        :param snapshot_id: The unique identifier of an RDS snapshot.\n                            If not provided, all RDS snapshots will be returned.\n\n        :type instance_id: str\n        :param instance_id: The identifier of a DBInstance.  If provided,\n                            only the DBSnapshots related to that instance will\n                            be returned.\n                            If not provided, all RDS snapshots will be returned.\n\n        :type max_records: int\n        :param max_records: The maximum number of records to be returned.\n                            If more results are available, a MoreToken will\n                            be returned in the response that can be used to\n                            retrieve additional records.  Default is 100.\n\n        :type marker: str\n        :param marker: The marker provided by a previous request.\n\n        :rtype: list\n        :return: A list of :class:`boto.rds.dbsnapshot.DBSnapshot`\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'snapshot_id'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'DBSnapshotIdentifier'"
op|']'
op|'='
name|'snapshot_id'
newline|'\n'
dedent|''
name|'if'
name|'instance_id'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'DBInstanceIdentifier'"
op|']'
op|'='
name|'instance_id'
newline|'\n'
dedent|''
name|'if'
name|'max_records'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'MaxRecords'"
op|']'
op|'='
name|'max_records'
newline|'\n'
dedent|''
name|'if'
name|'marker'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'Marker'"
op|']'
op|'='
name|'marker'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'get_list'
op|'('
string|"'DescribeDBSnapshots'"
op|','
name|'params'
op|','
nl|'\n'
op|'['
op|'('
string|"'DBSnapshot'"
op|','
name|'DBSnapshot'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_dbsnapshot
dedent|''
name|'def'
name|'create_dbsnapshot'
op|'('
name|'self'
op|','
name|'snapshot_id'
op|','
name|'dbinstance_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create a new DB snapshot.\n\n        :type snapshot_id: string\n        :param snapshot_id: The identifier for the DBSnapshot\n\n        :type dbinstance_id: string\n        :param dbinstance_id: The source identifier for the RDS instance from\n                              which the snapshot is created.\n\n        :rtype: :class:`boto.rds.dbsnapshot.DBSnapshot`\n        :return: The newly created DBSnapshot\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'DBSnapshotIdentifier'"
op|':'
name|'snapshot_id'
op|','
nl|'\n'
string|"'DBInstanceIdentifier'"
op|':'
name|'dbinstance_id'
op|'}'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'get_object'
op|'('
string|"'CreateDBSnapshot'"
op|','
name|'params'
op|','
name|'DBSnapshot'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_dbsnapshot
dedent|''
name|'def'
name|'delete_dbsnapshot'
op|'('
name|'self'
op|','
name|'identifier'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Delete a DBSnapshot\n\n        :type identifier: string\n        :param identifier: The identifier of the DBSnapshot to delete\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'DBSnapshotIdentifier'"
op|':'
name|'identifier'
op|'}'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'get_object'
op|'('
string|"'DeleteDBSnapshot'"
op|','
name|'params'
op|','
name|'DBSnapshot'
op|')'
newline|'\n'
nl|'\n'
DECL|member|restore_dbinstance_from_dbsnapshot
dedent|''
name|'def'
name|'restore_dbinstance_from_dbsnapshot'
op|'('
name|'self'
op|','
name|'identifier'
op|','
name|'instance_id'
op|','
nl|'\n'
name|'instance_class'
op|','
name|'port'
op|'='
name|'None'
op|','
nl|'\n'
name|'availability_zone'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
string|'"""\n        Create a new DBInstance from a DB snapshot.\n\n        :type identifier: string\n        :param identifier: The identifier for the DBSnapshot\n\n        :type instance_id: string\n        :param instance_id: The source identifier for the RDS instance from\n                              which the snapshot is created.\n\n        :type instance_class: str\n        :param instance_class: The compute and memory capacity of the DBInstance.\n                               Valid values are:\n                               db.m1.small | db.m1.large | db.m1.xlarge |\n                               db.m2.2xlarge | db.m2.4xlarge\n\n        :type port: int\n        :param port: Port number on which database accepts connections.\n                     Valid values [1115-65535].  Defaults to 3306.\n\n        :type availability_zone: str\n        :param availability_zone: Name of the availability zone to place\n                                  DBInstance into.\n\n        :rtype: :class:`boto.rds.dbinstance.DBInstance`\n        :return: The newly created DBInstance\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'DBSnapshotIdentifier'"
op|':'
name|'identifier'
op|','
nl|'\n'
string|"'DBInstanceIdentifier'"
op|':'
name|'instance_id'
op|','
nl|'\n'
string|"'DBInstanceClass'"
op|':'
name|'instance_class'
op|'}'
newline|'\n'
name|'if'
name|'port'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'Port'"
op|']'
op|'='
name|'port'
newline|'\n'
dedent|''
name|'if'
name|'availability_zone'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'AvailabilityZone'"
op|']'
op|'='
name|'availability_zone'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'get_object'
op|'('
string|"'RestoreDBInstanceFromDBSnapshot'"
op|','
nl|'\n'
name|'params'
op|','
name|'DBInstance'
op|')'
newline|'\n'
nl|'\n'
DECL|member|restore_dbinstance_from_point_in_time
dedent|''
name|'def'
name|'restore_dbinstance_from_point_in_time'
op|'('
name|'self'
op|','
name|'source_instance_id'
op|','
nl|'\n'
name|'target_instance_id'
op|','
nl|'\n'
name|'use_latest'
op|'='
name|'False'
op|','
nl|'\n'
name|'restore_time'
op|'='
name|'None'
op|','
nl|'\n'
name|'dbinstance_class'
op|'='
name|'None'
op|','
nl|'\n'
name|'port'
op|'='
name|'None'
op|','
nl|'\n'
name|'availability_zone'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
string|'"""\n        Create a new DBInstance from a point in time.\n\n        :type source_instance_id: string\n        :param source_instance_id: The identifier for the source DBInstance.\n\n        :type target_instance_id: string\n        :param target_instance_id: The identifier of the new DBInstance.\n\n        :type use_latest: bool\n        :param use_latest: If True, the latest snapshot availabile will\n                           be used.\n\n        :type restore_time: datetime\n        :param restore_time: The date and time to restore from.  Only\n                             used if use_latest is False.\n\n        :type instance_class: str\n        :param instance_class: The compute and memory capacity of the DBInstance.\n                               Valid values are:\n                               db.m1.small | db.m1.large | db.m1.xlarge |\n                               db.m2.2xlarge | db.m2.4xlarge\n\n        :type port: int\n        :param port: Port number on which database accepts connections.\n                     Valid values [1115-65535].  Defaults to 3306.\n\n        :type availability_zone: str\n        :param availability_zone: Name of the availability zone to place\n                                  DBInstance into.\n\n        :rtype: :class:`boto.rds.dbinstance.DBInstance`\n        :return: The newly created DBInstance\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'SourceDBInstanceIdentifier'"
op|':'
name|'source_instance_id'
op|','
nl|'\n'
string|"'TargetDBInstanceIdentifier'"
op|':'
name|'target_instance_id'
op|'}'
newline|'\n'
name|'if'
name|'use_latest'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'UseLatestRestorableTime'"
op|']'
op|'='
string|"'true'"
newline|'\n'
dedent|''
name|'elif'
name|'restore_time'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'RestoreTime'"
op|']'
op|'='
name|'restore_time'
op|'.'
name|'isoformat'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'dbinstance_class'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'DBInstanceClass'"
op|']'
op|'='
name|'dbinstance_class'
newline|'\n'
dedent|''
name|'if'
name|'port'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'Port'"
op|']'
op|'='
name|'port'
newline|'\n'
dedent|''
name|'if'
name|'availability_zone'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'AvailabilityZone'"
op|']'
op|'='
name|'availability_zone'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'get_object'
op|'('
string|"'RestoreDBInstanceToPointInTime'"
op|','
nl|'\n'
name|'params'
op|','
name|'DBInstance'
op|')'
newline|'\n'
nl|'\n'
comment|'# Events'
nl|'\n'
nl|'\n'
DECL|member|get_all_events
dedent|''
name|'def'
name|'get_all_events'
op|'('
name|'self'
op|','
name|'source_identifier'
op|'='
name|'None'
op|','
name|'source_type'
op|'='
name|'None'
op|','
nl|'\n'
name|'start_time'
op|'='
name|'None'
op|','
name|'end_time'
op|'='
name|'None'
op|','
nl|'\n'
name|'max_records'
op|'='
name|'None'
op|','
name|'marker'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get information about events related to your DBInstances,\n        DBSecurityGroups and DBParameterGroups.\n\n        :type source_identifier: str\n        :param source_identifier: If supplied, the events returned will be\n                                  limited to those that apply to the identified\n                                  source.  The value of this parameter depends\n                                  on the value of source_type.  If neither\n                                  parameter is specified, all events in the time\n                                  span will be returned.\n\n        :type source_type: str\n        :param source_type: Specifies how the source_identifier should\n                            be interpreted.  Valid values are:\n                            b-instance | db-security-group |\n                            db-parameter-group | db-snapshot\n\n        :type start_time: datetime\n        :param start_time: The beginning of the time interval for events.\n                           If not supplied, all available events will\n                           be returned.\n\n        :type end_time: datetime\n        :param end_time: The ending of the time interval for events.\n                         If not supplied, all available events will\n                         be returned.\n\n        :type max_records: int\n        :param max_records: The maximum number of records to be returned.\n                            If more results are available, a MoreToken will\n                            be returned in the response that can be used to\n                            retrieve additional records.  Default is 100.\n\n        :type marker: str\n        :param marker: The marker provided by a previous request.\n\n        :rtype: list\n        :return: A list of class:`boto.rds.event.Event`\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'source_identifier'
name|'and'
name|'source_type'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'SourceIdentifier'"
op|']'
op|'='
name|'source_identifier'
newline|'\n'
name|'params'
op|'['
string|"'SourceType'"
op|']'
op|'='
name|'source_type'
newline|'\n'
dedent|''
name|'if'
name|'start_time'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'StartTime'"
op|']'
op|'='
name|'start_time'
op|'.'
name|'isoformat'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'end_time'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'EndTime'"
op|']'
op|'='
name|'end_time'
op|'.'
name|'isoformat'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'max_records'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'MaxRecords'"
op|']'
op|'='
name|'max_records'
newline|'\n'
dedent|''
name|'if'
name|'marker'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'Marker'"
op|']'
op|'='
name|'marker'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'get_list'
op|'('
string|"'DescribeEvents'"
op|','
name|'params'
op|','
op|'['
op|'('
string|"'Event'"
op|','
name|'Event'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
