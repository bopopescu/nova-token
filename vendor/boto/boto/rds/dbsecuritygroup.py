begin_unit
comment|'# Copyright (c) 2009 Mitch Garnaat http://garnaat.org/'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Permission is hereby granted, free of charge, to any person obtaining a'
nl|'\n'
comment|'# copy of this software and associated documentation files (the'
nl|'\n'
comment|'# "Software"), to deal in the Software without restriction, including'
nl|'\n'
comment|'# without limitation the rights to use, copy, modify, merge, publish, dis-'
nl|'\n'
comment|'# tribute, sublicense, and/or sell copies of the Software, and to permit'
nl|'\n'
comment|'# persons to whom the Software is furnished to do so, subject to the fol-'
nl|'\n'
comment|'# lowing conditions:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# The above copyright notice and this permission notice shall be included'
nl|'\n'
comment|'# in all copies or substantial portions of the Software.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS'
nl|'\n'
comment|'# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABIL-'
nl|'\n'
comment|'# ITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT'
nl|'\n'
comment|'# SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, '
nl|'\n'
comment|'# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,'
nl|'\n'
comment|'# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS'
nl|'\n'
comment|'# IN THE SOFTWARE.'
nl|'\n'
nl|'\n'
string|'"""\nRepresents an DBSecurityGroup\n"""'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'ec2'
op|'.'
name|'securitygroup'
name|'import'
name|'SecurityGroup'
newline|'\n'
nl|'\n'
DECL|class|DBSecurityGroup
name|'class'
name|'DBSecurityGroup'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'connection'
op|'='
name|'None'
op|','
name|'owner_id'
op|'='
name|'None'
op|','
nl|'\n'
name|'name'
op|'='
name|'None'
op|','
name|'description'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'connection'
op|'='
name|'connection'
newline|'\n'
name|'self'
op|'.'
name|'owner_id'
op|'='
name|'owner_id'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
name|'name'
newline|'\n'
name|'self'
op|'.'
name|'description'
op|'='
name|'description'
newline|'\n'
name|'self'
op|'.'
name|'ec2_groups'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'ip_ranges'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'DBSecurityGroup:%s'"
op|'%'
name|'self'
op|'.'
name|'name'
newline|'\n'
nl|'\n'
DECL|member|startElement
dedent|''
name|'def'
name|'startElement'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'attrs'
op|','
name|'connection'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'name'
op|'=='
string|"'IPRange'"
op|':'
newline|'\n'
indent|'            '
name|'cidr'
op|'='
name|'IPRange'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ip_ranges'
op|'.'
name|'append'
op|'('
name|'cidr'
op|')'
newline|'\n'
name|'return'
name|'cidr'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'EC2SecurityGroup'"
op|':'
newline|'\n'
indent|'            '
name|'ec2_grp'
op|'='
name|'EC2SecurityGroup'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ec2_groups'
op|'.'
name|'append'
op|'('
name|'ec2_grp'
op|')'
newline|'\n'
name|'return'
name|'ec2_grp'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|endElement
dedent|''
dedent|''
name|'def'
name|'endElement'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'value'
op|','
name|'connection'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'name'
op|'=='
string|"'OwnerId'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'owner_id'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'DBSecurityGroupName'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'name'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'DBSecurityGroupDescription'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'description'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'IPRanges'"
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'setattr'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete
dedent|''
dedent|''
name|'def'
name|'delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'delete_dbsecurity_group'
op|'('
name|'self'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|authorize
dedent|''
name|'def'
name|'authorize'
op|'('
name|'self'
op|','
name|'cidr_ip'
op|'='
name|'None'
op|','
name|'ec2_group'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Add a new rule to this DBSecurity group.\n        You need to pass in either a CIDR block to authorize or\n        and EC2 SecurityGroup.\n        \n        @type cidr_ip: string\n        @param cidr_ip: A valid CIDR IP range to authorize\n\n        @type ec2_group: :class:`boto.ec2.securitygroup.SecurityGroup>`\n                         \n        @rtype: bool\n        @return: True if successful.\n        """'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'ec2_group'
op|','
name|'SecurityGroup'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'group_name'
op|'='
name|'ec2_group'
op|'.'
name|'name'
newline|'\n'
name|'group_owner_id'
op|'='
name|'ec2_group'
op|'.'
name|'owner_id'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'group_name'
op|'='
name|'None'
newline|'\n'
name|'group_owner_id'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'authorize_dbsecurity_group'
op|'('
name|'self'
op|'.'
name|'name'
op|','
nl|'\n'
name|'cidr_ip'
op|','
nl|'\n'
name|'group_name'
op|','
nl|'\n'
name|'group_owner_id'
op|')'
newline|'\n'
nl|'\n'
DECL|member|revoke
dedent|''
name|'def'
name|'revoke'
op|'('
name|'self'
op|','
name|'cidr_ip'
op|'='
name|'None'
op|','
name|'ec2_group'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Revoke access to a CIDR range or EC2 SecurityGroup\n        You need to pass in either a CIDR block to authorize or\n        and EC2 SecurityGroup.\n        \n        @type cidr_ip: string\n        @param cidr_ip: A valid CIDR IP range to authorize\n\n        @type ec2_group: :class:`boto.ec2.securitygroup.SecurityGroup>`\n                         \n        @rtype: bool\n        @return: True if successful.\n        """'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'ec2_group'
op|','
name|'SecurityGroup'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'group_name'
op|'='
name|'ec2_group'
op|'.'
name|'name'
newline|'\n'
name|'group_owner_id'
op|'='
name|'ec2_group'
op|'.'
name|'owner_id'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'group_name'
op|'='
name|'None'
newline|'\n'
name|'group_owner_id'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'connection'
op|'.'
name|'revoke_dbsecurity_group'
op|'('
name|'self'
op|'.'
name|'name'
op|','
nl|'\n'
name|'cidr_ip'
op|','
nl|'\n'
name|'group_name'
op|','
nl|'\n'
name|'group_owner_id'
op|')'
newline|'\n'
nl|'\n'
DECL|class|IPRange
dedent|''
dedent|''
name|'class'
name|'IPRange'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'parent'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'parent'
op|'='
name|'parent'
newline|'\n'
name|'self'
op|'.'
name|'cidr_ip'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'status'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'IPRange:%s'"
op|'%'
name|'self'
op|'.'
name|'cidr_ip'
newline|'\n'
nl|'\n'
DECL|member|startElement
dedent|''
name|'def'
name|'startElement'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'attrs'
op|','
name|'connection'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|endElement
dedent|''
name|'def'
name|'endElement'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'value'
op|','
name|'connection'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'name'
op|'=='
string|"'CIDRIP'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'cidr_ip'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'Status'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'status'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'setattr'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|class|EC2SecurityGroup
dedent|''
dedent|''
dedent|''
name|'class'
name|'EC2SecurityGroup'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'parent'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'parent'
op|'='
name|'parent'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'owner_id'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'EC2SecurityGroup:%s'"
op|'%'
name|'self'
op|'.'
name|'name'
newline|'\n'
nl|'\n'
DECL|member|startElement
dedent|''
name|'def'
name|'startElement'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'attrs'
op|','
name|'connection'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|endElement
dedent|''
name|'def'
name|'endElement'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'value'
op|','
name|'connection'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'name'
op|'=='
string|"'EC2SecurityGroupName'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'name'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'EC2SecurityGroupOwnerId'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'owner_id'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'setattr'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
