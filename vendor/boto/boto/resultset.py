begin_unit
comment|'# Copyright (c) 2006,2007 Mitch Garnaat http://garnaat.org/'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Permission is hereby granted, free of charge, to any person obtaining a'
nl|'\n'
comment|'# copy of this software and associated documentation files (the'
nl|'\n'
comment|'# "Software"), to deal in the Software without restriction, including'
nl|'\n'
comment|'# without limitation the rights to use, copy, modify, merge, publish, dis-'
nl|'\n'
comment|'# tribute, sublicense, and/or sell copies of the Software, and to permit'
nl|'\n'
comment|'# persons to whom the Software is furnished to do so, subject to the fol-'
nl|'\n'
comment|'# lowing conditions:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# The above copyright notice and this permission notice shall be included'
nl|'\n'
comment|'# in all copies or substantial portions of the Software.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS'
nl|'\n'
comment|'# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABIL-'
nl|'\n'
comment|'# ITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT'
nl|'\n'
comment|'# SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,'
nl|'\n'
comment|'# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,'
nl|'\n'
comment|'# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS'
nl|'\n'
comment|'# IN THE SOFTWARE.'
nl|'\n'
nl|'\n'
DECL|class|ResultSet
name|'class'
name|'ResultSet'
op|'('
name|'list'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    The ResultSet is used to pass results back from the Amazon services\n    to the client.  It has an ugly but workable mechanism for parsing\n    the XML results from AWS.  Because I don\'t really want any dependencies\n    on external libraries, I\'m using the standard SAX parser that comes\n    with Python.  The good news is that it\'s quite fast and efficient but\n    it makes some things rather difficult.\n\n    You can pass in, as the marker_elem parameter, a list of tuples.\n    Each tuple contains a string as the first element which represents\n    the XML element that the resultset needs to be on the lookout for\n    and a Python class as the second element of the tuple.  Each time the\n    specified element is found in the XML, a new instance of the class\n    will be created and popped onto the stack.\n\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'marker_elem'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'list'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'marker_elem'
op|','
name|'list'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'markers'
op|'='
name|'marker_elem'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'markers'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'marker'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'key_marker'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'version_id_marker'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'is_truncated'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'next_token'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'status'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|startElement
dedent|''
name|'def'
name|'startElement'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'attrs'
op|','
name|'connection'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'t'
name|'in'
name|'self'
op|'.'
name|'markers'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'name'
op|'=='
name|'t'
op|'['
number|'0'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'obj'
op|'='
name|'t'
op|'['
number|'1'
op|']'
op|'('
name|'connection'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'append'
op|'('
name|'obj'
op|')'
newline|'\n'
name|'return'
name|'obj'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|to_boolean
dedent|''
name|'def'
name|'to_boolean'
op|'('
name|'self'
op|','
name|'value'
op|','
name|'true_value'
op|'='
string|"'true'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'value'
op|'=='
name|'true_value'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|member|endElement
dedent|''
dedent|''
name|'def'
name|'endElement'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'value'
op|','
name|'connection'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'name'
op|'=='
string|"'IsTruncated'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'is_truncated'
op|'='
name|'self'
op|'.'
name|'to_boolean'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'Marker'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'marker'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'KeyMarker'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'key_marker'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'VersionIdMarker'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'version_id_marker'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'Prefix'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'prefix'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'return'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'status'
op|'='
name|'self'
op|'.'
name|'to_boolean'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'StatusCode'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'status'
op|'='
name|'self'
op|'.'
name|'to_boolean'
op|'('
name|'value'
op|','
string|"'Success'"
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'ItemName'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'append'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'NextToken'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'next_token'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'BoxUsage'"
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'connection'
op|'.'
name|'box_usage'
op|'+='
name|'float'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'IsValid'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'status'
op|'='
name|'self'
op|'.'
name|'to_boolean'
op|'('
name|'value'
op|','
string|"'True'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'setattr'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|class|BooleanResult
dedent|''
dedent|''
dedent|''
name|'class'
name|'BooleanResult'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'marker_elem'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'status'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'request_id'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'box_usage'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'status'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'True'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'False'"
newline|'\n'
nl|'\n'
DECL|member|__nonzero__
dedent|''
dedent|''
name|'def'
name|'__nonzero__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'status'
newline|'\n'
nl|'\n'
DECL|member|startElement
dedent|''
name|'def'
name|'startElement'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'attrs'
op|','
name|'connection'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|to_boolean
dedent|''
name|'def'
name|'to_boolean'
op|'('
name|'self'
op|','
name|'value'
op|','
name|'true_value'
op|'='
string|"'true'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'value'
op|'=='
name|'true_value'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|member|endElement
dedent|''
dedent|''
name|'def'
name|'endElement'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'value'
op|','
name|'connection'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'name'
op|'=='
string|"'return'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'status'
op|'='
name|'self'
op|'.'
name|'to_boolean'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'StatusCode'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'status'
op|'='
name|'self'
op|'.'
name|'to_boolean'
op|'('
name|'value'
op|','
string|"'Success'"
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'IsValid'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'status'
op|'='
name|'self'
op|'.'
name|'to_boolean'
op|'('
name|'value'
op|','
string|"'True'"
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'RequestId'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'request_id'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'requestId'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'request_id'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'name'
op|'=='
string|"'BoxUsage'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'request_id'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'setattr'
op|'('
name|'self'
op|','
name|'name'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
