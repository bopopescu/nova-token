begin_unit
comment|'# Copyright (c) 2010 Mitch Garnaat http://garnaat.org/'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Permission is hereby granted, free of charge, to any person obtaining a'
nl|'\n'
comment|'# copy of this software and associated documentation files (the'
nl|'\n'
comment|'# "Software"), to deal in the Software without restriction, including'
nl|'\n'
comment|'# without limitation the rights to use, copy, modify, merge, publish, dis-'
nl|'\n'
comment|'# tribute, sublicense, and/or sell copies of the Software, and to permit'
nl|'\n'
comment|'# persons to whom the Software is furnished to do so, subject to the fol-'
nl|'\n'
comment|'# lowing conditions:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# The above copyright notice and this permission notice shall be included'
nl|'\n'
comment|'# in all copies or substantial portions of the Software.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS'
nl|'\n'
comment|'# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABIL-'
nl|'\n'
comment|'# ITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT'
nl|'\n'
comment|'# SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, '
nl|'\n'
comment|'# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,'
nl|'\n'
comment|'# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS'
nl|'\n'
comment|'# IN THE SOFTWARE.'
nl|'\n'
nl|'\n'
name|'from'
name|'boto'
op|'.'
name|'connection'
name|'import'
name|'AWSQueryConnection'
newline|'\n'
name|'from'
name|'boto'
op|'.'
name|'sdb'
op|'.'
name|'regioninfo'
name|'import'
name|'SDBRegionInfo'
newline|'\n'
name|'import'
name|'boto'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'json'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'simplejson'
name|'as'
name|'json'
newline|'\n'
nl|'\n'
comment|"#boto.set_stream_logger('sns')"
nl|'\n'
nl|'\n'
DECL|class|SNSConnection
dedent|''
name|'class'
name|'SNSConnection'
op|'('
name|'AWSQueryConnection'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|DefaultRegionName
indent|'    '
name|'DefaultRegionName'
op|'='
string|"'us-east-1'"
newline|'\n'
DECL|variable|DefaultRegionEndpoint
name|'DefaultRegionEndpoint'
op|'='
string|"'sns.us-east-1.amazonaws.com'"
newline|'\n'
DECL|variable|APIVersion
name|'APIVersion'
op|'='
string|"'2010-03-31'"
newline|'\n'
DECL|variable|SignatureVersion
name|'SignatureVersion'
op|'='
string|"'2'"
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'aws_access_key_id'
op|'='
name|'None'
op|','
name|'aws_secret_access_key'
op|'='
name|'None'
op|','
nl|'\n'
name|'is_secure'
op|'='
name|'True'
op|','
name|'port'
op|'='
name|'None'
op|','
name|'proxy'
op|'='
name|'None'
op|','
name|'proxy_port'
op|'='
name|'None'
op|','
nl|'\n'
name|'proxy_user'
op|'='
name|'None'
op|','
name|'proxy_pass'
op|'='
name|'None'
op|','
name|'debug'
op|'='
number|'0'
op|','
nl|'\n'
name|'https_connection_factory'
op|'='
name|'None'
op|','
name|'region'
op|'='
name|'None'
op|','
name|'path'
op|'='
string|"'/'"
op|','
name|'converter'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'region'
op|':'
newline|'\n'
indent|'            '
name|'region'
op|'='
name|'SDBRegionInfo'
op|'('
name|'self'
op|','
name|'self'
op|'.'
name|'DefaultRegionName'
op|','
name|'self'
op|'.'
name|'DefaultRegionEndpoint'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'region'
op|'='
name|'region'
newline|'\n'
name|'AWSQueryConnection'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'aws_access_key_id'
op|','
name|'aws_secret_access_key'
op|','
nl|'\n'
name|'is_secure'
op|','
name|'port'
op|','
name|'proxy'
op|','
name|'proxy_port'
op|','
name|'proxy_user'
op|','
name|'proxy_pass'
op|','
nl|'\n'
name|'self'
op|'.'
name|'region'
op|'.'
name|'endpoint'
op|','
name|'debug'
op|','
name|'https_connection_factory'
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_all_topics
dedent|''
name|'def'
name|'get_all_topics'
op|'('
name|'self'
op|','
name|'next_token'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        :type next_token: string\n        :param next_token: Token returned by the previous call to\n                           this method.\n\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'ContentType'"
op|':'
string|"'JSON'"
op|'}'
newline|'\n'
name|'if'
name|'next_token'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'NextToken'"
op|']'
op|'='
name|'next_token'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
string|"'ListTopics'"
op|','
name|'params'
op|','
string|"'/'"
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'json'
op|'.'
name|'loads'
op|'('
name|'body'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s %s'"
op|'%'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|')'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s'"
op|'%'
name|'body'
op|')'
newline|'\n'
name|'raise'
name|'self'
op|'.'
name|'ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_topic_attributes
dedent|''
dedent|''
name|'def'
name|'get_topic_attributes'
op|'('
name|'self'
op|','
name|'topic'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get attributes of a Topic\n\n        :type topic: string\n        :param topic: The ARN of the topic.\n\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'ContentType'"
op|':'
string|"'JSON'"
op|','
nl|'\n'
string|"'TopicArn'"
op|':'
name|'topic'
op|'}'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
string|"'GetTopicAttributes'"
op|','
name|'params'
op|','
string|"'/'"
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'json'
op|'.'
name|'loads'
op|'('
name|'body'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s %s'"
op|'%'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|')'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s'"
op|'%'
name|'body'
op|')'
newline|'\n'
name|'raise'
name|'self'
op|'.'
name|'ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|add_permission
dedent|''
dedent|''
name|'def'
name|'add_permission'
op|'('
name|'self'
op|','
name|'topic'
op|','
name|'label'
op|','
name|'account_ids'
op|','
name|'actions'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Adds a statement to a topic\'s access control policy, granting\n        access for the specified AWS accounts to the specified actions.\n\n        :type topic: string\n        :param topic: The ARN of the topic.\n\n        :type label: string\n        :param label: A unique identifier for the new policy statement.\n\n        :type account_ids: list of strings\n        :param account_ids: The AWS account ids of the users who will be\n                            give access to the specified actions.\n\n        :type actions: list of strings\n        :param actions: The actions you want to allow for each of the\n                        specified principal(s).\n\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'ContentType'"
op|':'
string|"'JSON'"
op|','
nl|'\n'
string|"'TopicArn'"
op|':'
name|'topic'
op|','
nl|'\n'
string|"'Label'"
op|':'
name|'label'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'build_list_params'
op|'('
name|'params'
op|','
name|'account_ids'
op|','
string|"'AWSAccountId'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'build_list_params'
op|'('
name|'params'
op|','
name|'actions'
op|','
string|"'ActionName'"
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
string|"'AddPermission'"
op|','
name|'params'
op|','
string|"'/'"
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'json'
op|'.'
name|'loads'
op|'('
name|'body'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s %s'"
op|'%'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|')'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s'"
op|'%'
name|'body'
op|')'
newline|'\n'
name|'raise'
name|'self'
op|'.'
name|'ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|remove_permission
dedent|''
dedent|''
name|'def'
name|'remove_permission'
op|'('
name|'self'
op|','
name|'topic'
op|','
name|'label'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Removes a statement from a topic\'s access control policy.\n\n        :type topic: string\n        :param topic: The ARN of the topic.\n\n        :type label: string\n        :param label: A unique identifier for the policy statement\n                      to be removed.\n\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'ContentType'"
op|':'
string|"'JSON'"
op|','
nl|'\n'
string|"'TopicArn'"
op|':'
name|'topic'
op|','
nl|'\n'
string|"'Label'"
op|':'
name|'label'
op|'}'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
string|"'RemovePermission'"
op|','
name|'params'
op|','
string|"'/'"
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'json'
op|'.'
name|'loads'
op|'('
name|'body'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s %s'"
op|'%'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|')'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s'"
op|'%'
name|'body'
op|')'
newline|'\n'
name|'raise'
name|'self'
op|'.'
name|'ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create_topic
dedent|''
dedent|''
name|'def'
name|'create_topic'
op|'('
name|'self'
op|','
name|'topic'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create a new Topic.\n\n        :type topic: string\n        :param topic: The name of the new topic.\n\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'ContentType'"
op|':'
string|"'JSON'"
op|','
nl|'\n'
string|"'Name'"
op|':'
name|'topic'
op|'}'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
string|"'CreateTopic'"
op|','
name|'params'
op|','
string|"'/'"
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'json'
op|'.'
name|'loads'
op|'('
name|'body'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s %s'"
op|'%'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|')'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s'"
op|'%'
name|'body'
op|')'
newline|'\n'
name|'raise'
name|'self'
op|'.'
name|'ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_topic
dedent|''
dedent|''
name|'def'
name|'delete_topic'
op|'('
name|'self'
op|','
name|'topic'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Delete an existing topic\n\n        :type topic: string\n        :param topic: The ARN of the topic\n\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'ContentType'"
op|':'
string|"'JSON'"
op|','
nl|'\n'
string|"'TopicArn'"
op|':'
name|'topic'
op|'}'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
string|"'DeleteTopic'"
op|','
name|'params'
op|','
string|"'/'"
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'json'
op|'.'
name|'loads'
op|'('
name|'body'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s %s'"
op|'%'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|')'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s'"
op|'%'
name|'body'
op|')'
newline|'\n'
name|'raise'
name|'self'
op|'.'
name|'ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|member|publish
dedent|''
dedent|''
name|'def'
name|'publish'
op|'('
name|'self'
op|','
name|'topic'
op|','
name|'message'
op|','
name|'subject'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get properties of a Topic\n\n        :type topic: string\n        :param topic: The ARN of the new topic.\n\n        :type message: string\n        :param message: The message you want to send to the topic.\n                        Messages must be UTF-8 encoded strings and\n                        be at most 4KB in size.\n\n        :type subject: string\n        :param subject: Optional parameter to be used as the "Subject"\n                        line of the email notifications.\n\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'ContentType'"
op|':'
string|"'JSON'"
op|','
nl|'\n'
string|"'TopicArn'"
op|':'
name|'topic'
op|','
nl|'\n'
string|"'Message'"
op|':'
name|'message'
op|'}'
newline|'\n'
name|'if'
name|'subject'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'Subject'"
op|']'
op|'='
name|'subject'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
string|"'Publish'"
op|','
name|'params'
op|','
string|"'/'"
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'json'
op|'.'
name|'loads'
op|'('
name|'body'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s %s'"
op|'%'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|')'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s'"
op|'%'
name|'body'
op|')'
newline|'\n'
name|'raise'
name|'self'
op|'.'
name|'ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|subscribe
dedent|''
dedent|''
name|'def'
name|'subscribe'
op|'('
name|'self'
op|','
name|'topic'
op|','
name|'protocol'
op|','
name|'endpoint'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Subscribe to a Topic.\n\n        :type topic: string\n        :param topic: The name of the new topic.\n\n        :type protocol: string\n        :param protocol: The protocol used to communicate with\n                         the subscriber.  Current choices are:\n                         email|email-json|http|https|sqs\n\n        :type endpoint: string\n        :param endpoint: The location of the endpoint for\n                         the subscriber.\n                         * For email, this would be a valid email address\n                         * For email-json, this would be a valid email address\n                         * For http, this would be a URL beginning with http\n                         * For https, this would be a URL beginning with https\n                         * For sqs, this would be the ARN of an SQS Queue\n\n        :rtype: :class:`boto.sdb.domain.Domain` object\n        :return: The newly created domain\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'ContentType'"
op|':'
string|"'JSON'"
op|','
nl|'\n'
string|"'TopicArn'"
op|':'
name|'topic'
op|','
nl|'\n'
string|"'Protocol'"
op|':'
name|'protocol'
op|','
nl|'\n'
string|"'Endpoint'"
op|':'
name|'endpoint'
op|'}'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
string|"'Subscribe'"
op|','
name|'params'
op|','
string|"'/'"
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'json'
op|'.'
name|'loads'
op|'('
name|'body'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s %s'"
op|'%'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|')'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s'"
op|'%'
name|'body'
op|')'
newline|'\n'
name|'raise'
name|'self'
op|'.'
name|'ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|confirm_subscription
dedent|''
dedent|''
name|'def'
name|'confirm_subscription'
op|'('
name|'self'
op|','
name|'topic'
op|','
name|'token'
op|','
nl|'\n'
name|'authenticate_on_unsubscribe'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get properties of a Topic\n\n        :type topic: string\n        :param topic: The ARN of the new topic.\n\n        :type token: string\n        :param token: Short-lived token sent to and endpoint during\n                      the Subscribe operation.\n\n        :type authenticate_on_unsubscribe: bool\n        :param authenticate_on_unsubscribe: Optional parameter indicating\n                                            that you wish to disable\n                                            unauthenticated unsubscription\n                                            of the subscription.\n\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'ContentType'"
op|':'
string|"'JSON'"
op|','
nl|'\n'
string|"'TopicArn'"
op|':'
name|'topic'
op|','
nl|'\n'
string|"'Token'"
op|':'
name|'token'
op|'}'
newline|'\n'
name|'if'
name|'authenticate_on_unsubscribe'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'AuthenticateOnUnsubscribe'"
op|']'
op|'='
string|"'true'"
newline|'\n'
dedent|''
name|'response'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
string|"'ConfirmSubscription'"
op|','
name|'params'
op|','
string|"'/'"
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'json'
op|'.'
name|'loads'
op|'('
name|'body'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s %s'"
op|'%'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|')'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s'"
op|'%'
name|'body'
op|')'
newline|'\n'
name|'raise'
name|'self'
op|'.'
name|'ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|unsubscribe
dedent|''
dedent|''
name|'def'
name|'unsubscribe'
op|'('
name|'self'
op|','
name|'subscription'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Allows endpoint owner to delete subscription.\n        Confirmation message will be delivered.\n\n        :type subscription: string\n        :param subscription: The ARN of the subscription to be deleted.\n\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'ContentType'"
op|':'
string|"'JSON'"
op|','
nl|'\n'
string|"'SubscriptionArn'"
op|':'
name|'subscription'
op|'}'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
string|"'Unsubscribe'"
op|','
name|'params'
op|','
string|"'/'"
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'json'
op|'.'
name|'loads'
op|'('
name|'body'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s %s'"
op|'%'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|')'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s'"
op|'%'
name|'body'
op|')'
newline|'\n'
name|'raise'
name|'self'
op|'.'
name|'ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_all_subscriptions
dedent|''
dedent|''
name|'def'
name|'get_all_subscriptions'
op|'('
name|'self'
op|','
name|'next_token'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get list of all subscriptions.\n\n        :type next_token: string\n        :param next_token: Token returned by the previous call to\n                           this method.\n\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'ContentType'"
op|':'
string|"'JSON'"
op|'}'
newline|'\n'
name|'if'
name|'next_token'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'NextToken'"
op|']'
op|'='
name|'next_token'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
string|"'ListSubscriptions'"
op|','
name|'params'
op|','
string|"'/'"
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'json'
op|'.'
name|'loads'
op|'('
name|'body'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s %s'"
op|'%'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|')'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s'"
op|'%'
name|'body'
op|')'
newline|'\n'
name|'raise'
name|'self'
op|'.'
name|'ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_all_subscriptions_by_topic
dedent|''
dedent|''
name|'def'
name|'get_all_subscriptions_by_topic'
op|'('
name|'self'
op|','
name|'topic'
op|','
name|'next_token'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get list of all subscriptions to a specific topic.\n\n        :type topic: string\n        :param topic: The ARN of the topic for which you wish to\n                      find subscriptions.\n\n        :type next_token: string\n        :param next_token: Token returned by the previous call to\n                           this method.\n\n        """'
newline|'\n'
name|'params'
op|'='
op|'{'
string|"'ContentType'"
op|':'
string|"'JSON'"
op|','
nl|'\n'
string|"'TopicArn'"
op|':'
name|'topic'
op|'}'
newline|'\n'
name|'if'
name|'next_token'
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'NextToken'"
op|']'
op|'='
name|'next_token'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
string|"'ListSubscriptions'"
op|','
name|'params'
op|','
string|"'/'"
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'body'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'json'
op|'.'
name|'loads'
op|'('
name|'body'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s %s'"
op|'%'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|')'
op|')'
newline|'\n'
name|'boto'
op|'.'
name|'log'
op|'.'
name|'error'
op|'('
string|"'%s'"
op|'%'
name|'body'
op|')'
newline|'\n'
name|'raise'
name|'self'
op|'.'
name|'ResponseError'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'response'
op|'.'
name|'reason'
op|','
name|'body'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
