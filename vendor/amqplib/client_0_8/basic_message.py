begin_unit
string|'"""\nMessages for AMQP\n\n"""'
newline|'\n'
comment|'# Copyright (C) 2007-2008 Barry Pederson <bp@barryp.org>'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# This library is free software; you can redistribute it and/or'
nl|'\n'
comment|'# modify it under the terms of the GNU Lesser General Public'
nl|'\n'
comment|'# License as published by the Free Software Foundation; either'
nl|'\n'
comment|'# version 2.1 of the License, or (at your option) any later version.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# This library is distributed in the hope that it will be useful,'
nl|'\n'
comment|'# but WITHOUT ANY WARRANTY; without even the implied warranty of'
nl|'\n'
comment|'# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU'
nl|'\n'
comment|'# Lesser General Public License for more details.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# You should have received a copy of the GNU Lesser General Public'
nl|'\n'
comment|'# License along with this library; if not, write to the Free Software'
nl|'\n'
comment|'# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301'
nl|'\n'
nl|'\n'
nl|'\n'
name|'from'
name|'serialization'
name|'import'
name|'GenericContent'
newline|'\n'
nl|'\n'
DECL|variable|__all__
name|'__all__'
op|'='
op|'['
nl|'\n'
string|"'Message'"
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Message
name|'class'
name|'Message'
op|'('
name|'GenericContent'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A Message for use with the Channnel.basic_* methods.\n\n    """'
newline|'\n'
comment|'#'
nl|'\n'
comment|'# Instances of this class have these attributes, which'
nl|'\n'
comment|'# are passed back and forth as message properties between'
nl|'\n'
comment|'# client and server'
nl|'\n'
comment|'#'
nl|'\n'
DECL|variable|PROPERTIES
name|'PROPERTIES'
op|'='
op|'['
nl|'\n'
op|'('
string|"'content_type'"
op|','
string|"'shortstr'"
op|')'
op|','
nl|'\n'
op|'('
string|"'content_encoding'"
op|','
string|"'shortstr'"
op|')'
op|','
nl|'\n'
op|'('
string|"'application_headers'"
op|','
string|"'table'"
op|')'
op|','
nl|'\n'
op|'('
string|"'delivery_mode'"
op|','
string|"'octet'"
op|')'
op|','
nl|'\n'
op|'('
string|"'priority'"
op|','
string|"'octet'"
op|')'
op|','
nl|'\n'
op|'('
string|"'correlation_id'"
op|','
string|"'shortstr'"
op|')'
op|','
nl|'\n'
op|'('
string|"'reply_to'"
op|','
string|"'shortstr'"
op|')'
op|','
nl|'\n'
op|'('
string|"'expiration'"
op|','
string|"'shortstr'"
op|')'
op|','
nl|'\n'
op|'('
string|"'message_id'"
op|','
string|"'shortstr'"
op|')'
op|','
nl|'\n'
op|'('
string|"'timestamp'"
op|','
string|"'timestamp'"
op|')'
op|','
nl|'\n'
op|'('
string|"'type'"
op|','
string|"'shortstr'"
op|')'
op|','
nl|'\n'
op|'('
string|"'user_id'"
op|','
string|"'shortstr'"
op|')'
op|','
nl|'\n'
op|'('
string|"'app_id'"
op|','
string|"'shortstr'"
op|')'
op|','
nl|'\n'
op|'('
string|"'cluster_id'"
op|','
string|"'shortstr'"
op|')'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'body'
op|'='
string|"''"
op|','
name|'children'
op|'='
name|'None'
op|','
op|'**'
name|'properties'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Expected arg types\n\n            body: string\n            children: (not supported)\n\n        Keyword properties may include:\n\n            content_type: shortstr\n                MIME content type\n\n            content_encoding: shortstr\n                MIME content encoding\n\n            application_headers: table\n                Message header field table, a dict with string keys,\n                and string | int | Decimal | datetime | dict values.\n\n            delivery_mode: octet\n                Non-persistent (1) or persistent (2)\n\n            priority: octet\n                The message priority, 0 to 9\n\n            correlation_id: shortstr\n                The application correlation identifier\n\n            reply_to: shortstr\n                The destination to reply to\n\n            expiration: shortstr\n                Message expiration specification\n\n            message_id: shortstr\n                The application message identifier\n\n            timestamp: datetime.datetime\n                The message timestamp\n\n            type: shortstr\n                The message type name\n\n            user_id: shortstr\n                The creating user id\n\n            app_id: shortstr\n                The creating application id\n\n            cluster_id: shortstr\n                Intra-cluster routing identifier\n\n        Unicode bodies are encoded according to the \'content_encoding\'\n        argument. If that\'s None, it\'s set to \'UTF-8\' automatically.\n\n        example:\n\n            msg = Message(\'hello world\',\n                            content_type=\'text/plain\',\n                            application_headers={\'foo\': 7})\n\n        """'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'body'
op|','
name|'unicode'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'properties'
op|'.'
name|'get'
op|'('
string|"'content_encoding'"
op|','
name|'None'
op|')'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'properties'
op|'['
string|"'content_encoding'"
op|']'
op|'='
string|"'UTF-8'"
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'body'
op|'='
name|'body'
op|'.'
name|'encode'
op|'('
name|'properties'
op|'['
string|"'content_encoding'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'body'
op|'='
name|'body'
newline|'\n'
nl|'\n'
dedent|''
name|'super'
op|'('
name|'Message'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'**'
name|'properties'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|__eq__
dedent|''
name|'def'
name|'__eq__'
op|'('
name|'self'
op|','
name|'other'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Check if the properties and bodies of this Message and another\n        Message are the same.\n\n        Received messages may contain a \'delivery_info\' attribute,\n        which isn\'t compared.\n\n        """'
newline|'\n'
name|'return'
name|'super'
op|'('
name|'Message'
op|','
name|'self'
op|')'
op|'.'
name|'__eq__'
op|'('
name|'other'
op|')'
name|'and'
op|'('
name|'self'
op|'.'
name|'body'
op|'=='
name|'other'
op|'.'
name|'body'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
